{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved net inet do not leave a dangling sk pointer in inet_create() sock_init_data() attaches the allocated sk object to the provided sock object. If inet_create() fails later, the sk object is freed, but the sock object retains the dangling pointer, which may create use-after-free later. Clear the sk pointer in the sock object on error.",
  "keyphrases": {
    "rootcause": [
      "use-after-free"
    ]
  },
  "timestamp": "2025-07-13 23:51:24",
  "cve_id": "CVE-2024-56601",
  "result_count": 11,
  "results": [
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "score": 1000.0,
      "search_source": "alternate_term_match"
    },
    {
      "cwe_id": "415",
      "name": "Double Free",
      "score": 429.704413611338,
      "search_source": "rootcause:use-after-free"
    },
    {
      "cwe_id": "911",
      "name": "Improper Update of Reference Count",
      "score": 397.7486005143295,
      "search_source": "rootcause:use-after-free"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 389.02251519372044,
      "search_source": "rootcause:use-after-free"
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "score": 384.144423030384,
      "search_source": "rootcause:use-after-free"
    },
    {
      "cwe_id": "825",
      "name": "Expired Pointer Dereference",
      "score": 349.21784404359886,
      "search_source": "rootcause:use-after-free"
    },
    {
      "cwe_id": "823",
      "name": "Use of Out-of-range Pointer Offset",
      "score": 342.5014167124514,
      "search_source": "rootcause:use-after-free"
    },
    {
      "cwe_id": "121",
      "name": "Stack-based Buffer Overflow",
      "score": 334.0206828209984,
      "search_source": "rootcause:use-after-free"
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "score": 333.4023651610562,
      "search_source": "rootcause:use-after-free"
    },
    {
      "cwe_id": "665",
      "name": "Improper Initialization",
      "score": 329.05368883684474,
      "search_source": "rootcause:use-after-free"
    },
    {
      "cwe_id": "457",
      "name": "Use of Uninitialized Variable",
      "score": 104.38393087533821,
      "search_source": "base_query"
    }
  ]
}