{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved padata fix UAF in padata_reorder A bug was found when run ltp test BUG KASAN slab-use-after-free in padata_find_next+0x29/0x1a0 Read of size 4 at addr ffff88bbfe003524 by task kworker/u1132/3039206 CPU 0 PID 3039206 Comm kworker/u1132 Kdump loaded Not tainted 6.6.0+ Workqueue pdecrypt_parallel padata_parallel_worker Call Trace dump_stack_lvl+0x32/0x50 print_address_description.constprop.0+0x6b/0x3d0 print_report+0xdd/0x2c0 kasan_report+0xa5/0xd0 padata_find_next+0x29/0x1a0 padata_reorder+0x131/0x220 padata_parallel_worker+0x3d/0xc0 process_one_work+0x2ec/0x5a0 If mdelay(10) is added before calling padata_find_next in the padata_reorder function, this issue could be reproduced easily with ltp test (pcrypt_aead01). This can be explained as bellow pcrypt_aead_encrypt ... padata_do_parallel refcount_inc(&pd->refcnt) // add refcnt ... padata_do_serial padata_reorder // pd while (1) { padata_find_next(pd, true) // using pd queue_work_on ... padata_serial_worker crypto_del_alg padata_put_pd_cnt // sub refcnt padata_free_shell padata_put_pd(ps->pd) // pd is freed // loop again, but pd is freed // call padata_find_next, UAF } In the padata_reorder function, when it loops in while, if the alg is deleted, the refcnt may be decreased to 0 before entering padata_find_next, which leads to UAF. As mentioned in [1], do_serial is supposed to be called with BHs disabled and always happen under RCU protection, to address this issue, add synchronize_rcu() in padata_free_shell wait for all _do_serial calls to finish. [1] https//lore.kernel.org/all/20221028160401.cccypv4euxikusiq@parnassus.localdomain/ [2] https//lore.kernel.org/linux-kernel/jfjz5d7zwbytztackem7ibzalm5lnxldi2eofeiczqmqs2m7o6@fq426cwnjtkm/",
  "keyphrases": {
    "rootcause": [
      "use-after-free"
    ],
    "weakness": [
      "UAF"
    ]
  },
  "timestamp": "2025-07-14 09:46:14",
  "cve_id": "CVE-2025-21727",
  "result_count": 12,
  "results": [
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "score": 1000.0,
      "search_source": "alternate_term_match"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 796.4295204198229,
      "search_source": "rootcause:use-after-free"
    },
    {
      "cwe_id": "415",
      "name": "Double Free",
      "score": 768.2046655374681,
      "search_source": "rootcause:use-after-free"
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "score": 765.0981372746493,
      "search_source": "rootcause:use-after-free"
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "score": 754.5002849267914,
      "search_source": "rootcause:use-after-free"
    },
    {
      "cwe_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "score": 751.4976463964697,
      "search_source": "rootcause:use-after-free"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "score": 739.6396471289526,
      "search_source": "rootcause:use-after-free"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 710.7724658205841,
      "search_source": "rootcause:use-after-free"
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "score": 703.9619496190879,
      "search_source": "rootcause:use-after-free"
    },
    {
      "cwe_id": "122",
      "name": "Heap-based Buffer Overflow",
      "score": 698.6297847717613,
      "search_source": "rootcause:use-after-free"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 694.6848997435926,
      "search_source": "rootcause:use-after-free"
    },
    {
      "cwe_id": "674",
      "name": "Uncontrolled Recursion",
      "score": 640.8355572186111,
      "search_source": "weakness:UAF"
    }
  ]
}