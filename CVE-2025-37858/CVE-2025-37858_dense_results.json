{
  "query": "In the Linux kernel, the following vulnerability has been resolved fs/jfs Prevent integer overflow in AG size calculation The JFS filesystem calculates allocation group (AG) size using 1 2TB aggregates on 32-bit systems), this 32-bit shift operation causes undefined behavior and improper AG sizing. On 32-bit architectures - Left-shifting 1 by 32+ bits results in 0 due to integer overflow - This creates invalid AG sizes (0 or garbage values) in sbi->bmap->db_agsize - Subsequent block allocations would reference invalid AG structures - Could lead to - Filesystem corruption during extend operations - Kernel crashes due to invalid memory accesses - Security vulnerabilities via malformed on-disk structures Fix by casting to s64 before shifting bmp->db_agsize = (s64)1 << l2agsize This ensures 64-bit arithmetic even on 32-bit architectures. The cast matches the data type of db_agsize (s64) and follows similar patterns in JFS block calculation code. Found by Linux Verification Center (linuxtesting.org) with SVACE.",
  "count": 20,
  "results": [
    {
      "cwe_id": "1335",
      "name": "Incorrect Bitwise Shift of Integer",
      "abstraction": "Base",
      "score": 0.5521217076700424,
      "original_score": 0.5521217076700424,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 0.5340789554048977,
      "original_score": 0.5340789554048977,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "abstraction": "Base",
      "score": 0.5184970233410257,
      "original_score": 0.5184970233410257,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "823",
      "name": "Use of Out-of-range Pointer Offset",
      "abstraction": "Base",
      "score": 0.49740962792698695,
      "original_score": 0.49740962792698695,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "122",
      "name": "Heap-based Buffer Overflow",
      "abstraction": "Variant",
      "score": 0.49534657023159834,
      "original_score": 0.49534657023159834,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "abstraction": "Base",
      "score": 0.4926973354535037,
      "original_score": 0.4926973354535037,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "131",
      "name": "Incorrect Calculation of Buffer Size",
      "abstraction": "Base",
      "score": 0.4895586323605744,
      "original_score": 0.4895586323605744,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "680",
      "name": "Integer Overflow to Buffer Overflow",
      "abstraction": "Compound",
      "score": 0.48876281156586554,
      "original_score": 0.48876281156586554,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "abstraction": "Variant",
      "score": 0.48392342253156523,
      "original_score": 0.48392342253156523,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1260",
      "name": "Improper Handling of Overlap Between Protected Memory Ranges",
      "abstraction": "Base",
      "score": 0.47803053817849833,
      "original_score": 0.47803053817849833,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "126",
      "name": "Buffer Over-read",
      "abstraction": "Variant",
      "score": 0.4777206724186658,
      "original_score": 0.4777206724186658,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "abstraction": "Base",
      "score": 0.46406011757301696,
      "original_score": 0.46406011757301696,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "805",
      "name": "Buffer Access with Incorrect Length Value",
      "abstraction": "Base",
      "score": 0.4588954436793205,
      "original_score": 0.4588954436793205,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 0.45735788985552656,
      "original_score": 0.45735788985552656,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "119",
      "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
      "abstraction": "Class",
      "score": 0.45667714990203057,
      "original_score": 0.45667714990203057,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "197",
      "name": "Numeric Truncation Error",
      "abstraction": "Base",
      "score": 0.45324688208891983,
      "original_score": 0.45324688208891983,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "681",
      "name": "Incorrect Conversion between Numeric Types",
      "abstraction": "Base",
      "score": 0.45244323137129705,
      "original_score": 0.45244323137129705,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "787",
      "name": "Out-of-bounds Write",
      "abstraction": "Base",
      "score": 0.45188551043979164,
      "original_score": 0.45188551043979164,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "194",
      "name": "Unexpected Sign Extension",
      "abstraction": "Variant",
      "score": 0.45178796255955395,
      "original_score": 0.45178796255955395,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1316",
      "name": "Fabric-Address Map Allows Programming of Unwarranted Overlaps of Protected and Unprotected Ranges",
      "abstraction": "Base",
      "score": 0.4493295369858211,
      "original_score": 0.4493295369858211,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 0.4493295369858211,
    "max": 0.5521217076700424,
    "mean": 0.4801915510769252,
    "median": 0.4778756052985821,
    "count": 20
  }
}