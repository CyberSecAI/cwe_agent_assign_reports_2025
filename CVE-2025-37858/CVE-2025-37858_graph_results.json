{
  "query": "In the Linux kernel, the following vulnerability has been resolved fs/jfs Prevent integer overflow in AG size calculation The JFS filesystem calculates allocation group (AG) size using 1 2TB aggregates on 32-bit systems), this 32-bit shift operation causes undefined behavior and improper AG sizing. On 32-bit architectures - Left-shifting 1 by 32+ bits results in 0 due to integer overflow - This creates invalid AG sizes (0 or garbage values) in sbi->bmap->db_agsize - Subsequent block allocations would reference invalid AG structures - Could lead to - Filesystem corruption during extend operations - Kernel crashes due to invalid memory accesses - Security vulnerabilities via malformed on-disk structures Fix by casting to s64 before shifting bmp->db_agsize = (s64)1 << l2agsize This ensures 64-bit arithmetic even on 32-bit architectures. The cast matches the data type of db_agsize (s64) and follows similar patterns in JFS block calculation code. Found by Linux Verification Center (linuxtesting.org) with SVACE.",
  "count": 20,
  "results": [
    {
      "cwe_id": "195",
      "name": "Signed to Unsigned Conversion Error",
      "abstraction": "variant",
      "score": 2.7139200000000003,
      "original_score": 2.7139200000000003,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "823",
      "name": "Use of Out-of-range Pointer Offset",
      "abstraction": "Base",
      "score": 2.435506573830896,
      "original_score": 2.435506573830896,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "197",
      "name": "Numeric Truncation Error",
      "abstraction": "Base",
      "score": 2.378076018436351,
      "original_score": 2.378076018436351,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "843",
      "name": "Access of Resource Using Incompatible Type ('Type Confusion')",
      "abstraction": "base",
      "score": 2.3400000000000003,
      "original_score": 2.3400000000000003,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "128",
      "name": "Wrap-around Error",
      "abstraction": "base",
      "score": 2.2698,
      "original_score": 2.2698,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1339",
      "name": "Insufficient Precision or Accuracy of a Real Number",
      "abstraction": "base",
      "score": 2.2698,
      "original_score": 2.2698,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 2.2674246168841297,
      "original_score": 2.2674246168841297,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "194",
      "name": "Unexpected Sign Extension",
      "abstraction": "Variant",
      "score": 2.061848783210295,
      "original_score": 2.061848783210295,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "196",
      "name": "Unsigned to Signed Conversion Error",
      "abstraction": "variant",
      "score": 1.91472,
      "original_score": 1.91472,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "192",
      "name": "Integer Coercion Error",
      "abstraction": "variant",
      "score": 1.91472,
      "original_score": 1.91472,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "124",
      "name": "Buffer Underwrite ('Buffer Underflow')",
      "abstraction": "base",
      "score": 1.8590000000000002,
      "original_score": 1.8590000000000002,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "781",
      "name": "Improper Address Validation in IOCTL with METHOD_NEITHER I/O Control Code",
      "abstraction": "variant",
      "score": 1.83936,
      "original_score": 1.83936,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "787",
      "name": "Out-of-bounds Write",
      "abstraction": "Base",
      "score": 1.8222374245345252,
      "original_score": 1.8222374245345252,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "129",
      "name": "Improper Validation of Array Index",
      "abstraction": "Variant",
      "score": 1.7964598908405414,
      "original_score": 1.7964598908405414,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "824",
      "name": "Access of Uninitialized Pointer",
      "abstraction": "base",
      "score": 1.6848000000000003,
      "original_score": 1.6848000000000003,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "825",
      "name": "Expired Pointer Dereference",
      "abstraction": "base",
      "score": 1.6848000000000003,
      "original_score": 1.6848000000000003,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1257",
      "name": "Improper Access Control Applied to Mirrored or Aliased Memory Regions",
      "abstraction": "base",
      "score": 1.6848000000000003,
      "original_score": 1.6848000000000003,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "839",
      "name": "Numeric Range Comparison Without Minimum Check",
      "abstraction": "base",
      "score": 1.6848000000000003,
      "original_score": 1.6848000000000003,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "abstraction": "Base",
      "score": 1.6515155803661536,
      "original_score": 1.6515155803661536,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1335",
      "name": "Incorrect Bitwise Shift of Integer",
      "abstraction": "Base",
      "score": 1.6170559319709739,
      "original_score": 1.6170559319709739,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 1.6170559319709739,
    "max": 2.7139200000000003,
    "mean": 1.9945322410036934,
    "median": 1.88686,
    "count": 20
  }
}