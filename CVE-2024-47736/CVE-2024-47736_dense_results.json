{
  "query": "In the Linux kernel, the following vulnerability has been resolved erofs handle overlapped pclusters out of crafted images properly syzbot reported a task hang issue due to a deadlock case where it is waiting for the folio lock of a cached folio that will be used for cache I/Os. After looking into the crafted fuzzed image, I found its formed with several overlapped big pclusters as below Ext logical offset | length physical offset | length 0 0.. 16384 | 16384 151552.. 167936 | 16384 1 16384.. 32768 | 16384 155648.. 172032 | 16384 2 32768.. 49152 | 16384 537223168.. 537239552 | 16384 ... Here, extent 0/1 are physically overlapped although its entirely _impossible_ for normal filesystem images generated by mkfs. First, managed folios containing compressed data will be marked as up-to-date and then unlocked immediately (unlike in-place folios) when compressed I/Os are complete. If physical blocks are not submitted in the incremental order, there should be separate BIOs to avoid dependency issues. However, the current code mis-arranges z_erofs_fill_bio_vec() and BIO submission which causes unexpected BIO waits. Second, managed folios will be connected to their own pclusters for efficient inter-queries. However, this is somewhat hard to implement easily if overlapped big pclusters exist. Again, these only appear in fuzzed images so lets simply fall back to temporary short-lived pages",
  "count": 20,
  "results": [
    {
      "cwe_id": "1260",
      "name": "Improper Handling of Overlap Between Protected Memory Ranges",
      "abstraction": "Base",
      "score": 0.5438128543216075,
      "original_score": 0.5438128543216075,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "abstraction": "Class",
      "score": 0.5435627008863286,
      "original_score": 0.5435627008863286,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "abstraction": "Base",
      "score": 0.5317722054824645,
      "original_score": 0.5317722054824645,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "abstraction": "Variant",
      "score": 0.5246179410199981,
      "original_score": 0.5246179410199981,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 0.5221652300438493,
      "original_score": 0.5221652300438493,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "abstraction": "Class",
      "score": 0.5202321956918663,
      "original_score": 0.5202321956918663,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 0.515310329320297,
      "original_score": 0.515310329320297,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "129",
      "name": "Improper Validation of Array Index",
      "abstraction": "Variant",
      "score": 0.5142910926265998,
      "original_score": 0.5142910926265998,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "abstraction": "Base",
      "score": 0.513878485485487,
      "original_score": 0.513878485485487,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "126",
      "name": "Buffer Over-read",
      "abstraction": "Variant",
      "score": 0.5091172323517206,
      "original_score": 0.5091172323517206,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "823",
      "name": "Use of Out-of-range Pointer Offset",
      "abstraction": "Base",
      "score": 0.5084138715848765,
      "original_score": 0.5084138715848765,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "abstraction": "Base",
      "score": 0.5083116848737217,
      "original_score": 0.5083116848737217,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "abstraction": "Base",
      "score": 0.5065062889033192,
      "original_score": 0.5065062889033192,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "122",
      "name": "Heap-based Buffer Overflow",
      "abstraction": "Variant",
      "score": 0.5019516090178929,
      "original_score": 0.5019516090178929,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "abstraction": "Base",
      "score": 0.5003338090539065,
      "original_score": 0.5003338090539065,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "abstraction": "Base",
      "score": 0.4984972092887197,
      "original_score": 0.4984972092887197,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1325",
      "name": "Improperly Controlled Sequential Memory Allocation",
      "abstraction": "Base",
      "score": 0.497955843723027,
      "original_score": 0.497955843723027,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "834",
      "name": "Excessive Iteration",
      "abstraction": "Class",
      "score": 0.4976114772138529,
      "original_score": 0.4976114772138529,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "413",
      "name": "Improper Resource Locking",
      "abstraction": "Base",
      "score": 0.494123018168395,
      "original_score": 0.494123018168395,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "abstraction": "Base",
      "score": 0.4938887307630382,
      "original_score": 0.4938887307630382,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 0.4938887307630382,
    "max": 0.5438128543216075,
    "mean": 0.5123176904910484,
    "median": 0.5087655519682985,
    "count": 20
  }
}