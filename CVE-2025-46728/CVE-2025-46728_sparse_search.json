{
  "retriever": "sparse",
  "query": "cpp-httplib is a C++ header-only HTTP/HTTPS server and client library. Prior to version 0.20.1, the library fails to enforce configured size limits on incoming request bodies when `Transfer-Encoding chunked` is used or when no `Content-Length` header is provided. A remote attacker can send a chunked request without the terminating zero-length chunk, causing uncontrolled memory allocation on the server. This leads to potential exhaustion of system memory and results in a server crash or unresponsiveness. Version 0.20.1 fixes the issue by enforcing limits during parsing. If the limit is exceeded at any point during reading, the connection is terminated immediately. A short-term workaround through a Reverse Proxy is available. If updating the library immediately is not feasible, deploy a reverse proxy (e.g., Nginx, HAProxy) in front of the `cpp-httplib` application. Configure the proxy to enforce maximum request body size limits, thereby stopping excessively large requests before they reach the vulnerable library code.",
  "keyphrases": {
    "weakness": [
      "uncontrolled memory allocation"
    ]
  },
  "timestamp": "2025-07-15 01:35:30",
  "cve_id": "CVE-2025-46728",
  "result_count": 11,
  "results": [
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "score": 917.4220260445314,
      "search_source": "weakness:uncontrolled memory allocation"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 865.1829375704234,
      "search_source": "weakness:uncontrolled memory allocation"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 796.4497384609473,
      "search_source": "weakness:uncontrolled memory allocation"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "score": 786.7052212937468,
      "search_source": "weakness:uncontrolled memory allocation"
    },
    {
      "cwe_id": "674",
      "name": "Uncontrolled Recursion",
      "score": 771.5672612005178,
      "search_source": "weakness:uncontrolled memory allocation"
    },
    {
      "cwe_id": "444",
      "name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')",
      "score": 769.7248117015197,
      "search_source": "weakness:uncontrolled memory allocation"
    },
    {
      "cwe_id": "400",
      "name": "Uncontrolled Resource Consumption",
      "score": 766.0357618897549,
      "search_source": "weakness:uncontrolled memory allocation"
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "score": 732.5301887161476,
      "search_source": "weakness:uncontrolled memory allocation"
    },
    {
      "cwe_id": "1333",
      "name": "Inefficient Regular Expression Complexity",
      "score": 723.928969004963,
      "search_source": "weakness:uncontrolled memory allocation"
    },
    {
      "cwe_id": "754",
      "name": "Improper Check for Unusual or Exceptional Conditions",
      "score": 722.2703987508723,
      "search_source": "weakness:uncontrolled memory allocation"
    },
    {
      "cwe_id": "201",
      "name": "Insertion of Sensitive Information Into Sent Data",
      "score": 255.7602757796109,
      "search_source": "base_query"
    }
  ]
}