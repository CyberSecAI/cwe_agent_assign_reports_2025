{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved net do not delay dst_entries_add() in dst_release() dst_entries_add() uses per-cpu data that might be freed at netns dismantle from ip6_route_net_exit() calling dst_entries_destroy() Before ip6_route_net_exit() can be called, we release all the dsts associated with this netns, via calls to dst_release(), which waits an rcu grace period before calling dst_destroy() dst_entries_add() use in dst_destroy() is racy, because dst_entries_destroy() could have been called already. Decrementing the number of dsts must happen sooner. Notes 1) in CONFIG_XFRM case, dst_destroy() can call dst_release_immediate(child), this might also cause UAF if the child does not have DST_NOCOUNT set. IPSEC maintainers might take a look and see how to address this. 2) There is also discussion about removing this count of dst, which might happen in future kernels.",
  "keyphrases": {
    "rootcause": [
      "Use-After-Free"
    ]
  },
  "timestamp": "2025-07-12 05:26:23",
  "cve_id": "CVE-2024-50036",
  "result_count": 12,
  "results": [
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "score": 1000.0,
      "search_source": "alternate_term_match"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 577.5875014697388,
      "search_source": "rootcause:Use-After-Free"
    },
    {
      "cwe_id": "364",
      "name": "Signal Handler Race Condition",
      "score": 542.4015117823621,
      "search_source": "rootcause:Use-After-Free"
    },
    {
      "cwe_id": "415",
      "name": "Double Free",
      "score": 536.6663314911355,
      "search_source": "rootcause:Use-After-Free"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "score": 528.4338498526884,
      "search_source": "rootcause:Use-After-Free"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 527.3369615628678,
      "search_source": "rootcause:Use-After-Free"
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "score": 523.2070304972788,
      "search_source": "rootcause:Use-After-Free"
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "score": 517.9821912114244,
      "search_source": "rootcause:Use-After-Free"
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "score": 516.294859197029,
      "search_source": "rootcause:Use-After-Free"
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "score": 509.281939354424,
      "search_source": "rootcause:Use-After-Free"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "score": 503.89505713933556,
      "search_source": "rootcause:Use-After-Free"
    },
    {
      "cwe_id": "122",
      "name": "Heap-based Buffer Overflow",
      "score": 165.2625990311624,
      "search_source": "base_query"
    }
  ]
}