{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved ASoC mediatek Check num_codecs is not zero to avoid panic during probe Following commit 13f58267cda3 (ASoC soc.h dont create dummy Component via COMP_DUMMY()), COMP_DUMMY() became an array with zero length, and only gets populated with the dummy struct after the card is registered. Since the sound card drivers probe happens before the card registration, accessing any of the members of a dummy component during probe will result in undefined behavior. This can be observed in the mt8188 and mt8195 machine sound drivers. By omitting a dai link subnode in the sound cards node in the Devicetree, the default uninitialized dummy codec is used, and when its dai_name pointer gets passed to strcmp() it results in a null pointer dereference and a kernel panic. In addition to that, set_card_codec_info() in the generic helpers file, mtk-soundcard-driver.c, will populate a dai link with a dummy codec when a dai link node is present in DT but with no codec property. The result is that at probe time, a dummy codec can either be uninitialized with num_codecs = 0, or be an initialized dummy codec, with num_codecs = 1 and dai_name = snd-soc-dummy-dai. In order to accommodate for both situations, check that num_codecs is not zero before accessing the codecs fields but still check for the codecs dai name against snd-soc-dummy-dai as needed. While at it, also drop the check that dai_name is not null in the mt8192 driver, introduced in commit 4d4e1b6319e5 (ASoC mediatek mt8192 Check existence of dai_name before dereferencing), as it is actually redundant given the preceding num_codecs != 0 check.",
  "keyphrases": {
    "rootcause": [
      "accessing members of dummy component during probe before registration"
    ],
    "weakness": [
      "array with zero length",
      "null pointer dereference",
      "undefined behavior"
    ]
  },
  "timestamp": "2025-07-12 06:42:58",
  "cve_id": "CVE-2024-56685",
  "result_count": 11,
  "results": [
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "score": 1333.5864990869363,
      "search_source": "rootcause:accessing members of dummy component during probe before registration"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 1323.5895491381418,
      "search_source": "rootcause:accessing members of dummy component during probe before registration"
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "score": 1290.2970318486878,
      "search_source": "rootcause:accessing members of dummy component during probe before registration"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 1263.5470600070953,
      "search_source": "rootcause:accessing members of dummy component during probe before registration"
    },
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "score": 1254.4503843896944,
      "search_source": "rootcause:accessing members of dummy component during probe before registration"
    },
    {
      "cwe_id": "1390",
      "name": "Weak Authentication",
      "score": 1236.0084464010906,
      "search_source": "rootcause:accessing members of dummy component during probe before registration"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "score": 1234.97389503658,
      "search_source": "rootcause:accessing members of dummy component during probe before registration"
    },
    {
      "cwe_id": "824",
      "name": "Access of Uninitialized Pointer",
      "score": 1228.9243534986867,
      "search_source": "rootcause:accessing members of dummy component during probe before registration"
    },
    {
      "cwe_id": "252",
      "name": "Unchecked Return Value",
      "score": 1222.9719740493706,
      "search_source": "rootcause:accessing members of dummy component during probe before registration"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "score": 1220.0041183198693,
      "search_source": "rootcause:accessing members of dummy component during probe before registration"
    },
    {
      "cwe_id": "665",
      "name": "Improper Initialization",
      "score": 1145.3794946560295,
      "search_source": "weakness:null pointer dereference"
    }
  ]
}