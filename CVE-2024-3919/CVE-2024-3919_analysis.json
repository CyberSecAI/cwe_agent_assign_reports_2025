{
  "cve_id": "CVE-2024-3919",
  "description": "The OpenPGP Form Encryption for WordPress plugin before 1.5.1 **does not validate and escape some of its shortcode attributes** before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform **Stored Cross-Site Scripting** attacks.",
  "key_phrases": {
    "rootcause": "does not validate and escape some of its shortcode attributes",
    "weakness": "Stored Cross-Site Scripting",
    "impact": "Stored Cross-Site Scripting attacks",
    "vector": "",
    "attacker": "users with the contributor role and above",
    "product": "OpenPGP Form Encryption for WordPress plugin",
    "version": "before 1.5.1",
    "component": ""
  },
  "reference_content": "The provided content is related to CVE-2024-3919.\n\n- **Root cause of vulnerability**: The OpenPGP Form Encryption plugin does not properly validate and escape shortcode attributes before outputting them.\n- **Weaknesses/vulnerabilities present**: Stored Cross-Site Scripting (XSS).\n- **Impact of exploitation**: An attacker can inject malicious JavaScript code into a page/post through the plugin's shortcode, which will be executed when a user views the page, potentially leading to actions such as session hijacking, redirection to malicious sites or information disclosure.\n- **Attack vectors**: By crafting a malicious shortcode with a vulnerable attribute such as the `style` attribute within the `cryptbutton` shortcode. This shortcode can be embedded within a page or post.\n- **Required attacker capabilities/position**: An attacker needs to have at least contributor-level access to be able to create and embed this malicious shortcode.\n\nThe provided content also includes a proof of concept (PoC) demonstrating how to exploit this vulnerability using a crafted shortcode.",
  "similar_info": {
    "cwe_distribution": {
      "95": {
        "cwe_counts": {},
        "total_samples": 2,
        "distribution": [
          {
            "cwes": [],
            "frequency": 2,
            "proportion": 1.0
          }
        ]
      },
      "90": {
        "cwe_counts": {
          "CWE-79": 1
        },
        "total_samples": 4,
        "distribution": [
          {
            "cwes": [],
            "frequency": 3,
            "proportion": 0.75
          },
          {
            "cwes": [
              "CWE-79"
            ],
            "frequency": 1,
            "proportion": 0.25
          }
        ]
      },
      "85": {
        "cwe_counts": {
          "CWE-79": 1
        },
        "total_samples": 6,
        "distribution": [
          {
            "cwes": [],
            "frequency": 5,
            "proportion": 0.833
          },
          {
            "cwes": [
              "CWE-79"
            ],
            "frequency": 1,
            "proportion": 0.167
          }
        ]
      },
      "80": {
        "cwe_counts": {
          "CWE-79": 1
        },
        "total_samples": 6,
        "distribution": [
          {
            "cwes": [],
            "frequency": 5,
            "proportion": 0.833
          },
          {
            "cwes": [
              "CWE-79"
            ],
            "frequency": 1,
            "proportion": 0.167
          }
        ]
      },
      "75": {
        "cwe_counts": {
          "CWE-79": 1
        },
        "total_samples": 6,
        "distribution": [
          {
            "cwes": [],
            "frequency": 5,
            "proportion": 0.833
          },
          {
            "cwes": [
              "CWE-79"
            ],
            "frequency": 1,
            "proportion": 0.167
          }
        ]
      },
      "70": {
        "cwe_counts": {
          "CWE-79": 2
        },
        "total_samples": 10,
        "distribution": [
          {
            "cwes": [],
            "frequency": 8,
            "proportion": 0.8
          },
          {
            "cwes": [
              "CWE-79"
            ],
            "frequency": 2,
            "proportion": 0.2
          }
        ]
      }
    },
    "cwe_consensus": "CWE-79",
    "similarity_stats": {
      "thresholds": [
        95,
        90,
        85,
        80,
        75,
        70
      ],
      "total_samples_by_threshold": {
        "95": 2,
        "90": 4,
        "85": 6,
        "80": 6,
        "75": 6,
        "70": 10
      },
      "top_cwes_by_threshold": {
        "95": [],
        "90": [
          [
            "CWE-79",
            1
          ]
        ],
        "85": [
          [
            "CWE-79",
            1
          ]
        ],
        "80": [
          [
            "CWE-79",
            1
          ]
        ],
        "75": [
          [
            "CWE-79",
            1
          ]
        ],
        "70": [
          [
            "CWE-79",
            2
          ]
        ]
      }
    },
    "raw_matches": [
      {
        "similarity": 95,
        "cwes": [],
        "total": 2,
        "frequency": 2,
        "proportion": 1.0
      },
      {
        "similarity": 90,
        "cwes": [],
        "total": 4,
        "frequency": 3,
        "proportion": 0.75
      },
      {
        "similarity": 90,
        "cwes": [
          "79"
        ],
        "total": 4,
        "frequency": 1,
        "proportion": 0.25
      },
      {
        "similarity": 85,
        "cwes": [],
        "total": 6,
        "frequency": 5,
        "proportion": 0.833
      },
      {
        "similarity": 85,
        "cwes": [
          "79"
        ],
        "total": 6,
        "frequency": 1,
        "proportion": 0.167
      },
      {
        "similarity": 80,
        "cwes": [],
        "total": 6,
        "frequency": 5,
        "proportion": 0.833
      },
      {
        "similarity": 80,
        "cwes": [
          "79"
        ],
        "total": 6,
        "frequency": 1,
        "proportion": 0.167
      },
      {
        "similarity": 75,
        "cwes": [],
        "total": 6,
        "frequency": 5,
        "proportion": 0.833
      },
      {
        "similarity": 75,
        "cwes": [
          "79"
        ],
        "total": 6,
        "frequency": 1,
        "proportion": 0.167
      },
      {
        "similarity": 70,
        "cwes": [],
        "total": 10,
        "frequency": 8,
        "proportion": 0.8
      },
      {
        "similarity": 70,
        "cwes": [
          "79"
        ],
        "total": 10,
        "frequency": 2,
        "proportion": 0.2
      }
    ]
  },
  "similarity_summary": {
    "consensus_cwe": "CWE-79",
    "top_cwes": [
      [
        "CWE-79",
        6
      ]
    ],
    "confidence_levels": {
      "high": [],
      "medium": [],
      "low": []
    },
    "total_samples": 34
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Primary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-79, which is a Base level CWE. There are several child CWEs of CWE-79, but none of them are a better fit than CWE-79 itself. CWE-79 is the most specific and accurate representation of the vulnerability.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    class cwe79 primary\n```\n\n## Vulnerability Chain\nThe vulnerability chain is as follows:\n1.  **Root Cause:** The plugin **does not validate and escape some of its shortcode attributes** before outputting them.\n2.  **Weakness:** This leads to **Stored Cross-Site Scripting (XSS)**.\n3.  **Impact:** An attacker can inject malicious JavaScript code into a page/post, which will be executed when a user views the page.\n\n## Summary of Analysis\nThe primary weakness is the **lack of validation and escaping of shortcode attributes**, which leads to stored Cross-Site Scripting. The vulnerability description, key phrases, and CVE reference links all point to CWE-79 as the most appropriate classification. The vulnerability occurs because the plugin **does not validate and escape some of its shortcode attributes**, allowing an attacker to inject malicious code. This code is then stored and executed when a user views the page, leading to Cross-Site Scripting.\n\nThe evidence from the vulnerability description is: \"The OpenPGP Form Encryption for WordPress plugin before 1.5.1 **does not validate and escape some of its shortcode attributes** before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform **Stored Cross-Site Scripting** attacks.\"\n\nThe CVE Reference Links Content Summary confirms this: \"The OpenPGP Form Encryption plugin **does not properly validate and escape shortcode attributes** before outputting them,\" leading to \"Stored Cross-Site Scripting (XSS).\"\n\nCWE-79 is at the optimal level of specificity. It directly addresses the core issue of improper neutralization of input during web page generation.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n*Not Selected:* This vulnerability is not related to Cross-Site Request Forgery.\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Selected:* This vulnerability is not related to file uploads.\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.69\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n*Not Selected:* While encoding/escaping is related, CWE-79 is more specific to the context of web page generation and XSS.\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.69\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Selected:* This is not about assumed-immutable parameters.\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.69\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Selected:* This is not about authorization.\n\n## CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\n**Abstraction Level**: Variant\n**Similarity Score**: 0.69\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Selected:* CWE-79 is a better fit because it is broader and covers the general case of improper neutralization of input, not just script-related HTML tags.\n\n## CWE-96: Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 0.68\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before inserting the input into an executable resource, such as a library, configuration file, or template.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Selected:* This is related to code injection, but the context is XSS.\n\n## CWE-639: Authorization Bypass Through User-Controlled Key\n**Abstraction Level**: Base\n**Similarity Score**: 0.68\n**Source**: dense\n\n**Description**:\nThe system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Selected:* This is not about authorization bypass.\n\n## CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n**Abstraction Level**: Base\n**Similarity Score**: 0.67\n**Source**: dense\n\n**Description**:\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Selected:* This is the primary CWE.\n\n## CWE-88: Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 0.67\n**Source**: dense\n\n**Description**:\nThe product constructs a string for a command to be executed by a separate component\nin another control sphere, but it does not properly delimit the\nintended arguments, options, or switches within that command string.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Selected:* This is not about argument injection.\n\n## CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 3.07\n**Source**: graph\n\n**Description**:\nCWE-89: Improper Neutralization of",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Primary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-79, which is a Base level CWE. There are several child CWEs of CWE-79, but none of them are a better fit than CWE-79 itself. CWE-79 is the most specific and accurate representation of the vulnerability.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    class cwe79 primary\n```\n\n## Vulnerability Chain\nThe vulnerability chain is as follows:\n1.  **Root Cause:** The plugin **does not validate and escape some of its shortcode attributes** before outputting them.\n2.  **Weakness:** This leads to **Stored Cross-Site Scripting (XSS)**.\n3.  **Impact:** An attacker can inject malicious JavaScript code into a page/post, which will be executed when a user views the page.\n\n## Summary of Analysis\nThe primary weakness is the **lack of validation and escaping of shortcode attributes**, which leads to stored Cross-Site Scripting. The vulnerability description, key phrases, and CVE reference links all point to CWE-79 as the most appropriate classification. The vulnerability occurs because the plugin **does not validate and escape some of its shortcode attributes**, allowing an attacker to inject malicious code. This code is then stored and executed when a user views the page, leading to Cross-Site Scripting.\n\nThe evidence from the vulnerability description is: \"The OpenPGP Form Encryption for WordPress plugin before 1.5.1 **does not validate and escape some of its shortcode attributes** before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform **Stored Cross-Site Scripting** attacks.\"\n\nThe CVE Reference Links Content Summary confirms this: \"The OpenPGP Form Encryption plugin **does not properly validate and escape shortcode attributes** before outputting them,\" leading to \"Stored Cross-Site Scripting (XSS).\"\n\nCWE-79 is at the optimal level of specificity. It directly addresses the core issue of improper neutralization of input during web page generation.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n*Not Selected:* This vulnerability is not related to Cross-Site Request Forgery.\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Selected:* This vulnerability is not related to file uploads.\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.69\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n*Not Selected:* While encoding/escaping is related, CWE-79 is more specific to the context of web page generation and XSS.\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.69\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Selected:* This is not about assumed-immutable parameters.\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.69\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Selected:* This is not about authorization.\n\n## CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\n**Abstraction Level**: Variant\n**Similarity Score**: 0.69\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Selected:* CWE-79 is a better fit because it is broader and covers the general case of improper neutralization of input, not just script-related HTML tags.\n\n## CWE-96: Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 0.68\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before inserting the input into an executable resource, such as a library, configuration file, or template.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Selected:* This is related to code injection, but the context is XSS.\n\n## CWE-639: Authorization Bypass Through User-Controlled Key\n**Abstraction Level**: Base\n**Similarity Score**: 0.68\n**Source**: dense\n\n**Description**:\nThe system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Selected:* This is not about authorization bypass.\n\n## CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n**Abstraction Level**: Base\n**Similarity Score**: 0.67\n**Source**: dense\n\n**Description**:\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Selected:* This is the primary CWE.\n\n## CWE-88: Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 0.67\n**Source**: dense\n\n**Description**:\nThe product constructs a string for a command to be executed by a separate component\nin another control sphere, but it does not properly delimit the\nintended arguments, options, or switches within that command string.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Selected:* This is not about argument injection.\n\n## CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 3.07\n**Source**: graph\n\n**Description**:\nCWE-89: Improper Neutralization of\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 447.5967949247735
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 363.8298230439608
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 344.4533798603386
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 327.71294336715084
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 321.86361147781287
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse"
      },
      "similarity": 319.18942923582676
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 305.8492684259444
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 297.8280806776413
    },
    {
      "metadata": {
        "doc_id": "96",
        "name": "Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')",
        "type": "Base",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before inserting the input into an executable resource, such as a library, configuration file, or template.",
        "keyphrase_source": "weakness:Stored Cross-Site Scripting",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.49558142049588116,
            "graph": 1.6100148147552296
          }
        }
      },
      "similarity": 0.49558142049588116
    },
    {
      "doc_id": "494",
      "text": "CWE-494: Download of Code Without Integrity Check",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "494",
        "name": "Download of Code Without Integrity Check",
        "type": "base",
        "original_content": "CWE-494: Download of Code Without Integrity Check",
        "relationships": [
          {
            "source_id": "494",
            "target_id": "79",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "494",
            "target_id": "669",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "494",
            "target_id": "669",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "494",
            "target_id": "345",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "494",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "669",
            "target_id": "494",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "345",
            "target_id": "494",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "79",
                  "494",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "79"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "79",
                  "494",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "79"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-116",
      "CWE-80",
      "CWE-639",
      "CWE-88",
      "CWE-79",
      "CWE-472",
      "CWE-352",
      "CWE-96",
      "CWE-425",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}