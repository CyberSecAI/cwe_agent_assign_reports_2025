{
  "method": "sparse_combined",
  "query": "In the Linux kernel, the following vulnerability has been resolved drm/xe/ct prevent UAF in send_recv() Ensure we serialize with completion side to prevent UAF with fence going out of scope on the stack, since we have no clue if it will fire after the timeout before we can erase from the xa. Also we have some dependent loads and stores for which we need the correct ordering, and we lack the needed barriers. Fix this by grabbing the ct->lock after the wait, which is also held by the completion side. v2 (Badal) - Also print done after acquiring the lock and seeing timeout. (cherry picked from commit 52789ce35c55ccd30c4b67b9cc5b2af55e0122ea)",
  "keyphrases": {
    "rootcause": [
      "UAF"
    ]
  },
  "timestamp": "2025-07-12T05:26:05.219174",
  "results_count": 11,
  "results_summary": [
    {
      "doc_id": "416",
      "name": "Use After Free",
      "score": 1000.0
    },
    {
      "doc_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 519.2982673407554
    },
    {
      "doc_id": "125",
      "name": "Out-of-bounds Read",
      "score": 501.68592994431083
    },
    {
      "doc_id": "681",
      "name": "Incorrect Conversion between Numeric Types",
      "score": 497.9904694758934
    },
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 497.5156253333755
    }
  ]
}