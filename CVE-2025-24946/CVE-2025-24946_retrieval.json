{
  "vulnerability_info": "VulnerabilityInfo(cve_id='CVE-2025-24946', description='The hash table used to manage connections in picoquic before b80fd3f uses a **weak hash function**, allowing remote attackers to cause a considerable CPU load on the server (a Hash DoS attack) by initiating connections with colliding Source Connection IDs (SCIDs).', key_phrases={'rootcause': 'weak hash function', 'weakness': '', 'impact': ['DoS attack', 'CPU load'], 'vector': 'colliding Source Connection IDs', 'attacker': 'remote attackers', 'product': 'picoquic', 'version': 'before b80fd3f', 'component': 'hash table to manage connections'}, reference_content='Okay, I will analyze the provided content based on your guidelines.\\n\\n**CVE-2025-24946**\\n\\nI will retrieve the official description for the specified CVE ID and use it to determine relevance.\\n\\n**Official CVE-2025-24946 Description:**\\nImplementation vulnerability in the QUIC protocol used by the picoquic library.\\n\\n---\\n\\n**Content from github.com_dbb8133c_20250624_123634.html (stripped)**\\n\\n*   **Relevance:** The content directly relates to the picoquic library, which is mentioned in the CVE description. The commit history and file changes suggest the implementation of fixes related to hash functions.\\n*   **Extract:**\\n    *   **Root cause of vulnerability:** Hash Denial-of-Service (DoS) attacks exploit the algorithmic complexity of hash tables when pushing them to their worst-case complexity. This is due to the use of weak hash functions, which allows for easy collisions.\\n    *   **Weaknesses/vulnerabilities present:** The vulnerability is present in the implementation of the hash table used by the peer SCID to manage connections.\\n    *   **Impact of exploitation:** An attacker is able to significantly slow down vulnerable servers. Some experimental results obtained with one vulnerable library showed us that the implementation suffered a factor 300 slowdown, when only 10k parallel connections were initiated by malicious clients.\\n    *   **Attack vectors:** An attacker can freely choose CIDs that collide under the target hash function used by a vulnerable server.\\n    *   **Mitigation or fix:** The code includes modifications to the hash function, including the introduction of `siphash.c` and modifications to `picohash.c` and `picoquic_internal.h`.  The fix is at commit `b80fd3f`.\\n*   **More Detail than Official CVE Description:** Yes, the content provides much more detail by explaining the root cause of the vulnerability, the attack vectors, and the impact of exploitation, along with the files changed.\\n\\n**Content from github.com_de97bab9_20250624_123632.html (stripped)**\\n\\n*   **Relevance:** The content is a technical advisory on Hash Denial-of-Service attacks in multiple QUIC implementations. The document explicitly mentions and describes a vulnerability in `picoquic`, which is specified in the CVE.\\n*   **Extract:**\\n    *   **Weaknesses/vulnerabilities present:** Hash DoS attacks exploit collisions in weak hash functions, triggering the worst-case performance of hash tables. The vulnerability is present in hash table implementations, where the peer SCID is used to index the connection. Many server implementations use hash tables to manage connections, and furthermore that they use the peer SCID as a key to index the connection.\\n    *   **Impact of exploitation:** By exploiting this vulnerability, an attacker is able to significantly slow down vulnerable servers. Some experimental results obtained with one vulnerable library showed us that the implementation suffered a factor 300 slowdown, when only 10k parallel connections were initiated by malicious clients.\\n    *   **Attack vectors:** An attacker can freely choose CIDs that collide under the target hash function used by a vulnerable server.\\n    *   **Required attacker capabilities/position:**  Malicious clients can induce significant burden with minimal effort, while the server bears the computational load.\\n    *   **Mitigation or fix:** The advisory mentions `picoquic` fixed at commit `b80fd3f` on branch master, dated 2025-02-18, tracked under CVE-2025-24946.\\n*   **More Detail than Official CVE Description:** Yes, the content provides more detail by explaining the root cause of the vulnerability, the attack vectors, and the impact of exploitation.\\n\\n**Content from github.com_efbea882_20250624_203317.html (stripped)**\\n\\n*   **Relevance:** The content describes the `xquic` library, which is not related to `picoquic`.\\n*   **Response:** UNRELATED\\n\\n**Content from github.com_f3e2d4b0_20250624_203318.html (stripped)**\\n\\n*   **Relevance:** This content pertains to Apache Traffic Server, which is also mentioned in the technical advisory.\\n*   **Response:** UNRELATED', similar_info={'cwe_distribution': {}, 'cwe_consensus': '', 'similarity_stats': {'thresholds': [], 'total_samples_by_threshold': {}, 'top_cwes_by_threshold': {}}}, similarity_summary=SimilarityInsight(consensus_cwe='', top_cwes=[], confidence_levels={}, total_samples=0), analysis='', analysis_with_relationships='', criticism='', resolution='', relevant_cwes=[{'metadata': {'doc_id': '328', 'name': 'Use of Weak Hash', 'source': 'sparse'}, 'similarity': np.float64(266.59713348086973)}, {'metadata': {'doc_id': '407', 'name': 'Inefficient Algorithmic Complexity', 'source': 'sparse'}, 'similarity': np.float64(264.8570513392626)}, {'metadata': {'doc_id': '330', 'name': 'Use of Insufficiently Random Values', 'source': 'sparse'}, 'similarity': np.float64(255.5089161401263)}, {'metadata': {'doc_id': '916', 'name': 'Use of Password Hash With Insufficient Computational Effort', 'source': 'sparse'}, 'similarity': np.float64(243.9991156743613)}, {'metadata': {'doc_id': '294', 'name': 'Authentication Bypass by Capture-replay', 'source': 'sparse'}, 'similarity': np.float64(222.06386444460597)}, {'metadata': {'doc_id': '410', 'name': 'Insufficient Resource Pool', 'type': 'Base', 'original_content': \"The product's resource pool is not large enough to handle peak demand, which allows an attacker to prevent others from accessing the resource by using a (relatively) large number of requests for resources.\", 'keyphrase_source': 'rootcause:weak hash function', 'source': 'dense', 'mapping_notes': {'usage': 'Allowed', 'rationale': 'This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.', 'comments': \"Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\", 'reasons': ['Acceptable-Use']}, 'score_info': {'retrievers': ['dense', 'graph'], 'retriever_count': 2, 'normalized_scores': {'dense': 0.5066851595200853, 'graph': 1.5000847783974538}}}, 'similarity': 0.5066851595200853}, {'doc_id': '804', 'text': 'CWE-804: Guessable CAPTCHA', 'score': 2.2100000000000004, 'metadata': {'doc_id': '804', 'name': 'Guessable CAPTCHA', 'type': 'base', 'original_content': 'CWE-804: Guessable CAPTCHA', 'relationships': [{'source_id': '804', 'target_id': '330', 'label': 'CANFOLLOW', 'properties': {'view_id': '1000'}}, {'source_id': '804', 'target_id': '1390', 'label': 'CHILDOF', 'properties': {'view_id': '1000'}}, {'source_id': '804', 'target_id': '863', 'label': 'CHILDOF', 'properties': {'ordinal': 'Primary', 'view_id': '1000'}}, {'source_id': '863', 'target_id': '804', 'label': 'PARENTOF', 'properties': {'ordinal': 'Primary', 'view_id': '1000'}}, {'source_id': '330', 'target_id': '804', 'label': 'CANPRECEDE', 'properties': {'view_id': '1000'}}, {'source_id': '1390', 'target_id': '804', 'label': 'PARENTOF', 'properties': {'view_id': '1000'}}], 'score_components': {'relationship_chain': 1.0, 'sequence_path': 1.0}, 'abstraction_factor': 1.3, 'graph_path_info': {'path_types': ['relationship_chain', 'vulnerability_sequence_forward'], 'best_paths': {'relationship_chain': {'path': [('330', '804', 'CANPRECEDE')], 'score': 1.0, 'type': 'relationship_chain', 'source': '330'}, 'vulnerability_sequence_forward': {'path': [('330', '804', 'CANPRECEDE')], 'score': 1.0, 'type': 'vulnerability_sequence_forward', 'source': '330'}}}, 'position': 'after', 'sources': ['graph'], 'source': 'graph', 'mapping_notes': {'usage': 'Allowed', 'rationale': 'This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.', 'comments': \"Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\", 'reasons': ['Acceptable-Use']}, 'score_info': {'retrievers': ['graph'], 'retriever_count': 1, 'normalized_scores': {'graph': 2.2100000000000004}}}, 'similarity': 2.2100000000000004}, {'metadata': {'doc_id': '327', 'name': 'Use of a Broken or Risky Cryptographic Algorithm', 'source': 'sparse'}, 'similarity': np.float64(221.87128005934323)}, {'metadata': {'doc_id': '301', 'name': 'Reflection Attack in an Authentication Protocol', 'source': 'sparse'}, 'similarity': np.float64(221.28674836113777)}, {'metadata': {'doc_id': '674', 'name': 'Uncontrolled Recursion', 'source': 'sparse'}, 'similarity': np.float64(217.8008214263568)}], identified_cwes={'analyzer': [], 'critic_additional': []})",
  "retrieval_results": {
    "has_multiple_keyphrases": false,
    "raw_search_results": {
      "all_results": [
        {
          "metadata": {
            "doc_id": "328",
            "name": "Use of Weak Hash",
            "type": "Base",
            "original_content": "The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).",
            "keyphrase_source": "rootcause:weak hash function",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse",
                "graph"
              ],
              "retriever_count": 3,
              "normalized_scores": {
                "dense": 0.5370893326418129,
                "sparse": 266.59713348086973,
                "graph": 1.7149474429757086
              }
            }
          },
          "similarity": 0.5370893326418129
        },
        {
          "metadata": {
            "doc_id": "916",
            "name": "Use of Password Hash With Insufficient Computational Effort",
            "type": "Base",
            "original_content": "The product generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.",
            "keyphrase_source": "rootcause:weak hash function",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse",
                "graph"
              ],
              "retriever_count": 3,
              "normalized_scores": {
                "dense": 0.5273355740620833,
                "sparse": 243.9991156743613,
                "graph": 1.7092408239394574
              }
            }
          },
          "similarity": 0.5273355740620833
        },
        {
          "metadata": {
            "doc_id": "410",
            "name": "Insufficient Resource Pool",
            "type": "Base",
            "original_content": "The product's resource pool is not large enough to handle peak demand, which allows an attacker to prevent others from accessing the resource by using a (relatively) large number of requests for resources.",
            "keyphrase_source": "rootcause:weak hash function",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "graph"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "dense": 0.5066851595200853,
                "graph": 1.5000847783974538
              }
            }
          },
          "similarity": 0.5066851595200853
        },
        {
          "metadata": {
            "doc_id": "836",
            "name": "Use of Password Hash Instead of Password for Authentication",
            "type": "Base",
            "original_content": "The product records password hashes in a data store, receives a hash of a password from a client, and compares the supplied hash to the hash obtained from the data store.",
            "keyphrase_source": "rootcause:weak hash function",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse",
                "graph"
              ],
              "retriever_count": 3,
              "normalized_scores": {
                "dense": 0.5048399447221708,
                "sparse": 214.51105573266688,
                "graph": 1.4888497357639565
              }
            }
          },
          "similarity": 0.5048399447221708
        },
        {
          "metadata": {
            "doc_id": "407",
            "name": "Inefficient Algorithmic Complexity",
            "type": "Class",
            "original_content": "An algorithm in a product has an inefficient worst-case computational complexity that may be detrimental to system performance and can be triggered by an attacker, typically using crafted manipulations that ensure that the worst case is being reached.",
            "keyphrase_source": "rootcause:weak hash function",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed-with-Review",
              "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
              "comments": "Examine children of this entry to see if there is a better fit",
              "reasons": [
                "Abstraction"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse",
                "graph"
              ],
              "retriever_count": 3,
              "normalized_scores": {
                "dense": 0.49614102838449897,
                "sparse": 264.8570513392626,
                "graph": 1.0174626775508269
              }
            }
          },
          "similarity": 0.49614102838449897
        },
        {
          "metadata": {
            "doc_id": "759",
            "name": "Use of a One-Way Hash without a Salt",
            "type": "Variant",
            "original_content": "The product uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the product does not also use a salt as part of the input.",
            "keyphrase_source": "rootcause:weak hash function",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.49123664951564266
              }
            }
          },
          "similarity": 0.49123664951564266
        },
        {
          "metadata": {
            "doc_id": "760",
            "name": "Use of a One-Way Hash with a Predictable Salt",
            "type": "Variant",
            "original_content": "The product uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the product uses a predictable salt as part of the input.",
            "keyphrase_source": "rootcause:weak hash function",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.4829491707940137
              }
            }
          },
          "similarity": 0.4829491707940137
        },
        {
          "metadata": {
            "doc_id": "834",
            "name": "Excessive Iteration",
            "type": "Class",
            "original_content": "The product performs an iteration or loop without sufficiently limiting the number of times that the loop is executed.",
            "keyphrase_source": "rootcause:weak hash function",
            "source": "dense",
            "mapping_notes": {
              "usage": "Discouraged",
              "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
              "comments": "Examine children of this entry to see if there is a better fit",
              "reasons": [
                "Abstraction"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.4753355538372336
              }
            }
          },
          "similarity": 0.4753355538372336
        },
        {
          "metadata": {
            "doc_id": "1325",
            "name": "Improperly Controlled Sequential Memory Allocation",
            "type": "Base",
            "original_content": "The product manages a group of objects or resources and performs a separate memory allocation for each object, but it does not properly limit the total amount of memory that is consumed by all of the combined objects.",
            "keyphrase_source": "rootcause:weak hash function",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.46873079660724803
              }
            }
          },
          "similarity": 0.46873079660724803
        },
        {
          "metadata": {
            "doc_id": "1176",
            "name": "Inefficient CPU Computation",
            "type": "Class",
            "original_content": "The product performs CPU computations using\n         algorithms that are not as efficient as they could be for the\n         needs of the developer, i.e., the computations can be\n         optimized further.",
            "keyphrase_source": "rootcause:weak hash function",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed-with-Review",
              "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
              "comments": "Examine children of this entry to see if there is a better fit",
              "reasons": [
                "Abstraction"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.46823713523273425
              }
            }
          },
          "similarity": 0.46823713523273425
        },
        {
          "metadata": {
            "doc_id": "401",
            "name": "Missing Release of Memory after Effective Lifetime",
            "type": "Variant",
            "original_content": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.4468804831750041
              }
            }
          },
          "similarity": 0.4468804831750041
        },
        {
          "metadata": {
            "doc_id": "835",
            "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
            "type": "Base",
            "original_content": "The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.446786022700599
              }
            }
          },
          "similarity": 0.446786022700599
        },
        {
          "metadata": {
            "doc_id": "294",
            "name": "Authentication Bypass by Capture-replay",
            "type": "Base",
            "original_content": "A capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse",
                "graph"
              ],
              "retriever_count": 3,
              "normalized_scores": {
                "dense": 0.44265407701646087,
                "sparse": 222.06386444460597,
                "graph": 1.6503727022400136
              }
            }
          },
          "similarity": 0.44265407701646087
        },
        {
          "metadata": {
            "doc_id": "1089",
            "name": "Large Data Table with Excessive Number of Indices",
            "type": "Base",
            "original_content": "The product uses a large data table that contains an excessively large number of\n\t\t\t\t\tindices.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.43970908703988626
              }
            }
          },
          "similarity": 0.43970908703988626
        },
        {
          "metadata": {
            "doc_id": "1331",
            "name": "Improper Isolation of Shared Resources in Network On Chip (NoC)",
            "type": "Base",
            "original_content": "The Network On Chip (NoC) does not isolate or incorrectly isolates its on-chip-fabric and internal resources such that they are shared between trusted and untrusted agents, creating timing channels.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.43740535855978
              }
            }
          },
          "similarity": 0.43740535855978
        },
        {
          "metadata": {
            "doc_id": "208",
            "name": "Observable Timing Discrepancy",
            "type": "Base",
            "original_content": "Two separate operations in a product require different amounts of time to complete, in a way that is observable to an actor and reveals security-relevant information about the state of the product, such as whether a particular operation was successful or not.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.43567719820007156
              }
            }
          },
          "similarity": 0.43567719820007156
        },
        {
          "metadata": {
            "doc_id": "770",
            "name": "Allocation of Resources Without Limits or Throttling",
            "type": "Base",
            "original_content": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "dense": 0.43562083032329774,
                "sparse": 67.00924514121934
              }
            }
          },
          "similarity": 0.43562083032329774
        },
        {
          "metadata": {
            "doc_id": "400",
            "name": "Uncontrolled Resource Consumption",
            "type": "Class",
            "original_content": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Discouraged",
              "rationale": "CWE-400 is intended for incorrect behaviors in which the product is expected to track and restrict how many resources it consumes, but CWE-400 is often misused because it is conflated with the \"technical impact\" of vulnerabilities in which resource consumption occurs. It is sometimes used for low-information vulnerability reports. It is a level-1 Class (i.e., a child of a Pillar).",
              "comments": "Closely analyze the specific mistake that is causing resource consumption, and perform a CWE mapping for that mistake. Consider children/descendants such as CWE-770: Allocation of Resources Without Limits or Throttling, CWE-771: Missing Reference to Active Allocated Resource, CWE-410: Insufficient Resource Pool, CWE-772: Missing Release of Resource after Effective Lifetime, CWE-834: Excessive Iteration, CWE-405: Asymmetric Resource Consumption (Amplification), and others.",
              "reasons": [
                "Frequent Misuse"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse",
                "graph"
              ],
              "retriever_count": 3,
              "normalized_scores": {
                "dense": 0.4323501872269504,
                "sparse": 65.67394027427275,
                "graph": 1.0180908829596367
              }
            }
          },
          "similarity": 0.4323501872269504
        },
        {
          "metadata": {
            "doc_id": "696",
            "name": "Incorrect Behavior Order",
            "type": "Class",
            "original_content": "The product performs multiple related behaviors, but the behaviors are performed in the wrong order in ways which may produce resultant weaknesses.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed-with-Review",
              "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
              "comments": "Examine children of this entry to see if there is a better fit",
              "reasons": [
                "Abstraction"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.4314826772872991
              }
            }
          },
          "similarity": 0.4314826772872991
        },
        {
          "metadata": {
            "doc_id": "799",
            "name": "Improper Control of Interaction Frequency",
            "type": "Class",
            "original_content": "The product does not properly limit the number or frequency of interactions that it has with an actor, such as the number of incoming requests.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed-with-Review",
              "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
              "comments": "Examine children of this entry to see if there is a better fit",
              "reasons": [
                "Abstraction"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.4311306849872645
              }
            }
          },
          "similarity": 0.4311306849872645
        },
        {
          "cwe_id": "328",
          "name": "Use of Weak Hash",
          "description": "The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).",
          "score": 266.59713348086973,
          "matched_text": "CWE-328: Use of Weak Hash\n\nType: Base\n\nStatus: Draft\n\nDescription:\n\nThe product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).\n\nExtended Details:\n\n\n\nA hash function is defined as an algorithm that maps arbitrarily sized data into a fixed-sized digest (output) such that the following properties hold:\n\n\n  1. The algorithm is not invertible (also called \"one-way\" or \"not reversible\")\n\n  1. The algorithm is deterministic; the same input produces the same digest every time\n\n Building on this definition, a cryptographic hash function must also ensure that a malicious actor cannot leverage the hash function to have a reasonable chance of success at determining any of the following:\n\n  1. the original input (preimage attack), given only the digest\n\n  1. another input that can produce the same digest (2nd preimage attack), given the original input\n\n  1. a set of two or more inputs that evaluate to the same digest (birthday attack), given the actor can arbitrarily choose the inputs to be hashed and can do so a reasonable amount of times\n\nWhat is regarded as \"reasonable\" varies by context and threat model, but in general, \"reasonable\" could cover any attack that is more efficient than brute force (i.e., on average, attempting half of all possible combinations). Note that some attacks might be more efficient than brute force but are still not regarded as achievable in the real world.\n\nAny algorithm that does not meet the above conditions will generally be considered weak for general use in hashing.\n\n\nIn addition to algorithmic weaknesses, a hash function can be made weak by using the hash in a security context that breaks its security guarantees. For example, using a hash function without a salt for storing passwords (that are sufficiently short) could enable an adversary to create a \"rainbow table\" [REF-637] to recover the password under certain conditions; this attack works against such hash functions as MD5, SHA-1, and SHA-2.\n\n\nReal-World Examples:\n\n- CVE-2022-30320: Programmable Logic Controller (PLC) uses a protocol with a cryptographically insecure hashing algorithm for passwords.\n\n- CVE-2005-4900: SHA-1 algorithm is not collision-resistant.\n\n- CVE-2020-25685: DNS product uses a weak hash (CRC32 or SHA-1) of the query name, allowing attacker to forge responses by computing domain names with the same hash.\n\n- CVE-2012-6707: blogging product uses MD5-based algorithm for passwords.\n\n- CVE-2019-14855: forging of certificate signatures using SHA-1 collisions.\n\n- CVE-2017-15999: mobile app for backup sends SHA-1 hash of password in cleartext.\n\n- CVE-2006-4068: Hard-coded hashed values for username and password contained in client-side script, allowing brute-force offline attacks.\n\nTop 25 CWE Examples:\n\n- CVE-2021-21474: SAP HANA Database, versions - 1.0, 2.0, accepts SAML tokens with MD5 digest, an attacker who manages to obtain an MD5-digest signed SAML Assertion issued for an SAP HANA instance might be able to tamper with it and alter it in a way that the digest continues to be the same and without invalidating the digital signature, this allows them to impersonate as user in HANA database and be able to read the contents in the database.\n\n- CVE-2021-23855: The user and password data base is exposed by an unprotected web server resource. Passwords are hashed with a weak hashing algorithm and therefore allow an attacker to determine the password by using rainbow tables.\n\n- CVE-2021-28093: OX Documents before 7.10.5-rev5 has Incorrect Access Control of converted images because hash collisions can occur, due to use of Adler32.\n\n- CVE-2021-28094: OX Documents before 7.10.5-rev7 has Incorrect Access Control for converted documents because hash collisions can occur, due to use of CRC32.\n\n- CVE-2021-28095: OX Documents before 7.10.5-rev5 has Incorrect Access Control for documents that contain XML structures because hash collisions can occur, due to use of CRC32.\n\n- CVE-2022-3433: The aeson library is not safe to use to consume untrusted JSON input. A remote user could abuse this flaw to produce a hash collision in the underlying unordered-containers library by sending specially crafted JSON data, resulting in a denial of service.\n\n- CVE-2022-21653: Jawn is an open source JSON parser. Extenders of the `org.typelevel.jawn.SimpleFacade` and `org.typelevel.jawn.MutableFacade` who don't override `objectContext()` are vulnerable to a hash collision attack which may result in a denial of service. Most applications do not implement these traits directly, but inherit from a library. `jawn-parser-1.3.1` fixes this issue and users are advised to upgrade. For users unable to upgrade override `objectContext()` to use a collision-safe collection.\n\n- CVE-2022-22321: IBM MQ Appliance 9.2 CD and 9.2 LTS local messaging users stored with a password hash that provides insufficient protection. IBM X-Force ID: 218368.\n\n- CVE-2022-25156: Use of Weak Hash vulnerability in Mitsubishi Electric MELSEC iQ-F series FX5U(C) CPU all versions, Mitsubishi Electric MELSEC iQ-F series FX5UJ CPU all versions, Mitsubishi Electric MELSEC iQ-R series R00/01/02CPU all versions, Mitsubishi Electric MELSEC iQ-R series R04/08/16/32/120(EN)CPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120SFCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PSFCPU all versions, Mitsubishi Electric MELSEC iQ-R series RJ71C24(-R2/R4) all versions, Mitsubishi Electric MELSEC iQ-R series RJ71EN71 all versions, Mitsubishi Electric MELSEC iQ-R series RJ72GF15-T2 all versions, Mitsubishi Electric MELSEC Q series Q03UDECPU all versions, Mitsubishi Electric MELSEC Q series Q04/06/10/13/20/26/50/100UDEHCPU all versions, Mitsubishi Electric MELSEC Q series Q03/04/06/13/26UDVCPU all versions, Mitsubishi Electric MELSEC Q series Q04/06/13/26UDPVCPU all versions, Mitsubishi Electric MELSEC Q series QJ71C24N(-R2/R4) all versions, Mitsubishi Electric MELSEC Q series QJ71E71-100 all versions, Mitsubishi Electric MELSEC Q series QJ72BR15 all versions, Mitsubishi Electric MELSEC Q series QJ72LP25(-25/G/GE) all versions, Mitsubishi Electric MELSEC L series L02/06/26CPU(-P) all versions, Mitsubishi Electric MELSEC L series L26CPU-(P)BT all versions, Mitsubishi Electric MELSEC L series LJ71C24(-R2) all versions, Mitsubishi Electric MELSEC L series LJ71E71-100 all versions and Mitsubishi Electric MELSEC L series LJ72GF15-T2 all versions allows a remote unauthenticated attacker to login to the product by using a password reversed from a previously eavesdropped password hash.\n\n- CVE-2022-30285: In Quest KACE Systems Management Appliance (SMA) through 12.0, a hash collision is possible during authentication. This may allow authentication with invalid credentials.\n\n- CVE-2022-31459: Owl Labs Meeting Owl 5.2.0.15 allows attackers to retrieve the passcode hash via a certain c 10 value over Bluetooth.\n\n- CVE-2022-36555: Hytec Inter HWL-2511-SS v1.05 and below implements a SHA512crypt hash for the root account which can be easily cracked via a brute-force attack.\n\n- CVE-2022-4036: The Appointment Hour Booking plugin for WordPress is vulnerable to CAPTCHA bypass in versions up to, and including, 1.3.72. This is due to the use of insufficiently strong hashing algorithm on the CAPTCHA secret that is also displayed to the user via a cookie.\n\n- CVE-2022-43922: IBM App Connect Enterprise Certified Container 4.1, 4.2, 5.0, 5.1, 5.2, 6.0, 6.1, and 6.2 could disclose sensitive information to an attacker due to a weak hash of an API Key in the configuration. IBM X-Force ID: 241583.\n\n- CVE-2022-45379: Jenkins Script Security Plugin 1189.vb_a_b_7c8fd5fde and earlier stores whole-script approvals as the SHA-1 hash of the script, making it vulnerable to collision attacks.\n\n- CVE-2021-25761: In JetBrains Ktor before 1.5.0, a birthday attack on SessionStorage key was possible.\n\n- CVE-2021-37606: Meow hash 0.5/calico does not sufficiently thwart key recovery by an attacker who can query whether there's a collision in the bottom bits of the hashes of two messages, as demonstrated by an attack against a long-running web service that allows the attacker to infer collisions by measuring timing differences.\n\n- CVE-2021-39182: EnroCrypt is a Python module for encryption and hashing. Prior to version 1.1.4, EnroCrypt used the MD5 hashing algorithm in the hashing file. Beginners who are unfamiliar with hashes can face problems as MD5 is considered an insecure hashing algorithm. The vulnerability is patched in v1.1.4 of the product. As a workaround, users can remove the `MD5` hashing function from the file `hashing.py`.\n\n- CVE-2021-42216: A Broken or Risky Cryptographic Algorithm exists in AnonAddy 0.8.5 via VerificationController.php.\n\n- CVE-2021-44150: The client in tusdotnet through 2.5.0 relies on SHA-1 to prevent spoofing of file content.\n\n- CVE-2022-21800: MMP: All versions prior to v1.0.3, PTP C-series: Device versions prior to v2.8.6.1, and PTMP C-series and A5x: Device versions prior to v2.5.4.1 uses the MD5 algorithm to hash the passwords before storing them but does not salt the hash. As a result, attackers may be able to crack the hashed passwords.\n\n- CVE-2022-29161: XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. The XWiki Crypto API will generate X509 certificates signed by default using SHA1 with RSA, which is not considered safe anymore for use in certificate signatures, due to the risk of collisions with SHA1. The problem has been patched in XWiki version 13.10.6, 14.3.1 and 14.4-rc-1. Since then, the Crypto API will generate X509 certificates signed by default using SHA256 with RSA. Administrators are advised to upgrade their XWiki installation to one of the patched versions. If the upgrade is not possible, it is possible to patch the module xwiki-platform-crypto in a local installation by applying the change exposed in 26728f3 and re-compiling the module.\n\n- CVE-2022-29566: The Bulletproofs 2017/1066 paper mishandles Fiat-Shamir generation because the hash computation fails to include all of the public values from the Zero Knowledge proof statement as well as all of the public values computed in the proof, aka the Frozen Heart issue.\n\n- CVE-2022-29835: WD Discovery software executable files were signed with an unsafe SHA-1 hashing algorithm. An attacker could use this weakness to create forged certificate signatures due to the use of a hashing algorithm that is not collision-free. This could thereby impact the confidentiality of user content. This issue affects: Western Digital WD Discovery WD Discovery Desktop App versions prior to 4.4.396 on Mac; WD Discovery Desktop App versions prior to 4.4.396 on Windows.\n\n- CVE-2022-45141: Since the Windows Kerberos RC4-HMAC Elevation of Privilege Vulnerability was disclosed by Microsoft on Nov 8 2022 and per RFC8429 it is assumed that rc4-hmac is weak, Vulnerable Samba Active Directory DCs will issue rc4-hmac encrypted tickets despite the target server supporting better encryption (eg aes256-cts-hmac-sha1-96).\n\n- CVE-2022-47931: IO FinNet tss-lib before 2.0.0 allows a collision of hash values.\n\nRelated Weaknesses:\n\n- CWE-326 (ChildOf)\n\n- CWE-327 (ChildOf)",
          "type": "Base",
          "source": "sparse",
          "search_source": "rootcause:weak hash function",
          "sources": [
            "base",
            "rootcause"
          ],
          "boost_factor": 3.0,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            }
          }
        },
        {
          "cwe_id": "407",
          "name": "Inefficient Algorithmic Complexity",
          "description": "An algorithm in a product has an inefficient worst-case computational complexity that may be detrimental to system performance and can be triggered by an attacker, typically using crafted manipulations that ensure that the worst case is being reached.",
          "score": 264.8570513392626,
          "matched_text": "CWE-407: Inefficient Algorithmic Complexity\n\nType: Class\n\nStatus: Incomplete\n\nAlternative Terms:\n\nQuadratic Complexity - Used when the algorithmic complexity is related to the square of the number of inputs (N^2)\n\nQuadratic Complexity - Used when the algorithmic complexity is related to the square of the number of inputs (N^2)\n\nQuadratic Complexity - Used when the algorithmic complexity is related to the square of the number of inputs (N^2)\n\nDescription:\n\nAn algorithm in a product has an inefficient worst-case computational complexity that may be detrimental to system performance and can be triggered by an attacker, typically using crafted manipulations that ensure that the worst case is being reached.\n\nReal-World Examples:\n\n- CVE-2021-32617: C++ library for image metadata has \"quadratic complexity\" issue with unnecessarily repetitive parsing each time an invalid character is encountered\n\n- CVE-2020-10735: Python has \"quadratic complexity\" issue when converting string to int with many digits in unexpected bases\n\n- CVE-2020-5243: server allows ReDOS with crafted User-Agent strings, due to overlapping capture groups that cause excessive backtracking.\n\n- CVE-2014-1474: Perl-based email address parser has \"quadratic complexity\" issue via a string that does not contain a valid address\n\n- CVE-2003-0244: CPU consumption via inputs that cause many hash table collisions.\n\n- CVE-2003-0364: CPU consumption via inputs that cause many hash table collisions.\n\n- CVE-2002-1203: Product performs unnecessary processing before dropping an invalid packet.\n\n- CVE-2001-1501: CPU and memory consumption using many wildcards.\n\n- CVE-2004-2527: Product allows attackers to cause multiple copies of a program to be loaded more quickly than the program can detect that other copies are running, then exit. This type of error should probably have its own category, where teardown takes more time than initialization.\n\n- CVE-2006-6931: Network monitoring system allows remote attackers to cause a denial of service (CPU consumption and detection outage) via crafted network traffic, aka a \"backtracking attack.\"\n\n- CVE-2006-3380: Wiki allows remote attackers to cause a denial of service (CPU consumption) by performing a diff between large, crafted pages that trigger the worst case algorithmic complexity.\n\n- CVE-2006-3379: Wiki allows remote attackers to cause a denial of service (CPU consumption) by performing a diff between large, crafted pages that trigger the worst case algorithmic complexity.\n\n- CVE-2005-2506: OS allows attackers to cause a denial of service (CPU consumption) via crafted Gregorian dates.\n\n- CVE-2005-1792: Memory leak by performing actions faster than the software can clear them.\n\nTop 25 CWE Examples:\n\n- CVE-2021-34549: An issue was discovered in Tor before 0.4.6.5, aka TROVE-2021-005. Hashing is mishandled for certain retrieval of circuit data. Consequently. an attacker can trigger the use of an attacker-chosen circuit ID to cause algorithm inefficiency.\n\n- CVE-2021-32617: Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An inefficient algorithm (quadratic complexity) was found in Exiv2 versions v0.27.3 and earlier. The inefficient algorithm is triggered when Exiv2 is used to write metadata into a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. The bug is fixed in version v0.27.4. Note that this bug is only triggered when _writing_ the metadata, which is a less frequently used Exiv2 operation than _reading_ the metadata. For example, to trigger the bug in the Exiv2 command-line application, you need to add an extra command-line argument such as `rm`.\n\n- CVE-2021-43859: XStream is an open source java library to serialize objects to XML and back again. Versions prior to 1.4.19 may allow a remote attacker to allocate 100% CPU time on the target system depending on CPU type or parallel execution of such a payload resulting in a denial of service only by manipulating the processed input stream. XStream 1.4.19 monitors and accumulates the time it takes to add elements to collections and throws an exception if a set threshold is exceeded. Users are advised to upgrade as soon as possible. Users unable to upgrade may set the NO_REFERENCE mode to prevent recursion. See GHSA-rmr5-cpv2-vgjf for further details on a workaround if an upgrade is not possible.\n\n- CVE-2021-41119: Wire-server is the system server for the wire back-end services. Releases prior to v2022-03-01 are subject to a denial of service attack via a crafted object causing a hash collision. This collision causes the server to spend at least quadratic time parsing it which can lead to a denial of service for a heavily used server. The issue has been fixed in wire-server 2022-03-01 and is already deployed on all Wire managed services. On premise instances of wire-server need to be updated to 2022-03-01, so that their backends are no longer affected. There are no known workarounds for this issue.\n\n- CVE-2021-33582: Cyrus IMAP before 3.4.2 allows remote attackers to cause a denial of service (multiple-minute daemon hang) via input that is mishandled during hash-table interaction. Because there are many insertions into a single bucket, strcmp becomes slow. This is fixed in 3.4.2, 3.2.8, and 3.0.16.\n\n- CVE-2021-41168: Snudown is a reddit-specific fork of the Sundown Markdown parser used by GitHub, with Python integration added. In affected versions snudown was found to be vulnerable to denial of service attacks to its reference table implementation. References written in markdown ` [reference_name]: https://www.example.com` are inserted into a hash table which was found to have a weak hash function, meaning that an attacker can reliably generate a large number of collisions for it. This makes the hash table vulnerable to a hash-collision DoS attack, a type of algorithmic complexity attack. Further the hash table allowed for duplicate entries resulting in long retrieval times. Proofs of concept and further discussion of the hash collision issue are discussed on the snudown GHSA(https://github.com/reddit/snudown/security/advisories/GHSA-6gvv-9q92-w5f6). Users are advised to update to version 1.7.0.\n\n- CVE-2022-39209: cmark-gfm is GitHub's fork of cmark, a CommonMark parsing and rendering library and program in C. In versions prior to 0.29.0.gfm.6 a polynomial time complexity issue in cmark-gfm's autolink extension may lead to unbounded resource exhaustion and subsequent denial of service. Users may verify the patch by running `python3 -c 'print(\"![l\"* 100000 + \"\\\\n\")' | ./cmark-gfm -e autolink`, which will resource exhaust on unpatched cmark-gfm but render correctly on patched cmark-gfm. This vulnerability has been patched in 0.29.0.gfm.6. Users are advised to upgrade. Users unable to upgrade should disable the use of the autolink extension.\n\n- CVE-2022-40188: Knot Resolver before 5.5.3 allows remote attackers to cause a denial of service (CPU consumption) because of algorithmic complexity. During an attack, an authoritative server must return large NS sets or address sets.\n\n- CVE-2022-45061: An issue was discovered in Python before 3.11.1. An unnecessary quadratic algorithm exists in one path when processing some inputs to the IDNA (RFC 3490) decoder, such that a crafted, unreasonably long name being presented to the decoder could lead to a CPU denial of service. Hostnames are often supplied by remote servers that could be controlled by a malicious actor; in such a scenario, they could trigger excessive CPU consumption on the client attempting to make use of an attacker-supplied supposed hostname. For example, the attack payload could be placed in the Location header of an HTTP response with status code 302. A fix is planned in 3.11.1, 3.10.9, 3.9.16, 3.8.16, and 3.7.16.\n\nRelated Weaknesses:\n\n- CWE-405 (ChildOf)",
          "type": "Class",
          "source": "sparse",
          "search_source": "rootcause:weak hash function",
          "sources": [
            "base",
            "rootcause"
          ],
          "boost_factor": 3.0,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed-with-Review",
              "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
              "comments": "Examine children of this entry to see if there is a better fit",
              "reasons": [
                "Abstraction"
              ]
            }
          }
        },
        {
          "cwe_id": "330",
          "name": "Use of Insufficiently Random Values",
          "description": "The product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.",
          "score": 255.5089161401263,
          "matched_text": "CWE-330: Use of Insufficiently Random Values\n\nType: Class\n\nStatus: Stable\n\nDescription:\n\nThe product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.\n\nExtended Details:\n\nWhen product generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information.\n\nReal-World Examples:\n\n- CVE-2021-3692: PHP framework uses mt_rand() function (Marsenne Twister) when generating tokens\n\n- CVE-2020-7010: Cloud application on Kubernetes generates passwords using a weak random number generator based on deployment time.\n\n- CVE-2009-3278: Crypto product uses rand() library function to generate a recovery key, making it easier to conduct brute force attacks.\n\n- CVE-2009-3238: Random number generator can repeatedly generate the same value.\n\n- CVE-2009-2367: Web application generates predictable session IDs, allowing session hijacking.\n\n- CVE-2009-2158: Password recovery utility generates a relatively small number of random passwords, simplifying brute force attacks.\n\n- CVE-2009-0255: Cryptographic key created with a seed based on the system time.\n\n- CVE-2008-5162: Kernel function does not have a good entropy source just after boot.\n\n- CVE-2008-4905: Blogging software uses a hard-coded salt when calculating a password hash.\n\n- CVE-2008-4929: Bulletin board application uses insufficiently random names for uploaded files, allowing other users to access private files.\n\n- CVE-2008-3612: Handheld device uses predictable TCP sequence numbers, allowing spoofing or hijacking of TCP connections.\n\n- CVE-2008-2433: Web management console generates session IDs based on the login time, making it easier to conduct session hijacking.\n\n- CVE-2008-0166: SSL library uses a weak random number generator that only generates 65,536 unique keys.\n\n- CVE-2008-2108: Chain: insufficient precision causes extra zero bits to be assigned, reducing entropy for an API function that generates random numbers.\n\n- CVE-2008-2108: Chain: insufficient precision (CWE-1339) in random-number generator causes some zero bits to be reliably generated, reducing the amount of entropy (CWE-331)\n\n- CVE-2008-2020: CAPTCHA implementation does not produce enough different images, allowing bypass using a database of all possible checksums.\n\n- CVE-2008-0087: DNS client uses predictable DNS transaction IDs, allowing DNS spoofing.\n\n- CVE-2008-0141: Application generates passwords that are based on the time of day.\n\nTop 25 CWE Examples:\n\n- CVE-2021-38377: OX App Suite through 7.10.5 allows XSS via JavaScript code in an anchor HTML comment within truncated e-mail, because there is a predictable UUID with HTML transformation results.\n\n- CVE-2021-39249: Invision Community (aka IPS Community Suite or IP-Board) before 4.6.5.1 allows reflected XSS because the filenames of uploaded files become predictable through a brute-force attack against the PHP mt_rand function.\n\n- CVE-2021-24087: Azure IoT CLI extension Elevation of Privilege Vulnerability\n\n- CVE-2021-22309: There is insecure algorithm vulnerability in Huawei products. A module uses less random input in a secure mechanism. Attackers can exploit this vulnerability by brute forcing to obtain sensitive message. This can lead to information leak. Affected product versions include:USG9500 versions V500R001C30SPC200, V500R001C60SPC500,V500R005C00SPC200;USG9520 versions V500R005C00;USG9560 versions V500R005C00;USG9580 versions V500R005C00.\n\n- CVE-2021-3448: A flaw was found in dnsmasq in versions before 2.85. When configured to use a specific server for a given network interface, dnsmasq uses a fixed port while forwarding queries. An attacker on the network, able to find the outgoing port used by dnsmasq, only needs to guess the random transmission ID to forge a reply and get it accepted by dnsmasq. This flaw makes a DNS Cache Poisoning attack much easier. The highest threat from this vulnerability is to data integrity.\n\n- CVE-2021-23020: The NAAS 3.x before 3.10.0 API keys were generated using an insecure pseudo-random string and hashing algorithm which could lead to predictable keys.\n\n- CVE-2021-41829: Zoho ManageEngine Remote Access Plus before 10.1.2121.1 relies on the application's build number to calculate a certain encryption key.\n\n- CVE-2021-31520: A weak session token authentication bypass vulnerability in Trend Micro IM Security 1.6 and 1.6.5 could allow an remote attacker to guess currently logged-in administrators' session session token in order to gain access to the product's web management interface.\n\n- CVE-2021-0466: In startIpClient of ClientModeImpl.java, there is a possible identifier which could be used to track a device. This could lead to remote information disclosure to a proximal attacker, with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10Android ID: A-154114734\n\n- CVE-2021-24998: The Simple JWT Login WordPress plugin before 3.3.0 can be used to create new WordPress user accounts with a randomly generated password. The password is generated using the str_shuffle PHP function that \"does not generate cryptographically secure values, and should not be used for cryptographic purposes\" according to PHP's documentation.\n\n- CVE-2021-28099: In Netflix OSS Hollow, since the Files.exists(parent) is run before creating the directories, an attacker can pre-create these directories with wide permissions. Additionally, since an insecure source of randomness is used, the file names to be created can be deterministically calculated.\n\n- CVE-2022-22922: TP-Link TL-WA850RE Wi-Fi Range Extender before v6_200923 was discovered to use highly predictable and easily detectable session keys, allowing attackers to gain administrative privileges.\n\n- CVE-2022-23138: ZTE's MF297D product has cryptographic issues vulnerability. Due to the use of weak random values, the security of the device is reduced, and it may face the risk of attack.\n\n- CVE-2022-24406: OX App Suite through 7.10.6 allows SSRF because multipart/form-data boundaries are predictable, and this can lead to injection into internal Documentconverter API calls.\n\n- CVE-2022-30295: uClibc-ng through 1.0.40 and uClibc through 0.9.33.2 use predictable DNS transaction IDs that may lead to DNS cache poisoning. This is related to a reset of a value to 0x2.\n\n- CVE-2022-31157: LTI 1.3 Tool Library is a library used for building IMS-certified LTI 1.3 tool providers in PHP. Prior to version 5.0, the function used to generate random nonces was not sufficiently cryptographically complex. Users should upgrade to version 5.0 to receive a patch. There are currently no known workarounds.\n\n- CVE-2022-32296: The Linux kernel before 5.17.9 allows TCP servers to identify clients by observing what source ports are used. This occurs because of use of Algorithm 4 (\"Double-Hash Port Selection Algorithm\") of RFC 6056.\n\n- CVE-2022-40299: In Singular before 4.3.1, a predictable /tmp pathname is used (e.g., by sdb.cc), which allows local users to gain the privileges of other users via a procedure in a file under /tmp. NOTE: this CVE Record is about sdb.cc and similar files in the Singular interface that have predictable /tmp pathnames; this CVE Record is not about the lack of a safe temporary-file creation capability in the Singular language.\n\n- CVE-2021-26726: A remote code execution vulnerability affecting a Valmet DNA service listening on TCP port 1517, allows an attacker to execute commands with SYSTEM privileges This issue affects: Valmet DNA versions from Collection 2012 until Collection 2021.\n\n- CVE-2021-45487: In NetBSD through 9.2, the IPv4 ID generation algorithm does not use appropriate cryptographic measures.\n\n- CVE-2021-45488: In NetBSD through 9.2, there is an information leak in the TCP ISN (ISS) generation algorithm.\n\nRelated Weaknesses:\n\n- CWE-693 (ChildOf)\n\n- CWE-804 (CanPrecede)",
          "type": "Class",
          "source": "sparse",
          "search_source": "rootcause:weak hash function",
          "sources": [
            "base",
            "rootcause"
          ],
          "boost_factor": 3.0,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Discouraged",
              "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
              "comments": "Examine children of this entry to see if there is a better fit",
              "reasons": [
                "Abstraction"
              ]
            }
          }
        },
        {
          "cwe_id": "916",
          "name": "Use of Password Hash With Insufficient Computational Effort",
          "description": "The product generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.",
          "score": 243.9991156743613,
          "matched_text": "CWE-916: Use of Password Hash With Insufficient Computational Effort\n\nType: Base\n\nStatus: Incomplete\n\nDescription:\n\nThe product generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.\n\nExtended Details:\n\n\n\nMany password storage mechanisms compute a hash and store the hash, instead of storing the original password in plaintext. In this design, authentication involves accepting an incoming password, computing its hash, and comparing it to the stored hash.\n\n\nMany hash algorithms are designed to execute quickly with minimal overhead, even cryptographic hashes. However, this efficiency is a problem for password storage, because it can reduce an attacker's workload for brute-force password cracking. If an attacker can obtain the hashes through some other method (such as SQL injection on a database that stores hashes), then the attacker can store the hashes offline and use various techniques to crack the passwords by computing hashes efficiently. Without a built-in workload, modern attacks can compute large numbers of hashes, or even exhaust the entire space of all possible passwords, within a very short amount of time, using massively-parallel computing (such as cloud computing) and GPU, ASIC, or FPGA hardware. In such a scenario, an efficient hash algorithm helps the attacker.\n\n\nThere are several properties of a hash scheme that are relevant to its strength against an offline, massively-parallel attack:\n\n\n  - The amount of CPU time required to compute the hash (\"stretching\")\n\n  - The amount of memory required to compute the hash (\"memory-hard\" operations)\n\n  - Including a random value, along with the password, as input to the hash computation (\"salting\")\n\n  - Given a hash, there is no known way of determining an input (e.g., a password) that produces this hash value, other than by guessing possible inputs (\"one-way\" hashing)\n\n  - Relative to the number of all possible hashes that can be generated by the scheme, there is a low likelihood of producing the same hash for multiple different inputs (\"collision resistance\")\n\nNote that the security requirements for the product may vary depending on the environment and the value of the passwords. Different schemes might not provide all of these properties, yet may still provide sufficient security for the environment. Conversely, a solution might be very strong in preserving one property, which still being very weak for an attack against another property, or it might not be able to significantly reduce the efficiency of a massively-parallel attack.\n\nReal-World Examples:\n\n- CVE-2008-1526: Router does not use a salt with a hash, making it easier to crack passwords.\n\n- CVE-2006-1058: Router does not use a salt with a hash, making it easier to crack passwords.\n\n- CVE-2008-4905: Blogging software uses a hard-coded salt when calculating a password hash.\n\n- CVE-2002-1657: Database server uses the username for a salt when encrypting passwords, simplifying brute force attacks.\n\n- CVE-2001-0967: Server uses a constant salt when encrypting passwords, simplifying brute force attacks.\n\n- CVE-2005-0408: chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.\n\nTop 25 CWE Examples:\n\n- CVE-2020-25754: An issue was discovered on Enphase Envoy R3.x and D4.x devices. There is a custom PAM module for user authentication that circumvents traditional user authentication. This module uses a password derived from the MD5 hash of the username and serial number. The serial number can be retrieved by an unauthenticated user at /info.xml. Attempts to change the user password via passwd or other tools have no effect.\n\n- CVE-2021-22741: Use of Password Hash with Insufficient Computational Effort vulnerability exists in ClearSCADA (all versions), EcoStruxure Geo SCADA Expert 2019 (all versions), and EcoStruxure Geo SCADA Expert 2020 (V83.7742.1 and prior), which could cause the revealing of account credentials when server database files are available. Exposure of these files to an attacker can make the system vulnerable to password decryption attacks. Note that \u201c.sde\u201d configuration export files do not contain user account password hashes.\n\n- CVE-2021-32519: Use of password hash with insufficient computational effort vulnerability in QSAN Storage Manager, XEVO, SANOS allows remote attackers to recover the plain-text password by brute-forcing the MD5 hash. The referred vulnerability has been solved with the updated version of QSAN Storage Manager v3.3.2, QSAN XEVO v2.1.0, and QSAN SANOS v2.1.0.\n\n- CVE-2021-33003: Delta Electronics DIAEnergie Version 1.7.5 and prior may allow an attacker to retrieve passwords in cleartext due to a weak hashing algorithm.\n\n- CVE-2021-37551: In JetBrains YouTrack before 2021.2.16363, system user passwords were hashed with SHA-256.\n\n- CVE-2021-38400: An attacker with physical access to Boston Scientific Zoom Latitude Model 3120 can remove the hard disk drive or create a specially crafted USB to extract the password hash for brute force reverse engineering of the system password.\n\n- CVE-2020-14516: In Rockwell Automation FactoryTalk Services Platform Versions 6.10.00 and 6.11.00, there is an issue with the implementation of the SHA-256 hashing algorithm with FactoryTalk Services Platform that prevents the user password from being hashed properly.\n\n- CVE-2021-36767: In Digi RealPort through 4.10.490, authentication relies on a challenge-response mechanism that gives access to the server password, making the protection ineffective. An attacker may send an unauthenticated request to the server. The server will reply with a weakly-hashed version of the server's access password. The attacker may then crack this hash offline in order to successfully login to the server.\n\n- CVE-2021-32997: The affected Baker Hughes Bentley Nevada products (3500 System 1 6.x, Part No. 3060/00 versions 6.98 and prior, 3500 System 1, Part No. 3071/xx & 3072/xx versions 21.1 HF1 and prior, 3500 Rack Configuration, Part No. 129133-01 versions 6.4 and prior, and 3500/22M Firmware, Part No. 288055-01 versions 5.05 and prior) utilize a weak encryption algorithm for storage and transmission of sensitive data, which may allow an attacker to more easily obtain credentials used for access.\n\n- CVE-2022-0022: Usage of a weak cryptographic algorithm in Palo Alto Networks PAN-OS software where the password hashes of administrator and local user accounts are not created with a sufficient level of computational effort, which allows for password cracking attacks on accounts in normal (non-FIPS-CC) operational mode. An attacker must have access to the account password hashes to take advantage of this weakness and can acquire those hashes if they are able to gain access to the PAN-OS software configuration. Fixed versions of PAN-OS software use a secure cryptographic algorithm for account password hashes. This issue does not impact Prisma Access firewalls. This issue impacts: PAN-OS 8.1 versions earlier than PAN-OS 8.1.21; All versions of PAN-OS 9.0; PAN-OS 9.1 versions earlier than PAN-OS 9.1.11; PAN-OS 10.0 versions earlier than PAN-OS 10.0.7.\n\n- CVE-2022-23348: BigAnt Software BigAnt Server v5.6.06 was discovered to utilize weak password hashes.\n\n- CVE-2022-26115: A use of password hash with insufficient computational effort vulnerability [CWE-916] in FortiSandbox before 4.2.0 may allow an attacker with access to the password database to efficiently mount bulk guessing attacks to recover the passwords.\n\n- CVE-2022-40258: AMI Megarac Weak password hashes for Redfish & API \n\n- CVE-2022-24041: A vulnerability has been identified in Desigo DXR2 (All versions < V01.21.142.5-22), Desigo PXC3 (All versions < V01.21.142.4-18), Desigo PXC4 (All versions < V02.20.142.10-10884), Desigo PXC5 (All versions < V02.20.142.10-10884). The web application stores the PBKDF2 derived key of users passwords with a low iteration count. An attacker with user profile access privilege can retrieve the stored password hashes of other accounts and then successfully perform an offline cracking attack and recover the plaintext passwords of other users.\n\nRelated Weaknesses:\n\n- CWE-328 (ChildOf)\n\n- CWE-327 (ChildOf)",
          "type": "Base",
          "source": "sparse",
          "search_source": "rootcause:weak hash function",
          "sources": [
            "base",
            "rootcause"
          ],
          "boost_factor": 3.0,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            }
          }
        },
        {
          "cwe_id": "294",
          "name": "Authentication Bypass by Capture-replay",
          "description": "A capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).",
          "score": 222.06386444460597,
          "matched_text": "CWE-294: Authentication Bypass by Capture-replay\n\nType: Base\n\nStatus: Incomplete\n\nDescription:\n\nA capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).\n\nExtended Details:\n\nCapture-replay attacks are common and can be difficult to defeat without cryptography. They are a subset of network injection attacks that rely on observing previously-sent valid commands, then changing them slightly if necessary and resending the same commands to the server.\n\nReal-World Examples:\n\n- CVE-2005-3435: product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.\n\n- CVE-2007-4961: Chain: cleartext transmission of the MD5 hash of password (CWE-319) enables attacks against a server that is susceptible to replay (CWE-294).\n\nTop 25 CWE Examples:\n\n- CVE-2021-31958: Windows NTLM Elevation of Privilege Vulnerability\n\n- CVE-2021-26824: DM FingerTool v1.19 in the DM PD065 Secure USB is susceptible to improper authentication by a replay attack, allowing local attackers to bypass user authentication and access all features and data on the USB.\n\n- CVE-2021-27572: An issue was discovered in Emote Remote Mouse through 4.0.0.0. Authentication Bypass can occur via Packet Replay. Remote unauthenticated users can execute arbitrary code via crafted UDP packets even when passwords are set.\n\n- CVE-2021-41030: An authentication bypass by capture-replay vulnerability [CWE-294] in FortiClient EMS versions 7.0.1 and below and 6.4.4 and below may allow an unauthenticated attacker to impersonate an existing user by intercepting and re-using valid SAML authentication messages.\n\n- CVE-2022-22806: A CWE-294: Authentication Bypass by Capture-replay vulnerability exists that could cause an unauthenticated connection to the UPS when a malformed connection is sent. Affected Product: SmartConnect Family: SMT Series (SMT Series ID=1015: UPS 04.5 and prior), SMC Series (SMC Series ID=1018: UPS 04.2 and prior), SMTL Series (SMTL Series ID=1026: UPS 02.9 and prior), SCL Series (SCL Series ID=1029: UPS 02.5 and prior / SCL Series ID=1030: UPS 02.5 and prior / SCL Series ID=1036: UPS 02.5 and prior / SCL Series ID=1037: UPS 03.1 and prior), SMX Series (SMX Series ID=1031: UPS 03.1 and prior)\n\n- CVE-2022-25159: Authentication Bypass by Capture-replay vulnerability in Mitsubishi Electric MELSEC iQ-F series FX5U(C) CPU all versions, Mitsubishi Electric MELSEC iQ-F series FX5UJ CPU all versions, Mitsubishi Electric MELSEC iQ-R series R00/01/02CPU all versions, Mitsubishi Electric MELSEC iQ-R series R04/08/16/32/120(EN)CPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120SFCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PSFCPU all versions, Mitsubishi Electric MELSEC iQ-R series R16/32/64MTCPU all versions, Mitsubishi Electric MELSEC iQ-R series RJ71C24(-R2/R4) all versions, Mitsubishi Electric MELSEC iQ-R series RJ71EN71 all versions, Mitsubishi Electric MELSEC iQ-R series RJ72GF15-T2 all versions, Mitsubishi Electric MELSEC Q series Q03/04/06/13/26UDVCPU all versions, Mitsubishi Electric MELSEC Q series Q04/06/13/26UDPVCPU all versions, Mitsubishi Electric MELSEC Q series QJ71C24N(-R2/R4) all versions and Mitsubishi Electric MELSEC Q series QJ71E71-100 all versions allows a remote unauthenticated attacker to login to the product by replay attack.\n\n- CVE-2022-30466: joyebike Joy ebike Wolf Manufacturing year 2022 is vulnerable to Authentication Bypass by Capture-replay.\n\n- CVE-2022-33208: Authentication bypass by capture-replay vulnerability exists in Machine automation controller NJ series all models V 1.48 and earlier, Machine automation controller NX7 series all models V1.28 and earlier, Machine automation controller NX1 series all models V1.48 and earlier, Automation software 'Sysmac Studio' all models V1.49 and earlier, and Programmable Terminal (PT) NA series NA5-15W/NA5-12W/NA5-9W/NA5-7W models Runtime V1.15 and earlier, which may allow a remote attacker who can analyze the communication between the affected controller and automation software 'Sysmac Studio' and/or a Programmable Terminal (PT) to access the controller.\n\n- CVE-2022-33971: Authentication bypass by capture-replay vulnerability exists in Machine automation controller NX7 series all models V1.28 and earlier, Machine automation controller NX1 series all models V1.48 and earlier, and Machine automation controller NJ series all models V 1.48 and earlier, which may allow an adjacent attacker who can analyze the communication between the controller and the specific software used by OMRON internally to cause a denial-of-service (DoS) condition or execute a malicious program.\n\n- CVE-2022-45789: A CWE-294: Authentication Bypass by Capture-replay vulnerability exists that could cause execution of unauthorized Modbus functions on the controller when hijacking an authenticated Modbus session. Affected Products: EcoStruxure Control Expert (All Versions), EcoStruxure Process Expert (All Versions), Modicon M340 CPU - part numbers BMXP34* (All Versions), Modicon M580 CPU - part numbers BMEP* and BMEH* (All Versions), Modicon M580 CPU Safety - part numbers BMEP58*S and BMEH58*S (All Versions) \n\n- CVE-2021-22640: An attacker can decrypt the Ovarro TBox login password by communication capture and brute force attacks.\n\n- CVE-2021-38296: Apache Spark supports end-to-end encryption of RPC connections via \"spark.authenticate\" and \"spark.network.crypto.enabled\". In versions 3.1.2 and earlier, it uses a bespoke mutual authentication protocol that allows for full encryption key recovery. After an initial interactive attack, this would allow someone to decrypt plaintext traffic offline. Note that this does not affect security mechanisms controlled by \"spark.authenticate.enableSaslEncryption\", \"spark.io.encryption.enabled\", \"spark.ssl\", \"spark.ui.strictTransportSecurity\". Update to Apache Spark 3.1.3 or later\n\n- CVE-2022-22936: An issue was discovered in SaltStack Salt in versions before 3002.8, 3003.4, 3004.1. Job publishes and file server replies are susceptible to replay attacks, which can result in an attacker replaying job publishes causing minions to run old jobs. File server replies can also be re-played. A sufficient craft attacker could gain root access on minion under certain scenarios.\n\n- CVE-2022-29878: A vulnerability has been identified in SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00). Affected devices use a limited range for challenges that are sent during the unencrypted challenge-response communication. An unauthenticated attacker could capture a valid challenge-response pair generated by a legitimate user, and request the webpage repeatedly to wait for the same challenge to reappear for which the correct response is known. This could allow the attacker to access the management interface of the device.\n\n- CVE-2022-40621: Because the WAVLINK Quantum D4G (WN531G3) running firmware version M31G3.V5030.200325 and earlier communicates over HTTP and not HTTPS, and because the hashing mechanism does not rely on a server-supplied key, it is possible for an attacker with sufficient network access to capture the hashed password of a logged on user and use it in a classic Pass-the-Hash style attack.\n\n- CVE-2022-41541: TP-Link AX10v1 V1_211117 allows attackers to execute a replay attack by using a previously transmitted encrypted authentication message and valid authentication token. Attackers are able to login to the web application as an admin user.\n\n- CVE-2022-29334: An issue in H v1.0 allows attackers to bypass authentication via a session replay attack.\n\n- CVE-2022-31158: LTI 1.3 Tool Library is a library used for building IMS-certified LTI 1.3 tool providers in PHP. Prior to version 5.0, the Nonce Claim Value was not being validated against the nonce value sent in the Authentication Request. Users should upgrade to version 5.0 to receive a patch. There are currently no known workarounds.\n\nRelated Weaknesses:\n\n- CWE-1390 (ChildOf)\n\n- CWE-287 (ChildOf)",
          "type": "Base",
          "source": "sparse",
          "search_source": "rootcause:weak hash function",
          "sources": [
            "base",
            "rootcause"
          ],
          "boost_factor": 3.0,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            }
          }
        },
        {
          "cwe_id": "327",
          "name": "Use of a Broken or Risky Cryptographic Algorithm",
          "description": "The product uses a broken or risky cryptographic algorithm or protocol.",
          "score": 221.87128005934323,
          "matched_text": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm\n\nType: Class\n\nStatus: Draft\n\nDescription:\n\nThe product uses a broken or risky cryptographic algorithm or protocol.\n\nExtended Details:\n\n\n\nCryptographic algorithms are the methods by which data is scrambled to prevent observation or influence by unauthorized actors. Insecure cryptography can be exploited to expose sensitive information, modify data in unexpected ways, spoof identities of other users or devices, or other impacts.\n\n\nIt is very difficult to produce a secure algorithm, and even high-profile algorithms by accomplished cryptographic experts have been broken. Well-known techniques exist to break or weaken various kinds of cryptography. Accordingly, there are a small number of well-understood and heavily studied algorithms that should be used by most products. Using a non-standard or known-insecure algorithm is dangerous because a determined adversary may be able to break the algorithm and compromise whatever data has been protected.\n\n\nSince the state of cryptography advances so rapidly, it is common for an algorithm to be considered \"unsafe\" even if it was once thought to be strong. This can happen when new attacks are discovered, or if computing power increases so much that the cryptographic algorithm no longer provides the amount of protection that was originally thought.\n\n\nFor a number of reasons, this weakness is even more challenging to manage with hardware deployment of cryptographic algorithms as opposed to software implementation. First, if a flaw is discovered with hardware-implemented cryptography, the flaw cannot be fixed in most cases without a recall of the product, because hardware is not easily replaceable like software. Second, because the hardware product is expected to work for years, the adversary's computing power will only increase over time.\n\n\nReal-World Examples:\n\n- CVE-2022-30273: SCADA-based protocol supports a legacy encryption mode that uses Tiny Encryption Algorithm (TEA) in ECB mode, which leaks patterns in messages and cannot protect integrity\n\n- CVE-2022-30320: Programmable Logic Controller (PLC) uses a protocol with a cryptographically insecure hashing algorithm for passwords.\n\n- CVE-2008-3775: Product uses \"ROT-25\" to obfuscate the password in the registry.\n\n- CVE-2007-4150: product only uses \"XOR\" to obfuscate sensitive data\n\n- CVE-2007-5460: product only uses \"XOR\" and a fixed key to obfuscate sensitive data\n\n- CVE-2005-4860: Product substitutes characters with other characters in a fixed way, and also leaves certain input characters unchanged.\n\n- CVE-2002-2058: Attackers can infer private IP addresses by dividing each octet by the MD5 hash of '20'.\n\n- CVE-2008-3188: Product uses DES when MD5 has been specified in the configuration, resulting in weaker-than-expected password hashes.\n\n- CVE-2005-2946: Default configuration of product uses MD5 instead of stronger algorithms that are available, simplifying forgery of certificates.\n\n- CVE-2007-6013: Product uses the hash of a hash for authentication, allowing attackers to gain privileges if they can obtain the original hash.\n\nTop 25 CWE Examples:\n\n- CVE-2020-15128: In OctoberCMS before version 1.0.468, encrypted cookie values were not tied to the name of the cookie the value belonged to. This meant that certain classes of attacks that took advantage of other theoretical vulnerabilities in user facing code (nothing exploitable in the core project itself) had a higher chance of succeeding. Specifically, if your usage exposed a way for users to provide unfiltered user input and have it returned to them as an encrypted cookie (ex. storing a user provided search query in a cookie) they could then use the generated cookie in place of other more tightly controlled cookies; or if your usage exposed the plaintext version of an encrypted cookie at any point to the user they could theoretically provide encrypted content from your application back to it as an encrypted cookie and force the framework to decrypt it for them. Issue has been fixed in build 468 (v1.0.468).\n\n- CVE-2020-4965: IBM Jazz Team Server products use weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 192422.\n\n- CVE-2021-20337: IBM QRadar SIEM 7.3.0 to 7.3.3 Patch 8 and 7.4.0 to 7.4.3 GA uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 194448.\n\n- CVE-2021-27457: A vulnerability has been found in multiple revisions of Emerson Rosemount X-STREAM Gas Analyzer. The affected products utilize a weak encryption algorithm for storage of sensitive data, which may allow an attacker to more easily obtain credentials used for access.\n\n- CVE-2021-29694: IBM Spectrum Protect Plus 10.1.0 through 10.1.7 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 200258.\n\n- CVE-2021-29794: IBM Tivoli Netcool/Impact 7.1.0.20 and 7.1.0.21 uses an insecure SSH server configuration which enables weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 203556.\n\n- CVE-2021-31796: An inadequate encryption vulnerability discovered in CyberArk Credential Provider before 12.1 may lead to Information Disclosure. An attacker may realistically have enough information that the number of possible keys (for a credential file) is only one, and the number is usually not higher than 2^36.\n\n- CVE-2020-24587: The 802.11 standard that underpins Wi-Fi Protected Access (WPA, WPA2, and WPA3) and Wired Equivalent Privacy (WEP) doesn't require that all fragments of a frame are encrypted under the same key. An adversary can abuse this to decrypt selected fragments when another device sends fragmented frames and the WEP, CCMP, or GCMP encryption key is periodically renewed.\n\n- CVE-2020-24588: The 802.11 standard that underpins Wi-Fi Protected Access (WPA, WPA2, and WPA3) and Wired Equivalent Privacy (WEP) doesn't require that the A-MSDU flag in the plaintext QoS header field is authenticated. Against devices that support receiving non-SSP A-MSDU frames (which is mandatory as part of 802.11n), an adversary can abuse this to inject arbitrary network packets.\n\n- CVE-2020-26140: An issue was discovered in the ALFA Windows 10 driver 6.1316.1209 for AWUS036H. The WEP, WPA, WPA2, and WPA3 implementations accept plaintext frames in a protected Wi-Fi network. An adversary can abuse this to inject arbitrary data frames independent of the network configuration.\n\n- CVE-2021-22170: Assuming a database breach, nonce reuse issues in GitLab 11.6+ allows an attacker to decrypt some of the database's encrypted content\n\n- CVE-2021-37546: In JetBrains TeamCity before 2021.1, an insecure key generation mechanism for encrypted properties was used.\n\n- CVE-2021-37587: In Charm 0.43, any single user can decrypt DAC-MACS or MA-ABE-YJ14 data.\n\n- CVE-2021-40528: The ElGamal implementation in Libgcrypt before 1.9.4 allows plaintext recovery because, during interaction between two cryptographic libraries, a certain dangerous combination of the prime defined by the receiver's public key, the generator defined by the receiver's public key, and the sender's ephemeral exponents can lead to a cross-configuration attack against OpenPGP.\n\n- CVE-2021-40529: The ElGamal implementation in Botan through 2.18.1, as used in Thunderbird and other products, allows plaintext recovery because, during interaction between two cryptographic libraries, a certain dangerous combination of the prime defined by the receiver's public key, the generator defined by the receiver's public key, and the sender's ephemeral exponents can lead to a cross-configuration attack against OpenPGP.\n\n- CVE-2021-40530: The ElGamal implementation in Crypto++ through 8.5 allows plaintext recovery because, during interaction between two cryptographic libraries, a certain dangerous combination of the prime defined by the receiver's public key, the generator defined by the receiver's public key, and the sender's ephemeral exponents can lead to a cross-configuration attack against OpenPGP.\n\n- CVE-2021-31352: An Information Exposure vulnerability in Juniper Networks SRC Series devices configured for NETCONF over SSH permits the negotiation of weak ciphers, which could allow a remote attacker to obtain sensitive information. A remote attacker with read and write access to network data could exploit this vulnerability to display plaintext bits from a block of ciphertext and obtain sensitive information. This issue affects all Juniper Networks SRC Series versions prior to 4.13.0-R6.\n\n- CVE-2021-36298: Dell EMC InsightIQ, versions prior to 4.1.4, contain risky cryptographic algorithms in the SSH component. A remote unauthenticated attacker could potentially exploit this vulnerability leading to authentication bypass and remote takeover of the InsightIQ. This allows an attacker to take complete control of InsightIQ to affect services provided by SSH; so Dell recommends customers to upgrade at the earliest opportunity.\n\n- CVE-2021-41263: rails_multisite provides multi-db support for Rails applications. In affected versions this vulnerability impacts any Rails applications using `rails_multisite` alongside Rails' signed/encrypted cookies. Depending on how the application makes use of these cookies, it may be possible for an attacker to re-use cookies on different 'sites' within a multi-site Rails application. The issue has been patched in v4 of the `rails_multisite` gem. Note that this upgrade will invalidate all previous signed/encrypted cookies. The impact of this invalidation will vary based on the application architecture.\n\n- CVE-2021-32001: K3s in SUSE Rancher allows any user with direct access to the datastore, or a copy of a datastore backup, to extract the cluster's confidential keying material (cluster certificate authority private keys, secrets encryption configuration passphrase, etc.) and decrypt it, without having to know the token value. This issue affects: SUSE Rancher K3s version v1.19.12+k3s1, v1.20.8+k3s1, v1.21.2+k3s1 and prior versions; RKE2 version v1.19.12+rke2r1, v1.20.8+rke2r1, v1.21.2+rke2r1 and prior versions.\n\n- CVE-2020-36315: In RELIC before 2020-08-01, RSA PKCS#1 v1.5 signature forgery can occur because certain checks of the padding (and of the first two bytes) are inadequate. NOTE: this requires that a low public exponent (such as 3) is being used. The product, by default, does not generate RSA keys with such a low number.\n\n- CVE-2021-40006: Vulnerability of design defects in the security algorithm component. Successful exploitation of this vulnerability may affect confidentiality. \n\n- CVE-2021-38542: Apache James prior to release 3.6.1 is vulnerable to a buffering attack relying on the use of the STARTTLS command. This can result in Man-in -the-middle command injection attacks, leading potentially to leakage of sensible information.\n\n- CVE-2021-43808: Laravel is a web application framework. Laravel prior to versions 8.75.0, 7.30.6, and 6.20.42 contain a possible cross-site scripting (XSS) vulnerability in the Blade templating engine. A broken HTML element may be clicked and the user taken to another location in their browser due to XSS. This is due to the user being able to guess the parent placeholder SHA-1 hash by trying common names of sections. If the parent template contains an exploitable HTML structure an XSS vulnerability can be exposed. This vulnerability has been patched in versions 8.75.0, 7.30.6, and 6.20.42 by determining the parent placeholder at runtime and using a random hash that is unique to each request.\n\n- CVE-2021-31562: The SSL/TLS configuration of Fresenius Kabi Agilia Link + version 3.0 has serious deficiencies that may allow an attacker to compromise SSL/TLS sessions in different ways. An attacker may be able to eavesdrop on transferred data, manipulate data allegedly secured by SSL/TLS, and impersonate an entity to gain access to sensitive information.\n\n- CVE-2021-2351: Vulnerability in the Advanced Networking Option component of Oracle Database Server. Supported versions that are affected are 12.1.0.2, 12.2.0.1 and 19c. Difficult to exploit vulnerability allows unauthenticated attacker with network access via Oracle Net to compromise Advanced Networking Option. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Advanced Networking Option, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Advanced Networking Option. Note: The July 2021 Critical Patch Update introduces a number of Native Network Encryption changes to deal with vulnerability CVE-2021-2351 and prevent the use of weaker ciphers. Customers should review: \"Changes in Native Network Encryption with the July 2021 Critical Patch Update\" (Doc ID 2791571.1). CVSS 3.1 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).\n\n- CVE-2021-37588: In Charm 0.43, any two users can collude to achieve the ability to decrypt YCT14 data.\n\n- CVE-2021-43774: A risky-algorithm issue was discovered on Fujifilm DocuCentre-VI C4471 1.8 devices. An attacker that obtained access to the administrative web interface of a printer (e.g., by using the default credentials) can download the address book file, which contains the list of users (domain users, FTP users, etc.) stored on the printer, together with their encrypted passwords. The passwords are protected by a weak cipher, such as ROT13, which requires minimal effort to instantly retrieve the original password, giving the attacker a list of valid domain or FTP usernames and passwords.\n\n- CVE-2021-43989: mySCADA myPRO Versions 8.20.0 and prior stores passwords using MD5, which may allow an attacker to crack the previously retrieved password hashes.\n\n- CVE-2021-45512: Certain NETGEAR devices are affected by weak cryptography. This affects D7000v2 before 1.0.0.62, D8500 before 1.0.3.50, EX3700 before 1.0.0.84, EX3800 before 1.0.0.84, EX6120 before 1.0.0.54, EX6130 before 1.0.0.36, EX7000 before 1.0.1.90, R6250 before 1.0.4.42, R6400v2 before 1.0.4.98, R6700v3 before 1.0.4.98, R6900P before 1.3.2.124, R7000 before 1.0.11.106, R7000P before 1.3.2.124, R7100LG before 1.0.0.56, R7900 before 1.0.4.26, R8000 before 1.0.4.58, R8300 before 1.0.2.134, R8500 before 1.0.2.134, RS400 before 1.5.0.48, WNR3500Lv2 before 1.2.0.62, and XR300 before 1.0.3.50.\n\n- CVE-2021-45696: An issue was discovered in the sha2 crate 0.9.7 before 0.9.8 for Rust. Hashes of long messages may be incorrect when the AVX2-accelerated backend is used.\n\n- CVE-2022-0377: Users of the LearnPress WordPress plugin before 4.1.5 can upload an image as a profile avatar after the registration. After this process the user crops and saves the image. Then a \"POST\" request that contains user supplied name of the image is sent to the server for renaming and cropping of the image. As a result of this request, the name of the user-supplied image is changed with a MD5 value. This process can be conducted only when type of the image is JPG or PNG. An attacker can use this vulnerability in order to rename an arbitrary image file. By doing this, they could destroy the design of the web site.\n\n- CVE-2022-1252: Use of a Broken or Risky Cryptographic Algorithm in GitHub repository gnuboard/gnuboard5 prior to and including 5.5.5. A vulnerability in gnuboard v5.5.5 and below uses weak encryption algorithms leading to sensitive information exposure. This allows an attacker to derive the email address of any user, including when the 'Let others see my information.' box is ticked off. Or to send emails to any email address, with full control of its contents \n\n- CVE-2022-1434: The OpenSSL 3.0 implementation of the RC4-MD5 ciphersuite incorrectly uses the AAD data as the MAC key. This makes the MAC key trivially predictable. An attacker could exploit this issue by performing a man-in-the-middle attack to modify data being sent from one endpoint to an OpenSSL 3.0 recipient such that the modified data would still pass the MAC integrity check. Note that data sent from an OpenSSL 3.0 endpoint to a non-OpenSSL 3.0 endpoint will always be rejected by the recipient and the connection will fail at that point. Many application protocols require data to be sent from the client to the server first. Therefore, in such a case, only an OpenSSL 3.0 server would be impacted when talking to a non-OpenSSL 3.0 client. If both endpoints are OpenSSL 3.0 then the attacker could modify data being sent in both directions. In this case both clients and servers could be affected, regardless of the application protocol. Note that in the absence of an attacker this bug means that an OpenSSL 3.0 endpoint communicating with a non-OpenSSL 3.0 endpoint will fail to complete the handshake when using this ciphersuite. The confidentiality of data is not impacted by this issue, i.e. an attacker cannot decrypt data that has been encrypted using this ciphersuite - they can only modify it. In order for this attack to work both endpoints must legitimately negotiate the RC4-MD5 ciphersuite. This ciphersuite is not compiled by default in OpenSSL 3.0, and is not available within the default provider or the default ciphersuite list. This ciphersuite will never be used if TLSv1.3 has been negotiated. In order for an OpenSSL 3.0 endpoint to use this ciphersuite the following must have occurred: 1) OpenSSL must have been compiled with the (non-default) compile time option enable-weak-ssl-ciphers 2) OpenSSL must have had the legacy provider explicitly loaded (either through application code or via configuration) 3) The ciphersuite must have been explicitly added to the ciphersuite list 4) The libssl security level must have been set to 0 (default is 1) 5) A version of SSL/TLS below TLSv1.3 must have been negotiated 6) Both endpoints must negotiate the RC4-MD5 ciphersuite in preference to any others that both endpoints have in common Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2).\n\n- CVE-2022-20805: A vulnerability in the automatic decryption process in Cisco Umbrella Secure Web Gateway (SWG) could allow an authenticated, adjacent attacker to bypass the SSL decryption and content filtering policies on an affected system. This vulnerability is due to how the decryption function uses the TLS Sever Name Indication (SNI) extension of an HTTP request to discover the destination domain and determine if the request needs to be decrypted. An attacker could exploit this vulnerability by sending a crafted request over TLS from a client to an unknown or controlled URL. A successful exploit could allow an attacker to bypass the decryption process of Cisco Umbrella SWG and allow malicious content to be downloaded to a host on a protected network. There are workarounds that address this vulnerability.\n\n- CVE-2022-2097: AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).\n\n- CVE-2022-2781: In affected versions of Octopus Server it was identified that the same encryption process was used for both encrypting session cookies and variables.\n\n- CVE-2022-28164: Brocade SANnav before SANnav 2.2.0 application uses the Blowfish symmetric encryption algorithm for the storage of passwords. This could allow an authenticated attacker to decrypt stored account passwords.\n\n- CVE-2022-28382: An issue was discovered in certain Verbatim drives through 2022-03-31. Due to the use of an insecure encryption AES mode (Electronic Codebook, aka ECB), an attacker may be able to extract information even from encrypted data, for example by observing repeating byte patterns. The firmware of the USB-to-SATA bridge controller INIC-3637EN uses AES-256 with the ECB mode. This operation mode of block ciphers (e.g., AES) always encrypts identical plaintext data, in this case blocks of 16 bytes, to identical ciphertext data. For some data, for instance bitmap images, the lack of the cryptographic property called diffusion, within ECB, can leak sensitive information even in encrypted data. Thus, the use of the ECB operation mode can put the confidentiality of specific information at risk, even in an encrypted form. This affects Keypad Secure USB 3.2 Gen 1 Drive Part Number #49428, Store 'n' Go Secure Portable HDD GD25LK01-3637-C VER4.0, Executive Fingerprint Secure SSD GDMSFE01-INI3637-C VER1.1, and Fingerprint Secure Portable Hard Drive Part Number #53650.\n\n- CVE-2022-29960: Emerson OpenBSI through 2022-04-29 uses weak cryptography. It is an engineering environment for the ControlWave and Bristol Babcock line of RTUs. DES with hardcoded cryptographic keys is used for protection of certain system credentials, engineering files, and sensitive utilities.\n\n- CVE-2022-30320: Saia Burgess Controls (SBC) PCD through 2022-05-06 uses a Broken or Risky Cryptographic Algorithm. According to FSCT-2022-0063, there is a Saia Burgess Controls (SBC) PCD S-Bus weak credential hashing scheme issue. The affected components are characterized as: S-Bus (5050/UDP) authentication. The potential impact is: Authentication bypass. The Saia Burgess Controls (SBC) PCD controllers utilize the S-Bus protocol (5050/UDP) for a variety of engineering purposes. It is possible to configure a password in order to restrict access to sensitive engineering functionality. Authentication is done by using the S-Bus 'write byte' message to a specific address and supplying a hashed version of the password. The hashing algorithm used is based on CRC-16 and as such not cryptographically secure. An insecure hashing algorithm is used. An attacker capable of passively observing traffic can intercept the hashed credentials and trivially find collisions allowing for authentication without having to bruteforce a keyspace defined by the actual strength of the password. This allows the attacker access to sensitive engineering functionality such as uploading/downloading control logic and manipulating controller configuration.\n\n- CVE-2022-35513: The Blink1Control2 application <= 2.2.7 uses weak password encryption and an insecure method of storage.\n\n- CVE-2022-38493: Rhonabwy 0.9.99 through 1.1.x before 1.1.7 doesn't check the RSA private key length before RSA-OAEP decryption. This allows attackers to cause a Denial of Service via a crafted JWE (JSON Web Encryption) token.\n\n- CVE-2022-39237: syslabs/sif is the Singularity Image Format (SIF) reference implementation. In versions prior to 2.8.1the `github.com/sylabs/sif/v2/pkg/integrity` package did not verify that the hash algorithm(s) used are cryptographically secure when verifying digital signatures. A patch is available in version >= v2.8.1 of the module. Users are encouraged to upgrade. Users unable to upgrade may independently validate that the hash algorithm(s) used for metadata digest(s) and signature hash are cryptographically secure.\n\n- CVE-2022-28166: In Brocade SANnav version before SANN2.2.0.2 and Brocade SANNav before 2.1.1.8, the implementation of TLS/SSL Server Supports the Use of Static Key Ciphers (ssl-static-key-ciphers) on ports 443 & 18082.\n\n- CVE-2022-30187: Azure Storage Library Information Disclosure Vulnerability\n\n- CVE-2021-23839: OpenSSL 1.0.2 supports SSLv2. If a client attempts to negotiate SSLv2 with a server that is configured to support both SSLv2 and more recent SSL and TLS versions then a check is made for a version rollback attack when unpadding an RSA signature. Clients that support SSL or TLS versions greater than SSLv2 are supposed to use a special form of padding. A server that supports greater than SSLv2 is supposed to reject connection attempts from a client where this special form of padding is present, because this indicates that a version rollback has occurred (i.e. both client and server support greater than SSLv2, and yet this is the version that is being requested). The implementation of this padding check inverted the logic so that the connection attempt is accepted if the padding is present, and rejected if it is absent. This means that such as server will accept a connection if a version rollback attack has occurred. Further the server will erroneously reject a connection if a normal SSLv2 connection attempt is made. Only OpenSSL 1.0.2 servers from version 1.0.2s to 1.0.2x are affected by this issue. In order to be vulnerable a 1.0.2 server must: 1) have configured SSLv2 support at compile time (this is off by default), 2) have configured SSLv2 support at runtime (this is off by default), 3) have configured SSLv2 ciphersuites (these are not in the default ciphersuite list) OpenSSL 1.1.1 does not have SSLv2 support and therefore is not vulnerable to this issue. The underlying error is in the implementation of the RSA_padding_check_SSLv23() function. This also affects the RSA_SSLV23_PADDING padding mode used by various other functions. Although 1.1.1 does not support SSLv2 the RSA_padding_check_SSLv23() function still exists, as does the RSA_SSLV23_PADDING padding mode. Applications that directly call that function or use that padding mode will encounter this issue. However since there is no support for the SSLv2 protocol in 1.1.1 this is considered a bug and not a security issue in that version. OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.0.2y (Affected 1.0.2s-1.0.2x).\n\n- CVE-2021-20379: IBM Guardium Data Encryption (GDE) 3.0.0.3 and 4.0.0.4 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 195711.\n\n- CVE-2021-20406: IBM Security Verify Information Queue 1.0.6 and 1.0.7 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 196184. \n\n- CVE-2021-20419: IBM Security Guardium 11.2 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 196280.\n\n- CVE-2021-20441: IBM Security Verify Bridge uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 196617.\n\n- CVE-2021-20479: IBM Cloud Pak System 2.3.0 through 2.3.3.3 Interim Fix 1 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 197498.\n\n- CVE-2021-20497: IBM Security Verify Access Docker 10.0.0 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 197969\n\n- CVE-2021-20566: IBM Resilient SOAR V38.0 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 199238.\n\n- CVE-2021-22212: ntpkeygen can generate keys that ntpd fails to parse. NTPsec 1.2.0 allows ntpkeygen to generate keys with '#' characters. ntpd then either pads, shortens the key, or fails to load these keys entirely, depending on the key type and the placement of the '#'. This results in the administrator not being able to use the keys as expected or the keys are shorter than expected and easier to brute-force, possibly resulting in MITM attacks between ntp clients and ntp servers. For short AES128 keys, ntpd generates a warning that it is padding them.\n\n- CVE-2021-22356: There is a weak secure algorithm vulnerability in Huawei products. A weak secure algorithm is used in a module. Attackers can exploit this vulnerability by capturing and analyzing the messages between devices to obtain information. This can lead to information leak.Affected product versions include: IPS Module V500R005C00SPC100, V500R005C00SPC200; NGFW Module V500R005C00SPC100, V500R005C00SPC200; Secospace USG6300 V500R001C30SPC200, V500R001C30SPC600, V500R001C60SPC500, V500R005C00SPC100, V500R005C00SPC200; Secospace USG6500 V500R001C30SPC200, V500R001C30SPC600, V500R001C60SPC500, V500R005C00SPC100, V500R005C00SPC200; Secospace USG6600 V500R001C30SPC200, V500R001C30SPC600, V500R001C60SPC500, V500R005C00SPC100, V500R005C00SPC200; USG9500 V500R001C30SPC200, V500R001C30SPC600, V500R001C60SPC500, V500R005C00SPC100, V500R005C00SPC200.\n\n- CVE-2021-22738: Use of a Broken or Risky Cryptographic Algorithm vulnerability exists in homeLYnk (Wiser For KNX) and spaceLYnk V2.60 and prior that could cause unauthorized access when credentials are discovered after a brute force attack.\n\n- CVE-2021-25763: In JetBrains Ktor before 1.4.2, weak cipher suites were enabled by default.\n\n- CVE-2021-27756: \"TLS-RSA cipher suites are not disabled in BigFix Compliance up to v2.0.5. If TLS 2.0 and secure ciphers are not enabled then an attacker can passively record traffic and later decrypt it.\"\n\n- CVE-2021-29704: IBM Security SOAR uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information.\n\n- CVE-2021-29722: IBM Sterling Secure Proxy 6.0.1, 6.0.2, 2.4.3.2, and 3.4.3.2 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 201095.\n\n- CVE-2021-29723: IBM Sterling Secure Proxy 6.0.1, 6.0.2, 2.4.3.2, and 3.4.3.2 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-ForceID: 201100.\n\n- CVE-2021-29750: IBM QRadar SIEM 7.3 and 7.4 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 201778.\n\n- CVE-2021-29894: IBM Cloud Pak for Security (CP4S) 1.7.0.0, 1.7.1.0, 1.7.2.0, and 1.8.0.0 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 207320.\n\n- CVE-2021-32593: A use of a broken or risky cryptographic algorithm vulnerability [CWE-327] in the Dynamic Tunnel Protocol of FortiWAN before 4.5.9 may allow an unauthenticated remote attacker to decrypt and forge protocol communication messages.\n\n- CVE-2021-33018: The use of a broken or risky cryptographic algorithm in Philips Vue PACS versions 12.2.x.x and prior is an unnecessary risk that may result in the exposure of sensitive information.\n\n- CVE-2021-33846: Fresenius Kabi Vigilant Software Suite (Mastermed Dashboard) version 2.0.1.3 issues authentication tokens to authenticated users that are signed with a symmetric encryption key. An attacker in possession of the key can issue valid JWTs and impersonate arbitrary users.\n\n- CVE-2021-36647: Use of a Broken or Risky Cryptographic Algorithm in the function mbedtls_mpi_exp_mod() in lignum.c in Mbed TLS Mbed TLS all versions before 3.0.0, 2.27.0 or 2.16.11 allows attackers with access to precise enough timing and memory access information (typically an untrusted operating system attacking a secure enclave such as SGX or the TrustZone secure world) to recover the private keys used in RSA.\n\n- CVE-2021-38921: IBM Security Verify 10.0.0, 10.0.1.0, and 10.0.2.0 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 210067.\n\n- CVE-2021-39002: IBM DB2 for Linux, UNIX and Windows (includes DB2 Connect Server) 9.7, 10.1, 10.5, 11.1, and 11.5 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information.\n\n- CVE-2021-39058: IBM Spectrum Copy Data Management 2.2.13 and earlier uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 214617.\n\n- CVE-2021-39076: IBM Security Guardium 10.5 and 11.3 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt sensitive information. IBM X-Force ID: 215585.\n\n- CVE-2021-39082: IBM UrbanCode Deploy (UCD) 7.1.1.2 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information.\n\n- CVE-2021-41096: Rucky is a USB HID Rubber Ducky Launch Pad for Android. Versions 2.2 and earlier for release builds and versions 425 and earlier for nightly builds suffer from use of a weak cryptographic algorithm (RSA/ECB/PKCS1Padding). The issue will be patched in v2.3 for release builds and 426 onwards for nightly builds. As a workaround, one may disable an advance security feature if not required.\n\n- CVE-2021-41278: Functions SDK for EdgeX is meant to provide all the plumbing necessary for developers to get started in processing/transforming/exporting data out of the EdgeX IoT platform. In affected versions broken encryption in app-functions-sdk \u201cAES\u201d transform in EdgeX Foundry releases prior to Jakarta allows attackers to decrypt messages via unspecified vectors. The app-functions-sdk exports an \u201caes\u201d transform that user scripts can optionally call to encrypt data in the processing pipeline. No decrypt function is provided. Encryption is not enabled by default, but if used, the level of protection may be less than the user may expects due to a broken implementation. Version v2.1.0 (EdgeX Foundry Jakarta release and later) of app-functions-sdk-go/v2 deprecates the \u201caes\u201d transform and provides an improved \u201caes256\u201d transform in its place. The broken implementation will remain in a deprecated state until it is removed in the next EdgeX major release to avoid breakage of existing software that depends on the broken implementation. As the broken transform is a library function that is not invoked by default, users who do not use the AES transform in their processing pipelines are unaffected. Those that are affected are urged to upgrade to the Jakarta EdgeX release and modify processing pipelines to use the new \"aes256\" transform.\n\n- CVE-2021-42583: A Broken or Risky Cryptographic Algorithm exists in Max Mazurov Maddy before 0.5.2, which is an unnecessary risk that may result in the exposure of sensitive information.\n\n- CVE-2021-43550: The use of a broken or risky cryptographic algorithm is an unnecessary risk that may result in the exposure of sensitive information, which affects the communications between Patient Information Center iX (PIC iX) Versions C.02 and C.03 and Efficia CM Series Revisions A.01 to C.0x and 4.0.\n\n- CVE-2022-20117: In (TBD) of (TBD), there is a possible way to decrypt local data encrypted by the GSC due to improperly used crypto. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-217475903References: N/A\n\n- CVE-2022-22327: IBM UrbanCode Deploy (UCD) 7.0.5, 7.1.0, 7.1.1, and 7.1.2 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 218859.\n\n- CVE-2022-22461:  IBM Security Verify Governance, Identity Manager 10.0.1 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 225007. \n\n- CVE-2022-22462:  IBM Security Verify Governance, Identity Manager virtual appliance component 10.0.1 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 225078. \n\n- CVE-2022-22559: Dell PowerScale OneFS, version 9.3.0, contains a use of a broken or risky cryptographic algorithm. An unprivileged network attacker could exploit this vulnerability, leading to the potential for information disclosure.\n\n- CVE-2022-22564: Dell EMC Unity versions before 5.2.0.0.5.173 , use(es) broken cryptographic algorithm. A remote unauthenticated attacker could potentially exploit this vulnerability by performing MitM attacks and let attackers obtain sensitive information. \n\n- CVE-2022-24296: Use of a Broken or Risky Cryptographic Algorithm vulnerability in Air Conditioning System G-150AD Ver. 3.21 and prior, Air Conditioning System AG-150A-A Ver. 3.21 and prior, Air Conditioning System AG-150A-J Ver. 3.21 and prior, Air Conditioning System GB-50AD Ver. 3.21 and prior, Air Conditioning System GB-50ADA-A Ver. 3.21 and prior, Air Conditioning System GB-50ADA-J Ver. 3.21 and prior, Air Conditioning System EB-50GU-A Ver. 7.10 and prior, Air Conditioning System EB-50GU-J Ver. 7.10 and prior, Air Conditioning System AE-200J Ver. 7.97 and prior, Air Conditioning System AE-200A Ver. 7.97 and prior, Air Conditioning System AE-200E Ver. 7.97 and prior, Air Conditioning System AE-50J Ver. 7.97 and prior, Air Conditioning System AE-50A Ver. 7.97 and prior, Air Conditioning System AE-50E Ver. 7.97 and prior, Air Conditioning System EW-50J Ver. 7.97 and prior, Air Conditioning System EW-50A Ver. 7.97 and prior, Air Conditioning System EW-50E Ver. 7.97 and prior, Air Conditioning System TE-200A Ver. 7.97 and prior, Air Conditioning System TE-50A Ver. 7.97 and prior and Air Conditioning System TW-50A Ver. 7.97 and prior allows a remote unauthenticated attacker to cause a disclosure of encrypted message of the air conditioning systems by sniffing encrypted communications.\n\n- CVE-2022-26854: Dell PowerScale OneFS, versions 8.2.x-9.2.x, contain risky cryptographic algorithms. A remote unprivileged malicious attacker could potentially exploit this vulnerability, leading to full system access\n\n- CVE-2022-27581: Use of a Broken or Risky Cryptographic Algorithm in SICK RFU61x firmware version <v2.25 allows a low-privileged remote attacker to decrypt the encrypted data if the user requested weak cipher suites to be used for encryption via the SSH interface. The patch and installation procedure for the firmware update is available from the responsible SICK customer contact person.\n\n- CVE-2022-28622: A potential security vulnerability has been identified in HPE StoreOnce Software. The SSH server supports weak key exchange algorithms which could lead to remote unauthorized access. HPE has made the following software update to resolve the vulnerability in HPE StoreOnce Software 4.3.2.\n\n- CVE-2022-29217: PyJWT is a Python implementation of RFC 7519. PyJWT supports multiple different JWT signing algorithms. With JWT, an attacker submitting the JWT token can choose the used signing algorithm. The PyJWT library requires that the application chooses what algorithms are supported. The application can specify `jwt.algorithms.get_default_algorithms()` to get support for all algorithms, or specify a single algorithm. The issue is not that big as `algorithms=jwt.algorithms.get_default_algorithms()` has to be used. Users should upgrade to v2.4.0 to receive a patch for this issue. As a workaround, always be explicit with the algorithms that are accepted and expected when decoding.\n\n- CVE-2022-29249: JavaEZ is a library that adds new functions to make Java easier. A weakness in JavaEZ 1.6 allows force decryption of locked text by unauthorized actors. The issue is NOT critical for non-secure applications, however may be critical in a situation where the highest levels of security are required. This issue ONLY affects v1.6 and does not affect anything pre-1.6. The vulnerability has been patched in release 1.7. Currently, there is no way to fix the issue without upgrading.\n\n- CVE-2022-30111: Due to the use of an insecure algorithm for rolling codes in MCK Smartlock 1.0, allows attackers to unlock the mechanism via replay attacks.\n\n- CVE-2022-30273: The Motorola MDLC protocol through 2022-05-02 mishandles message integrity. It supports three security modes: Plain, Legacy Encryption, and New Encryption. In Legacy Encryption mode, traffic is encrypted via the Tiny Encryption Algorithm (TEA) block-cipher in ECB mode. This mode of operation does not offer message integrity and offers reduced confidentiality above the block level, as demonstrated by an ECB Penguin attack against any block ciphers.\n\n- CVE-2022-31230: Dell PowerScale OneFS, versions 8.2.x-9.2.x, contain broken or risky cryptographic algorithm. A remote unprivileged malicious attacker could potentially exploit this vulnerability, leading to full system access.\n\n- CVE-2022-34319: IBM CICS TX 11.7 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 229463.\n\n- CVE-2022-34320:  IBM CICS TX 11.1 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 229464. \n\n- CVE-2022-34361:  IBM Sterling Secure Proxy 6.0.3 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 230522. \n\n- CVE-2022-34444:  Dell PowerScale OneFS, versions 9.2.0.x through 9.4.0.x contain an information vulnerability. A remote unauthenticated attacker may potentially exploit this vulnerability to cause data leak. \n\n- CVE-2022-34632: Rocket-Chip commit 4f8114374d8824dfdec03f576a8cd68bebce4e56 was discovered to contain insufficient cryptography via the component /rocket/RocketCore.scala.\n\n- CVE-2022-34757: A CWE-327: Use of a Broken or Risky Cryptographic Algorithm vulnerability exists where weak cipher suites can be used for the SSH connection between Easergy Pro software and the device, which may allow an attacker to observe protected communication details. Affected Products: Easergy P5 (V01.401.102 and prior)\n\n- CVE-2022-35720: IBM Sterling External Authentication Server 6.1.0 and IBM Sterling Secure Proxy 6.0.3 uses weaker than expected cryptographic algorithms during installation that could allow a local attacker to decrypt sensitive information. IBM X-Force ID: 231373.\n\n- CVE-2022-38391:  IBM Spectrum Control 5.4 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 233982. \n\n- CVE-2022-4610: A vulnerability, which was classified as problematic, has been found in Click Studios Passwordstate and Passwordstate Browser Extension Chrome. Affected by this issue is some unknown functionality. The manipulation leads to risky cryptographic algorithm. Local access is required to approach this attack. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-216272.\n\n- CVE-2022-46140: Affected devices use a weak encryption scheme to encrypt the debug zip file. This could allow an authenticated attacker to decrypt the contents of the file and retrieve debug information about the system.\n\n- CVE-2022-46832: Use of a Broken or Risky Cryptographic Algorithm in SICK RFU62x firmware version < 2.21 allows a low-privileged remote attacker to decrypt the encrypted data if the user requested weak cipher suites to be used for encryption via the SSH interface. The patch and installation procedure for the firmware update is available from the responsible SICK customer contact person.\n\n- CVE-2022-46833: Use of a Broken or Risky Cryptographic Algorithm in SICK RFU63x firmware version < v2.21 allows a low-privileged remote attacker to decrypt the encrypted data if the user requested weak cipher suites to be used for encryption via the SSH interface. The patch and installation procedure for the firmware update is available from the responsible SICK customer contact person.\n\n- CVE-2022-46834: Use of a Broken or Risky Cryptographic Algorithm in SICK RFU65x firmware version < v2.21 allows a low-privileged remote attacker to decrypt the encrypted data if the user requested weak cipher suites to be used for encryption via the SSH interface. The patch and installation procedure for the firmware update is available from the responsible SICK customer contact person.\n\nRelated Weaknesses:\n\n- CWE-693 (ChildOf)\n\n- CWE-311 (PeerOf)",
          "type": "Class",
          "source": "sparse",
          "search_source": "rootcause:weak hash function",
          "sources": [
            "base",
            "rootcause"
          ],
          "boost_factor": 3.0,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed-with-Review",
              "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
              "comments": "Examine children of this entry to see if there is a better fit",
              "reasons": [
                "Abstraction"
              ]
            }
          }
        },
        {
          "cwe_id": "301",
          "name": "Reflection Attack in an Authentication Protocol",
          "description": "Simple authentication protocols are subject to reflection attacks if a malicious user can use the target machine to impersonate a trusted user.",
          "score": 221.28674836113777,
          "matched_text": "CWE-301: Reflection Attack in an Authentication Protocol\n\nType: Base\n\nStatus: Draft\n\nDescription:\n\nSimple authentication protocols are subject to reflection attacks if a malicious user can use the target machine to impersonate a trusted user.\n\nExtended Details:\n\n\n\nA mutual authentication protocol requires each party to respond to a random challenge by the other party by encrypting it with a pre-shared key. Often, however, such protocols employ the same pre-shared key for communication with a number of different entities. A malicious user or an attacker can easily compromise this protocol without possessing the correct key by employing a reflection attack on the protocol.\n\n\nReflection attacks capitalize on mutual authentication schemes in order to trick the target into revealing the secret shared between it and another valid user. In a basic mutual-authentication scheme, a secret is known to both the valid user and the server; this allows them to authenticate. In order that they may verify this shared secret without sending it plainly over the wire, they utilize a Diffie-Hellman-style scheme in which they each pick a value, then request the hash of that value as keyed by the shared secret. In a reflection attack, the attacker claims to be a valid user and requests the hash of a random value from the server. When the server returns this value and requests its own value to be hashed, the attacker opens another connection to the server. This time, the hash requested by the attacker is the value which the server requested in the first connection. When the server returns this hashed value, it is used in the first connection, authenticating the attacker successfully as the impersonated valid user.\n\n\nReal-World Examples:\n\n- CVE-2005-3435: product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.\n\nTop 25 CWE Examples:\n\n- CVE-2020-26558: Bluetooth LE and BR/EDR secure pairing in Bluetooth Core Specification 2.1 through 5.2 may permit a nearby man-in-the-middle attacker to identify the Passkey used during pairing (in the Passkey authentication procedure) by reflection of the public key and the authentication evidence of the initiating device, potentially permitting this attacker to complete authenticated pairing with the responding device using the correct Passkey for the pairing session. The attack methodology determines the Passkey value one bit at a time.\n\nRelated Weaknesses:\n\n- CWE-1390 (ChildOf)\n\n- CWE-327 (PeerOf)",
          "type": "Base",
          "source": "sparse",
          "search_source": "rootcause:weak hash function",
          "sources": [
            "base",
            "rootcause"
          ],
          "boost_factor": 3.0,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            }
          }
        },
        {
          "cwe_id": "674",
          "name": "Uncontrolled Recursion",
          "description": "The product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack.",
          "score": 217.8008214263568,
          "matched_text": "CWE-674: Uncontrolled Recursion\n\nType: Class\n\nStatus: Draft\n\nAlternative Terms:\n\nStack Exhaustion\n\nStack Exhaustion\n\nStack Exhaustion\n\nDescription:\n\nThe product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack.\n\nReal-World Examples:\n\n- CVE-2007-1285: Deeply nested arrays trigger stack exhaustion.\n\n- CVE-2007-3409: Self-referencing pointers create infinite loop and resultant stack exhaustion.\n\n- CVE-2016-10707: Javascript application accidentally changes input in a way that prevents a recursive call from detecting an exit condition.\n\n- CVE-2016-3627: An attempt to recover a corrupted XML file infinite recursion protection counter was not always incremented missing the exit condition.\n\n- CVE-2019-15118: USB-audio driver's descriptor code parsing allows unlimited recursion leading to stack exhaustion.\n\nTop 25 CWE Examples:\n\n- CVE-2020-18392: Stack overflow vulnerability in parse_array Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-18898: A stack exhaustion issue in the printIFDStructure function of Exiv2 0.27 allows remote attackers to cause a denial of service (DOS) via a crafted file.\n\n- CVE-2020-36366: Stack overflow vulnerability in parse_value Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36367: Stack overflow vulnerability in parse_block Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36368: Stack overflow vulnerability in parse_statement Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36369: Stack overflow vulnerability in parse_statement_list Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36370: Stack overflow vulnerability in parse_unary Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36371: Stack overflow vulnerability in parse_mul_div_rem Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36372: Stack overflow vulnerability in parse_plus_minus Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36373: Stack overflow vulnerability in parse_shifts Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36374: Stack overflow vulnerability in parse_comparison Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36375: Stack overflow vulnerability in parse_equality Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2021-20255: A stack overflow via an infinite recursion vulnerability was found in the eepro100 i8255x device emulator of QEMU. This issue occurs while processing controller commands due to a DMA reentry issue. This flaw allows a guest user or process to consume CPU cycles or crash the QEMU process on the host, resulting in a denial of service. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-27432: OPC Foundation UA .NET Standard versions prior to 1.4.365.48 and OPC UA .NET Legacy are vulnerable to an uncontrolled recursion, which may allow an attacker to trigger a stack overflow.\n\n- CVE-2021-27434: Products with Unified Automation .NET based OPC UA Client/Server SDK Bundle: Versions V3.0.7 and prior (.NET 4.5, 4.0, and 3.5 Framework versions only) are vulnerable to an uncontrolled recursion, which may allow an attacker to trigger a stack overflow.\n\n- CVE-2021-28903: A stack overflow in libyang <= v1.0.225 can cause a denial of service through function lyxml_parse_mem(). lyxml_parse_elem() function will be called recursively, which will consume stack space and lead to crash.\n\n- CVE-2021-29615: TensorFlow is an end-to-end open source platform for machine learning. The implementation of `ParseAttrValue`(https://github.com/tensorflow/tensorflow/blob/c22d88d6ff33031aa113e48aa3fc9aa74ed79595/tensorflow/core/framework/attr_value_util.cc#L397-L453) can be tricked into stack overflow due to recursion by giving in a specially crafted input. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n- CVE-2021-30470: A flaw was found in PoDoFo 0.9.7. An uncontrolled recursive call among PdfTokenizer::ReadArray(), PdfTokenizer::GetNextVariant() and PdfTokenizer::ReadDataType() functions can lead to a stack overflow.\n\n- CVE-2021-30471: A flaw was found in PoDoFo 0.9.7. An uncontrolled recursive call in PdfNamesTree::AddToDictionary function in src/podofo/doc/PdfNamesTree.cpp can lead to a stack overflow.\n\n- CVE-2021-42697: Akka HTTP 10.1.x before 10.1.15 and 10.2.x before 10.2.7 can encounter stack exhaustion while parsing HTTP headers, which allows a remote attacker to conduct a Denial of Service attack by sending a User-Agent header with deeply nested comments.\n\n- CVE-2021-43519: Stack overflow in lua_resume of ldo.c in Lua Interpreter 5.1.0~5.4.4 allows attackers to perform a Denial of Service via a crafted script file.\n\n- CVE-2020-20213: Mikrotik RouterOs 6.44.5 (long-term tree) suffers from an stack exhaustion vulnerability in the /nova/bin/net process. An authenticated remote attacker can cause a Denial of Service due to overloading the systems CPU.\n\n- CVE-2021-38566: An issue was discovered in Foxit PDF Reader before 11.0.1 and PDF Editor before 11.0.1. It allows stack consumption during recursive processing of embedded XML nodes.\n\n- CVE-2021-3622: A flaw was found in the hivex library. This flaw allows an attacker to input a specially crafted Windows Registry (hive) file, which would cause hivex to recursively call the _get_children() function, leading to a stack overflow. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-41752: Stack overflow vulnerability in Jerryscript before commit e1ce7dd7271288be8c0c8136eea9107df73a8ce2 on Oct 20, 2021 due to an unbounded recursive call to the new opt() function.\n\n- CVE-2021-45832: A Stack-based Buffer Overflow Vulnerability exists in HDF5 1.13.1-1 at at hdf5/src/H5Eint.c, which causes a Denial of Service (context-dependent).\n\n- CVE-2021-46505: Jsish v3.5.0 was discovered to contain a stack overflow via /usr/lib/x86_64-linux-gnu/libasan.so.4+0x5b1e5.\n\n- CVE-2021-46507: Jsish v3.5.0 was discovered to contain a stack overflow via Jsi_LogMsg at src/jsiUtils.c.\n\n- CVE-2021-46509: Cesanta MJS v2.20.0 was discovered to contain a stack overflow via snquote at mjs/src/mjs_json.c.\n\n- CVE-2022-20382: In (TBD) of (TBD), there is a possible out of bounds write due to kernel stack overflow. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-214245176References: Upstream kernel\n\n- CVE-2022-21708: graphql-go is a GraphQL server with a focus on ease of use. In versions prior to 1.3.0 there exists a DoS vulnerability that is possible due to a bug in the library that would allow an attacker with specifically designed queries to cause stack overflow panics. Any user with access to the GraphQL handler can send these queries and cause stack overflows. This in turn could potentially compromise the ability of the server to serve data to its users. The issue has been patched in version `v1.3.0`. The only known workaround for this issue is to disable the `graphql.MaxDepth` option from your schema which is not recommended.\n\n- CVE-2022-23591: Tensorflow is an Open Source Machine Learning Framework. The `GraphDef` format in TensorFlow does not allow self recursive functions. The runtime assumes that this invariant is satisfied. However, a `GraphDef` containing a fragment such as the following can be consumed when loading a `SavedModel`. This would result in a stack overflow during execution as resolving each `NodeDef` means resolving the function itself and its nodes. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n- CVE-2022-24675: encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.\n\n- CVE-2022-31019: Vapor is a server-side Swift HTTP web framework. When using automatic content decoding an attacker can craft a request body that can make the server crash with the following request: `curl -d \"array[_0][0][array][_0][0][array]$(for f in $(seq 1100); do echo -n '[_0][0][array]'; done)[string][_0]=hello%20world\" http://localhost:8080/foo`. The issue is unbounded, attacker controlled stack growth which will at some point lead to a stack overflow and a process crash. This issue has been fixed in version 4.61.1.\n\n- CVE-2022-31099: rulex is a new, portable, regular expression language. When parsing untrusted rulex expressions, the stack may overflow, possibly enabling a Denial of Service attack. This happens when parsing an expression with several hundred levels of nesting, causing the process to abort immediately. This is a security concern for you, if your service parses untrusted rulex expressions (expressions provided by an untrusted user), and your service becomes unavailable when the process running rulex aborts due to a stack overflow. The crash is fixed in version **0.4.3**. Affected users are advised to update to this version. There are no known workarounds for this issue.\n\n- CVE-2022-3216: A vulnerability has been found in Nintendo Game Boy Color and classified as problematic. This vulnerability affects unknown code of the component Mobile Adapter GB. The manipulation leads to memory corruption. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-208606 is the identifier assigned to this vulnerability.\n\n- CVE-2022-38334: XPDF v4.04 and earlier was discovered to contain a stack overflow via the function Catalog::countPageTree() at Catalog.cc.\n\n- CVE-2022-41966: XStream serializes Java objects to XML and back again. Versions prior to 1.4.20 may allow a remote attacker to terminate the application with a stack overflow error, resulting in a denial of service only via manipulation the processed input stream. The attack uses the hash code implementation for collections and maps to force recursive hash calculation causing a stack overflow. This issue is patched in version 1.4.20 which handles the stack overflow and raises an InputManipulationException instead. A potential workaround for users who only use HashMap or HashSet and whose XML refers these only as default map or set, is to change the default implementation of java.util.Map and java.util per the code example in the referenced advisory. However, this implies that your application does not care about the implementation of the map and all elements are comparable.\n\n- CVE-2022-47662: GPAC MP4Box 2.1-DEV-rev649-ga8f438d20 has a segment fault (/stack overflow) due to infinite recursion in Media_GetSample isomedia/media.c:662\n\n- CVE-2022-23460: Jsonxx or Json++ is a JSON parser, writer and reader written in C++. In affected versions of jsonxx json parsing may lead to stack exhaustion in an address sanitized (ASAN) build. This issue may lead to Denial of Service if the program using the jsonxx library crashes. This issue exists on the current commit of the jsonxx project and the project itself has been archived. Updates are not expected. Users are advised to find a replacement.\n\n- CVE-2022-23606: Envoy is an open source edge and service proxy, designed for cloud-native applications. When a cluster is deleted via Cluster Discovery Service (CDS) all idle connections established to endpoints in that cluster are disconnected. A recursion was introduced in the procedure of disconnecting idle connections that can lead to stack exhaustion and abnormal process termination when a cluster has a large number of idle connections. This infinite recursion causes Envoy to crash. Users are advised to upgrade.\n\n- CVE-2022-24921: regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.\n\n- CVE-2022-25313: In Expat (aka libexpat) before 2.4.5, an attacker can trigger stack exhaustion in build_model via a large nesting depth in the DTD element.\n\n- CVE-2022-27810: It was possible to trigger an infinite recursion condition in the error handler when Hermes executed specific maliciously formed JavaScript. This condition was only possible to trigger in dev-mode (when asserts were enabled). This issue affects Hermes versions prior to v0.12.0.\n\n- CVE-2022-28201: An issue was discovered in MediaWiki before 1.35.6, 1.36.x before 1.36.4, and 1.37.x before 1.37.2. Users with the editinterface permission can trigger infinite recursion, because a bare local interwiki is mishandled for the mainpage message.\n\n- CVE-2022-28773: Due to an uncontrolled recursion in SAP Web Dispatcher and SAP Internet Communication Manager, the application may crash, leading to denial of service, but can be restarted automatically. \n\n- CVE-2022-31173: Juniper is a GraphQL server library for Rust. Affected versions of Juniper are vulnerable to uncontrolled recursion resulting in a program crash. This issue has been addressed in version 0.15.10. Users are advised to upgrade. Users unable to upgrade should limit the recursion depth manually.\n\n- CVE-2022-37315: graphql-go (aka GraphQL for Go) through 0.8.0 has infinite recursion in the type definition parser.\n\n- CVE-2022-41881: Netty project is an event-driven asynchronous network application framework. In versions prior to 4.1.86.Final, a StackOverflowError can be raised when parsing a malformed crafted message due to an infinite recursion. This issue is patched in version 4.1.86.Final. There is no workaround, except using a custom HaProxyMessageDecoder.\n\n- CVE-2022-27943: libiberty/rust-demangle.c in GNU GCC 11.2 allows stack consumption in demangle_const, as demonstrated by nm-new.\n\n- CVE-2022-40150: Those using Jettison to parse untrusted XML or JSON data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by Out of memory. This effect may support a denial of service attack.\n\nRelated Weaknesses:\n\n- CWE-834 (ChildOf)",
          "type": "Class",
          "source": "sparse",
          "search_source": "rootcause:weak hash function",
          "sources": [
            "base",
            "rootcause"
          ],
          "boost_factor": 3.0,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed-with-Review",
              "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
              "comments": "Examine children of this entry to see if there is a better fit",
              "reasons": [
                "Abstraction"
              ]
            }
          }
        },
        {
          "cwe_id": "836",
          "name": "Use of Password Hash Instead of Password for Authentication",
          "description": "The product records password hashes in a data store, receives a hash of a password from a client, and compares the supplied hash to the hash obtained from the data store.",
          "score": 214.51105573266688,
          "matched_text": "CWE-836: Use of Password Hash Instead of Password for Authentication\n\nType: Base\n\nStatus: Incomplete\n\nDescription:\n\nThe product records password hashes in a data store, receives a hash of a password from a client, and compares the supplied hash to the hash obtained from the data store.\n\nExtended Details:\n\n\n\nSome authentication mechanisms rely on the client to generate the hash for a password, possibly to reduce load on the server or avoid sending the password across the network. However, when the client is used to generate the hash, an attacker can bypass the authentication by obtaining a copy of the hash, e.g. by using SQL injection to compromise a database of authentication credentials, or by exploiting an information exposure. The attacker could then use a modified client to replay the stolen hash without having knowledge of the original password.\n\n\nAs a result, the server-side comparison against a client-side hash does not provide any more security than the use of passwords without hashing.\n\n\nReal-World Examples:\n\n- CVE-2009-1283: Product performs authentication with user-supplied password hashes that can be obtained from a separate SQL injection vulnerability (CVE-2009-1282).\n\n- CVE-2005-3435: Product allows attackers to bypass authentication by obtaining the password hash for another user and specifying the hash in the pwd argument.\n\nTop 25 CWE Examples:\n\n- CVE-2021-23857: Login with hash: The login routine allows the client to log in to the system not by using the password, but by using the hash of the password. Combined with CVE-2021-23858, this allows an attacker to subsequently login to the system.\n\n- CVE-2021-36460: VeryFitPro (com.veryfit2hr.second) 3.2.8 hashes the account's password locally on the device and uses the hash to authenticate in all communication with the backend API, including login, registration and changing of passwords. This allows an attacker in possession of a hash to takeover a user's account, rendering the benefits of storing hashed passwords in the database useless.\n\n- CVE-2021-45036:  Velneo vClient on its 28.1.3 version, could allow an attacker with knowledge of the victims's username and hashed password to spoof the victim's id against the server. \n\n- CVE-2022-25155: Use of Password Hash Instead of Password for Authentication vulnerability in Mitsubishi Electric MELSEC iQ-F series FX5U(C) CPU all versions, Mitsubishi Electric MELSEC iQ-F series FX5UJ CPU all versions, Mitsubishi Electric MELSEC iQ-R series R00/01/02CPU all versions, Mitsubishi Electric MELSEC iQ-R series R04/08/16/32/120(EN)CPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120SFCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PSFCPU all versions, Mitsubishi Electric MELSEC iQ-R series RJ71GN11-T2 all versions, Mitsubishi Electric MELSEC iQ-R series RJ71GN11-EIP all versions, Mitsubishi Electric MELSEC iQ-R series RJ71C24(-R2/R4) all versions, Mitsubishi Electric MELSEC iQ-R series RJ71EN71 all versions, Mitsubishi Electric MELSEC iQ-R series RJ72GF15-T2 all versions, Mitsubishi Electric MELSEC Q series Q03UDECPU all versions, Mitsubishi Electric MELSEC Q series Q04/06/10/13/20/26/50/100UDEHCPU all versions, Mitsubishi Electric MELSEC Q series Q03/04/06/13/26UDVCPU all versions, Mitsubishi Electric MELSEC Q series Q04/06/13/26UDPVCPU all versions, Mitsubishi Electric MELSEC Q series QJ71C24N(-R2/R4) all versions, Mitsubishi Electric MELSEC Q series QJ71E71-100 all versions, Mitsubishi Electric MELSEC Q series QJ72BR15 all versions, Mitsubishi Electric MELSEC Q series QJ72LP25(-25/G/GE) all versions, Mitsubishi Electric MELSEC L series L02/06/26CPU(-P) all versions, Mitsubishi Electric MELSEC L series L26CPU-(P)BT all versions, Mitsubishi Electric MELSEC L series LJ71C24(-R2) all versions, Mitsubishi Electric MELSEC L series LJ71E71-100 all versions and Mitsubishi Electric MELSEC L series LJ72GF15-T2 all versions allows a remote unauthenticated attacker to login to the product by replaying an eavesdropped password hash.\n\n- CVE-2022-25157: Use of Password Hash Instead of Password for Authentication vulnerability in Mitsubishi Electric MELSEC iQ-F series FX5U(C) CPU all versions, Mitsubishi Electric MELSEC iQ-F series FX5UJ CPU all versions, Mitsubishi Electric MELSEC iQ-R series R00/01/02CPU all versions, Mitsubishi Electric MELSEC iQ-R series R04/08/16/32/120(EN)CPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120SFCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PSFCPU all versions, Mitsubishi Electric MELSEC iQ-R series R16/32/64MTCPU all versions, Mitsubishi Electric MELSEC iQ-R series RJ71C24(-R2/R4) all versions, Mitsubishi Electric MELSEC iQ-R series RJ71EN71 all versions, Mitsubishi Electric MELSEC iQ-R series RJ71GF11-T2 all versions, Mitsubishi Electric MELSEC iQ-R series RJ71GP21(S)-SX all versions, Mitsubishi Electric MELSEC iQ-R series RJ72GF15-T2 all versions, Mitsubishi Electric MELSEC Q series Q03UDECPU all versions, Mitsubishi Electric MELSEC Q series Q04/06/10/13/20/26/50/100UDEHCPU all versions, Mitsubishi Electric MELSEC Q series Q03/04/06/13/26UDVCPU all versions, Mitsubishi Electric MELSEC Q series Q04/06/13/26UDPVCPU all versions, Mitsubishi Electric MELSEC Q series QJ71C24N(-R2/R4) all versions, Mitsubishi Electric MELSEC Q series QJ71E71-100 all versions, Mitsubishi Electric MELSEC L series L02/06/26CPU(-P) all versions, Mitsubishi Electric MELSEC L series L26CPU-(P)BT all versions, Mitsubishi Electric MELSEC L series LJ71C24(-R2) all versions, Mitsubishi Electric MELSEC L series LJ71E71-100 all versions and Mitsubishi Electric MELSEC L series LJ72GF15-T2 all versions allows a remote unauthenticated attacker to disclose or tamper with the information in the product by using an eavesdropped password hash.\n\n- CVE-2022-32282: An improper password check exists in the login functionality of WWBN AVideo 11.6 and dev master commit 3f7c0364. An attacker that owns a users' password hash will be able to use it to directly login into the account, leading to increased privileges.\n\nRelated Weaknesses:\n\n- CWE-1390 (ChildOf)\n\n- CWE-602 (PeerOf)",
          "type": "Base",
          "source": "sparse",
          "search_source": "rootcause:weak hash function",
          "sources": [
            "base",
            "rootcause"
          ],
          "boost_factor": 3.0,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            }
          }
        },
        {
          "cwe_id": "1240",
          "name": "Use of a Cryptographic Primitive with a Risky Implementation",
          "description": "To fulfill the need for a cryptographic primitive, the product implements a cryptographic algorithm using a non-standard, unproven, or disallowed/non-compliant cryptographic implementation.",
          "score": 212.37197720097376,
          "matched_text": "CWE-1240: Use of a Cryptographic Primitive with a Risky Implementation\n\nType: Base\n\nStatus: Draft\n\nDescription:\n\nTo fulfill the need for a cryptographic primitive, the product implements a cryptographic algorithm using a non-standard, unproven, or disallowed/non-compliant cryptographic implementation.\n\nExtended Details:\n\n\n\nCryptographic protocols and systems depend on cryptographic primitives (and associated algorithms) as their basic building blocks. Some common examples of primitives are digital signatures, one-way hash functions, ciphers, and public key cryptography; however, the notion of \"primitive\" can vary depending on point of view. See \"Terminology Notes\" for further explanation of some concepts.\n\n\nCryptographic primitives are defined to accomplish one very specific task in a precisely defined and mathematically reliable fashion. For example, suppose that for a specific cryptographic primitive (such as an encryption routine), the consensus is that the primitive can only be broken after trying out N different inputs (where the larger the value of N, the stronger the cryptography). For an encryption scheme like AES-256, one would expect N to be so large as to be infeasible to execute in a reasonable amount of time.\n\n\nIf a vulnerability is ever found that shows that one can break a cryptographic primitive in significantly less than the expected number of attempts, then that primitive is considered weakened (or sometimes in extreme cases, colloquially it is \"broken\"). As a result, anything using this cryptographic primitive would now be considered insecure or risky. Thus, even breaking or weakening a seemingly small cryptographic primitive has the potential to render the whole system vulnerable, due to its reliance on the primitive. A historical example can be found in TLS when using DES. One would colloquially call DES the cryptographic primitive for transport encryption in this version of TLS. In the past, DES was considered strong, because no weaknesses were found in it; importantly, DES has a key length of 56 bits. Trying N=2^56 keys was considered impractical for most actors. Unfortunately, attacking a system with 56-bit keys is now practical via brute force, which makes defeating DES encryption practical. It is now practical for an adversary to read any information sent under this version of TLS and use this information to attack the system. As a result, it can be claimed that this use of TLS is weak, and that any system depending on TLS with DES could potentially render the entire system vulnerable to attack.\n\n\nCryptographic primitives and associated algorithms are only considered safe after extensive research and review from experienced cryptographers from academia, industry, and government entities looking for any possible flaws. Furthermore, cryptographic primitives and associated algorithms are frequently reevaluated for safety when new mathematical and attack techniques are discovered. As a result and over time, even well-known cryptographic primitives can lose their compliance status with the discovery of novel attacks that might either defeat the algorithm or reduce its robustness significantly.\n\n\nIf ad-hoc cryptographic primitives are implemented, it is almost certain that the implementation will be vulnerable to attacks that are well understood by cryptographers, resulting in the exposure of sensitive information and other consequences.\n\n\nThis weakness is even more difficult to manage for hardware-implemented deployment of cryptographic algorithms. First, because hardware is not patchable as easily as software, any flaw discovered after release and production typically cannot be fixed without a recall of the product. Secondly, the hardware product is often expected to work for years, during which time computation power available to the attacker only increases. Therefore, for hardware implementations of cryptographic primitives, it is absolutely essential that only strong, proven cryptographic primitives are used.\n\n\nReal-World Examples:\n\n- CVE-2020-4778: software uses MD5, which is less safe than the default SHA-256 used by related products\n\n- CVE-2005-2946: Default configuration of product uses MD5 instead of stronger algorithms that are available, simplifying forgery of certificates.\n\n- CVE-2019-3907: identity card uses MD5 hash of a salt and password\n\n- CVE-2021-34687: personal key is transmitted over the network using a substitution cipher\n\n- CVE-2020-14254: product does not disable TLS-RSA cipher suites, allowing decryption of traffic if TLS 2.0 and secure ciphers are not enabled.\n\n- CVE-2019-1543: SSL/TLS library generates 16-byte nonces but reduces them to 12 byte nonces for the ChaCha20-Poly1305 cipher, converting them in a way that violates the cipher's requirements for unique nonces.\n\n- CVE-2017-9267: LDAP interface allows use of weak ciphers\n\n- CVE-2017-7971: SCADA product allows \"use of outdated cipher suites\"\n\n- CVE-2020-6616: Chip implementing Bluetooth uses a low-entropy PRNG instead of a hardware RNG, allowing spoofing.\n\n- CVE-2019-1715: security product has insufficient entropy in the DRBG, allowing collisions and private key discovery\n\n- CVE-2014-4192: Dual_EC_DRBG implementation in RSA toolkit does not correctly handle certain byte requests, simplifying plaintext recovery\n\n- CVE-2007-6755: Recommendation for Dual_EC_DRBG algorithm contains point Q constants that could simplify decryption\n\nTop 25 CWE Examples:\n\n- CVE-2021-34687: iDrive RemotePC before 7.6.48 on Windows allows information disclosure. A man in the middle can recover a system's Personal Key when a client attempts to make a LAN connection. The Personal Key is transmitted over the network while only being encrypted via a substitution cipher.\n\nRelated Weaknesses:\n\n- CWE-327 (ChildOf)",
          "type": "Base",
          "source": "sparse",
          "search_source": "rootcause:weak hash function",
          "sources": [
            "base",
            "rootcause"
          ],
          "boost_factor": 3.0,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            }
          }
        },
        {
          "cwe_id": "770",
          "name": "Allocation of Resources Without Limits or Throttling",
          "description": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
          "score": 67.00924514121934,
          "matched_text": "CWE-770: Allocation of Resources Without Limits or Throttling\n\nType: Base\n\nStatus: Incomplete\n\nDescription:\n\nThe product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.\n\nExtended Details:\n\n\n\nCode frequently has to work with limited resources, so programmers must be careful to ensure that resources are not consumed too quickly, or too easily. Without use of quotas, resource limits, or other protection mechanisms, it can be easy for an attacker to consume many resources by rapidly making many requests, or causing larger resources to be used than is needed. When too many resources are allocated, or if a single resource is too large, then it can prevent the code from working correctly, possibly leading to a denial of service.\n\n\nReal-World Examples:\n\n- CVE-2022-21668: Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190).\n\n- CVE-2009-4017: Language interpreter does not restrict the number of temporary files being created when handling a MIME request with a large number of parts..\n\n- CVE-2009-2726: Driver does not use a maximum width when invoking sscanf style functions, causing stack consumption.\n\n- CVE-2009-2540: Large integer value for a length property in an object causes a large amount of memory allocation.\n\n- CVE-2009-2054: Product allows exhaustion of file descriptors when processing a large number of TCP packets.\n\n- CVE-2008-5180: Communication product allows memory consumption with a large number of SIP requests, which cause many sessions to be created.\n\n- CVE-2008-1700: Product allows attackers to cause a denial of service via a large number of directives, each of which opens a separate window.\n\n- CVE-2005-4650: CMS does not restrict the number of searches that can occur simultaneously, leading to resource exhaustion.\n\n- CVE-2020-15100: web application scanner attempts to read an excessively large file created by a user, causing process termination\n\n- CVE-2020-7218: Go-based workload orchestrator does not limit resource usage with unauthenticated connections, allowing a DoS by flooding the service\n\nTop 25 CWE Examples:\n\n- CVE-2020-19463: An issue has been found in function vfprintf in PDF2JSON 0.70 that allows attackers to cause a Denial of Service due to a stack overflow.\n\n- CVE-2020-19464: An issue has been found in function XRef::fetch in PDF2JSON 0.70 that allows attackers to cause a Denial of Service due to a stack overflow .\n\n- CVE-2021-29324: OpenSource Moddable v10.5.0 was discovered to contain a stack overflow via the component /moddable/xs/sources/xsScript.c.\n\n- CVE-2021-29329: OpenSource Moddable v10.5.0 was discovered to contain a stack overflow in the fxBinaryExpressionNodeDistribute function at /moddable/xs/sources/xsTree.c.\n\n- CVE-2021-41800: MediaWiki before 1.36.2 allows a denial of service (resource consumption because of lengthy query processing time). Visiting Special:Contributions can sometimes result in a long running SQL query because PoolCounter protection is mishandled.\n\n- CVE-2021-35492: Wowza Streaming Engine through 4.8.11+5 could allow an authenticated, remote attacker to exhaust filesystem resources via the /enginemanager/server/vhost/historical.jsdata vhost parameter. This is due to the insufficient management of available filesystem resources. An attacker could exploit this vulnerability through the Virtual Host Monitoring section by requesting random virtual-host historical data and exhausting available filesystem resources. A successful exploit could allow the attacker to cause database errors and cause the device to become unresponsive to web-based management. (Manual intervention is required to free filesystem resources and return the application to an operational state.)\n\n- CVE-2021-22174: Crash in USB HID dissector in Wireshark 3.4.0 to 3.4.2 allows denial of service via packet injection or crafted capture file\n\n- CVE-2020-22785: Etherpad < 1.8.3 is affected by a missing lock check which could cause a denial of service. Aggressively targeting random pad import endpoints with empty data would flatten all pads due to lack of rate limiting and missing ownership check.\n\n- CVE-2021-33831: api/account/register in the TH Wildau COVID-19 Contact Tracing application through 2021-09-01 has Incorrect Access Control. An attacker can interfere with tracing of infection chains by creating 500 random users within 2500 seconds.\n\n- CVE-2020-28200: The Sieve engine in Dovecot before 2.3.15 allows Uncontrolled Resource Consumption, as demonstrated by a situation with a complex regular expression for the regex extension.\n\n- CVE-2021-41591: ACINQ Eclair before 0.6.3 allows loss of funds because of dust HTLC exposure.\n\n- CVE-2021-41592: Blockstream c-lightning through 0.10.1 allows loss of funds because of dust HTLC exposure.\n\n- CVE-2021-41593: Lightning Labs lnd before 0.13.3-beta allows loss of funds because of dust HTLC exposure.\n\n- CVE-2020-24821: A vulnerability in the dwarf::cursor::skip_form function of Libelfin v0.3 allows attackers to cause a denial of service (DOS) through a segmentation fault via a crafted ELF file.\n\n- CVE-2020-24822: A vulnerability in the dwarf::cursor::uleb function of Libelfin v0.3 allows attackers to cause a denial of service (DOS) through a segmentation fault via a crafted ELF file.\n\n- CVE-2020-24823: A vulnerability in the dwarf::to_string function of Libelfin v0.3 allows attackers to cause a denial of service (DOS) through a segmentation fault via a crafted ELF file.\n\n- CVE-2020-24825: A vulnerability in the line_table::line_table function of Libelfin v0.3 allows attackers to cause a denial of service (DOS) through a segmentation fault via a crafted ELF file.\n\n- CVE-2020-24826: A vulnerability in the elf::section::as_strtab function of Libelfin v0.3 allows attackers to cause a denial of service (DOS) through a segmentation fault via a crafted ELF file.\n\n- CVE-2021-0217: A vulnerability in processing of certain DHCP packets from adjacent clients on EX Series and QFX Series switches running Juniper Networks Junos OS with DHCP local/relay server configured may lead to exhaustion of DMA memory causing a Denial of Service (DoS). Over time, exploitation of this vulnerability may cause traffic to stop being forwarded, or to crashing of the fxpc process. When Packet DMA heap utilization reaches 99%, the system will become unstable. Packet DMA heap utilization can be monitored through the following command: user@junos# request pfe execute target fpc0 timeout 30 command \"show heap\" ID Base Total(b) Free(b) Used(b) % Name -- ---------- ----------- ----------- ----------- --- ----------- 0 213301a8 536870488 387228840 149641648 27 Kernel 1 91800000 8388608 3735120 4653488 55 DMA 2 92000000 75497472 74452192 1045280 1 PKT DMA DESC 3 d330000 335544320 257091400 78452920 23 Bcm_sdk 4 96800000 184549376 2408 184546968 99 Packet DMA <--- 5 903fffe0 20971504 20971504 0 0 Blob An indication of the issue occurring may be observed through the following log messages: Dec 10 08:07:00.124 2020 hostname fpc0 brcm_pkt_buf_alloc:523 (buf alloc) failed allocating packet buffer Dec 10 08:07:00.126 2020 hostname fpc0 (buf alloc) failed allocating packet buffer Dec 10 08:07:00.128 2020 hostname fpc0 brcm_pkt_buf_alloc:523 (buf alloc) failed allocating packet buffer Dec 10 08:07:00.130 2020 hostnameC fpc0 (buf alloc) failed allocating packet buffer This issue affects Juniper Networks Junos OS on EX Series and QFX Series: 17.4R3 versions prior to 17.4R3-S3; 18.1R3 versions between 18.1R3-S6 and 18.1R3-S11; 18.2R3 versions prior to 18.2R3-S6; 18.3R3 versions prior to 18.3R3-S4; 18.4R2 versions prior to 18.4R2-S5; 18.4R3 versions prior to 18.4R3-S6; 19.1 versions between 19.1R2 and 19.1R3-S3; 19.2 versions prior to 19.2R3-S1; 19.3 versions prior to 19.3R2-S5, 19.3R3; 19.4 versions prior to 19.4R2-S2, 19.4R3; 20.1 versions prior to 20.1R2; 20.2 versions prior to 20.2R1-S2, 20.2R2. Junos OS versions prior to 17.4R3 are unaffected by this vulnerability.\n\n- CVE-2021-0242: A vulnerability due to the improper handling of direct memory access (DMA) buffers on EX4300 switches on Juniper Networks Junos OS allows an attacker sending specific unicast frames to trigger a Denial of Service (DoS) condition by exhausting DMA buffers, causing the FPC to crash and the device to restart. The DMA buffer leak is seen when receiving these specific, valid unicast frames on an interface without Layer 2 Protocol Tunneling (L2PT) or dot1x configured. Interfaces with either L2PT or dot1x configured are not vulnerable to this issue. When this issue occurs, DMA buffer usage keeps increasing and the following error log messages may be observed: Apr 14 14:29:34.360 /kernel: pid 64476 (pfex_junos), uid 0: exited on signal 11 (core dumped) Apr 14 14:29:33.790 init: pfe-manager (PID 64476) terminated by signal number 11. Core dumped! The DMA buffers on the FPC can be monitored by the executing vty command 'show heap': ID Base Total(b) Free(b) Used(b) % Name -- ---------- ----------- ----------- ----------- --- ----------- 0 4a46000 268435456 238230496 30204960 11 Kernel 1 18a46000 67108864 17618536 49490328 73 Bcm_sdk 2 23737000 117440512 18414552 99025960 84 DMA buf <<<<< keeps increasing 3 2a737000 16777216 16777216 0 0 DMA desc This issue affects Juniper Networks Junos OS on the EX4300: 17.3 versions prior to 17.3R3-S11; 17.4 versions prior to 17.4R2-S13, 17.4R3-S4; 18.1 versions prior to 18.1R3-S12; 18.2 versions prior to 18.2R2-S8, 18.2R3-S7; 18.3 versions prior to 18.3R3-S4; 18.4 versions prior to 18.4R1-S8, 18.4R2-S7, 18.4R3-S7; 19.1 versions prior to 19.1R1-S6, 19.1R2-S2, 19.1R3-S4; 19.2 versions prior to 19.2R1-S6, 19.2R3-S2; 19.3 versions prior to 19.3R3-S2; 19.4 versions prior to 19.4R2-S3, 19.4R3-S1; 20.1 versions prior to 20.1R2; 20.2 versions prior to 20.2R2-S1, 20.2R3; 20.3 versions prior to 20.3R1-S1, 20.3R2.\n\n- CVE-2021-0338: In SystemSettingsValidators, there is a possible permanent denial of service due to missing bounds checks on UI settings. This could lead to local denial of service with User execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11Android ID: A-156260178\n\n- CVE-2021-0420: In memory management driver, there is a possible system crash due to a missing bounds check. This could lead to local denial of service with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS05403499; Issue ID: ALPS05381065.\n\n- CVE-2021-0422: In memory management driver, there is a possible system crash due to a missing bounds check. This could lead to local denial of service with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS05403499; Issue ID: ALPS05381071.\n\n- CVE-2021-0424: In memory management driver, there is a possible system crash due to a missing bounds check. This could lead to local denial of service with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS05403499; Issue ID: ALPS05393787.\n\n- CVE-2021-20185: It was found in Moodle before version 3.10.1, 3.9.4, 3.8.7 and 3.5.16 that messaging did not impose a character limit when sending messages, which could result in client-side (browser) denial of service for users receiving very large messages.\n\n- CVE-2021-29430: Sydent is a reference Matrix identity server. Sydent does not limit the size of requests it receives from HTTP clients. A malicious user could send an HTTP request with a very large body, leading to memory exhaustion and denial of service. Sydent also does not limit response size for requests it makes to remote Matrix homeservers. A malicious homeserver could return a very large response, again leading to memory exhaustion and denial of service. This affects any server which accepts registration requests from untrusted clients. This issue has been patched by releases 89071a1, 0523511, f56eee3. As a workaround request sizes can be limited in an HTTP reverse-proxy. There are no known workarounds for the problem with overlarge responses.\n\n- CVE-2021-29932: An issue was discovered in the parse_duration crate through 2021-03-18 for Rust. It allows attackers to cause a denial of service (CPU and memory consumption) via a duration string with a large exponent.\n\n- CVE-2021-32699: Wings is the control plane software for the open source Pterodactyl game management system. All versions of Pterodactyl Wings prior to `1.4.4` are vulnerable to system resource exhaustion due to improper container process limits being defined. A malicious user can consume more resources than intended and cause downstream impacts to other clients on the same hardware, eventually causing the physical server to stop responding. Users should upgrade to `1.4.4` to mitigate the issue. There is no non-code based workaround for impacted versions of the software. Users running customized versions of this software can manually set a PID limit for containers created.\n\n- CVE-2021-3478: There's a flaw in OpenEXR's scanline input file functionality in versions before 3.0.0-beta. An attacker able to submit a crafted file to be processed by OpenEXR could consume excessive system memory. The greatest impact of this flaw is to system availability.\n\n- CVE-2021-38463: The affected product does not properly control the allocation of resources. A user may be able to allocate unlimited memory buffers using API functions.\n\n- CVE-2021-38465: The webinstaller is a Golang web server executable that enables the generation of an Auvesy image agent. Resource consumption can be achieved by generating large amounts of installations, which are then saved without limitation in the temp folder of the webinstaller executable.\n\n- CVE-2021-3912: OctoRPKI tries to load the entire contents of a repository in memory, and in the case of a GZIP bomb, unzip it in memory, making it possible to create a repository that makes OctoRPKI run out of memory (and thus crash).\n\n- CVE-2021-41546: A vulnerability has been identified in RUGGEDCOM ROX MX5000 (All versions < V2.14.1), RUGGEDCOM ROX RX1400 (All versions < V2.14.1), RUGGEDCOM ROX RX1500 (All versions < V2.14.1), RUGGEDCOM ROX RX1501 (All versions < V2.14.1), RUGGEDCOM ROX RX1510 (All versions < V2.14.1), RUGGEDCOM ROX RX1511 (All versions < V2.14.1), RUGGEDCOM ROX RX1512 (All versions < V2.14.1), RUGGEDCOM ROX RX1524 (All versions < V2.14.1), RUGGEDCOM ROX RX1536 (All versions < V2.14.1), RUGGEDCOM ROX RX5000 (All versions < V2.14.1). Affected devices write crashdumps without checking if enough space is available on the filesystem. Once the crashdump fills the entire root filesystem, affected devices fail to boot successfully. An attacker can leverage this vulnerability to cause a permanent Denial-of-Service.\n\n- CVE-2021-21274: Synapse is a Matrix reference homeserver written in python (pypi package matrix-synapse). Matrix is an ecosystem for open federated Instant Messaging and VoIP. In Synapse before version 1.25.0, a malicious homeserver could redirect requests to their .well-known file to a large file. This can lead to a denial of service attack where homeservers will consume significantly more resources when requesting the .well-known file of a malicious homeserver. This affects any server which accepts federation requests from untrusted servers. Issue is resolved in version 1.25.0. As a workaround the `federation_domain_whitelist` setting can be used to restrict the homeservers communicated with over federation.\n\n- CVE-2021-21294: Http4s (http4s-blaze-server) is a minimal, idiomatic Scala interface for HTTP services. Http4s before versions 0.21.17, 0.22.0-M2, and 1.0.0-M14 have a vulnerability which can lead to a denial-of-service. Blaze-core, a library underlying http4s-blaze-server, accepts connections unboundedly on its selector pool. This has the net effect of amplifying degradation in services that are unable to handle their current request load, since incoming connections are still accepted and added to an unbounded queue. Each connection allocates a socket handle, which drains a scarce OS resource. This can also confound higher level circuit breakers which work based on detecting failed connections. http4s provides a general \"MaxActiveRequests\" middleware mechanism for limiting open connections, but it is enforced inside the Blaze accept loop, after the connection is accepted and the socket opened. Thus, the limit only prevents the number of connections which can be simultaneously processed, not the number of connections which can be held open. In 0.21.17, 0.22.0-M2, and 1.0.0-M14, a new \"maxConnections\" property, with a default value of 1024, has been added to the `BlazeServerBuilder`. Setting the value to a negative number restores unbounded behavior, but is strongly disrecommended. The NIO2 backend does not respect `maxConnections`. Its use is now deprecated in http4s-0.21, and the option is removed altogether starting in http4s-0.22. There are several possible workarounds described in the refrenced GitHub Advisory GHSA-xhv5-w9c5-2r2w.\n\n- CVE-2021-23053: On version 15.1.x before 15.1.3, 14.1.x before 14.1.3.1, and 13.1.x before 13.1.3.6, when the brute force protection feature of BIG-IP Advanced WAF or BIG-IP ASM is enabled on a virtual server and the virtual server is under brute force attack, the MySQL database may run out of disk space due to lack of row limit on undisclosed tables in the MYSQL database. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2021-41167: modern-async is an open source JavaScript tooling library for asynchronous operations using async/await and promises. In affected versions a bug affecting two of the functions in this library: forEachSeries and forEachLimit. They should limit the concurrency of some actions but, in practice, they don't. Any code calling these functions will be written thinking they would limit the concurrency but they won't. This could lead to potential security issues in other projects. The problem has been patched in 1.0.4. There is no workaround.\n\n- CVE-2021-42262: An issue was discovered in Softing OPC UA C++ SDK before 5.70. An invalid XML element in the type dictionary makes the OPC/UA client crash due to an out-of-memory condition.\n\n- CVE-2020-35210: A vulnerability in Atomix v3.1.5 allows attackers to cause a denial of service (DoS) via a Raft session flooding attack using Raft OpenSessionRequest messages.\n\n- CVE-2021-32476: A denial-of-service risk was identified in the draft files area, due to it not respecting user file upload limits. Moodle versions 3.10 to 3.10.3, 3.9 to 3.9.6, 3.8 to 3.8.8, 3.5 to 3.5.17 and earlier unsupported versions are affected.\n\n- CVE-2021-43662: totolink EX300_v2, ver V4.0.3c.140_B20210429 and A720R ,ver V4.1.5cu.470_B20200911 have an issue which causes uncontrolled resource consumption.\n\n- CVE-2020-3566: A vulnerability in the Distance Vector Multicast Routing Protocol (DVMRP) feature of Cisco IOS XR Software could allow an unauthenticated, remote attacker to exhaust process memory of an affected device. The vulnerability is due to insufficient queue management for Internet Group Management Protocol (IGMP) packets. An attacker could exploit this vulnerability by sending crafted IGMP traffic to an affected device. A successful exploit could allow the attacker to cause memory exhaustion, resulting in instability of other processes. These processes may include, but are not limited to, interior and exterior routing protocols. Cisco will release software updates that address this vulnerability.\n\n- CVE-2020-3569: Multiple vulnerabilities in the Distance Vector Multicast Routing Protocol (DVMRP) feature of Cisco IOS XR Software could allow an unauthenticated, remote attacker to either immediately crash the Internet Group Management Protocol (IGMP) process or make it consume available memory and eventually crash. The memory consumption may negatively impact other processes that are running on the device. These vulnerabilities are due to the incorrect handling of IGMP packets. An attacker could exploit these vulnerabilities by sending crafted IGMP traffic to an affected device. A successful exploit could allow the attacker to immediately crash the IGMP process or cause memory exhaustion, resulting in other processes becoming unstable. These processes may include, but are not limited to, interior and exterior routing protocols. Cisco will release software updates that address these vulnerabilities.\n\n- CVE-2021-44988: Jerryscript v3.0.0 and below was discovered to contain a stack overflow via ecma_find_named_property in ecma-helpers.c.\n\n- CVE-2021-46050: A Stack Overflow vulnerability exists in Binaryen 103 via the printf_common function.\n\n- CVE-2022-29503: A memory corruption vulnerability exists in the libpthread linuxthreads functionality of uClibC 0.9.33.2 and uClibC-ng 1.0.40. Thread allocation can lead to memory corruption. An attacker can create threads to trigger this vulnerability.\n\n- CVE-2022-35107: SWFTools commit 772e55a2 was discovered to contain a stack overflow via vfprintf at /stdio-common/vfprintf.c.\n\n- CVE-2022-35111: SWFTools commit 772e55a2 was discovered to contain a stack overflow via __sanitizer::StackDepotNode::hash(__sanitizer::StackTrace const&) at /sanitizer_common/sanitizer_stackdepot.cpp.\n\n- CVE-2022-21716: Twisted is an event-based framework for internet applications, supporting Python 3.6+. Prior to 22.2.0, Twisted SSH client and server implement is able to accept an infinite amount of data for the peer's SSH version identifier. This ends up with a buffer using all the available memory. The attach is a simple as `nc -rv localhost 22 < /dev/zero`. A patch is available in version 22.2.0. There are currently no known workarounds.\n\n- CVE-2022-41288: A vulnerability has been identified in JT2Go (All versions < V14.1.0.6), Teamcenter Visualization V13.2 (All versions < V13.2.0.12), Teamcenter Visualization V13.3 (All versions < V13.3.0.8), Teamcenter Visualization V14.0 (All versions < V14.0.0.4), Teamcenter Visualization V14.1 (All versions < V14.1.0.6). The CGM_NIST_Loader.dll contains stack exhaustion vulnerability when parsing a CGM file. An attacker could leverage this vulnerability to crash the application causing denial of service condition.\n\n- CVE-2022-32559: An issue was discovered in Couchbase Server before 7.0.4. Random HTTP requests lead to leaked metrics.\n\n- CVE-2022-3273: Allocation of Resources Without Limits or Throttling in GitHub repository ikus060/rdiffweb prior to 2.5.0a4.\n\n- CVE-2021-3669: A flaw was found in the Linux kernel. Measuring usage of the shared memory does not scale with large shared memory segment counts which could lead to resource exhaustion and DoS.\n\n- CVE-2021-3759: A memory overflow vulnerability was found in the Linux kernel\u2019s ipc functionality of the memcg subsystem, in the way a user calls the semget function multiple times, creating semaphores. This flaw allows a local user to starve the resources, causing a denial of service. The highest threat from this vulnerability is to system availability.\n\n- CVE-2022-1708: A vulnerability was found in CRI-O that causes memory or disk space exhaustion on the node for anyone with access to the Kube API. The ExecSync request runs commands in a container and logs the output of the command. This output is then read by CRI-O after command execution, and it is read in a manner where the entire file corresponding to the output of the command is read in. Thus, if the output of the command is large it is possible to exhaust the memory or the disk space of the node when CRI-O reads the output of the command. The highest threat from this vulnerability is system availability.\n\n- CVE-2022-20143: In addAutomaticZenRule of ZenModeHelper.java, there is a possible permanent denial of service due to resource exhaustion. This could lead to local denial of service with User execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12LAndroid ID: A-220735360\n\n- CVE-2022-20478: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-241764135\n\n- CVE-2022-20479: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-241764340\n\n- CVE-2022-20480: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-241764350\n\n- CVE-2022-20484: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-242702851\n\n- CVE-2022-20485: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-242702935\n\n- CVE-2022-20486: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-242703118\n\n- CVE-2022-20487: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-242703202\n\n- CVE-2022-21952: A Missing Authentication for Critical Function vulnerability in spacewalk-java of SUSE Manager Server 4.1, SUSE Manager Server 4.2 allows remote attackers to easily exhaust available disk resources leading to DoS. This issue affects: SUSE Manager Server 4.1 spacewalk-java versions prior to 4.1.46. SUSE Manager Server 4.2 spacewalk-java versions prior to 4.2.37. \n\n- CVE-2022-23487: js-libp2p is the official javascript Implementation of libp2p networking stack. Versions older than `v0.38.0` of js-libp2p are vulnerable to targeted resource exhaustion attacks. These attacks target libp2p\u2019s connection, stream, peer, and memory management. An attacker can cause the allocation of large amounts of memory, ultimately leading to the process getting killed by the host\u2019s operating system. While a connection manager tasked with keeping the number of connections within manageable limits has been part of js-libp2p, this component was designed to handle the regular churn of peers, not a targeted resource exhaustion attack. Users are advised to update their js-libp2p dependency to `v0.38.0` or greater. There are no known workarounds for this vulnerability.\n\n- CVE-2022-23492: go-libp2p is the offical libp2p implementation in the Go programming language. Version `0.18.0` and older of go-libp2p are vulnerable to targeted resource exhaustion attacks. These attacks target libp2p\u2019s connection, stream, peer, and memory management. An attacker can cause the allocation of large amounts of memory, ultimately leading to the process getting killed by the host\u2019s operating system. While a connection manager tasked with keeping the number of connections within manageable limits has been part of go-libp2p, this component was designed to handle the regular churn of peers, not a targeted resource exhaustion attack. Users are advised to upgrade their version of go-libp2p to version `0.18.1` or newer. Users unable to upgrade may consult the denial of service (dos) mitigation page for more information on how to incorporate mitigation strategies, monitor your application, and respond to attacks.\n\n- CVE-2022-23913: In Apache ActiveMQ Artemis prior to 2.20.0 or 2.19.1, an attacker could partially disrupt availability (DoS) through uncontrolled resource consumption of memory.\n\n- CVE-2022-2406: The legacy Slack import feature in Mattermost version 6.7.0 and earlier fails to properly limit the sizes of imported files, which allows an authenticated attacker to crash the server by importing large files via the Slack import REST API.\n\n- CVE-2022-28871: A Denial-of-Service (DoS) vulnerability was discovered in F-Secure Atlant whereby the fsicapd component used in certain F-Secure products while scanning larger packages/fuzzed files consume too much memory eventually can crash the scanning engine. The exploit can be triggered remotely by an attacker.\n\n- CVE-2022-31075: KubeEdge is an open source system for extending native containerized application orchestration capabilities to hosts at Edge. Prior to versions 1.11.1, 1.10.2, and 1.9.4, EdgeCore may be susceptible to a DoS attack on CloudHub if an attacker was to send a well-crafted HTTP request to `/edge.crt`. If an attacker can send a well-crafted HTTP request to CloudHub, and that request has a very large body, that request can crash the HTTP service through a memory exhaustion vector. The request body is being read into memory, and a body that is larger than the available memory can lead to a successful attack. Because the request would have to make it through authorization, only authorized users may perform this attack. The consequence of the exhaustion is that CloudHub will be in denial of service. KubeEdge is affected only when users enable the CloudHub module in the file `cloudcore.yaml`. This bug has been fixed in Kubeedge 1.11.1, 1.10.2, and 1.9.4. As a workaround, disable the CloudHub switch in the config file `cloudcore.yaml`.\n\n- CVE-2022-31078: KubeEdge is an open source system for extending native containerized application orchestration capabilities to hosts at Edge. Prior to versions 1.11.1, 1.10.2, and 1.9.4, the CloudCore Router does not impose a limit on the size of responses to requests made by the REST handler. An attacker could use this weakness to make a request that will return an HTTP response with a large body and cause DoS of CloudCore. In the HTTP Handler API, the rest handler makes a request to a pre-specified handle. The handle will return an HTTP response that is then read into memory. The consequence of the exhaustion is that CloudCore will be in a denial of service. Only an authenticated user of the cloud can make an attack. It will be affected only when users enable `router` module in the config file `cloudcore.yaml`. This bug has been fixed in Kubeedge 1.11.1, 1.10.2, and 1.9.4. As a workaround, disable the router switch in the config file `cloudcore.yaml`.\n\n- CVE-2022-31079: KubeEdge is an open source system for extending native containerized application orchestration capabilities to hosts at Edge. Prior to versions 1.11.1, 1.10.2, and 1.9.4, the Cloud Stream server and the Edge Stream server reads the entire message into memory without imposing a limit on the size of this message. An attacker can exploit this by sending a large message to exhaust memory and cause a DoS. The Cloud Stream server and the Edge Stream server are under DoS attack in this case. The consequence of the exhaustion is that the CloudCore and EdgeCore will be in a denial of service. Only an authenticated user can cause this issue. It will be affected only when users enable `cloudStream` module in the config file `cloudcore.yaml` and enable `edgeStream` module in the config file `edgecore.yaml`. This bug has been fixed in Kubeedge 1.11.1, 1.10.2, and 1.9.4. As a workaround, disable cloudStream module in the config file `cloudcore.yaml` and disable edgeStream module in the config file `edgecore.yaml`.\n\n- CVE-2022-3147: Mattermost version 7.0.x and earlier fails to sufficiently limit the in-memory sizes of concurrently uploaded JPEG images, which allows authenticated users to cause resource exhaustion on specific system configurations, resulting in server-side Denial of Service.\n\n- CVE-2022-33749: XAPI open file limit DoS It is possible for an unauthenticated client on the network to cause XAPI to hit its file-descriptor limit. This causes XAPI to be unable to accept new requests for other (trusted) clients, and blocks XAPI from carrying out any tasks that require the opening of file descriptors.\n\n- CVE-2022-3423: Allocation of Resources Without Limits or Throttling in GitHub repository nocodb/nocodb prior to 0.92.0. \n\n- CVE-2022-35915: OpenZeppelin Contracts is a library for secure smart contract development. The target contract of an EIP-165 `supportsInterface` query can cause unbounded gas consumption by returning a lot of data, while it is generally assumed that this operation has a bounded cost. The issue has been fixed in v4.7.2. Users are advised to upgrade. There are no known workarounds for this issue.\n\n- CVE-2022-41932: XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. It's possible to make XWiki create many new schemas and fill them with tables just by using a crafted user identifier in the login form. This may lead to degraded database performance. The problem has been patched in XWiki 13.10.8, 14.6RC1 and 14.4.2. Users are advised to upgrade. There are no known workarounds for this issue.\n\n- CVE-2022-2134: Allocation of Resources Without Limits or Throttling in GitHub repository inventree/inventree prior to 0.8.0.\n\n- CVE-2022-43686: In Concrete CMS (formerly concrete5) below 8.5.10 and between 9.0.0 and 9.1.2, the authTypeConcreteCookieMap table can be filled up causing a denial of service (high load).\n\n- CVE-2022-41725: A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary files. Callers can limit the size of form data with http.MaxBytesReader.\n\nRelated Weaknesses:\n\n- CWE-400 (ChildOf)\n\n- CWE-665 (ChildOf)\n\n- CWE-400 (ChildOf)",
          "type": "Base",
          "search_source": "base_query",
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            }
          }
        },
        {
          "cwe_id": "400",
          "name": "Uncontrolled Resource Consumption",
          "description": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
          "score": 65.67394027427275,
          "matched_text": "CWE-400: Uncontrolled Resource Consumption\n\nType: Class\n\nStatus: Draft\n\nAlternative Terms:\n\nResource Exhaustion\n\nResource Exhaustion\n\nResource Exhaustion\n\nDescription:\n\nThe product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.\n\nExtended Details:\n\n\n\nLimited resources include memory, file system storage, database connection pool entries, and CPU. If an attacker can trigger the allocation of these limited resources, but the number or size of the resources is not controlled, then the attacker could cause a denial of service that consumes all available resources. This would prevent valid users from accessing the product, and it could potentially have an impact on the surrounding environment. For example, a memory exhaustion attack against an application could slow down the application as well as its host operating system.\n\n\nThere are at least three distinct scenarios which can commonly lead to resource exhaustion:\n\n\n  - Lack of throttling for the number of allocated resources\n\n  - Losing all references to a resource before reaching the shutdown stage\n\n  - Not closing/returning a resource after processing\n\nResource exhaustion problems are often result due to an incorrect implementation of the following situations:\n\n  - Error conditions and other exceptional circumstances.\n\n  - Confusion over which part of the program is responsible for releasing the resource.\n\n\n\nReal-World Examples:\n\n- CVE-2022-21668: Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190).\n\n- CVE-2020-7218: Go-based workload orchestrator does not limit resource usage with unauthenticated connections, allowing a DoS by flooding the service\n\n- CVE-2020-3566: Resource exhaustion in distributed OS because of \"insufficient\" IGMP queue management, as exploited in the wild per CISA KEV.\n\n- CVE-2009-2874: Product allows attackers to cause a crash via a large number of connections.\n\n- CVE-2009-1928: Malformed request triggers uncontrolled recursion, leading to stack exhaustion.\n\n- CVE-2009-2858: Chain: memory leak (CWE-404) leads to resource exhaustion.\n\n- CVE-2009-2726: Driver does not use a maximum width when invoking sscanf style functions, causing stack consumption.\n\n- CVE-2009-2540: Large integer value for a length property in an object causes a large amount of memory allocation.\n\n- CVE-2009-2299: Web application firewall consumes excessive memory when an HTTP request contains a large Content-Length value but no POST data.\n\n- CVE-2009-2054: Product allows exhaustion of file descriptors when processing a large number of TCP packets.\n\n- CVE-2008-5180: Communication product allows memory consumption with a large number of SIP requests, which cause many sessions to be created.\n\n- CVE-2008-2121: TCP implementation allows attackers to consume CPU and prevent new connections using a TCP SYN flood attack.\n\n- CVE-2008-2122: Port scan triggers CPU consumption with processes that attempt to read data from closed sockets.\n\n- CVE-2008-1700: Product allows attackers to cause a denial of service via a large number of directives, each of which opens a separate window.\n\n- CVE-2007-4103: Product allows resource exhaustion via a large number of calls that do not complete a 3-way handshake.\n\n- CVE-2006-1173: Mail server does not properly handle deeply nested multipart MIME messages, leading to stack exhaustion.\n\n- CVE-2007-0897: Chain: anti-virus product encounters a malformed file but returns from a function without closing a file descriptor (CWE-775) leading to file descriptor consumption (CWE-400) and failed scans.\n\nTop 25 CWE Examples:\n\n- CVE-2021-22101: Cloud Controller versions prior to 1.118.0 are vulnerable to unauthenticated denial of Service(DoS) vulnerability allowing unauthenticated attackers to cause denial of service by using REST HTTP requests with label_selectors on multiple V3 endpoints by generating an enormous SQL query.\n\n- CVE-2021-1266: A vulnerability in the REST API of Cisco Managed Services Accelerator (MSX) could allow an authenticated, remote attacker to cause a denial of service (DoS) condition on an affected device. The vulnerability is due to the way that the affected software logs certain API requests. An attacker could exploit this vulnerability by sending a flood of crafted API requests to an affected device. A successful exploit could allow the attacker to cause a DoS condition on the affected device.\n\n- CVE-2021-1312: A vulnerability in the system resource management of Cisco Elastic Services Controller (ESC) could allow an unauthenticated, remote attacker to cause a denial of service (DoS) to the health monitor API on an affected device. The vulnerability is due to inadequate provisioning of kernel parameters for the maximum number of TCP connections and SYN backlog. An attacker could exploit this vulnerability by sending a flood of crafted TCP packets to an affected device. A successful exploit could allow the attacker to block TCP listening ports that are used by the health monitor API. This vulnerability only affects customers who use the health monitor API.\n\n- CVE-2021-1378: A vulnerability in the SSH service of the Cisco StarOS operating system could allow an unauthenticated, remote attacker to cause an affected device to stop processing traffic, resulting in a denial of service (DoS) condition. The vulnerability is due to a logic error that may occur under specific traffic conditions. An attacker could exploit this vulnerability by sending a series of crafted packets to an affected device. A successful exploit could allow the attacker to prevent the targeted service from receiving any traffic, which would lead to a DoS condition on the affected device.\n\n- CVE-2021-1489: A vulnerability in filesystem usage management for Cisco Firepower Device Manager (FDM) Software could allow an authenticated, remote attacker to exhaust filesystem resources, resulting in a denial of service (DoS) condition on an affected device. This vulnerability is due to the insufficient management of available filesystem resources. An attacker could exploit this vulnerability by uploading files to the device and exhausting available filesystem resources. A successful exploit could allow the attacker to cause database errors and cause the device to become unresponsive to web-based management. Manual intervention is required to free filesystem resources and return the device to an operational state.\n\n- CVE-2021-1460: A vulnerability in the Cisco IOx Application Framework of Cisco 809 Industrial Integrated Services Routers (Industrial ISRs), Cisco 829 Industrial ISRs, Cisco CGR 1000 Compute Module, and Cisco IC3000 Industrial Compute Gateway could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition on an affected device. This vulnerability is due to insufficient error handling during packet processing. An attacker could exploit this vulnerability by sending a high and sustained rate of crafted TCP traffic to the IOx web server on an affected device. A successful exploit could allow the attacker to cause the IOx web server to stop processing requests, resulting in a DoS condition.\n\n- CVE-2021-0285: An uncontrolled resource consumption vulnerability in Juniper Networks Junos OS on QFX5000 Series and EX4600 Series switches allows an attacker sending large amounts of legitimate traffic destined to the device to cause Interchassis Control Protocol (ICCP) interruptions, leading to an unstable control connection between the Multi-Chassis Link Aggregation Group (MC-LAG) nodes which can in turn lead to traffic loss. Continued receipt of this amount of traffic will create a sustained Denial of Service (DoS) condition. An indication that the system could be impacted by this issue is the following log message: \"DDOS_PROTOCOL_VIOLATION_SET: Warning: Host-bound traffic for protocol/exception LOCALNH:aggregate exceeded its allowed bandwidth at fpc <fpc number> for <n> times, started at <timestamp>\" This issue affects Juniper Networks Junos OS on QFX5000 Series and EX4600 Series: 15.1 versions prior to 15.1R7-S9; 17.3 versions prior to 17.3R3-S11; 17.4 versions prior to 17.4R2-S13, 17.4R3-S5; 18.3 versions prior to 18.3R3-S5; 18.4 versions prior to 18.4R2-S8, 18.4R3-S7; 19.1 versions prior to 19.1R3-S5; 19.2 versions prior to 19.2R1-S6, 19.2R3-S2; 19.3 versions prior to 19.3R2-S6, 19.3R3-S2; 19.4 versions prior to 19.4R1-S4, 19.4R2-S4, 19.4R3-S2; 20.1 versions prior to 20.1R2-S2, 20.1R3; 20.2 versions prior to 20.2R2-S3, 20.2R3; 20.3 versions prior to 20.3R2; 20.4 versions prior to 20.4R1-S1, 20.4R2.\n\n- CVE-2021-22119: Spring Security versions 5.5.x prior to 5.5.1, 5.4.x prior to 5.4.7, 5.3.x prior to 5.3.10 and 5.2.x prior to 5.2.11 are susceptible to a Denial-of-Service (DoS) attack via the initiation of the Authorization Request in an OAuth 2.0 Client Web and WebFlux application. A malicious user or attacker can send multiple requests initiating the Authorization Request for the Authorization Code Grant, which has the potential of exhausting system resources using a single session or multiple sessions.\n\n- CVE-2021-43173: In NLnet Labs Routinator prior to 0.10.2, a validation run can be delayed significantly by an RRDP repository by not answering but slowly drip-feeding bytes to keep the connection alive. This can be used to effectively stall validation. While Routinator has a configurable time-out value for RRDP connections, this time-out was only applied to individual read or write operations rather than the complete request. Thus, if an RRDP repository sends a little bit of data before that time-out expired, it can continuously extend the time it takes for the request to finish. Since validation will only continue once the update of an RRDP repository has concluded, this delay will cause validation to stall, leading to Routinator continuing to serve the old data set or, if in the initial validation run directly after starting, never serve any data at all.\n\n- CVE-2020-12291: Uncontrolled resource consumption in some Intel(R) Thunderbolt(TM) controllers may allow an authenticated user to potentially enable denial of service via local access.\n\n- CVE-2020-12296: Uncontrolled resource consumption in some Intel(R) Thunderbolt(TM) controllers may allow an authenticated user to potentially enable denial of service via local access.\n\n- CVE-2020-1702: A malicious container image can consume an unbounded amount of memory when being pulled to a container runtime host, such as Red Hat Enterprise Linux using podman, or OpenShift Container Platform. An attacker can use this flaw to trick a user, with privileges to pull container images, into crashing the process responsible for pulling the image. This flaw affects containers-image versions before 5.2.0.\n\n- CVE-2020-1750: A flaw was found in the machine-config-operator that causes an OpenShift node to become unresponsive when a container consumes a large amount of memory. An attacker could use this flaw to deny access to schedule new pods in the OpenShift cluster. This was fixed in openshift/machine-config-operator 4.4.3, openshift/machine-config-operator 4.3.25, openshift/machine-config-operator 4.2.36.\n\n- CVE-2020-20217: Mikrotik RouterOs before 6.47 (stable tree) suffers from an uncontrolled resource consumption vulnerability in the /nova/bin/route process. An authenticated remote attacker can cause a Denial of Service due to overloading the systems CPU.\n\n- CVE-2020-20221: Mikrotik RouterOs before 6.44.6 (long-term tree) suffers from an uncontrolled resource consumption vulnerability in the /nova/bin/cerm process. An authenticated remote attacker can cause a Denial of Service due to overloading the systems CPU.\n\n- CVE-2020-20230: Mikrotik RouterOs before stable 6.47 suffers from an uncontrolled resource consumption in the sshd process. An authenticated remote attacker can cause a Denial of Service due to overloading the systems CPU.\n\n- CVE-2020-20248: Mikrotik RouterOs before stable 6.47 suffers from an uncontrolled resource consumption in the memtest process. An authenticated remote attacker can cause a Denial of Service due to overloading the systems CPU.\n\n- CVE-2020-25242: A vulnerability has been identified in SIMATIC NET CP 343-1 Advanced (incl. SIPLUS variants) (All versions), SIMATIC NET CP 343-1 Lean (incl. SIPLUS variants) (All versions), SIMATIC NET CP 343-1 Standard (incl. SIPLUS variants) (All versions). Specially crafted packets sent to TCP port 102 could cause a Denial-of-Service condition on the affected devices. A cold restart might be necessary in order to recover.\n\n- CVE-2020-28944: OX Guard 2.10.4 and earlier allows a Denial of Service via a WKS server that responds slowly or with a large amount of data.\n\n- CVE-2020-35498: A vulnerability was found in openvswitch. A limitation in the implementation of userspace packet parsing can allow a malicious user to send a specially crafted packet causing the resulting megaflow in the kernel to be too wide, potentially causing a denial of service. The highest threat from this vulnerability is to system availability.\n\n- CVE-2020-35510: A flaw was found in jboss-remoting in versions before 5.0.20.SP1-redhat-00001. A malicious attacker could cause threads to hold up forever in the EJB server by writing a sequence of bytes corresponding to the expected messages of a successful EJB client request, but omitting the ACK messages, or just tamper with jboss-remoting code, deleting the lines that send the ACK message from the EJB client code resulting in a denial of service. The highest threat from this vulnerability is to system availability.\n\n- CVE-2020-36332: A flaw was found in libwebp in versions before 1.0.1. When reading a file libwebp allocates an excessive amount of memory. The highest threat from this vulnerability is to the service availability.\n\n- CVE-2020-8299: Citrix ADC and Citrix/NetScaler Gateway 13.0 before 13.0-76.29, 12.1-61.18, 11.1-65.20, Citrix ADC 12.1-FIPS before 12.1-55.238, and Citrix SD-WAN WANOP Edition before 11.4.0, 11.3.2, 11.3.1a, 11.2.3a, 11.1.2c, 10.2.9a suffers from uncontrolled resource consumption by way of a network-based denial-of-service from within the same Layer 2 network segment. Note that the attacker must be in the same Layer 2 network segment as the vulnerable appliance.\n\n- CVE-2020-9000: An issue was discovered in iPortalis iCS 7.1.13.0. Attackers can send a sequence of requests to rapidly cause .NET Input Validation errors. This increases the size of the log file on the remote server until memory is exhausted, therefore consuming the maximum amount of resources (triggering a denial of service condition).\n\n- CVE-2021-0008: Uncontrolled resource consumption in firmware for Intel(R) Ethernet Adapters 800 Series Controllers and associated adapters before version 1.5.3.0 may allow privileged user to potentially enable denial of service via local access.\n\n- CVE-2021-0180: Uncontrolled resource consumption in the Intel(R) HAXM software before version 7.6.6 may allow an unauthenticated user to potentially enable privilege escalation via local access.\n\n- CVE-2021-0182: Uncontrolled resource consumption in the Intel(R) HAXM software before version 7.6.6 may allow an unauthenticated user to potentially enable information disclosure via local access.\n\n- CVE-2021-0229: An uncontrolled resource consumption vulnerability in Message Queue Telemetry Transport (MQTT) server of Juniper Networks Junos OS allows an attacker to cause MQTT server to crash and restart leading to a Denial of Service (DoS) by sending a stream of specific packets. A Juniper Extension Toolkit (JET) application designed with a listening port uses the Message Queue Telemetry Transport (MQTT) protocol to connect to a mosquitto broker that is running on Junos OS to subscribe for events. Continued receipt and processing of this packet will create a sustained Denial of Service (DoS) condition. This issue affects Juniper Networks Junos OS: 16.1R1 and later versions prior to 17.3R3-S11; 17.4 versions prior to 17.4R2-S13, 17.4R3-S4; 18.1 versions prior to 18.1R3-S12; 18.2 versions prior to 18.2R2-S8, 18.2R3-S7; 18.3 versions prior to 18.3R3-S4; 18.4 versions prior to 18.4R1-S8, 18.4R2-S7, 18.4R3-S7; 19.1 versions prior to 19.1R3-S5; 19.2 versions prior to 19.2R1-S6, 19.2R3-S2; 19.3 versions prior to 19.3R3-S2; 19.4 versions prior to 19.4R2-S4, 19.4R3-S2; 20.1 versions prior to 20.1R2-S1, 20.1R3; 20.2 versions prior to 20.2R2-S2, 20.2R3; 20.3 versions prior to 20.3R1-S1, 20.3R2. This issue does not affect Juniper Networks Junos OS versions prior to 16.1R1.\n\n- CVE-2021-0238: When a MX Series is configured as a Broadband Network Gateway (BNG) based on Layer 2 Tunneling Protocol (L2TP), executing certain CLI command may cause the system to run out of disk space, excessive disk usage may cause other complications. An administrator can use the following CLI command to monitor the available disk space: user@device> show system storage Filesystem Size Used Avail Capacity Mounted on /dev/gpt/junos 19G 18G 147M 99% /.mount <<<<< running out of space tmpfs 21G 16K 21G 0% /.mount/tmp tmpfs 5.3G 1.7M 5.3G 0% /.mount/mfs This issue affects Juniper Networks Junos OS on MX Series: 17.3R1 and later versions prior to 17.4R3-S5, 18.1 versions prior to 18.1R3-S13, 18.2 versions prior to 18.2R3-S7; 18.3 versions prior to 18.3R3-S4; 18.4 versions prior to 18.4R3-S7; 19.1 versions prior to 19.1R3-S4; 19.2 versions prior to 19.2R1-S6, 19.2R3-S2; 19.3 versions prior to 19.3R3-S2; 19.4 versions prior to 19.4R2-S4, 19.4R3-S2; 20.1 versions prior to 20.1R3; 20.2 versions prior to 20.2R2-S3, 20.2R3; 20.3 versions prior to 20.3R2; 20.4 versions prior to 20.4R1-S1, 20.4R2; This issue does not affect Juniper Networks Junos OS versions prior to 17.3R1.\n\n- CVE-2021-0292: An Uncontrolled Resource Consumption vulnerability in the ARP daemon (arpd) and Network Discovery Protocol (ndp) process of Juniper Networks Junos OS Evolved allows a malicious attacker on the local network to consume memory resources, ultimately resulting in a Denial of Service (DoS) condition. Link-layer functions such as IPv4 and/or IPv6 address resolution may be impacted, leading to traffic loss. The processes do not recover on their own and must be manually restarted. Changes in memory usage can be monitored using the following shell commands (header shown for clarity): user@router:/var/log# ps aux | grep arpd USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 31418 59.0 0.7 *5702564* 247952 ? xxx /usr/sbin/arpd --app-name arpd -I object_select --shared-objects-mode 3 user@router:/var/log# ps aux | grep arpd USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 31418 49.1 1.0 *5813156* 351184 ? xxx /usr/sbin/arpd --app-name arpd -I object_select --shared-objects-mode 3 Memory usage can be monitored for the ndp process in a similar fashion: user@router:/var/log# ps aux | grep ndp USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 14935 0.0 0.1 *5614052* 27256 ? Ssl Jun15 0:17 /usr/sbin/ndp -I no_tab_chk,object_select --app-name ndp --shared-obje user@router:/var/log# ps aux | grep ndp USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 14935 0.0 0.1 *5725164* 27256 ? Ssl Jun15 0:17 /usr/sbin/ndp -I no_tab_chk,object_select --app-name ndp --shared-obje This issue affects Juniper Networks Junos OS Evolved: 19.4 versions prior to 19.4R2-S3-EVO; 20.1 versions prior to 20.1R2-S4-EVO; all versions of 20.2-EVO. This issue does not affect Juniper Networks Junos OS Evolved versions prior to 19.4R2-EVO.\n\n- CVE-2021-20591: Uncontrolled Resource Consumption vulnerability in Mitsubishi Electric MELSEC iQ-R series CPU modules (R00/01/02CPU all versions, R04/08/16/32/120(EN)CPU all versions, R08/16/32/120SFCPU all versions, R08/16/32/120PCPU all versions, R08/16/32/120PSFCPU all versions) allows a remote unauthenticated attacker to prevent legitimate clients from connecting to the MELSOFT transmission port (TCP/IP) by not closing a connection properly, which may lead to a denial of service (DoS) condition.\n\n- CVE-2021-20600: Uncontrolled resource consumption in Mitsubishi Electric MELSEC iQ-R series C Controller Module R12CCPU-V Firmware Versions \"16\" and prior allows a remote unauthenticated attacker to cause a denial-of-service (DoS) condition by sending a large number of packets in a short time while the module starting up. System reset is required for recovery.\n\n- CVE-2021-20609: Uncontrolled Resource Consumption vulnerability in Mitsubishi Electric MELSEC iQ-R Series R00/01/02CPU, MELSEC iQ-R Series R04/08/16/32/120(EN)CPU, MELSEC iQ-R Series R08/16/32/120SFCPU, MELSEC iQ-R Series R08/16/32/120PCPU, MELSEC iQ-R Series R08/16/32/120PSFCPU, MELSEC iQ-R Series R16/32/64MTCPU, MELSEC iQ-R Series R12CCPU-V, MELSEC Q Series Q03UDECPU, MELSEC Q Series Q04/06/10/13/20/26/50/100UDEHCPU, MELSEC Q Series Q03/04/06/13/26UDVCPU, MELSEC Q Series Q04/06/13/26UDPVCPU, MELSEC Q Series Q12DCCPU-V, MELSEC Q Series Q24DHCCPU-V(G), MELSEC Q Series Q24/26DHCCPU-LS, MELSEC Q Series MR-MQ100, MELSEC Q Series Q172/173DCPU-S1, MELSEC Q Series Q172/173DSCPU, MELSEC Q Series Q170MCPU, MELSEC Q Series Q170MSCPU(-S1), MELSEC L Series L02/06/26CPU(-P), MELSEC L Series L26CPU-(P)BT and MELIPC Series MI5122-VW allows a remote unauthenticated attacker to cause a denial-of-service (DoS) condition by sending specially crafted packets. System reset is required for recovery.\n\n- CVE-2021-20718: mod_auth_openidc 2.4.0 to 2.4.7 allows a remote attacker to cause a denial-of-service (DoS) condition via unspecified vectors.\n\n- CVE-2021-30464: OMICRON StationGuard before 1.10 allows remote attackers to cause a denial of service (connectivity outage) via crafted tcp/20499 packets to the CTRL Ethernet port.\n\n- CVE-2021-30504: In JetBrains IntelliJ IDEA before 2021.1, DoS was possible because of unbounded resource allocation.\n\n- CVE-2021-31340: A vulnerability has been identified in SIMATIC RF166C (All versions > V1.1 and < V1.3.2), SIMATIC RF185C (All versions > V1.1 and < V1.3.2), SIMATIC RF186C (All versions > V1.1 and < V1.3.2), SIMATIC RF186CI (All versions > V1.1 and < V1.3.2), SIMATIC RF188C (All versions > V1.1 and < V1.3.2), SIMATIC RF188CI (All versions > V1.1 and < V1.3.2), SIMATIC RF360R (All versions < V2.0), SIMATIC Reader RF610R CMIIT (All versions > V3.0 < V4.0), SIMATIC Reader RF610R ETSI (All versions > V3.0 < V4.0), SIMATIC Reader RF610R FCC (All versions > V3.0 < V4.0), SIMATIC Reader RF615R CMIIT (All versions > V3.0 < V4.0), SIMATIC Reader RF615R ETSI (All versions > V3.0 < V4.0), SIMATIC Reader RF615R FCC (All versions > V3.0 < V4.0), SIMATIC Reader RF650R ARIB (All versions > V3.0 < V4.0), SIMATIC Reader RF650R CMIIT (All versions > V3.0 < V4.0), SIMATIC Reader RF650R ETSI (All versions > V3.0 < V4.0), SIMATIC Reader RF650R FCC (All versions > V3.0 < V4.0), SIMATIC Reader RF680R ARIB (All versions > V3.0 < V4.0), SIMATIC Reader RF680R CMIIT (All versions > V3.0 < V4.0), SIMATIC Reader RF680R ETSI (All versions > V3.0 < V4.0), SIMATIC Reader RF680R FCC (All versions > V3.0 < V4.0), SIMATIC Reader RF685R ARIB (All versions > V3.0 < V4.0), SIMATIC Reader RF685R CMIIT (All versions > V3.0 < V4.0), SIMATIC Reader RF685R ETSI (All versions > V3.0 < V4.0), SIMATIC Reader RF685R FCC (All versions > V3.0 < V4.0). Affected devices do not properly handle large numbers of incoming connections. An attacker may leverage this to cause a Denial-of-Service situation.\n\n- CVE-2021-31365: An Uncontrolled Resource Consumption vulnerability in Juniper Networks Junos OS on EX2300, EX3400 and EX4300 Series platforms allows an adjacent attacker sending a stream of layer 2 frames will trigger an Aggregated Ethernet (AE) interface to go down and thereby causing a Denial of Service (DoS). By continuously sending a stream of specific layer 2 frames an attacker will sustain the Denial of Service (DoS) condition. This issue affects: Juniper Networks Junos OS EX4300 Series All versions prior to 15.1R7-S7; 16.1 versions prior to 16.1R7-S8; 17.1 versions prior to 17.1R2-S12; 17.2 versions prior to 17.2R3-S4; 17.3 versions prior to 17.3R3-S8; 17.4 versions prior to 17.4R2-S10, 17.4R3-S2; 18.1 versions prior to 18.1R3-S10; 18.2 versions prior to 18.2R2-S7, 18.2R3-S3; 18.3 versions prior to 18.3R2-S4, 18.3R3-S2; 18.4 versions prior to 18.4R1-S7, 18.4R2-S4, 18.4R3-S1; 19.1 versions prior to 19.1R1-S5, 19.1R2-S1, 19.1R3; 19.2 versions prior to 19.2R1-S5, 19.2R2; 19.3 versions prior to 19.3R2-S2, 19.3R3; 19.4 versions prior to 19.4R1-S2, 19.4R2. Juniper Networks Junos OS EX3400 and EX4300-MP Series All versions prior to 18.1R3-S12; 18.2 versions prior to 18.2R3-S7; 18.3 versions prior to 18.3R3-S4; 18.4 versions prior to 18.4R2-S9, 18.4R3-S7; 19.1 versions prior to 19.1R2-S3, 19.1R3-S4; 19.2 versions prior to 19.2R3-S1; 19.3 versions prior to 19.3R3-S1; 19.4 versions prior to 19.4R3-S1; 20.1 versions prior to 20.1R3; 20.2 versions prior to 20.2R3; 20.3 versions prior to 20.3R2. Juniper Networks Junos OS EX2300 Series All versions prior to 18.3R3-S5; 18.4 versions prior to 18.4R2-S9, 18.4R3-S9; 19.1 versions prior to 19.1R2-S3, 19.1R3-S6; 19.2 versions prior to 19.2R1-S7, 19.2R3-S3; 19.3 versions prior to 19.3R2-S7, 19.3R3-S3; 19.4 versions prior to 19.4R3-S5; 20.1 versions prior to 20.1R2-S2, 20.1R3-S1; 20.2 versions prior to 20.2R3-S2; 20.3 versions prior to 20.3R3-S1; 20.4 versions prior to 20.4R2-S1, 20.4R3; 21.1 versions prior to 21.1R2.\n\n- CVE-2021-31368: An Uncontrolled Resource Consumption vulnerability in the kernel of Juniper Networks JUNOS OS allows an unauthenticated network based attacker to cause 100% CPU load and the device to become unresponsive by sending a flood of traffic to the out-of-band management ethernet port. Continued receipted of a flood will create a sustained Denial of Service (DoS) condition. Once the flood subsides the system will recover by itself. An indication that the system is affected by this issue would be that kernel and netisr process are shown to be using a lot of CPU cycles like in the following example output: user@host> show system processes extensive ... PID USERNAME PRI NICE SIZE RES STATE C TIME WCPU COMMAND 16 root -72 - 0K 304K WAIT 1 839:40 88.96% intr{swi1: netisr 0} 0 root 97 - 0K 160K RUN 1 732:43 87.99% kernel{bcm560xgmac0 que} This issue affects Juniper Networks JUNOS OS on EX2300 Series, EX3400 Series, and ACX710: All versions prior to 18.1R3-S13; 18.2 versions prior to 18.2R3-S8; 18.3 versions prior to 18.3R3-S5; 18.4 versions prior to 18.4R2-S8, 18.4R3-S9; 19.1 versions prior to 19.1R3-S5; 19.2 versions prior to 19.2R1-S7, 19.2R3-S3; 19.3 versions prior to 19.3R2-S6, 19.3R3-S2; 19.4 versions prior to 19.4R1-S4, 19.4R3-S3; 20.1 versions prior to 20.1R2-S2, 20.1R3; 20.2 versions prior to 20.2R3; 20.3 versions prior to 20.3R2-S1, 20.3R3; 20.4 versions prior to 20.4R2.\n\n- CVE-2021-32012: SheetJS and SheetJS Pro through 0.16.9 allows attackers to cause a denial of service (memory consumption) via a crafted .xlsx document that is mishandled when read by xlsx.js (issue 1 of 2).\n\n- CVE-2021-32013: SheetJS and SheetJS Pro through 0.16.9 allows attackers to cause a denial of service (memory consumption) via a crafted .xlsx document that is mishandled when read by xlsx.js (issue 2 of 2).\n\n- CVE-2021-32014: SheetJS and SheetJS Pro through 0.16.9 allows attackers to cause a denial of service (CPU consumption) via a crafted .xlsx document that is mishandled when read by xlsx.js.\n\n- CVE-2021-32455: SITEL CAP/PRX firmware version 5.2.01, allows an attacker with access to the device\u00b4s network to cause a denial of service condition on the device. An attacker could exploit this vulnerability by sending HTTP requests massively.\n\n- CVE-2021-32595: Multiple uncontrolled resource consumption vulnerabilities in the web interface of FortiPortal before 6.0.6 may allow a single low-privileged user to induce a denial of service via multiple HTTP requests.\n\n- CVE-2021-32722: GlobalNewFiles is a mediawiki extension. Versions prior to 48be7adb70568e20e961ea1cb70904454a671b1d are affected by an uncontrolled resource consumption vulnerability. A large amount of page moves within a short space of time could overwhelm Database servers due to improper handling of load balancing and a lack of an appropriate index. As a workaround, one may avoid use of the extension unless additional rate limit at the MediaWiki level or via PoolCounter / MySQL is enabled. A patch is available in version 48be7adb70568e20e961ea1cb70904454a671b1d.\n\n- CVE-2021-32918: An issue was discovered in Prosody before 0.11.9. Default settings are susceptible to remote unauthenticated denial-of-service (DoS) attacks via memory exhaustion when running under Lua 5.2 or Lua 5.3.\n\n- CVE-2021-33073: Uncontrolled resource consumption in the Intel(R) Distribution of OpenVINO\u00e2\u201e\u00a2 Toolkit before version 2021.4 may allow an unauthenticated user to potentially enable denial of service via local access.\n\n- CVE-2021-33818: An issue was discovered in UniFi Protect G3 FLEX Camera Version UVC.v4.30.0.67. Attackers can use slowhttptest tool to send incomplete HTTP request, which could make server keep waiting for the packet to finish the connection, until its resource exhausted. Then the web server is denial-of-service.\n\n- CVE-2021-33822: An issue was discovered on 4GEE ROUTER HH70VB Version HH70_E1_02.00_22. Attackers can use slowhttptest tool to send incomplete HTTP request, which could make server keep waiting for the packet to finish the connection, until its resource exhausted. Then the web server is denial-of-service.\n\n- CVE-2021-33824: An issue was discovered on MOXA Mgate MB3180 Version 2.1 Build 18113012. Attackers can use slowhttptest tool to send incomplete HTTP request, which could make server keep waiting for the packet to finish the connection, until its resource exhausted. Then the web server is denial-of-service.\n\n- CVE-2021-36187: A uncontrolled resource consumption in Fortinet FortiWeb version 6.4.0, version 6.3.15 and below, 6.2.5 and below allows attacker to cause a denial of service for webserver daemon via crafted HTTP requests\n\n- CVE-2021-3909: OctoRPKI does not limit the length of a connection, allowing for a slowloris DOS attack to take place which makes OctoRPKI wait forever. Specifically, the repository that OctoRPKI sends HTTP requests to will keep the connection open for a day before a response is returned, but does keep drip feeding new bytes to keep the connection alive.\n\n- CVE-2021-39171: Passport-SAML is a SAML 2.0 authentication provider for Passport, the Node.js authentication library. Prior to version 3.1.0, a malicious SAML payload can require transforms that consume significant system resources to process, thereby resulting in reduced or denied service. This would be an effective way to perform a denial-of-service attack. This has been resolved in version 3.1.0. The resolution is to limit the number of allowable transforms to 2.\n\n- CVE-2021-21271: Tendermint Core is an open source Byzantine Fault Tolerant (BFT) middleware that takes a state transition machine - written in any programming language - and securely replicates it on many machines. Tendermint Core v0.34.0 introduced a new way of handling evidence of misbehavior. As part of this, we added a new Timestamp field to Evidence structs. This timestamp would be calculated using the same algorithm that is used when a block is created and proposed. (This algorithm relies on the timestamp of the last commit from this specific block.) In Tendermint Core v0.34.0-v0.34.2, the consensus reactor is responsible for forming DuplicateVoteEvidence whenever double signs are observed. However, the current block is still \u201cin flight\u201d when it is being formed by the consensus reactor. It hasn\u2019t been finalized through network consensus yet. This means that different nodes in the network may observe different \u201clast commits\u201d when assigning a timestamp to DuplicateVoteEvidence. In turn, different nodes could form DuplicateVoteEvidence objects at the same height but with different timestamps. One DuplicateVoteEvidence object (with one timestamp) will then eventually get finalized in the block, but this means that any DuplicateVoteEvidence with a different timestamp is considered invalid. Any node that formed invalid DuplicateVoteEvidence will continue to propose invalid evidence; its peers may see this, and choose to disconnect from this node. This bug means that double signs are DoS vectors in Tendermint Core v0.34.0-v0.34.2. Tendermint Core v0.34.3 is a security release which fixes this bug. As of v0.34.3, DuplicateVoteEvidence is no longer formed by the consensus reactor; rather, the consensus reactor passes the Votes themselves into the EvidencePool, which is now responsible for forming DuplicateVoteEvidence. The EvidencePool has timestamp info that should be consistent across the network, which means that DuplicateVoteEvidence formed in this reactor should have consistent timestamps. This release changes the API between the consensus and evidence reactors.\n\n- CVE-2021-21328: Vapor is a web framework for Swift. In Vapor before version 4.40.1, there is a DoS attack against anyone who Bootstraps a metrics backend for their Vapor app. The following is the attack vector: 1. send unlimited requests against a vapor instance with different paths. this will create unlimited counters and timers, which will eventually drain the system. 2. downstream services might suffer from this attack as well by being spammed with error paths. This has been patched in 4.40.1. The `DefaultResponder` will rewrite any undefined route paths for to `vapor_route_undefined` to avoid unlimited counters.\n\n- CVE-2021-21369: Hyperledger Besu is an open-source, MainNet compatible, Ethereum client written in Java. In Besu before version 1.5.1 there is a denial-of-service vulnerability involving the HTTP JSON-RPC API service. If username and password authentication is enabled for the HTTP JSON-RPC API service, then prior to making any requests to an API endpoint the requestor must use the login endpoint to obtain a JSON web token (JWT) using their credentials. A single user can readily overload the login endpoint with invalid requests (incorrect password). As the supplied password is checked for validity on the main vertx event loop and takes a relatively long time this can cause the processing of other valid requests to fail. A valid username is required for this vulnerability to be exposed. This has been fixed in version 1.5.1.\n\n- CVE-2021-21529: Dell System Update (DSU) 1.9 and earlier versions contain a denial of service vulnerability. A local authenticated malicious user with low privileges may potentially exploit this vulnerability to cause the system to run out of memory by running multiple instances of the vulnerable application.\n\n- CVE-2021-21728: A ZTE product has a configuration error vulnerability. Because a certain port is open by default, an attacker can consume system processing resources by flushing a large number of packets to the port, and successfully exploiting this vulnerability could reduce system processing capabilities. This affects: ZXA10 C300M all versions up to V4.3P8.\n\n- CVE-2021-22010: The vCenter Server contains a denial-of-service vulnerability in VPXD service. A malicious actor with network access to port 443 on vCenter Server may exploit this issue to create a denial of service condition due to excessive memory consumption by VPXD service.\n\n- CVE-2021-22124: An uncontrolled resource consumption (denial of service) vulnerability in the login modules of FortiSandbox 3.2.0 through 3.2.2, 3.1.0 through 3.1.4, and 3.0.0 through 3.0.6; and FortiAuthenticator before 6.0.6 may allow an unauthenticated attacker to bring the device into an unresponsive state via specifically-crafted long request parameters.\n\n- CVE-2021-22139: Kibana versions before 7.12.1 contain a denial of service vulnerability was found in the webhook actions due to a lack of timeout or a limit on the request size. An attacker with permissions to create webhook actions could drain the Kibana host connection pool, making Kibana unavailable for all other users.\n\n- CVE-2021-22166: An attacker could cause a Prometheus denial of service in GitLab 13.7+ by sending an HTTP request with a malformed method\n\n- CVE-2021-22177: Potential DoS was identified in gitlab-shell in GitLab CE/EE version 12.6.0 or above, which allows an attacker to spike the server resource utilization via gitlab-shell command.\n\n- CVE-2021-22181: A denial of service vulnerability in GitLab CE/EE affecting all versions since 11.8 allows an attacker to create a recursive pipeline relationship and exhaust resources.\n\n- CVE-2021-22187: An issue has been discovered in GitLab affecting all versions of Gitlab EE/CE before 13.6.7. A potential resource exhaustion issue that allowed running or pending jobs to continue even after project was deleted.\n\n- CVE-2021-22216: A denial of service vulnerability in all versions of GitLab CE/EE before 13.12.2, 13.11.5 or 13.10.5 allows an attacker to cause uncontrolled resource consumption with a very long issue or merge request description\n\n- CVE-2021-22965: A vulnerability in Pulse Connect Secure before 9.1R12.1 could allow an unauthenticated administrator to causes a denial of service when a malformed request is sent to the device.\n\n- CVE-2021-22985: On BIG-IP APM version 16.0.x before 16.0.1.1, under certain conditions, when processing VPN traffic with APM, TMM consumes excessive memory. A malicious, authenticated VPN user may abuse this to perform a DoS attack against the APM. Note: Software versions which have reached End of Software Development (EoSD) are not evaluated.\n\n- CVE-2021-23011: On versions 16.0.x before 16.0.1.1, 15.1.x before 15.1.3, 14.1.x before 14.1.4, 13.1.x before 13.1.4, 12.1.x before 12.1.6, and 11.6.x before 11.6.5.3, when the BIG-IP system is buffering packet fragments for reassembly, the Traffic Management Microkernel (TMM) may consume an excessive amount of resources, eventually leading to a restart and failover event. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2021-23042: On BIG-IP version 16.0.x before 16.0.1.2, 15.1.x before 15.1.3, 14.1.x before 14.1.4, 13.1.x before 13.1.4, and 12.1.x before 12.1.6, when an HTTP profile is configured on a virtual server, undisclosed requests can cause a significant increase in system resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2021-23047: On version 16.x before 16.1.0, 15.1.x before 15.1.3.1, 14.1.x before 14.1.4.3, and all versions of 13.1.x, 12.1.x and 11.6.x, when BIG-IP APM performs Online Certificate Status Protocol (OCSP) verification of a certificate that contains Authority Information Access (AIA), undisclosed requests may cause an increase in memory use. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2021-23049: On BIG-IP version 16.0.x before 16.0.1.2 and 15.1.x before 15.1.3, when the iRules RESOLVER::summarize command is used on a virtual server, undisclosed requests can cause an increase in Traffic Management Microkernel (TMM) memory utilization resulting in an out-of-memory condition and a denial-of-service (DoS). Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2021-23852: An authenticated attacker with administrator rights Bosch IP cameras can call an URL with an invalid parameter that causes the camera to become unresponsive for a few seconds and cause a Denial of Service (DoS).\n\n- CVE-2021-25252: Trend Micro's Virus Scan API (VSAPI) and Advanced Threat Scan Engine (ATSE) - are vulnerable to a memory exhaustion vulnerability that may lead to denial-of-service or system freeze if exploited by an attacker using a specially crafted file.\n\n- CVE-2021-25659: A vulnerability has been identified in Automation License Manager 5 (All versions), Automation License Manager 6 (All versions < V6.0 SP9 Update 2). Sending specially crafted packets to port 4410/tcp of an affected system could lead to extensive memory being consumed and as such could cause a denial-of-service preventing legitimate users from using the system.\n\n- CVE-2021-25909: ZIV Automation 4CCT-EA6-334126BF firmware version 3.23.80.27.36371, allows an unauthenticated, remote attacker to cause a denial of service condition on the device. An attacker could exploit this vulnerability by sending specific packets to the port 7919.\n\n- CVE-2020-15166: In ZeroMQ before version 4.3.3, there is a denial-of-service vulnerability. Users with TCP transport public endpoints, even with CURVE/ZAP enabled, are impacted. If a raw TCP socket is opened and connected to an endpoint that is fully configured with CURVE/ZAP, legitimate clients will not be able to exchange any message. Handshakes complete successfully, and messages are delivered to the library, but the server application never receives them. This is patched in version 4.3.3.\n\n- CVE-2020-21573: An issue was discoverered in in abhijitnathwani image-processing v0.1.0, allows local attackers to cause a denial of service via a crafted image file.\n\n- CVE-2020-26257: Matrix is an ecosystem for open federated Instant Messaging and VoIP. Synapse is a reference \"homeserver\" implementation of Matrix. A malicious or poorly-implemented homeserver can inject malformed events into a room by specifying a different room id in the path of a `/send_join`, `/send_leave`, `/invite` or `/exchange_third_party_invite` request. This can lead to a denial of service in which future events will not be correctly sent to other servers over federation. This affects any server which accepts federation requests from untrusted servers. The Matrix Synapse reference implementation before version 1.23.1 the implementation is vulnerable to this injection attack. Issue is fixed in version 1.23.1. As a workaround homeserver administrators could limit access to the federation API to trusted servers (for example via `federation_domain_whitelist`).\n\n- CVE-2021-28089: Tor before 0.4.5.7 allows a remote participant in the Tor directory protocol to exhaust CPU resources on a target, aka TROVE-2021-001.\n\n- CVE-2021-22100: In cloud foundry CAPI versions prior to 1.122, a denial-of-service attack in which a developer can push a service broker that (accidentally or maliciously) causes CC instances to timeout and fail is possible. An attacker can leverage this vulnerability to cause an inability for anyone to push or manage apps.\n\n- CVE-2021-22955: A unauthenticated denial of service vulnerability exists in Citrix ADC <13.0-83.27, <12.1-63.22 and 11.1-65.23 when configured as a VPN (Gateway) or AAA virtual server could allow an attacker to cause a temporary disruption of the Management GUI, Nitro API, and RPC communication.\n\n- CVE-2021-22956: An uncontrolled resource consumption vulnerability exists in Citrix ADC <13.0-83.27, <12.1-63.22 and 11.1-65.23 that could allow an attacker with access to NSIP or SNIP with management interface access to cause a temporary disruption of the Management GUI, Nitro API, and RPC communication.\n\n- CVE-2021-23236: Requests may be used to interrupt the normal operation of the device. When exploited, Fresenius Kabi Agilia Link+ version 3.0 must be rebooted via a hard reset triggered by pressing a button on the rack system.\n\n- CVE-2021-30301: Possible denial of service due to out of memory while processing RRC and NAS OTA message in Snapdragon Auto, Snapdragon Industrial IOT, Snapdragon Mobile\n\n- CVE-2021-37061: There is a Uncontrolled Resource Consumption vulnerability in Huawei Smartphone.Successful exploitation of this vulnerability may lead to Screen projection application denial of service.\n\n- CVE-2021-37865: Mattermost 6.2 and earlier fails to sufficiently process a specifically crafted GIF file when it is uploaded while drafting a post, which allows authenticated users to cause resource exhaustion while processing the file, resulting in server-side Denial of Service.\n\n- CVE-2021-39939: An uncontrolled resource consumption vulnerability in GitLab Runner affecting all versions starting from 13.7 before 14.3.6, all versions starting from 14.4 before 14.4.4, all versions starting from 14.5 before 14.5.2, allows an attacker triggering a job with a specially crafted docker image to exhaust resources on runner manager\n\n- CVE-2021-39942: A denial of service vulnerability in GitLab CE/EE affecting all versions starting from 12.0 before 14.3.6, all versions starting from 14.4 before 14.4.4, all versions starting from 14.5 before 14.5.2, allows low-privileged users to bypass file size limits in the NPM package repository to potentially cause denial of service.\n\n- CVE-2021-40011: There is an uncontrolled resource consumption vulnerability in the display module. Successful exploitation of this vulnerability may affect integrity.\n\n- CVE-2021-41014: A uncontrolled resource consumption in Fortinet FortiWeb version 6.4.1 and below, 6.3.15 and below allows an unauthenticated attacker to make the httpsd daemon unresponsive via huge HTTP packets\n\n- CVE-2021-43933: The affected product is vulnerable to a network-based attack by threat actors sending unimpeded requests to the receiving server, which could cause a denial-of-service condition due to lack of heap memory resources.\n\n- CVE-2021-44527: A vulnerability found in UniFi Switch firmware Version 5.43.35 and earlier allows a malicious actor who has already gained access to the network to perform a Deny of Service (DoS) attack on the affected switch.This vulnerability is fixed in UniFi Switch firmware 5.76.6 and later.\n\n- CVE-2021-44716: net/http in Go before 1.16.12 and 1.17.x before 1.17.5 allows uncontrolled memory consumption in the header canonicalization cache via HTTP/2 requests.\n\n- CVE-2021-46149: An issue was discovered in MediaWiki before 1.35.5, 1.36.x before 1.36.3, and 1.37.x before 1.37.1. A denial of service (resource consumption) can be accomplished by searching for a very long key in a Language Name Search.\n\n- CVE-2021-46668: MariaDB through 10.5.9 allows an application crash via certain long SELECT DISTINCT statements that improperly interact with storage-engine resource limitations for temporary data structures.\n\n- CVE-2020-9060: Z-Wave devices based on Silicon Labs 500 series chipsets using S2, including but likely not limited to the ZooZ ZST10 version 6.04, ZooZ ZEN20 version 5.03, ZooZ ZEN25 version 5.03, Aeon Labs ZW090-A version 3.95, and Fibaro FGWPB-111 version 4.3, are susceptible to denial of service and resource exhaustion via malformed SECURITY NONCE GET, SECURITY NONCE GET 2, NO OPERATION, or NIF REQUEST messages.\n\n- CVE-2021-33135: Uncontrolled resource consumption in the Linux kernel drivers for Intel(R) SGX may allow an authenticated user to potentially enable denial of service via local access.\n\n- CVE-2022-40513: Transient DOS due to uncontrolled resource consumption in WLAN firmware when peer is freed in non qos state.\n\n- CVE-2022-43572: In Splunk Enterprise versions below 8.2.9, 8.1.12, and 9.0.2, sending a malformed file through the Splunk-to-Splunk (S2S) or HTTP Event Collector (HEC) protocols to an indexer results in a blockage or denial-of-service preventing further indexing. \n\n- CVE-2021-22642: An attacker could use specially crafted invalid Modbus frames to crash the Ovarro TBox system.\n\n- CVE-2021-3629: A flaw was found in Undertow. A potential security issue in flow control handling by the browser over http/2 may potentially cause overhead or a denial of service in the server. The highest threat from this vulnerability is availability. This flaw affects Undertow versions prior to 2.0.40.Final and prior to 2.2.11.Final.\n\n- CVE-2022-0476: Denial of Service in GitHub repository radareorg/radare2 prior to 5.6.4.\n\n- CVE-2022-0488: An issue has been discovered in GitLab CE/EE affecting all versions starting with version 8.10. It was possible to trigger a timeout on a page with markdown by using a specific amount of block-quotes.\n\n- CVE-2022-0489: An issue has been discovered in GitLab CE/EE affecting all versions starting with 8.15 . It was possible to trigger a DOS by using the math feature with a specific formula in issue comments.\n\n- CVE-2022-0671: A flaw was found in vscode-xml in versions prior to 0.19.0. Schema download could lead to blind SSRF or DoS via a large file.\n\n- CVE-2022-0695: Denial of Service in GitHub repository radareorg/radare2 prior to 5.6.4.\n\n- CVE-2022-1099: Adding a very large number of tags to a runner in GitLab CE/EE affecting all versions prior to 14.7.7, 14.8 prior to 14.8.5, and 14.9 prior to 14.9.2 allows an attacker to impact the performance of GitLab\n\n- CVE-2022-1259: A flaw was found in Undertow. A potential security issue in flow control handling by the browser over HTTP/2 may cause overhead or a denial of service in the server. This flaw exists because of an incomplete fix for CVE-2021-3629.\n\n- CVE-2022-1468: On all versions of 17.0.x, 16.1.x, 15.1.x, 14.1.x, 13.1.x, 12.1.x, and 11.6.x on F5 BIG-IP, an authenticated iControl REST user with at least guest role privileges can cause processing delays to iControl REST requests via undisclosed requests. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated\n\n- CVE-2022-1677: In OpenShift Container Platform, a user with permissions to create or modify Routes can craft a payload that inserts a malformed entry into one of the cluster router's HAProxy configuration files. This malformed entry can match any arbitrary hostname, or all hostnames in the cluster, and direct traffic to an arbitrary application within the cluster, including one under attacker control.\n\n- CVE-2022-1797: A malformed Class 3 common industrial protocol message with a cached connection can cause a denial-of-service condition in Rockwell Automation Logix Controllers, resulting in a major nonrecoverable fault. If the target device becomes unavailable, a user would have to clear the fault and redownload the user project file to bring the device back online.\n\n- CVE-2022-1982: Uncontrolled resource consumption in Mattermost version 6.6.0 and earlier allows an authenticated attacker to crash the server via a crafted SVG attachment on a post.\n\n- CVE-2022-2004: AutomationDirect DirectLOGIC is vulnerable to a a specially crafted packet can be sent continuously to the PLC to prevent access from DirectSoft and other devices, causing a denial-of-service condition. This issue affects: AutomationDirect DirectLOGIC D0-06 series CPUs D0-06DD1 versions prior to 2.72; D0-06DD2 versions prior to 2.72; D0-06DR versions prior to 2.72; D0-06DA versions prior to 2.72; D0-06AR versions prior to 2.72; D0-06AA versions prior to 2.72; D0-06DD1-D versions prior to 2.72; D0-06DD2-D versions prior to 2.72; D0-06DR-D versions prior to 2.72;\n\n- CVE-2022-20425: In addAutomaticZenRule of ZenModeHelper.java, there is a possible permanent degradation of performance due to resource exhaustion. This could lead to local denial of service with User execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-235823407\n\n- CVE-2022-20482: In createNotificationChannel of NotificationManager.java, there is a possible way to make the device unusable and require factory reset due to resource exhaustion. This could lead to local denial of service with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-12 Android-12L Android-13Android ID: A-240422263\n\n- CVE-2022-22101: Denial of service in multimedia due to uncontrolled resource consumption while parsing an incoming HAB message in Snapdragon Auto\n\n- CVE-2022-22145: CAMS for HIS Log Server contained in the following Yokogawa Electric products is vulnerable to uncontrolled resource consumption. CENTUM CS 3000 versions from R3.08.10 to R3.09.00, CENTUM VP versions from R4.01.00 to R4.03.00, from R5.01.00 to R5.04.20, from R6.01.00 to R6.08.00, Exaopc versions from R3.72.00 to R3.79.00.\n\n- CVE-2022-22161: An Uncontrolled Resource Consumption vulnerability in the kernel of Juniper Networks Junos OS allows an unauthenticated network based attacker to cause 100% CPU load and the device to become unresponsive by sending a flood of traffic to the out-of-band management ethernet port. Continued receipted of a flood will create a sustained Denial of Service (DoS) condition. Once the flood subsides the system will recover by itself. An indication that the system is affected by this issue would be that an irq handled by the fman process is shown to be using a high percentage of CPU cycles like in the following example output: user@host> show system processes extensive ... PID USERNAME PRI NICE SIZE RES STATE TIME WCPU COMMAND 31 root -84 -187 0K 16K WAIT 22.2H 56939.26% irq96: fman0 This issue affects Juniper Networks Junos OS: All versions prior to 18.3R3-S6; 18.4 versions prior to 18.4R2-S9, 18.4R3-S9; 19.1 versions prior to 19.1R2-S3, 19.1R3-S7; 19.2 versions prior to 19.2R1-S7, 19.2R3-S3; 19.3 versions prior to 19.3R2-S7, 19.3R3-S4; 19.4 versions prior to 19.4R2-S5, 19.4R3-S5; 20.1 versions prior to 20.1R3-S1; 20.2 versions prior to 20.2R3-S2; 20.3 versions prior to 20.3R3-S1; 20.4 versions prior to 20.4R2-S2, 20.4R3; 21.1 versions prior to 21.1R2; 21.2 versions prior to 21.2R1-S1, 21.2R2.\n\n- CVE-2022-2238: A vulnerability was found in the search-api container in Red Hat Advanced Cluster Management for Kubernetes when a query in the search filter gets parsed by the backend. This flaw allows an attacker to craft specific strings containing special characters that lead to crashing the pod and affects system availability while restarting.\n\n- CVE-2022-22556: Dell PowerStore contains an Uncontrolled Resource Consumption Vulnerability in PowerStore User Interface. A remote unauthenticated attacker could potentially exploit this vulnerability, leading to the Denial of Service.\n\n- CVE-2022-22724: A CWE-400: Uncontrolled Resource Consumption vulnerability exists that could cause a denial of service on ports 80 (HTTP) and 502 (Modbus), when sending a large number of TCP RST or FIN packets to any open TCP port of the PLC. Affected Product: Modicon M340 CPUs: BMXP34 (All Versions)\n\n- CVE-2022-23015: On BIG-IP versions 16.x before 16.1.0, 15.1.x before 15.1.4.1, and 14.1.2.6-14.1.4.4, when a Client SSL profile is configured on a virtual server with Client Certificate Authentication set to request/require and Session Ticket enabled and configured, processing SSL traffic can cause an increase in memory resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-23023: On BIG-IP version 16.1.x before 16.1.2.1, 15.1.x before 15.1.5, 14.1.x before 14.1.4.5, and all versions of 13.1.x and 12.1.x, and BIG-IQ all versions of 8.x and 7.x, undisclosed requests by an authenticated iControl REST user can cause an increase in memory resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-23024: On BIG-IP AFM version 16.x before 16.1.0, 15.1.x before 15.1.4.1, 14.1.x before 14.1.4.2, and all versions of 13.1.x, when the IPsec application layer gateway (ALG) logging profile is configured on an IPsec ALG virtual server, undisclosed IPsec traffic can cause the Traffic Management Microkernel (TMM) to terminate. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-23030: On version 16.1.x before 16.1.2, 15.1.x before 15.1.4.1, 14.1.x before 14.1.4.5, and all versions of 13.1.x, when the BIG-IP Virtual Edition (VE) uses the ixlv driver (which is used in SR-IOV mode and requires Intel X710/XL710/XXV710 family of network adapters on the Hypervisor) and TCP Segmentation Offload configuration is enabled, undisclosed requests may cause an increase in CPU resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-24118: Certain General Electric Renewable Energy products allow attackers to use a code to trigger a reboot into the factory default configuration. This affects iNET and iNET II before 8.3.0, SD before 6.4.7, TD220X before 2.0.16, and TD220MAX before 1.2.6.\n\n- CVE-2022-2455: A business logic issue in the handling of large repositories in all versions of GitLab CE/EE from 10.0 before 15.1.6, all versions starting from 15.2 before 15.2.4, all versions starting from 15.3 before 15.3.2 allowed an authenticated and authorized user to exhaust server resources by importing a malicious project.\n\n- CVE-2022-25622: The PROFINET (PNIO) stack, when integrated with the Interniche IP stack, improperly handles internal resources for TCP segments where the minimum TCP-Header length is less than defined. This could allow an attacker to create a denial of service condition for TCP services on affected devices by sending specially crafted TCP segments.\n\n- CVE-2022-26372: On F5 BIG-IP 15.1.x versions prior to 15.1.0.2, 14.1.x versions prior to 14.1.4.6, 13.1.x versions prior to 13.1.5, and all versions of 12.1.x and 11.6.x, when a DNS listener is configured on a virtual server with DNS queueing (default), undisclosed requests can cause an increase in memory resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-27181: On F5 BIG-IP APM 16.1.x versions prior to 16.1.2.2, 15.1.x versions prior to 15.1.5.1, 14.1.x versions prior to 14.1.4.6, 13.1.x versions prior to 13.1.5, and all versions of 12.1.x and 11.6.x, when APM is configured on a virtual server and the associated access profile is configured with APM AAA NTLM Auth, undisclosed requests can cause an increase in internal resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated\n\n- CVE-2022-27182: On F5 BIG-IP 16.1.x versions prior to 16.1.2.2, 15.1.x versions prior to 15.1.5.1, and 14.1.x versions prior to 14.1.4.6, when BIG-IP packet filters are enabled and a virtual server is configured with the type set to Reject, undisclosed requests can cause an increase in memory resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated\n\n- CVE-2022-27194: A vulnerability has been identified in SIMATIC PCS neo (Administration Console) (All versions < V3.1 SP1), SINETPLAN (All versions), TIA Portal (V15, V15.1, V16 and V17). The affected system cannot properly process specially crafted packets sent to port 8888/tcp. A remote attacker could exploit this vulnerability to cause a Denial-of-Service condition. The affected devices must be restarted manually.\n\n- CVE-2022-2741: The denial-of-service can be triggered by transmitting a carefully crafted CAN frame on the same CAN network as the vulnerable node. The frame must have a CAN ID matching an installed filter in the vulnerable node (this can easily be guessed based on CAN traffic analyses). The frame must contain the opposite RTR bit as what the filter installed in the vulnerable node contains (if the filter matches RTR frames, the frame must be a data frame or vice versa).\n\n- CVE-2022-27507: Authenticated denial of service\n\n- CVE-2022-27508: Unauthenticated denial of service\n\n- CVE-2022-27640: A vulnerability has been identified in SIMATIC CP 442-1 RNA (All versions < V1.5.18), SIMATIC CP 443-1 RNA (All versions < V1.5.18). The affected devices improperly handles excessive ARP broadcast requests. This could allow an attacker to create a denial of service condition by performing ARP storming attacks, which can cause the device to reboot.\n\n- CVE-2022-28191: NVIDIA vGPU software contains a vulnerability in the Virtual GPU Manager (nvidia.ko), where uncontrolled resource consumption can be triggered by an unprivileged regular user, which may lead to denial of service.\n\n- CVE-2022-28691: On F5 BIG-IP 16.1.x versions prior to 16.1.2.2, 15.1.x versions prior to 15.1.5, 14.1.x versions prior to 14.1.4.6, and 13.1.x versions prior to 13.1.5, when a Real Time Streaming Protocol (RTSP) profile is configured on a virtual server, undisclosed traffic can cause an increase in Traffic Management Microkernel (TMM) resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated\n\n- CVE-2022-28701: On F5 BIG-IP 16.1.x versions prior to 16.1.2.2, when the stream profile is configured on a virtual server, undisclosed requests can cause an increase in memory resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated\n\n- CVE-2022-29480: On F5 BIG-IP 13.1.x versions prior to 13.1.5, and all versions of 12.1.x and 11.6.x, when multiple route domains are configured, undisclosed requests to big3d can cause an increase in CPU resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated\n\n- CVE-2022-29864: OPC UA .NET Standard Stack 1.04.368 allows a remote attacker to cause a server to crash via a large number of messages that trigger Uncontrolled Resource Consumption.\n\n- CVE-2022-29866: OPC UA .NET Standard Stack 1.04.368 allows a remote attacker to exhaust the memory resources of a server via a crafted request that triggers Uncontrolled Resource Consumption.\n\n- CVE-2022-30551: OPC UA Legacy Java Stack 2022-04-01 allows a remote attacker to cause a server to stop processing messages by sending crafted messages that exhaust available resources.\n\n- CVE-2022-30691: Uncontrolled resource consumption in the Intel(R) Support Android application before version 22.02.28 may allow an authenticated user to potentially enable denial of service via local access.\n\n- CVE-2022-30791: In CmpBlkDrvTcp of CODESYS V3 in multiple versions an uncontrolled ressource consumption allows an unauthorized attacker to block new TCP connections. Existing connections are not affected.\n\n- CVE-2022-30792: In CmpChannelServer of CODESYS V3 in multiple versions an uncontrolled ressource consumption allows an unauthorized attacker to block new communication channel connections. Existing connections are not affected.\n\n- CVE-2022-31006: indy-node is the server portion of Hyperledger Indy, a distributed ledger purpose-built for decentralized identity. In vulnerable versions of indy-node, an attacker can max out the number of client connections allowed by the ledger, leaving the ledger unable to be used for its intended purpose. However, the ledger content will not be impacted and the ledger will resume functioning after the attack. This attack exploits the trade-off between resilience and availability. Any protection against abusive client connections will also prevent the network being accessed by certain legitimate users. As a result, validator nodes must tune their firewall rules to ensure the right trade-off for their network's expected users. The guidance to network operators for the use of firewall rules in the deployment of Indy networks has been modified to better protect against denial of service attacks by increasing the cost and complexity in mounting such attacks. The mitigation for this vulnerability is not in the Hyperledger Indy code per se, but rather in the individual deployments of Indy. The mitigations should be applied to all deployments of Indy, and are not related to a particular release.\n\n- CVE-2022-31030: containerd is an open source container runtime. A bug was found in the containerd's CRI implementation where programs inside a container can cause the containerd daemon to consume memory without bound during invocation of the `ExecSync` API. This can cause containerd to consume all available memory on the computer, denying service to other legitimate workloads. Kubernetes and crictl can both be configured to use containerd's CRI implementation; `ExecSync` may be used when running probes or when executing processes via an \"exec\" facility. This bug has been fixed in containerd 1.6.6 and 1.5.13. Users should update to these versions to resolve the issue. Users unable to upgrade should ensure that only trusted images and commands are used.\n\n- CVE-2022-31073: KubeEdge is an open source system for extending native containerized application orchestration capabilities to hosts at Edge. Prior to versions 1.11.1, 1.10.2, and 1.9.4, the ServiceBus server on the edge side may be susceptible to a DoS attack if an HTTP request containing a very large Body is sent to it. It is possible for the node to be exhausted of memory. The consequence of the exhaustion is that other services on the node, e.g. other containers, will be unable to allocate memory and thus causing a denial of service. Malicious apps accidentally pulled by users on the host and have the access to send HTTP requests to localhost may make an attack. It will be affected only when users enable the `ServiceBus` module in the config file `edgecore.yaml`. This bug has been fixed in Kubeedge 1.11.1, 1.10.2, and 1.9.4. As a workaround, disable the `ServiceBus` module in the config file `edgecore.yaml`.\n\n- CVE-2022-31074: KubeEdge is an open source system for extending native containerized application orchestration capabilities to hosts at Edge. Prior to versions 1.11.1, 1.10.2, and 1.9.4, several endpoints in the Cloud AdmissionController may be susceptible to a DoS attack if an HTTP request containing a very large Body is sent to it. The consequence of the exhaustion is that the Cloud AdmissionController will be in denial of service. This bug has been fixed in Kubeedge 1.11.1, 1.10.2, and 1.9.4. There is currently no known workaround.\n\n- CVE-2022-3283: A potential DOS vulnerability was discovered in GitLab CE/EE affecting all versions before before 15.2.5, all versions starting from 15.3 before 15.3.4, all versions starting from 15.4 before 15.4.1 While cloning an issue with special crafted content added to the description could have been used to trigger high CPU usage.\n\n- CVE-2022-33203: In BIG-IP Versions 16.1.x before 16.1.3, 15.1.x before 15.1.6.1, and 14.1.x before 14.1.5, when a BIG-IP APM access policy with Service Connect agent is configured on a virtual server, undisclosed requests can cause an increase in memory resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-34335:  IBM Sterling Partner Engagement Manager 6.1.2, 6.2.0, and 6.2.1 could allow an authenticated user to exhaust server resources which could lead to a denial of service. IBM X-Force ID: 229705. \n\n- CVE-2022-35236: In BIG-IP Versions 16.1.x before 16.1.2.2, 15.1.x before 15.1.6.1, and 14.1.x before 14.1.5, when an HTTP2 profile is configured on a virtual server, undisclosed traffic can cause an increase in memory resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-35241: In versions 2.x before 2.3.1 and all versions of 1.x, when NGINX Instance Manager is in use, undisclosed requests can cause an increase in disk resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-3639: A potential DOS vulnerability was discovered in GitLab CE/EE affecting all versions from 10.8 before 15.1.6, all versions starting from 15.2 before 15.2.4, all versions starting from 15.3 before 15.3.2. Improper data handling on branch creation could have been used to trigger high CPU usage.\n\n- CVE-2022-3818: An uncontrolled resource consumption issue when parsing URLs in GitLab CE/EE affecting all versions prior to 15.3.5, 15.4 prior to 15.4.4, and 15.5 prior to 15.5.2 allows an attacker to cause performance issues and potentially a denial of service on the GitLab instance.\n\n- CVE-2022-39278: Istio is an open platform-independent service mesh that provides traffic management, policy enforcement, and telemetry collection. Prior to versions 1.15.2, 1.14.5, and 1.13.9, the Istio control plane, istiod, is vulnerable to a request processing error, allowing a malicious attacker that sends a specially crafted or oversized message which results in the control plane crashing when the Kubernetes validating or mutating webhook service is exposed publicly. This endpoint is served over TLS port 15017, but does not require any authentication from the attacker. For simple installations, Istiod is typically only reachable from within the cluster, limiting the blast radius. However, for some deployments, especially external istiod topologies, this port is exposed over the public internet. Versions 1.15.2, 1.14.5, and 1.13.9 contain patches for this issue. There are no effective workarounds, beyond upgrading. This bug is due to an error in `regexp.Compile` in Go.\n\n- CVE-2022-39330: Nextcloud Server is the file server software for Nextcloud, a self-hosted productivity platform. Nextcloud Server prior to versions 23.0.10 and 24.0.6 and Nextcloud Enterprise Server prior to versions 22.2.10, 23.0.10, and 24.0.6 are vulnerable to a logged-in attacker slowing down the system by generating a lot of database/cpu load. Nextcloud Server versions 23.0.10 and 24.0.6 and Nextcloud Enterprise Server versions 22.2.10, 23.0.10, and 24.0.6 contain patches for this issue. As a workaround, disable the Circles app.\n\n- CVE-2022-40735: The Diffie-Hellman Key Agreement Protocol allows use of long exponents that arguably make certain calculations unnecessarily expensive, because the 1996 van Oorschot and Wiener paper found that \"(appropriately) short exponents\" can be used when there are adequate subgroup constraints, and these short exponents can lead to less expensive calculations than for long exponents. This issue is different from CVE-2002-20001 because it is based on an observation about exponent size, rather than an observation about numbers that are not public keys. The specific situations in which calculation expense would constitute a server-side vulnerability depend on the protocol (e.g., TLS, SSH, or IKE) and the DHE implementation details. In general, there might be an availability concern because of server-side resource consumption from DHE modular-exponentiation calculations. Finally, it is possible for an attacker to exploit this vulnerability and CVE-2002-20001 together.\n\n- CVE-2022-41770: In BIG-IP versions 17.0.x before 17.0.0.1, 16.1.x before 16.1.3.1, 15.1.x before 15.1.7, 14.1.x before 14.1.5.1, and all versions of 13.1.x, and BIG-IQ all versions of 8.x and 7.x, an authenticated iControl REST user can cause an increase in memory resource utilization, via undisclosed requests.\n\n- CVE-2022-41806: In versions 16.1.x before 16.1.3.2 and 15.1.x before 15.1.5.1, when BIG-IP AFM Network Address Translation policy with IPv6/IPv4 translation rules is configured on a virtual server, undisclosed requests can cause an increase in memory resource utilization.\n\n- CVE-2022-41833: In all BIG-IP 13.1.x versions, when an iRule containing the HTTP::collect command is configured on a virtual server, undisclosed requests can cause Traffic Management Microkernel (TMM) to terminate.\n\n- CVE-2022-4344: Memory exhaustion in the Kafka protocol dissector in Wireshark 4.0.0 to 4.0.1 and 3.6.0 to 3.6.9 allows denial of service via packet injection or crafted capture file\n\n- CVE-2022-20692: A vulnerability in the NETCONF over SSH feature of Cisco IOS XE Software could allow a low-privileged, authenticated, remote attacker to cause a denial of service condition (DoS) on an affected device. This vulnerability is due to insufficient resource management. An attacker could exploit this vulnerability by initiating a large number of NETCONF over SSH connections. A successful exploit could allow the attacker to exhaust resources, causing the device to reload and resulting in a DoS condition on an affected device.\n\n- CVE-2022-20760: A vulnerability in the DNS inspection handler of Cisco Adaptive Security Appliance (ASA) Software and Firepower Threat Defense (FTD) Software could allow an unauthenticated, remote attacker to cause a denial of service condition (DoS) on an affected device. This vulnerability is due to a lack of proper processing of incoming requests. An attacker could exploit this vulnerability by sending crafted DNS requests at a high rate to an affected device. A successful exploit could allow the attacker to cause the device to stop responding, resulting in a DoS condition.\n\n- CVE-2022-20808: A vulnerability in Cisco Smart Software Manager On-Prem (SSM On-Prem) could allow an authenticated, remote attacker to cause a denial of service (DoS) condition on an affected device. This vulnerability is due to incorrect handling of multiple simultaneous device registrations on Cisco SSM On-Prem. An attacker could exploit this vulnerability by sending multiple device registration requests to Cisco SSM On-Prem. A successful exploit could allow the attacker to cause a DoS condition on an affected device.\n\n- CVE-2022-20937: A vulnerability in a feature that monitors RADIUS requests on Cisco Identity Services Engine (ISE) Software could allow an unauthenticated, remote attacker to negatively affect the performance of an affected device. This vulnerability is due to insufficient management of system resources. An attacker could exploit this vulnerability by taking actions that cause Cisco ISE Software to receive specific RADIUS traffic. A successful and sustained exploit of this vulnerability could allow the attacker to cause reduced performance of the affected device, resulting in significant delays to RADIUS authentications. There are workarounds that address this vulnerability.\n\n- CVE-2022-43564: In Splunk Enterprise versions below 8.1.12, 8.2.9, and 9.0.2, a remote user who can create search macros and schedule search reports can cause a denial of service through the use of specially crafted search macros.\n\n- CVE-2022-44608: Uncontrolled resource consumption vulnerability in Cybozu Remote Service 4.0.0 to 4.0.3 allows a remote authenticated attacker to consume huge storage space, which may result in a denial-of-service (DoS) condition.\n\n- CVE-2022-45044: A vulnerability has been identified in SIPROTEC 5 6MD84 (CP300) (All versions < V9.50), SIPROTEC 5 6MD85 (CP200) (All versions), SIPROTEC 5 6MD85 (CP300) (All versions < V9.50), SIPROTEC 5 6MD86 (CP200) (All versions), SIPROTEC 5 6MD86 (CP300) (All versions < V9.50), SIPROTEC 5 6MD89 (CP300) (All versions < V9.64), SIPROTEC 5 6MU85 (CP300) (All versions < V9.50), SIPROTEC 5 7KE85 (CP200) (All versions), SIPROTEC 5 7KE85 (CP300) (All versions < V9.64), SIPROTEC 5 7SA82 (CP100) (All versions), SIPROTEC 5 7SA82 (CP150) (All versions < V9.50), SIPROTEC 5 7SA84 (CP200) (All versions), SIPROTEC 5 7SA86 (CP200) (All versions), SIPROTEC 5 7SA86 (CP300) (All versions < V9.50), SIPROTEC 5 7SA87 (CP200) (All versions), SIPROTEC 5 7SA87 (CP300) (All versions < V9.50), SIPROTEC 5 7SD82 (CP100) (All versions), SIPROTEC 5 7SD82 (CP150) (All versions < V9.50), SIPROTEC 5 7SD84 (CP200) (All versions), SIPROTEC 5 7SD86 (CP200) (All versions), SIPROTEC 5 7SD86 (CP300) (All versions < V9.50), SIPROTEC 5 7SD87 (CP200) (All versions), SIPROTEC 5 7SD87 (CP300) (All versions < V9.50), SIPROTEC 5 7SJ81 (CP100) (All versions < V8.89), SIPROTEC 5 7SJ81 (CP150) (All versions < V9.50), SIPROTEC 5 7SJ82 (CP100) (All versions < V8.89), SIPROTEC 5 7SJ82 (CP150) (All versions < V9.50), SIPROTEC 5 7SJ85 (CP200) (All versions), SIPROTEC 5 7SJ85 (CP300) (All versions < V9.50), SIPROTEC 5 7SJ86 (CP200) (All versions), SIPROTEC 5 7SJ86 (CP300) (All versions < V9.50), SIPROTEC 5 7SK82 (CP100) (All versions < V8.89), SIPROTEC 5 7SK82 (CP150) (All versions < V9.50), SIPROTEC 5 7SK85 (CP200) (All versions), SIPROTEC 5 7SK85 (CP300) (All versions < V9.50), SIPROTEC 5 7SL82 (CP100) (All versions), SIPROTEC 5 7SL82 (CP150) (All versions < V9.50), SIPROTEC 5 7SL86 (CP200) (All versions), SIPROTEC 5 7SL86 (CP300) (All versions < V9.50), SIPROTEC 5 7SL87 (CP200) (All versions), SIPROTEC 5 7SL87 (CP300) (All versions < V9.50), SIPROTEC 5 7SS85 (CP200) (All versions), SIPROTEC 5 7SS85 (CP300) (All versions < V9.50), SIPROTEC 5 7ST85 (CP200) (All versions), SIPROTEC 5 7ST85 (CP300) (All versions < V9.64), SIPROTEC 5 7ST86 (CP300) (All versions < V9.64), SIPROTEC 5 7SX82 (CP150) (All versions < V9.50), SIPROTEC 5 7SX85 (CP300) (All versions < V9.50), SIPROTEC 5 7UM85 (CP300) (All versions < V9.50), SIPROTEC 5 7UT82 (CP100) (All versions), SIPROTEC 5 7UT82 (CP150) (All versions < V9.50), SIPROTEC 5 7UT85 (CP200) (All versions), SIPROTEC 5 7UT85 (CP300) (All versions < V9.50), SIPROTEC 5 7UT86 (CP200) (All versions), SIPROTEC 5 7UT86 (CP300) (All versions < V9.50), SIPROTEC 5 7UT87 (CP200) (All versions), SIPROTEC 5 7UT87 (CP300) (All versions < V9.50), SIPROTEC 5 7VE85 (CP300) (All versions < V9.50), SIPROTEC 5 7VK87 (CP200) (All versions), SIPROTEC 5 7VK87 (CP300) (All versions < V9.50), SIPROTEC 5 7VU85 (CP300) (All versions < V9.50), SIPROTEC 5 Communication Module ETH-BA-2EL (All versions < V8.89 installed on CP100 devices), SIPROTEC 5 Communication Module ETH-BA-2EL (All versions < V9.50 installed on CP150 and CP300 devices), SIPROTEC 5 Communication Module ETH-BA-2EL (All versions installed on CP200 devices), SIPROTEC 5 Communication Module ETH-BB-2FO (All versions < V8.89 installed on CP100 devices), SIPROTEC 5 Communication Module ETH-BB-2FO (All versions < V9.50 installed on CP150 and CP300 devices), SIPROTEC 5 Communication Module ETH-BB-2FO (All versions installed on CP200 devices), SIPROTEC 5 Communication Module ETH-BD-2FO (All versions < V9.50), SIPROTEC 5 Compact 7SX800 (CP050) (All versions < V9.50). Affected devices do not properly restrict secure client-initiated renegotiations within the SSL and TLS protocols. This could allow an attacker to create a denial of service condition on the ports 443/tcp and 4443/tcp for the duration of the attack.\n\n- CVE-2022-45199: Pillow before 9.3.0 allows denial of service via SAMPLESPERPIXEL.\n\n- CVE-2022-46351: A vulnerability has been identified in SCALANCE X204RNA (HSR) (All versions < V3.2.7), SCALANCE X204RNA (PRP) (All versions < V3.2.7), SCALANCE X204RNA EEC (HSR) (All versions < V3.2.7), SCALANCE X204RNA EEC (PRP) (All versions < V3.2.7), SCALANCE X204RNA EEC (PRP/HSR) (All versions < V3.2.7). Specially crafted PROFINET DCP packets could cause a denial of service condition of affected products on a local Ethernet segment (Layer 2).\n\n- CVE-2022-46352: A vulnerability has been identified in SCALANCE X204RNA (HSR) (All versions < V3.2.7), SCALANCE X204RNA (PRP) (All versions < V3.2.7), SCALANCE X204RNA EEC (HSR) (All versions < V3.2.7), SCALANCE X204RNA EEC (PRP) (All versions < V3.2.7), SCALANCE X204RNA EEC (PRP/HSR) (All versions < V3.2.7). Specially crafted PROFINET DCP packets could cause a denial of service condition of affected products.\n\n- CVE-2022-4767: Denial of Service in GitHub repository usememos/memos prior to 0.9.1.\n\n- CVE-2022-24040: A vulnerability has been identified in Desigo DXR2 (All versions < V01.21.142.5-22), Desigo PXC3 (All versions < V01.21.142.4-18), Desigo PXC4 (All versions < V02.20.142.10-10884), Desigo PXC5 (All versions < V02.20.142.10-10884). The web application fails to enforce an upper bound to the cost factor of the PBKDF2 derived key during the creation or update of an account. An attacker with the user profile access privilege could cause a denial of service (DoS) condition through CPU consumption by setting a PBKDF2 derived key with a remarkably high cost effort and then attempting a login to the so-modified account.\n\n- CVE-2022-39158: Affected devices improperly handle partial HTTP requests which makes them vulnerable to slowloris attacks. This could allow a remote attacker to create a denial of service condition that persists until the attack ends.\n\n- CVE-2022-41333: An uncontrolled resource consumption vulnerability [CWE-400] in FortiRecorder version 6.4.3 and below, 6.0.11 and below login authentication mechanism may allow an unauthenticated attacker to make the device unavailable via crafted GET requests.\n\nRelated Weaknesses:\n\n- CWE-664 (ChildOf)",
          "type": "Class",
          "search_source": "base_query",
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Discouraged",
              "rationale": "CWE-400 is intended for incorrect behaviors in which the product is expected to track and restrict how many resources it consumes, but CWE-400 is often misused because it is conflated with the \"technical impact\" of vulnerabilities in which resource consumption occurs. It is sometimes used for low-information vulnerability reports. It is a level-1 Class (i.e., a child of a Pillar).",
              "comments": "Closely analyze the specific mistake that is causing resource consumption, and perform a CWE mapping for that mistake. Consider children/descendants such as CWE-770: Allocation of Resources Without Limits or Throttling, CWE-771: Missing Reference to Active Allocated Resource, CWE-410: Insufficient Resource Pool, CWE-772: Missing Release of Resource after Effective Lifetime, CWE-834: Excessive Iteration, CWE-405: Asymmetric Resource Consumption (Amplification), and others.",
              "reasons": [
                "Frequent Misuse"
              ]
            }
          }
        },
        {
          "doc_id": "804",
          "text": "CWE-804: Guessable CAPTCHA",
          "score": 2.2100000000000004,
          "metadata": {
            "doc_id": "804",
            "name": "Guessable CAPTCHA",
            "type": "base",
            "original_content": "CWE-804: Guessable CAPTCHA",
            "relationships": [
              {
                "source_id": "804",
                "target_id": "330",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "804",
                "target_id": "1390",
                "label": "CHILDOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "804",
                "target_id": "863",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "863",
                "target_id": "804",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "330",
                "target_id": "804",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "1390",
                "target_id": "804",
                "label": "PARENTOF",
                "properties": {
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 1.0,
              "sequence_path": 1.0
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "vulnerability_sequence_forward"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "330",
                      "804",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 1.0,
                  "type": "relationship_chain",
                  "source": "330"
                },
                "vulnerability_sequence_forward": {
                  "path": [
                    [
                      "330",
                      "804",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 1.0,
                  "type": "vulnerability_sequence_forward",
                  "source": "330"
                }
              }
            },
            "position": "after",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 2.2100000000000004
              }
            }
          },
          "similarity": 2.2100000000000004
        },
        {
          "doc_id": "328",
          "text": "The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).",
          "score": 0.5823686074392721,
          "metadata": {
            "doc_id": "328",
            "name": "Use of Weak Hash",
            "type": "Base",
            "extended_description": "\n\nA hash function is defined as an algorithm that maps arbitrarily sized data into a fixed-sized digest (output) such that the following properties hold:\n\n\n  1. The algorithm is not invertible (also called \"one-way\" or \"not reversible\")\n\n  1. The algorithm is deterministic; the same input produces the same digest every time\n\n Building on this definition, a cryptographic hash function must also ensure that a malicious actor cannot leverage the hash function to have a reasonable chance of success at determining any of the following:\n\n  1. the original input (preimage attack), given only the digest\n\n  1. another input that can produce the same digest (2nd preimage attack), given the original input\n\n  1. a set of two or more inputs that evaluate to the same digest (birthday attack), given the actor can arbitrarily choose the inputs to be hashed and can do so a reasonable amount of times\n\nWhat is regarded as \"reasonable\" varies by context and threat model, but in general, \"reasonable\" could cover any attack that is more efficient than brute force (i.e., on average, attempting half of all possible combinations). Note that some attacks might be more efficient than brute force but are still not regarded as achievable in the real world.\n\nAny algorithm that does not meet the above conditions will generally be considered weak for general use in hashing.\n\n\nIn addition to algorithmic weaknesses, a hash function can be made weak by using the hash in a security context that breaks its security guarantees. For example, using a hash function without a salt for storing passwords (that are sufficiently short) could enable an adversary to create a \"rainbow table\" [REF-637] to recover the password under certain conditions; this attack works against such hash functions as MD5, SHA-1, and SHA-2.\n",
            "alternate_terms": [],
            "original_content": "The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).",
            "relationships": [
              {
                "source_id": "328",
                "target_id": "916",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "328",
                "target_id": "327",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "328",
                "target_id": "326",
                "label": "CHILDOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "916",
                "target_id": "328",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "327",
                "target_id": "328",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "326",
                "target_id": "328",
                "label": "PARENTOF",
                "properties": {
                  "view_id": "1000"
                }
              }
            ],
            "source": "graph",
            "sources": [
              "vector",
              "graph"
            ],
            "vector_score": 0.5823686074392721,
            "graph_score": 2.4699999999999998,
            "score_components": {
              "explicit_mention": 1.0,
              "relationship_chain": 0.3,
              "abstraction_path": 0.9
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "916",
                      "328",
                      "CHILDOF"
                    ]
                  ],
                  "score": 0.3,
                  "type": "relationship_chain",
                  "source": "916"
                }
              }
            },
            "is_explicit": true,
            "abstraction_level": "base",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse",
                "graph"
              ],
              "retriever_count": 3,
              "normalized_scores": {
                "dense": 0.5370893326418129,
                "sparse": 266.59713348086973,
                "graph": 1.7149474429757086
              }
            }
          },
          "similarity": 1.7149474429757086
        },
        {
          "doc_id": "916",
          "text": "The product generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.",
          "score": 0.5681020598486438,
          "metadata": {
            "doc_id": "916",
            "name": "Use of Password Hash With Insufficient Computational Effort",
            "type": "Base",
            "extended_description": "\n\nMany password storage mechanisms compute a hash and store the hash, instead of storing the original password in plaintext. In this design, authentication involves accepting an incoming password, computing its hash, and comparing it to the stored hash.\n\n\nMany hash algorithms are designed to execute quickly with minimal overhead, even cryptographic hashes. However, this efficiency is a problem for password storage, because it can reduce an attacker's workload for brute-force password cracking. If an attacker can obtain the hashes through some other method (such as SQL injection on a database that stores hashes), then the attacker can store the hashes offline and use various techniques to crack the passwords by computing hashes efficiently. Without a built-in workload, modern attacks can compute large numbers of hashes, or even exhaust the entire space of all possible passwords, within a very short amount of time, using massively-parallel computing (such as cloud computing) and GPU, ASIC, or FPGA hardware. In such a scenario, an efficient hash algorithm helps the attacker.\n\n\nThere are several properties of a hash scheme that are relevant to its strength against an offline, massively-parallel attack:\n\n\n  - The amount of CPU time required to compute the hash (\"stretching\")\n\n  - The amount of memory required to compute the hash (\"memory-hard\" operations)\n\n  - Including a random value, along with the password, as input to the hash computation (\"salting\")\n\n  - Given a hash, there is no known way of determining an input (e.g., a password) that produces this hash value, other than by guessing possible inputs (\"one-way\" hashing)\n\n  - Relative to the number of all possible hashes that can be generated by the scheme, there is a low likelihood of producing the same hash for multiple different inputs (\"collision resistance\")\n\nNote that the security requirements for the product may vary depending on the environment and the value of the passwords. Different schemes might not provide all of these properties, yet may still provide sufficient security for the environment. Conversely, a solution might be very strong in preserving one property, which still being very weak for an attack against another property, or it might not be able to significantly reduce the efficiency of a massively-parallel attack.",
            "alternate_terms": [],
            "original_content": "The product generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.",
            "relationships": [
              {
                "source_id": "916",
                "target_id": "760",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "916",
                "target_id": "759",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "916",
                "target_id": "327",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "916",
                "target_id": "328",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "760",
                "target_id": "916",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "759",
                "target_id": "916",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "328",
                "target_id": "916",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "327",
                "target_id": "916",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              }
            ],
            "source": "graph",
            "sources": [
              "vector",
              "graph"
            ],
            "vector_score": 0.5681020598486438,
            "graph_score": 2.4699999999999998,
            "score_components": {
              "relationship_chain": 0.3,
              "explicit_mention": 1.0,
              "abstraction_path": 0.9
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "328",
                      "916",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.3,
                  "type": "relationship_chain",
                  "source": "328"
                }
              }
            },
            "is_explicit": true,
            "abstraction_level": "base",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse",
                "graph"
              ],
              "retriever_count": 3,
              "normalized_scores": {
                "dense": 0.5273355740620833,
                "sparse": 243.9991156743613,
                "graph": 1.7092408239394574
              }
            }
          },
          "similarity": 1.7092408239394574
        },
        {
          "doc_id": "294",
          "text": "A capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).",
          "score": 0.5262317556000331,
          "metadata": {
            "doc_id": "294",
            "name": "Authentication Bypass by Capture-replay",
            "type": "Base",
            "extended_description": "Capture-replay attacks are common and can be difficult to defeat without cryptography. They are a subset of network injection attacks that rely on observing previously-sent valid commands, then changing them slightly if necessary and resending the same commands to the server.",
            "alternate_terms": [],
            "original_content": "A capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).",
            "relationships": [
              {
                "source_id": "294",
                "target_id": "287",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "294",
                "target_id": "1390",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "287",
                "target_id": "294",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "1390",
                "target_id": "294",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "source": "graph",
            "sources": [
              "vector",
              "graph"
            ],
            "vector_score": 0.5262317556000331,
            "graph_score": 2.3998000000000004,
            "score_components": {
              "relationship_chain": 0.24,
              "explicit_mention": 1.0,
              "abstraction_path": 0.9
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "836",
                      "1390",
                      "CHILDOF"
                    ],
                    [
                      "1390",
                      "294",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.24,
                  "type": "relationship_chain",
                  "source": "836"
                }
              }
            },
            "is_explicit": true,
            "abstraction_level": "base",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse",
                "graph"
              ],
              "retriever_count": 3,
              "normalized_scores": {
                "dense": 0.44265407701646087,
                "sparse": 222.06386444460597,
                "graph": 1.6503727022400136
              }
            }
          },
          "similarity": 1.6503727022400136
        },
        {
          "doc_id": "412",
          "text": "CWE-412: Unrestricted Externally Accessible Lock",
          "score": 1.521,
          "metadata": {
            "doc_id": "412",
            "name": "Unrestricted Externally Accessible Lock",
            "type": "base",
            "original_content": "CWE-412: Unrestricted Externally Accessible Lock",
            "relationships": [
              {
                "source_id": "412",
                "target_id": "410",
                "label": "CANALSOBE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "412",
                "target_id": "667",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "667",
                "target_id": "412",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.7,
              "peer_group": 0.9
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "peer_relationship"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "412",
                      "410",
                      "CANALSOBE"
                    ]
                  ],
                  "score": 0.7,
                  "type": "relationship_chain",
                  "source": "410"
                },
                "peer_relationship": {
                  "path": [
                    [
                      "412",
                      "410",
                      "CANALSOBE"
                    ]
                  ],
                  "score": 0.9,
                  "type": "peer_relationship",
                  "source": "410"
                }
              }
            },
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.521
              }
            }
          },
          "similarity": 1.521
        },
        {
          "doc_id": "410",
          "text": "The product's resource pool is not large enough to handle peak demand, which allows an attacker to prevent others from accessing the resource by using a (relatively) large number of requests for resources.",
          "score": 0.5717119459936348,
          "metadata": {
            "doc_id": "410",
            "name": "Insufficient Resource Pool",
            "type": "Base",
            "extended_description": "Frequently the consequence is a \"flood\" of connection or sessions.",
            "alternate_terms": [],
            "original_content": "The product's resource pool is not large enough to handle peak demand, which allows an attacker to prevent others from accessing the resource by using a (relatively) large number of requests for resources.",
            "relationships": [
              {
                "source_id": "410",
                "target_id": "400",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "410",
                "target_id": "664",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "664",
                "target_id": "410",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "412",
                "target_id": "410",
                "label": "CANALSOBE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "400",
                "target_id": "410",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              }
            ],
            "source": "graph",
            "sources": [
              "vector",
              "graph"
            ],
            "vector_score": 0.5717119459936348,
            "graph_score": 2.1189999999999998,
            "score_components": {
              "explicit_mention": 1.0,
              "abstraction_path": 0.9
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [],
              "best_paths": {}
            },
            "is_explicit": true,
            "abstraction_level": "base",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "graph"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "dense": 0.5066851595200853,
                "graph": 1.5000847783974538
              }
            }
          },
          "similarity": 1.5000847783974538
        },
        {
          "doc_id": "836",
          "text": "The product records password hashes in a data store, receives a hash of a password from a client, and compares the supplied hash to the hash obtained from the data store.",
          "score": 0.5436243394098919,
          "metadata": {
            "doc_id": "836",
            "name": "Use of Password Hash Instead of Password for Authentication",
            "type": "Base",
            "extended_description": "\n\nSome authentication mechanisms rely on the client to generate the hash for a password, possibly to reduce load on the server or avoid sending the password across the network. However, when the client is used to generate the hash, an attacker can bypass the authentication by obtaining a copy of the hash, e.g. by using SQL injection to compromise a database of authentication credentials, or by exploiting an information exposure. The attacker could then use a modified client to replay the stolen hash without having knowledge of the original password.\n\n\nAs a result, the server-side comparison against a client-side hash does not provide any more security than the use of passwords without hashing.\n",
            "alternate_terms": [],
            "original_content": "The product records password hashes in a data store, receives a hash of a password from a client, and compares the supplied hash to the hash obtained from the data store.",
            "relationships": [
              {
                "source_id": "836",
                "target_id": "602",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "836",
                "target_id": "1390",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "1390",
                "target_id": "836",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "source": "graph",
            "sources": [
              "vector",
              "graph"
            ],
            "vector_score": 0.5436243394098919,
            "graph_score": 2.1189999999999998,
            "score_components": {
              "explicit_mention": 1.0,
              "abstraction_path": 0.9
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [],
              "best_paths": {}
            },
            "is_explicit": true,
            "abstraction_level": "base",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse",
                "graph"
              ],
              "retriever_count": 3,
              "normalized_scores": {
                "dense": 0.5048399447221708,
                "sparse": 214.51105573266688,
                "graph": 1.4888497357639565
              }
            }
          },
          "similarity": 1.4888497357639565
        },
        {
          "doc_id": "330",
          "text": "The product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.",
          "score": 0.508857858359942,
          "metadata": {
            "doc_id": "330",
            "name": "Use of Insufficiently Random Values",
            "type": "Class",
            "extended_description": "When product generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information.",
            "alternate_terms": [],
            "original_content": "The product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.",
            "relationships": [
              {
                "source_id": "330",
                "target_id": "344",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "330",
                "target_id": "340",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "330",
                "target_id": "338",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "330",
                "target_id": "335",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "330",
                "target_id": "334",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "330",
                "target_id": "331",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "330",
                "target_id": "1241",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "330",
                "target_id": "1204",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "330",
                "target_id": "804",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "330",
                "target_id": "693",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "804",
                "target_id": "330",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "693",
                "target_id": "330",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "344",
                "target_id": "330",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "340",
                "target_id": "330",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "338",
                "target_id": "330",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "338",
                "target_id": "330",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "335",
                "target_id": "330",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "335",
                "target_id": "330",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "334",
                "target_id": "330",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "331",
                "target_id": "330",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "331",
                "target_id": "330",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "1241",
                "target_id": "330",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "1204",
                "target_id": "330",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "source": "graph",
            "sources": [
              "vector",
              "graph"
            ],
            "vector_score": 0.508857858359942,
            "graph_score": 1.6239999999999999,
            "score_components": {
              "relationship_chain": 0.6,
              "explicit_mention": 1.0,
              "abstraction_path": 0.7
            },
            "abstraction_factor": 0.8,
            "graph_path_info": {
              "path_types": [
                "relationship_chain"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "836",
                      "1390",
                      "CHILDOF"
                    ],
                    [
                      "1390",
                      "804",
                      "PARENTOF"
                    ],
                    [
                      "804",
                      "330",
                      "CANFOLLOW"
                    ]
                  ],
                  "score": 0.6,
                  "type": "relationship_chain",
                  "source": "836"
                }
              }
            },
            "is_explicit": true,
            "abstraction_level": "class",
            "mapping_notes": {
              "usage": "Discouraged",
              "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
              "comments": "Examine children of this entry to see if there is a better fit",
              "reasons": [
                "Abstraction"
              ]
            },
            "score_info": {
              "retrievers": [
                "sparse",
                "graph"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "sparse": 255.5089161401263,
                "graph": 1.1779431433439767
              }
            }
          },
          "similarity": 1.1779431433439767
        },
        {
          "doc_id": "290",
          "text": "CWE-290: Authentication Bypass by Spoofing",
          "score": 1.1466,
          "metadata": {
            "doc_id": "290",
            "name": "Authentication Bypass by Spoofing",
            "type": "base",
            "original_content": "CWE-290: Authentication Bypass by Spoofing",
            "relationships": [
              {
                "source_id": "290",
                "target_id": "350",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "290",
                "target_id": "293",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "290",
                "target_id": "291",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "290",
                "target_id": "287",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "290",
                "target_id": "1390",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "602",
                "target_id": "290",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "358",
                "target_id": "290",
                "label": "CANALSOBE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "350",
                "target_id": "290",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "293",
                "target_id": "290",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "291",
                "target_id": "290",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "287",
                "target_id": "290",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "1390",
                "target_id": "290",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.5599999999999999,
              "peer_group": 0.63
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "peer_relationship"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "836",
                      "602",
                      "PEEROF"
                    ],
                    [
                      "602",
                      "290",
                      "PEEROF"
                    ]
                  ],
                  "score": 0.5599999999999999,
                  "type": "relationship_chain",
                  "source": "836"
                },
                "peer_relationship": {
                  "path": [
                    [
                      "836",
                      "602",
                      "PEEROF"
                    ],
                    [
                      "602",
                      "290",
                      "PEEROF"
                    ]
                  ],
                  "score": 0.63,
                  "type": "peer_relationship",
                  "source": "836"
                }
              }
            },
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.1466
              }
            }
          },
          "similarity": 1.1466
        },
        {
          "doc_id": "400",
          "text": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
          "score": 0.5052272073990911,
          "metadata": {
            "doc_id": "400",
            "name": "Uncontrolled Resource Consumption",
            "type": "Class",
            "extended_description": "\n\nLimited resources include memory, file system storage, database connection pool entries, and CPU. If an attacker can trigger the allocation of these limited resources, but the number or size of the resources is not controlled, then the attacker could cause a denial of service that consumes all available resources. This would prevent valid users from accessing the product, and it could potentially have an impact on the surrounding environment. For example, a memory exhaustion attack against an application could slow down the application as well as its host operating system.\n\n\nThere are at least three distinct scenarios which can commonly lead to resource exhaustion:\n\n\n  - Lack of throttling for the number of allocated resources\n\n  - Losing all references to a resource before reaching the shutdown stage\n\n  - Not closing/returning a resource after processing\n\nResource exhaustion problems are often result due to an incorrect implementation of the following situations:\n\n  - Error conditions and other exceptional circumstances.\n\n  - Confusion over which part of the program is responsible for releasing the resource.\n\n",
            "alternate_terms": [
              "Resource Exhaustion"
            ],
            "original_content": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
            "relationships": [
              {
                "source_id": "400",
                "target_id": "920",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "400",
                "target_id": "779",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "400",
                "target_id": "771",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "400",
                "target_id": "770",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "400",
                "target_id": "410",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "400",
                "target_id": "405",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "400",
                "target_id": "1246",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "400",
                "target_id": "1235",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "400",
                "target_id": "664",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "920",
                "target_id": "400",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "920",
                "target_id": "400",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "779",
                "target_id": "400",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "771",
                "target_id": "400",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "770",
                "target_id": "400",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "770",
                "target_id": "400",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "664",
                "target_id": "400",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "410",
                "target_id": "400",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "405",
                "target_id": "400",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "1246",
                "target_id": "400",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "1235",
                "target_id": "400",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "source": "graph",
            "sources": [
              "vector",
              "graph"
            ],
            "vector_score": 0.5052272073990911,
            "graph_score": 1.3600000000000003,
            "score_components": {
              "relationship_chain": 1.0,
              "sequence_path": 1.0
            },
            "abstraction_factor": 0.8,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "vulnerability_sequence_forward"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "410",
                      "400",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 1.0,
                  "type": "relationship_chain",
                  "source": "410"
                },
                "vulnerability_sequence_forward": {
                  "path": [
                    [
                      "410",
                      "400",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 1.0,
                  "type": "vulnerability_sequence_forward",
                  "source": "410"
                }
              }
            },
            "position": "after",
            "mapping_notes": {
              "usage": "Discouraged",
              "rationale": "CWE-400 is intended for incorrect behaviors in which the product is expected to track and restrict how many resources it consumes, but CWE-400 is often misused because it is conflated with the \"technical impact\" of vulnerabilities in which resource consumption occurs. It is sometimes used for low-information vulnerability reports. It is a level-1 Class (i.e., a child of a Pillar).",
              "comments": "Closely analyze the specific mistake that is causing resource consumption, and perform a CWE mapping for that mistake. Consider children/descendants such as CWE-770: Allocation of Resources Without Limits or Throttling, CWE-771: Missing Reference to Active Allocated Resource, CWE-410: Insufficient Resource Pool, CWE-772: Missing Release of Resource after Effective Lifetime, CWE-834: Excessive Iteration, CWE-405: Asymmetric Resource Consumption (Amplification), and others.",
              "reasons": [
                "Frequent Misuse"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse",
                "graph"
              ],
              "retriever_count": 3,
              "normalized_scores": {
                "dense": 0.4323501872269504,
                "sparse": 65.67394027427275,
                "graph": 1.0180908829596367
              }
            }
          },
          "similarity": 1.0180908829596367
        },
        {
          "doc_id": "407",
          "text": "An algorithm in a product has an inefficient worst-case computational complexity that may be detrimental to system performance and can be triggered by an attacker, typically using crafted manipulations that ensure that the worst case is being reached.",
          "score": 0.5612566938770673,
          "metadata": {
            "doc_id": "407",
            "name": "Inefficient Algorithmic Complexity",
            "type": "Class",
            "extended_description": null,
            "alternate_terms": [
              "Quadratic Complexity"
            ],
            "original_content": "An algorithm in a product has an inefficient worst-case computational complexity that may be detrimental to system performance and can be triggered by an attacker, typically using crafted manipulations that ensure that the worst case is being reached.",
            "relationships": [
              {
                "source_id": "407",
                "target_id": "1333",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "407",
                "target_id": "405",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "405",
                "target_id": "407",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "1333",
                "target_id": "407",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "1333",
                "target_id": "407",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "source": "graph",
            "sources": [
              "vector",
              "graph"
            ],
            "vector_score": 0.5612566938770673,
            "graph_score": 1.3216,
            "score_components": {
              "relationship_chain": 0.18,
              "explicit_mention": 1.0,
              "abstraction_path": 0.7
            },
            "abstraction_factor": 0.8,
            "graph_path_info": {
              "path_types": [
                "relationship_chain"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "410",
                      "400",
                      "CANPRECEDE"
                    ],
                    [
                      "400",
                      "405",
                      "PARENTOF"
                    ],
                    [
                      "405",
                      "407",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.18,
                  "type": "relationship_chain",
                  "source": "410"
                }
              }
            },
            "is_explicit": true,
            "abstraction_level": "class",
            "mapping_notes": {
              "usage": "Allowed-with-Review",
              "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
              "comments": "Examine children of this entry to see if there is a better fit",
              "reasons": [
                "Abstraction"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse",
                "graph"
              ],
              "retriever_count": 3,
              "normalized_scores": {
                "dense": 0.49614102838449897,
                "sparse": 264.8570513392626,
                "graph": 1.0174626775508269
              }
            }
          },
          "similarity": 1.0174626775508269
        },
        {
          "doc_id": "344",
          "text": "CWE-344: Use of Invariant Value in Dynamically Changing Context",
          "score": 1.0062,
          "metadata": {
            "doc_id": "344",
            "name": "Use of Invariant Value in Dynamically Changing Context",
            "type": "base",
            "original_content": "CWE-344: Use of Invariant Value in Dynamically Changing Context",
            "relationships": [
              {
                "source_id": "344",
                "target_id": "798",
                "label": "PARENTOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "344",
                "target_id": "587",
                "label": "PARENTOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "344",
                "target_id": "323",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "344",
                "target_id": "330",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "798",
                "target_id": "344",
                "label": "CHILDOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "587",
                "target_id": "344",
                "label": "CHILDOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "330",
                "target_id": "344",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "323",
                "target_id": "344",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.3,
              "abstraction_path": 0.7200000000000001
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "abstraction_path_down"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "330",
                      "344",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.3,
                  "type": "relationship_chain",
                  "source": "330"
                },
                "abstraction_path_down": {
                  "path": [
                    [
                      "330",
                      "344",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.7200000000000001,
                  "type": "abstraction_path_down",
                  "source": "330"
                }
              }
            },
            "abstraction_level": "base",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.0062
              }
            }
          },
          "similarity": 1.0062
        },
        {
          "doc_id": "338",
          "text": "CWE-338: Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)",
          "score": 1.0062,
          "metadata": {
            "doc_id": "338",
            "name": "Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)",
            "type": "base",
            "original_content": "CWE-338: Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)",
            "relationships": [
              {
                "source_id": "338",
                "target_id": "330",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "338",
                "target_id": "330",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "330",
                "target_id": "338",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.3,
              "abstraction_path": 0.7200000000000001
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "abstraction_path_down"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "330",
                      "338",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.3,
                  "type": "relationship_chain",
                  "source": "330"
                },
                "abstraction_path_down": {
                  "path": [
                    [
                      "330",
                      "338",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.7200000000000001,
                  "type": "abstraction_path_down",
                  "source": "330"
                }
              }
            },
            "abstraction_level": "base",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.0062
              }
            }
          },
          "similarity": 1.0062
        },
        {
          "doc_id": "335",
          "text": "CWE-335: Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)",
          "score": 1.0062,
          "metadata": {
            "doc_id": "335",
            "name": "Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)",
            "type": "base",
            "original_content": "CWE-335: Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)",
            "relationships": [
              {
                "source_id": "335",
                "target_id": "339",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "335",
                "target_id": "337",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "335",
                "target_id": "336",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "335",
                "target_id": "330",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "335",
                "target_id": "330",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "339",
                "target_id": "335",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "337",
                "target_id": "335",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "336",
                "target_id": "335",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "330",
                "target_id": "335",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.3,
              "abstraction_path": 0.7200000000000001
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "abstraction_path_down"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "330",
                      "335",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.3,
                  "type": "relationship_chain",
                  "source": "330"
                },
                "abstraction_path_down": {
                  "path": [
                    [
                      "330",
                      "335",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.7200000000000001,
                  "type": "abstraction_path_down",
                  "source": "330"
                }
              }
            },
            "abstraction_level": "base",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.0062
              }
            }
          },
          "similarity": 1.0062
        },
        {
          "doc_id": "331",
          "text": "CWE-331: Insufficient Entropy",
          "score": 1.0062,
          "metadata": {
            "doc_id": "331",
            "name": "Insufficient Entropy",
            "type": "base",
            "original_content": "CWE-331: Insufficient Entropy",
            "relationships": [
              {
                "source_id": "331",
                "target_id": "333",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "331",
                "target_id": "332",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "331",
                "target_id": "330",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "331",
                "target_id": "330",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "333",
                "target_id": "331",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "332",
                "target_id": "331",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "330",
                "target_id": "331",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.3,
              "abstraction_path": 0.7200000000000001
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "abstraction_path_down"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "330",
                      "331",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.3,
                  "type": "relationship_chain",
                  "source": "330"
                },
                "abstraction_path_down": {
                  "path": [
                    [
                      "330",
                      "331",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.7200000000000001,
                  "type": "abstraction_path_down",
                  "source": "330"
                }
              }
            },
            "abstraction_level": "base",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.0062
              }
            }
          },
          "similarity": 1.0062
        },
        {
          "doc_id": "1241",
          "text": "CWE-1241: Use of Predictable Algorithm in Random Number Generator",
          "score": 1.0062,
          "metadata": {
            "doc_id": "1241",
            "name": "Use of Predictable Algorithm in Random Number Generator",
            "type": "base",
            "original_content": "CWE-1241: Use of Predictable Algorithm in Random Number Generator",
            "relationships": [
              {
                "source_id": "1241",
                "target_id": "330",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "330",
                "target_id": "1241",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.3,
              "abstraction_path": 0.7200000000000001
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "abstraction_path_down"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "330",
                      "1241",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.3,
                  "type": "relationship_chain",
                  "source": "330"
                },
                "abstraction_path_down": {
                  "path": [
                    [
                      "330",
                      "1241",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.7200000000000001,
                  "type": "abstraction_path_down",
                  "source": "330"
                }
              }
            },
            "abstraction_level": "base",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.0062
              }
            }
          },
          "similarity": 1.0062
        },
        {
          "doc_id": "1204",
          "text": "CWE-1204: Generation of Weak Initialization Vector (IV)",
          "score": 1.0062,
          "metadata": {
            "doc_id": "1204",
            "name": "Generation of Weak Initialization Vector (IV)",
            "type": "base",
            "original_content": "CWE-1204: Generation of Weak Initialization Vector (IV)",
            "relationships": [
              {
                "source_id": "1204",
                "target_id": "329",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "1204",
                "target_id": "330",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "330",
                "target_id": "1204",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "329",
                "target_id": "1204",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.3,
              "abstraction_path": 0.7200000000000001
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "abstraction_path_down"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "330",
                      "1204",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.3,
                  "type": "relationship_chain",
                  "source": "330"
                },
                "abstraction_path_down": {
                  "path": [
                    [
                      "330",
                      "1204",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.7200000000000001,
                  "type": "abstraction_path_down",
                  "source": "330"
                }
              }
            },
            "abstraction_level": "base",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.0062
              }
            }
          },
          "similarity": 1.0062
        },
        {
          "doc_id": "1333",
          "text": "CWE-1333: Inefficient Regular Expression Complexity",
          "score": 1.0062,
          "metadata": {
            "doc_id": "1333",
            "name": "Inefficient Regular Expression Complexity",
            "type": "base",
            "original_content": "CWE-1333: Inefficient Regular Expression Complexity",
            "relationships": [
              {
                "source_id": "1333",
                "target_id": "407",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "1333",
                "target_id": "407",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "407",
                "target_id": "1333",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.3,
              "abstraction_path": 0.7200000000000001
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "abstraction_path_down"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "407",
                      "1333",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.3,
                  "type": "relationship_chain",
                  "source": "407"
                },
                "abstraction_path_down": {
                  "path": [
                    [
                      "407",
                      "1333",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.7200000000000001,
                  "type": "abstraction_path_down",
                  "source": "407"
                }
              }
            },
            "abstraction_level": "base",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.0062
              }
            }
          },
          "similarity": 1.0062
        },
        {
          "doc_id": "471",
          "text": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
          "score": 0.9360000000000002,
          "metadata": {
            "doc_id": "471",
            "name": "Modification of Assumed-Immutable Data (MAID)",
            "type": "base",
            "original_content": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
            "relationships": [
              {
                "source_id": "471",
                "target_id": "621",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "471",
                "target_id": "607",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "471",
                "target_id": "602",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "471",
                "target_id": "473",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "471",
                "target_id": "472",
                "label": "PARENTOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "471",
                "target_id": "425",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "471",
                "target_id": "291",
                "label": "PARENTOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "471",
                "target_id": "1321",
                "label": "CANFOLLOW",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "471",
                "target_id": "1282",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "471",
                "target_id": "664",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "664",
                "target_id": "471",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "621",
                "target_id": "471",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "607",
                "target_id": "471",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "602",
                "target_id": "471",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "473",
                "target_id": "471",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "472",
                "target_id": "471",
                "label": "CHILDOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "425",
                "target_id": "471",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "291",
                "target_id": "471",
                "label": "CHILDOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "1321",
                "target_id": "471",
                "label": "CANPRECEDE",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "1282",
                "target_id": "471",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.8
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "836",
                      "602",
                      "PEEROF"
                    ],
                    [
                      "602",
                      "471",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 0.8,
                  "type": "relationship_chain",
                  "source": "836"
                }
              }
            },
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 0.9360000000000002
              }
            }
          },
          "similarity": 0.9360000000000002
        },
        {
          "doc_id": "613",
          "text": "CWE-613: Insufficient Session Expiration",
          "score": 0.9360000000000002,
          "metadata": {
            "doc_id": "613",
            "name": "Insufficient Session Expiration",
            "type": "base",
            "original_content": "CWE-613: Insufficient Session Expiration",
            "relationships": [
              {
                "source_id": "613",
                "target_id": "352",
                "label": "REQUIREDBY",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "613",
                "target_id": "287",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "613",
                "target_id": "672",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "613",
                "target_id": "672",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "672",
                "target_id": "613",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "352",
                "target_id": "613",
                "label": "REQUIRES",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "287",
                "target_id": "613",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.8
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "294",
                      "287",
                      "CHILDOF"
                    ],
                    [
                      "287",
                      "613",
                      "CANFOLLOW"
                    ]
                  ],
                  "score": 0.8,
                  "type": "relationship_chain",
                  "source": "294"
                }
              }
            },
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 0.9360000000000002
              }
            }
          },
          "similarity": 0.9360000000000002
        }
      ],
      "result_sources": {
        "CWE-328": [
          "dense",
          "sparse",
          "graph"
        ],
        "CWE-916": [
          "dense",
          "sparse",
          "graph"
        ],
        "CWE-410": [
          "dense",
          "graph"
        ],
        "CWE-836": [
          "dense",
          "sparse",
          "graph"
        ],
        "CWE-407": [
          "dense",
          "sparse",
          "graph"
        ],
        "CWE-759": [
          "dense"
        ],
        "CWE-760": [
          "dense"
        ],
        "CWE-834": [
          "dense"
        ],
        "CWE-1325": [
          "dense"
        ],
        "CWE-1176": [
          "dense"
        ],
        "CWE-401": [
          "dense"
        ],
        "CWE-835": [
          "dense"
        ],
        "CWE-294": [
          "dense",
          "sparse",
          "graph"
        ],
        "CWE-1089": [
          "dense"
        ],
        "CWE-1331": [
          "dense"
        ],
        "CWE-208": [
          "dense"
        ],
        "CWE-770": [
          "dense",
          "sparse"
        ],
        "CWE-400": [
          "dense",
          "sparse",
          "graph"
        ],
        "CWE-696": [
          "dense"
        ],
        "CWE-799": [
          "dense"
        ],
        "CWE-330": [
          "sparse",
          "graph"
        ],
        "CWE-327": [
          "sparse"
        ],
        "CWE-301": [
          "sparse"
        ],
        "CWE-674": [
          "sparse"
        ],
        "CWE-1240": [
          "sparse"
        ],
        "CWE-804": [
          "graph"
        ],
        "CWE-412": [
          "graph"
        ],
        "CWE-290": [
          "graph"
        ],
        "CWE-344": [
          "graph"
        ],
        "CWE-338": [
          "graph"
        ],
        "CWE-335": [
          "graph"
        ],
        "CWE-331": [
          "graph"
        ],
        "CWE-1241": [
          "graph"
        ],
        "CWE-1204": [
          "graph"
        ],
        "CWE-1333": [
          "graph"
        ],
        "CWE-471": [
          "graph"
        ],
        "CWE-613": [
          "graph"
        ]
      },
      "result_scores": {
        "CWE-328": {
          "dense": 0.5370893326418129,
          "sparse": 266.59713348086973,
          "graph": 1.7149474429757086
        },
        "CWE-916": {
          "dense": 0.5273355740620833,
          "sparse": 243.9991156743613,
          "graph": 1.7092408239394574
        },
        "CWE-410": {
          "dense": 0.5066851595200853,
          "graph": 1.5000847783974538
        },
        "CWE-836": {
          "dense": 0.5048399447221708,
          "sparse": 214.51105573266688,
          "graph": 1.4888497357639565
        },
        "CWE-407": {
          "dense": 0.49614102838449897,
          "sparse": 264.8570513392626,
          "graph": 1.0174626775508269
        },
        "CWE-759": {
          "dense": 0.49123664951564266
        },
        "CWE-760": {
          "dense": 0.4829491707940137
        },
        "CWE-834": {
          "dense": 0.4753355538372336
        },
        "CWE-1325": {
          "dense": 0.46873079660724803
        },
        "CWE-1176": {
          "dense": 0.46823713523273425
        },
        "CWE-401": {
          "dense": 0.4468804831750041
        },
        "CWE-835": {
          "dense": 0.446786022700599
        },
        "CWE-294": {
          "dense": 0.44265407701646087,
          "sparse": 222.06386444460597,
          "graph": 1.6503727022400136
        },
        "CWE-1089": {
          "dense": 0.43970908703988626
        },
        "CWE-1331": {
          "dense": 0.43740535855978
        },
        "CWE-208": {
          "dense": 0.43567719820007156
        },
        "CWE-770": {
          "dense": 0.43562083032329774,
          "sparse": 67.00924514121934
        },
        "CWE-400": {
          "dense": 0.4323501872269504,
          "sparse": 65.67394027427275,
          "graph": 1.0180908829596367
        },
        "CWE-696": {
          "dense": 0.4314826772872991
        },
        "CWE-799": {
          "dense": 0.4311306849872645
        },
        "CWE-330": {
          "sparse": 255.5089161401263,
          "graph": 1.1779431433439767
        },
        "CWE-327": {
          "sparse": 221.87128005934323
        },
        "CWE-301": {
          "sparse": 221.28674836113777
        },
        "CWE-674": {
          "sparse": 217.8008214263568
        },
        "CWE-1240": {
          "sparse": 212.37197720097376
        },
        "CWE-804": {
          "graph": 2.2100000000000004
        },
        "CWE-412": {
          "graph": 1.521
        },
        "CWE-290": {
          "graph": 1.1466
        },
        "CWE-344": {
          "graph": 1.0062
        },
        "CWE-338": {
          "graph": 1.0062
        },
        "CWE-335": {
          "graph": 1.0062
        },
        "CWE-331": {
          "graph": 1.0062
        },
        "CWE-1241": {
          "graph": 1.0062
        },
        "CWE-1204": {
          "graph": 1.0062
        },
        "CWE-1333": {
          "graph": 1.0062
        },
        "CWE-471": {
          "graph": 0.9360000000000002
        },
        "CWE-613": {
          "graph": 0.9360000000000002
        }
      },
      "retriever_results": {
        "graph": [
          {
            "doc_id": "804",
            "text": "CWE-804: Guessable CAPTCHA",
            "score": 2.2100000000000004,
            "metadata": {
              "doc_id": "804",
              "name": "Guessable CAPTCHA",
              "type": "base",
              "original_content": "CWE-804: Guessable CAPTCHA",
              "relationships": [
                {
                  "source_id": "804",
                  "target_id": "330",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "804",
                  "target_id": "1390",
                  "label": "CHILDOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "804",
                  "target_id": "863",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "863",
                  "target_id": "804",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "330",
                  "target_id": "804",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "1390",
                  "target_id": "804",
                  "label": "PARENTOF",
                  "properties": {
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 1.0,
                "sequence_path": 1.0
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "vulnerability_sequence_forward"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "330",
                        "804",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 1.0,
                    "type": "relationship_chain",
                    "source": "330"
                  },
                  "vulnerability_sequence_forward": {
                    "path": [
                      [
                        "330",
                        "804",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 1.0,
                    "type": "vulnerability_sequence_forward",
                    "source": "330"
                  }
                }
              },
              "position": "after",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 2.2100000000000004
                }
              }
            },
            "similarity": 2.2100000000000004
          },
          {
            "doc_id": "328",
            "text": "The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).",
            "score": 0.5823686074392721,
            "metadata": {
              "doc_id": "328",
              "name": "Use of Weak Hash",
              "type": "Base",
              "extended_description": "\n\nA hash function is defined as an algorithm that maps arbitrarily sized data into a fixed-sized digest (output) such that the following properties hold:\n\n\n  1. The algorithm is not invertible (also called \"one-way\" or \"not reversible\")\n\n  1. The algorithm is deterministic; the same input produces the same digest every time\n\n Building on this definition, a cryptographic hash function must also ensure that a malicious actor cannot leverage the hash function to have a reasonable chance of success at determining any of the following:\n\n  1. the original input (preimage attack), given only the digest\n\n  1. another input that can produce the same digest (2nd preimage attack), given the original input\n\n  1. a set of two or more inputs that evaluate to the same digest (birthday attack), given the actor can arbitrarily choose the inputs to be hashed and can do so a reasonable amount of times\n\nWhat is regarded as \"reasonable\" varies by context and threat model, but in general, \"reasonable\" could cover any attack that is more efficient than brute force (i.e., on average, attempting half of all possible combinations). Note that some attacks might be more efficient than brute force but are still not regarded as achievable in the real world.\n\nAny algorithm that does not meet the above conditions will generally be considered weak for general use in hashing.\n\n\nIn addition to algorithmic weaknesses, a hash function can be made weak by using the hash in a security context that breaks its security guarantees. For example, using a hash function without a salt for storing passwords (that are sufficiently short) could enable an adversary to create a \"rainbow table\" [REF-637] to recover the password under certain conditions; this attack works against such hash functions as MD5, SHA-1, and SHA-2.\n",
              "alternate_terms": [],
              "original_content": "The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).",
              "relationships": [
                {
                  "source_id": "328",
                  "target_id": "916",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "328",
                  "target_id": "327",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "328",
                  "target_id": "326",
                  "label": "CHILDOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "916",
                  "target_id": "328",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "327",
                  "target_id": "328",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "326",
                  "target_id": "328",
                  "label": "PARENTOF",
                  "properties": {
                    "view_id": "1000"
                  }
                }
              ],
              "source": "graph",
              "sources": [
                "vector",
                "graph"
              ],
              "vector_score": 0.5823686074392721,
              "graph_score": 2.4699999999999998,
              "score_components": {
                "explicit_mention": 1.0,
                "relationship_chain": 0.3,
                "abstraction_path": 0.9
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "916",
                        "328",
                        "CHILDOF"
                      ]
                    ],
                    "score": 0.3,
                    "type": "relationship_chain",
                    "source": "916"
                  }
                }
              },
              "is_explicit": true,
              "abstraction_level": "base",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse",
                  "graph"
                ],
                "retriever_count": 3,
                "normalized_scores": {
                  "dense": 0.5370893326418129,
                  "sparse": 266.59713348086973,
                  "graph": 1.7149474429757086
                }
              }
            },
            "similarity": 1.7149474429757086
          },
          {
            "doc_id": "916",
            "text": "The product generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.",
            "score": 0.5681020598486438,
            "metadata": {
              "doc_id": "916",
              "name": "Use of Password Hash With Insufficient Computational Effort",
              "type": "Base",
              "extended_description": "\n\nMany password storage mechanisms compute a hash and store the hash, instead of storing the original password in plaintext. In this design, authentication involves accepting an incoming password, computing its hash, and comparing it to the stored hash.\n\n\nMany hash algorithms are designed to execute quickly with minimal overhead, even cryptographic hashes. However, this efficiency is a problem for password storage, because it can reduce an attacker's workload for brute-force password cracking. If an attacker can obtain the hashes through some other method (such as SQL injection on a database that stores hashes), then the attacker can store the hashes offline and use various techniques to crack the passwords by computing hashes efficiently. Without a built-in workload, modern attacks can compute large numbers of hashes, or even exhaust the entire space of all possible passwords, within a very short amount of time, using massively-parallel computing (such as cloud computing) and GPU, ASIC, or FPGA hardware. In such a scenario, an efficient hash algorithm helps the attacker.\n\n\nThere are several properties of a hash scheme that are relevant to its strength against an offline, massively-parallel attack:\n\n\n  - The amount of CPU time required to compute the hash (\"stretching\")\n\n  - The amount of memory required to compute the hash (\"memory-hard\" operations)\n\n  - Including a random value, along with the password, as input to the hash computation (\"salting\")\n\n  - Given a hash, there is no known way of determining an input (e.g., a password) that produces this hash value, other than by guessing possible inputs (\"one-way\" hashing)\n\n  - Relative to the number of all possible hashes that can be generated by the scheme, there is a low likelihood of producing the same hash for multiple different inputs (\"collision resistance\")\n\nNote that the security requirements for the product may vary depending on the environment and the value of the passwords. Different schemes might not provide all of these properties, yet may still provide sufficient security for the environment. Conversely, a solution might be very strong in preserving one property, which still being very weak for an attack against another property, or it might not be able to significantly reduce the efficiency of a massively-parallel attack.",
              "alternate_terms": [],
              "original_content": "The product generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.",
              "relationships": [
                {
                  "source_id": "916",
                  "target_id": "760",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "916",
                  "target_id": "759",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "916",
                  "target_id": "327",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "916",
                  "target_id": "328",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "760",
                  "target_id": "916",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "759",
                  "target_id": "916",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "328",
                  "target_id": "916",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "327",
                  "target_id": "916",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                }
              ],
              "source": "graph",
              "sources": [
                "vector",
                "graph"
              ],
              "vector_score": 0.5681020598486438,
              "graph_score": 2.4699999999999998,
              "score_components": {
                "relationship_chain": 0.3,
                "explicit_mention": 1.0,
                "abstraction_path": 0.9
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "328",
                        "916",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.3,
                    "type": "relationship_chain",
                    "source": "328"
                  }
                }
              },
              "is_explicit": true,
              "abstraction_level": "base",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse",
                  "graph"
                ],
                "retriever_count": 3,
                "normalized_scores": {
                  "dense": 0.5273355740620833,
                  "sparse": 243.9991156743613,
                  "graph": 1.7092408239394574
                }
              }
            },
            "similarity": 1.7092408239394574
          },
          {
            "doc_id": "294",
            "text": "A capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).",
            "score": 0.5262317556000331,
            "metadata": {
              "doc_id": "294",
              "name": "Authentication Bypass by Capture-replay",
              "type": "Base",
              "extended_description": "Capture-replay attacks are common and can be difficult to defeat without cryptography. They are a subset of network injection attacks that rely on observing previously-sent valid commands, then changing them slightly if necessary and resending the same commands to the server.",
              "alternate_terms": [],
              "original_content": "A capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).",
              "relationships": [
                {
                  "source_id": "294",
                  "target_id": "287",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "294",
                  "target_id": "1390",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "287",
                  "target_id": "294",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "1390",
                  "target_id": "294",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "source": "graph",
              "sources": [
                "vector",
                "graph"
              ],
              "vector_score": 0.5262317556000331,
              "graph_score": 2.3998000000000004,
              "score_components": {
                "relationship_chain": 0.24,
                "explicit_mention": 1.0,
                "abstraction_path": 0.9
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "836",
                        "1390",
                        "CHILDOF"
                      ],
                      [
                        "1390",
                        "294",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.24,
                    "type": "relationship_chain",
                    "source": "836"
                  }
                }
              },
              "is_explicit": true,
              "abstraction_level": "base",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse",
                  "graph"
                ],
                "retriever_count": 3,
                "normalized_scores": {
                  "dense": 0.44265407701646087,
                  "sparse": 222.06386444460597,
                  "graph": 1.6503727022400136
                }
              }
            },
            "similarity": 1.6503727022400136
          },
          {
            "doc_id": "412",
            "text": "CWE-412: Unrestricted Externally Accessible Lock",
            "score": 1.521,
            "metadata": {
              "doc_id": "412",
              "name": "Unrestricted Externally Accessible Lock",
              "type": "base",
              "original_content": "CWE-412: Unrestricted Externally Accessible Lock",
              "relationships": [
                {
                  "source_id": "412",
                  "target_id": "410",
                  "label": "CANALSOBE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "412",
                  "target_id": "667",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "667",
                  "target_id": "412",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.7,
                "peer_group": 0.9
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "peer_relationship"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "412",
                        "410",
                        "CANALSOBE"
                      ]
                    ],
                    "score": 0.7,
                    "type": "relationship_chain",
                    "source": "410"
                  },
                  "peer_relationship": {
                    "path": [
                      [
                        "412",
                        "410",
                        "CANALSOBE"
                      ]
                    ],
                    "score": 0.9,
                    "type": "peer_relationship",
                    "source": "410"
                  }
                }
              },
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.521
                }
              }
            },
            "similarity": 1.521
          },
          {
            "doc_id": "410",
            "text": "The product's resource pool is not large enough to handle peak demand, which allows an attacker to prevent others from accessing the resource by using a (relatively) large number of requests for resources.",
            "score": 0.5717119459936348,
            "metadata": {
              "doc_id": "410",
              "name": "Insufficient Resource Pool",
              "type": "Base",
              "extended_description": "Frequently the consequence is a \"flood\" of connection or sessions.",
              "alternate_terms": [],
              "original_content": "The product's resource pool is not large enough to handle peak demand, which allows an attacker to prevent others from accessing the resource by using a (relatively) large number of requests for resources.",
              "relationships": [
                {
                  "source_id": "410",
                  "target_id": "400",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "410",
                  "target_id": "664",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "664",
                  "target_id": "410",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "412",
                  "target_id": "410",
                  "label": "CANALSOBE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "400",
                  "target_id": "410",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                }
              ],
              "source": "graph",
              "sources": [
                "vector",
                "graph"
              ],
              "vector_score": 0.5717119459936348,
              "graph_score": 2.1189999999999998,
              "score_components": {
                "explicit_mention": 1.0,
                "abstraction_path": 0.9
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [],
                "best_paths": {}
              },
              "is_explicit": true,
              "abstraction_level": "base",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "graph"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "dense": 0.5066851595200853,
                  "graph": 1.5000847783974538
                }
              }
            },
            "similarity": 1.5000847783974538
          },
          {
            "doc_id": "836",
            "text": "The product records password hashes in a data store, receives a hash of a password from a client, and compares the supplied hash to the hash obtained from the data store.",
            "score": 0.5436243394098919,
            "metadata": {
              "doc_id": "836",
              "name": "Use of Password Hash Instead of Password for Authentication",
              "type": "Base",
              "extended_description": "\n\nSome authentication mechanisms rely on the client to generate the hash for a password, possibly to reduce load on the server or avoid sending the password across the network. However, when the client is used to generate the hash, an attacker can bypass the authentication by obtaining a copy of the hash, e.g. by using SQL injection to compromise a database of authentication credentials, or by exploiting an information exposure. The attacker could then use a modified client to replay the stolen hash without having knowledge of the original password.\n\n\nAs a result, the server-side comparison against a client-side hash does not provide any more security than the use of passwords without hashing.\n",
              "alternate_terms": [],
              "original_content": "The product records password hashes in a data store, receives a hash of a password from a client, and compares the supplied hash to the hash obtained from the data store.",
              "relationships": [
                {
                  "source_id": "836",
                  "target_id": "602",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "836",
                  "target_id": "1390",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "1390",
                  "target_id": "836",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "source": "graph",
              "sources": [
                "vector",
                "graph"
              ],
              "vector_score": 0.5436243394098919,
              "graph_score": 2.1189999999999998,
              "score_components": {
                "explicit_mention": 1.0,
                "abstraction_path": 0.9
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [],
                "best_paths": {}
              },
              "is_explicit": true,
              "abstraction_level": "base",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse",
                  "graph"
                ],
                "retriever_count": 3,
                "normalized_scores": {
                  "dense": 0.5048399447221708,
                  "sparse": 214.51105573266688,
                  "graph": 1.4888497357639565
                }
              }
            },
            "similarity": 1.4888497357639565
          },
          {
            "doc_id": "330",
            "text": "The product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.",
            "score": 0.508857858359942,
            "metadata": {
              "doc_id": "330",
              "name": "Use of Insufficiently Random Values",
              "type": "Class",
              "extended_description": "When product generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information.",
              "alternate_terms": [],
              "original_content": "The product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.",
              "relationships": [
                {
                  "source_id": "330",
                  "target_id": "344",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "330",
                  "target_id": "340",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "330",
                  "target_id": "338",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "330",
                  "target_id": "335",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "330",
                  "target_id": "334",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "330",
                  "target_id": "331",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "330",
                  "target_id": "1241",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "330",
                  "target_id": "1204",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "330",
                  "target_id": "804",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "330",
                  "target_id": "693",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "804",
                  "target_id": "330",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "693",
                  "target_id": "330",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "344",
                  "target_id": "330",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "340",
                  "target_id": "330",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "338",
                  "target_id": "330",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "338",
                  "target_id": "330",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "335",
                  "target_id": "330",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "335",
                  "target_id": "330",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "334",
                  "target_id": "330",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "331",
                  "target_id": "330",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "331",
                  "target_id": "330",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "1241",
                  "target_id": "330",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "1204",
                  "target_id": "330",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "source": "graph",
              "sources": [
                "vector",
                "graph"
              ],
              "vector_score": 0.508857858359942,
              "graph_score": 1.6239999999999999,
              "score_components": {
                "relationship_chain": 0.6,
                "explicit_mention": 1.0,
                "abstraction_path": 0.7
              },
              "abstraction_factor": 0.8,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "836",
                        "1390",
                        "CHILDOF"
                      ],
                      [
                        "1390",
                        "804",
                        "PARENTOF"
                      ],
                      [
                        "804",
                        "330",
                        "CANFOLLOW"
                      ]
                    ],
                    "score": 0.6,
                    "type": "relationship_chain",
                    "source": "836"
                  }
                }
              },
              "is_explicit": true,
              "abstraction_level": "class",
              "mapping_notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_info": {
                "retrievers": [
                  "sparse",
                  "graph"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "sparse": 255.5089161401263,
                  "graph": 1.1779431433439767
                }
              }
            },
            "similarity": 1.1779431433439767
          },
          {
            "doc_id": "290",
            "text": "CWE-290: Authentication Bypass by Spoofing",
            "score": 1.1466,
            "metadata": {
              "doc_id": "290",
              "name": "Authentication Bypass by Spoofing",
              "type": "base",
              "original_content": "CWE-290: Authentication Bypass by Spoofing",
              "relationships": [
                {
                  "source_id": "290",
                  "target_id": "350",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "290",
                  "target_id": "293",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "290",
                  "target_id": "291",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "290",
                  "target_id": "287",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "290",
                  "target_id": "1390",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "602",
                  "target_id": "290",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "358",
                  "target_id": "290",
                  "label": "CANALSOBE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "350",
                  "target_id": "290",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "293",
                  "target_id": "290",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "291",
                  "target_id": "290",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "287",
                  "target_id": "290",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "1390",
                  "target_id": "290",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.5599999999999999,
                "peer_group": 0.63
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "peer_relationship"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "836",
                        "602",
                        "PEEROF"
                      ],
                      [
                        "602",
                        "290",
                        "PEEROF"
                      ]
                    ],
                    "score": 0.5599999999999999,
                    "type": "relationship_chain",
                    "source": "836"
                  },
                  "peer_relationship": {
                    "path": [
                      [
                        "836",
                        "602",
                        "PEEROF"
                      ],
                      [
                        "602",
                        "290",
                        "PEEROF"
                      ]
                    ],
                    "score": 0.63,
                    "type": "peer_relationship",
                    "source": "836"
                  }
                }
              },
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.1466
                }
              }
            },
            "similarity": 1.1466
          },
          {
            "doc_id": "400",
            "text": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
            "score": 0.5052272073990911,
            "metadata": {
              "doc_id": "400",
              "name": "Uncontrolled Resource Consumption",
              "type": "Class",
              "extended_description": "\n\nLimited resources include memory, file system storage, database connection pool entries, and CPU. If an attacker can trigger the allocation of these limited resources, but the number or size of the resources is not controlled, then the attacker could cause a denial of service that consumes all available resources. This would prevent valid users from accessing the product, and it could potentially have an impact on the surrounding environment. For example, a memory exhaustion attack against an application could slow down the application as well as its host operating system.\n\n\nThere are at least three distinct scenarios which can commonly lead to resource exhaustion:\n\n\n  - Lack of throttling for the number of allocated resources\n\n  - Losing all references to a resource before reaching the shutdown stage\n\n  - Not closing/returning a resource after processing\n\nResource exhaustion problems are often result due to an incorrect implementation of the following situations:\n\n  - Error conditions and other exceptional circumstances.\n\n  - Confusion over which part of the program is responsible for releasing the resource.\n\n",
              "alternate_terms": [
                "Resource Exhaustion"
              ],
              "original_content": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
              "relationships": [
                {
                  "source_id": "400",
                  "target_id": "920",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "400",
                  "target_id": "779",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "400",
                  "target_id": "771",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "400",
                  "target_id": "770",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "400",
                  "target_id": "410",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "400",
                  "target_id": "405",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "400",
                  "target_id": "1246",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "400",
                  "target_id": "1235",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "400",
                  "target_id": "664",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "920",
                  "target_id": "400",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "920",
                  "target_id": "400",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "779",
                  "target_id": "400",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "771",
                  "target_id": "400",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "770",
                  "target_id": "400",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "770",
                  "target_id": "400",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "664",
                  "target_id": "400",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "410",
                  "target_id": "400",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "405",
                  "target_id": "400",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "1246",
                  "target_id": "400",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "1235",
                  "target_id": "400",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "source": "graph",
              "sources": [
                "vector",
                "graph"
              ],
              "vector_score": 0.5052272073990911,
              "graph_score": 1.3600000000000003,
              "score_components": {
                "relationship_chain": 1.0,
                "sequence_path": 1.0
              },
              "abstraction_factor": 0.8,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "vulnerability_sequence_forward"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "410",
                        "400",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 1.0,
                    "type": "relationship_chain",
                    "source": "410"
                  },
                  "vulnerability_sequence_forward": {
                    "path": [
                      [
                        "410",
                        "400",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 1.0,
                    "type": "vulnerability_sequence_forward",
                    "source": "410"
                  }
                }
              },
              "position": "after",
              "mapping_notes": {
                "usage": "Discouraged",
                "rationale": "CWE-400 is intended for incorrect behaviors in which the product is expected to track and restrict how many resources it consumes, but CWE-400 is often misused because it is conflated with the \"technical impact\" of vulnerabilities in which resource consumption occurs. It is sometimes used for low-information vulnerability reports. It is a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Closely analyze the specific mistake that is causing resource consumption, and perform a CWE mapping for that mistake. Consider children/descendants such as CWE-770: Allocation of Resources Without Limits or Throttling, CWE-771: Missing Reference to Active Allocated Resource, CWE-410: Insufficient Resource Pool, CWE-772: Missing Release of Resource after Effective Lifetime, CWE-834: Excessive Iteration, CWE-405: Asymmetric Resource Consumption (Amplification), and others.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse",
                  "graph"
                ],
                "retriever_count": 3,
                "normalized_scores": {
                  "dense": 0.4323501872269504,
                  "sparse": 65.67394027427275,
                  "graph": 1.0180908829596367
                }
              }
            },
            "similarity": 1.0180908829596367
          },
          {
            "doc_id": "407",
            "text": "An algorithm in a product has an inefficient worst-case computational complexity that may be detrimental to system performance and can be triggered by an attacker, typically using crafted manipulations that ensure that the worst case is being reached.",
            "score": 0.5612566938770673,
            "metadata": {
              "doc_id": "407",
              "name": "Inefficient Algorithmic Complexity",
              "type": "Class",
              "extended_description": null,
              "alternate_terms": [
                "Quadratic Complexity"
              ],
              "original_content": "An algorithm in a product has an inefficient worst-case computational complexity that may be detrimental to system performance and can be triggered by an attacker, typically using crafted manipulations that ensure that the worst case is being reached.",
              "relationships": [
                {
                  "source_id": "407",
                  "target_id": "1333",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "407",
                  "target_id": "405",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "405",
                  "target_id": "407",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "1333",
                  "target_id": "407",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "1333",
                  "target_id": "407",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "source": "graph",
              "sources": [
                "vector",
                "graph"
              ],
              "vector_score": 0.5612566938770673,
              "graph_score": 1.3216,
              "score_components": {
                "relationship_chain": 0.18,
                "explicit_mention": 1.0,
                "abstraction_path": 0.7
              },
              "abstraction_factor": 0.8,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "410",
                        "400",
                        "CANPRECEDE"
                      ],
                      [
                        "400",
                        "405",
                        "PARENTOF"
                      ],
                      [
                        "405",
                        "407",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.18,
                    "type": "relationship_chain",
                    "source": "410"
                  }
                }
              },
              "is_explicit": true,
              "abstraction_level": "class",
              "mapping_notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse",
                  "graph"
                ],
                "retriever_count": 3,
                "normalized_scores": {
                  "dense": 0.49614102838449897,
                  "sparse": 264.8570513392626,
                  "graph": 1.0174626775508269
                }
              }
            },
            "similarity": 1.0174626775508269
          },
          {
            "doc_id": "344",
            "text": "CWE-344: Use of Invariant Value in Dynamically Changing Context",
            "score": 1.0062,
            "metadata": {
              "doc_id": "344",
              "name": "Use of Invariant Value in Dynamically Changing Context",
              "type": "base",
              "original_content": "CWE-344: Use of Invariant Value in Dynamically Changing Context",
              "relationships": [
                {
                  "source_id": "344",
                  "target_id": "798",
                  "label": "PARENTOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "344",
                  "target_id": "587",
                  "label": "PARENTOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "344",
                  "target_id": "323",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "344",
                  "target_id": "330",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "798",
                  "target_id": "344",
                  "label": "CHILDOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "587",
                  "target_id": "344",
                  "label": "CHILDOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "330",
                  "target_id": "344",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "323",
                  "target_id": "344",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.3,
                "abstraction_path": 0.7200000000000001
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "abstraction_path_down"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "330",
                        "344",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.3,
                    "type": "relationship_chain",
                    "source": "330"
                  },
                  "abstraction_path_down": {
                    "path": [
                      [
                        "330",
                        "344",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.7200000000000001,
                    "type": "abstraction_path_down",
                    "source": "330"
                  }
                }
              },
              "abstraction_level": "base",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.0062
                }
              }
            },
            "similarity": 1.0062
          },
          {
            "doc_id": "338",
            "text": "CWE-338: Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)",
            "score": 1.0062,
            "metadata": {
              "doc_id": "338",
              "name": "Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)",
              "type": "base",
              "original_content": "CWE-338: Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)",
              "relationships": [
                {
                  "source_id": "338",
                  "target_id": "330",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "338",
                  "target_id": "330",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "330",
                  "target_id": "338",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.3,
                "abstraction_path": 0.7200000000000001
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "abstraction_path_down"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "330",
                        "338",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.3,
                    "type": "relationship_chain",
                    "source": "330"
                  },
                  "abstraction_path_down": {
                    "path": [
                      [
                        "330",
                        "338",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.7200000000000001,
                    "type": "abstraction_path_down",
                    "source": "330"
                  }
                }
              },
              "abstraction_level": "base",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.0062
                }
              }
            },
            "similarity": 1.0062
          },
          {
            "doc_id": "335",
            "text": "CWE-335: Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)",
            "score": 1.0062,
            "metadata": {
              "doc_id": "335",
              "name": "Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)",
              "type": "base",
              "original_content": "CWE-335: Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)",
              "relationships": [
                {
                  "source_id": "335",
                  "target_id": "339",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "335",
                  "target_id": "337",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "335",
                  "target_id": "336",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "335",
                  "target_id": "330",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "335",
                  "target_id": "330",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "339",
                  "target_id": "335",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "337",
                  "target_id": "335",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "336",
                  "target_id": "335",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "330",
                  "target_id": "335",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.3,
                "abstraction_path": 0.7200000000000001
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "abstraction_path_down"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "330",
                        "335",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.3,
                    "type": "relationship_chain",
                    "source": "330"
                  },
                  "abstraction_path_down": {
                    "path": [
                      [
                        "330",
                        "335",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.7200000000000001,
                    "type": "abstraction_path_down",
                    "source": "330"
                  }
                }
              },
              "abstraction_level": "base",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.0062
                }
              }
            },
            "similarity": 1.0062
          },
          {
            "doc_id": "331",
            "text": "CWE-331: Insufficient Entropy",
            "score": 1.0062,
            "metadata": {
              "doc_id": "331",
              "name": "Insufficient Entropy",
              "type": "base",
              "original_content": "CWE-331: Insufficient Entropy",
              "relationships": [
                {
                  "source_id": "331",
                  "target_id": "333",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "331",
                  "target_id": "332",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "331",
                  "target_id": "330",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "331",
                  "target_id": "330",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "333",
                  "target_id": "331",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "332",
                  "target_id": "331",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "330",
                  "target_id": "331",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.3,
                "abstraction_path": 0.7200000000000001
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "abstraction_path_down"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "330",
                        "331",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.3,
                    "type": "relationship_chain",
                    "source": "330"
                  },
                  "abstraction_path_down": {
                    "path": [
                      [
                        "330",
                        "331",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.7200000000000001,
                    "type": "abstraction_path_down",
                    "source": "330"
                  }
                }
              },
              "abstraction_level": "base",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.0062
                }
              }
            },
            "similarity": 1.0062
          },
          {
            "doc_id": "1241",
            "text": "CWE-1241: Use of Predictable Algorithm in Random Number Generator",
            "score": 1.0062,
            "metadata": {
              "doc_id": "1241",
              "name": "Use of Predictable Algorithm in Random Number Generator",
              "type": "base",
              "original_content": "CWE-1241: Use of Predictable Algorithm in Random Number Generator",
              "relationships": [
                {
                  "source_id": "1241",
                  "target_id": "330",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "330",
                  "target_id": "1241",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.3,
                "abstraction_path": 0.7200000000000001
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "abstraction_path_down"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "330",
                        "1241",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.3,
                    "type": "relationship_chain",
                    "source": "330"
                  },
                  "abstraction_path_down": {
                    "path": [
                      [
                        "330",
                        "1241",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.7200000000000001,
                    "type": "abstraction_path_down",
                    "source": "330"
                  }
                }
              },
              "abstraction_level": "base",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.0062
                }
              }
            },
            "similarity": 1.0062
          },
          {
            "doc_id": "1204",
            "text": "CWE-1204: Generation of Weak Initialization Vector (IV)",
            "score": 1.0062,
            "metadata": {
              "doc_id": "1204",
              "name": "Generation of Weak Initialization Vector (IV)",
              "type": "base",
              "original_content": "CWE-1204: Generation of Weak Initialization Vector (IV)",
              "relationships": [
                {
                  "source_id": "1204",
                  "target_id": "329",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "1204",
                  "target_id": "330",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "330",
                  "target_id": "1204",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "329",
                  "target_id": "1204",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.3,
                "abstraction_path": 0.7200000000000001
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "abstraction_path_down"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "330",
                        "1204",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.3,
                    "type": "relationship_chain",
                    "source": "330"
                  },
                  "abstraction_path_down": {
                    "path": [
                      [
                        "330",
                        "1204",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.7200000000000001,
                    "type": "abstraction_path_down",
                    "source": "330"
                  }
                }
              },
              "abstraction_level": "base",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.0062
                }
              }
            },
            "similarity": 1.0062
          },
          {
            "doc_id": "1333",
            "text": "CWE-1333: Inefficient Regular Expression Complexity",
            "score": 1.0062,
            "metadata": {
              "doc_id": "1333",
              "name": "Inefficient Regular Expression Complexity",
              "type": "base",
              "original_content": "CWE-1333: Inefficient Regular Expression Complexity",
              "relationships": [
                {
                  "source_id": "1333",
                  "target_id": "407",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "1333",
                  "target_id": "407",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "407",
                  "target_id": "1333",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.3,
                "abstraction_path": 0.7200000000000001
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "abstraction_path_down"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "407",
                        "1333",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.3,
                    "type": "relationship_chain",
                    "source": "407"
                  },
                  "abstraction_path_down": {
                    "path": [
                      [
                        "407",
                        "1333",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.7200000000000001,
                    "type": "abstraction_path_down",
                    "source": "407"
                  }
                }
              },
              "abstraction_level": "base",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.0062
                }
              }
            },
            "similarity": 1.0062
          },
          {
            "doc_id": "471",
            "text": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
            "score": 0.9360000000000002,
            "metadata": {
              "doc_id": "471",
              "name": "Modification of Assumed-Immutable Data (MAID)",
              "type": "base",
              "original_content": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
              "relationships": [
                {
                  "source_id": "471",
                  "target_id": "621",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "471",
                  "target_id": "607",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "471",
                  "target_id": "602",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "471",
                  "target_id": "473",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "471",
                  "target_id": "472",
                  "label": "PARENTOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "471",
                  "target_id": "425",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "471",
                  "target_id": "291",
                  "label": "PARENTOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "471",
                  "target_id": "1321",
                  "label": "CANFOLLOW",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "471",
                  "target_id": "1282",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "471",
                  "target_id": "664",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "664",
                  "target_id": "471",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "621",
                  "target_id": "471",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "607",
                  "target_id": "471",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "602",
                  "target_id": "471",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "473",
                  "target_id": "471",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "472",
                  "target_id": "471",
                  "label": "CHILDOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "425",
                  "target_id": "471",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "291",
                  "target_id": "471",
                  "label": "CHILDOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "1321",
                  "target_id": "471",
                  "label": "CANPRECEDE",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "1282",
                  "target_id": "471",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.8
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "836",
                        "602",
                        "PEEROF"
                      ],
                      [
                        "602",
                        "471",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 0.8,
                    "type": "relationship_chain",
                    "source": "836"
                  }
                }
              },
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 0.9360000000000002
                }
              }
            },
            "similarity": 0.9360000000000002
          },
          {
            "doc_id": "613",
            "text": "CWE-613: Insufficient Session Expiration",
            "score": 0.9360000000000002,
            "metadata": {
              "doc_id": "613",
              "name": "Insufficient Session Expiration",
              "type": "base",
              "original_content": "CWE-613: Insufficient Session Expiration",
              "relationships": [
                {
                  "source_id": "613",
                  "target_id": "352",
                  "label": "REQUIREDBY",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "613",
                  "target_id": "287",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "613",
                  "target_id": "672",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "613",
                  "target_id": "672",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "672",
                  "target_id": "613",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "352",
                  "target_id": "613",
                  "label": "REQUIRES",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "287",
                  "target_id": "613",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.8
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "294",
                        "287",
                        "CHILDOF"
                      ],
                      [
                        "287",
                        "613",
                        "CANFOLLOW"
                      ]
                    ],
                    "score": 0.8,
                    "type": "relationship_chain",
                    "source": "294"
                  }
                }
              },
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 0.9360000000000002
                }
              }
            },
            "similarity": 0.9360000000000002
          }
        ],
        "dense": [
          {
            "metadata": {
              "doc_id": "328",
              "name": "Use of Weak Hash",
              "type": "Base",
              "original_content": "The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).",
              "keyphrase_source": "rootcause:weak hash function",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse",
                  "graph"
                ],
                "retriever_count": 3,
                "normalized_scores": {
                  "dense": 0.5370893326418129,
                  "sparse": 266.59713348086973,
                  "graph": 1.7149474429757086
                }
              }
            },
            "similarity": 0.5370893326418129
          },
          {
            "metadata": {
              "doc_id": "916",
              "name": "Use of Password Hash With Insufficient Computational Effort",
              "type": "Base",
              "original_content": "The product generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.",
              "keyphrase_source": "rootcause:weak hash function",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse",
                  "graph"
                ],
                "retriever_count": 3,
                "normalized_scores": {
                  "dense": 0.5273355740620833,
                  "sparse": 243.9991156743613,
                  "graph": 1.7092408239394574
                }
              }
            },
            "similarity": 0.5273355740620833
          },
          {
            "metadata": {
              "doc_id": "410",
              "name": "Insufficient Resource Pool",
              "type": "Base",
              "original_content": "The product's resource pool is not large enough to handle peak demand, which allows an attacker to prevent others from accessing the resource by using a (relatively) large number of requests for resources.",
              "keyphrase_source": "rootcause:weak hash function",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "graph"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "dense": 0.5066851595200853,
                  "graph": 1.5000847783974538
                }
              }
            },
            "similarity": 0.5066851595200853
          },
          {
            "metadata": {
              "doc_id": "836",
              "name": "Use of Password Hash Instead of Password for Authentication",
              "type": "Base",
              "original_content": "The product records password hashes in a data store, receives a hash of a password from a client, and compares the supplied hash to the hash obtained from the data store.",
              "keyphrase_source": "rootcause:weak hash function",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse",
                  "graph"
                ],
                "retriever_count": 3,
                "normalized_scores": {
                  "dense": 0.5048399447221708,
                  "sparse": 214.51105573266688,
                  "graph": 1.4888497357639565
                }
              }
            },
            "similarity": 0.5048399447221708
          },
          {
            "metadata": {
              "doc_id": "407",
              "name": "Inefficient Algorithmic Complexity",
              "type": "Class",
              "original_content": "An algorithm in a product has an inefficient worst-case computational complexity that may be detrimental to system performance and can be triggered by an attacker, typically using crafted manipulations that ensure that the worst case is being reached.",
              "keyphrase_source": "rootcause:weak hash function",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse",
                  "graph"
                ],
                "retriever_count": 3,
                "normalized_scores": {
                  "dense": 0.49614102838449897,
                  "sparse": 264.8570513392626,
                  "graph": 1.0174626775508269
                }
              }
            },
            "similarity": 0.49614102838449897
          },
          {
            "metadata": {
              "doc_id": "759",
              "name": "Use of a One-Way Hash without a Salt",
              "type": "Variant",
              "original_content": "The product uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the product does not also use a salt as part of the input.",
              "keyphrase_source": "rootcause:weak hash function",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.49123664951564266
                }
              }
            },
            "similarity": 0.49123664951564266
          },
          {
            "metadata": {
              "doc_id": "760",
              "name": "Use of a One-Way Hash with a Predictable Salt",
              "type": "Variant",
              "original_content": "The product uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the product uses a predictable salt as part of the input.",
              "keyphrase_source": "rootcause:weak hash function",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.4829491707940137
                }
              }
            },
            "similarity": 0.4829491707940137
          },
          {
            "metadata": {
              "doc_id": "834",
              "name": "Excessive Iteration",
              "type": "Class",
              "original_content": "The product performs an iteration or loop without sufficiently limiting the number of times that the loop is executed.",
              "keyphrase_source": "rootcause:weak hash function",
              "source": "dense",
              "mapping_notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.4753355538372336
                }
              }
            },
            "similarity": 0.4753355538372336
          },
          {
            "metadata": {
              "doc_id": "1325",
              "name": "Improperly Controlled Sequential Memory Allocation",
              "type": "Base",
              "original_content": "The product manages a group of objects or resources and performs a separate memory allocation for each object, but it does not properly limit the total amount of memory that is consumed by all of the combined objects.",
              "keyphrase_source": "rootcause:weak hash function",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.46873079660724803
                }
              }
            },
            "similarity": 0.46873079660724803
          },
          {
            "metadata": {
              "doc_id": "1176",
              "name": "Inefficient CPU Computation",
              "type": "Class",
              "original_content": "The product performs CPU computations using\n         algorithms that are not as efficient as they could be for the\n         needs of the developer, i.e., the computations can be\n         optimized further.",
              "keyphrase_source": "rootcause:weak hash function",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.46823713523273425
                }
              }
            },
            "similarity": 0.46823713523273425
          },
          {
            "metadata": {
              "doc_id": "401",
              "name": "Missing Release of Memory after Effective Lifetime",
              "type": "Variant",
              "original_content": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.4468804831750041
                }
              }
            },
            "similarity": 0.4468804831750041
          },
          {
            "metadata": {
              "doc_id": "835",
              "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
              "type": "Base",
              "original_content": "The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.446786022700599
                }
              }
            },
            "similarity": 0.446786022700599
          },
          {
            "metadata": {
              "doc_id": "294",
              "name": "Authentication Bypass by Capture-replay",
              "type": "Base",
              "original_content": "A capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse",
                  "graph"
                ],
                "retriever_count": 3,
                "normalized_scores": {
                  "dense": 0.44265407701646087,
                  "sparse": 222.06386444460597,
                  "graph": 1.6503727022400136
                }
              }
            },
            "similarity": 0.44265407701646087
          },
          {
            "metadata": {
              "doc_id": "1089",
              "name": "Large Data Table with Excessive Number of Indices",
              "type": "Base",
              "original_content": "The product uses a large data table that contains an excessively large number of\n\t\t\t\t\tindices.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.43970908703988626
                }
              }
            },
            "similarity": 0.43970908703988626
          },
          {
            "metadata": {
              "doc_id": "1331",
              "name": "Improper Isolation of Shared Resources in Network On Chip (NoC)",
              "type": "Base",
              "original_content": "The Network On Chip (NoC) does not isolate or incorrectly isolates its on-chip-fabric and internal resources such that they are shared between trusted and untrusted agents, creating timing channels.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.43740535855978
                }
              }
            },
            "similarity": 0.43740535855978
          },
          {
            "metadata": {
              "doc_id": "208",
              "name": "Observable Timing Discrepancy",
              "type": "Base",
              "original_content": "Two separate operations in a product require different amounts of time to complete, in a way that is observable to an actor and reveals security-relevant information about the state of the product, such as whether a particular operation was successful or not.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.43567719820007156
                }
              }
            },
            "similarity": 0.43567719820007156
          },
          {
            "metadata": {
              "doc_id": "770",
              "name": "Allocation of Resources Without Limits or Throttling",
              "type": "Base",
              "original_content": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "dense": 0.43562083032329774,
                  "sparse": 67.00924514121934
                }
              }
            },
            "similarity": 0.43562083032329774
          },
          {
            "metadata": {
              "doc_id": "400",
              "name": "Uncontrolled Resource Consumption",
              "type": "Class",
              "original_content": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Discouraged",
                "rationale": "CWE-400 is intended for incorrect behaviors in which the product is expected to track and restrict how many resources it consumes, but CWE-400 is often misused because it is conflated with the \"technical impact\" of vulnerabilities in which resource consumption occurs. It is sometimes used for low-information vulnerability reports. It is a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Closely analyze the specific mistake that is causing resource consumption, and perform a CWE mapping for that mistake. Consider children/descendants such as CWE-770: Allocation of Resources Without Limits or Throttling, CWE-771: Missing Reference to Active Allocated Resource, CWE-410: Insufficient Resource Pool, CWE-772: Missing Release of Resource after Effective Lifetime, CWE-834: Excessive Iteration, CWE-405: Asymmetric Resource Consumption (Amplification), and others.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse",
                  "graph"
                ],
                "retriever_count": 3,
                "normalized_scores": {
                  "dense": 0.4323501872269504,
                  "sparse": 65.67394027427275,
                  "graph": 1.0180908829596367
                }
              }
            },
            "similarity": 0.4323501872269504
          },
          {
            "metadata": {
              "doc_id": "696",
              "name": "Incorrect Behavior Order",
              "type": "Class",
              "original_content": "The product performs multiple related behaviors, but the behaviors are performed in the wrong order in ways which may produce resultant weaknesses.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.4314826772872991
                }
              }
            },
            "similarity": 0.4314826772872991
          },
          {
            "metadata": {
              "doc_id": "799",
              "name": "Improper Control of Interaction Frequency",
              "type": "Class",
              "original_content": "The product does not properly limit the number or frequency of interactions that it has with an actor, such as the number of incoming requests.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.4311306849872645
                }
              }
            },
            "similarity": 0.4311306849872645
          }
        ],
        "sparse": [
          {
            "cwe_id": "328",
            "name": "Use of Weak Hash",
            "description": "The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).",
            "score": 266.59713348086973,
            "matched_text": "CWE-328: Use of Weak Hash\n\nType: Base\n\nStatus: Draft\n\nDescription:\n\nThe product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).\n\nExtended Details:\n\n\n\nA hash function is defined as an algorithm that maps arbitrarily sized data into a fixed-sized digest (output) such that the following properties hold:\n\n\n  1. The algorithm is not invertible (also called \"one-way\" or \"not reversible\")\n\n  1. The algorithm is deterministic; the same input produces the same digest every time\n\n Building on this definition, a cryptographic hash function must also ensure that a malicious actor cannot leverage the hash function to have a reasonable chance of success at determining any of the following:\n\n  1. the original input (preimage attack), given only the digest\n\n  1. another input that can produce the same digest (2nd preimage attack), given the original input\n\n  1. a set of two or more inputs that evaluate to the same digest (birthday attack), given the actor can arbitrarily choose the inputs to be hashed and can do so a reasonable amount of times\n\nWhat is regarded as \"reasonable\" varies by context and threat model, but in general, \"reasonable\" could cover any attack that is more efficient than brute force (i.e., on average, attempting half of all possible combinations). Note that some attacks might be more efficient than brute force but are still not regarded as achievable in the real world.\n\nAny algorithm that does not meet the above conditions will generally be considered weak for general use in hashing.\n\n\nIn addition to algorithmic weaknesses, a hash function can be made weak by using the hash in a security context that breaks its security guarantees. For example, using a hash function without a salt for storing passwords (that are sufficiently short) could enable an adversary to create a \"rainbow table\" [REF-637] to recover the password under certain conditions; this attack works against such hash functions as MD5, SHA-1, and SHA-2.\n\n\nReal-World Examples:\n\n- CVE-2022-30320: Programmable Logic Controller (PLC) uses a protocol with a cryptographically insecure hashing algorithm for passwords.\n\n- CVE-2005-4900: SHA-1 algorithm is not collision-resistant.\n\n- CVE-2020-25685: DNS product uses a weak hash (CRC32 or SHA-1) of the query name, allowing attacker to forge responses by computing domain names with the same hash.\n\n- CVE-2012-6707: blogging product uses MD5-based algorithm for passwords.\n\n- CVE-2019-14855: forging of certificate signatures using SHA-1 collisions.\n\n- CVE-2017-15999: mobile app for backup sends SHA-1 hash of password in cleartext.\n\n- CVE-2006-4068: Hard-coded hashed values for username and password contained in client-side script, allowing brute-force offline attacks.\n\nTop 25 CWE Examples:\n\n- CVE-2021-21474: SAP HANA Database, versions - 1.0, 2.0, accepts SAML tokens with MD5 digest, an attacker who manages to obtain an MD5-digest signed SAML Assertion issued for an SAP HANA instance might be able to tamper with it and alter it in a way that the digest continues to be the same and without invalidating the digital signature, this allows them to impersonate as user in HANA database and be able to read the contents in the database.\n\n- CVE-2021-23855: The user and password data base is exposed by an unprotected web server resource. Passwords are hashed with a weak hashing algorithm and therefore allow an attacker to determine the password by using rainbow tables.\n\n- CVE-2021-28093: OX Documents before 7.10.5-rev5 has Incorrect Access Control of converted images because hash collisions can occur, due to use of Adler32.\n\n- CVE-2021-28094: OX Documents before 7.10.5-rev7 has Incorrect Access Control for converted documents because hash collisions can occur, due to use of CRC32.\n\n- CVE-2021-28095: OX Documents before 7.10.5-rev5 has Incorrect Access Control for documents that contain XML structures because hash collisions can occur, due to use of CRC32.\n\n- CVE-2022-3433: The aeson library is not safe to use to consume untrusted JSON input. A remote user could abuse this flaw to produce a hash collision in the underlying unordered-containers library by sending specially crafted JSON data, resulting in a denial of service.\n\n- CVE-2022-21653: Jawn is an open source JSON parser. Extenders of the `org.typelevel.jawn.SimpleFacade` and `org.typelevel.jawn.MutableFacade` who don't override `objectContext()` are vulnerable to a hash collision attack which may result in a denial of service. Most applications do not implement these traits directly, but inherit from a library. `jawn-parser-1.3.1` fixes this issue and users are advised to upgrade. For users unable to upgrade override `objectContext()` to use a collision-safe collection.\n\n- CVE-2022-22321: IBM MQ Appliance 9.2 CD and 9.2 LTS local messaging users stored with a password hash that provides insufficient protection. IBM X-Force ID: 218368.\n\n- CVE-2022-25156: Use of Weak Hash vulnerability in Mitsubishi Electric MELSEC iQ-F series FX5U(C) CPU all versions, Mitsubishi Electric MELSEC iQ-F series FX5UJ CPU all versions, Mitsubishi Electric MELSEC iQ-R series R00/01/02CPU all versions, Mitsubishi Electric MELSEC iQ-R series R04/08/16/32/120(EN)CPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120SFCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PSFCPU all versions, Mitsubishi Electric MELSEC iQ-R series RJ71C24(-R2/R4) all versions, Mitsubishi Electric MELSEC iQ-R series RJ71EN71 all versions, Mitsubishi Electric MELSEC iQ-R series RJ72GF15-T2 all versions, Mitsubishi Electric MELSEC Q series Q03UDECPU all versions, Mitsubishi Electric MELSEC Q series Q04/06/10/13/20/26/50/100UDEHCPU all versions, Mitsubishi Electric MELSEC Q series Q03/04/06/13/26UDVCPU all versions, Mitsubishi Electric MELSEC Q series Q04/06/13/26UDPVCPU all versions, Mitsubishi Electric MELSEC Q series QJ71C24N(-R2/R4) all versions, Mitsubishi Electric MELSEC Q series QJ71E71-100 all versions, Mitsubishi Electric MELSEC Q series QJ72BR15 all versions, Mitsubishi Electric MELSEC Q series QJ72LP25(-25/G/GE) all versions, Mitsubishi Electric MELSEC L series L02/06/26CPU(-P) all versions, Mitsubishi Electric MELSEC L series L26CPU-(P)BT all versions, Mitsubishi Electric MELSEC L series LJ71C24(-R2) all versions, Mitsubishi Electric MELSEC L series LJ71E71-100 all versions and Mitsubishi Electric MELSEC L series LJ72GF15-T2 all versions allows a remote unauthenticated attacker to login to the product by using a password reversed from a previously eavesdropped password hash.\n\n- CVE-2022-30285: In Quest KACE Systems Management Appliance (SMA) through 12.0, a hash collision is possible during authentication. This may allow authentication with invalid credentials.\n\n- CVE-2022-31459: Owl Labs Meeting Owl 5.2.0.15 allows attackers to retrieve the passcode hash via a certain c 10 value over Bluetooth.\n\n- CVE-2022-36555: Hytec Inter HWL-2511-SS v1.05 and below implements a SHA512crypt hash for the root account which can be easily cracked via a brute-force attack.\n\n- CVE-2022-4036: The Appointment Hour Booking plugin for WordPress is vulnerable to CAPTCHA bypass in versions up to, and including, 1.3.72. This is due to the use of insufficiently strong hashing algorithm on the CAPTCHA secret that is also displayed to the user via a cookie.\n\n- CVE-2022-43922: IBM App Connect Enterprise Certified Container 4.1, 4.2, 5.0, 5.1, 5.2, 6.0, 6.1, and 6.2 could disclose sensitive information to an attacker due to a weak hash of an API Key in the configuration. IBM X-Force ID: 241583.\n\n- CVE-2022-45379: Jenkins Script Security Plugin 1189.vb_a_b_7c8fd5fde and earlier stores whole-script approvals as the SHA-1 hash of the script, making it vulnerable to collision attacks.\n\n- CVE-2021-25761: In JetBrains Ktor before 1.5.0, a birthday attack on SessionStorage key was possible.\n\n- CVE-2021-37606: Meow hash 0.5/calico does not sufficiently thwart key recovery by an attacker who can query whether there's a collision in the bottom bits of the hashes of two messages, as demonstrated by an attack against a long-running web service that allows the attacker to infer collisions by measuring timing differences.\n\n- CVE-2021-39182: EnroCrypt is a Python module for encryption and hashing. Prior to version 1.1.4, EnroCrypt used the MD5 hashing algorithm in the hashing file. Beginners who are unfamiliar with hashes can face problems as MD5 is considered an insecure hashing algorithm. The vulnerability is patched in v1.1.4 of the product. As a workaround, users can remove the `MD5` hashing function from the file `hashing.py`.\n\n- CVE-2021-42216: A Broken or Risky Cryptographic Algorithm exists in AnonAddy 0.8.5 via VerificationController.php.\n\n- CVE-2021-44150: The client in tusdotnet through 2.5.0 relies on SHA-1 to prevent spoofing of file content.\n\n- CVE-2022-21800: MMP: All versions prior to v1.0.3, PTP C-series: Device versions prior to v2.8.6.1, and PTMP C-series and A5x: Device versions prior to v2.5.4.1 uses the MD5 algorithm to hash the passwords before storing them but does not salt the hash. As a result, attackers may be able to crack the hashed passwords.\n\n- CVE-2022-29161: XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. The XWiki Crypto API will generate X509 certificates signed by default using SHA1 with RSA, which is not considered safe anymore for use in certificate signatures, due to the risk of collisions with SHA1. The problem has been patched in XWiki version 13.10.6, 14.3.1 and 14.4-rc-1. Since then, the Crypto API will generate X509 certificates signed by default using SHA256 with RSA. Administrators are advised to upgrade their XWiki installation to one of the patched versions. If the upgrade is not possible, it is possible to patch the module xwiki-platform-crypto in a local installation by applying the change exposed in 26728f3 and re-compiling the module.\n\n- CVE-2022-29566: The Bulletproofs 2017/1066 paper mishandles Fiat-Shamir generation because the hash computation fails to include all of the public values from the Zero Knowledge proof statement as well as all of the public values computed in the proof, aka the Frozen Heart issue.\n\n- CVE-2022-29835: WD Discovery software executable files were signed with an unsafe SHA-1 hashing algorithm. An attacker could use this weakness to create forged certificate signatures due to the use of a hashing algorithm that is not collision-free. This could thereby impact the confidentiality of user content. This issue affects: Western Digital WD Discovery WD Discovery Desktop App versions prior to 4.4.396 on Mac; WD Discovery Desktop App versions prior to 4.4.396 on Windows.\n\n- CVE-2022-45141: Since the Windows Kerberos RC4-HMAC Elevation of Privilege Vulnerability was disclosed by Microsoft on Nov 8 2022 and per RFC8429 it is assumed that rc4-hmac is weak, Vulnerable Samba Active Directory DCs will issue rc4-hmac encrypted tickets despite the target server supporting better encryption (eg aes256-cts-hmac-sha1-96).\n\n- CVE-2022-47931: IO FinNet tss-lib before 2.0.0 allows a collision of hash values.\n\nRelated Weaknesses:\n\n- CWE-326 (ChildOf)\n\n- CWE-327 (ChildOf)",
            "type": "Base",
            "source": "sparse",
            "search_source": "rootcause:weak hash function",
            "sources": [
              "base",
              "rootcause"
            ],
            "boost_factor": 3.0,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              }
            }
          },
          {
            "cwe_id": "407",
            "name": "Inefficient Algorithmic Complexity",
            "description": "An algorithm in a product has an inefficient worst-case computational complexity that may be detrimental to system performance and can be triggered by an attacker, typically using crafted manipulations that ensure that the worst case is being reached.",
            "score": 264.8570513392626,
            "matched_text": "CWE-407: Inefficient Algorithmic Complexity\n\nType: Class\n\nStatus: Incomplete\n\nAlternative Terms:\n\nQuadratic Complexity - Used when the algorithmic complexity is related to the square of the number of inputs (N^2)\n\nQuadratic Complexity - Used when the algorithmic complexity is related to the square of the number of inputs (N^2)\n\nQuadratic Complexity - Used when the algorithmic complexity is related to the square of the number of inputs (N^2)\n\nDescription:\n\nAn algorithm in a product has an inefficient worst-case computational complexity that may be detrimental to system performance and can be triggered by an attacker, typically using crafted manipulations that ensure that the worst case is being reached.\n\nReal-World Examples:\n\n- CVE-2021-32617: C++ library for image metadata has \"quadratic complexity\" issue with unnecessarily repetitive parsing each time an invalid character is encountered\n\n- CVE-2020-10735: Python has \"quadratic complexity\" issue when converting string to int with many digits in unexpected bases\n\n- CVE-2020-5243: server allows ReDOS with crafted User-Agent strings, due to overlapping capture groups that cause excessive backtracking.\n\n- CVE-2014-1474: Perl-based email address parser has \"quadratic complexity\" issue via a string that does not contain a valid address\n\n- CVE-2003-0244: CPU consumption via inputs that cause many hash table collisions.\n\n- CVE-2003-0364: CPU consumption via inputs that cause many hash table collisions.\n\n- CVE-2002-1203: Product performs unnecessary processing before dropping an invalid packet.\n\n- CVE-2001-1501: CPU and memory consumption using many wildcards.\n\n- CVE-2004-2527: Product allows attackers to cause multiple copies of a program to be loaded more quickly than the program can detect that other copies are running, then exit. This type of error should probably have its own category, where teardown takes more time than initialization.\n\n- CVE-2006-6931: Network monitoring system allows remote attackers to cause a denial of service (CPU consumption and detection outage) via crafted network traffic, aka a \"backtracking attack.\"\n\n- CVE-2006-3380: Wiki allows remote attackers to cause a denial of service (CPU consumption) by performing a diff between large, crafted pages that trigger the worst case algorithmic complexity.\n\n- CVE-2006-3379: Wiki allows remote attackers to cause a denial of service (CPU consumption) by performing a diff between large, crafted pages that trigger the worst case algorithmic complexity.\n\n- CVE-2005-2506: OS allows attackers to cause a denial of service (CPU consumption) via crafted Gregorian dates.\n\n- CVE-2005-1792: Memory leak by performing actions faster than the software can clear them.\n\nTop 25 CWE Examples:\n\n- CVE-2021-34549: An issue was discovered in Tor before 0.4.6.5, aka TROVE-2021-005. Hashing is mishandled for certain retrieval of circuit data. Consequently. an attacker can trigger the use of an attacker-chosen circuit ID to cause algorithm inefficiency.\n\n- CVE-2021-32617: Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An inefficient algorithm (quadratic complexity) was found in Exiv2 versions v0.27.3 and earlier. The inefficient algorithm is triggered when Exiv2 is used to write metadata into a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. The bug is fixed in version v0.27.4. Note that this bug is only triggered when _writing_ the metadata, which is a less frequently used Exiv2 operation than _reading_ the metadata. For example, to trigger the bug in the Exiv2 command-line application, you need to add an extra command-line argument such as `rm`.\n\n- CVE-2021-43859: XStream is an open source java library to serialize objects to XML and back again. Versions prior to 1.4.19 may allow a remote attacker to allocate 100% CPU time on the target system depending on CPU type or parallel execution of such a payload resulting in a denial of service only by manipulating the processed input stream. XStream 1.4.19 monitors and accumulates the time it takes to add elements to collections and throws an exception if a set threshold is exceeded. Users are advised to upgrade as soon as possible. Users unable to upgrade may set the NO_REFERENCE mode to prevent recursion. See GHSA-rmr5-cpv2-vgjf for further details on a workaround if an upgrade is not possible.\n\n- CVE-2021-41119: Wire-server is the system server for the wire back-end services. Releases prior to v2022-03-01 are subject to a denial of service attack via a crafted object causing a hash collision. This collision causes the server to spend at least quadratic time parsing it which can lead to a denial of service for a heavily used server. The issue has been fixed in wire-server 2022-03-01 and is already deployed on all Wire managed services. On premise instances of wire-server need to be updated to 2022-03-01, so that their backends are no longer affected. There are no known workarounds for this issue.\n\n- CVE-2021-33582: Cyrus IMAP before 3.4.2 allows remote attackers to cause a denial of service (multiple-minute daemon hang) via input that is mishandled during hash-table interaction. Because there are many insertions into a single bucket, strcmp becomes slow. This is fixed in 3.4.2, 3.2.8, and 3.0.16.\n\n- CVE-2021-41168: Snudown is a reddit-specific fork of the Sundown Markdown parser used by GitHub, with Python integration added. In affected versions snudown was found to be vulnerable to denial of service attacks to its reference table implementation. References written in markdown ` [reference_name]: https://www.example.com` are inserted into a hash table which was found to have a weak hash function, meaning that an attacker can reliably generate a large number of collisions for it. This makes the hash table vulnerable to a hash-collision DoS attack, a type of algorithmic complexity attack. Further the hash table allowed for duplicate entries resulting in long retrieval times. Proofs of concept and further discussion of the hash collision issue are discussed on the snudown GHSA(https://github.com/reddit/snudown/security/advisories/GHSA-6gvv-9q92-w5f6). Users are advised to update to version 1.7.0.\n\n- CVE-2022-39209: cmark-gfm is GitHub's fork of cmark, a CommonMark parsing and rendering library and program in C. In versions prior to 0.29.0.gfm.6 a polynomial time complexity issue in cmark-gfm's autolink extension may lead to unbounded resource exhaustion and subsequent denial of service. Users may verify the patch by running `python3 -c 'print(\"![l\"* 100000 + \"\\\\n\")' | ./cmark-gfm -e autolink`, which will resource exhaust on unpatched cmark-gfm but render correctly on patched cmark-gfm. This vulnerability has been patched in 0.29.0.gfm.6. Users are advised to upgrade. Users unable to upgrade should disable the use of the autolink extension.\n\n- CVE-2022-40188: Knot Resolver before 5.5.3 allows remote attackers to cause a denial of service (CPU consumption) because of algorithmic complexity. During an attack, an authoritative server must return large NS sets or address sets.\n\n- CVE-2022-45061: An issue was discovered in Python before 3.11.1. An unnecessary quadratic algorithm exists in one path when processing some inputs to the IDNA (RFC 3490) decoder, such that a crafted, unreasonably long name being presented to the decoder could lead to a CPU denial of service. Hostnames are often supplied by remote servers that could be controlled by a malicious actor; in such a scenario, they could trigger excessive CPU consumption on the client attempting to make use of an attacker-supplied supposed hostname. For example, the attack payload could be placed in the Location header of an HTTP response with status code 302. A fix is planned in 3.11.1, 3.10.9, 3.9.16, 3.8.16, and 3.7.16.\n\nRelated Weaknesses:\n\n- CWE-405 (ChildOf)",
            "type": "Class",
            "source": "sparse",
            "search_source": "rootcause:weak hash function",
            "sources": [
              "base",
              "rootcause"
            ],
            "boost_factor": 3.0,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              }
            }
          },
          {
            "cwe_id": "330",
            "name": "Use of Insufficiently Random Values",
            "description": "The product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.",
            "score": 255.5089161401263,
            "matched_text": "CWE-330: Use of Insufficiently Random Values\n\nType: Class\n\nStatus: Stable\n\nDescription:\n\nThe product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.\n\nExtended Details:\n\nWhen product generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information.\n\nReal-World Examples:\n\n- CVE-2021-3692: PHP framework uses mt_rand() function (Marsenne Twister) when generating tokens\n\n- CVE-2020-7010: Cloud application on Kubernetes generates passwords using a weak random number generator based on deployment time.\n\n- CVE-2009-3278: Crypto product uses rand() library function to generate a recovery key, making it easier to conduct brute force attacks.\n\n- CVE-2009-3238: Random number generator can repeatedly generate the same value.\n\n- CVE-2009-2367: Web application generates predictable session IDs, allowing session hijacking.\n\n- CVE-2009-2158: Password recovery utility generates a relatively small number of random passwords, simplifying brute force attacks.\n\n- CVE-2009-0255: Cryptographic key created with a seed based on the system time.\n\n- CVE-2008-5162: Kernel function does not have a good entropy source just after boot.\n\n- CVE-2008-4905: Blogging software uses a hard-coded salt when calculating a password hash.\n\n- CVE-2008-4929: Bulletin board application uses insufficiently random names for uploaded files, allowing other users to access private files.\n\n- CVE-2008-3612: Handheld device uses predictable TCP sequence numbers, allowing spoofing or hijacking of TCP connections.\n\n- CVE-2008-2433: Web management console generates session IDs based on the login time, making it easier to conduct session hijacking.\n\n- CVE-2008-0166: SSL library uses a weak random number generator that only generates 65,536 unique keys.\n\n- CVE-2008-2108: Chain: insufficient precision causes extra zero bits to be assigned, reducing entropy for an API function that generates random numbers.\n\n- CVE-2008-2108: Chain: insufficient precision (CWE-1339) in random-number generator causes some zero bits to be reliably generated, reducing the amount of entropy (CWE-331)\n\n- CVE-2008-2020: CAPTCHA implementation does not produce enough different images, allowing bypass using a database of all possible checksums.\n\n- CVE-2008-0087: DNS client uses predictable DNS transaction IDs, allowing DNS spoofing.\n\n- CVE-2008-0141: Application generates passwords that are based on the time of day.\n\nTop 25 CWE Examples:\n\n- CVE-2021-38377: OX App Suite through 7.10.5 allows XSS via JavaScript code in an anchor HTML comment within truncated e-mail, because there is a predictable UUID with HTML transformation results.\n\n- CVE-2021-39249: Invision Community (aka IPS Community Suite or IP-Board) before 4.6.5.1 allows reflected XSS because the filenames of uploaded files become predictable through a brute-force attack against the PHP mt_rand function.\n\n- CVE-2021-24087: Azure IoT CLI extension Elevation of Privilege Vulnerability\n\n- CVE-2021-22309: There is insecure algorithm vulnerability in Huawei products. A module uses less random input in a secure mechanism. Attackers can exploit this vulnerability by brute forcing to obtain sensitive message. This can lead to information leak. Affected product versions include:USG9500 versions V500R001C30SPC200, V500R001C60SPC500,V500R005C00SPC200;USG9520 versions V500R005C00;USG9560 versions V500R005C00;USG9580 versions V500R005C00.\n\n- CVE-2021-3448: A flaw was found in dnsmasq in versions before 2.85. When configured to use a specific server for a given network interface, dnsmasq uses a fixed port while forwarding queries. An attacker on the network, able to find the outgoing port used by dnsmasq, only needs to guess the random transmission ID to forge a reply and get it accepted by dnsmasq. This flaw makes a DNS Cache Poisoning attack much easier. The highest threat from this vulnerability is to data integrity.\n\n- CVE-2021-23020: The NAAS 3.x before 3.10.0 API keys were generated using an insecure pseudo-random string and hashing algorithm which could lead to predictable keys.\n\n- CVE-2021-41829: Zoho ManageEngine Remote Access Plus before 10.1.2121.1 relies on the application's build number to calculate a certain encryption key.\n\n- CVE-2021-31520: A weak session token authentication bypass vulnerability in Trend Micro IM Security 1.6 and 1.6.5 could allow an remote attacker to guess currently logged-in administrators' session session token in order to gain access to the product's web management interface.\n\n- CVE-2021-0466: In startIpClient of ClientModeImpl.java, there is a possible identifier which could be used to track a device. This could lead to remote information disclosure to a proximal attacker, with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10Android ID: A-154114734\n\n- CVE-2021-24998: The Simple JWT Login WordPress plugin before 3.3.0 can be used to create new WordPress user accounts with a randomly generated password. The password is generated using the str_shuffle PHP function that \"does not generate cryptographically secure values, and should not be used for cryptographic purposes\" according to PHP's documentation.\n\n- CVE-2021-28099: In Netflix OSS Hollow, since the Files.exists(parent) is run before creating the directories, an attacker can pre-create these directories with wide permissions. Additionally, since an insecure source of randomness is used, the file names to be created can be deterministically calculated.\n\n- CVE-2022-22922: TP-Link TL-WA850RE Wi-Fi Range Extender before v6_200923 was discovered to use highly predictable and easily detectable session keys, allowing attackers to gain administrative privileges.\n\n- CVE-2022-23138: ZTE's MF297D product has cryptographic issues vulnerability. Due to the use of weak random values, the security of the device is reduced, and it may face the risk of attack.\n\n- CVE-2022-24406: OX App Suite through 7.10.6 allows SSRF because multipart/form-data boundaries are predictable, and this can lead to injection into internal Documentconverter API calls.\n\n- CVE-2022-30295: uClibc-ng through 1.0.40 and uClibc through 0.9.33.2 use predictable DNS transaction IDs that may lead to DNS cache poisoning. This is related to a reset of a value to 0x2.\n\n- CVE-2022-31157: LTI 1.3 Tool Library is a library used for building IMS-certified LTI 1.3 tool providers in PHP. Prior to version 5.0, the function used to generate random nonces was not sufficiently cryptographically complex. Users should upgrade to version 5.0 to receive a patch. There are currently no known workarounds.\n\n- CVE-2022-32296: The Linux kernel before 5.17.9 allows TCP servers to identify clients by observing what source ports are used. This occurs because of use of Algorithm 4 (\"Double-Hash Port Selection Algorithm\") of RFC 6056.\n\n- CVE-2022-40299: In Singular before 4.3.1, a predictable /tmp pathname is used (e.g., by sdb.cc), which allows local users to gain the privileges of other users via a procedure in a file under /tmp. NOTE: this CVE Record is about sdb.cc and similar files in the Singular interface that have predictable /tmp pathnames; this CVE Record is not about the lack of a safe temporary-file creation capability in the Singular language.\n\n- CVE-2021-26726: A remote code execution vulnerability affecting a Valmet DNA service listening on TCP port 1517, allows an attacker to execute commands with SYSTEM privileges This issue affects: Valmet DNA versions from Collection 2012 until Collection 2021.\n\n- CVE-2021-45487: In NetBSD through 9.2, the IPv4 ID generation algorithm does not use appropriate cryptographic measures.\n\n- CVE-2021-45488: In NetBSD through 9.2, there is an information leak in the TCP ISN (ISS) generation algorithm.\n\nRelated Weaknesses:\n\n- CWE-693 (ChildOf)\n\n- CWE-804 (CanPrecede)",
            "type": "Class",
            "source": "sparse",
            "search_source": "rootcause:weak hash function",
            "sources": [
              "base",
              "rootcause"
            ],
            "boost_factor": 3.0,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              }
            }
          },
          {
            "cwe_id": "916",
            "name": "Use of Password Hash With Insufficient Computational Effort",
            "description": "The product generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.",
            "score": 243.9991156743613,
            "matched_text": "CWE-916: Use of Password Hash With Insufficient Computational Effort\n\nType: Base\n\nStatus: Incomplete\n\nDescription:\n\nThe product generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.\n\nExtended Details:\n\n\n\nMany password storage mechanisms compute a hash and store the hash, instead of storing the original password in plaintext. In this design, authentication involves accepting an incoming password, computing its hash, and comparing it to the stored hash.\n\n\nMany hash algorithms are designed to execute quickly with minimal overhead, even cryptographic hashes. However, this efficiency is a problem for password storage, because it can reduce an attacker's workload for brute-force password cracking. If an attacker can obtain the hashes through some other method (such as SQL injection on a database that stores hashes), then the attacker can store the hashes offline and use various techniques to crack the passwords by computing hashes efficiently. Without a built-in workload, modern attacks can compute large numbers of hashes, or even exhaust the entire space of all possible passwords, within a very short amount of time, using massively-parallel computing (such as cloud computing) and GPU, ASIC, or FPGA hardware. In such a scenario, an efficient hash algorithm helps the attacker.\n\n\nThere are several properties of a hash scheme that are relevant to its strength against an offline, massively-parallel attack:\n\n\n  - The amount of CPU time required to compute the hash (\"stretching\")\n\n  - The amount of memory required to compute the hash (\"memory-hard\" operations)\n\n  - Including a random value, along with the password, as input to the hash computation (\"salting\")\n\n  - Given a hash, there is no known way of determining an input (e.g., a password) that produces this hash value, other than by guessing possible inputs (\"one-way\" hashing)\n\n  - Relative to the number of all possible hashes that can be generated by the scheme, there is a low likelihood of producing the same hash for multiple different inputs (\"collision resistance\")\n\nNote that the security requirements for the product may vary depending on the environment and the value of the passwords. Different schemes might not provide all of these properties, yet may still provide sufficient security for the environment. Conversely, a solution might be very strong in preserving one property, which still being very weak for an attack against another property, or it might not be able to significantly reduce the efficiency of a massively-parallel attack.\n\nReal-World Examples:\n\n- CVE-2008-1526: Router does not use a salt with a hash, making it easier to crack passwords.\n\n- CVE-2006-1058: Router does not use a salt with a hash, making it easier to crack passwords.\n\n- CVE-2008-4905: Blogging software uses a hard-coded salt when calculating a password hash.\n\n- CVE-2002-1657: Database server uses the username for a salt when encrypting passwords, simplifying brute force attacks.\n\n- CVE-2001-0967: Server uses a constant salt when encrypting passwords, simplifying brute force attacks.\n\n- CVE-2005-0408: chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.\n\nTop 25 CWE Examples:\n\n- CVE-2020-25754: An issue was discovered on Enphase Envoy R3.x and D4.x devices. There is a custom PAM module for user authentication that circumvents traditional user authentication. This module uses a password derived from the MD5 hash of the username and serial number. The serial number can be retrieved by an unauthenticated user at /info.xml. Attempts to change the user password via passwd or other tools have no effect.\n\n- CVE-2021-22741: Use of Password Hash with Insufficient Computational Effort vulnerability exists in ClearSCADA (all versions), EcoStruxure Geo SCADA Expert 2019 (all versions), and EcoStruxure Geo SCADA Expert 2020 (V83.7742.1 and prior), which could cause the revealing of account credentials when server database files are available. Exposure of these files to an attacker can make the system vulnerable to password decryption attacks. Note that \u201c.sde\u201d configuration export files do not contain user account password hashes.\n\n- CVE-2021-32519: Use of password hash with insufficient computational effort vulnerability in QSAN Storage Manager, XEVO, SANOS allows remote attackers to recover the plain-text password by brute-forcing the MD5 hash. The referred vulnerability has been solved with the updated version of QSAN Storage Manager v3.3.2, QSAN XEVO v2.1.0, and QSAN SANOS v2.1.0.\n\n- CVE-2021-33003: Delta Electronics DIAEnergie Version 1.7.5 and prior may allow an attacker to retrieve passwords in cleartext due to a weak hashing algorithm.\n\n- CVE-2021-37551: In JetBrains YouTrack before 2021.2.16363, system user passwords were hashed with SHA-256.\n\n- CVE-2021-38400: An attacker with physical access to Boston Scientific Zoom Latitude Model 3120 can remove the hard disk drive or create a specially crafted USB to extract the password hash for brute force reverse engineering of the system password.\n\n- CVE-2020-14516: In Rockwell Automation FactoryTalk Services Platform Versions 6.10.00 and 6.11.00, there is an issue with the implementation of the SHA-256 hashing algorithm with FactoryTalk Services Platform that prevents the user password from being hashed properly.\n\n- CVE-2021-36767: In Digi RealPort through 4.10.490, authentication relies on a challenge-response mechanism that gives access to the server password, making the protection ineffective. An attacker may send an unauthenticated request to the server. The server will reply with a weakly-hashed version of the server's access password. The attacker may then crack this hash offline in order to successfully login to the server.\n\n- CVE-2021-32997: The affected Baker Hughes Bentley Nevada products (3500 System 1 6.x, Part No. 3060/00 versions 6.98 and prior, 3500 System 1, Part No. 3071/xx & 3072/xx versions 21.1 HF1 and prior, 3500 Rack Configuration, Part No. 129133-01 versions 6.4 and prior, and 3500/22M Firmware, Part No. 288055-01 versions 5.05 and prior) utilize a weak encryption algorithm for storage and transmission of sensitive data, which may allow an attacker to more easily obtain credentials used for access.\n\n- CVE-2022-0022: Usage of a weak cryptographic algorithm in Palo Alto Networks PAN-OS software where the password hashes of administrator and local user accounts are not created with a sufficient level of computational effort, which allows for password cracking attacks on accounts in normal (non-FIPS-CC) operational mode. An attacker must have access to the account password hashes to take advantage of this weakness and can acquire those hashes if they are able to gain access to the PAN-OS software configuration. Fixed versions of PAN-OS software use a secure cryptographic algorithm for account password hashes. This issue does not impact Prisma Access firewalls. This issue impacts: PAN-OS 8.1 versions earlier than PAN-OS 8.1.21; All versions of PAN-OS 9.0; PAN-OS 9.1 versions earlier than PAN-OS 9.1.11; PAN-OS 10.0 versions earlier than PAN-OS 10.0.7.\n\n- CVE-2022-23348: BigAnt Software BigAnt Server v5.6.06 was discovered to utilize weak password hashes.\n\n- CVE-2022-26115: A use of password hash with insufficient computational effort vulnerability [CWE-916] in FortiSandbox before 4.2.0 may allow an attacker with access to the password database to efficiently mount bulk guessing attacks to recover the passwords.\n\n- CVE-2022-40258: AMI Megarac Weak password hashes for Redfish & API \n\n- CVE-2022-24041: A vulnerability has been identified in Desigo DXR2 (All versions < V01.21.142.5-22), Desigo PXC3 (All versions < V01.21.142.4-18), Desigo PXC4 (All versions < V02.20.142.10-10884), Desigo PXC5 (All versions < V02.20.142.10-10884). The web application stores the PBKDF2 derived key of users passwords with a low iteration count. An attacker with user profile access privilege can retrieve the stored password hashes of other accounts and then successfully perform an offline cracking attack and recover the plaintext passwords of other users.\n\nRelated Weaknesses:\n\n- CWE-328 (ChildOf)\n\n- CWE-327 (ChildOf)",
            "type": "Base",
            "source": "sparse",
            "search_source": "rootcause:weak hash function",
            "sources": [
              "base",
              "rootcause"
            ],
            "boost_factor": 3.0,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              }
            }
          },
          {
            "cwe_id": "294",
            "name": "Authentication Bypass by Capture-replay",
            "description": "A capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).",
            "score": 222.06386444460597,
            "matched_text": "CWE-294: Authentication Bypass by Capture-replay\n\nType: Base\n\nStatus: Incomplete\n\nDescription:\n\nA capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).\n\nExtended Details:\n\nCapture-replay attacks are common and can be difficult to defeat without cryptography. They are a subset of network injection attacks that rely on observing previously-sent valid commands, then changing them slightly if necessary and resending the same commands to the server.\n\nReal-World Examples:\n\n- CVE-2005-3435: product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.\n\n- CVE-2007-4961: Chain: cleartext transmission of the MD5 hash of password (CWE-319) enables attacks against a server that is susceptible to replay (CWE-294).\n\nTop 25 CWE Examples:\n\n- CVE-2021-31958: Windows NTLM Elevation of Privilege Vulnerability\n\n- CVE-2021-26824: DM FingerTool v1.19 in the DM PD065 Secure USB is susceptible to improper authentication by a replay attack, allowing local attackers to bypass user authentication and access all features and data on the USB.\n\n- CVE-2021-27572: An issue was discovered in Emote Remote Mouse through 4.0.0.0. Authentication Bypass can occur via Packet Replay. Remote unauthenticated users can execute arbitrary code via crafted UDP packets even when passwords are set.\n\n- CVE-2021-41030: An authentication bypass by capture-replay vulnerability [CWE-294] in FortiClient EMS versions 7.0.1 and below and 6.4.4 and below may allow an unauthenticated attacker to impersonate an existing user by intercepting and re-using valid SAML authentication messages.\n\n- CVE-2022-22806: A CWE-294: Authentication Bypass by Capture-replay vulnerability exists that could cause an unauthenticated connection to the UPS when a malformed connection is sent. Affected Product: SmartConnect Family: SMT Series (SMT Series ID=1015: UPS 04.5 and prior), SMC Series (SMC Series ID=1018: UPS 04.2 and prior), SMTL Series (SMTL Series ID=1026: UPS 02.9 and prior), SCL Series (SCL Series ID=1029: UPS 02.5 and prior / SCL Series ID=1030: UPS 02.5 and prior / SCL Series ID=1036: UPS 02.5 and prior / SCL Series ID=1037: UPS 03.1 and prior), SMX Series (SMX Series ID=1031: UPS 03.1 and prior)\n\n- CVE-2022-25159: Authentication Bypass by Capture-replay vulnerability in Mitsubishi Electric MELSEC iQ-F series FX5U(C) CPU all versions, Mitsubishi Electric MELSEC iQ-F series FX5UJ CPU all versions, Mitsubishi Electric MELSEC iQ-R series R00/01/02CPU all versions, Mitsubishi Electric MELSEC iQ-R series R04/08/16/32/120(EN)CPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120SFCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PSFCPU all versions, Mitsubishi Electric MELSEC iQ-R series R16/32/64MTCPU all versions, Mitsubishi Electric MELSEC iQ-R series RJ71C24(-R2/R4) all versions, Mitsubishi Electric MELSEC iQ-R series RJ71EN71 all versions, Mitsubishi Electric MELSEC iQ-R series RJ72GF15-T2 all versions, Mitsubishi Electric MELSEC Q series Q03/04/06/13/26UDVCPU all versions, Mitsubishi Electric MELSEC Q series Q04/06/13/26UDPVCPU all versions, Mitsubishi Electric MELSEC Q series QJ71C24N(-R2/R4) all versions and Mitsubishi Electric MELSEC Q series QJ71E71-100 all versions allows a remote unauthenticated attacker to login to the product by replay attack.\n\n- CVE-2022-30466: joyebike Joy ebike Wolf Manufacturing year 2022 is vulnerable to Authentication Bypass by Capture-replay.\n\n- CVE-2022-33208: Authentication bypass by capture-replay vulnerability exists in Machine automation controller NJ series all models V 1.48 and earlier, Machine automation controller NX7 series all models V1.28 and earlier, Machine automation controller NX1 series all models V1.48 and earlier, Automation software 'Sysmac Studio' all models V1.49 and earlier, and Programmable Terminal (PT) NA series NA5-15W/NA5-12W/NA5-9W/NA5-7W models Runtime V1.15 and earlier, which may allow a remote attacker who can analyze the communication between the affected controller and automation software 'Sysmac Studio' and/or a Programmable Terminal (PT) to access the controller.\n\n- CVE-2022-33971: Authentication bypass by capture-replay vulnerability exists in Machine automation controller NX7 series all models V1.28 and earlier, Machine automation controller NX1 series all models V1.48 and earlier, and Machine automation controller NJ series all models V 1.48 and earlier, which may allow an adjacent attacker who can analyze the communication between the controller and the specific software used by OMRON internally to cause a denial-of-service (DoS) condition or execute a malicious program.\n\n- CVE-2022-45789: A CWE-294: Authentication Bypass by Capture-replay vulnerability exists that could cause execution of unauthorized Modbus functions on the controller when hijacking an authenticated Modbus session. Affected Products: EcoStruxure Control Expert (All Versions), EcoStruxure Process Expert (All Versions), Modicon M340 CPU - part numbers BMXP34* (All Versions), Modicon M580 CPU - part numbers BMEP* and BMEH* (All Versions), Modicon M580 CPU Safety - part numbers BMEP58*S and BMEH58*S (All Versions) \n\n- CVE-2021-22640: An attacker can decrypt the Ovarro TBox login password by communication capture and brute force attacks.\n\n- CVE-2021-38296: Apache Spark supports end-to-end encryption of RPC connections via \"spark.authenticate\" and \"spark.network.crypto.enabled\". In versions 3.1.2 and earlier, it uses a bespoke mutual authentication protocol that allows for full encryption key recovery. After an initial interactive attack, this would allow someone to decrypt plaintext traffic offline. Note that this does not affect security mechanisms controlled by \"spark.authenticate.enableSaslEncryption\", \"spark.io.encryption.enabled\", \"spark.ssl\", \"spark.ui.strictTransportSecurity\". Update to Apache Spark 3.1.3 or later\n\n- CVE-2022-22936: An issue was discovered in SaltStack Salt in versions before 3002.8, 3003.4, 3004.1. Job publishes and file server replies are susceptible to replay attacks, which can result in an attacker replaying job publishes causing minions to run old jobs. File server replies can also be re-played. A sufficient craft attacker could gain root access on minion under certain scenarios.\n\n- CVE-2022-29878: A vulnerability has been identified in SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00). Affected devices use a limited range for challenges that are sent during the unencrypted challenge-response communication. An unauthenticated attacker could capture a valid challenge-response pair generated by a legitimate user, and request the webpage repeatedly to wait for the same challenge to reappear for which the correct response is known. This could allow the attacker to access the management interface of the device.\n\n- CVE-2022-40621: Because the WAVLINK Quantum D4G (WN531G3) running firmware version M31G3.V5030.200325 and earlier communicates over HTTP and not HTTPS, and because the hashing mechanism does not rely on a server-supplied key, it is possible for an attacker with sufficient network access to capture the hashed password of a logged on user and use it in a classic Pass-the-Hash style attack.\n\n- CVE-2022-41541: TP-Link AX10v1 V1_211117 allows attackers to execute a replay attack by using a previously transmitted encrypted authentication message and valid authentication token. Attackers are able to login to the web application as an admin user.\n\n- CVE-2022-29334: An issue in H v1.0 allows attackers to bypass authentication via a session replay attack.\n\n- CVE-2022-31158: LTI 1.3 Tool Library is a library used for building IMS-certified LTI 1.3 tool providers in PHP. Prior to version 5.0, the Nonce Claim Value was not being validated against the nonce value sent in the Authentication Request. Users should upgrade to version 5.0 to receive a patch. There are currently no known workarounds.\n\nRelated Weaknesses:\n\n- CWE-1390 (ChildOf)\n\n- CWE-287 (ChildOf)",
            "type": "Base",
            "source": "sparse",
            "search_source": "rootcause:weak hash function",
            "sources": [
              "base",
              "rootcause"
            ],
            "boost_factor": 3.0,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              }
            }
          },
          {
            "cwe_id": "327",
            "name": "Use of a Broken or Risky Cryptographic Algorithm",
            "description": "The product uses a broken or risky cryptographic algorithm or protocol.",
            "score": 221.87128005934323,
            "matched_text": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm\n\nType: Class\n\nStatus: Draft\n\nDescription:\n\nThe product uses a broken or risky cryptographic algorithm or protocol.\n\nExtended Details:\n\n\n\nCryptographic algorithms are the methods by which data is scrambled to prevent observation or influence by unauthorized actors. Insecure cryptography can be exploited to expose sensitive information, modify data in unexpected ways, spoof identities of other users or devices, or other impacts.\n\n\nIt is very difficult to produce a secure algorithm, and even high-profile algorithms by accomplished cryptographic experts have been broken. Well-known techniques exist to break or weaken various kinds of cryptography. Accordingly, there are a small number of well-understood and heavily studied algorithms that should be used by most products. Using a non-standard or known-insecure algorithm is dangerous because a determined adversary may be able to break the algorithm and compromise whatever data has been protected.\n\n\nSince the state of cryptography advances so rapidly, it is common for an algorithm to be considered \"unsafe\" even if it was once thought to be strong. This can happen when new attacks are discovered, or if computing power increases so much that the cryptographic algorithm no longer provides the amount of protection that was originally thought.\n\n\nFor a number of reasons, this weakness is even more challenging to manage with hardware deployment of cryptographic algorithms as opposed to software implementation. First, if a flaw is discovered with hardware-implemented cryptography, the flaw cannot be fixed in most cases without a recall of the product, because hardware is not easily replaceable like software. Second, because the hardware product is expected to work for years, the adversary's computing power will only increase over time.\n\n\nReal-World Examples:\n\n- CVE-2022-30273: SCADA-based protocol supports a legacy encryption mode that uses Tiny Encryption Algorithm (TEA) in ECB mode, which leaks patterns in messages and cannot protect integrity\n\n- CVE-2022-30320: Programmable Logic Controller (PLC) uses a protocol with a cryptographically insecure hashing algorithm for passwords.\n\n- CVE-2008-3775: Product uses \"ROT-25\" to obfuscate the password in the registry.\n\n- CVE-2007-4150: product only uses \"XOR\" to obfuscate sensitive data\n\n- CVE-2007-5460: product only uses \"XOR\" and a fixed key to obfuscate sensitive data\n\n- CVE-2005-4860: Product substitutes characters with other characters in a fixed way, and also leaves certain input characters unchanged.\n\n- CVE-2002-2058: Attackers can infer private IP addresses by dividing each octet by the MD5 hash of '20'.\n\n- CVE-2008-3188: Product uses DES when MD5 has been specified in the configuration, resulting in weaker-than-expected password hashes.\n\n- CVE-2005-2946: Default configuration of product uses MD5 instead of stronger algorithms that are available, simplifying forgery of certificates.\n\n- CVE-2007-6013: Product uses the hash of a hash for authentication, allowing attackers to gain privileges if they can obtain the original hash.\n\nTop 25 CWE Examples:\n\n- CVE-2020-15128: In OctoberCMS before version 1.0.468, encrypted cookie values were not tied to the name of the cookie the value belonged to. This meant that certain classes of attacks that took advantage of other theoretical vulnerabilities in user facing code (nothing exploitable in the core project itself) had a higher chance of succeeding. Specifically, if your usage exposed a way for users to provide unfiltered user input and have it returned to them as an encrypted cookie (ex. storing a user provided search query in a cookie) they could then use the generated cookie in place of other more tightly controlled cookies; or if your usage exposed the plaintext version of an encrypted cookie at any point to the user they could theoretically provide encrypted content from your application back to it as an encrypted cookie and force the framework to decrypt it for them. Issue has been fixed in build 468 (v1.0.468).\n\n- CVE-2020-4965: IBM Jazz Team Server products use weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 192422.\n\n- CVE-2021-20337: IBM QRadar SIEM 7.3.0 to 7.3.3 Patch 8 and 7.4.0 to 7.4.3 GA uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 194448.\n\n- CVE-2021-27457: A vulnerability has been found in multiple revisions of Emerson Rosemount X-STREAM Gas Analyzer. The affected products utilize a weak encryption algorithm for storage of sensitive data, which may allow an attacker to more easily obtain credentials used for access.\n\n- CVE-2021-29694: IBM Spectrum Protect Plus 10.1.0 through 10.1.7 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 200258.\n\n- CVE-2021-29794: IBM Tivoli Netcool/Impact 7.1.0.20 and 7.1.0.21 uses an insecure SSH server configuration which enables weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 203556.\n\n- CVE-2021-31796: An inadequate encryption vulnerability discovered in CyberArk Credential Provider before 12.1 may lead to Information Disclosure. An attacker may realistically have enough information that the number of possible keys (for a credential file) is only one, and the number is usually not higher than 2^36.\n\n- CVE-2020-24587: The 802.11 standard that underpins Wi-Fi Protected Access (WPA, WPA2, and WPA3) and Wired Equivalent Privacy (WEP) doesn't require that all fragments of a frame are encrypted under the same key. An adversary can abuse this to decrypt selected fragments when another device sends fragmented frames and the WEP, CCMP, or GCMP encryption key is periodically renewed.\n\n- CVE-2020-24588: The 802.11 standard that underpins Wi-Fi Protected Access (WPA, WPA2, and WPA3) and Wired Equivalent Privacy (WEP) doesn't require that the A-MSDU flag in the plaintext QoS header field is authenticated. Against devices that support receiving non-SSP A-MSDU frames (which is mandatory as part of 802.11n), an adversary can abuse this to inject arbitrary network packets.\n\n- CVE-2020-26140: An issue was discovered in the ALFA Windows 10 driver 6.1316.1209 for AWUS036H. The WEP, WPA, WPA2, and WPA3 implementations accept plaintext frames in a protected Wi-Fi network. An adversary can abuse this to inject arbitrary data frames independent of the network configuration.\n\n- CVE-2021-22170: Assuming a database breach, nonce reuse issues in GitLab 11.6+ allows an attacker to decrypt some of the database's encrypted content\n\n- CVE-2021-37546: In JetBrains TeamCity before 2021.1, an insecure key generation mechanism for encrypted properties was used.\n\n- CVE-2021-37587: In Charm 0.43, any single user can decrypt DAC-MACS or MA-ABE-YJ14 data.\n\n- CVE-2021-40528: The ElGamal implementation in Libgcrypt before 1.9.4 allows plaintext recovery because, during interaction between two cryptographic libraries, a certain dangerous combination of the prime defined by the receiver's public key, the generator defined by the receiver's public key, and the sender's ephemeral exponents can lead to a cross-configuration attack against OpenPGP.\n\n- CVE-2021-40529: The ElGamal implementation in Botan through 2.18.1, as used in Thunderbird and other products, allows plaintext recovery because, during interaction between two cryptographic libraries, a certain dangerous combination of the prime defined by the receiver's public key, the generator defined by the receiver's public key, and the sender's ephemeral exponents can lead to a cross-configuration attack against OpenPGP.\n\n- CVE-2021-40530: The ElGamal implementation in Crypto++ through 8.5 allows plaintext recovery because, during interaction between two cryptographic libraries, a certain dangerous combination of the prime defined by the receiver's public key, the generator defined by the receiver's public key, and the sender's ephemeral exponents can lead to a cross-configuration attack against OpenPGP.\n\n- CVE-2021-31352: An Information Exposure vulnerability in Juniper Networks SRC Series devices configured for NETCONF over SSH permits the negotiation of weak ciphers, which could allow a remote attacker to obtain sensitive information. A remote attacker with read and write access to network data could exploit this vulnerability to display plaintext bits from a block of ciphertext and obtain sensitive information. This issue affects all Juniper Networks SRC Series versions prior to 4.13.0-R6.\n\n- CVE-2021-36298: Dell EMC InsightIQ, versions prior to 4.1.4, contain risky cryptographic algorithms in the SSH component. A remote unauthenticated attacker could potentially exploit this vulnerability leading to authentication bypass and remote takeover of the InsightIQ. This allows an attacker to take complete control of InsightIQ to affect services provided by SSH; so Dell recommends customers to upgrade at the earliest opportunity.\n\n- CVE-2021-41263: rails_multisite provides multi-db support for Rails applications. In affected versions this vulnerability impacts any Rails applications using `rails_multisite` alongside Rails' signed/encrypted cookies. Depending on how the application makes use of these cookies, it may be possible for an attacker to re-use cookies on different 'sites' within a multi-site Rails application. The issue has been patched in v4 of the `rails_multisite` gem. Note that this upgrade will invalidate all previous signed/encrypted cookies. The impact of this invalidation will vary based on the application architecture.\n\n- CVE-2021-32001: K3s in SUSE Rancher allows any user with direct access to the datastore, or a copy of a datastore backup, to extract the cluster's confidential keying material (cluster certificate authority private keys, secrets encryption configuration passphrase, etc.) and decrypt it, without having to know the token value. This issue affects: SUSE Rancher K3s version v1.19.12+k3s1, v1.20.8+k3s1, v1.21.2+k3s1 and prior versions; RKE2 version v1.19.12+rke2r1, v1.20.8+rke2r1, v1.21.2+rke2r1 and prior versions.\n\n- CVE-2020-36315: In RELIC before 2020-08-01, RSA PKCS#1 v1.5 signature forgery can occur because certain checks of the padding (and of the first two bytes) are inadequate. NOTE: this requires that a low public exponent (such as 3) is being used. The product, by default, does not generate RSA keys with such a low number.\n\n- CVE-2021-40006: Vulnerability of design defects in the security algorithm component. Successful exploitation of this vulnerability may affect confidentiality. \n\n- CVE-2021-38542: Apache James prior to release 3.6.1 is vulnerable to a buffering attack relying on the use of the STARTTLS command. This can result in Man-in -the-middle command injection attacks, leading potentially to leakage of sensible information.\n\n- CVE-2021-43808: Laravel is a web application framework. Laravel prior to versions 8.75.0, 7.30.6, and 6.20.42 contain a possible cross-site scripting (XSS) vulnerability in the Blade templating engine. A broken HTML element may be clicked and the user taken to another location in their browser due to XSS. This is due to the user being able to guess the parent placeholder SHA-1 hash by trying common names of sections. If the parent template contains an exploitable HTML structure an XSS vulnerability can be exposed. This vulnerability has been patched in versions 8.75.0, 7.30.6, and 6.20.42 by determining the parent placeholder at runtime and using a random hash that is unique to each request.\n\n- CVE-2021-31562: The SSL/TLS configuration of Fresenius Kabi Agilia Link + version 3.0 has serious deficiencies that may allow an attacker to compromise SSL/TLS sessions in different ways. An attacker may be able to eavesdrop on transferred data, manipulate data allegedly secured by SSL/TLS, and impersonate an entity to gain access to sensitive information.\n\n- CVE-2021-2351: Vulnerability in the Advanced Networking Option component of Oracle Database Server. Supported versions that are affected are 12.1.0.2, 12.2.0.1 and 19c. Difficult to exploit vulnerability allows unauthenticated attacker with network access via Oracle Net to compromise Advanced Networking Option. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Advanced Networking Option, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Advanced Networking Option. Note: The July 2021 Critical Patch Update introduces a number of Native Network Encryption changes to deal with vulnerability CVE-2021-2351 and prevent the use of weaker ciphers. Customers should review: \"Changes in Native Network Encryption with the July 2021 Critical Patch Update\" (Doc ID 2791571.1). CVSS 3.1 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).\n\n- CVE-2021-37588: In Charm 0.43, any two users can collude to achieve the ability to decrypt YCT14 data.\n\n- CVE-2021-43774: A risky-algorithm issue was discovered on Fujifilm DocuCentre-VI C4471 1.8 devices. An attacker that obtained access to the administrative web interface of a printer (e.g., by using the default credentials) can download the address book file, which contains the list of users (domain users, FTP users, etc.) stored on the printer, together with their encrypted passwords. The passwords are protected by a weak cipher, such as ROT13, which requires minimal effort to instantly retrieve the original password, giving the attacker a list of valid domain or FTP usernames and passwords.\n\n- CVE-2021-43989: mySCADA myPRO Versions 8.20.0 and prior stores passwords using MD5, which may allow an attacker to crack the previously retrieved password hashes.\n\n- CVE-2021-45512: Certain NETGEAR devices are affected by weak cryptography. This affects D7000v2 before 1.0.0.62, D8500 before 1.0.3.50, EX3700 before 1.0.0.84, EX3800 before 1.0.0.84, EX6120 before 1.0.0.54, EX6130 before 1.0.0.36, EX7000 before 1.0.1.90, R6250 before 1.0.4.42, R6400v2 before 1.0.4.98, R6700v3 before 1.0.4.98, R6900P before 1.3.2.124, R7000 before 1.0.11.106, R7000P before 1.3.2.124, R7100LG before 1.0.0.56, R7900 before 1.0.4.26, R8000 before 1.0.4.58, R8300 before 1.0.2.134, R8500 before 1.0.2.134, RS400 before 1.5.0.48, WNR3500Lv2 before 1.2.0.62, and XR300 before 1.0.3.50.\n\n- CVE-2021-45696: An issue was discovered in the sha2 crate 0.9.7 before 0.9.8 for Rust. Hashes of long messages may be incorrect when the AVX2-accelerated backend is used.\n\n- CVE-2022-0377: Users of the LearnPress WordPress plugin before 4.1.5 can upload an image as a profile avatar after the registration. After this process the user crops and saves the image. Then a \"POST\" request that contains user supplied name of the image is sent to the server for renaming and cropping of the image. As a result of this request, the name of the user-supplied image is changed with a MD5 value. This process can be conducted only when type of the image is JPG or PNG. An attacker can use this vulnerability in order to rename an arbitrary image file. By doing this, they could destroy the design of the web site.\n\n- CVE-2022-1252: Use of a Broken or Risky Cryptographic Algorithm in GitHub repository gnuboard/gnuboard5 prior to and including 5.5.5. A vulnerability in gnuboard v5.5.5 and below uses weak encryption algorithms leading to sensitive information exposure. This allows an attacker to derive the email address of any user, including when the 'Let others see my information.' box is ticked off. Or to send emails to any email address, with full control of its contents \n\n- CVE-2022-1434: The OpenSSL 3.0 implementation of the RC4-MD5 ciphersuite incorrectly uses the AAD data as the MAC key. This makes the MAC key trivially predictable. An attacker could exploit this issue by performing a man-in-the-middle attack to modify data being sent from one endpoint to an OpenSSL 3.0 recipient such that the modified data would still pass the MAC integrity check. Note that data sent from an OpenSSL 3.0 endpoint to a non-OpenSSL 3.0 endpoint will always be rejected by the recipient and the connection will fail at that point. Many application protocols require data to be sent from the client to the server first. Therefore, in such a case, only an OpenSSL 3.0 server would be impacted when talking to a non-OpenSSL 3.0 client. If both endpoints are OpenSSL 3.0 then the attacker could modify data being sent in both directions. In this case both clients and servers could be affected, regardless of the application protocol. Note that in the absence of an attacker this bug means that an OpenSSL 3.0 endpoint communicating with a non-OpenSSL 3.0 endpoint will fail to complete the handshake when using this ciphersuite. The confidentiality of data is not impacted by this issue, i.e. an attacker cannot decrypt data that has been encrypted using this ciphersuite - they can only modify it. In order for this attack to work both endpoints must legitimately negotiate the RC4-MD5 ciphersuite. This ciphersuite is not compiled by default in OpenSSL 3.0, and is not available within the default provider or the default ciphersuite list. This ciphersuite will never be used if TLSv1.3 has been negotiated. In order for an OpenSSL 3.0 endpoint to use this ciphersuite the following must have occurred: 1) OpenSSL must have been compiled with the (non-default) compile time option enable-weak-ssl-ciphers 2) OpenSSL must have had the legacy provider explicitly loaded (either through application code or via configuration) 3) The ciphersuite must have been explicitly added to the ciphersuite list 4) The libssl security level must have been set to 0 (default is 1) 5) A version of SSL/TLS below TLSv1.3 must have been negotiated 6) Both endpoints must negotiate the RC4-MD5 ciphersuite in preference to any others that both endpoints have in common Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2).\n\n- CVE-2022-20805: A vulnerability in the automatic decryption process in Cisco Umbrella Secure Web Gateway (SWG) could allow an authenticated, adjacent attacker to bypass the SSL decryption and content filtering policies on an affected system. This vulnerability is due to how the decryption function uses the TLS Sever Name Indication (SNI) extension of an HTTP request to discover the destination domain and determine if the request needs to be decrypted. An attacker could exploit this vulnerability by sending a crafted request over TLS from a client to an unknown or controlled URL. A successful exploit could allow an attacker to bypass the decryption process of Cisco Umbrella SWG and allow malicious content to be downloaded to a host on a protected network. There are workarounds that address this vulnerability.\n\n- CVE-2022-2097: AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).\n\n- CVE-2022-2781: In affected versions of Octopus Server it was identified that the same encryption process was used for both encrypting session cookies and variables.\n\n- CVE-2022-28164: Brocade SANnav before SANnav 2.2.0 application uses the Blowfish symmetric encryption algorithm for the storage of passwords. This could allow an authenticated attacker to decrypt stored account passwords.\n\n- CVE-2022-28382: An issue was discovered in certain Verbatim drives through 2022-03-31. Due to the use of an insecure encryption AES mode (Electronic Codebook, aka ECB), an attacker may be able to extract information even from encrypted data, for example by observing repeating byte patterns. The firmware of the USB-to-SATA bridge controller INIC-3637EN uses AES-256 with the ECB mode. This operation mode of block ciphers (e.g., AES) always encrypts identical plaintext data, in this case blocks of 16 bytes, to identical ciphertext data. For some data, for instance bitmap images, the lack of the cryptographic property called diffusion, within ECB, can leak sensitive information even in encrypted data. Thus, the use of the ECB operation mode can put the confidentiality of specific information at risk, even in an encrypted form. This affects Keypad Secure USB 3.2 Gen 1 Drive Part Number #49428, Store 'n' Go Secure Portable HDD GD25LK01-3637-C VER4.0, Executive Fingerprint Secure SSD GDMSFE01-INI3637-C VER1.1, and Fingerprint Secure Portable Hard Drive Part Number #53650.\n\n- CVE-2022-29960: Emerson OpenBSI through 2022-04-29 uses weak cryptography. It is an engineering environment for the ControlWave and Bristol Babcock line of RTUs. DES with hardcoded cryptographic keys is used for protection of certain system credentials, engineering files, and sensitive utilities.\n\n- CVE-2022-30320: Saia Burgess Controls (SBC) PCD through 2022-05-06 uses a Broken or Risky Cryptographic Algorithm. According to FSCT-2022-0063, there is a Saia Burgess Controls (SBC) PCD S-Bus weak credential hashing scheme issue. The affected components are characterized as: S-Bus (5050/UDP) authentication. The potential impact is: Authentication bypass. The Saia Burgess Controls (SBC) PCD controllers utilize the S-Bus protocol (5050/UDP) for a variety of engineering purposes. It is possible to configure a password in order to restrict access to sensitive engineering functionality. Authentication is done by using the S-Bus 'write byte' message to a specific address and supplying a hashed version of the password. The hashing algorithm used is based on CRC-16 and as such not cryptographically secure. An insecure hashing algorithm is used. An attacker capable of passively observing traffic can intercept the hashed credentials and trivially find collisions allowing for authentication without having to bruteforce a keyspace defined by the actual strength of the password. This allows the attacker access to sensitive engineering functionality such as uploading/downloading control logic and manipulating controller configuration.\n\n- CVE-2022-35513: The Blink1Control2 application <= 2.2.7 uses weak password encryption and an insecure method of storage.\n\n- CVE-2022-38493: Rhonabwy 0.9.99 through 1.1.x before 1.1.7 doesn't check the RSA private key length before RSA-OAEP decryption. This allows attackers to cause a Denial of Service via a crafted JWE (JSON Web Encryption) token.\n\n- CVE-2022-39237: syslabs/sif is the Singularity Image Format (SIF) reference implementation. In versions prior to 2.8.1the `github.com/sylabs/sif/v2/pkg/integrity` package did not verify that the hash algorithm(s) used are cryptographically secure when verifying digital signatures. A patch is available in version >= v2.8.1 of the module. Users are encouraged to upgrade. Users unable to upgrade may independently validate that the hash algorithm(s) used for metadata digest(s) and signature hash are cryptographically secure.\n\n- CVE-2022-28166: In Brocade SANnav version before SANN2.2.0.2 and Brocade SANNav before 2.1.1.8, the implementation of TLS/SSL Server Supports the Use of Static Key Ciphers (ssl-static-key-ciphers) on ports 443 & 18082.\n\n- CVE-2022-30187: Azure Storage Library Information Disclosure Vulnerability\n\n- CVE-2021-23839: OpenSSL 1.0.2 supports SSLv2. If a client attempts to negotiate SSLv2 with a server that is configured to support both SSLv2 and more recent SSL and TLS versions then a check is made for a version rollback attack when unpadding an RSA signature. Clients that support SSL or TLS versions greater than SSLv2 are supposed to use a special form of padding. A server that supports greater than SSLv2 is supposed to reject connection attempts from a client where this special form of padding is present, because this indicates that a version rollback has occurred (i.e. both client and server support greater than SSLv2, and yet this is the version that is being requested). The implementation of this padding check inverted the logic so that the connection attempt is accepted if the padding is present, and rejected if it is absent. This means that such as server will accept a connection if a version rollback attack has occurred. Further the server will erroneously reject a connection if a normal SSLv2 connection attempt is made. Only OpenSSL 1.0.2 servers from version 1.0.2s to 1.0.2x are affected by this issue. In order to be vulnerable a 1.0.2 server must: 1) have configured SSLv2 support at compile time (this is off by default), 2) have configured SSLv2 support at runtime (this is off by default), 3) have configured SSLv2 ciphersuites (these are not in the default ciphersuite list) OpenSSL 1.1.1 does not have SSLv2 support and therefore is not vulnerable to this issue. The underlying error is in the implementation of the RSA_padding_check_SSLv23() function. This also affects the RSA_SSLV23_PADDING padding mode used by various other functions. Although 1.1.1 does not support SSLv2 the RSA_padding_check_SSLv23() function still exists, as does the RSA_SSLV23_PADDING padding mode. Applications that directly call that function or use that padding mode will encounter this issue. However since there is no support for the SSLv2 protocol in 1.1.1 this is considered a bug and not a security issue in that version. OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.0.2y (Affected 1.0.2s-1.0.2x).\n\n- CVE-2021-20379: IBM Guardium Data Encryption (GDE) 3.0.0.3 and 4.0.0.4 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 195711.\n\n- CVE-2021-20406: IBM Security Verify Information Queue 1.0.6 and 1.0.7 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 196184. \n\n- CVE-2021-20419: IBM Security Guardium 11.2 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 196280.\n\n- CVE-2021-20441: IBM Security Verify Bridge uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 196617.\n\n- CVE-2021-20479: IBM Cloud Pak System 2.3.0 through 2.3.3.3 Interim Fix 1 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 197498.\n\n- CVE-2021-20497: IBM Security Verify Access Docker 10.0.0 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 197969\n\n- CVE-2021-20566: IBM Resilient SOAR V38.0 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 199238.\n\n- CVE-2021-22212: ntpkeygen can generate keys that ntpd fails to parse. NTPsec 1.2.0 allows ntpkeygen to generate keys with '#' characters. ntpd then either pads, shortens the key, or fails to load these keys entirely, depending on the key type and the placement of the '#'. This results in the administrator not being able to use the keys as expected or the keys are shorter than expected and easier to brute-force, possibly resulting in MITM attacks between ntp clients and ntp servers. For short AES128 keys, ntpd generates a warning that it is padding them.\n\n- CVE-2021-22356: There is a weak secure algorithm vulnerability in Huawei products. A weak secure algorithm is used in a module. Attackers can exploit this vulnerability by capturing and analyzing the messages between devices to obtain information. This can lead to information leak.Affected product versions include: IPS Module V500R005C00SPC100, V500R005C00SPC200; NGFW Module V500R005C00SPC100, V500R005C00SPC200; Secospace USG6300 V500R001C30SPC200, V500R001C30SPC600, V500R001C60SPC500, V500R005C00SPC100, V500R005C00SPC200; Secospace USG6500 V500R001C30SPC200, V500R001C30SPC600, V500R001C60SPC500, V500R005C00SPC100, V500R005C00SPC200; Secospace USG6600 V500R001C30SPC200, V500R001C30SPC600, V500R001C60SPC500, V500R005C00SPC100, V500R005C00SPC200; USG9500 V500R001C30SPC200, V500R001C30SPC600, V500R001C60SPC500, V500R005C00SPC100, V500R005C00SPC200.\n\n- CVE-2021-22738: Use of a Broken or Risky Cryptographic Algorithm vulnerability exists in homeLYnk (Wiser For KNX) and spaceLYnk V2.60 and prior that could cause unauthorized access when credentials are discovered after a brute force attack.\n\n- CVE-2021-25763: In JetBrains Ktor before 1.4.2, weak cipher suites were enabled by default.\n\n- CVE-2021-27756: \"TLS-RSA cipher suites are not disabled in BigFix Compliance up to v2.0.5. If TLS 2.0 and secure ciphers are not enabled then an attacker can passively record traffic and later decrypt it.\"\n\n- CVE-2021-29704: IBM Security SOAR uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information.\n\n- CVE-2021-29722: IBM Sterling Secure Proxy 6.0.1, 6.0.2, 2.4.3.2, and 3.4.3.2 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 201095.\n\n- CVE-2021-29723: IBM Sterling Secure Proxy 6.0.1, 6.0.2, 2.4.3.2, and 3.4.3.2 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-ForceID: 201100.\n\n- CVE-2021-29750: IBM QRadar SIEM 7.3 and 7.4 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 201778.\n\n- CVE-2021-29894: IBM Cloud Pak for Security (CP4S) 1.7.0.0, 1.7.1.0, 1.7.2.0, and 1.8.0.0 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 207320.\n\n- CVE-2021-32593: A use of a broken or risky cryptographic algorithm vulnerability [CWE-327] in the Dynamic Tunnel Protocol of FortiWAN before 4.5.9 may allow an unauthenticated remote attacker to decrypt and forge protocol communication messages.\n\n- CVE-2021-33018: The use of a broken or risky cryptographic algorithm in Philips Vue PACS versions 12.2.x.x and prior is an unnecessary risk that may result in the exposure of sensitive information.\n\n- CVE-2021-33846: Fresenius Kabi Vigilant Software Suite (Mastermed Dashboard) version 2.0.1.3 issues authentication tokens to authenticated users that are signed with a symmetric encryption key. An attacker in possession of the key can issue valid JWTs and impersonate arbitrary users.\n\n- CVE-2021-36647: Use of a Broken or Risky Cryptographic Algorithm in the function mbedtls_mpi_exp_mod() in lignum.c in Mbed TLS Mbed TLS all versions before 3.0.0, 2.27.0 or 2.16.11 allows attackers with access to precise enough timing and memory access information (typically an untrusted operating system attacking a secure enclave such as SGX or the TrustZone secure world) to recover the private keys used in RSA.\n\n- CVE-2021-38921: IBM Security Verify 10.0.0, 10.0.1.0, and 10.0.2.0 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 210067.\n\n- CVE-2021-39002: IBM DB2 for Linux, UNIX and Windows (includes DB2 Connect Server) 9.7, 10.1, 10.5, 11.1, and 11.5 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information.\n\n- CVE-2021-39058: IBM Spectrum Copy Data Management 2.2.13 and earlier uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 214617.\n\n- CVE-2021-39076: IBM Security Guardium 10.5 and 11.3 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt sensitive information. IBM X-Force ID: 215585.\n\n- CVE-2021-39082: IBM UrbanCode Deploy (UCD) 7.1.1.2 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information.\n\n- CVE-2021-41096: Rucky is a USB HID Rubber Ducky Launch Pad for Android. Versions 2.2 and earlier for release builds and versions 425 and earlier for nightly builds suffer from use of a weak cryptographic algorithm (RSA/ECB/PKCS1Padding). The issue will be patched in v2.3 for release builds and 426 onwards for nightly builds. As a workaround, one may disable an advance security feature if not required.\n\n- CVE-2021-41278: Functions SDK for EdgeX is meant to provide all the plumbing necessary for developers to get started in processing/transforming/exporting data out of the EdgeX IoT platform. In affected versions broken encryption in app-functions-sdk \u201cAES\u201d transform in EdgeX Foundry releases prior to Jakarta allows attackers to decrypt messages via unspecified vectors. The app-functions-sdk exports an \u201caes\u201d transform that user scripts can optionally call to encrypt data in the processing pipeline. No decrypt function is provided. Encryption is not enabled by default, but if used, the level of protection may be less than the user may expects due to a broken implementation. Version v2.1.0 (EdgeX Foundry Jakarta release and later) of app-functions-sdk-go/v2 deprecates the \u201caes\u201d transform and provides an improved \u201caes256\u201d transform in its place. The broken implementation will remain in a deprecated state until it is removed in the next EdgeX major release to avoid breakage of existing software that depends on the broken implementation. As the broken transform is a library function that is not invoked by default, users who do not use the AES transform in their processing pipelines are unaffected. Those that are affected are urged to upgrade to the Jakarta EdgeX release and modify processing pipelines to use the new \"aes256\" transform.\n\n- CVE-2021-42583: A Broken or Risky Cryptographic Algorithm exists in Max Mazurov Maddy before 0.5.2, which is an unnecessary risk that may result in the exposure of sensitive information.\n\n- CVE-2021-43550: The use of a broken or risky cryptographic algorithm is an unnecessary risk that may result in the exposure of sensitive information, which affects the communications between Patient Information Center iX (PIC iX) Versions C.02 and C.03 and Efficia CM Series Revisions A.01 to C.0x and 4.0.\n\n- CVE-2022-20117: In (TBD) of (TBD), there is a possible way to decrypt local data encrypted by the GSC due to improperly used crypto. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-217475903References: N/A\n\n- CVE-2022-22327: IBM UrbanCode Deploy (UCD) 7.0.5, 7.1.0, 7.1.1, and 7.1.2 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 218859.\n\n- CVE-2022-22461:  IBM Security Verify Governance, Identity Manager 10.0.1 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 225007. \n\n- CVE-2022-22462:  IBM Security Verify Governance, Identity Manager virtual appliance component 10.0.1 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 225078. \n\n- CVE-2022-22559: Dell PowerScale OneFS, version 9.3.0, contains a use of a broken or risky cryptographic algorithm. An unprivileged network attacker could exploit this vulnerability, leading to the potential for information disclosure.\n\n- CVE-2022-22564: Dell EMC Unity versions before 5.2.0.0.5.173 , use(es) broken cryptographic algorithm. A remote unauthenticated attacker could potentially exploit this vulnerability by performing MitM attacks and let attackers obtain sensitive information. \n\n- CVE-2022-24296: Use of a Broken or Risky Cryptographic Algorithm vulnerability in Air Conditioning System G-150AD Ver. 3.21 and prior, Air Conditioning System AG-150A-A Ver. 3.21 and prior, Air Conditioning System AG-150A-J Ver. 3.21 and prior, Air Conditioning System GB-50AD Ver. 3.21 and prior, Air Conditioning System GB-50ADA-A Ver. 3.21 and prior, Air Conditioning System GB-50ADA-J Ver. 3.21 and prior, Air Conditioning System EB-50GU-A Ver. 7.10 and prior, Air Conditioning System EB-50GU-J Ver. 7.10 and prior, Air Conditioning System AE-200J Ver. 7.97 and prior, Air Conditioning System AE-200A Ver. 7.97 and prior, Air Conditioning System AE-200E Ver. 7.97 and prior, Air Conditioning System AE-50J Ver. 7.97 and prior, Air Conditioning System AE-50A Ver. 7.97 and prior, Air Conditioning System AE-50E Ver. 7.97 and prior, Air Conditioning System EW-50J Ver. 7.97 and prior, Air Conditioning System EW-50A Ver. 7.97 and prior, Air Conditioning System EW-50E Ver. 7.97 and prior, Air Conditioning System TE-200A Ver. 7.97 and prior, Air Conditioning System TE-50A Ver. 7.97 and prior and Air Conditioning System TW-50A Ver. 7.97 and prior allows a remote unauthenticated attacker to cause a disclosure of encrypted message of the air conditioning systems by sniffing encrypted communications.\n\n- CVE-2022-26854: Dell PowerScale OneFS, versions 8.2.x-9.2.x, contain risky cryptographic algorithms. A remote unprivileged malicious attacker could potentially exploit this vulnerability, leading to full system access\n\n- CVE-2022-27581: Use of a Broken or Risky Cryptographic Algorithm in SICK RFU61x firmware version <v2.25 allows a low-privileged remote attacker to decrypt the encrypted data if the user requested weak cipher suites to be used for encryption via the SSH interface. The patch and installation procedure for the firmware update is available from the responsible SICK customer contact person.\n\n- CVE-2022-28622: A potential security vulnerability has been identified in HPE StoreOnce Software. The SSH server supports weak key exchange algorithms which could lead to remote unauthorized access. HPE has made the following software update to resolve the vulnerability in HPE StoreOnce Software 4.3.2.\n\n- CVE-2022-29217: PyJWT is a Python implementation of RFC 7519. PyJWT supports multiple different JWT signing algorithms. With JWT, an attacker submitting the JWT token can choose the used signing algorithm. The PyJWT library requires that the application chooses what algorithms are supported. The application can specify `jwt.algorithms.get_default_algorithms()` to get support for all algorithms, or specify a single algorithm. The issue is not that big as `algorithms=jwt.algorithms.get_default_algorithms()` has to be used. Users should upgrade to v2.4.0 to receive a patch for this issue. As a workaround, always be explicit with the algorithms that are accepted and expected when decoding.\n\n- CVE-2022-29249: JavaEZ is a library that adds new functions to make Java easier. A weakness in JavaEZ 1.6 allows force decryption of locked text by unauthorized actors. The issue is NOT critical for non-secure applications, however may be critical in a situation where the highest levels of security are required. This issue ONLY affects v1.6 and does not affect anything pre-1.6. The vulnerability has been patched in release 1.7. Currently, there is no way to fix the issue without upgrading.\n\n- CVE-2022-30111: Due to the use of an insecure algorithm for rolling codes in MCK Smartlock 1.0, allows attackers to unlock the mechanism via replay attacks.\n\n- CVE-2022-30273: The Motorola MDLC protocol through 2022-05-02 mishandles message integrity. It supports three security modes: Plain, Legacy Encryption, and New Encryption. In Legacy Encryption mode, traffic is encrypted via the Tiny Encryption Algorithm (TEA) block-cipher in ECB mode. This mode of operation does not offer message integrity and offers reduced confidentiality above the block level, as demonstrated by an ECB Penguin attack against any block ciphers.\n\n- CVE-2022-31230: Dell PowerScale OneFS, versions 8.2.x-9.2.x, contain broken or risky cryptographic algorithm. A remote unprivileged malicious attacker could potentially exploit this vulnerability, leading to full system access.\n\n- CVE-2022-34319: IBM CICS TX 11.7 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 229463.\n\n- CVE-2022-34320:  IBM CICS TX 11.1 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 229464. \n\n- CVE-2022-34361:  IBM Sterling Secure Proxy 6.0.3 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 230522. \n\n- CVE-2022-34444:  Dell PowerScale OneFS, versions 9.2.0.x through 9.4.0.x contain an information vulnerability. A remote unauthenticated attacker may potentially exploit this vulnerability to cause data leak. \n\n- CVE-2022-34632: Rocket-Chip commit 4f8114374d8824dfdec03f576a8cd68bebce4e56 was discovered to contain insufficient cryptography via the component /rocket/RocketCore.scala.\n\n- CVE-2022-34757: A CWE-327: Use of a Broken or Risky Cryptographic Algorithm vulnerability exists where weak cipher suites can be used for the SSH connection between Easergy Pro software and the device, which may allow an attacker to observe protected communication details. Affected Products: Easergy P5 (V01.401.102 and prior)\n\n- CVE-2022-35720: IBM Sterling External Authentication Server 6.1.0 and IBM Sterling Secure Proxy 6.0.3 uses weaker than expected cryptographic algorithms during installation that could allow a local attacker to decrypt sensitive information. IBM X-Force ID: 231373.\n\n- CVE-2022-38391:  IBM Spectrum Control 5.4 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 233982. \n\n- CVE-2022-4610: A vulnerability, which was classified as problematic, has been found in Click Studios Passwordstate and Passwordstate Browser Extension Chrome. Affected by this issue is some unknown functionality. The manipulation leads to risky cryptographic algorithm. Local access is required to approach this attack. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-216272.\n\n- CVE-2022-46140: Affected devices use a weak encryption scheme to encrypt the debug zip file. This could allow an authenticated attacker to decrypt the contents of the file and retrieve debug information about the system.\n\n- CVE-2022-46832: Use of a Broken or Risky Cryptographic Algorithm in SICK RFU62x firmware version < 2.21 allows a low-privileged remote attacker to decrypt the encrypted data if the user requested weak cipher suites to be used for encryption via the SSH interface. The patch and installation procedure for the firmware update is available from the responsible SICK customer contact person.\n\n- CVE-2022-46833: Use of a Broken or Risky Cryptographic Algorithm in SICK RFU63x firmware version < v2.21 allows a low-privileged remote attacker to decrypt the encrypted data if the user requested weak cipher suites to be used for encryption via the SSH interface. The patch and installation procedure for the firmware update is available from the responsible SICK customer contact person.\n\n- CVE-2022-46834: Use of a Broken or Risky Cryptographic Algorithm in SICK RFU65x firmware version < v2.21 allows a low-privileged remote attacker to decrypt the encrypted data if the user requested weak cipher suites to be used for encryption via the SSH interface. The patch and installation procedure for the firmware update is available from the responsible SICK customer contact person.\n\nRelated Weaknesses:\n\n- CWE-693 (ChildOf)\n\n- CWE-311 (PeerOf)",
            "type": "Class",
            "source": "sparse",
            "search_source": "rootcause:weak hash function",
            "sources": [
              "base",
              "rootcause"
            ],
            "boost_factor": 3.0,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              }
            }
          },
          {
            "cwe_id": "301",
            "name": "Reflection Attack in an Authentication Protocol",
            "description": "Simple authentication protocols are subject to reflection attacks if a malicious user can use the target machine to impersonate a trusted user.",
            "score": 221.28674836113777,
            "matched_text": "CWE-301: Reflection Attack in an Authentication Protocol\n\nType: Base\n\nStatus: Draft\n\nDescription:\n\nSimple authentication protocols are subject to reflection attacks if a malicious user can use the target machine to impersonate a trusted user.\n\nExtended Details:\n\n\n\nA mutual authentication protocol requires each party to respond to a random challenge by the other party by encrypting it with a pre-shared key. Often, however, such protocols employ the same pre-shared key for communication with a number of different entities. A malicious user or an attacker can easily compromise this protocol without possessing the correct key by employing a reflection attack on the protocol.\n\n\nReflection attacks capitalize on mutual authentication schemes in order to trick the target into revealing the secret shared between it and another valid user. In a basic mutual-authentication scheme, a secret is known to both the valid user and the server; this allows them to authenticate. In order that they may verify this shared secret without sending it plainly over the wire, they utilize a Diffie-Hellman-style scheme in which they each pick a value, then request the hash of that value as keyed by the shared secret. In a reflection attack, the attacker claims to be a valid user and requests the hash of a random value from the server. When the server returns this value and requests its own value to be hashed, the attacker opens another connection to the server. This time, the hash requested by the attacker is the value which the server requested in the first connection. When the server returns this hashed value, it is used in the first connection, authenticating the attacker successfully as the impersonated valid user.\n\n\nReal-World Examples:\n\n- CVE-2005-3435: product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.\n\nTop 25 CWE Examples:\n\n- CVE-2020-26558: Bluetooth LE and BR/EDR secure pairing in Bluetooth Core Specification 2.1 through 5.2 may permit a nearby man-in-the-middle attacker to identify the Passkey used during pairing (in the Passkey authentication procedure) by reflection of the public key and the authentication evidence of the initiating device, potentially permitting this attacker to complete authenticated pairing with the responding device using the correct Passkey for the pairing session. The attack methodology determines the Passkey value one bit at a time.\n\nRelated Weaknesses:\n\n- CWE-1390 (ChildOf)\n\n- CWE-327 (PeerOf)",
            "type": "Base",
            "source": "sparse",
            "search_source": "rootcause:weak hash function",
            "sources": [
              "base",
              "rootcause"
            ],
            "boost_factor": 3.0,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              }
            }
          },
          {
            "cwe_id": "674",
            "name": "Uncontrolled Recursion",
            "description": "The product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack.",
            "score": 217.8008214263568,
            "matched_text": "CWE-674: Uncontrolled Recursion\n\nType: Class\n\nStatus: Draft\n\nAlternative Terms:\n\nStack Exhaustion\n\nStack Exhaustion\n\nStack Exhaustion\n\nDescription:\n\nThe product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack.\n\nReal-World Examples:\n\n- CVE-2007-1285: Deeply nested arrays trigger stack exhaustion.\n\n- CVE-2007-3409: Self-referencing pointers create infinite loop and resultant stack exhaustion.\n\n- CVE-2016-10707: Javascript application accidentally changes input in a way that prevents a recursive call from detecting an exit condition.\n\n- CVE-2016-3627: An attempt to recover a corrupted XML file infinite recursion protection counter was not always incremented missing the exit condition.\n\n- CVE-2019-15118: USB-audio driver's descriptor code parsing allows unlimited recursion leading to stack exhaustion.\n\nTop 25 CWE Examples:\n\n- CVE-2020-18392: Stack overflow vulnerability in parse_array Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-18898: A stack exhaustion issue in the printIFDStructure function of Exiv2 0.27 allows remote attackers to cause a denial of service (DOS) via a crafted file.\n\n- CVE-2020-36366: Stack overflow vulnerability in parse_value Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36367: Stack overflow vulnerability in parse_block Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36368: Stack overflow vulnerability in parse_statement Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36369: Stack overflow vulnerability in parse_statement_list Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36370: Stack overflow vulnerability in parse_unary Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36371: Stack overflow vulnerability in parse_mul_div_rem Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36372: Stack overflow vulnerability in parse_plus_minus Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36373: Stack overflow vulnerability in parse_shifts Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36374: Stack overflow vulnerability in parse_comparison Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36375: Stack overflow vulnerability in parse_equality Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2021-20255: A stack overflow via an infinite recursion vulnerability was found in the eepro100 i8255x device emulator of QEMU. This issue occurs while processing controller commands due to a DMA reentry issue. This flaw allows a guest user or process to consume CPU cycles or crash the QEMU process on the host, resulting in a denial of service. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-27432: OPC Foundation UA .NET Standard versions prior to 1.4.365.48 and OPC UA .NET Legacy are vulnerable to an uncontrolled recursion, which may allow an attacker to trigger a stack overflow.\n\n- CVE-2021-27434: Products with Unified Automation .NET based OPC UA Client/Server SDK Bundle: Versions V3.0.7 and prior (.NET 4.5, 4.0, and 3.5 Framework versions only) are vulnerable to an uncontrolled recursion, which may allow an attacker to trigger a stack overflow.\n\n- CVE-2021-28903: A stack overflow in libyang <= v1.0.225 can cause a denial of service through function lyxml_parse_mem(). lyxml_parse_elem() function will be called recursively, which will consume stack space and lead to crash.\n\n- CVE-2021-29615: TensorFlow is an end-to-end open source platform for machine learning. The implementation of `ParseAttrValue`(https://github.com/tensorflow/tensorflow/blob/c22d88d6ff33031aa113e48aa3fc9aa74ed79595/tensorflow/core/framework/attr_value_util.cc#L397-L453) can be tricked into stack overflow due to recursion by giving in a specially crafted input. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n- CVE-2021-30470: A flaw was found in PoDoFo 0.9.7. An uncontrolled recursive call among PdfTokenizer::ReadArray(), PdfTokenizer::GetNextVariant() and PdfTokenizer::ReadDataType() functions can lead to a stack overflow.\n\n- CVE-2021-30471: A flaw was found in PoDoFo 0.9.7. An uncontrolled recursive call in PdfNamesTree::AddToDictionary function in src/podofo/doc/PdfNamesTree.cpp can lead to a stack overflow.\n\n- CVE-2021-42697: Akka HTTP 10.1.x before 10.1.15 and 10.2.x before 10.2.7 can encounter stack exhaustion while parsing HTTP headers, which allows a remote attacker to conduct a Denial of Service attack by sending a User-Agent header with deeply nested comments.\n\n- CVE-2021-43519: Stack overflow in lua_resume of ldo.c in Lua Interpreter 5.1.0~5.4.4 allows attackers to perform a Denial of Service via a crafted script file.\n\n- CVE-2020-20213: Mikrotik RouterOs 6.44.5 (long-term tree) suffers from an stack exhaustion vulnerability in the /nova/bin/net process. An authenticated remote attacker can cause a Denial of Service due to overloading the systems CPU.\n\n- CVE-2021-38566: An issue was discovered in Foxit PDF Reader before 11.0.1 and PDF Editor before 11.0.1. It allows stack consumption during recursive processing of embedded XML nodes.\n\n- CVE-2021-3622: A flaw was found in the hivex library. This flaw allows an attacker to input a specially crafted Windows Registry (hive) file, which would cause hivex to recursively call the _get_children() function, leading to a stack overflow. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-41752: Stack overflow vulnerability in Jerryscript before commit e1ce7dd7271288be8c0c8136eea9107df73a8ce2 on Oct 20, 2021 due to an unbounded recursive call to the new opt() function.\n\n- CVE-2021-45832: A Stack-based Buffer Overflow Vulnerability exists in HDF5 1.13.1-1 at at hdf5/src/H5Eint.c, which causes a Denial of Service (context-dependent).\n\n- CVE-2021-46505: Jsish v3.5.0 was discovered to contain a stack overflow via /usr/lib/x86_64-linux-gnu/libasan.so.4+0x5b1e5.\n\n- CVE-2021-46507: Jsish v3.5.0 was discovered to contain a stack overflow via Jsi_LogMsg at src/jsiUtils.c.\n\n- CVE-2021-46509: Cesanta MJS v2.20.0 was discovered to contain a stack overflow via snquote at mjs/src/mjs_json.c.\n\n- CVE-2022-20382: In (TBD) of (TBD), there is a possible out of bounds write due to kernel stack overflow. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-214245176References: Upstream kernel\n\n- CVE-2022-21708: graphql-go is a GraphQL server with a focus on ease of use. In versions prior to 1.3.0 there exists a DoS vulnerability that is possible due to a bug in the library that would allow an attacker with specifically designed queries to cause stack overflow panics. Any user with access to the GraphQL handler can send these queries and cause stack overflows. This in turn could potentially compromise the ability of the server to serve data to its users. The issue has been patched in version `v1.3.0`. The only known workaround for this issue is to disable the `graphql.MaxDepth` option from your schema which is not recommended.\n\n- CVE-2022-23591: Tensorflow is an Open Source Machine Learning Framework. The `GraphDef` format in TensorFlow does not allow self recursive functions. The runtime assumes that this invariant is satisfied. However, a `GraphDef` containing a fragment such as the following can be consumed when loading a `SavedModel`. This would result in a stack overflow during execution as resolving each `NodeDef` means resolving the function itself and its nodes. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n- CVE-2022-24675: encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.\n\n- CVE-2022-31019: Vapor is a server-side Swift HTTP web framework. When using automatic content decoding an attacker can craft a request body that can make the server crash with the following request: `curl -d \"array[_0][0][array][_0][0][array]$(for f in $(seq 1100); do echo -n '[_0][0][array]'; done)[string][_0]=hello%20world\" http://localhost:8080/foo`. The issue is unbounded, attacker controlled stack growth which will at some point lead to a stack overflow and a process crash. This issue has been fixed in version 4.61.1.\n\n- CVE-2022-31099: rulex is a new, portable, regular expression language. When parsing untrusted rulex expressions, the stack may overflow, possibly enabling a Denial of Service attack. This happens when parsing an expression with several hundred levels of nesting, causing the process to abort immediately. This is a security concern for you, if your service parses untrusted rulex expressions (expressions provided by an untrusted user), and your service becomes unavailable when the process running rulex aborts due to a stack overflow. The crash is fixed in version **0.4.3**. Affected users are advised to update to this version. There are no known workarounds for this issue.\n\n- CVE-2022-3216: A vulnerability has been found in Nintendo Game Boy Color and classified as problematic. This vulnerability affects unknown code of the component Mobile Adapter GB. The manipulation leads to memory corruption. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-208606 is the identifier assigned to this vulnerability.\n\n- CVE-2022-38334: XPDF v4.04 and earlier was discovered to contain a stack overflow via the function Catalog::countPageTree() at Catalog.cc.\n\n- CVE-2022-41966: XStream serializes Java objects to XML and back again. Versions prior to 1.4.20 may allow a remote attacker to terminate the application with a stack overflow error, resulting in a denial of service only via manipulation the processed input stream. The attack uses the hash code implementation for collections and maps to force recursive hash calculation causing a stack overflow. This issue is patched in version 1.4.20 which handles the stack overflow and raises an InputManipulationException instead. A potential workaround for users who only use HashMap or HashSet and whose XML refers these only as default map or set, is to change the default implementation of java.util.Map and java.util per the code example in the referenced advisory. However, this implies that your application does not care about the implementation of the map and all elements are comparable.\n\n- CVE-2022-47662: GPAC MP4Box 2.1-DEV-rev649-ga8f438d20 has a segment fault (/stack overflow) due to infinite recursion in Media_GetSample isomedia/media.c:662\n\n- CVE-2022-23460: Jsonxx or Json++ is a JSON parser, writer and reader written in C++. In affected versions of jsonxx json parsing may lead to stack exhaustion in an address sanitized (ASAN) build. This issue may lead to Denial of Service if the program using the jsonxx library crashes. This issue exists on the current commit of the jsonxx project and the project itself has been archived. Updates are not expected. Users are advised to find a replacement.\n\n- CVE-2022-23606: Envoy is an open source edge and service proxy, designed for cloud-native applications. When a cluster is deleted via Cluster Discovery Service (CDS) all idle connections established to endpoints in that cluster are disconnected. A recursion was introduced in the procedure of disconnecting idle connections that can lead to stack exhaustion and abnormal process termination when a cluster has a large number of idle connections. This infinite recursion causes Envoy to crash. Users are advised to upgrade.\n\n- CVE-2022-24921: regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.\n\n- CVE-2022-25313: In Expat (aka libexpat) before 2.4.5, an attacker can trigger stack exhaustion in build_model via a large nesting depth in the DTD element.\n\n- CVE-2022-27810: It was possible to trigger an infinite recursion condition in the error handler when Hermes executed specific maliciously formed JavaScript. This condition was only possible to trigger in dev-mode (when asserts were enabled). This issue affects Hermes versions prior to v0.12.0.\n\n- CVE-2022-28201: An issue was discovered in MediaWiki before 1.35.6, 1.36.x before 1.36.4, and 1.37.x before 1.37.2. Users with the editinterface permission can trigger infinite recursion, because a bare local interwiki is mishandled for the mainpage message.\n\n- CVE-2022-28773: Due to an uncontrolled recursion in SAP Web Dispatcher and SAP Internet Communication Manager, the application may crash, leading to denial of service, but can be restarted automatically. \n\n- CVE-2022-31173: Juniper is a GraphQL server library for Rust. Affected versions of Juniper are vulnerable to uncontrolled recursion resulting in a program crash. This issue has been addressed in version 0.15.10. Users are advised to upgrade. Users unable to upgrade should limit the recursion depth manually.\n\n- CVE-2022-37315: graphql-go (aka GraphQL for Go) through 0.8.0 has infinite recursion in the type definition parser.\n\n- CVE-2022-41881: Netty project is an event-driven asynchronous network application framework. In versions prior to 4.1.86.Final, a StackOverflowError can be raised when parsing a malformed crafted message due to an infinite recursion. This issue is patched in version 4.1.86.Final. There is no workaround, except using a custom HaProxyMessageDecoder.\n\n- CVE-2022-27943: libiberty/rust-demangle.c in GNU GCC 11.2 allows stack consumption in demangle_const, as demonstrated by nm-new.\n\n- CVE-2022-40150: Those using Jettison to parse untrusted XML or JSON data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by Out of memory. This effect may support a denial of service attack.\n\nRelated Weaknesses:\n\n- CWE-834 (ChildOf)",
            "type": "Class",
            "source": "sparse",
            "search_source": "rootcause:weak hash function",
            "sources": [
              "base",
              "rootcause"
            ],
            "boost_factor": 3.0,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              }
            }
          },
          {
            "cwe_id": "836",
            "name": "Use of Password Hash Instead of Password for Authentication",
            "description": "The product records password hashes in a data store, receives a hash of a password from a client, and compares the supplied hash to the hash obtained from the data store.",
            "score": 214.51105573266688,
            "matched_text": "CWE-836: Use of Password Hash Instead of Password for Authentication\n\nType: Base\n\nStatus: Incomplete\n\nDescription:\n\nThe product records password hashes in a data store, receives a hash of a password from a client, and compares the supplied hash to the hash obtained from the data store.\n\nExtended Details:\n\n\n\nSome authentication mechanisms rely on the client to generate the hash for a password, possibly to reduce load on the server or avoid sending the password across the network. However, when the client is used to generate the hash, an attacker can bypass the authentication by obtaining a copy of the hash, e.g. by using SQL injection to compromise a database of authentication credentials, or by exploiting an information exposure. The attacker could then use a modified client to replay the stolen hash without having knowledge of the original password.\n\n\nAs a result, the server-side comparison against a client-side hash does not provide any more security than the use of passwords without hashing.\n\n\nReal-World Examples:\n\n- CVE-2009-1283: Product performs authentication with user-supplied password hashes that can be obtained from a separate SQL injection vulnerability (CVE-2009-1282).\n\n- CVE-2005-3435: Product allows attackers to bypass authentication by obtaining the password hash for another user and specifying the hash in the pwd argument.\n\nTop 25 CWE Examples:\n\n- CVE-2021-23857: Login with hash: The login routine allows the client to log in to the system not by using the password, but by using the hash of the password. Combined with CVE-2021-23858, this allows an attacker to subsequently login to the system.\n\n- CVE-2021-36460: VeryFitPro (com.veryfit2hr.second) 3.2.8 hashes the account's password locally on the device and uses the hash to authenticate in all communication with the backend API, including login, registration and changing of passwords. This allows an attacker in possession of a hash to takeover a user's account, rendering the benefits of storing hashed passwords in the database useless.\n\n- CVE-2021-45036:  Velneo vClient on its 28.1.3 version, could allow an attacker with knowledge of the victims's username and hashed password to spoof the victim's id against the server. \n\n- CVE-2022-25155: Use of Password Hash Instead of Password for Authentication vulnerability in Mitsubishi Electric MELSEC iQ-F series FX5U(C) CPU all versions, Mitsubishi Electric MELSEC iQ-F series FX5UJ CPU all versions, Mitsubishi Electric MELSEC iQ-R series R00/01/02CPU all versions, Mitsubishi Electric MELSEC iQ-R series R04/08/16/32/120(EN)CPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120SFCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PSFCPU all versions, Mitsubishi Electric MELSEC iQ-R series RJ71GN11-T2 all versions, Mitsubishi Electric MELSEC iQ-R series RJ71GN11-EIP all versions, Mitsubishi Electric MELSEC iQ-R series RJ71C24(-R2/R4) all versions, Mitsubishi Electric MELSEC iQ-R series RJ71EN71 all versions, Mitsubishi Electric MELSEC iQ-R series RJ72GF15-T2 all versions, Mitsubishi Electric MELSEC Q series Q03UDECPU all versions, Mitsubishi Electric MELSEC Q series Q04/06/10/13/20/26/50/100UDEHCPU all versions, Mitsubishi Electric MELSEC Q series Q03/04/06/13/26UDVCPU all versions, Mitsubishi Electric MELSEC Q series Q04/06/13/26UDPVCPU all versions, Mitsubishi Electric MELSEC Q series QJ71C24N(-R2/R4) all versions, Mitsubishi Electric MELSEC Q series QJ71E71-100 all versions, Mitsubishi Electric MELSEC Q series QJ72BR15 all versions, Mitsubishi Electric MELSEC Q series QJ72LP25(-25/G/GE) all versions, Mitsubishi Electric MELSEC L series L02/06/26CPU(-P) all versions, Mitsubishi Electric MELSEC L series L26CPU-(P)BT all versions, Mitsubishi Electric MELSEC L series LJ71C24(-R2) all versions, Mitsubishi Electric MELSEC L series LJ71E71-100 all versions and Mitsubishi Electric MELSEC L series LJ72GF15-T2 all versions allows a remote unauthenticated attacker to login to the product by replaying an eavesdropped password hash.\n\n- CVE-2022-25157: Use of Password Hash Instead of Password for Authentication vulnerability in Mitsubishi Electric MELSEC iQ-F series FX5U(C) CPU all versions, Mitsubishi Electric MELSEC iQ-F series FX5UJ CPU all versions, Mitsubishi Electric MELSEC iQ-R series R00/01/02CPU all versions, Mitsubishi Electric MELSEC iQ-R series R04/08/16/32/120(EN)CPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120SFCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PSFCPU all versions, Mitsubishi Electric MELSEC iQ-R series R16/32/64MTCPU all versions, Mitsubishi Electric MELSEC iQ-R series RJ71C24(-R2/R4) all versions, Mitsubishi Electric MELSEC iQ-R series RJ71EN71 all versions, Mitsubishi Electric MELSEC iQ-R series RJ71GF11-T2 all versions, Mitsubishi Electric MELSEC iQ-R series RJ71GP21(S)-SX all versions, Mitsubishi Electric MELSEC iQ-R series RJ72GF15-T2 all versions, Mitsubishi Electric MELSEC Q series Q03UDECPU all versions, Mitsubishi Electric MELSEC Q series Q04/06/10/13/20/26/50/100UDEHCPU all versions, Mitsubishi Electric MELSEC Q series Q03/04/06/13/26UDVCPU all versions, Mitsubishi Electric MELSEC Q series Q04/06/13/26UDPVCPU all versions, Mitsubishi Electric MELSEC Q series QJ71C24N(-R2/R4) all versions, Mitsubishi Electric MELSEC Q series QJ71E71-100 all versions, Mitsubishi Electric MELSEC L series L02/06/26CPU(-P) all versions, Mitsubishi Electric MELSEC L series L26CPU-(P)BT all versions, Mitsubishi Electric MELSEC L series LJ71C24(-R2) all versions, Mitsubishi Electric MELSEC L series LJ71E71-100 all versions and Mitsubishi Electric MELSEC L series LJ72GF15-T2 all versions allows a remote unauthenticated attacker to disclose or tamper with the information in the product by using an eavesdropped password hash.\n\n- CVE-2022-32282: An improper password check exists in the login functionality of WWBN AVideo 11.6 and dev master commit 3f7c0364. An attacker that owns a users' password hash will be able to use it to directly login into the account, leading to increased privileges.\n\nRelated Weaknesses:\n\n- CWE-1390 (ChildOf)\n\n- CWE-602 (PeerOf)",
            "type": "Base",
            "source": "sparse",
            "search_source": "rootcause:weak hash function",
            "sources": [
              "base",
              "rootcause"
            ],
            "boost_factor": 3.0,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              }
            }
          },
          {
            "cwe_id": "1240",
            "name": "Use of a Cryptographic Primitive with a Risky Implementation",
            "description": "To fulfill the need for a cryptographic primitive, the product implements a cryptographic algorithm using a non-standard, unproven, or disallowed/non-compliant cryptographic implementation.",
            "score": 212.37197720097376,
            "matched_text": "CWE-1240: Use of a Cryptographic Primitive with a Risky Implementation\n\nType: Base\n\nStatus: Draft\n\nDescription:\n\nTo fulfill the need for a cryptographic primitive, the product implements a cryptographic algorithm using a non-standard, unproven, or disallowed/non-compliant cryptographic implementation.\n\nExtended Details:\n\n\n\nCryptographic protocols and systems depend on cryptographic primitives (and associated algorithms) as their basic building blocks. Some common examples of primitives are digital signatures, one-way hash functions, ciphers, and public key cryptography; however, the notion of \"primitive\" can vary depending on point of view. See \"Terminology Notes\" for further explanation of some concepts.\n\n\nCryptographic primitives are defined to accomplish one very specific task in a precisely defined and mathematically reliable fashion. For example, suppose that for a specific cryptographic primitive (such as an encryption routine), the consensus is that the primitive can only be broken after trying out N different inputs (where the larger the value of N, the stronger the cryptography). For an encryption scheme like AES-256, one would expect N to be so large as to be infeasible to execute in a reasonable amount of time.\n\n\nIf a vulnerability is ever found that shows that one can break a cryptographic primitive in significantly less than the expected number of attempts, then that primitive is considered weakened (or sometimes in extreme cases, colloquially it is \"broken\"). As a result, anything using this cryptographic primitive would now be considered insecure or risky. Thus, even breaking or weakening a seemingly small cryptographic primitive has the potential to render the whole system vulnerable, due to its reliance on the primitive. A historical example can be found in TLS when using DES. One would colloquially call DES the cryptographic primitive for transport encryption in this version of TLS. In the past, DES was considered strong, because no weaknesses were found in it; importantly, DES has a key length of 56 bits. Trying N=2^56 keys was considered impractical for most actors. Unfortunately, attacking a system with 56-bit keys is now practical via brute force, which makes defeating DES encryption practical. It is now practical for an adversary to read any information sent under this version of TLS and use this information to attack the system. As a result, it can be claimed that this use of TLS is weak, and that any system depending on TLS with DES could potentially render the entire system vulnerable to attack.\n\n\nCryptographic primitives and associated algorithms are only considered safe after extensive research and review from experienced cryptographers from academia, industry, and government entities looking for any possible flaws. Furthermore, cryptographic primitives and associated algorithms are frequently reevaluated for safety when new mathematical and attack techniques are discovered. As a result and over time, even well-known cryptographic primitives can lose their compliance status with the discovery of novel attacks that might either defeat the algorithm or reduce its robustness significantly.\n\n\nIf ad-hoc cryptographic primitives are implemented, it is almost certain that the implementation will be vulnerable to attacks that are well understood by cryptographers, resulting in the exposure of sensitive information and other consequences.\n\n\nThis weakness is even more difficult to manage for hardware-implemented deployment of cryptographic algorithms. First, because hardware is not patchable as easily as software, any flaw discovered after release and production typically cannot be fixed without a recall of the product. Secondly, the hardware product is often expected to work for years, during which time computation power available to the attacker only increases. Therefore, for hardware implementations of cryptographic primitives, it is absolutely essential that only strong, proven cryptographic primitives are used.\n\n\nReal-World Examples:\n\n- CVE-2020-4778: software uses MD5, which is less safe than the default SHA-256 used by related products\n\n- CVE-2005-2946: Default configuration of product uses MD5 instead of stronger algorithms that are available, simplifying forgery of certificates.\n\n- CVE-2019-3907: identity card uses MD5 hash of a salt and password\n\n- CVE-2021-34687: personal key is transmitted over the network using a substitution cipher\n\n- CVE-2020-14254: product does not disable TLS-RSA cipher suites, allowing decryption of traffic if TLS 2.0 and secure ciphers are not enabled.\n\n- CVE-2019-1543: SSL/TLS library generates 16-byte nonces but reduces them to 12 byte nonces for the ChaCha20-Poly1305 cipher, converting them in a way that violates the cipher's requirements for unique nonces.\n\n- CVE-2017-9267: LDAP interface allows use of weak ciphers\n\n- CVE-2017-7971: SCADA product allows \"use of outdated cipher suites\"\n\n- CVE-2020-6616: Chip implementing Bluetooth uses a low-entropy PRNG instead of a hardware RNG, allowing spoofing.\n\n- CVE-2019-1715: security product has insufficient entropy in the DRBG, allowing collisions and private key discovery\n\n- CVE-2014-4192: Dual_EC_DRBG implementation in RSA toolkit does not correctly handle certain byte requests, simplifying plaintext recovery\n\n- CVE-2007-6755: Recommendation for Dual_EC_DRBG algorithm contains point Q constants that could simplify decryption\n\nTop 25 CWE Examples:\n\n- CVE-2021-34687: iDrive RemotePC before 7.6.48 on Windows allows information disclosure. A man in the middle can recover a system's Personal Key when a client attempts to make a LAN connection. The Personal Key is transmitted over the network while only being encrypted via a substitution cipher.\n\nRelated Weaknesses:\n\n- CWE-327 (ChildOf)",
            "type": "Base",
            "source": "sparse",
            "search_source": "rootcause:weak hash function",
            "sources": [
              "base",
              "rootcause"
            ],
            "boost_factor": 3.0,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              }
            }
          },
          {
            "cwe_id": "770",
            "name": "Allocation of Resources Without Limits or Throttling",
            "description": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
            "score": 67.00924514121934,
            "matched_text": "CWE-770: Allocation of Resources Without Limits or Throttling\n\nType: Base\n\nStatus: Incomplete\n\nDescription:\n\nThe product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.\n\nExtended Details:\n\n\n\nCode frequently has to work with limited resources, so programmers must be careful to ensure that resources are not consumed too quickly, or too easily. Without use of quotas, resource limits, or other protection mechanisms, it can be easy for an attacker to consume many resources by rapidly making many requests, or causing larger resources to be used than is needed. When too many resources are allocated, or if a single resource is too large, then it can prevent the code from working correctly, possibly leading to a denial of service.\n\n\nReal-World Examples:\n\n- CVE-2022-21668: Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190).\n\n- CVE-2009-4017: Language interpreter does not restrict the number of temporary files being created when handling a MIME request with a large number of parts..\n\n- CVE-2009-2726: Driver does not use a maximum width when invoking sscanf style functions, causing stack consumption.\n\n- CVE-2009-2540: Large integer value for a length property in an object causes a large amount of memory allocation.\n\n- CVE-2009-2054: Product allows exhaustion of file descriptors when processing a large number of TCP packets.\n\n- CVE-2008-5180: Communication product allows memory consumption with a large number of SIP requests, which cause many sessions to be created.\n\n- CVE-2008-1700: Product allows attackers to cause a denial of service via a large number of directives, each of which opens a separate window.\n\n- CVE-2005-4650: CMS does not restrict the number of searches that can occur simultaneously, leading to resource exhaustion.\n\n- CVE-2020-15100: web application scanner attempts to read an excessively large file created by a user, causing process termination\n\n- CVE-2020-7218: Go-based workload orchestrator does not limit resource usage with unauthenticated connections, allowing a DoS by flooding the service\n\nTop 25 CWE Examples:\n\n- CVE-2020-19463: An issue has been found in function vfprintf in PDF2JSON 0.70 that allows attackers to cause a Denial of Service due to a stack overflow.\n\n- CVE-2020-19464: An issue has been found in function XRef::fetch in PDF2JSON 0.70 that allows attackers to cause a Denial of Service due to a stack overflow .\n\n- CVE-2021-29324: OpenSource Moddable v10.5.0 was discovered to contain a stack overflow via the component /moddable/xs/sources/xsScript.c.\n\n- CVE-2021-29329: OpenSource Moddable v10.5.0 was discovered to contain a stack overflow in the fxBinaryExpressionNodeDistribute function at /moddable/xs/sources/xsTree.c.\n\n- CVE-2021-41800: MediaWiki before 1.36.2 allows a denial of service (resource consumption because of lengthy query processing time). Visiting Special:Contributions can sometimes result in a long running SQL query because PoolCounter protection is mishandled.\n\n- CVE-2021-35492: Wowza Streaming Engine through 4.8.11+5 could allow an authenticated, remote attacker to exhaust filesystem resources via the /enginemanager/server/vhost/historical.jsdata vhost parameter. This is due to the insufficient management of available filesystem resources. An attacker could exploit this vulnerability through the Virtual Host Monitoring section by requesting random virtual-host historical data and exhausting available filesystem resources. A successful exploit could allow the attacker to cause database errors and cause the device to become unresponsive to web-based management. (Manual intervention is required to free filesystem resources and return the application to an operational state.)\n\n- CVE-2021-22174: Crash in USB HID dissector in Wireshark 3.4.0 to 3.4.2 allows denial of service via packet injection or crafted capture file\n\n- CVE-2020-22785: Etherpad < 1.8.3 is affected by a missing lock check which could cause a denial of service. Aggressively targeting random pad import endpoints with empty data would flatten all pads due to lack of rate limiting and missing ownership check.\n\n- CVE-2021-33831: api/account/register in the TH Wildau COVID-19 Contact Tracing application through 2021-09-01 has Incorrect Access Control. An attacker can interfere with tracing of infection chains by creating 500 random users within 2500 seconds.\n\n- CVE-2020-28200: The Sieve engine in Dovecot before 2.3.15 allows Uncontrolled Resource Consumption, as demonstrated by a situation with a complex regular expression for the regex extension.\n\n- CVE-2021-41591: ACINQ Eclair before 0.6.3 allows loss of funds because of dust HTLC exposure.\n\n- CVE-2021-41592: Blockstream c-lightning through 0.10.1 allows loss of funds because of dust HTLC exposure.\n\n- CVE-2021-41593: Lightning Labs lnd before 0.13.3-beta allows loss of funds because of dust HTLC exposure.\n\n- CVE-2020-24821: A vulnerability in the dwarf::cursor::skip_form function of Libelfin v0.3 allows attackers to cause a denial of service (DOS) through a segmentation fault via a crafted ELF file.\n\n- CVE-2020-24822: A vulnerability in the dwarf::cursor::uleb function of Libelfin v0.3 allows attackers to cause a denial of service (DOS) through a segmentation fault via a crafted ELF file.\n\n- CVE-2020-24823: A vulnerability in the dwarf::to_string function of Libelfin v0.3 allows attackers to cause a denial of service (DOS) through a segmentation fault via a crafted ELF file.\n\n- CVE-2020-24825: A vulnerability in the line_table::line_table function of Libelfin v0.3 allows attackers to cause a denial of service (DOS) through a segmentation fault via a crafted ELF file.\n\n- CVE-2020-24826: A vulnerability in the elf::section::as_strtab function of Libelfin v0.3 allows attackers to cause a denial of service (DOS) through a segmentation fault via a crafted ELF file.\n\n- CVE-2021-0217: A vulnerability in processing of certain DHCP packets from adjacent clients on EX Series and QFX Series switches running Juniper Networks Junos OS with DHCP local/relay server configured may lead to exhaustion of DMA memory causing a Denial of Service (DoS). Over time, exploitation of this vulnerability may cause traffic to stop being forwarded, or to crashing of the fxpc process. When Packet DMA heap utilization reaches 99%, the system will become unstable. Packet DMA heap utilization can be monitored through the following command: user@junos# request pfe execute target fpc0 timeout 30 command \"show heap\" ID Base Total(b) Free(b) Used(b) % Name -- ---------- ----------- ----------- ----------- --- ----------- 0 213301a8 536870488 387228840 149641648 27 Kernel 1 91800000 8388608 3735120 4653488 55 DMA 2 92000000 75497472 74452192 1045280 1 PKT DMA DESC 3 d330000 335544320 257091400 78452920 23 Bcm_sdk 4 96800000 184549376 2408 184546968 99 Packet DMA <--- 5 903fffe0 20971504 20971504 0 0 Blob An indication of the issue occurring may be observed through the following log messages: Dec 10 08:07:00.124 2020 hostname fpc0 brcm_pkt_buf_alloc:523 (buf alloc) failed allocating packet buffer Dec 10 08:07:00.126 2020 hostname fpc0 (buf alloc) failed allocating packet buffer Dec 10 08:07:00.128 2020 hostname fpc0 brcm_pkt_buf_alloc:523 (buf alloc) failed allocating packet buffer Dec 10 08:07:00.130 2020 hostnameC fpc0 (buf alloc) failed allocating packet buffer This issue affects Juniper Networks Junos OS on EX Series and QFX Series: 17.4R3 versions prior to 17.4R3-S3; 18.1R3 versions between 18.1R3-S6 and 18.1R3-S11; 18.2R3 versions prior to 18.2R3-S6; 18.3R3 versions prior to 18.3R3-S4; 18.4R2 versions prior to 18.4R2-S5; 18.4R3 versions prior to 18.4R3-S6; 19.1 versions between 19.1R2 and 19.1R3-S3; 19.2 versions prior to 19.2R3-S1; 19.3 versions prior to 19.3R2-S5, 19.3R3; 19.4 versions prior to 19.4R2-S2, 19.4R3; 20.1 versions prior to 20.1R2; 20.2 versions prior to 20.2R1-S2, 20.2R2. Junos OS versions prior to 17.4R3 are unaffected by this vulnerability.\n\n- CVE-2021-0242: A vulnerability due to the improper handling of direct memory access (DMA) buffers on EX4300 switches on Juniper Networks Junos OS allows an attacker sending specific unicast frames to trigger a Denial of Service (DoS) condition by exhausting DMA buffers, causing the FPC to crash and the device to restart. The DMA buffer leak is seen when receiving these specific, valid unicast frames on an interface without Layer 2 Protocol Tunneling (L2PT) or dot1x configured. Interfaces with either L2PT or dot1x configured are not vulnerable to this issue. When this issue occurs, DMA buffer usage keeps increasing and the following error log messages may be observed: Apr 14 14:29:34.360 /kernel: pid 64476 (pfex_junos), uid 0: exited on signal 11 (core dumped) Apr 14 14:29:33.790 init: pfe-manager (PID 64476) terminated by signal number 11. Core dumped! The DMA buffers on the FPC can be monitored by the executing vty command 'show heap': ID Base Total(b) Free(b) Used(b) % Name -- ---------- ----------- ----------- ----------- --- ----------- 0 4a46000 268435456 238230496 30204960 11 Kernel 1 18a46000 67108864 17618536 49490328 73 Bcm_sdk 2 23737000 117440512 18414552 99025960 84 DMA buf <<<<< keeps increasing 3 2a737000 16777216 16777216 0 0 DMA desc This issue affects Juniper Networks Junos OS on the EX4300: 17.3 versions prior to 17.3R3-S11; 17.4 versions prior to 17.4R2-S13, 17.4R3-S4; 18.1 versions prior to 18.1R3-S12; 18.2 versions prior to 18.2R2-S8, 18.2R3-S7; 18.3 versions prior to 18.3R3-S4; 18.4 versions prior to 18.4R1-S8, 18.4R2-S7, 18.4R3-S7; 19.1 versions prior to 19.1R1-S6, 19.1R2-S2, 19.1R3-S4; 19.2 versions prior to 19.2R1-S6, 19.2R3-S2; 19.3 versions prior to 19.3R3-S2; 19.4 versions prior to 19.4R2-S3, 19.4R3-S1; 20.1 versions prior to 20.1R2; 20.2 versions prior to 20.2R2-S1, 20.2R3; 20.3 versions prior to 20.3R1-S1, 20.3R2.\n\n- CVE-2021-0338: In SystemSettingsValidators, there is a possible permanent denial of service due to missing bounds checks on UI settings. This could lead to local denial of service with User execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11Android ID: A-156260178\n\n- CVE-2021-0420: In memory management driver, there is a possible system crash due to a missing bounds check. This could lead to local denial of service with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS05403499; Issue ID: ALPS05381065.\n\n- CVE-2021-0422: In memory management driver, there is a possible system crash due to a missing bounds check. This could lead to local denial of service with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS05403499; Issue ID: ALPS05381071.\n\n- CVE-2021-0424: In memory management driver, there is a possible system crash due to a missing bounds check. This could lead to local denial of service with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS05403499; Issue ID: ALPS05393787.\n\n- CVE-2021-20185: It was found in Moodle before version 3.10.1, 3.9.4, 3.8.7 and 3.5.16 that messaging did not impose a character limit when sending messages, which could result in client-side (browser) denial of service for users receiving very large messages.\n\n- CVE-2021-29430: Sydent is a reference Matrix identity server. Sydent does not limit the size of requests it receives from HTTP clients. A malicious user could send an HTTP request with a very large body, leading to memory exhaustion and denial of service. Sydent also does not limit response size for requests it makes to remote Matrix homeservers. A malicious homeserver could return a very large response, again leading to memory exhaustion and denial of service. This affects any server which accepts registration requests from untrusted clients. This issue has been patched by releases 89071a1, 0523511, f56eee3. As a workaround request sizes can be limited in an HTTP reverse-proxy. There are no known workarounds for the problem with overlarge responses.\n\n- CVE-2021-29932: An issue was discovered in the parse_duration crate through 2021-03-18 for Rust. It allows attackers to cause a denial of service (CPU and memory consumption) via a duration string with a large exponent.\n\n- CVE-2021-32699: Wings is the control plane software for the open source Pterodactyl game management system. All versions of Pterodactyl Wings prior to `1.4.4` are vulnerable to system resource exhaustion due to improper container process limits being defined. A malicious user can consume more resources than intended and cause downstream impacts to other clients on the same hardware, eventually causing the physical server to stop responding. Users should upgrade to `1.4.4` to mitigate the issue. There is no non-code based workaround for impacted versions of the software. Users running customized versions of this software can manually set a PID limit for containers created.\n\n- CVE-2021-3478: There's a flaw in OpenEXR's scanline input file functionality in versions before 3.0.0-beta. An attacker able to submit a crafted file to be processed by OpenEXR could consume excessive system memory. The greatest impact of this flaw is to system availability.\n\n- CVE-2021-38463: The affected product does not properly control the allocation of resources. A user may be able to allocate unlimited memory buffers using API functions.\n\n- CVE-2021-38465: The webinstaller is a Golang web server executable that enables the generation of an Auvesy image agent. Resource consumption can be achieved by generating large amounts of installations, which are then saved without limitation in the temp folder of the webinstaller executable.\n\n- CVE-2021-3912: OctoRPKI tries to load the entire contents of a repository in memory, and in the case of a GZIP bomb, unzip it in memory, making it possible to create a repository that makes OctoRPKI run out of memory (and thus crash).\n\n- CVE-2021-41546: A vulnerability has been identified in RUGGEDCOM ROX MX5000 (All versions < V2.14.1), RUGGEDCOM ROX RX1400 (All versions < V2.14.1), RUGGEDCOM ROX RX1500 (All versions < V2.14.1), RUGGEDCOM ROX RX1501 (All versions < V2.14.1), RUGGEDCOM ROX RX1510 (All versions < V2.14.1), RUGGEDCOM ROX RX1511 (All versions < V2.14.1), RUGGEDCOM ROX RX1512 (All versions < V2.14.1), RUGGEDCOM ROX RX1524 (All versions < V2.14.1), RUGGEDCOM ROX RX1536 (All versions < V2.14.1), RUGGEDCOM ROX RX5000 (All versions < V2.14.1). Affected devices write crashdumps without checking if enough space is available on the filesystem. Once the crashdump fills the entire root filesystem, affected devices fail to boot successfully. An attacker can leverage this vulnerability to cause a permanent Denial-of-Service.\n\n- CVE-2021-21274: Synapse is a Matrix reference homeserver written in python (pypi package matrix-synapse). Matrix is an ecosystem for open federated Instant Messaging and VoIP. In Synapse before version 1.25.0, a malicious homeserver could redirect requests to their .well-known file to a large file. This can lead to a denial of service attack where homeservers will consume significantly more resources when requesting the .well-known file of a malicious homeserver. This affects any server which accepts federation requests from untrusted servers. Issue is resolved in version 1.25.0. As a workaround the `federation_domain_whitelist` setting can be used to restrict the homeservers communicated with over federation.\n\n- CVE-2021-21294: Http4s (http4s-blaze-server) is a minimal, idiomatic Scala interface for HTTP services. Http4s before versions 0.21.17, 0.22.0-M2, and 1.0.0-M14 have a vulnerability which can lead to a denial-of-service. Blaze-core, a library underlying http4s-blaze-server, accepts connections unboundedly on its selector pool. This has the net effect of amplifying degradation in services that are unable to handle their current request load, since incoming connections are still accepted and added to an unbounded queue. Each connection allocates a socket handle, which drains a scarce OS resource. This can also confound higher level circuit breakers which work based on detecting failed connections. http4s provides a general \"MaxActiveRequests\" middleware mechanism for limiting open connections, but it is enforced inside the Blaze accept loop, after the connection is accepted and the socket opened. Thus, the limit only prevents the number of connections which can be simultaneously processed, not the number of connections which can be held open. In 0.21.17, 0.22.0-M2, and 1.0.0-M14, a new \"maxConnections\" property, with a default value of 1024, has been added to the `BlazeServerBuilder`. Setting the value to a negative number restores unbounded behavior, but is strongly disrecommended. The NIO2 backend does not respect `maxConnections`. Its use is now deprecated in http4s-0.21, and the option is removed altogether starting in http4s-0.22. There are several possible workarounds described in the refrenced GitHub Advisory GHSA-xhv5-w9c5-2r2w.\n\n- CVE-2021-23053: On version 15.1.x before 15.1.3, 14.1.x before 14.1.3.1, and 13.1.x before 13.1.3.6, when the brute force protection feature of BIG-IP Advanced WAF or BIG-IP ASM is enabled on a virtual server and the virtual server is under brute force attack, the MySQL database may run out of disk space due to lack of row limit on undisclosed tables in the MYSQL database. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2021-41167: modern-async is an open source JavaScript tooling library for asynchronous operations using async/await and promises. In affected versions a bug affecting two of the functions in this library: forEachSeries and forEachLimit. They should limit the concurrency of some actions but, in practice, they don't. Any code calling these functions will be written thinking they would limit the concurrency but they won't. This could lead to potential security issues in other projects. The problem has been patched in 1.0.4. There is no workaround.\n\n- CVE-2021-42262: An issue was discovered in Softing OPC UA C++ SDK before 5.70. An invalid XML element in the type dictionary makes the OPC/UA client crash due to an out-of-memory condition.\n\n- CVE-2020-35210: A vulnerability in Atomix v3.1.5 allows attackers to cause a denial of service (DoS) via a Raft session flooding attack using Raft OpenSessionRequest messages.\n\n- CVE-2021-32476: A denial-of-service risk was identified in the draft files area, due to it not respecting user file upload limits. Moodle versions 3.10 to 3.10.3, 3.9 to 3.9.6, 3.8 to 3.8.8, 3.5 to 3.5.17 and earlier unsupported versions are affected.\n\n- CVE-2021-43662: totolink EX300_v2, ver V4.0.3c.140_B20210429 and A720R ,ver V4.1.5cu.470_B20200911 have an issue which causes uncontrolled resource consumption.\n\n- CVE-2020-3566: A vulnerability in the Distance Vector Multicast Routing Protocol (DVMRP) feature of Cisco IOS XR Software could allow an unauthenticated, remote attacker to exhaust process memory of an affected device. The vulnerability is due to insufficient queue management for Internet Group Management Protocol (IGMP) packets. An attacker could exploit this vulnerability by sending crafted IGMP traffic to an affected device. A successful exploit could allow the attacker to cause memory exhaustion, resulting in instability of other processes. These processes may include, but are not limited to, interior and exterior routing protocols. Cisco will release software updates that address this vulnerability.\n\n- CVE-2020-3569: Multiple vulnerabilities in the Distance Vector Multicast Routing Protocol (DVMRP) feature of Cisco IOS XR Software could allow an unauthenticated, remote attacker to either immediately crash the Internet Group Management Protocol (IGMP) process or make it consume available memory and eventually crash. The memory consumption may negatively impact other processes that are running on the device. These vulnerabilities are due to the incorrect handling of IGMP packets. An attacker could exploit these vulnerabilities by sending crafted IGMP traffic to an affected device. A successful exploit could allow the attacker to immediately crash the IGMP process or cause memory exhaustion, resulting in other processes becoming unstable. These processes may include, but are not limited to, interior and exterior routing protocols. Cisco will release software updates that address these vulnerabilities.\n\n- CVE-2021-44988: Jerryscript v3.0.0 and below was discovered to contain a stack overflow via ecma_find_named_property in ecma-helpers.c.\n\n- CVE-2021-46050: A Stack Overflow vulnerability exists in Binaryen 103 via the printf_common function.\n\n- CVE-2022-29503: A memory corruption vulnerability exists in the libpthread linuxthreads functionality of uClibC 0.9.33.2 and uClibC-ng 1.0.40. Thread allocation can lead to memory corruption. An attacker can create threads to trigger this vulnerability.\n\n- CVE-2022-35107: SWFTools commit 772e55a2 was discovered to contain a stack overflow via vfprintf at /stdio-common/vfprintf.c.\n\n- CVE-2022-35111: SWFTools commit 772e55a2 was discovered to contain a stack overflow via __sanitizer::StackDepotNode::hash(__sanitizer::StackTrace const&) at /sanitizer_common/sanitizer_stackdepot.cpp.\n\n- CVE-2022-21716: Twisted is an event-based framework for internet applications, supporting Python 3.6+. Prior to 22.2.0, Twisted SSH client and server implement is able to accept an infinite amount of data for the peer's SSH version identifier. This ends up with a buffer using all the available memory. The attach is a simple as `nc -rv localhost 22 < /dev/zero`. A patch is available in version 22.2.0. There are currently no known workarounds.\n\n- CVE-2022-41288: A vulnerability has been identified in JT2Go (All versions < V14.1.0.6), Teamcenter Visualization V13.2 (All versions < V13.2.0.12), Teamcenter Visualization V13.3 (All versions < V13.3.0.8), Teamcenter Visualization V14.0 (All versions < V14.0.0.4), Teamcenter Visualization V14.1 (All versions < V14.1.0.6). The CGM_NIST_Loader.dll contains stack exhaustion vulnerability when parsing a CGM file. An attacker could leverage this vulnerability to crash the application causing denial of service condition.\n\n- CVE-2022-32559: An issue was discovered in Couchbase Server before 7.0.4. Random HTTP requests lead to leaked metrics.\n\n- CVE-2022-3273: Allocation of Resources Without Limits or Throttling in GitHub repository ikus060/rdiffweb prior to 2.5.0a4.\n\n- CVE-2021-3669: A flaw was found in the Linux kernel. Measuring usage of the shared memory does not scale with large shared memory segment counts which could lead to resource exhaustion and DoS.\n\n- CVE-2021-3759: A memory overflow vulnerability was found in the Linux kernel\u2019s ipc functionality of the memcg subsystem, in the way a user calls the semget function multiple times, creating semaphores. This flaw allows a local user to starve the resources, causing a denial of service. The highest threat from this vulnerability is to system availability.\n\n- CVE-2022-1708: A vulnerability was found in CRI-O that causes memory or disk space exhaustion on the node for anyone with access to the Kube API. The ExecSync request runs commands in a container and logs the output of the command. This output is then read by CRI-O after command execution, and it is read in a manner where the entire file corresponding to the output of the command is read in. Thus, if the output of the command is large it is possible to exhaust the memory or the disk space of the node when CRI-O reads the output of the command. The highest threat from this vulnerability is system availability.\n\n- CVE-2022-20143: In addAutomaticZenRule of ZenModeHelper.java, there is a possible permanent denial of service due to resource exhaustion. This could lead to local denial of service with User execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12LAndroid ID: A-220735360\n\n- CVE-2022-20478: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-241764135\n\n- CVE-2022-20479: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-241764340\n\n- CVE-2022-20480: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-241764350\n\n- CVE-2022-20484: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-242702851\n\n- CVE-2022-20485: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-242702935\n\n- CVE-2022-20486: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-242703118\n\n- CVE-2022-20487: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-242703202\n\n- CVE-2022-21952: A Missing Authentication for Critical Function vulnerability in spacewalk-java of SUSE Manager Server 4.1, SUSE Manager Server 4.2 allows remote attackers to easily exhaust available disk resources leading to DoS. This issue affects: SUSE Manager Server 4.1 spacewalk-java versions prior to 4.1.46. SUSE Manager Server 4.2 spacewalk-java versions prior to 4.2.37. \n\n- CVE-2022-23487: js-libp2p is the official javascript Implementation of libp2p networking stack. Versions older than `v0.38.0` of js-libp2p are vulnerable to targeted resource exhaustion attacks. These attacks target libp2p\u2019s connection, stream, peer, and memory management. An attacker can cause the allocation of large amounts of memory, ultimately leading to the process getting killed by the host\u2019s operating system. While a connection manager tasked with keeping the number of connections within manageable limits has been part of js-libp2p, this component was designed to handle the regular churn of peers, not a targeted resource exhaustion attack. Users are advised to update their js-libp2p dependency to `v0.38.0` or greater. There are no known workarounds for this vulnerability.\n\n- CVE-2022-23492: go-libp2p is the offical libp2p implementation in the Go programming language. Version `0.18.0` and older of go-libp2p are vulnerable to targeted resource exhaustion attacks. These attacks target libp2p\u2019s connection, stream, peer, and memory management. An attacker can cause the allocation of large amounts of memory, ultimately leading to the process getting killed by the host\u2019s operating system. While a connection manager tasked with keeping the number of connections within manageable limits has been part of go-libp2p, this component was designed to handle the regular churn of peers, not a targeted resource exhaustion attack. Users are advised to upgrade their version of go-libp2p to version `0.18.1` or newer. Users unable to upgrade may consult the denial of service (dos) mitigation page for more information on how to incorporate mitigation strategies, monitor your application, and respond to attacks.\n\n- CVE-2022-23913: In Apache ActiveMQ Artemis prior to 2.20.0 or 2.19.1, an attacker could partially disrupt availability (DoS) through uncontrolled resource consumption of memory.\n\n- CVE-2022-2406: The legacy Slack import feature in Mattermost version 6.7.0 and earlier fails to properly limit the sizes of imported files, which allows an authenticated attacker to crash the server by importing large files via the Slack import REST API.\n\n- CVE-2022-28871: A Denial-of-Service (DoS) vulnerability was discovered in F-Secure Atlant whereby the fsicapd component used in certain F-Secure products while scanning larger packages/fuzzed files consume too much memory eventually can crash the scanning engine. The exploit can be triggered remotely by an attacker.\n\n- CVE-2022-31075: KubeEdge is an open source system for extending native containerized application orchestration capabilities to hosts at Edge. Prior to versions 1.11.1, 1.10.2, and 1.9.4, EdgeCore may be susceptible to a DoS attack on CloudHub if an attacker was to send a well-crafted HTTP request to `/edge.crt`. If an attacker can send a well-crafted HTTP request to CloudHub, and that request has a very large body, that request can crash the HTTP service through a memory exhaustion vector. The request body is being read into memory, and a body that is larger than the available memory can lead to a successful attack. Because the request would have to make it through authorization, only authorized users may perform this attack. The consequence of the exhaustion is that CloudHub will be in denial of service. KubeEdge is affected only when users enable the CloudHub module in the file `cloudcore.yaml`. This bug has been fixed in Kubeedge 1.11.1, 1.10.2, and 1.9.4. As a workaround, disable the CloudHub switch in the config file `cloudcore.yaml`.\n\n- CVE-2022-31078: KubeEdge is an open source system for extending native containerized application orchestration capabilities to hosts at Edge. Prior to versions 1.11.1, 1.10.2, and 1.9.4, the CloudCore Router does not impose a limit on the size of responses to requests made by the REST handler. An attacker could use this weakness to make a request that will return an HTTP response with a large body and cause DoS of CloudCore. In the HTTP Handler API, the rest handler makes a request to a pre-specified handle. The handle will return an HTTP response that is then read into memory. The consequence of the exhaustion is that CloudCore will be in a denial of service. Only an authenticated user of the cloud can make an attack. It will be affected only when users enable `router` module in the config file `cloudcore.yaml`. This bug has been fixed in Kubeedge 1.11.1, 1.10.2, and 1.9.4. As a workaround, disable the router switch in the config file `cloudcore.yaml`.\n\n- CVE-2022-31079: KubeEdge is an open source system for extending native containerized application orchestration capabilities to hosts at Edge. Prior to versions 1.11.1, 1.10.2, and 1.9.4, the Cloud Stream server and the Edge Stream server reads the entire message into memory without imposing a limit on the size of this message. An attacker can exploit this by sending a large message to exhaust memory and cause a DoS. The Cloud Stream server and the Edge Stream server are under DoS attack in this case. The consequence of the exhaustion is that the CloudCore and EdgeCore will be in a denial of service. Only an authenticated user can cause this issue. It will be affected only when users enable `cloudStream` module in the config file `cloudcore.yaml` and enable `edgeStream` module in the config file `edgecore.yaml`. This bug has been fixed in Kubeedge 1.11.1, 1.10.2, and 1.9.4. As a workaround, disable cloudStream module in the config file `cloudcore.yaml` and disable edgeStream module in the config file `edgecore.yaml`.\n\n- CVE-2022-3147: Mattermost version 7.0.x and earlier fails to sufficiently limit the in-memory sizes of concurrently uploaded JPEG images, which allows authenticated users to cause resource exhaustion on specific system configurations, resulting in server-side Denial of Service.\n\n- CVE-2022-33749: XAPI open file limit DoS It is possible for an unauthenticated client on the network to cause XAPI to hit its file-descriptor limit. This causes XAPI to be unable to accept new requests for other (trusted) clients, and blocks XAPI from carrying out any tasks that require the opening of file descriptors.\n\n- CVE-2022-3423: Allocation of Resources Without Limits or Throttling in GitHub repository nocodb/nocodb prior to 0.92.0. \n\n- CVE-2022-35915: OpenZeppelin Contracts is a library for secure smart contract development. The target contract of an EIP-165 `supportsInterface` query can cause unbounded gas consumption by returning a lot of data, while it is generally assumed that this operation has a bounded cost. The issue has been fixed in v4.7.2. Users are advised to upgrade. There are no known workarounds for this issue.\n\n- CVE-2022-41932: XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. It's possible to make XWiki create many new schemas and fill them with tables just by using a crafted user identifier in the login form. This may lead to degraded database performance. The problem has been patched in XWiki 13.10.8, 14.6RC1 and 14.4.2. Users are advised to upgrade. There are no known workarounds for this issue.\n\n- CVE-2022-2134: Allocation of Resources Without Limits or Throttling in GitHub repository inventree/inventree prior to 0.8.0.\n\n- CVE-2022-43686: In Concrete CMS (formerly concrete5) below 8.5.10 and between 9.0.0 and 9.1.2, the authTypeConcreteCookieMap table can be filled up causing a denial of service (high load).\n\n- CVE-2022-41725: A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary files. Callers can limit the size of form data with http.MaxBytesReader.\n\nRelated Weaknesses:\n\n- CWE-400 (ChildOf)\n\n- CWE-665 (ChildOf)\n\n- CWE-400 (ChildOf)",
            "type": "Base",
            "search_source": "base_query",
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              }
            }
          },
          {
            "cwe_id": "400",
            "name": "Uncontrolled Resource Consumption",
            "description": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
            "score": 65.67394027427275,
            "matched_text": "CWE-400: Uncontrolled Resource Consumption\n\nType: Class\n\nStatus: Draft\n\nAlternative Terms:\n\nResource Exhaustion\n\nResource Exhaustion\n\nResource Exhaustion\n\nDescription:\n\nThe product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.\n\nExtended Details:\n\n\n\nLimited resources include memory, file system storage, database connection pool entries, and CPU. If an attacker can trigger the allocation of these limited resources, but the number or size of the resources is not controlled, then the attacker could cause a denial of service that consumes all available resources. This would prevent valid users from accessing the product, and it could potentially have an impact on the surrounding environment. For example, a memory exhaustion attack against an application could slow down the application as well as its host operating system.\n\n\nThere are at least three distinct scenarios which can commonly lead to resource exhaustion:\n\n\n  - Lack of throttling for the number of allocated resources\n\n  - Losing all references to a resource before reaching the shutdown stage\n\n  - Not closing/returning a resource after processing\n\nResource exhaustion problems are often result due to an incorrect implementation of the following situations:\n\n  - Error conditions and other exceptional circumstances.\n\n  - Confusion over which part of the program is responsible for releasing the resource.\n\n\n\nReal-World Examples:\n\n- CVE-2022-21668: Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190).\n\n- CVE-2020-7218: Go-based workload orchestrator does not limit resource usage with unauthenticated connections, allowing a DoS by flooding the service\n\n- CVE-2020-3566: Resource exhaustion in distributed OS because of \"insufficient\" IGMP queue management, as exploited in the wild per CISA KEV.\n\n- CVE-2009-2874: Product allows attackers to cause a crash via a large number of connections.\n\n- CVE-2009-1928: Malformed request triggers uncontrolled recursion, leading to stack exhaustion.\n\n- CVE-2009-2858: Chain: memory leak (CWE-404) leads to resource exhaustion.\n\n- CVE-2009-2726: Driver does not use a maximum width when invoking sscanf style functions, causing stack consumption.\n\n- CVE-2009-2540: Large integer value for a length property in an object causes a large amount of memory allocation.\n\n- CVE-2009-2299: Web application firewall consumes excessive memory when an HTTP request contains a large Content-Length value but no POST data.\n\n- CVE-2009-2054: Product allows exhaustion of file descriptors when processing a large number of TCP packets.\n\n- CVE-2008-5180: Communication product allows memory consumption with a large number of SIP requests, which cause many sessions to be created.\n\n- CVE-2008-2121: TCP implementation allows attackers to consume CPU and prevent new connections using a TCP SYN flood attack.\n\n- CVE-2008-2122: Port scan triggers CPU consumption with processes that attempt to read data from closed sockets.\n\n- CVE-2008-1700: Product allows attackers to cause a denial of service via a large number of directives, each of which opens a separate window.\n\n- CVE-2007-4103: Product allows resource exhaustion via a large number of calls that do not complete a 3-way handshake.\n\n- CVE-2006-1173: Mail server does not properly handle deeply nested multipart MIME messages, leading to stack exhaustion.\n\n- CVE-2007-0897: Chain: anti-virus product encounters a malformed file but returns from a function without closing a file descriptor (CWE-775) leading to file descriptor consumption (CWE-400) and failed scans.\n\nTop 25 CWE Examples:\n\n- CVE-2021-22101: Cloud Controller versions prior to 1.118.0 are vulnerable to unauthenticated denial of Service(DoS) vulnerability allowing unauthenticated attackers to cause denial of service by using REST HTTP requests with label_selectors on multiple V3 endpoints by generating an enormous SQL query.\n\n- CVE-2021-1266: A vulnerability in the REST API of Cisco Managed Services Accelerator (MSX) could allow an authenticated, remote attacker to cause a denial of service (DoS) condition on an affected device. The vulnerability is due to the way that the affected software logs certain API requests. An attacker could exploit this vulnerability by sending a flood of crafted API requests to an affected device. A successful exploit could allow the attacker to cause a DoS condition on the affected device.\n\n- CVE-2021-1312: A vulnerability in the system resource management of Cisco Elastic Services Controller (ESC) could allow an unauthenticated, remote attacker to cause a denial of service (DoS) to the health monitor API on an affected device. The vulnerability is due to inadequate provisioning of kernel parameters for the maximum number of TCP connections and SYN backlog. An attacker could exploit this vulnerability by sending a flood of crafted TCP packets to an affected device. A successful exploit could allow the attacker to block TCP listening ports that are used by the health monitor API. This vulnerability only affects customers who use the health monitor API.\n\n- CVE-2021-1378: A vulnerability in the SSH service of the Cisco StarOS operating system could allow an unauthenticated, remote attacker to cause an affected device to stop processing traffic, resulting in a denial of service (DoS) condition. The vulnerability is due to a logic error that may occur under specific traffic conditions. An attacker could exploit this vulnerability by sending a series of crafted packets to an affected device. A successful exploit could allow the attacker to prevent the targeted service from receiving any traffic, which would lead to a DoS condition on the affected device.\n\n- CVE-2021-1489: A vulnerability in filesystem usage management for Cisco Firepower Device Manager (FDM) Software could allow an authenticated, remote attacker to exhaust filesystem resources, resulting in a denial of service (DoS) condition on an affected device. This vulnerability is due to the insufficient management of available filesystem resources. An attacker could exploit this vulnerability by uploading files to the device and exhausting available filesystem resources. A successful exploit could allow the attacker to cause database errors and cause the device to become unresponsive to web-based management. Manual intervention is required to free filesystem resources and return the device to an operational state.\n\n- CVE-2021-1460: A vulnerability in the Cisco IOx Application Framework of Cisco 809 Industrial Integrated Services Routers (Industrial ISRs), Cisco 829 Industrial ISRs, Cisco CGR 1000 Compute Module, and Cisco IC3000 Industrial Compute Gateway could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition on an affected device. This vulnerability is due to insufficient error handling during packet processing. An attacker could exploit this vulnerability by sending a high and sustained rate of crafted TCP traffic to the IOx web server on an affected device. A successful exploit could allow the attacker to cause the IOx web server to stop processing requests, resulting in a DoS condition.\n\n- CVE-2021-0285: An uncontrolled resource consumption vulnerability in Juniper Networks Junos OS on QFX5000 Series and EX4600 Series switches allows an attacker sending large amounts of legitimate traffic destined to the device to cause Interchassis Control Protocol (ICCP) interruptions, leading to an unstable control connection between the Multi-Chassis Link Aggregation Group (MC-LAG) nodes which can in turn lead to traffic loss. Continued receipt of this amount of traffic will create a sustained Denial of Service (DoS) condition. An indication that the system could be impacted by this issue is the following log message: \"DDOS_PROTOCOL_VIOLATION_SET: Warning: Host-bound traffic for protocol/exception LOCALNH:aggregate exceeded its allowed bandwidth at fpc <fpc number> for <n> times, started at <timestamp>\" This issue affects Juniper Networks Junos OS on QFX5000 Series and EX4600 Series: 15.1 versions prior to 15.1R7-S9; 17.3 versions prior to 17.3R3-S11; 17.4 versions prior to 17.4R2-S13, 17.4R3-S5; 18.3 versions prior to 18.3R3-S5; 18.4 versions prior to 18.4R2-S8, 18.4R3-S7; 19.1 versions prior to 19.1R3-S5; 19.2 versions prior to 19.2R1-S6, 19.2R3-S2; 19.3 versions prior to 19.3R2-S6, 19.3R3-S2; 19.4 versions prior to 19.4R1-S4, 19.4R2-S4, 19.4R3-S2; 20.1 versions prior to 20.1R2-S2, 20.1R3; 20.2 versions prior to 20.2R2-S3, 20.2R3; 20.3 versions prior to 20.3R2; 20.4 versions prior to 20.4R1-S1, 20.4R2.\n\n- CVE-2021-22119: Spring Security versions 5.5.x prior to 5.5.1, 5.4.x prior to 5.4.7, 5.3.x prior to 5.3.10 and 5.2.x prior to 5.2.11 are susceptible to a Denial-of-Service (DoS) attack via the initiation of the Authorization Request in an OAuth 2.0 Client Web and WebFlux application. A malicious user or attacker can send multiple requests initiating the Authorization Request for the Authorization Code Grant, which has the potential of exhausting system resources using a single session or multiple sessions.\n\n- CVE-2021-43173: In NLnet Labs Routinator prior to 0.10.2, a validation run can be delayed significantly by an RRDP repository by not answering but slowly drip-feeding bytes to keep the connection alive. This can be used to effectively stall validation. While Routinator has a configurable time-out value for RRDP connections, this time-out was only applied to individual read or write operations rather than the complete request. Thus, if an RRDP repository sends a little bit of data before that time-out expired, it can continuously extend the time it takes for the request to finish. Since validation will only continue once the update of an RRDP repository has concluded, this delay will cause validation to stall, leading to Routinator continuing to serve the old data set or, if in the initial validation run directly after starting, never serve any data at all.\n\n- CVE-2020-12291: Uncontrolled resource consumption in some Intel(R) Thunderbolt(TM) controllers may allow an authenticated user to potentially enable denial of service via local access.\n\n- CVE-2020-12296: Uncontrolled resource consumption in some Intel(R) Thunderbolt(TM) controllers may allow an authenticated user to potentially enable denial of service via local access.\n\n- CVE-2020-1702: A malicious container image can consume an unbounded amount of memory when being pulled to a container runtime host, such as Red Hat Enterprise Linux using podman, or OpenShift Container Platform. An attacker can use this flaw to trick a user, with privileges to pull container images, into crashing the process responsible for pulling the image. This flaw affects containers-image versions before 5.2.0.\n\n- CVE-2020-1750: A flaw was found in the machine-config-operator that causes an OpenShift node to become unresponsive when a container consumes a large amount of memory. An attacker could use this flaw to deny access to schedule new pods in the OpenShift cluster. This was fixed in openshift/machine-config-operator 4.4.3, openshift/machine-config-operator 4.3.25, openshift/machine-config-operator 4.2.36.\n\n- CVE-2020-20217: Mikrotik RouterOs before 6.47 (stable tree) suffers from an uncontrolled resource consumption vulnerability in the /nova/bin/route process. An authenticated remote attacker can cause a Denial of Service due to overloading the systems CPU.\n\n- CVE-2020-20221: Mikrotik RouterOs before 6.44.6 (long-term tree) suffers from an uncontrolled resource consumption vulnerability in the /nova/bin/cerm process. An authenticated remote attacker can cause a Denial of Service due to overloading the systems CPU.\n\n- CVE-2020-20230: Mikrotik RouterOs before stable 6.47 suffers from an uncontrolled resource consumption in the sshd process. An authenticated remote attacker can cause a Denial of Service due to overloading the systems CPU.\n\n- CVE-2020-20248: Mikrotik RouterOs before stable 6.47 suffers from an uncontrolled resource consumption in the memtest process. An authenticated remote attacker can cause a Denial of Service due to overloading the systems CPU.\n\n- CVE-2020-25242: A vulnerability has been identified in SIMATIC NET CP 343-1 Advanced (incl. SIPLUS variants) (All versions), SIMATIC NET CP 343-1 Lean (incl. SIPLUS variants) (All versions), SIMATIC NET CP 343-1 Standard (incl. SIPLUS variants) (All versions). Specially crafted packets sent to TCP port 102 could cause a Denial-of-Service condition on the affected devices. A cold restart might be necessary in order to recover.\n\n- CVE-2020-28944: OX Guard 2.10.4 and earlier allows a Denial of Service via a WKS server that responds slowly or with a large amount of data.\n\n- CVE-2020-35498: A vulnerability was found in openvswitch. A limitation in the implementation of userspace packet parsing can allow a malicious user to send a specially crafted packet causing the resulting megaflow in the kernel to be too wide, potentially causing a denial of service. The highest threat from this vulnerability is to system availability.\n\n- CVE-2020-35510: A flaw was found in jboss-remoting in versions before 5.0.20.SP1-redhat-00001. A malicious attacker could cause threads to hold up forever in the EJB server by writing a sequence of bytes corresponding to the expected messages of a successful EJB client request, but omitting the ACK messages, or just tamper with jboss-remoting code, deleting the lines that send the ACK message from the EJB client code resulting in a denial of service. The highest threat from this vulnerability is to system availability.\n\n- CVE-2020-36332: A flaw was found in libwebp in versions before 1.0.1. When reading a file libwebp allocates an excessive amount of memory. The highest threat from this vulnerability is to the service availability.\n\n- CVE-2020-8299: Citrix ADC and Citrix/NetScaler Gateway 13.0 before 13.0-76.29, 12.1-61.18, 11.1-65.20, Citrix ADC 12.1-FIPS before 12.1-55.238, and Citrix SD-WAN WANOP Edition before 11.4.0, 11.3.2, 11.3.1a, 11.2.3a, 11.1.2c, 10.2.9a suffers from uncontrolled resource consumption by way of a network-based denial-of-service from within the same Layer 2 network segment. Note that the attacker must be in the same Layer 2 network segment as the vulnerable appliance.\n\n- CVE-2020-9000: An issue was discovered in iPortalis iCS 7.1.13.0. Attackers can send a sequence of requests to rapidly cause .NET Input Validation errors. This increases the size of the log file on the remote server until memory is exhausted, therefore consuming the maximum amount of resources (triggering a denial of service condition).\n\n- CVE-2021-0008: Uncontrolled resource consumption in firmware for Intel(R) Ethernet Adapters 800 Series Controllers and associated adapters before version 1.5.3.0 may allow privileged user to potentially enable denial of service via local access.\n\n- CVE-2021-0180: Uncontrolled resource consumption in the Intel(R) HAXM software before version 7.6.6 may allow an unauthenticated user to potentially enable privilege escalation via local access.\n\n- CVE-2021-0182: Uncontrolled resource consumption in the Intel(R) HAXM software before version 7.6.6 may allow an unauthenticated user to potentially enable information disclosure via local access.\n\n- CVE-2021-0229: An uncontrolled resource consumption vulnerability in Message Queue Telemetry Transport (MQTT) server of Juniper Networks Junos OS allows an attacker to cause MQTT server to crash and restart leading to a Denial of Service (DoS) by sending a stream of specific packets. A Juniper Extension Toolkit (JET) application designed with a listening port uses the Message Queue Telemetry Transport (MQTT) protocol to connect to a mosquitto broker that is running on Junos OS to subscribe for events. Continued receipt and processing of this packet will create a sustained Denial of Service (DoS) condition. This issue affects Juniper Networks Junos OS: 16.1R1 and later versions prior to 17.3R3-S11; 17.4 versions prior to 17.4R2-S13, 17.4R3-S4; 18.1 versions prior to 18.1R3-S12; 18.2 versions prior to 18.2R2-S8, 18.2R3-S7; 18.3 versions prior to 18.3R3-S4; 18.4 versions prior to 18.4R1-S8, 18.4R2-S7, 18.4R3-S7; 19.1 versions prior to 19.1R3-S5; 19.2 versions prior to 19.2R1-S6, 19.2R3-S2; 19.3 versions prior to 19.3R3-S2; 19.4 versions prior to 19.4R2-S4, 19.4R3-S2; 20.1 versions prior to 20.1R2-S1, 20.1R3; 20.2 versions prior to 20.2R2-S2, 20.2R3; 20.3 versions prior to 20.3R1-S1, 20.3R2. This issue does not affect Juniper Networks Junos OS versions prior to 16.1R1.\n\n- CVE-2021-0238: When a MX Series is configured as a Broadband Network Gateway (BNG) based on Layer 2 Tunneling Protocol (L2TP), executing certain CLI command may cause the system to run out of disk space, excessive disk usage may cause other complications. An administrator can use the following CLI command to monitor the available disk space: user@device> show system storage Filesystem Size Used Avail Capacity Mounted on /dev/gpt/junos 19G 18G 147M 99% /.mount <<<<< running out of space tmpfs 21G 16K 21G 0% /.mount/tmp tmpfs 5.3G 1.7M 5.3G 0% /.mount/mfs This issue affects Juniper Networks Junos OS on MX Series: 17.3R1 and later versions prior to 17.4R3-S5, 18.1 versions prior to 18.1R3-S13, 18.2 versions prior to 18.2R3-S7; 18.3 versions prior to 18.3R3-S4; 18.4 versions prior to 18.4R3-S7; 19.1 versions prior to 19.1R3-S4; 19.2 versions prior to 19.2R1-S6, 19.2R3-S2; 19.3 versions prior to 19.3R3-S2; 19.4 versions prior to 19.4R2-S4, 19.4R3-S2; 20.1 versions prior to 20.1R3; 20.2 versions prior to 20.2R2-S3, 20.2R3; 20.3 versions prior to 20.3R2; 20.4 versions prior to 20.4R1-S1, 20.4R2; This issue does not affect Juniper Networks Junos OS versions prior to 17.3R1.\n\n- CVE-2021-0292: An Uncontrolled Resource Consumption vulnerability in the ARP daemon (arpd) and Network Discovery Protocol (ndp) process of Juniper Networks Junos OS Evolved allows a malicious attacker on the local network to consume memory resources, ultimately resulting in a Denial of Service (DoS) condition. Link-layer functions such as IPv4 and/or IPv6 address resolution may be impacted, leading to traffic loss. The processes do not recover on their own and must be manually restarted. Changes in memory usage can be monitored using the following shell commands (header shown for clarity): user@router:/var/log# ps aux | grep arpd USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 31418 59.0 0.7 *5702564* 247952 ? xxx /usr/sbin/arpd --app-name arpd -I object_select --shared-objects-mode 3 user@router:/var/log# ps aux | grep arpd USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 31418 49.1 1.0 *5813156* 351184 ? xxx /usr/sbin/arpd --app-name arpd -I object_select --shared-objects-mode 3 Memory usage can be monitored for the ndp process in a similar fashion: user@router:/var/log# ps aux | grep ndp USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 14935 0.0 0.1 *5614052* 27256 ? Ssl Jun15 0:17 /usr/sbin/ndp -I no_tab_chk,object_select --app-name ndp --shared-obje user@router:/var/log# ps aux | grep ndp USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 14935 0.0 0.1 *5725164* 27256 ? Ssl Jun15 0:17 /usr/sbin/ndp -I no_tab_chk,object_select --app-name ndp --shared-obje This issue affects Juniper Networks Junos OS Evolved: 19.4 versions prior to 19.4R2-S3-EVO; 20.1 versions prior to 20.1R2-S4-EVO; all versions of 20.2-EVO. This issue does not affect Juniper Networks Junos OS Evolved versions prior to 19.4R2-EVO.\n\n- CVE-2021-20591: Uncontrolled Resource Consumption vulnerability in Mitsubishi Electric MELSEC iQ-R series CPU modules (R00/01/02CPU all versions, R04/08/16/32/120(EN)CPU all versions, R08/16/32/120SFCPU all versions, R08/16/32/120PCPU all versions, R08/16/32/120PSFCPU all versions) allows a remote unauthenticated attacker to prevent legitimate clients from connecting to the MELSOFT transmission port (TCP/IP) by not closing a connection properly, which may lead to a denial of service (DoS) condition.\n\n- CVE-2021-20600: Uncontrolled resource consumption in Mitsubishi Electric MELSEC iQ-R series C Controller Module R12CCPU-V Firmware Versions \"16\" and prior allows a remote unauthenticated attacker to cause a denial-of-service (DoS) condition by sending a large number of packets in a short time while the module starting up. System reset is required for recovery.\n\n- CVE-2021-20609: Uncontrolled Resource Consumption vulnerability in Mitsubishi Electric MELSEC iQ-R Series R00/01/02CPU, MELSEC iQ-R Series R04/08/16/32/120(EN)CPU, MELSEC iQ-R Series R08/16/32/120SFCPU, MELSEC iQ-R Series R08/16/32/120PCPU, MELSEC iQ-R Series R08/16/32/120PSFCPU, MELSEC iQ-R Series R16/32/64MTCPU, MELSEC iQ-R Series R12CCPU-V, MELSEC Q Series Q03UDECPU, MELSEC Q Series Q04/06/10/13/20/26/50/100UDEHCPU, MELSEC Q Series Q03/04/06/13/26UDVCPU, MELSEC Q Series Q04/06/13/26UDPVCPU, MELSEC Q Series Q12DCCPU-V, MELSEC Q Series Q24DHCCPU-V(G), MELSEC Q Series Q24/26DHCCPU-LS, MELSEC Q Series MR-MQ100, MELSEC Q Series Q172/173DCPU-S1, MELSEC Q Series Q172/173DSCPU, MELSEC Q Series Q170MCPU, MELSEC Q Series Q170MSCPU(-S1), MELSEC L Series L02/06/26CPU(-P), MELSEC L Series L26CPU-(P)BT and MELIPC Series MI5122-VW allows a remote unauthenticated attacker to cause a denial-of-service (DoS) condition by sending specially crafted packets. System reset is required for recovery.\n\n- CVE-2021-20718: mod_auth_openidc 2.4.0 to 2.4.7 allows a remote attacker to cause a denial-of-service (DoS) condition via unspecified vectors.\n\n- CVE-2021-30464: OMICRON StationGuard before 1.10 allows remote attackers to cause a denial of service (connectivity outage) via crafted tcp/20499 packets to the CTRL Ethernet port.\n\n- CVE-2021-30504: In JetBrains IntelliJ IDEA before 2021.1, DoS was possible because of unbounded resource allocation.\n\n- CVE-2021-31340: A vulnerability has been identified in SIMATIC RF166C (All versions > V1.1 and < V1.3.2), SIMATIC RF185C (All versions > V1.1 and < V1.3.2), SIMATIC RF186C (All versions > V1.1 and < V1.3.2), SIMATIC RF186CI (All versions > V1.1 and < V1.3.2), SIMATIC RF188C (All versions > V1.1 and < V1.3.2), SIMATIC RF188CI (All versions > V1.1 and < V1.3.2), SIMATIC RF360R (All versions < V2.0), SIMATIC Reader RF610R CMIIT (All versions > V3.0 < V4.0), SIMATIC Reader RF610R ETSI (All versions > V3.0 < V4.0), SIMATIC Reader RF610R FCC (All versions > V3.0 < V4.0), SIMATIC Reader RF615R CMIIT (All versions > V3.0 < V4.0), SIMATIC Reader RF615R ETSI (All versions > V3.0 < V4.0), SIMATIC Reader RF615R FCC (All versions > V3.0 < V4.0), SIMATIC Reader RF650R ARIB (All versions > V3.0 < V4.0), SIMATIC Reader RF650R CMIIT (All versions > V3.0 < V4.0), SIMATIC Reader RF650R ETSI (All versions > V3.0 < V4.0), SIMATIC Reader RF650R FCC (All versions > V3.0 < V4.0), SIMATIC Reader RF680R ARIB (All versions > V3.0 < V4.0), SIMATIC Reader RF680R CMIIT (All versions > V3.0 < V4.0), SIMATIC Reader RF680R ETSI (All versions > V3.0 < V4.0), SIMATIC Reader RF680R FCC (All versions > V3.0 < V4.0), SIMATIC Reader RF685R ARIB (All versions > V3.0 < V4.0), SIMATIC Reader RF685R CMIIT (All versions > V3.0 < V4.0), SIMATIC Reader RF685R ETSI (All versions > V3.0 < V4.0), SIMATIC Reader RF685R FCC (All versions > V3.0 < V4.0). Affected devices do not properly handle large numbers of incoming connections. An attacker may leverage this to cause a Denial-of-Service situation.\n\n- CVE-2021-31365: An Uncontrolled Resource Consumption vulnerability in Juniper Networks Junos OS on EX2300, EX3400 and EX4300 Series platforms allows an adjacent attacker sending a stream of layer 2 frames will trigger an Aggregated Ethernet (AE) interface to go down and thereby causing a Denial of Service (DoS). By continuously sending a stream of specific layer 2 frames an attacker will sustain the Denial of Service (DoS) condition. This issue affects: Juniper Networks Junos OS EX4300 Series All versions prior to 15.1R7-S7; 16.1 versions prior to 16.1R7-S8; 17.1 versions prior to 17.1R2-S12; 17.2 versions prior to 17.2R3-S4; 17.3 versions prior to 17.3R3-S8; 17.4 versions prior to 17.4R2-S10, 17.4R3-S2; 18.1 versions prior to 18.1R3-S10; 18.2 versions prior to 18.2R2-S7, 18.2R3-S3; 18.3 versions prior to 18.3R2-S4, 18.3R3-S2; 18.4 versions prior to 18.4R1-S7, 18.4R2-S4, 18.4R3-S1; 19.1 versions prior to 19.1R1-S5, 19.1R2-S1, 19.1R3; 19.2 versions prior to 19.2R1-S5, 19.2R2; 19.3 versions prior to 19.3R2-S2, 19.3R3; 19.4 versions prior to 19.4R1-S2, 19.4R2. Juniper Networks Junos OS EX3400 and EX4300-MP Series All versions prior to 18.1R3-S12; 18.2 versions prior to 18.2R3-S7; 18.3 versions prior to 18.3R3-S4; 18.4 versions prior to 18.4R2-S9, 18.4R3-S7; 19.1 versions prior to 19.1R2-S3, 19.1R3-S4; 19.2 versions prior to 19.2R3-S1; 19.3 versions prior to 19.3R3-S1; 19.4 versions prior to 19.4R3-S1; 20.1 versions prior to 20.1R3; 20.2 versions prior to 20.2R3; 20.3 versions prior to 20.3R2. Juniper Networks Junos OS EX2300 Series All versions prior to 18.3R3-S5; 18.4 versions prior to 18.4R2-S9, 18.4R3-S9; 19.1 versions prior to 19.1R2-S3, 19.1R3-S6; 19.2 versions prior to 19.2R1-S7, 19.2R3-S3; 19.3 versions prior to 19.3R2-S7, 19.3R3-S3; 19.4 versions prior to 19.4R3-S5; 20.1 versions prior to 20.1R2-S2, 20.1R3-S1; 20.2 versions prior to 20.2R3-S2; 20.3 versions prior to 20.3R3-S1; 20.4 versions prior to 20.4R2-S1, 20.4R3; 21.1 versions prior to 21.1R2.\n\n- CVE-2021-31368: An Uncontrolled Resource Consumption vulnerability in the kernel of Juniper Networks JUNOS OS allows an unauthenticated network based attacker to cause 100% CPU load and the device to become unresponsive by sending a flood of traffic to the out-of-band management ethernet port. Continued receipted of a flood will create a sustained Denial of Service (DoS) condition. Once the flood subsides the system will recover by itself. An indication that the system is affected by this issue would be that kernel and netisr process are shown to be using a lot of CPU cycles like in the following example output: user@host> show system processes extensive ... PID USERNAME PRI NICE SIZE RES STATE C TIME WCPU COMMAND 16 root -72 - 0K 304K WAIT 1 839:40 88.96% intr{swi1: netisr 0} 0 root 97 - 0K 160K RUN 1 732:43 87.99% kernel{bcm560xgmac0 que} This issue affects Juniper Networks JUNOS OS on EX2300 Series, EX3400 Series, and ACX710: All versions prior to 18.1R3-S13; 18.2 versions prior to 18.2R3-S8; 18.3 versions prior to 18.3R3-S5; 18.4 versions prior to 18.4R2-S8, 18.4R3-S9; 19.1 versions prior to 19.1R3-S5; 19.2 versions prior to 19.2R1-S7, 19.2R3-S3; 19.3 versions prior to 19.3R2-S6, 19.3R3-S2; 19.4 versions prior to 19.4R1-S4, 19.4R3-S3; 20.1 versions prior to 20.1R2-S2, 20.1R3; 20.2 versions prior to 20.2R3; 20.3 versions prior to 20.3R2-S1, 20.3R3; 20.4 versions prior to 20.4R2.\n\n- CVE-2021-32012: SheetJS and SheetJS Pro through 0.16.9 allows attackers to cause a denial of service (memory consumption) via a crafted .xlsx document that is mishandled when read by xlsx.js (issue 1 of 2).\n\n- CVE-2021-32013: SheetJS and SheetJS Pro through 0.16.9 allows attackers to cause a denial of service (memory consumption) via a crafted .xlsx document that is mishandled when read by xlsx.js (issue 2 of 2).\n\n- CVE-2021-32014: SheetJS and SheetJS Pro through 0.16.9 allows attackers to cause a denial of service (CPU consumption) via a crafted .xlsx document that is mishandled when read by xlsx.js.\n\n- CVE-2021-32455: SITEL CAP/PRX firmware version 5.2.01, allows an attacker with access to the device\u00b4s network to cause a denial of service condition on the device. An attacker could exploit this vulnerability by sending HTTP requests massively.\n\n- CVE-2021-32595: Multiple uncontrolled resource consumption vulnerabilities in the web interface of FortiPortal before 6.0.6 may allow a single low-privileged user to induce a denial of service via multiple HTTP requests.\n\n- CVE-2021-32722: GlobalNewFiles is a mediawiki extension. Versions prior to 48be7adb70568e20e961ea1cb70904454a671b1d are affected by an uncontrolled resource consumption vulnerability. A large amount of page moves within a short space of time could overwhelm Database servers due to improper handling of load balancing and a lack of an appropriate index. As a workaround, one may avoid use of the extension unless additional rate limit at the MediaWiki level or via PoolCounter / MySQL is enabled. A patch is available in version 48be7adb70568e20e961ea1cb70904454a671b1d.\n\n- CVE-2021-32918: An issue was discovered in Prosody before 0.11.9. Default settings are susceptible to remote unauthenticated denial-of-service (DoS) attacks via memory exhaustion when running under Lua 5.2 or Lua 5.3.\n\n- CVE-2021-33073: Uncontrolled resource consumption in the Intel(R) Distribution of OpenVINO\u00e2\u201e\u00a2 Toolkit before version 2021.4 may allow an unauthenticated user to potentially enable denial of service via local access.\n\n- CVE-2021-33818: An issue was discovered in UniFi Protect G3 FLEX Camera Version UVC.v4.30.0.67. Attackers can use slowhttptest tool to send incomplete HTTP request, which could make server keep waiting for the packet to finish the connection, until its resource exhausted. Then the web server is denial-of-service.\n\n- CVE-2021-33822: An issue was discovered on 4GEE ROUTER HH70VB Version HH70_E1_02.00_22. Attackers can use slowhttptest tool to send incomplete HTTP request, which could make server keep waiting for the packet to finish the connection, until its resource exhausted. Then the web server is denial-of-service.\n\n- CVE-2021-33824: An issue was discovered on MOXA Mgate MB3180 Version 2.1 Build 18113012. Attackers can use slowhttptest tool to send incomplete HTTP request, which could make server keep waiting for the packet to finish the connection, until its resource exhausted. Then the web server is denial-of-service.\n\n- CVE-2021-36187: A uncontrolled resource consumption in Fortinet FortiWeb version 6.4.0, version 6.3.15 and below, 6.2.5 and below allows attacker to cause a denial of service for webserver daemon via crafted HTTP requests\n\n- CVE-2021-3909: OctoRPKI does not limit the length of a connection, allowing for a slowloris DOS attack to take place which makes OctoRPKI wait forever. Specifically, the repository that OctoRPKI sends HTTP requests to will keep the connection open for a day before a response is returned, but does keep drip feeding new bytes to keep the connection alive.\n\n- CVE-2021-39171: Passport-SAML is a SAML 2.0 authentication provider for Passport, the Node.js authentication library. Prior to version 3.1.0, a malicious SAML payload can require transforms that consume significant system resources to process, thereby resulting in reduced or denied service. This would be an effective way to perform a denial-of-service attack. This has been resolved in version 3.1.0. The resolution is to limit the number of allowable transforms to 2.\n\n- CVE-2021-21271: Tendermint Core is an open source Byzantine Fault Tolerant (BFT) middleware that takes a state transition machine - written in any programming language - and securely replicates it on many machines. Tendermint Core v0.34.0 introduced a new way of handling evidence of misbehavior. As part of this, we added a new Timestamp field to Evidence structs. This timestamp would be calculated using the same algorithm that is used when a block is created and proposed. (This algorithm relies on the timestamp of the last commit from this specific block.) In Tendermint Core v0.34.0-v0.34.2, the consensus reactor is responsible for forming DuplicateVoteEvidence whenever double signs are observed. However, the current block is still \u201cin flight\u201d when it is being formed by the consensus reactor. It hasn\u2019t been finalized through network consensus yet. This means that different nodes in the network may observe different \u201clast commits\u201d when assigning a timestamp to DuplicateVoteEvidence. In turn, different nodes could form DuplicateVoteEvidence objects at the same height but with different timestamps. One DuplicateVoteEvidence object (with one timestamp) will then eventually get finalized in the block, but this means that any DuplicateVoteEvidence with a different timestamp is considered invalid. Any node that formed invalid DuplicateVoteEvidence will continue to propose invalid evidence; its peers may see this, and choose to disconnect from this node. This bug means that double signs are DoS vectors in Tendermint Core v0.34.0-v0.34.2. Tendermint Core v0.34.3 is a security release which fixes this bug. As of v0.34.3, DuplicateVoteEvidence is no longer formed by the consensus reactor; rather, the consensus reactor passes the Votes themselves into the EvidencePool, which is now responsible for forming DuplicateVoteEvidence. The EvidencePool has timestamp info that should be consistent across the network, which means that DuplicateVoteEvidence formed in this reactor should have consistent timestamps. This release changes the API between the consensus and evidence reactors.\n\n- CVE-2021-21328: Vapor is a web framework for Swift. In Vapor before version 4.40.1, there is a DoS attack against anyone who Bootstraps a metrics backend for their Vapor app. The following is the attack vector: 1. send unlimited requests against a vapor instance with different paths. this will create unlimited counters and timers, which will eventually drain the system. 2. downstream services might suffer from this attack as well by being spammed with error paths. This has been patched in 4.40.1. The `DefaultResponder` will rewrite any undefined route paths for to `vapor_route_undefined` to avoid unlimited counters.\n\n- CVE-2021-21369: Hyperledger Besu is an open-source, MainNet compatible, Ethereum client written in Java. In Besu before version 1.5.1 there is a denial-of-service vulnerability involving the HTTP JSON-RPC API service. If username and password authentication is enabled for the HTTP JSON-RPC API service, then prior to making any requests to an API endpoint the requestor must use the login endpoint to obtain a JSON web token (JWT) using their credentials. A single user can readily overload the login endpoint with invalid requests (incorrect password). As the supplied password is checked for validity on the main vertx event loop and takes a relatively long time this can cause the processing of other valid requests to fail. A valid username is required for this vulnerability to be exposed. This has been fixed in version 1.5.1.\n\n- CVE-2021-21529: Dell System Update (DSU) 1.9 and earlier versions contain a denial of service vulnerability. A local authenticated malicious user with low privileges may potentially exploit this vulnerability to cause the system to run out of memory by running multiple instances of the vulnerable application.\n\n- CVE-2021-21728: A ZTE product has a configuration error vulnerability. Because a certain port is open by default, an attacker can consume system processing resources by flushing a large number of packets to the port, and successfully exploiting this vulnerability could reduce system processing capabilities. This affects: ZXA10 C300M all versions up to V4.3P8.\n\n- CVE-2021-22010: The vCenter Server contains a denial-of-service vulnerability in VPXD service. A malicious actor with network access to port 443 on vCenter Server may exploit this issue to create a denial of service condition due to excessive memory consumption by VPXD service.\n\n- CVE-2021-22124: An uncontrolled resource consumption (denial of service) vulnerability in the login modules of FortiSandbox 3.2.0 through 3.2.2, 3.1.0 through 3.1.4, and 3.0.0 through 3.0.6; and FortiAuthenticator before 6.0.6 may allow an unauthenticated attacker to bring the device into an unresponsive state via specifically-crafted long request parameters.\n\n- CVE-2021-22139: Kibana versions before 7.12.1 contain a denial of service vulnerability was found in the webhook actions due to a lack of timeout or a limit on the request size. An attacker with permissions to create webhook actions could drain the Kibana host connection pool, making Kibana unavailable for all other users.\n\n- CVE-2021-22166: An attacker could cause a Prometheus denial of service in GitLab 13.7+ by sending an HTTP request with a malformed method\n\n- CVE-2021-22177: Potential DoS was identified in gitlab-shell in GitLab CE/EE version 12.6.0 or above, which allows an attacker to spike the server resource utilization via gitlab-shell command.\n\n- CVE-2021-22181: A denial of service vulnerability in GitLab CE/EE affecting all versions since 11.8 allows an attacker to create a recursive pipeline relationship and exhaust resources.\n\n- CVE-2021-22187: An issue has been discovered in GitLab affecting all versions of Gitlab EE/CE before 13.6.7. A potential resource exhaustion issue that allowed running or pending jobs to continue even after project was deleted.\n\n- CVE-2021-22216: A denial of service vulnerability in all versions of GitLab CE/EE before 13.12.2, 13.11.5 or 13.10.5 allows an attacker to cause uncontrolled resource consumption with a very long issue or merge request description\n\n- CVE-2021-22965: A vulnerability in Pulse Connect Secure before 9.1R12.1 could allow an unauthenticated administrator to causes a denial of service when a malformed request is sent to the device.\n\n- CVE-2021-22985: On BIG-IP APM version 16.0.x before 16.0.1.1, under certain conditions, when processing VPN traffic with APM, TMM consumes excessive memory. A malicious, authenticated VPN user may abuse this to perform a DoS attack against the APM. Note: Software versions which have reached End of Software Development (EoSD) are not evaluated.\n\n- CVE-2021-23011: On versions 16.0.x before 16.0.1.1, 15.1.x before 15.1.3, 14.1.x before 14.1.4, 13.1.x before 13.1.4, 12.1.x before 12.1.6, and 11.6.x before 11.6.5.3, when the BIG-IP system is buffering packet fragments for reassembly, the Traffic Management Microkernel (TMM) may consume an excessive amount of resources, eventually leading to a restart and failover event. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2021-23042: On BIG-IP version 16.0.x before 16.0.1.2, 15.1.x before 15.1.3, 14.1.x before 14.1.4, 13.1.x before 13.1.4, and 12.1.x before 12.1.6, when an HTTP profile is configured on a virtual server, undisclosed requests can cause a significant increase in system resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2021-23047: On version 16.x before 16.1.0, 15.1.x before 15.1.3.1, 14.1.x before 14.1.4.3, and all versions of 13.1.x, 12.1.x and 11.6.x, when BIG-IP APM performs Online Certificate Status Protocol (OCSP) verification of a certificate that contains Authority Information Access (AIA), undisclosed requests may cause an increase in memory use. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2021-23049: On BIG-IP version 16.0.x before 16.0.1.2 and 15.1.x before 15.1.3, when the iRules RESOLVER::summarize command is used on a virtual server, undisclosed requests can cause an increase in Traffic Management Microkernel (TMM) memory utilization resulting in an out-of-memory condition and a denial-of-service (DoS). Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2021-23852: An authenticated attacker with administrator rights Bosch IP cameras can call an URL with an invalid parameter that causes the camera to become unresponsive for a few seconds and cause a Denial of Service (DoS).\n\n- CVE-2021-25252: Trend Micro's Virus Scan API (VSAPI) and Advanced Threat Scan Engine (ATSE) - are vulnerable to a memory exhaustion vulnerability that may lead to denial-of-service or system freeze if exploited by an attacker using a specially crafted file.\n\n- CVE-2021-25659: A vulnerability has been identified in Automation License Manager 5 (All versions), Automation License Manager 6 (All versions < V6.0 SP9 Update 2). Sending specially crafted packets to port 4410/tcp of an affected system could lead to extensive memory being consumed and as such could cause a denial-of-service preventing legitimate users from using the system.\n\n- CVE-2021-25909: ZIV Automation 4CCT-EA6-334126BF firmware version 3.23.80.27.36371, allows an unauthenticated, remote attacker to cause a denial of service condition on the device. An attacker could exploit this vulnerability by sending specific packets to the port 7919.\n\n- CVE-2020-15166: In ZeroMQ before version 4.3.3, there is a denial-of-service vulnerability. Users with TCP transport public endpoints, even with CURVE/ZAP enabled, are impacted. If a raw TCP socket is opened and connected to an endpoint that is fully configured with CURVE/ZAP, legitimate clients will not be able to exchange any message. Handshakes complete successfully, and messages are delivered to the library, but the server application never receives them. This is patched in version 4.3.3.\n\n- CVE-2020-21573: An issue was discoverered in in abhijitnathwani image-processing v0.1.0, allows local attackers to cause a denial of service via a crafted image file.\n\n- CVE-2020-26257: Matrix is an ecosystem for open federated Instant Messaging and VoIP. Synapse is a reference \"homeserver\" implementation of Matrix. A malicious or poorly-implemented homeserver can inject malformed events into a room by specifying a different room id in the path of a `/send_join`, `/send_leave`, `/invite` or `/exchange_third_party_invite` request. This can lead to a denial of service in which future events will not be correctly sent to other servers over federation. This affects any server which accepts federation requests from untrusted servers. The Matrix Synapse reference implementation before version 1.23.1 the implementation is vulnerable to this injection attack. Issue is fixed in version 1.23.1. As a workaround homeserver administrators could limit access to the federation API to trusted servers (for example via `federation_domain_whitelist`).\n\n- CVE-2021-28089: Tor before 0.4.5.7 allows a remote participant in the Tor directory protocol to exhaust CPU resources on a target, aka TROVE-2021-001.\n\n- CVE-2021-22100: In cloud foundry CAPI versions prior to 1.122, a denial-of-service attack in which a developer can push a service broker that (accidentally or maliciously) causes CC instances to timeout and fail is possible. An attacker can leverage this vulnerability to cause an inability for anyone to push or manage apps.\n\n- CVE-2021-22955: A unauthenticated denial of service vulnerability exists in Citrix ADC <13.0-83.27, <12.1-63.22 and 11.1-65.23 when configured as a VPN (Gateway) or AAA virtual server could allow an attacker to cause a temporary disruption of the Management GUI, Nitro API, and RPC communication.\n\n- CVE-2021-22956: An uncontrolled resource consumption vulnerability exists in Citrix ADC <13.0-83.27, <12.1-63.22 and 11.1-65.23 that could allow an attacker with access to NSIP or SNIP with management interface access to cause a temporary disruption of the Management GUI, Nitro API, and RPC communication.\n\n- CVE-2021-23236: Requests may be used to interrupt the normal operation of the device. When exploited, Fresenius Kabi Agilia Link+ version 3.0 must be rebooted via a hard reset triggered by pressing a button on the rack system.\n\n- CVE-2021-30301: Possible denial of service due to out of memory while processing RRC and NAS OTA message in Snapdragon Auto, Snapdragon Industrial IOT, Snapdragon Mobile\n\n- CVE-2021-37061: There is a Uncontrolled Resource Consumption vulnerability in Huawei Smartphone.Successful exploitation of this vulnerability may lead to Screen projection application denial of service.\n\n- CVE-2021-37865: Mattermost 6.2 and earlier fails to sufficiently process a specifically crafted GIF file when it is uploaded while drafting a post, which allows authenticated users to cause resource exhaustion while processing the file, resulting in server-side Denial of Service.\n\n- CVE-2021-39939: An uncontrolled resource consumption vulnerability in GitLab Runner affecting all versions starting from 13.7 before 14.3.6, all versions starting from 14.4 before 14.4.4, all versions starting from 14.5 before 14.5.2, allows an attacker triggering a job with a specially crafted docker image to exhaust resources on runner manager\n\n- CVE-2021-39942: A denial of service vulnerability in GitLab CE/EE affecting all versions starting from 12.0 before 14.3.6, all versions starting from 14.4 before 14.4.4, all versions starting from 14.5 before 14.5.2, allows low-privileged users to bypass file size limits in the NPM package repository to potentially cause denial of service.\n\n- CVE-2021-40011: There is an uncontrolled resource consumption vulnerability in the display module. Successful exploitation of this vulnerability may affect integrity.\n\n- CVE-2021-41014: A uncontrolled resource consumption in Fortinet FortiWeb version 6.4.1 and below, 6.3.15 and below allows an unauthenticated attacker to make the httpsd daemon unresponsive via huge HTTP packets\n\n- CVE-2021-43933: The affected product is vulnerable to a network-based attack by threat actors sending unimpeded requests to the receiving server, which could cause a denial-of-service condition due to lack of heap memory resources.\n\n- CVE-2021-44527: A vulnerability found in UniFi Switch firmware Version 5.43.35 and earlier allows a malicious actor who has already gained access to the network to perform a Deny of Service (DoS) attack on the affected switch.This vulnerability is fixed in UniFi Switch firmware 5.76.6 and later.\n\n- CVE-2021-44716: net/http in Go before 1.16.12 and 1.17.x before 1.17.5 allows uncontrolled memory consumption in the header canonicalization cache via HTTP/2 requests.\n\n- CVE-2021-46149: An issue was discovered in MediaWiki before 1.35.5, 1.36.x before 1.36.3, and 1.37.x before 1.37.1. A denial of service (resource consumption) can be accomplished by searching for a very long key in a Language Name Search.\n\n- CVE-2021-46668: MariaDB through 10.5.9 allows an application crash via certain long SELECT DISTINCT statements that improperly interact with storage-engine resource limitations for temporary data structures.\n\n- CVE-2020-9060: Z-Wave devices based on Silicon Labs 500 series chipsets using S2, including but likely not limited to the ZooZ ZST10 version 6.04, ZooZ ZEN20 version 5.03, ZooZ ZEN25 version 5.03, Aeon Labs ZW090-A version 3.95, and Fibaro FGWPB-111 version 4.3, are susceptible to denial of service and resource exhaustion via malformed SECURITY NONCE GET, SECURITY NONCE GET 2, NO OPERATION, or NIF REQUEST messages.\n\n- CVE-2021-33135: Uncontrolled resource consumption in the Linux kernel drivers for Intel(R) SGX may allow an authenticated user to potentially enable denial of service via local access.\n\n- CVE-2022-40513: Transient DOS due to uncontrolled resource consumption in WLAN firmware when peer is freed in non qos state.\n\n- CVE-2022-43572: In Splunk Enterprise versions below 8.2.9, 8.1.12, and 9.0.2, sending a malformed file through the Splunk-to-Splunk (S2S) or HTTP Event Collector (HEC) protocols to an indexer results in a blockage or denial-of-service preventing further indexing. \n\n- CVE-2021-22642: An attacker could use specially crafted invalid Modbus frames to crash the Ovarro TBox system.\n\n- CVE-2021-3629: A flaw was found in Undertow. A potential security issue in flow control handling by the browser over http/2 may potentially cause overhead or a denial of service in the server. The highest threat from this vulnerability is availability. This flaw affects Undertow versions prior to 2.0.40.Final and prior to 2.2.11.Final.\n\n- CVE-2022-0476: Denial of Service in GitHub repository radareorg/radare2 prior to 5.6.4.\n\n- CVE-2022-0488: An issue has been discovered in GitLab CE/EE affecting all versions starting with version 8.10. It was possible to trigger a timeout on a page with markdown by using a specific amount of block-quotes.\n\n- CVE-2022-0489: An issue has been discovered in GitLab CE/EE affecting all versions starting with 8.15 . It was possible to trigger a DOS by using the math feature with a specific formula in issue comments.\n\n- CVE-2022-0671: A flaw was found in vscode-xml in versions prior to 0.19.0. Schema download could lead to blind SSRF or DoS via a large file.\n\n- CVE-2022-0695: Denial of Service in GitHub repository radareorg/radare2 prior to 5.6.4.\n\n- CVE-2022-1099: Adding a very large number of tags to a runner in GitLab CE/EE affecting all versions prior to 14.7.7, 14.8 prior to 14.8.5, and 14.9 prior to 14.9.2 allows an attacker to impact the performance of GitLab\n\n- CVE-2022-1259: A flaw was found in Undertow. A potential security issue in flow control handling by the browser over HTTP/2 may cause overhead or a denial of service in the server. This flaw exists because of an incomplete fix for CVE-2021-3629.\n\n- CVE-2022-1468: On all versions of 17.0.x, 16.1.x, 15.1.x, 14.1.x, 13.1.x, 12.1.x, and 11.6.x on F5 BIG-IP, an authenticated iControl REST user with at least guest role privileges can cause processing delays to iControl REST requests via undisclosed requests. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated\n\n- CVE-2022-1677: In OpenShift Container Platform, a user with permissions to create or modify Routes can craft a payload that inserts a malformed entry into one of the cluster router's HAProxy configuration files. This malformed entry can match any arbitrary hostname, or all hostnames in the cluster, and direct traffic to an arbitrary application within the cluster, including one under attacker control.\n\n- CVE-2022-1797: A malformed Class 3 common industrial protocol message with a cached connection can cause a denial-of-service condition in Rockwell Automation Logix Controllers, resulting in a major nonrecoverable fault. If the target device becomes unavailable, a user would have to clear the fault and redownload the user project file to bring the device back online.\n\n- CVE-2022-1982: Uncontrolled resource consumption in Mattermost version 6.6.0 and earlier allows an authenticated attacker to crash the server via a crafted SVG attachment on a post.\n\n- CVE-2022-2004: AutomationDirect DirectLOGIC is vulnerable to a a specially crafted packet can be sent continuously to the PLC to prevent access from DirectSoft and other devices, causing a denial-of-service condition. This issue affects: AutomationDirect DirectLOGIC D0-06 series CPUs D0-06DD1 versions prior to 2.72; D0-06DD2 versions prior to 2.72; D0-06DR versions prior to 2.72; D0-06DA versions prior to 2.72; D0-06AR versions prior to 2.72; D0-06AA versions prior to 2.72; D0-06DD1-D versions prior to 2.72; D0-06DD2-D versions prior to 2.72; D0-06DR-D versions prior to 2.72;\n\n- CVE-2022-20425: In addAutomaticZenRule of ZenModeHelper.java, there is a possible permanent degradation of performance due to resource exhaustion. This could lead to local denial of service with User execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-235823407\n\n- CVE-2022-20482: In createNotificationChannel of NotificationManager.java, there is a possible way to make the device unusable and require factory reset due to resource exhaustion. This could lead to local denial of service with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-12 Android-12L Android-13Android ID: A-240422263\n\n- CVE-2022-22101: Denial of service in multimedia due to uncontrolled resource consumption while parsing an incoming HAB message in Snapdragon Auto\n\n- CVE-2022-22145: CAMS for HIS Log Server contained in the following Yokogawa Electric products is vulnerable to uncontrolled resource consumption. CENTUM CS 3000 versions from R3.08.10 to R3.09.00, CENTUM VP versions from R4.01.00 to R4.03.00, from R5.01.00 to R5.04.20, from R6.01.00 to R6.08.00, Exaopc versions from R3.72.00 to R3.79.00.\n\n- CVE-2022-22161: An Uncontrolled Resource Consumption vulnerability in the kernel of Juniper Networks Junos OS allows an unauthenticated network based attacker to cause 100% CPU load and the device to become unresponsive by sending a flood of traffic to the out-of-band management ethernet port. Continued receipted of a flood will create a sustained Denial of Service (DoS) condition. Once the flood subsides the system will recover by itself. An indication that the system is affected by this issue would be that an irq handled by the fman process is shown to be using a high percentage of CPU cycles like in the following example output: user@host> show system processes extensive ... PID USERNAME PRI NICE SIZE RES STATE TIME WCPU COMMAND 31 root -84 -187 0K 16K WAIT 22.2H 56939.26% irq96: fman0 This issue affects Juniper Networks Junos OS: All versions prior to 18.3R3-S6; 18.4 versions prior to 18.4R2-S9, 18.4R3-S9; 19.1 versions prior to 19.1R2-S3, 19.1R3-S7; 19.2 versions prior to 19.2R1-S7, 19.2R3-S3; 19.3 versions prior to 19.3R2-S7, 19.3R3-S4; 19.4 versions prior to 19.4R2-S5, 19.4R3-S5; 20.1 versions prior to 20.1R3-S1; 20.2 versions prior to 20.2R3-S2; 20.3 versions prior to 20.3R3-S1; 20.4 versions prior to 20.4R2-S2, 20.4R3; 21.1 versions prior to 21.1R2; 21.2 versions prior to 21.2R1-S1, 21.2R2.\n\n- CVE-2022-2238: A vulnerability was found in the search-api container in Red Hat Advanced Cluster Management for Kubernetes when a query in the search filter gets parsed by the backend. This flaw allows an attacker to craft specific strings containing special characters that lead to crashing the pod and affects system availability while restarting.\n\n- CVE-2022-22556: Dell PowerStore contains an Uncontrolled Resource Consumption Vulnerability in PowerStore User Interface. A remote unauthenticated attacker could potentially exploit this vulnerability, leading to the Denial of Service.\n\n- CVE-2022-22724: A CWE-400: Uncontrolled Resource Consumption vulnerability exists that could cause a denial of service on ports 80 (HTTP) and 502 (Modbus), when sending a large number of TCP RST or FIN packets to any open TCP port of the PLC. Affected Product: Modicon M340 CPUs: BMXP34 (All Versions)\n\n- CVE-2022-23015: On BIG-IP versions 16.x before 16.1.0, 15.1.x before 15.1.4.1, and 14.1.2.6-14.1.4.4, when a Client SSL profile is configured on a virtual server with Client Certificate Authentication set to request/require and Session Ticket enabled and configured, processing SSL traffic can cause an increase in memory resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-23023: On BIG-IP version 16.1.x before 16.1.2.1, 15.1.x before 15.1.5, 14.1.x before 14.1.4.5, and all versions of 13.1.x and 12.1.x, and BIG-IQ all versions of 8.x and 7.x, undisclosed requests by an authenticated iControl REST user can cause an increase in memory resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-23024: On BIG-IP AFM version 16.x before 16.1.0, 15.1.x before 15.1.4.1, 14.1.x before 14.1.4.2, and all versions of 13.1.x, when the IPsec application layer gateway (ALG) logging profile is configured on an IPsec ALG virtual server, undisclosed IPsec traffic can cause the Traffic Management Microkernel (TMM) to terminate. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-23030: On version 16.1.x before 16.1.2, 15.1.x before 15.1.4.1, 14.1.x before 14.1.4.5, and all versions of 13.1.x, when the BIG-IP Virtual Edition (VE) uses the ixlv driver (which is used in SR-IOV mode and requires Intel X710/XL710/XXV710 family of network adapters on the Hypervisor) and TCP Segmentation Offload configuration is enabled, undisclosed requests may cause an increase in CPU resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-24118: Certain General Electric Renewable Energy products allow attackers to use a code to trigger a reboot into the factory default configuration. This affects iNET and iNET II before 8.3.0, SD before 6.4.7, TD220X before 2.0.16, and TD220MAX before 1.2.6.\n\n- CVE-2022-2455: A business logic issue in the handling of large repositories in all versions of GitLab CE/EE from 10.0 before 15.1.6, all versions starting from 15.2 before 15.2.4, all versions starting from 15.3 before 15.3.2 allowed an authenticated and authorized user to exhaust server resources by importing a malicious project.\n\n- CVE-2022-25622: The PROFINET (PNIO) stack, when integrated with the Interniche IP stack, improperly handles internal resources for TCP segments where the minimum TCP-Header length is less than defined. This could allow an attacker to create a denial of service condition for TCP services on affected devices by sending specially crafted TCP segments.\n\n- CVE-2022-26372: On F5 BIG-IP 15.1.x versions prior to 15.1.0.2, 14.1.x versions prior to 14.1.4.6, 13.1.x versions prior to 13.1.5, and all versions of 12.1.x and 11.6.x, when a DNS listener is configured on a virtual server with DNS queueing (default), undisclosed requests can cause an increase in memory resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-27181: On F5 BIG-IP APM 16.1.x versions prior to 16.1.2.2, 15.1.x versions prior to 15.1.5.1, 14.1.x versions prior to 14.1.4.6, 13.1.x versions prior to 13.1.5, and all versions of 12.1.x and 11.6.x, when APM is configured on a virtual server and the associated access profile is configured with APM AAA NTLM Auth, undisclosed requests can cause an increase in internal resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated\n\n- CVE-2022-27182: On F5 BIG-IP 16.1.x versions prior to 16.1.2.2, 15.1.x versions prior to 15.1.5.1, and 14.1.x versions prior to 14.1.4.6, when BIG-IP packet filters are enabled and a virtual server is configured with the type set to Reject, undisclosed requests can cause an increase in memory resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated\n\n- CVE-2022-27194: A vulnerability has been identified in SIMATIC PCS neo (Administration Console) (All versions < V3.1 SP1), SINETPLAN (All versions), TIA Portal (V15, V15.1, V16 and V17). The affected system cannot properly process specially crafted packets sent to port 8888/tcp. A remote attacker could exploit this vulnerability to cause a Denial-of-Service condition. The affected devices must be restarted manually.\n\n- CVE-2022-2741: The denial-of-service can be triggered by transmitting a carefully crafted CAN frame on the same CAN network as the vulnerable node. The frame must have a CAN ID matching an installed filter in the vulnerable node (this can easily be guessed based on CAN traffic analyses). The frame must contain the opposite RTR bit as what the filter installed in the vulnerable node contains (if the filter matches RTR frames, the frame must be a data frame or vice versa).\n\n- CVE-2022-27507: Authenticated denial of service\n\n- CVE-2022-27508: Unauthenticated denial of service\n\n- CVE-2022-27640: A vulnerability has been identified in SIMATIC CP 442-1 RNA (All versions < V1.5.18), SIMATIC CP 443-1 RNA (All versions < V1.5.18). The affected devices improperly handles excessive ARP broadcast requests. This could allow an attacker to create a denial of service condition by performing ARP storming attacks, which can cause the device to reboot.\n\n- CVE-2022-28191: NVIDIA vGPU software contains a vulnerability in the Virtual GPU Manager (nvidia.ko), where uncontrolled resource consumption can be triggered by an unprivileged regular user, which may lead to denial of service.\n\n- CVE-2022-28691: On F5 BIG-IP 16.1.x versions prior to 16.1.2.2, 15.1.x versions prior to 15.1.5, 14.1.x versions prior to 14.1.4.6, and 13.1.x versions prior to 13.1.5, when a Real Time Streaming Protocol (RTSP) profile is configured on a virtual server, undisclosed traffic can cause an increase in Traffic Management Microkernel (TMM) resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated\n\n- CVE-2022-28701: On F5 BIG-IP 16.1.x versions prior to 16.1.2.2, when the stream profile is configured on a virtual server, undisclosed requests can cause an increase in memory resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated\n\n- CVE-2022-29480: On F5 BIG-IP 13.1.x versions prior to 13.1.5, and all versions of 12.1.x and 11.6.x, when multiple route domains are configured, undisclosed requests to big3d can cause an increase in CPU resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated\n\n- CVE-2022-29864: OPC UA .NET Standard Stack 1.04.368 allows a remote attacker to cause a server to crash via a large number of messages that trigger Uncontrolled Resource Consumption.\n\n- CVE-2022-29866: OPC UA .NET Standard Stack 1.04.368 allows a remote attacker to exhaust the memory resources of a server via a crafted request that triggers Uncontrolled Resource Consumption.\n\n- CVE-2022-30551: OPC UA Legacy Java Stack 2022-04-01 allows a remote attacker to cause a server to stop processing messages by sending crafted messages that exhaust available resources.\n\n- CVE-2022-30691: Uncontrolled resource consumption in the Intel(R) Support Android application before version 22.02.28 may allow an authenticated user to potentially enable denial of service via local access.\n\n- CVE-2022-30791: In CmpBlkDrvTcp of CODESYS V3 in multiple versions an uncontrolled ressource consumption allows an unauthorized attacker to block new TCP connections. Existing connections are not affected.\n\n- CVE-2022-30792: In CmpChannelServer of CODESYS V3 in multiple versions an uncontrolled ressource consumption allows an unauthorized attacker to block new communication channel connections. Existing connections are not affected.\n\n- CVE-2022-31006: indy-node is the server portion of Hyperledger Indy, a distributed ledger purpose-built for decentralized identity. In vulnerable versions of indy-node, an attacker can max out the number of client connections allowed by the ledger, leaving the ledger unable to be used for its intended purpose. However, the ledger content will not be impacted and the ledger will resume functioning after the attack. This attack exploits the trade-off between resilience and availability. Any protection against abusive client connections will also prevent the network being accessed by certain legitimate users. As a result, validator nodes must tune their firewall rules to ensure the right trade-off for their network's expected users. The guidance to network operators for the use of firewall rules in the deployment of Indy networks has been modified to better protect against denial of service attacks by increasing the cost and complexity in mounting such attacks. The mitigation for this vulnerability is not in the Hyperledger Indy code per se, but rather in the individual deployments of Indy. The mitigations should be applied to all deployments of Indy, and are not related to a particular release.\n\n- CVE-2022-31030: containerd is an open source container runtime. A bug was found in the containerd's CRI implementation where programs inside a container can cause the containerd daemon to consume memory without bound during invocation of the `ExecSync` API. This can cause containerd to consume all available memory on the computer, denying service to other legitimate workloads. Kubernetes and crictl can both be configured to use containerd's CRI implementation; `ExecSync` may be used when running probes or when executing processes via an \"exec\" facility. This bug has been fixed in containerd 1.6.6 and 1.5.13. Users should update to these versions to resolve the issue. Users unable to upgrade should ensure that only trusted images and commands are used.\n\n- CVE-2022-31073: KubeEdge is an open source system for extending native containerized application orchestration capabilities to hosts at Edge. Prior to versions 1.11.1, 1.10.2, and 1.9.4, the ServiceBus server on the edge side may be susceptible to a DoS attack if an HTTP request containing a very large Body is sent to it. It is possible for the node to be exhausted of memory. The consequence of the exhaustion is that other services on the node, e.g. other containers, will be unable to allocate memory and thus causing a denial of service. Malicious apps accidentally pulled by users on the host and have the access to send HTTP requests to localhost may make an attack. It will be affected only when users enable the `ServiceBus` module in the config file `edgecore.yaml`. This bug has been fixed in Kubeedge 1.11.1, 1.10.2, and 1.9.4. As a workaround, disable the `ServiceBus` module in the config file `edgecore.yaml`.\n\n- CVE-2022-31074: KubeEdge is an open source system for extending native containerized application orchestration capabilities to hosts at Edge. Prior to versions 1.11.1, 1.10.2, and 1.9.4, several endpoints in the Cloud AdmissionController may be susceptible to a DoS attack if an HTTP request containing a very large Body is sent to it. The consequence of the exhaustion is that the Cloud AdmissionController will be in denial of service. This bug has been fixed in Kubeedge 1.11.1, 1.10.2, and 1.9.4. There is currently no known workaround.\n\n- CVE-2022-3283: A potential DOS vulnerability was discovered in GitLab CE/EE affecting all versions before before 15.2.5, all versions starting from 15.3 before 15.3.4, all versions starting from 15.4 before 15.4.1 While cloning an issue with special crafted content added to the description could have been used to trigger high CPU usage.\n\n- CVE-2022-33203: In BIG-IP Versions 16.1.x before 16.1.3, 15.1.x before 15.1.6.1, and 14.1.x before 14.1.5, when a BIG-IP APM access policy with Service Connect agent is configured on a virtual server, undisclosed requests can cause an increase in memory resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-34335:  IBM Sterling Partner Engagement Manager 6.1.2, 6.2.0, and 6.2.1 could allow an authenticated user to exhaust server resources which could lead to a denial of service. IBM X-Force ID: 229705. \n\n- CVE-2022-35236: In BIG-IP Versions 16.1.x before 16.1.2.2, 15.1.x before 15.1.6.1, and 14.1.x before 14.1.5, when an HTTP2 profile is configured on a virtual server, undisclosed traffic can cause an increase in memory resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-35241: In versions 2.x before 2.3.1 and all versions of 1.x, when NGINX Instance Manager is in use, undisclosed requests can cause an increase in disk resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-3639: A potential DOS vulnerability was discovered in GitLab CE/EE affecting all versions from 10.8 before 15.1.6, all versions starting from 15.2 before 15.2.4, all versions starting from 15.3 before 15.3.2. Improper data handling on branch creation could have been used to trigger high CPU usage.\n\n- CVE-2022-3818: An uncontrolled resource consumption issue when parsing URLs in GitLab CE/EE affecting all versions prior to 15.3.5, 15.4 prior to 15.4.4, and 15.5 prior to 15.5.2 allows an attacker to cause performance issues and potentially a denial of service on the GitLab instance.\n\n- CVE-2022-39278: Istio is an open platform-independent service mesh that provides traffic management, policy enforcement, and telemetry collection. Prior to versions 1.15.2, 1.14.5, and 1.13.9, the Istio control plane, istiod, is vulnerable to a request processing error, allowing a malicious attacker that sends a specially crafted or oversized message which results in the control plane crashing when the Kubernetes validating or mutating webhook service is exposed publicly. This endpoint is served over TLS port 15017, but does not require any authentication from the attacker. For simple installations, Istiod is typically only reachable from within the cluster, limiting the blast radius. However, for some deployments, especially external istiod topologies, this port is exposed over the public internet. Versions 1.15.2, 1.14.5, and 1.13.9 contain patches for this issue. There are no effective workarounds, beyond upgrading. This bug is due to an error in `regexp.Compile` in Go.\n\n- CVE-2022-39330: Nextcloud Server is the file server software for Nextcloud, a self-hosted productivity platform. Nextcloud Server prior to versions 23.0.10 and 24.0.6 and Nextcloud Enterprise Server prior to versions 22.2.10, 23.0.10, and 24.0.6 are vulnerable to a logged-in attacker slowing down the system by generating a lot of database/cpu load. Nextcloud Server versions 23.0.10 and 24.0.6 and Nextcloud Enterprise Server versions 22.2.10, 23.0.10, and 24.0.6 contain patches for this issue. As a workaround, disable the Circles app.\n\n- CVE-2022-40735: The Diffie-Hellman Key Agreement Protocol allows use of long exponents that arguably make certain calculations unnecessarily expensive, because the 1996 van Oorschot and Wiener paper found that \"(appropriately) short exponents\" can be used when there are adequate subgroup constraints, and these short exponents can lead to less expensive calculations than for long exponents. This issue is different from CVE-2002-20001 because it is based on an observation about exponent size, rather than an observation about numbers that are not public keys. The specific situations in which calculation expense would constitute a server-side vulnerability depend on the protocol (e.g., TLS, SSH, or IKE) and the DHE implementation details. In general, there might be an availability concern because of server-side resource consumption from DHE modular-exponentiation calculations. Finally, it is possible for an attacker to exploit this vulnerability and CVE-2002-20001 together.\n\n- CVE-2022-41770: In BIG-IP versions 17.0.x before 17.0.0.1, 16.1.x before 16.1.3.1, 15.1.x before 15.1.7, 14.1.x before 14.1.5.1, and all versions of 13.1.x, and BIG-IQ all versions of 8.x and 7.x, an authenticated iControl REST user can cause an increase in memory resource utilization, via undisclosed requests.\n\n- CVE-2022-41806: In versions 16.1.x before 16.1.3.2 and 15.1.x before 15.1.5.1, when BIG-IP AFM Network Address Translation policy with IPv6/IPv4 translation rules is configured on a virtual server, undisclosed requests can cause an increase in memory resource utilization.\n\n- CVE-2022-41833: In all BIG-IP 13.1.x versions, when an iRule containing the HTTP::collect command is configured on a virtual server, undisclosed requests can cause Traffic Management Microkernel (TMM) to terminate.\n\n- CVE-2022-4344: Memory exhaustion in the Kafka protocol dissector in Wireshark 4.0.0 to 4.0.1 and 3.6.0 to 3.6.9 allows denial of service via packet injection or crafted capture file\n\n- CVE-2022-20692: A vulnerability in the NETCONF over SSH feature of Cisco IOS XE Software could allow a low-privileged, authenticated, remote attacker to cause a denial of service condition (DoS) on an affected device. This vulnerability is due to insufficient resource management. An attacker could exploit this vulnerability by initiating a large number of NETCONF over SSH connections. A successful exploit could allow the attacker to exhaust resources, causing the device to reload and resulting in a DoS condition on an affected device.\n\n- CVE-2022-20760: A vulnerability in the DNS inspection handler of Cisco Adaptive Security Appliance (ASA) Software and Firepower Threat Defense (FTD) Software could allow an unauthenticated, remote attacker to cause a denial of service condition (DoS) on an affected device. This vulnerability is due to a lack of proper processing of incoming requests. An attacker could exploit this vulnerability by sending crafted DNS requests at a high rate to an affected device. A successful exploit could allow the attacker to cause the device to stop responding, resulting in a DoS condition.\n\n- CVE-2022-20808: A vulnerability in Cisco Smart Software Manager On-Prem (SSM On-Prem) could allow an authenticated, remote attacker to cause a denial of service (DoS) condition on an affected device. This vulnerability is due to incorrect handling of multiple simultaneous device registrations on Cisco SSM On-Prem. An attacker could exploit this vulnerability by sending multiple device registration requests to Cisco SSM On-Prem. A successful exploit could allow the attacker to cause a DoS condition on an affected device.\n\n- CVE-2022-20937: A vulnerability in a feature that monitors RADIUS requests on Cisco Identity Services Engine (ISE) Software could allow an unauthenticated, remote attacker to negatively affect the performance of an affected device. This vulnerability is due to insufficient management of system resources. An attacker could exploit this vulnerability by taking actions that cause Cisco ISE Software to receive specific RADIUS traffic. A successful and sustained exploit of this vulnerability could allow the attacker to cause reduced performance of the affected device, resulting in significant delays to RADIUS authentications. There are workarounds that address this vulnerability.\n\n- CVE-2022-43564: In Splunk Enterprise versions below 8.1.12, 8.2.9, and 9.0.2, a remote user who can create search macros and schedule search reports can cause a denial of service through the use of specially crafted search macros.\n\n- CVE-2022-44608: Uncontrolled resource consumption vulnerability in Cybozu Remote Service 4.0.0 to 4.0.3 allows a remote authenticated attacker to consume huge storage space, which may result in a denial-of-service (DoS) condition.\n\n- CVE-2022-45044: A vulnerability has been identified in SIPROTEC 5 6MD84 (CP300) (All versions < V9.50), SIPROTEC 5 6MD85 (CP200) (All versions), SIPROTEC 5 6MD85 (CP300) (All versions < V9.50), SIPROTEC 5 6MD86 (CP200) (All versions), SIPROTEC 5 6MD86 (CP300) (All versions < V9.50), SIPROTEC 5 6MD89 (CP300) (All versions < V9.64), SIPROTEC 5 6MU85 (CP300) (All versions < V9.50), SIPROTEC 5 7KE85 (CP200) (All versions), SIPROTEC 5 7KE85 (CP300) (All versions < V9.64), SIPROTEC 5 7SA82 (CP100) (All versions), SIPROTEC 5 7SA82 (CP150) (All versions < V9.50), SIPROTEC 5 7SA84 (CP200) (All versions), SIPROTEC 5 7SA86 (CP200) (All versions), SIPROTEC 5 7SA86 (CP300) (All versions < V9.50), SIPROTEC 5 7SA87 (CP200) (All versions), SIPROTEC 5 7SA87 (CP300) (All versions < V9.50), SIPROTEC 5 7SD82 (CP100) (All versions), SIPROTEC 5 7SD82 (CP150) (All versions < V9.50), SIPROTEC 5 7SD84 (CP200) (All versions), SIPROTEC 5 7SD86 (CP200) (All versions), SIPROTEC 5 7SD86 (CP300) (All versions < V9.50), SIPROTEC 5 7SD87 (CP200) (All versions), SIPROTEC 5 7SD87 (CP300) (All versions < V9.50), SIPROTEC 5 7SJ81 (CP100) (All versions < V8.89), SIPROTEC 5 7SJ81 (CP150) (All versions < V9.50), SIPROTEC 5 7SJ82 (CP100) (All versions < V8.89), SIPROTEC 5 7SJ82 (CP150) (All versions < V9.50), SIPROTEC 5 7SJ85 (CP200) (All versions), SIPROTEC 5 7SJ85 (CP300) (All versions < V9.50), SIPROTEC 5 7SJ86 (CP200) (All versions), SIPROTEC 5 7SJ86 (CP300) (All versions < V9.50), SIPROTEC 5 7SK82 (CP100) (All versions < V8.89), SIPROTEC 5 7SK82 (CP150) (All versions < V9.50), SIPROTEC 5 7SK85 (CP200) (All versions), SIPROTEC 5 7SK85 (CP300) (All versions < V9.50), SIPROTEC 5 7SL82 (CP100) (All versions), SIPROTEC 5 7SL82 (CP150) (All versions < V9.50), SIPROTEC 5 7SL86 (CP200) (All versions), SIPROTEC 5 7SL86 (CP300) (All versions < V9.50), SIPROTEC 5 7SL87 (CP200) (All versions), SIPROTEC 5 7SL87 (CP300) (All versions < V9.50), SIPROTEC 5 7SS85 (CP200) (All versions), SIPROTEC 5 7SS85 (CP300) (All versions < V9.50), SIPROTEC 5 7ST85 (CP200) (All versions), SIPROTEC 5 7ST85 (CP300) (All versions < V9.64), SIPROTEC 5 7ST86 (CP300) (All versions < V9.64), SIPROTEC 5 7SX82 (CP150) (All versions < V9.50), SIPROTEC 5 7SX85 (CP300) (All versions < V9.50), SIPROTEC 5 7UM85 (CP300) (All versions < V9.50), SIPROTEC 5 7UT82 (CP100) (All versions), SIPROTEC 5 7UT82 (CP150) (All versions < V9.50), SIPROTEC 5 7UT85 (CP200) (All versions), SIPROTEC 5 7UT85 (CP300) (All versions < V9.50), SIPROTEC 5 7UT86 (CP200) (All versions), SIPROTEC 5 7UT86 (CP300) (All versions < V9.50), SIPROTEC 5 7UT87 (CP200) (All versions), SIPROTEC 5 7UT87 (CP300) (All versions < V9.50), SIPROTEC 5 7VE85 (CP300) (All versions < V9.50), SIPROTEC 5 7VK87 (CP200) (All versions), SIPROTEC 5 7VK87 (CP300) (All versions < V9.50), SIPROTEC 5 7VU85 (CP300) (All versions < V9.50), SIPROTEC 5 Communication Module ETH-BA-2EL (All versions < V8.89 installed on CP100 devices), SIPROTEC 5 Communication Module ETH-BA-2EL (All versions < V9.50 installed on CP150 and CP300 devices), SIPROTEC 5 Communication Module ETH-BA-2EL (All versions installed on CP200 devices), SIPROTEC 5 Communication Module ETH-BB-2FO (All versions < V8.89 installed on CP100 devices), SIPROTEC 5 Communication Module ETH-BB-2FO (All versions < V9.50 installed on CP150 and CP300 devices), SIPROTEC 5 Communication Module ETH-BB-2FO (All versions installed on CP200 devices), SIPROTEC 5 Communication Module ETH-BD-2FO (All versions < V9.50), SIPROTEC 5 Compact 7SX800 (CP050) (All versions < V9.50). Affected devices do not properly restrict secure client-initiated renegotiations within the SSL and TLS protocols. This could allow an attacker to create a denial of service condition on the ports 443/tcp and 4443/tcp for the duration of the attack.\n\n- CVE-2022-45199: Pillow before 9.3.0 allows denial of service via SAMPLESPERPIXEL.\n\n- CVE-2022-46351: A vulnerability has been identified in SCALANCE X204RNA (HSR) (All versions < V3.2.7), SCALANCE X204RNA (PRP) (All versions < V3.2.7), SCALANCE X204RNA EEC (HSR) (All versions < V3.2.7), SCALANCE X204RNA EEC (PRP) (All versions < V3.2.7), SCALANCE X204RNA EEC (PRP/HSR) (All versions < V3.2.7). Specially crafted PROFINET DCP packets could cause a denial of service condition of affected products on a local Ethernet segment (Layer 2).\n\n- CVE-2022-46352: A vulnerability has been identified in SCALANCE X204RNA (HSR) (All versions < V3.2.7), SCALANCE X204RNA (PRP) (All versions < V3.2.7), SCALANCE X204RNA EEC (HSR) (All versions < V3.2.7), SCALANCE X204RNA EEC (PRP) (All versions < V3.2.7), SCALANCE X204RNA EEC (PRP/HSR) (All versions < V3.2.7). Specially crafted PROFINET DCP packets could cause a denial of service condition of affected products.\n\n- CVE-2022-4767: Denial of Service in GitHub repository usememos/memos prior to 0.9.1.\n\n- CVE-2022-24040: A vulnerability has been identified in Desigo DXR2 (All versions < V01.21.142.5-22), Desigo PXC3 (All versions < V01.21.142.4-18), Desigo PXC4 (All versions < V02.20.142.10-10884), Desigo PXC5 (All versions < V02.20.142.10-10884). The web application fails to enforce an upper bound to the cost factor of the PBKDF2 derived key during the creation or update of an account. An attacker with the user profile access privilege could cause a denial of service (DoS) condition through CPU consumption by setting a PBKDF2 derived key with a remarkably high cost effort and then attempting a login to the so-modified account.\n\n- CVE-2022-39158: Affected devices improperly handle partial HTTP requests which makes them vulnerable to slowloris attacks. This could allow a remote attacker to create a denial of service condition that persists until the attack ends.\n\n- CVE-2022-41333: An uncontrolled resource consumption vulnerability [CWE-400] in FortiRecorder version 6.4.3 and below, 6.0.11 and below login authentication mechanism may allow an unauthenticated attacker to make the device unavailable via crafted GET requests.\n\nRelated Weaknesses:\n\n- CWE-664 (ChildOf)",
            "type": "Class",
            "search_source": "base_query",
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Discouraged",
                "rationale": "CWE-400 is intended for incorrect behaviors in which the product is expected to track and restrict how many resources it consumes, but CWE-400 is often misused because it is conflated with the \"technical impact\" of vulnerabilities in which resource consumption occurs. It is sometimes used for low-information vulnerability reports. It is a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Closely analyze the specific mistake that is causing resource consumption, and perform a CWE mapping for that mistake. Consider children/descendants such as CWE-770: Allocation of Resources Without Limits or Throttling, CWE-771: Missing Reference to Active Allocated Resource, CWE-410: Insufficient Resource Pool, CWE-772: Missing Release of Resource after Effective Lifetime, CWE-834: Excessive Iteration, CWE-405: Asymmetric Resource Consumption (Amplification), and others.",
                "reasons": [
                  "Frequent Misuse"
                ]
              }
            }
          }
        ]
      },
      "search_metadata": {
        "query": "The hash table used to manage connections in picoquic before b80fd3f uses a weak hash function, allowing remote attackers to cause a considerable CPU load on the server (a Hash DoS attack) by initiating connections with colliding Source Connection IDs (SCIDs).",
        "keyphrases": {
          "rootcause": [
            "weak hash function"
          ]
        },
        "cve_id": "CVE-2025-24946",
        "retrievers_used": {
          "graph": true,
          "dense": true,
          "sparse": true
        },
        "search_time": 1752313952.2058306,
        "retriever_counts": {
          "graph": 20,
          "dense": 20,
          "sparse": 12
        }
      }
    },
    "relevant_cwes": [
      {
        "metadata": {
          "doc_id": "328",
          "name": "Use of Weak Hash",
          "source": "sparse"
        },
        "similarity": 266.59713348086973
      },
      {
        "metadata": {
          "doc_id": "407",
          "name": "Inefficient Algorithmic Complexity",
          "source": "sparse"
        },
        "similarity": 264.8570513392626
      },
      {
        "metadata": {
          "doc_id": "330",
          "name": "Use of Insufficiently Random Values",
          "source": "sparse"
        },
        "similarity": 255.5089161401263
      },
      {
        "metadata": {
          "doc_id": "916",
          "name": "Use of Password Hash With Insufficient Computational Effort",
          "source": "sparse"
        },
        "similarity": 243.9991156743613
      },
      {
        "metadata": {
          "doc_id": "294",
          "name": "Authentication Bypass by Capture-replay",
          "source": "sparse"
        },
        "similarity": 222.06386444460597
      },
      {
        "metadata": {
          "doc_id": "410",
          "name": "Insufficient Resource Pool",
          "type": "Base",
          "original_content": "The product's resource pool is not large enough to handle peak demand, which allows an attacker to prevent others from accessing the resource by using a (relatively) large number of requests for resources.",
          "keyphrase_source": "rootcause:weak hash function",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "graph"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "dense": 0.5066851595200853,
              "graph": 1.5000847783974538
            }
          }
        },
        "similarity": 0.5066851595200853
      },
      {
        "doc_id": "804",
        "text": "CWE-804: Guessable CAPTCHA",
        "score": 2.2100000000000004,
        "metadata": {
          "doc_id": "804",
          "name": "Guessable CAPTCHA",
          "type": "base",
          "original_content": "CWE-804: Guessable CAPTCHA",
          "relationships": [
            {
              "source_id": "804",
              "target_id": "330",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "804",
              "target_id": "1390",
              "label": "CHILDOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "804",
              "target_id": "863",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "863",
              "target_id": "804",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "330",
              "target_id": "804",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "1390",
              "target_id": "804",
              "label": "PARENTOF",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 1.0,
            "sequence_path": 1.0
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "vulnerability_sequence_forward"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "330",
                    "804",
                    "CANPRECEDE"
                  ]
                ],
                "score": 1.0,
                "type": "relationship_chain",
                "source": "330"
              },
              "vulnerability_sequence_forward": {
                "path": [
                  [
                    "330",
                    "804",
                    "CANPRECEDE"
                  ]
                ],
                "score": 1.0,
                "type": "vulnerability_sequence_forward",
                "source": "330"
              }
            }
          },
          "position": "after",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 2.2100000000000004
            }
          }
        },
        "similarity": 2.2100000000000004
      },
      {
        "metadata": {
          "doc_id": "327",
          "name": "Use of a Broken or Risky Cryptographic Algorithm",
          "source": "sparse"
        },
        "similarity": 221.87128005934323
      },
      {
        "metadata": {
          "doc_id": "301",
          "name": "Reflection Attack in an Authentication Protocol",
          "source": "sparse"
        },
        "similarity": 221.28674836113777
      },
      {
        "metadata": {
          "doc_id": "674",
          "name": "Uncontrolled Recursion",
          "source": "sparse"
        },
        "similarity": 217.8008214263568
      }
    ],
    "enhanced_query": "## Vulnerability Description\nThe hash table used to manage connections in picoquic before b80fd3f uses a **weak hash function**, allowing remote attackers to cause a considerable CPU load on the server (a Hash DoS attack) by initiating connections with colliding Source Connection IDs (SCIDs).\n\n### Vulnerability Description Key Phrases\n- **rootcause:** **weak hash function**\n- **impact:** DoS attack and CPU load\n- **vector:** colliding Source Connection IDs\n- **attacker:** remote attackers\n- **product:** picoquic\n- **version:** before b80fd3f\n- **component:** hash table to manage connections\n\n## CVE Reference Links Content Summary\nOkay, I will analyze the provided content based on your guidelines.\n\n**CVE-2025-24946**\n\nI will retrieve the official description for the specified CVE ID and use it to determine relevance.\n\n**Official CVE-2025-24946 Description:**\nImplementation vulnerability in the QUIC protocol used by the picoquic library.\n\n---\n\n**Content from github.com_dbb8133c_20250624_123634.html (stripped)**\n\n*   **Relevance:** The content directly relates to the picoquic library, which is mentioned in the CVE description. The commit history and file changes suggest the implementation of fixes related to hash functions.\n*   **Extract:**\n    *   **Root cause of vulnerability:** Hash Denial-of-Service (DoS) attacks exploit the algorithmic complexity of hash tables when pushing them to their worst-case complexity. This is due to the use of weak hash functions, which allows for easy collisions.\n    *   **Weaknesses/vulnerabilities present:** The vulnerability is present in the implementation of the hash table used by the peer SCID to manage connections.\n    *   **Impact of exploitation:** An attacker is able to significantly slow down vulnerable servers. Some experimental results obtained with one vulnerable library showed us that the implementation suffered a factor 300 slowdown, when only 10k parallel connections were initiated by malicious clients.\n    *   **Attack vectors:** An attacker can freely choose CIDs that collide under the target hash function used by a vulnerable server.\n    *   **Mitigation or fix:** The code includes modifications to the hash function, including the introduction of `siphash.c` and modifications to `picohash.c` and `picoquic_internal.h`.  The fix is at commit `b80fd3f`.\n*   **More Detail than Official CVE Description:** Yes, the content provides much more detail by explaining the root cause of the vulnerability, the attack vectors, and the impact of exploitation, along with the files changed.\n\n**Content from github.com_de97bab9_20250624_123632.html (stripped)**\n\n*   **Relevance:** The content is a technical advisory on Hash Denial-of-Service attacks in multiple QUIC implementations. The document explicitly mentions and describes a vulnerability in `picoquic`, which is specified in the CVE.\n*   **Extract:**\n    *   **Weaknesses/vulnerabilities present:** Hash DoS attacks exploit collisions in weak hash functions, triggering the worst-case performance of hash tables. The vulnerability is present in hash table implementations, where the peer SCID is used to index the connection. Many server implementations use hash tables to manage connections, and furthermore that they use the peer SCID as a key to index the connection.\n    *   **Impact of exploitation:** By exploiting this vulnerability, an attacker is able to significantly slow down vulnerable servers. Some experimental results obtained with one vulnerable library showed us that the implementation suffered a factor 300 slowdown, when only 10k parallel connections were initiated by malicious clients.\n    *   **Attack vectors:** An attacker can freely choose CIDs that collide under the target hash function used by a vulnerable server.\n    *   **Required attacker capabilities/position:**  Malicious clients can induce significant burden with minimal effort, while the server bears the computational load.\n    *   **Mitigation or fix:** The advisory mentions `picoquic` fixed at commit `b80fd3f` on branch master, dated 2025-02-18, tracked under CVE-2025-24946.\n*   **More Detail than Official CVE Description:** Yes, the content provides more detail by explaining the root cause of the vulnerability, the attack vectors, and the impact of exploitation.\n\n**Content from github.com_efbea882_20250624_203317.html (stripped)**\n\n*   **Relevance:** The content describes the `xquic` library, which is not related to `picoquic`.\n*   **Response:** UNRELATED\n\n**Content from github.com_f3e2d4b0_20250624_203318.html (stripped)**\n\n*   **Relevance:** This content pertains to Apache Traffic Server, which is also mentioned in the technical advisory.\n*   **Response:** UNRELATED\n\n## Retriever Results\n\n### Top Combined Results\n\n| Rank | CWE ID | Name | Abstraction | Usage  | Retrievers | Individual Scores |\n|------|--------|------|-------------|-------|------------|-------------------|\n| 1 | 328 | Use of Weak Hash | Base | Allowed | sparse | 0.267 |\n| 2 | 407 | Inefficient Algorithmic Complexity | Class | Allowed-with-Review | sparse | 0.265 |\n| 3 | 330 | Use of Insufficiently Random Values | Class | Discouraged | sparse | 0.256 |\n| 4 | 916 | Use of Password Hash With Insufficient Computational Effort | Base | Allowed | sparse | 0.244 |\n| 5 | 294 | Authentication Bypass by Capture-replay | Base | Allowed | sparse | 0.222 |\n| 6 | 410 | Insufficient Resource Pool | Base | Allowed | dense | 0.507 |\n| 7 | 804 | Guessable CAPTCHA | Base | Allowed | graph | 0.002 |\n| 8 | 327 | Use of a Broken or Risky Cryptographic Algorithm | Class | Allowed-with-Review | sparse | 0.222 |\n| 9 | 301 | Reflection Attack in an Authentication Protocol | Base | Allowed | sparse | 0.221 |\n| 10 | 674 | Uncontrolled Recursion | Class | Allowed-with-Review | sparse | 0.218 |\n\n\n\n# Complete CWE Specifications\n\n\n## CWE-328: Use of Weak Hash\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).\n\n### Extended Description\n\n\nA hash function is defined as an algorithm that maps arbitrarily sized data into a fixed-sized digest (output) such that the following properties hold:\n\n\n  1. The algorithm is not invertible (also called \"one-way\" or \"not reversible\")\n\n  1. The algorithm is deterministic; the same input produces the same digest every time\n\n Building on this definition, a cryptographic hash function must also ensure that a malicious actor cannot leverage the hash function to have a reasonable chance of success at determining any of the following:\n\n  1. the original input (preimage attack), given only the digest\n\n  1. another input that can produce the same digest (2nd preimage attack), given the original input\n\n  1. a set of two or more inputs that evaluate to the same digest (birthday attack), given the actor can arbitrarily choose the inputs to be hashed and can do so a reasonable amount of times\n\nWhat is regarded as \"reasonable\" varies by context and threat model, but in general, \"reasonable\" could cover any attack that is more efficient than brute force (i.e., on average, attempting half of all possible combinations). Note that some attacks might be more efficient than brute force but are still not regarded as achievable in the real world.\n\nAny algorithm that does not meet the above conditions will generally be considered weak for general use in hashing.\n\n\nIn addition to algorithmic weaknesses, a hash function can be made weak by using the hash in a security context that breaks its security guarantees. For example, using a hash function without a salt for storing passwords (that are sufficiently short) could enable an adversary to create a \"rainbow table\" [REF-637] to recover the password under certain conditions; this attack works against such hash functions as MD5, SHA-1, and SHA-2.\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-326\nChildOf -> CWE-327\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Maintenance]** Since CWE 4.4, various cryptography-related entries including CWE-328 have been slated for extensive research, analysis, and community consultation to define consistent terminology, improve relationships, and reduce overlap or duplication. As of CWE 4.6, this work is still ongoing.\n\n\n\n### Observed Examples\n- **CVE-2022-30320:** Programmable Logic Controller (PLC) uses a protocol with a cryptographically insecure hashing algorithm for passwords.\n- **CVE-2005-4900:** SHA-1 algorithm is not collision-resistant.\n- **CVE-2020-25685:** DNS product uses a weak hash (CRC32 or SHA-1) of the query name, allowing attacker to forge responses by computing domain names with the same hash.\n\n\n\n\n## CWE-407: Inefficient Algorithmic Complexity\n**Abstraction:** Class\n**Status:** Incomplete\n\n### Description\nAn algorithm in a product has an inefficient worst-case computational complexity that may be detrimental to system performance and can be triggered by an attacker, typically using crafted manipulations that ensure that the worst case is being reached.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nQuadratic Complexity: Used when the algorithmic complexity is related to the square of the number of inputs (N^2)\n\n### Relationships\nChildOf -> CWE-405\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n\n### Observed Examples\n- **CVE-2021-32617:** C++ library for image metadata has \"quadratic complexity\" issue with unnecessarily repetitive parsing each time an invalid character is encountered\n- **CVE-2020-10735:** Python has \"quadratic complexity\" issue when converting string to int with many digits in unexpected bases\n- **CVE-2020-5243:** server allows ReDOS with crafted User-Agent strings, due to overlapping capture groups that cause excessive backtracking.\n\n\n\n\n## CWE-330: Use of Insufficiently Random Values\n**Abstraction:** Class\n**Status:** Stable\n\n### Description\nThe product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.\n\n### Extended Description\nWhen product generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-693\nCanPrecede -> CWE-804\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n### Additional Notes\n**[Relationship]** This can be primary to many other weaknesses such as cryptographic errors, authentication errors, symlink following, information leaks, and others.\n\n**[Maintenance]** As of CWE 4.3, CWE-330 and its descendants are being investigated by the CWE crypto team to identify gaps related to randomness and unpredictability, as well as the relationships between randomness and cryptographic primitives. This \"subtree analysis\" might result in the addition or deprecation of existing entries; the reorganization of relationships in some views, e.g. the research view (CWE-1000); more consistent use of terminology; and/or significant modifications to related entries.\n\n**[Maintenance]** As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, \"randomness\" is used heavily. However, within cryptography, \"entropy\" is distinct, typically implied as a measurement. There are no commonly-used definitions, even within standards documents and cryptography papers. Future versions of CWE will attempt to define these terms and, if necessary, distinguish between them in ways that are appropriate for different communities but do not reduce the usability of CWE for mapping, understanding, or other scenarios.\n\n\n\n### Observed Examples\n- **CVE-2021-3692:** PHP framework uses mt_rand() function (Marsenne Twister) when generating tokens\n- **CVE-2020-7010:** Cloud application on Kubernetes generates passwords using a weak random number generator based on deployment time.\n- **CVE-2009-3278:** Crypto product uses rand() library function to generate a recovery key, making it easier to conduct brute force attacks.\n\n\n\n\n## CWE-916: Use of Password Hash With Insufficient Computational Effort\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.\n\n### Extended Description\n\n\nMany password storage mechanisms compute a hash and store the hash, instead of storing the original password in plaintext. In this design, authentication involves accepting an incoming password, computing its hash, and comparing it to the stored hash.\n\n\nMany hash algorithms are designed to execute quickly with minimal overhead, even cryptographic hashes. However, this efficiency is a problem for password storage, because it can reduce an attacker's workload for brute-force password cracking. If an attacker can obtain the hashes through some other method (such as SQL injection on a database that stores hashes), then the attacker can store the hashes offline and use various techniques to crack the passwords by computing hashes efficiently. Without a built-in workload, modern attacks can compute large numbers of hashes, or even exhaust the entire space of all possible passwords, within a very short amount of time, using massively-parallel computing (such as cloud computing) and GPU, ASIC, or FPGA hardware. In such a scenario, an efficient hash algorithm helps the attacker.\n\n\nThere are several properties of a hash scheme that are relevant to its strength against an offline, massively-parallel attack:\n\n\n  - The amount of CPU time required to compute the hash (\"stretching\")\n\n  - The amount of memory required to compute the hash (\"memory-hard\" operations)\n\n  - Including a random value, along with the password, as input to the hash computation (\"salting\")\n\n  - Given a hash, there is no known way of determining an input (e.g., a password) that produces this hash value, other than by guessing possible inputs (\"one-way\" hashing)\n\n  - Relative to the number of all possible hashes that can be generated by the scheme, there is a low likelihood of producing the same hash for multiple different inputs (\"collision resistance\")\n\nNote that the security requirements for the product may vary depending on the environment and the value of the passwords. Different schemes might not provide all of these properties, yet may still provide sufficient security for the environment. Conversely, a solution might be very strong in preserving one property, which still being very weak for an attack against another property, or it might not be able to significantly reduce the efficiency of a massively-parallel attack.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-328\nChildOf -> CWE-327\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2008-1526:** Router does not use a salt with a hash, making it easier to crack passwords.\n- **CVE-2006-1058:** Router does not use a salt with a hash, making it easier to crack passwords.\n- **CVE-2008-4905:** Blogging software uses a hard-coded salt when calculating a password hash.\n\n\n\n\n## CWE-294: Authentication Bypass by Capture-replay\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nA capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).\n\n### Extended Description\nCapture-replay attacks are common and can be difficult to defeat without cryptography. They are a subset of network injection attacks that rely on observing previously-sent valid commands, then changing them slightly if necessary and resending the same commands to the server.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-1390\nChildOf -> CWE-287\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2005-3435:** product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.\n- **CVE-2007-4961:** Chain: cleartext transmission of the MD5 hash of password (CWE-319) enables attacks against a server that is susceptible to replay (CWE-294).\n\n\n\n\n## CWE-410: Insufficient Resource Pool\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product's resource pool is not large enough to handle peak demand, which allows an attacker to prevent others from accessing the resource by using a (relatively) large number of requests for resources.\n\n### Extended Description\nFrequently the consequence is a \"flood\" of connection or sessions.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-664\nCanPrecede -> CWE-400\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-1999-1363:** Large number of locks on file exhausts the pool and causes crash.\n- **CVE-2001-1340:** Product supports only one connection and does not disconnect a user who does not provide credentials.\n- **CVE-2002-0406:** Large number of connections without providing credentials allows connection exhaustion.\n\n\n\n\n## CWE-804: Guessable CAPTCHA\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product uses a CAPTCHA challenge, but the challenge can be guessed or automatically recognized by a non-human actor.\n\n### Extended Description\n\n\nAn automated attacker could bypass the intended protection of the CAPTCHA challenge and perform actions at a higher frequency than humanly possible, such as launching spam attacks.\n\n\nThere can be several different causes of a guessable CAPTCHA:\n\n\n  - An audio or visual image that does not have sufficient distortion from the unobfuscated source image.\n\n  - A question is generated with a format that can be automatically recognized, such as a math question.\n\n  - A question for which the number of possible answers is limited, such as birth years or favorite sports teams.\n\n  - A general-knowledge or trivia question for which the answer can be accessed using a data base, such as country capitals or popular entertainers.\n\n  - Other data associated with the CAPTCHA may provide hints about its contents, such as an image whose filename contains the word that is used in the CAPTCHA.\n\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-863\nChildOf -> CWE-1390\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2022-4036:** Chain: appointment booking app uses a weak hash (CWE-328) for generating a CAPTCHA, making it guessable (CWE-804)\n\n\n\n\n## CWE-327: Use of a Broken or Risky Cryptographic Algorithm\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product uses a broken or risky cryptographic algorithm or protocol.\n\n### Extended Description\n\n\nCryptographic algorithms are the methods by which data is scrambled to prevent observation or influence by unauthorized actors. Insecure cryptography can be exploited to expose sensitive information, modify data in unexpected ways, spoof identities of other users or devices, or other impacts.\n\n\nIt is very difficult to produce a secure algorithm, and even high-profile algorithms by accomplished cryptographic experts have been broken. Well-known techniques exist to break or weaken various kinds of cryptography. Accordingly, there are a small number of well-understood and heavily studied algorithms that should be used by most products. Using a non-standard or known-insecure algorithm is dangerous because a determined adversary may be able to break the algorithm and compromise whatever data has been protected.\n\n\nSince the state of cryptography advances so rapidly, it is common for an algorithm to be considered \"unsafe\" even if it was once thought to be strong. This can happen when new attacks are discovered, or if computing power increases so much that the cryptographic algorithm no longer provides the amount of protection that was originally thought.\n\n\nFor a number of reasons, this weakness is even more challenging to manage with hardware deployment of cryptographic algorithms as opposed to software implementation. First, if a flaw is discovered with hardware-implemented cryptography, the flaw cannot be fixed in most cases without a recall of the product, because hardware is not easily replaceable like software. Second, because the hardware product is expected to work for years, the adversary's computing power will only increase over time.\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-693\nPeerOf -> CWE-311\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n### Additional Notes\n**[Maintenance]** Since CWE 4.4, various cryptography-related entries, including CWE-327 and CWE-1240, have been slated for extensive research, analysis, and community consultation to define consistent terminology, improve relationships, and reduce overlap or duplication. As of CWE 4.6, this work is still ongoing.\n\n**[Maintenance]** The Taxonomy_Mappings to ISA/IEC 62443 were added in CWE 4.10, but they are still under review and might change in future CWE versions. These draft mappings were performed by members of the \"Mapping CWE to 62443\" subgroup of the CWE-CAPEC ICS/OT Special Interest Group (SIG), and their work is incomplete as of CWE 4.10. The mappings are included to facilitate discussion and review by the broader ICS/OT community, and they are likely to change in future CWE versions.\n\n\n\n### Observed Examples\n- **CVE-2022-30273:** SCADA-based protocol supports a legacy encryption mode that uses Tiny Encryption Algorithm (TEA) in ECB mode, which leaks patterns in messages and cannot protect integrity\n- **CVE-2022-30320:** Programmable Logic Controller (PLC) uses a protocol with a cryptographically insecure hashing algorithm for passwords.\n- **CVE-2008-3775:** Product uses \"ROT-25\" to obfuscate the password in the registry.\n\n\n\n\n## CWE-301: Reflection Attack in an Authentication Protocol\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nSimple authentication protocols are subject to reflection attacks if a malicious user can use the target machine to impersonate a trusted user.\n\n### Extended Description\n\n\nA mutual authentication protocol requires each party to respond to a random challenge by the other party by encrypting it with a pre-shared key. Often, however, such protocols employ the same pre-shared key for communication with a number of different entities. A malicious user or an attacker can easily compromise this protocol without possessing the correct key by employing a reflection attack on the protocol.\n\n\nReflection attacks capitalize on mutual authentication schemes in order to trick the target into revealing the secret shared between it and another valid user. In a basic mutual-authentication scheme, a secret is known to both the valid user and the server; this allows them to authenticate. In order that they may verify this shared secret without sending it plainly over the wire, they utilize a Diffie-Hellman-style scheme in which they each pick a value, then request the hash of that value as keyed by the shared secret. In a reflection attack, the attacker claims to be a valid user and requests the hash of a random value from the server. When the server returns this value and requests its own value to be hashed, the attacker opens another connection to the server. This time, the hash requested by the attacker is the value which the server requested in the first connection. When the server returns this hashed value, it is used in the first connection, authenticating the attacker successfully as the impersonated valid user.\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-1390\nPeerOf -> CWE-327\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Maintenance]** The term \"reflection\" is used in multiple ways within CWE and the community, so its usage should be reviewed.\n\n\n\n### Observed Examples\n- **CVE-2005-3435:** product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.\n\n\n\n\n## CWE-674: Uncontrolled Recursion\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nStack Exhaustion\n\n### Relationships\nChildOf -> CWE-834\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n\n### Observed Examples\n- **CVE-2007-1285:** Deeply nested arrays trigger stack exhaustion.\n- **CVE-2007-3409:** Self-referencing pointers create infinite loop and resultant stack exhaustion.\n- **CVE-2016-10707:** Javascript application accidentally changes input in a way that prevents a recursive call from detecting an exit condition.\n\n",
    "dense_results": [
      {
        "metadata": {
          "doc_id": "328",
          "name": "Use of Weak Hash",
          "type": "Base",
          "original_content": "The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).",
          "keyphrase_source": "rootcause:weak hash function",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse",
              "graph"
            ],
            "retriever_count": 3,
            "normalized_scores": {
              "dense": 0.5370893326418129,
              "sparse": 266.59713348086973,
              "graph": 1.7149474429757086
            }
          }
        },
        "similarity": 0.5370893326418129
      },
      {
        "metadata": {
          "doc_id": "916",
          "name": "Use of Password Hash With Insufficient Computational Effort",
          "type": "Base",
          "original_content": "The product generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.",
          "keyphrase_source": "rootcause:weak hash function",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse",
              "graph"
            ],
            "retriever_count": 3,
            "normalized_scores": {
              "dense": 0.5273355740620833,
              "sparse": 243.9991156743613,
              "graph": 1.7092408239394574
            }
          }
        },
        "similarity": 0.5273355740620833
      },
      {
        "metadata": {
          "doc_id": "410",
          "name": "Insufficient Resource Pool",
          "type": "Base",
          "original_content": "The product's resource pool is not large enough to handle peak demand, which allows an attacker to prevent others from accessing the resource by using a (relatively) large number of requests for resources.",
          "keyphrase_source": "rootcause:weak hash function",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "graph"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "dense": 0.5066851595200853,
              "graph": 1.5000847783974538
            }
          }
        },
        "similarity": 0.5066851595200853
      },
      {
        "metadata": {
          "doc_id": "836",
          "name": "Use of Password Hash Instead of Password for Authentication",
          "type": "Base",
          "original_content": "The product records password hashes in a data store, receives a hash of a password from a client, and compares the supplied hash to the hash obtained from the data store.",
          "keyphrase_source": "rootcause:weak hash function",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse",
              "graph"
            ],
            "retriever_count": 3,
            "normalized_scores": {
              "dense": 0.5048399447221708,
              "sparse": 214.51105573266688,
              "graph": 1.4888497357639565
            }
          }
        },
        "similarity": 0.5048399447221708
      },
      {
        "metadata": {
          "doc_id": "407",
          "name": "Inefficient Algorithmic Complexity",
          "type": "Class",
          "original_content": "An algorithm in a product has an inefficient worst-case computational complexity that may be detrimental to system performance and can be triggered by an attacker, typically using crafted manipulations that ensure that the worst case is being reached.",
          "keyphrase_source": "rootcause:weak hash function",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed-with-Review",
            "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
            "comments": "Examine children of this entry to see if there is a better fit",
            "reasons": [
              "Abstraction"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse",
              "graph"
            ],
            "retriever_count": 3,
            "normalized_scores": {
              "dense": 0.49614102838449897,
              "sparse": 264.8570513392626,
              "graph": 1.0174626775508269
            }
          }
        },
        "similarity": 0.49614102838449897
      },
      {
        "metadata": {
          "doc_id": "759",
          "name": "Use of a One-Way Hash without a Salt",
          "type": "Variant",
          "original_content": "The product uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the product does not also use a salt as part of the input.",
          "keyphrase_source": "rootcause:weak hash function",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.49123664951564266
            }
          }
        },
        "similarity": 0.49123664951564266
      },
      {
        "metadata": {
          "doc_id": "760",
          "name": "Use of a One-Way Hash with a Predictable Salt",
          "type": "Variant",
          "original_content": "The product uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the product uses a predictable salt as part of the input.",
          "keyphrase_source": "rootcause:weak hash function",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.4829491707940137
            }
          }
        },
        "similarity": 0.4829491707940137
      },
      {
        "metadata": {
          "doc_id": "834",
          "name": "Excessive Iteration",
          "type": "Class",
          "original_content": "The product performs an iteration or loop without sufficiently limiting the number of times that the loop is executed.",
          "keyphrase_source": "rootcause:weak hash function",
          "source": "dense",
          "mapping_notes": {
            "usage": "Discouraged",
            "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
            "comments": "Examine children of this entry to see if there is a better fit",
            "reasons": [
              "Abstraction"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.4753355538372336
            }
          }
        },
        "similarity": 0.4753355538372336
      },
      {
        "metadata": {
          "doc_id": "1325",
          "name": "Improperly Controlled Sequential Memory Allocation",
          "type": "Base",
          "original_content": "The product manages a group of objects or resources and performs a separate memory allocation for each object, but it does not properly limit the total amount of memory that is consumed by all of the combined objects.",
          "keyphrase_source": "rootcause:weak hash function",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.46873079660724803
            }
          }
        },
        "similarity": 0.46873079660724803
      },
      {
        "metadata": {
          "doc_id": "1176",
          "name": "Inefficient CPU Computation",
          "type": "Class",
          "original_content": "The product performs CPU computations using\n         algorithms that are not as efficient as they could be for the\n         needs of the developer, i.e., the computations can be\n         optimized further.",
          "keyphrase_source": "rootcause:weak hash function",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed-with-Review",
            "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
            "comments": "Examine children of this entry to see if there is a better fit",
            "reasons": [
              "Abstraction"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.46823713523273425
            }
          }
        },
        "similarity": 0.46823713523273425
      },
      {
        "metadata": {
          "doc_id": "401",
          "name": "Missing Release of Memory after Effective Lifetime",
          "type": "Variant",
          "original_content": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.4468804831750041
            }
          }
        },
        "similarity": 0.4468804831750041
      },
      {
        "metadata": {
          "doc_id": "835",
          "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
          "type": "Base",
          "original_content": "The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.446786022700599
            }
          }
        },
        "similarity": 0.446786022700599
      },
      {
        "metadata": {
          "doc_id": "294",
          "name": "Authentication Bypass by Capture-replay",
          "type": "Base",
          "original_content": "A capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse",
              "graph"
            ],
            "retriever_count": 3,
            "normalized_scores": {
              "dense": 0.44265407701646087,
              "sparse": 222.06386444460597,
              "graph": 1.6503727022400136
            }
          }
        },
        "similarity": 0.44265407701646087
      },
      {
        "metadata": {
          "doc_id": "1089",
          "name": "Large Data Table with Excessive Number of Indices",
          "type": "Base",
          "original_content": "The product uses a large data table that contains an excessively large number of\n\t\t\t\t\tindices.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.43970908703988626
            }
          }
        },
        "similarity": 0.43970908703988626
      },
      {
        "metadata": {
          "doc_id": "1331",
          "name": "Improper Isolation of Shared Resources in Network On Chip (NoC)",
          "type": "Base",
          "original_content": "The Network On Chip (NoC) does not isolate or incorrectly isolates its on-chip-fabric and internal resources such that they are shared between trusted and untrusted agents, creating timing channels.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.43740535855978
            }
          }
        },
        "similarity": 0.43740535855978
      },
      {
        "metadata": {
          "doc_id": "208",
          "name": "Observable Timing Discrepancy",
          "type": "Base",
          "original_content": "Two separate operations in a product require different amounts of time to complete, in a way that is observable to an actor and reveals security-relevant information about the state of the product, such as whether a particular operation was successful or not.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.43567719820007156
            }
          }
        },
        "similarity": 0.43567719820007156
      },
      {
        "metadata": {
          "doc_id": "770",
          "name": "Allocation of Resources Without Limits or Throttling",
          "type": "Base",
          "original_content": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "dense": 0.43562083032329774,
              "sparse": 67.00924514121934
            }
          }
        },
        "similarity": 0.43562083032329774
      },
      {
        "metadata": {
          "doc_id": "400",
          "name": "Uncontrolled Resource Consumption",
          "type": "Class",
          "original_content": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Discouraged",
            "rationale": "CWE-400 is intended for incorrect behaviors in which the product is expected to track and restrict how many resources it consumes, but CWE-400 is often misused because it is conflated with the \"technical impact\" of vulnerabilities in which resource consumption occurs. It is sometimes used for low-information vulnerability reports. It is a level-1 Class (i.e., a child of a Pillar).",
            "comments": "Closely analyze the specific mistake that is causing resource consumption, and perform a CWE mapping for that mistake. Consider children/descendants such as CWE-770: Allocation of Resources Without Limits or Throttling, CWE-771: Missing Reference to Active Allocated Resource, CWE-410: Insufficient Resource Pool, CWE-772: Missing Release of Resource after Effective Lifetime, CWE-834: Excessive Iteration, CWE-405: Asymmetric Resource Consumption (Amplification), and others.",
            "reasons": [
              "Frequent Misuse"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse",
              "graph"
            ],
            "retriever_count": 3,
            "normalized_scores": {
              "dense": 0.4323501872269504,
              "sparse": 65.67394027427275,
              "graph": 1.0180908829596367
            }
          }
        },
        "similarity": 0.4323501872269504
      },
      {
        "metadata": {
          "doc_id": "696",
          "name": "Incorrect Behavior Order",
          "type": "Class",
          "original_content": "The product performs multiple related behaviors, but the behaviors are performed in the wrong order in ways which may produce resultant weaknesses.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed-with-Review",
            "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
            "comments": "Examine children of this entry to see if there is a better fit",
            "reasons": [
              "Abstraction"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.4314826772872991
            }
          }
        },
        "similarity": 0.4314826772872991
      },
      {
        "metadata": {
          "doc_id": "799",
          "name": "Improper Control of Interaction Frequency",
          "type": "Class",
          "original_content": "The product does not properly limit the number or frequency of interactions that it has with an actor, such as the number of incoming requests.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed-with-Review",
            "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
            "comments": "Examine children of this entry to see if there is a better fit",
            "reasons": [
              "Abstraction"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.4311306849872645
            }
          }
        },
        "similarity": 0.4311306849872645
      }
    ],
    "sparse_results": [
      {
        "cwe_id": "328",
        "name": "Use of Weak Hash",
        "description": "The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).",
        "score": 266.59713348086973,
        "matched_text": "CWE-328: Use of Weak Hash\n\nType: Base\n\nStatus: Draft\n\nDescription:\n\nThe product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).\n\nExtended Details:\n\n\n\nA hash function is defined as an algorithm that maps arbitrarily sized data into a fixed-sized digest (output) such that the following properties hold:\n\n\n  1. The algorithm is not invertible (also called \"one-way\" or \"not reversible\")\n\n  1. The algorithm is deterministic; the same input produces the same digest every time\n\n Building on this definition, a cryptographic hash function must also ensure that a malicious actor cannot leverage the hash function to have a reasonable chance of success at determining any of the following:\n\n  1. the original input (preimage attack), given only the digest\n\n  1. another input that can produce the same digest (2nd preimage attack), given the original input\n\n  1. a set of two or more inputs that evaluate to the same digest (birthday attack), given the actor can arbitrarily choose the inputs to be hashed and can do so a reasonable amount of times\n\nWhat is regarded as \"reasonable\" varies by context and threat model, but in general, \"reasonable\" could cover any attack that is more efficient than brute force (i.e., on average, attempting half of all possible combinations). Note that some attacks might be more efficient than brute force but are still not regarded as achievable in the real world.\n\nAny algorithm that does not meet the above conditions will generally be considered weak for general use in hashing.\n\n\nIn addition to algorithmic weaknesses, a hash function can be made weak by using the hash in a security context that breaks its security guarantees. For example, using a hash function without a salt for storing passwords (that are sufficiently short) could enable an adversary to create a \"rainbow table\" [REF-637] to recover the password under certain conditions; this attack works against such hash functions as MD5, SHA-1, and SHA-2.\n\n\nReal-World Examples:\n\n- CVE-2022-30320: Programmable Logic Controller (PLC) uses a protocol with a cryptographically insecure hashing algorithm for passwords.\n\n- CVE-2005-4900: SHA-1 algorithm is not collision-resistant.\n\n- CVE-2020-25685: DNS product uses a weak hash (CRC32 or SHA-1) of the query name, allowing attacker to forge responses by computing domain names with the same hash.\n\n- CVE-2012-6707: blogging product uses MD5-based algorithm for passwords.\n\n- CVE-2019-14855: forging of certificate signatures using SHA-1 collisions.\n\n- CVE-2017-15999: mobile app for backup sends SHA-1 hash of password in cleartext.\n\n- CVE-2006-4068: Hard-coded hashed values for username and password contained in client-side script, allowing brute-force offline attacks.\n\nTop 25 CWE Examples:\n\n- CVE-2021-21474: SAP HANA Database, versions - 1.0, 2.0, accepts SAML tokens with MD5 digest, an attacker who manages to obtain an MD5-digest signed SAML Assertion issued for an SAP HANA instance might be able to tamper with it and alter it in a way that the digest continues to be the same and without invalidating the digital signature, this allows them to impersonate as user in HANA database and be able to read the contents in the database.\n\n- CVE-2021-23855: The user and password data base is exposed by an unprotected web server resource. Passwords are hashed with a weak hashing algorithm and therefore allow an attacker to determine the password by using rainbow tables.\n\n- CVE-2021-28093: OX Documents before 7.10.5-rev5 has Incorrect Access Control of converted images because hash collisions can occur, due to use of Adler32.\n\n- CVE-2021-28094: OX Documents before 7.10.5-rev7 has Incorrect Access Control for converted documents because hash collisions can occur, due to use of CRC32.\n\n- CVE-2021-28095: OX Documents before 7.10.5-rev5 has Incorrect Access Control for documents that contain XML structures because hash collisions can occur, due to use of CRC32.\n\n- CVE-2022-3433: The aeson library is not safe to use to consume untrusted JSON input. A remote user could abuse this flaw to produce a hash collision in the underlying unordered-containers library by sending specially crafted JSON data, resulting in a denial of service.\n\n- CVE-2022-21653: Jawn is an open source JSON parser. Extenders of the `org.typelevel.jawn.SimpleFacade` and `org.typelevel.jawn.MutableFacade` who don't override `objectContext()` are vulnerable to a hash collision attack which may result in a denial of service. Most applications do not implement these traits directly, but inherit from a library. `jawn-parser-1.3.1` fixes this issue and users are advised to upgrade. For users unable to upgrade override `objectContext()` to use a collision-safe collection.\n\n- CVE-2022-22321: IBM MQ Appliance 9.2 CD and 9.2 LTS local messaging users stored with a password hash that provides insufficient protection. IBM X-Force ID: 218368.\n\n- CVE-2022-25156: Use of Weak Hash vulnerability in Mitsubishi Electric MELSEC iQ-F series FX5U(C) CPU all versions, Mitsubishi Electric MELSEC iQ-F series FX5UJ CPU all versions, Mitsubishi Electric MELSEC iQ-R series R00/01/02CPU all versions, Mitsubishi Electric MELSEC iQ-R series R04/08/16/32/120(EN)CPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120SFCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PSFCPU all versions, Mitsubishi Electric MELSEC iQ-R series RJ71C24(-R2/R4) all versions, Mitsubishi Electric MELSEC iQ-R series RJ71EN71 all versions, Mitsubishi Electric MELSEC iQ-R series RJ72GF15-T2 all versions, Mitsubishi Electric MELSEC Q series Q03UDECPU all versions, Mitsubishi Electric MELSEC Q series Q04/06/10/13/20/26/50/100UDEHCPU all versions, Mitsubishi Electric MELSEC Q series Q03/04/06/13/26UDVCPU all versions, Mitsubishi Electric MELSEC Q series Q04/06/13/26UDPVCPU all versions, Mitsubishi Electric MELSEC Q series QJ71C24N(-R2/R4) all versions, Mitsubishi Electric MELSEC Q series QJ71E71-100 all versions, Mitsubishi Electric MELSEC Q series QJ72BR15 all versions, Mitsubishi Electric MELSEC Q series QJ72LP25(-25/G/GE) all versions, Mitsubishi Electric MELSEC L series L02/06/26CPU(-P) all versions, Mitsubishi Electric MELSEC L series L26CPU-(P)BT all versions, Mitsubishi Electric MELSEC L series LJ71C24(-R2) all versions, Mitsubishi Electric MELSEC L series LJ71E71-100 all versions and Mitsubishi Electric MELSEC L series LJ72GF15-T2 all versions allows a remote unauthenticated attacker to login to the product by using a password reversed from a previously eavesdropped password hash.\n\n- CVE-2022-30285: In Quest KACE Systems Management Appliance (SMA) through 12.0, a hash collision is possible during authentication. This may allow authentication with invalid credentials.\n\n- CVE-2022-31459: Owl Labs Meeting Owl 5.2.0.15 allows attackers to retrieve the passcode hash via a certain c 10 value over Bluetooth.\n\n- CVE-2022-36555: Hytec Inter HWL-2511-SS v1.05 and below implements a SHA512crypt hash for the root account which can be easily cracked via a brute-force attack.\n\n- CVE-2022-4036: The Appointment Hour Booking plugin for WordPress is vulnerable to CAPTCHA bypass in versions up to, and including, 1.3.72. This is due to the use of insufficiently strong hashing algorithm on the CAPTCHA secret that is also displayed to the user via a cookie.\n\n- CVE-2022-43922: IBM App Connect Enterprise Certified Container 4.1, 4.2, 5.0, 5.1, 5.2, 6.0, 6.1, and 6.2 could disclose sensitive information to an attacker due to a weak hash of an API Key in the configuration. IBM X-Force ID: 241583.\n\n- CVE-2022-45379: Jenkins Script Security Plugin 1189.vb_a_b_7c8fd5fde and earlier stores whole-script approvals as the SHA-1 hash of the script, making it vulnerable to collision attacks.\n\n- CVE-2021-25761: In JetBrains Ktor before 1.5.0, a birthday attack on SessionStorage key was possible.\n\n- CVE-2021-37606: Meow hash 0.5/calico does not sufficiently thwart key recovery by an attacker who can query whether there's a collision in the bottom bits of the hashes of two messages, as demonstrated by an attack against a long-running web service that allows the attacker to infer collisions by measuring timing differences.\n\n- CVE-2021-39182: EnroCrypt is a Python module for encryption and hashing. Prior to version 1.1.4, EnroCrypt used the MD5 hashing algorithm in the hashing file. Beginners who are unfamiliar with hashes can face problems as MD5 is considered an insecure hashing algorithm. The vulnerability is patched in v1.1.4 of the product. As a workaround, users can remove the `MD5` hashing function from the file `hashing.py`.\n\n- CVE-2021-42216: A Broken or Risky Cryptographic Algorithm exists in AnonAddy 0.8.5 via VerificationController.php.\n\n- CVE-2021-44150: The client in tusdotnet through 2.5.0 relies on SHA-1 to prevent spoofing of file content.\n\n- CVE-2022-21800: MMP: All versions prior to v1.0.3, PTP C-series: Device versions prior to v2.8.6.1, and PTMP C-series and A5x: Device versions prior to v2.5.4.1 uses the MD5 algorithm to hash the passwords before storing them but does not salt the hash. As a result, attackers may be able to crack the hashed passwords.\n\n- CVE-2022-29161: XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. The XWiki Crypto API will generate X509 certificates signed by default using SHA1 with RSA, which is not considered safe anymore for use in certificate signatures, due to the risk of collisions with SHA1. The problem has been patched in XWiki version 13.10.6, 14.3.1 and 14.4-rc-1. Since then, the Crypto API will generate X509 certificates signed by default using SHA256 with RSA. Administrators are advised to upgrade their XWiki installation to one of the patched versions. If the upgrade is not possible, it is possible to patch the module xwiki-platform-crypto in a local installation by applying the change exposed in 26728f3 and re-compiling the module.\n\n- CVE-2022-29566: The Bulletproofs 2017/1066 paper mishandles Fiat-Shamir generation because the hash computation fails to include all of the public values from the Zero Knowledge proof statement as well as all of the public values computed in the proof, aka the Frozen Heart issue.\n\n- CVE-2022-29835: WD Discovery software executable files were signed with an unsafe SHA-1 hashing algorithm. An attacker could use this weakness to create forged certificate signatures due to the use of a hashing algorithm that is not collision-free. This could thereby impact the confidentiality of user content. This issue affects: Western Digital WD Discovery WD Discovery Desktop App versions prior to 4.4.396 on Mac; WD Discovery Desktop App versions prior to 4.4.396 on Windows.\n\n- CVE-2022-45141: Since the Windows Kerberos RC4-HMAC Elevation of Privilege Vulnerability was disclosed by Microsoft on Nov 8 2022 and per RFC8429 it is assumed that rc4-hmac is weak, Vulnerable Samba Active Directory DCs will issue rc4-hmac encrypted tickets despite the target server supporting better encryption (eg aes256-cts-hmac-sha1-96).\n\n- CVE-2022-47931: IO FinNet tss-lib before 2.0.0 allows a collision of hash values.\n\nRelated Weaknesses:\n\n- CWE-326 (ChildOf)\n\n- CWE-327 (ChildOf)",
        "type": "Base",
        "source": "sparse",
        "search_source": "rootcause:weak hash function",
        "sources": [
          "base",
          "rootcause"
        ],
        "boost_factor": 3.0,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          }
        }
      },
      {
        "cwe_id": "407",
        "name": "Inefficient Algorithmic Complexity",
        "description": "An algorithm in a product has an inefficient worst-case computational complexity that may be detrimental to system performance and can be triggered by an attacker, typically using crafted manipulations that ensure that the worst case is being reached.",
        "score": 264.8570513392626,
        "matched_text": "CWE-407: Inefficient Algorithmic Complexity\n\nType: Class\n\nStatus: Incomplete\n\nAlternative Terms:\n\nQuadratic Complexity - Used when the algorithmic complexity is related to the square of the number of inputs (N^2)\n\nQuadratic Complexity - Used when the algorithmic complexity is related to the square of the number of inputs (N^2)\n\nQuadratic Complexity - Used when the algorithmic complexity is related to the square of the number of inputs (N^2)\n\nDescription:\n\nAn algorithm in a product has an inefficient worst-case computational complexity that may be detrimental to system performance and can be triggered by an attacker, typically using crafted manipulations that ensure that the worst case is being reached.\n\nReal-World Examples:\n\n- CVE-2021-32617: C++ library for image metadata has \"quadratic complexity\" issue with unnecessarily repetitive parsing each time an invalid character is encountered\n\n- CVE-2020-10735: Python has \"quadratic complexity\" issue when converting string to int with many digits in unexpected bases\n\n- CVE-2020-5243: server allows ReDOS with crafted User-Agent strings, due to overlapping capture groups that cause excessive backtracking.\n\n- CVE-2014-1474: Perl-based email address parser has \"quadratic complexity\" issue via a string that does not contain a valid address\n\n- CVE-2003-0244: CPU consumption via inputs that cause many hash table collisions.\n\n- CVE-2003-0364: CPU consumption via inputs that cause many hash table collisions.\n\n- CVE-2002-1203: Product performs unnecessary processing before dropping an invalid packet.\n\n- CVE-2001-1501: CPU and memory consumption using many wildcards.\n\n- CVE-2004-2527: Product allows attackers to cause multiple copies of a program to be loaded more quickly than the program can detect that other copies are running, then exit. This type of error should probably have its own category, where teardown takes more time than initialization.\n\n- CVE-2006-6931: Network monitoring system allows remote attackers to cause a denial of service (CPU consumption and detection outage) via crafted network traffic, aka a \"backtracking attack.\"\n\n- CVE-2006-3380: Wiki allows remote attackers to cause a denial of service (CPU consumption) by performing a diff between large, crafted pages that trigger the worst case algorithmic complexity.\n\n- CVE-2006-3379: Wiki allows remote attackers to cause a denial of service (CPU consumption) by performing a diff between large, crafted pages that trigger the worst case algorithmic complexity.\n\n- CVE-2005-2506: OS allows attackers to cause a denial of service (CPU consumption) via crafted Gregorian dates.\n\n- CVE-2005-1792: Memory leak by performing actions faster than the software can clear them.\n\nTop 25 CWE Examples:\n\n- CVE-2021-34549: An issue was discovered in Tor before 0.4.6.5, aka TROVE-2021-005. Hashing is mishandled for certain retrieval of circuit data. Consequently. an attacker can trigger the use of an attacker-chosen circuit ID to cause algorithm inefficiency.\n\n- CVE-2021-32617: Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An inefficient algorithm (quadratic complexity) was found in Exiv2 versions v0.27.3 and earlier. The inefficient algorithm is triggered when Exiv2 is used to write metadata into a crafted image file. An attacker could potentially exploit the vulnerability to cause a denial of service, if they can trick the victim into running Exiv2 on a crafted image file. The bug is fixed in version v0.27.4. Note that this bug is only triggered when _writing_ the metadata, which is a less frequently used Exiv2 operation than _reading_ the metadata. For example, to trigger the bug in the Exiv2 command-line application, you need to add an extra command-line argument such as `rm`.\n\n- CVE-2021-43859: XStream is an open source java library to serialize objects to XML and back again. Versions prior to 1.4.19 may allow a remote attacker to allocate 100% CPU time on the target system depending on CPU type or parallel execution of such a payload resulting in a denial of service only by manipulating the processed input stream. XStream 1.4.19 monitors and accumulates the time it takes to add elements to collections and throws an exception if a set threshold is exceeded. Users are advised to upgrade as soon as possible. Users unable to upgrade may set the NO_REFERENCE mode to prevent recursion. See GHSA-rmr5-cpv2-vgjf for further details on a workaround if an upgrade is not possible.\n\n- CVE-2021-41119: Wire-server is the system server for the wire back-end services. Releases prior to v2022-03-01 are subject to a denial of service attack via a crafted object causing a hash collision. This collision causes the server to spend at least quadratic time parsing it which can lead to a denial of service for a heavily used server. The issue has been fixed in wire-server 2022-03-01 and is already deployed on all Wire managed services. On premise instances of wire-server need to be updated to 2022-03-01, so that their backends are no longer affected. There are no known workarounds for this issue.\n\n- CVE-2021-33582: Cyrus IMAP before 3.4.2 allows remote attackers to cause a denial of service (multiple-minute daemon hang) via input that is mishandled during hash-table interaction. Because there are many insertions into a single bucket, strcmp becomes slow. This is fixed in 3.4.2, 3.2.8, and 3.0.16.\n\n- CVE-2021-41168: Snudown is a reddit-specific fork of the Sundown Markdown parser used by GitHub, with Python integration added. In affected versions snudown was found to be vulnerable to denial of service attacks to its reference table implementation. References written in markdown ` [reference_name]: https://www.example.com` are inserted into a hash table which was found to have a weak hash function, meaning that an attacker can reliably generate a large number of collisions for it. This makes the hash table vulnerable to a hash-collision DoS attack, a type of algorithmic complexity attack. Further the hash table allowed for duplicate entries resulting in long retrieval times. Proofs of concept and further discussion of the hash collision issue are discussed on the snudown GHSA(https://github.com/reddit/snudown/security/advisories/GHSA-6gvv-9q92-w5f6). Users are advised to update to version 1.7.0.\n\n- CVE-2022-39209: cmark-gfm is GitHub's fork of cmark, a CommonMark parsing and rendering library and program in C. In versions prior to 0.29.0.gfm.6 a polynomial time complexity issue in cmark-gfm's autolink extension may lead to unbounded resource exhaustion and subsequent denial of service. Users may verify the patch by running `python3 -c 'print(\"![l\"* 100000 + \"\\\\n\")' | ./cmark-gfm -e autolink`, which will resource exhaust on unpatched cmark-gfm but render correctly on patched cmark-gfm. This vulnerability has been patched in 0.29.0.gfm.6. Users are advised to upgrade. Users unable to upgrade should disable the use of the autolink extension.\n\n- CVE-2022-40188: Knot Resolver before 5.5.3 allows remote attackers to cause a denial of service (CPU consumption) because of algorithmic complexity. During an attack, an authoritative server must return large NS sets or address sets.\n\n- CVE-2022-45061: An issue was discovered in Python before 3.11.1. An unnecessary quadratic algorithm exists in one path when processing some inputs to the IDNA (RFC 3490) decoder, such that a crafted, unreasonably long name being presented to the decoder could lead to a CPU denial of service. Hostnames are often supplied by remote servers that could be controlled by a malicious actor; in such a scenario, they could trigger excessive CPU consumption on the client attempting to make use of an attacker-supplied supposed hostname. For example, the attack payload could be placed in the Location header of an HTTP response with status code 302. A fix is planned in 3.11.1, 3.10.9, 3.9.16, 3.8.16, and 3.7.16.\n\nRelated Weaknesses:\n\n- CWE-405 (ChildOf)",
        "type": "Class",
        "source": "sparse",
        "search_source": "rootcause:weak hash function",
        "sources": [
          "base",
          "rootcause"
        ],
        "boost_factor": 3.0,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed-with-Review",
            "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
            "comments": "Examine children of this entry to see if there is a better fit",
            "reasons": [
              "Abstraction"
            ]
          }
        }
      },
      {
        "cwe_id": "330",
        "name": "Use of Insufficiently Random Values",
        "description": "The product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.",
        "score": 255.5089161401263,
        "matched_text": "CWE-330: Use of Insufficiently Random Values\n\nType: Class\n\nStatus: Stable\n\nDescription:\n\nThe product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.\n\nExtended Details:\n\nWhen product generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information.\n\nReal-World Examples:\n\n- CVE-2021-3692: PHP framework uses mt_rand() function (Marsenne Twister) when generating tokens\n\n- CVE-2020-7010: Cloud application on Kubernetes generates passwords using a weak random number generator based on deployment time.\n\n- CVE-2009-3278: Crypto product uses rand() library function to generate a recovery key, making it easier to conduct brute force attacks.\n\n- CVE-2009-3238: Random number generator can repeatedly generate the same value.\n\n- CVE-2009-2367: Web application generates predictable session IDs, allowing session hijacking.\n\n- CVE-2009-2158: Password recovery utility generates a relatively small number of random passwords, simplifying brute force attacks.\n\n- CVE-2009-0255: Cryptographic key created with a seed based on the system time.\n\n- CVE-2008-5162: Kernel function does not have a good entropy source just after boot.\n\n- CVE-2008-4905: Blogging software uses a hard-coded salt when calculating a password hash.\n\n- CVE-2008-4929: Bulletin board application uses insufficiently random names for uploaded files, allowing other users to access private files.\n\n- CVE-2008-3612: Handheld device uses predictable TCP sequence numbers, allowing spoofing or hijacking of TCP connections.\n\n- CVE-2008-2433: Web management console generates session IDs based on the login time, making it easier to conduct session hijacking.\n\n- CVE-2008-0166: SSL library uses a weak random number generator that only generates 65,536 unique keys.\n\n- CVE-2008-2108: Chain: insufficient precision causes extra zero bits to be assigned, reducing entropy for an API function that generates random numbers.\n\n- CVE-2008-2108: Chain: insufficient precision (CWE-1339) in random-number generator causes some zero bits to be reliably generated, reducing the amount of entropy (CWE-331)\n\n- CVE-2008-2020: CAPTCHA implementation does not produce enough different images, allowing bypass using a database of all possible checksums.\n\n- CVE-2008-0087: DNS client uses predictable DNS transaction IDs, allowing DNS spoofing.\n\n- CVE-2008-0141: Application generates passwords that are based on the time of day.\n\nTop 25 CWE Examples:\n\n- CVE-2021-38377: OX App Suite through 7.10.5 allows XSS via JavaScript code in an anchor HTML comment within truncated e-mail, because there is a predictable UUID with HTML transformation results.\n\n- CVE-2021-39249: Invision Community (aka IPS Community Suite or IP-Board) before 4.6.5.1 allows reflected XSS because the filenames of uploaded files become predictable through a brute-force attack against the PHP mt_rand function.\n\n- CVE-2021-24087: Azure IoT CLI extension Elevation of Privilege Vulnerability\n\n- CVE-2021-22309: There is insecure algorithm vulnerability in Huawei products. A module uses less random input in a secure mechanism. Attackers can exploit this vulnerability by brute forcing to obtain sensitive message. This can lead to information leak. Affected product versions include:USG9500 versions V500R001C30SPC200, V500R001C60SPC500,V500R005C00SPC200;USG9520 versions V500R005C00;USG9560 versions V500R005C00;USG9580 versions V500R005C00.\n\n- CVE-2021-3448: A flaw was found in dnsmasq in versions before 2.85. When configured to use a specific server for a given network interface, dnsmasq uses a fixed port while forwarding queries. An attacker on the network, able to find the outgoing port used by dnsmasq, only needs to guess the random transmission ID to forge a reply and get it accepted by dnsmasq. This flaw makes a DNS Cache Poisoning attack much easier. The highest threat from this vulnerability is to data integrity.\n\n- CVE-2021-23020: The NAAS 3.x before 3.10.0 API keys were generated using an insecure pseudo-random string and hashing algorithm which could lead to predictable keys.\n\n- CVE-2021-41829: Zoho ManageEngine Remote Access Plus before 10.1.2121.1 relies on the application's build number to calculate a certain encryption key.\n\n- CVE-2021-31520: A weak session token authentication bypass vulnerability in Trend Micro IM Security 1.6 and 1.6.5 could allow an remote attacker to guess currently logged-in administrators' session session token in order to gain access to the product's web management interface.\n\n- CVE-2021-0466: In startIpClient of ClientModeImpl.java, there is a possible identifier which could be used to track a device. This could lead to remote information disclosure to a proximal attacker, with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10Android ID: A-154114734\n\n- CVE-2021-24998: The Simple JWT Login WordPress plugin before 3.3.0 can be used to create new WordPress user accounts with a randomly generated password. The password is generated using the str_shuffle PHP function that \"does not generate cryptographically secure values, and should not be used for cryptographic purposes\" according to PHP's documentation.\n\n- CVE-2021-28099: In Netflix OSS Hollow, since the Files.exists(parent) is run before creating the directories, an attacker can pre-create these directories with wide permissions. Additionally, since an insecure source of randomness is used, the file names to be created can be deterministically calculated.\n\n- CVE-2022-22922: TP-Link TL-WA850RE Wi-Fi Range Extender before v6_200923 was discovered to use highly predictable and easily detectable session keys, allowing attackers to gain administrative privileges.\n\n- CVE-2022-23138: ZTE's MF297D product has cryptographic issues vulnerability. Due to the use of weak random values, the security of the device is reduced, and it may face the risk of attack.\n\n- CVE-2022-24406: OX App Suite through 7.10.6 allows SSRF because multipart/form-data boundaries are predictable, and this can lead to injection into internal Documentconverter API calls.\n\n- CVE-2022-30295: uClibc-ng through 1.0.40 and uClibc through 0.9.33.2 use predictable DNS transaction IDs that may lead to DNS cache poisoning. This is related to a reset of a value to 0x2.\n\n- CVE-2022-31157: LTI 1.3 Tool Library is a library used for building IMS-certified LTI 1.3 tool providers in PHP. Prior to version 5.0, the function used to generate random nonces was not sufficiently cryptographically complex. Users should upgrade to version 5.0 to receive a patch. There are currently no known workarounds.\n\n- CVE-2022-32296: The Linux kernel before 5.17.9 allows TCP servers to identify clients by observing what source ports are used. This occurs because of use of Algorithm 4 (\"Double-Hash Port Selection Algorithm\") of RFC 6056.\n\n- CVE-2022-40299: In Singular before 4.3.1, a predictable /tmp pathname is used (e.g., by sdb.cc), which allows local users to gain the privileges of other users via a procedure in a file under /tmp. NOTE: this CVE Record is about sdb.cc and similar files in the Singular interface that have predictable /tmp pathnames; this CVE Record is not about the lack of a safe temporary-file creation capability in the Singular language.\n\n- CVE-2021-26726: A remote code execution vulnerability affecting a Valmet DNA service listening on TCP port 1517, allows an attacker to execute commands with SYSTEM privileges This issue affects: Valmet DNA versions from Collection 2012 until Collection 2021.\n\n- CVE-2021-45487: In NetBSD through 9.2, the IPv4 ID generation algorithm does not use appropriate cryptographic measures.\n\n- CVE-2021-45488: In NetBSD through 9.2, there is an information leak in the TCP ISN (ISS) generation algorithm.\n\nRelated Weaknesses:\n\n- CWE-693 (ChildOf)\n\n- CWE-804 (CanPrecede)",
        "type": "Class",
        "source": "sparse",
        "search_source": "rootcause:weak hash function",
        "sources": [
          "base",
          "rootcause"
        ],
        "boost_factor": 3.0,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Discouraged",
            "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
            "comments": "Examine children of this entry to see if there is a better fit",
            "reasons": [
              "Abstraction"
            ]
          }
        }
      },
      {
        "cwe_id": "916",
        "name": "Use of Password Hash With Insufficient Computational Effort",
        "description": "The product generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.",
        "score": 243.9991156743613,
        "matched_text": "CWE-916: Use of Password Hash With Insufficient Computational Effort\n\nType: Base\n\nStatus: Incomplete\n\nDescription:\n\nThe product generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.\n\nExtended Details:\n\n\n\nMany password storage mechanisms compute a hash and store the hash, instead of storing the original password in plaintext. In this design, authentication involves accepting an incoming password, computing its hash, and comparing it to the stored hash.\n\n\nMany hash algorithms are designed to execute quickly with minimal overhead, even cryptographic hashes. However, this efficiency is a problem for password storage, because it can reduce an attacker's workload for brute-force password cracking. If an attacker can obtain the hashes through some other method (such as SQL injection on a database that stores hashes), then the attacker can store the hashes offline and use various techniques to crack the passwords by computing hashes efficiently. Without a built-in workload, modern attacks can compute large numbers of hashes, or even exhaust the entire space of all possible passwords, within a very short amount of time, using massively-parallel computing (such as cloud computing) and GPU, ASIC, or FPGA hardware. In such a scenario, an efficient hash algorithm helps the attacker.\n\n\nThere are several properties of a hash scheme that are relevant to its strength against an offline, massively-parallel attack:\n\n\n  - The amount of CPU time required to compute the hash (\"stretching\")\n\n  - The amount of memory required to compute the hash (\"memory-hard\" operations)\n\n  - Including a random value, along with the password, as input to the hash computation (\"salting\")\n\n  - Given a hash, there is no known way of determining an input (e.g., a password) that produces this hash value, other than by guessing possible inputs (\"one-way\" hashing)\n\n  - Relative to the number of all possible hashes that can be generated by the scheme, there is a low likelihood of producing the same hash for multiple different inputs (\"collision resistance\")\n\nNote that the security requirements for the product may vary depending on the environment and the value of the passwords. Different schemes might not provide all of these properties, yet may still provide sufficient security for the environment. Conversely, a solution might be very strong in preserving one property, which still being very weak for an attack against another property, or it might not be able to significantly reduce the efficiency of a massively-parallel attack.\n\nReal-World Examples:\n\n- CVE-2008-1526: Router does not use a salt with a hash, making it easier to crack passwords.\n\n- CVE-2006-1058: Router does not use a salt with a hash, making it easier to crack passwords.\n\n- CVE-2008-4905: Blogging software uses a hard-coded salt when calculating a password hash.\n\n- CVE-2002-1657: Database server uses the username for a salt when encrypting passwords, simplifying brute force attacks.\n\n- CVE-2001-0967: Server uses a constant salt when encrypting passwords, simplifying brute force attacks.\n\n- CVE-2005-0408: chain: product generates predictable MD5 hashes using a constant value combined with username, allowing authentication bypass.\n\nTop 25 CWE Examples:\n\n- CVE-2020-25754: An issue was discovered on Enphase Envoy R3.x and D4.x devices. There is a custom PAM module for user authentication that circumvents traditional user authentication. This module uses a password derived from the MD5 hash of the username and serial number. The serial number can be retrieved by an unauthenticated user at /info.xml. Attempts to change the user password via passwd or other tools have no effect.\n\n- CVE-2021-22741: Use of Password Hash with Insufficient Computational Effort vulnerability exists in ClearSCADA (all versions), EcoStruxure Geo SCADA Expert 2019 (all versions), and EcoStruxure Geo SCADA Expert 2020 (V83.7742.1 and prior), which could cause the revealing of account credentials when server database files are available. Exposure of these files to an attacker can make the system vulnerable to password decryption attacks. Note that \u201c.sde\u201d configuration export files do not contain user account password hashes.\n\n- CVE-2021-32519: Use of password hash with insufficient computational effort vulnerability in QSAN Storage Manager, XEVO, SANOS allows remote attackers to recover the plain-text password by brute-forcing the MD5 hash. The referred vulnerability has been solved with the updated version of QSAN Storage Manager v3.3.2, QSAN XEVO v2.1.0, and QSAN SANOS v2.1.0.\n\n- CVE-2021-33003: Delta Electronics DIAEnergie Version 1.7.5 and prior may allow an attacker to retrieve passwords in cleartext due to a weak hashing algorithm.\n\n- CVE-2021-37551: In JetBrains YouTrack before 2021.2.16363, system user passwords were hashed with SHA-256.\n\n- CVE-2021-38400: An attacker with physical access to Boston Scientific Zoom Latitude Model 3120 can remove the hard disk drive or create a specially crafted USB to extract the password hash for brute force reverse engineering of the system password.\n\n- CVE-2020-14516: In Rockwell Automation FactoryTalk Services Platform Versions 6.10.00 and 6.11.00, there is an issue with the implementation of the SHA-256 hashing algorithm with FactoryTalk Services Platform that prevents the user password from being hashed properly.\n\n- CVE-2021-36767: In Digi RealPort through 4.10.490, authentication relies on a challenge-response mechanism that gives access to the server password, making the protection ineffective. An attacker may send an unauthenticated request to the server. The server will reply with a weakly-hashed version of the server's access password. The attacker may then crack this hash offline in order to successfully login to the server.\n\n- CVE-2021-32997: The affected Baker Hughes Bentley Nevada products (3500 System 1 6.x, Part No. 3060/00 versions 6.98 and prior, 3500 System 1, Part No. 3071/xx & 3072/xx versions 21.1 HF1 and prior, 3500 Rack Configuration, Part No. 129133-01 versions 6.4 and prior, and 3500/22M Firmware, Part No. 288055-01 versions 5.05 and prior) utilize a weak encryption algorithm for storage and transmission of sensitive data, which may allow an attacker to more easily obtain credentials used for access.\n\n- CVE-2022-0022: Usage of a weak cryptographic algorithm in Palo Alto Networks PAN-OS software where the password hashes of administrator and local user accounts are not created with a sufficient level of computational effort, which allows for password cracking attacks on accounts in normal (non-FIPS-CC) operational mode. An attacker must have access to the account password hashes to take advantage of this weakness and can acquire those hashes if they are able to gain access to the PAN-OS software configuration. Fixed versions of PAN-OS software use a secure cryptographic algorithm for account password hashes. This issue does not impact Prisma Access firewalls. This issue impacts: PAN-OS 8.1 versions earlier than PAN-OS 8.1.21; All versions of PAN-OS 9.0; PAN-OS 9.1 versions earlier than PAN-OS 9.1.11; PAN-OS 10.0 versions earlier than PAN-OS 10.0.7.\n\n- CVE-2022-23348: BigAnt Software BigAnt Server v5.6.06 was discovered to utilize weak password hashes.\n\n- CVE-2022-26115: A use of password hash with insufficient computational effort vulnerability [CWE-916] in FortiSandbox before 4.2.0 may allow an attacker with access to the password database to efficiently mount bulk guessing attacks to recover the passwords.\n\n- CVE-2022-40258: AMI Megarac Weak password hashes for Redfish & API \n\n- CVE-2022-24041: A vulnerability has been identified in Desigo DXR2 (All versions < V01.21.142.5-22), Desigo PXC3 (All versions < V01.21.142.4-18), Desigo PXC4 (All versions < V02.20.142.10-10884), Desigo PXC5 (All versions < V02.20.142.10-10884). The web application stores the PBKDF2 derived key of users passwords with a low iteration count. An attacker with user profile access privilege can retrieve the stored password hashes of other accounts and then successfully perform an offline cracking attack and recover the plaintext passwords of other users.\n\nRelated Weaknesses:\n\n- CWE-328 (ChildOf)\n\n- CWE-327 (ChildOf)",
        "type": "Base",
        "source": "sparse",
        "search_source": "rootcause:weak hash function",
        "sources": [
          "base",
          "rootcause"
        ],
        "boost_factor": 3.0,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          }
        }
      },
      {
        "cwe_id": "294",
        "name": "Authentication Bypass by Capture-replay",
        "description": "A capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).",
        "score": 222.06386444460597,
        "matched_text": "CWE-294: Authentication Bypass by Capture-replay\n\nType: Base\n\nStatus: Incomplete\n\nDescription:\n\nA capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).\n\nExtended Details:\n\nCapture-replay attacks are common and can be difficult to defeat without cryptography. They are a subset of network injection attacks that rely on observing previously-sent valid commands, then changing them slightly if necessary and resending the same commands to the server.\n\nReal-World Examples:\n\n- CVE-2005-3435: product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.\n\n- CVE-2007-4961: Chain: cleartext transmission of the MD5 hash of password (CWE-319) enables attacks against a server that is susceptible to replay (CWE-294).\n\nTop 25 CWE Examples:\n\n- CVE-2021-31958: Windows NTLM Elevation of Privilege Vulnerability\n\n- CVE-2021-26824: DM FingerTool v1.19 in the DM PD065 Secure USB is susceptible to improper authentication by a replay attack, allowing local attackers to bypass user authentication and access all features and data on the USB.\n\n- CVE-2021-27572: An issue was discovered in Emote Remote Mouse through 4.0.0.0. Authentication Bypass can occur via Packet Replay. Remote unauthenticated users can execute arbitrary code via crafted UDP packets even when passwords are set.\n\n- CVE-2021-41030: An authentication bypass by capture-replay vulnerability [CWE-294] in FortiClient EMS versions 7.0.1 and below and 6.4.4 and below may allow an unauthenticated attacker to impersonate an existing user by intercepting and re-using valid SAML authentication messages.\n\n- CVE-2022-22806: A CWE-294: Authentication Bypass by Capture-replay vulnerability exists that could cause an unauthenticated connection to the UPS when a malformed connection is sent. Affected Product: SmartConnect Family: SMT Series (SMT Series ID=1015: UPS 04.5 and prior), SMC Series (SMC Series ID=1018: UPS 04.2 and prior), SMTL Series (SMTL Series ID=1026: UPS 02.9 and prior), SCL Series (SCL Series ID=1029: UPS 02.5 and prior / SCL Series ID=1030: UPS 02.5 and prior / SCL Series ID=1036: UPS 02.5 and prior / SCL Series ID=1037: UPS 03.1 and prior), SMX Series (SMX Series ID=1031: UPS 03.1 and prior)\n\n- CVE-2022-25159: Authentication Bypass by Capture-replay vulnerability in Mitsubishi Electric MELSEC iQ-F series FX5U(C) CPU all versions, Mitsubishi Electric MELSEC iQ-F series FX5UJ CPU all versions, Mitsubishi Electric MELSEC iQ-R series R00/01/02CPU all versions, Mitsubishi Electric MELSEC iQ-R series R04/08/16/32/120(EN)CPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120SFCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PSFCPU all versions, Mitsubishi Electric MELSEC iQ-R series R16/32/64MTCPU all versions, Mitsubishi Electric MELSEC iQ-R series RJ71C24(-R2/R4) all versions, Mitsubishi Electric MELSEC iQ-R series RJ71EN71 all versions, Mitsubishi Electric MELSEC iQ-R series RJ72GF15-T2 all versions, Mitsubishi Electric MELSEC Q series Q03/04/06/13/26UDVCPU all versions, Mitsubishi Electric MELSEC Q series Q04/06/13/26UDPVCPU all versions, Mitsubishi Electric MELSEC Q series QJ71C24N(-R2/R4) all versions and Mitsubishi Electric MELSEC Q series QJ71E71-100 all versions allows a remote unauthenticated attacker to login to the product by replay attack.\n\n- CVE-2022-30466: joyebike Joy ebike Wolf Manufacturing year 2022 is vulnerable to Authentication Bypass by Capture-replay.\n\n- CVE-2022-33208: Authentication bypass by capture-replay vulnerability exists in Machine automation controller NJ series all models V 1.48 and earlier, Machine automation controller NX7 series all models V1.28 and earlier, Machine automation controller NX1 series all models V1.48 and earlier, Automation software 'Sysmac Studio' all models V1.49 and earlier, and Programmable Terminal (PT) NA series NA5-15W/NA5-12W/NA5-9W/NA5-7W models Runtime V1.15 and earlier, which may allow a remote attacker who can analyze the communication between the affected controller and automation software 'Sysmac Studio' and/or a Programmable Terminal (PT) to access the controller.\n\n- CVE-2022-33971: Authentication bypass by capture-replay vulnerability exists in Machine automation controller NX7 series all models V1.28 and earlier, Machine automation controller NX1 series all models V1.48 and earlier, and Machine automation controller NJ series all models V 1.48 and earlier, which may allow an adjacent attacker who can analyze the communication between the controller and the specific software used by OMRON internally to cause a denial-of-service (DoS) condition or execute a malicious program.\n\n- CVE-2022-45789: A CWE-294: Authentication Bypass by Capture-replay vulnerability exists that could cause execution of unauthorized Modbus functions on the controller when hijacking an authenticated Modbus session. Affected Products: EcoStruxure Control Expert (All Versions), EcoStruxure Process Expert (All Versions), Modicon M340 CPU - part numbers BMXP34* (All Versions), Modicon M580 CPU - part numbers BMEP* and BMEH* (All Versions), Modicon M580 CPU Safety - part numbers BMEP58*S and BMEH58*S (All Versions) \n\n- CVE-2021-22640: An attacker can decrypt the Ovarro TBox login password by communication capture and brute force attacks.\n\n- CVE-2021-38296: Apache Spark supports end-to-end encryption of RPC connections via \"spark.authenticate\" and \"spark.network.crypto.enabled\". In versions 3.1.2 and earlier, it uses a bespoke mutual authentication protocol that allows for full encryption key recovery. After an initial interactive attack, this would allow someone to decrypt plaintext traffic offline. Note that this does not affect security mechanisms controlled by \"spark.authenticate.enableSaslEncryption\", \"spark.io.encryption.enabled\", \"spark.ssl\", \"spark.ui.strictTransportSecurity\". Update to Apache Spark 3.1.3 or later\n\n- CVE-2022-22936: An issue was discovered in SaltStack Salt in versions before 3002.8, 3003.4, 3004.1. Job publishes and file server replies are susceptible to replay attacks, which can result in an attacker replaying job publishes causing minions to run old jobs. File server replies can also be re-played. A sufficient craft attacker could gain root access on minion under certain scenarios.\n\n- CVE-2022-29878: A vulnerability has been identified in SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P850 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00), SICAM P855 (All versions < V3.00). Affected devices use a limited range for challenges that are sent during the unencrypted challenge-response communication. An unauthenticated attacker could capture a valid challenge-response pair generated by a legitimate user, and request the webpage repeatedly to wait for the same challenge to reappear for which the correct response is known. This could allow the attacker to access the management interface of the device.\n\n- CVE-2022-40621: Because the WAVLINK Quantum D4G (WN531G3) running firmware version M31G3.V5030.200325 and earlier communicates over HTTP and not HTTPS, and because the hashing mechanism does not rely on a server-supplied key, it is possible for an attacker with sufficient network access to capture the hashed password of a logged on user and use it in a classic Pass-the-Hash style attack.\n\n- CVE-2022-41541: TP-Link AX10v1 V1_211117 allows attackers to execute a replay attack by using a previously transmitted encrypted authentication message and valid authentication token. Attackers are able to login to the web application as an admin user.\n\n- CVE-2022-29334: An issue in H v1.0 allows attackers to bypass authentication via a session replay attack.\n\n- CVE-2022-31158: LTI 1.3 Tool Library is a library used for building IMS-certified LTI 1.3 tool providers in PHP. Prior to version 5.0, the Nonce Claim Value was not being validated against the nonce value sent in the Authentication Request. Users should upgrade to version 5.0 to receive a patch. There are currently no known workarounds.\n\nRelated Weaknesses:\n\n- CWE-1390 (ChildOf)\n\n- CWE-287 (ChildOf)",
        "type": "Base",
        "source": "sparse",
        "search_source": "rootcause:weak hash function",
        "sources": [
          "base",
          "rootcause"
        ],
        "boost_factor": 3.0,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          }
        }
      },
      {
        "cwe_id": "327",
        "name": "Use of a Broken or Risky Cryptographic Algorithm",
        "description": "The product uses a broken or risky cryptographic algorithm or protocol.",
        "score": 221.87128005934323,
        "matched_text": "CWE-327: Use of a Broken or Risky Cryptographic Algorithm\n\nType: Class\n\nStatus: Draft\n\nDescription:\n\nThe product uses a broken or risky cryptographic algorithm or protocol.\n\nExtended Details:\n\n\n\nCryptographic algorithms are the methods by which data is scrambled to prevent observation or influence by unauthorized actors. Insecure cryptography can be exploited to expose sensitive information, modify data in unexpected ways, spoof identities of other users or devices, or other impacts.\n\n\nIt is very difficult to produce a secure algorithm, and even high-profile algorithms by accomplished cryptographic experts have been broken. Well-known techniques exist to break or weaken various kinds of cryptography. Accordingly, there are a small number of well-understood and heavily studied algorithms that should be used by most products. Using a non-standard or known-insecure algorithm is dangerous because a determined adversary may be able to break the algorithm and compromise whatever data has been protected.\n\n\nSince the state of cryptography advances so rapidly, it is common for an algorithm to be considered \"unsafe\" even if it was once thought to be strong. This can happen when new attacks are discovered, or if computing power increases so much that the cryptographic algorithm no longer provides the amount of protection that was originally thought.\n\n\nFor a number of reasons, this weakness is even more challenging to manage with hardware deployment of cryptographic algorithms as opposed to software implementation. First, if a flaw is discovered with hardware-implemented cryptography, the flaw cannot be fixed in most cases without a recall of the product, because hardware is not easily replaceable like software. Second, because the hardware product is expected to work for years, the adversary's computing power will only increase over time.\n\n\nReal-World Examples:\n\n- CVE-2022-30273: SCADA-based protocol supports a legacy encryption mode that uses Tiny Encryption Algorithm (TEA) in ECB mode, which leaks patterns in messages and cannot protect integrity\n\n- CVE-2022-30320: Programmable Logic Controller (PLC) uses a protocol with a cryptographically insecure hashing algorithm for passwords.\n\n- CVE-2008-3775: Product uses \"ROT-25\" to obfuscate the password in the registry.\n\n- CVE-2007-4150: product only uses \"XOR\" to obfuscate sensitive data\n\n- CVE-2007-5460: product only uses \"XOR\" and a fixed key to obfuscate sensitive data\n\n- CVE-2005-4860: Product substitutes characters with other characters in a fixed way, and also leaves certain input characters unchanged.\n\n- CVE-2002-2058: Attackers can infer private IP addresses by dividing each octet by the MD5 hash of '20'.\n\n- CVE-2008-3188: Product uses DES when MD5 has been specified in the configuration, resulting in weaker-than-expected password hashes.\n\n- CVE-2005-2946: Default configuration of product uses MD5 instead of stronger algorithms that are available, simplifying forgery of certificates.\n\n- CVE-2007-6013: Product uses the hash of a hash for authentication, allowing attackers to gain privileges if they can obtain the original hash.\n\nTop 25 CWE Examples:\n\n- CVE-2020-15128: In OctoberCMS before version 1.0.468, encrypted cookie values were not tied to the name of the cookie the value belonged to. This meant that certain classes of attacks that took advantage of other theoretical vulnerabilities in user facing code (nothing exploitable in the core project itself) had a higher chance of succeeding. Specifically, if your usage exposed a way for users to provide unfiltered user input and have it returned to them as an encrypted cookie (ex. storing a user provided search query in a cookie) they could then use the generated cookie in place of other more tightly controlled cookies; or if your usage exposed the plaintext version of an encrypted cookie at any point to the user they could theoretically provide encrypted content from your application back to it as an encrypted cookie and force the framework to decrypt it for them. Issue has been fixed in build 468 (v1.0.468).\n\n- CVE-2020-4965: IBM Jazz Team Server products use weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 192422.\n\n- CVE-2021-20337: IBM QRadar SIEM 7.3.0 to 7.3.3 Patch 8 and 7.4.0 to 7.4.3 GA uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 194448.\n\n- CVE-2021-27457: A vulnerability has been found in multiple revisions of Emerson Rosemount X-STREAM Gas Analyzer. The affected products utilize a weak encryption algorithm for storage of sensitive data, which may allow an attacker to more easily obtain credentials used for access.\n\n- CVE-2021-29694: IBM Spectrum Protect Plus 10.1.0 through 10.1.7 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 200258.\n\n- CVE-2021-29794: IBM Tivoli Netcool/Impact 7.1.0.20 and 7.1.0.21 uses an insecure SSH server configuration which enables weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 203556.\n\n- CVE-2021-31796: An inadequate encryption vulnerability discovered in CyberArk Credential Provider before 12.1 may lead to Information Disclosure. An attacker may realistically have enough information that the number of possible keys (for a credential file) is only one, and the number is usually not higher than 2^36.\n\n- CVE-2020-24587: The 802.11 standard that underpins Wi-Fi Protected Access (WPA, WPA2, and WPA3) and Wired Equivalent Privacy (WEP) doesn't require that all fragments of a frame are encrypted under the same key. An adversary can abuse this to decrypt selected fragments when another device sends fragmented frames and the WEP, CCMP, or GCMP encryption key is periodically renewed.\n\n- CVE-2020-24588: The 802.11 standard that underpins Wi-Fi Protected Access (WPA, WPA2, and WPA3) and Wired Equivalent Privacy (WEP) doesn't require that the A-MSDU flag in the plaintext QoS header field is authenticated. Against devices that support receiving non-SSP A-MSDU frames (which is mandatory as part of 802.11n), an adversary can abuse this to inject arbitrary network packets.\n\n- CVE-2020-26140: An issue was discovered in the ALFA Windows 10 driver 6.1316.1209 for AWUS036H. The WEP, WPA, WPA2, and WPA3 implementations accept plaintext frames in a protected Wi-Fi network. An adversary can abuse this to inject arbitrary data frames independent of the network configuration.\n\n- CVE-2021-22170: Assuming a database breach, nonce reuse issues in GitLab 11.6+ allows an attacker to decrypt some of the database's encrypted content\n\n- CVE-2021-37546: In JetBrains TeamCity before 2021.1, an insecure key generation mechanism for encrypted properties was used.\n\n- CVE-2021-37587: In Charm 0.43, any single user can decrypt DAC-MACS or MA-ABE-YJ14 data.\n\n- CVE-2021-40528: The ElGamal implementation in Libgcrypt before 1.9.4 allows plaintext recovery because, during interaction between two cryptographic libraries, a certain dangerous combination of the prime defined by the receiver's public key, the generator defined by the receiver's public key, and the sender's ephemeral exponents can lead to a cross-configuration attack against OpenPGP.\n\n- CVE-2021-40529: The ElGamal implementation in Botan through 2.18.1, as used in Thunderbird and other products, allows plaintext recovery because, during interaction between two cryptographic libraries, a certain dangerous combination of the prime defined by the receiver's public key, the generator defined by the receiver's public key, and the sender's ephemeral exponents can lead to a cross-configuration attack against OpenPGP.\n\n- CVE-2021-40530: The ElGamal implementation in Crypto++ through 8.5 allows plaintext recovery because, during interaction between two cryptographic libraries, a certain dangerous combination of the prime defined by the receiver's public key, the generator defined by the receiver's public key, and the sender's ephemeral exponents can lead to a cross-configuration attack against OpenPGP.\n\n- CVE-2021-31352: An Information Exposure vulnerability in Juniper Networks SRC Series devices configured for NETCONF over SSH permits the negotiation of weak ciphers, which could allow a remote attacker to obtain sensitive information. A remote attacker with read and write access to network data could exploit this vulnerability to display plaintext bits from a block of ciphertext and obtain sensitive information. This issue affects all Juniper Networks SRC Series versions prior to 4.13.0-R6.\n\n- CVE-2021-36298: Dell EMC InsightIQ, versions prior to 4.1.4, contain risky cryptographic algorithms in the SSH component. A remote unauthenticated attacker could potentially exploit this vulnerability leading to authentication bypass and remote takeover of the InsightIQ. This allows an attacker to take complete control of InsightIQ to affect services provided by SSH; so Dell recommends customers to upgrade at the earliest opportunity.\n\n- CVE-2021-41263: rails_multisite provides multi-db support for Rails applications. In affected versions this vulnerability impacts any Rails applications using `rails_multisite` alongside Rails' signed/encrypted cookies. Depending on how the application makes use of these cookies, it may be possible for an attacker to re-use cookies on different 'sites' within a multi-site Rails application. The issue has been patched in v4 of the `rails_multisite` gem. Note that this upgrade will invalidate all previous signed/encrypted cookies. The impact of this invalidation will vary based on the application architecture.\n\n- CVE-2021-32001: K3s in SUSE Rancher allows any user with direct access to the datastore, or a copy of a datastore backup, to extract the cluster's confidential keying material (cluster certificate authority private keys, secrets encryption configuration passphrase, etc.) and decrypt it, without having to know the token value. This issue affects: SUSE Rancher K3s version v1.19.12+k3s1, v1.20.8+k3s1, v1.21.2+k3s1 and prior versions; RKE2 version v1.19.12+rke2r1, v1.20.8+rke2r1, v1.21.2+rke2r1 and prior versions.\n\n- CVE-2020-36315: In RELIC before 2020-08-01, RSA PKCS#1 v1.5 signature forgery can occur because certain checks of the padding (and of the first two bytes) are inadequate. NOTE: this requires that a low public exponent (such as 3) is being used. The product, by default, does not generate RSA keys with such a low number.\n\n- CVE-2021-40006: Vulnerability of design defects in the security algorithm component. Successful exploitation of this vulnerability may affect confidentiality. \n\n- CVE-2021-38542: Apache James prior to release 3.6.1 is vulnerable to a buffering attack relying on the use of the STARTTLS command. This can result in Man-in -the-middle command injection attacks, leading potentially to leakage of sensible information.\n\n- CVE-2021-43808: Laravel is a web application framework. Laravel prior to versions 8.75.0, 7.30.6, and 6.20.42 contain a possible cross-site scripting (XSS) vulnerability in the Blade templating engine. A broken HTML element may be clicked and the user taken to another location in their browser due to XSS. This is due to the user being able to guess the parent placeholder SHA-1 hash by trying common names of sections. If the parent template contains an exploitable HTML structure an XSS vulnerability can be exposed. This vulnerability has been patched in versions 8.75.0, 7.30.6, and 6.20.42 by determining the parent placeholder at runtime and using a random hash that is unique to each request.\n\n- CVE-2021-31562: The SSL/TLS configuration of Fresenius Kabi Agilia Link + version 3.0 has serious deficiencies that may allow an attacker to compromise SSL/TLS sessions in different ways. An attacker may be able to eavesdrop on transferred data, manipulate data allegedly secured by SSL/TLS, and impersonate an entity to gain access to sensitive information.\n\n- CVE-2021-2351: Vulnerability in the Advanced Networking Option component of Oracle Database Server. Supported versions that are affected are 12.1.0.2, 12.2.0.1 and 19c. Difficult to exploit vulnerability allows unauthenticated attacker with network access via Oracle Net to compromise Advanced Networking Option. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Advanced Networking Option, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Advanced Networking Option. Note: The July 2021 Critical Patch Update introduces a number of Native Network Encryption changes to deal with vulnerability CVE-2021-2351 and prevent the use of weaker ciphers. Customers should review: \"Changes in Native Network Encryption with the July 2021 Critical Patch Update\" (Doc ID 2791571.1). CVSS 3.1 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).\n\n- CVE-2021-37588: In Charm 0.43, any two users can collude to achieve the ability to decrypt YCT14 data.\n\n- CVE-2021-43774: A risky-algorithm issue was discovered on Fujifilm DocuCentre-VI C4471 1.8 devices. An attacker that obtained access to the administrative web interface of a printer (e.g., by using the default credentials) can download the address book file, which contains the list of users (domain users, FTP users, etc.) stored on the printer, together with their encrypted passwords. The passwords are protected by a weak cipher, such as ROT13, which requires minimal effort to instantly retrieve the original password, giving the attacker a list of valid domain or FTP usernames and passwords.\n\n- CVE-2021-43989: mySCADA myPRO Versions 8.20.0 and prior stores passwords using MD5, which may allow an attacker to crack the previously retrieved password hashes.\n\n- CVE-2021-45512: Certain NETGEAR devices are affected by weak cryptography. This affects D7000v2 before 1.0.0.62, D8500 before 1.0.3.50, EX3700 before 1.0.0.84, EX3800 before 1.0.0.84, EX6120 before 1.0.0.54, EX6130 before 1.0.0.36, EX7000 before 1.0.1.90, R6250 before 1.0.4.42, R6400v2 before 1.0.4.98, R6700v3 before 1.0.4.98, R6900P before 1.3.2.124, R7000 before 1.0.11.106, R7000P before 1.3.2.124, R7100LG before 1.0.0.56, R7900 before 1.0.4.26, R8000 before 1.0.4.58, R8300 before 1.0.2.134, R8500 before 1.0.2.134, RS400 before 1.5.0.48, WNR3500Lv2 before 1.2.0.62, and XR300 before 1.0.3.50.\n\n- CVE-2021-45696: An issue was discovered in the sha2 crate 0.9.7 before 0.9.8 for Rust. Hashes of long messages may be incorrect when the AVX2-accelerated backend is used.\n\n- CVE-2022-0377: Users of the LearnPress WordPress plugin before 4.1.5 can upload an image as a profile avatar after the registration. After this process the user crops and saves the image. Then a \"POST\" request that contains user supplied name of the image is sent to the server for renaming and cropping of the image. As a result of this request, the name of the user-supplied image is changed with a MD5 value. This process can be conducted only when type of the image is JPG or PNG. An attacker can use this vulnerability in order to rename an arbitrary image file. By doing this, they could destroy the design of the web site.\n\n- CVE-2022-1252: Use of a Broken or Risky Cryptographic Algorithm in GitHub repository gnuboard/gnuboard5 prior to and including 5.5.5. A vulnerability in gnuboard v5.5.5 and below uses weak encryption algorithms leading to sensitive information exposure. This allows an attacker to derive the email address of any user, including when the 'Let others see my information.' box is ticked off. Or to send emails to any email address, with full control of its contents \n\n- CVE-2022-1434: The OpenSSL 3.0 implementation of the RC4-MD5 ciphersuite incorrectly uses the AAD data as the MAC key. This makes the MAC key trivially predictable. An attacker could exploit this issue by performing a man-in-the-middle attack to modify data being sent from one endpoint to an OpenSSL 3.0 recipient such that the modified data would still pass the MAC integrity check. Note that data sent from an OpenSSL 3.0 endpoint to a non-OpenSSL 3.0 endpoint will always be rejected by the recipient and the connection will fail at that point. Many application protocols require data to be sent from the client to the server first. Therefore, in such a case, only an OpenSSL 3.0 server would be impacted when talking to a non-OpenSSL 3.0 client. If both endpoints are OpenSSL 3.0 then the attacker could modify data being sent in both directions. In this case both clients and servers could be affected, regardless of the application protocol. Note that in the absence of an attacker this bug means that an OpenSSL 3.0 endpoint communicating with a non-OpenSSL 3.0 endpoint will fail to complete the handshake when using this ciphersuite. The confidentiality of data is not impacted by this issue, i.e. an attacker cannot decrypt data that has been encrypted using this ciphersuite - they can only modify it. In order for this attack to work both endpoints must legitimately negotiate the RC4-MD5 ciphersuite. This ciphersuite is not compiled by default in OpenSSL 3.0, and is not available within the default provider or the default ciphersuite list. This ciphersuite will never be used if TLSv1.3 has been negotiated. In order for an OpenSSL 3.0 endpoint to use this ciphersuite the following must have occurred: 1) OpenSSL must have been compiled with the (non-default) compile time option enable-weak-ssl-ciphers 2) OpenSSL must have had the legacy provider explicitly loaded (either through application code or via configuration) 3) The ciphersuite must have been explicitly added to the ciphersuite list 4) The libssl security level must have been set to 0 (default is 1) 5) A version of SSL/TLS below TLSv1.3 must have been negotiated 6) Both endpoints must negotiate the RC4-MD5 ciphersuite in preference to any others that both endpoints have in common Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2).\n\n- CVE-2022-20805: A vulnerability in the automatic decryption process in Cisco Umbrella Secure Web Gateway (SWG) could allow an authenticated, adjacent attacker to bypass the SSL decryption and content filtering policies on an affected system. This vulnerability is due to how the decryption function uses the TLS Sever Name Indication (SNI) extension of an HTTP request to discover the destination domain and determine if the request needs to be decrypted. An attacker could exploit this vulnerability by sending a crafted request over TLS from a client to an unknown or controlled URL. A successful exploit could allow an attacker to bypass the decryption process of Cisco Umbrella SWG and allow malicious content to be downloaded to a host on a protected network. There are workarounds that address this vulnerability.\n\n- CVE-2022-2097: AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).\n\n- CVE-2022-2781: In affected versions of Octopus Server it was identified that the same encryption process was used for both encrypting session cookies and variables.\n\n- CVE-2022-28164: Brocade SANnav before SANnav 2.2.0 application uses the Blowfish symmetric encryption algorithm for the storage of passwords. This could allow an authenticated attacker to decrypt stored account passwords.\n\n- CVE-2022-28382: An issue was discovered in certain Verbatim drives through 2022-03-31. Due to the use of an insecure encryption AES mode (Electronic Codebook, aka ECB), an attacker may be able to extract information even from encrypted data, for example by observing repeating byte patterns. The firmware of the USB-to-SATA bridge controller INIC-3637EN uses AES-256 with the ECB mode. This operation mode of block ciphers (e.g., AES) always encrypts identical plaintext data, in this case blocks of 16 bytes, to identical ciphertext data. For some data, for instance bitmap images, the lack of the cryptographic property called diffusion, within ECB, can leak sensitive information even in encrypted data. Thus, the use of the ECB operation mode can put the confidentiality of specific information at risk, even in an encrypted form. This affects Keypad Secure USB 3.2 Gen 1 Drive Part Number #49428, Store 'n' Go Secure Portable HDD GD25LK01-3637-C VER4.0, Executive Fingerprint Secure SSD GDMSFE01-INI3637-C VER1.1, and Fingerprint Secure Portable Hard Drive Part Number #53650.\n\n- CVE-2022-29960: Emerson OpenBSI through 2022-04-29 uses weak cryptography. It is an engineering environment for the ControlWave and Bristol Babcock line of RTUs. DES with hardcoded cryptographic keys is used for protection of certain system credentials, engineering files, and sensitive utilities.\n\n- CVE-2022-30320: Saia Burgess Controls (SBC) PCD through 2022-05-06 uses a Broken or Risky Cryptographic Algorithm. According to FSCT-2022-0063, there is a Saia Burgess Controls (SBC) PCD S-Bus weak credential hashing scheme issue. The affected components are characterized as: S-Bus (5050/UDP) authentication. The potential impact is: Authentication bypass. The Saia Burgess Controls (SBC) PCD controllers utilize the S-Bus protocol (5050/UDP) for a variety of engineering purposes. It is possible to configure a password in order to restrict access to sensitive engineering functionality. Authentication is done by using the S-Bus 'write byte' message to a specific address and supplying a hashed version of the password. The hashing algorithm used is based on CRC-16 and as such not cryptographically secure. An insecure hashing algorithm is used. An attacker capable of passively observing traffic can intercept the hashed credentials and trivially find collisions allowing for authentication without having to bruteforce a keyspace defined by the actual strength of the password. This allows the attacker access to sensitive engineering functionality such as uploading/downloading control logic and manipulating controller configuration.\n\n- CVE-2022-35513: The Blink1Control2 application <= 2.2.7 uses weak password encryption and an insecure method of storage.\n\n- CVE-2022-38493: Rhonabwy 0.9.99 through 1.1.x before 1.1.7 doesn't check the RSA private key length before RSA-OAEP decryption. This allows attackers to cause a Denial of Service via a crafted JWE (JSON Web Encryption) token.\n\n- CVE-2022-39237: syslabs/sif is the Singularity Image Format (SIF) reference implementation. In versions prior to 2.8.1the `github.com/sylabs/sif/v2/pkg/integrity` package did not verify that the hash algorithm(s) used are cryptographically secure when verifying digital signatures. A patch is available in version >= v2.8.1 of the module. Users are encouraged to upgrade. Users unable to upgrade may independently validate that the hash algorithm(s) used for metadata digest(s) and signature hash are cryptographically secure.\n\n- CVE-2022-28166: In Brocade SANnav version before SANN2.2.0.2 and Brocade SANNav before 2.1.1.8, the implementation of TLS/SSL Server Supports the Use of Static Key Ciphers (ssl-static-key-ciphers) on ports 443 & 18082.\n\n- CVE-2022-30187: Azure Storage Library Information Disclosure Vulnerability\n\n- CVE-2021-23839: OpenSSL 1.0.2 supports SSLv2. If a client attempts to negotiate SSLv2 with a server that is configured to support both SSLv2 and more recent SSL and TLS versions then a check is made for a version rollback attack when unpadding an RSA signature. Clients that support SSL or TLS versions greater than SSLv2 are supposed to use a special form of padding. A server that supports greater than SSLv2 is supposed to reject connection attempts from a client where this special form of padding is present, because this indicates that a version rollback has occurred (i.e. both client and server support greater than SSLv2, and yet this is the version that is being requested). The implementation of this padding check inverted the logic so that the connection attempt is accepted if the padding is present, and rejected if it is absent. This means that such as server will accept a connection if a version rollback attack has occurred. Further the server will erroneously reject a connection if a normal SSLv2 connection attempt is made. Only OpenSSL 1.0.2 servers from version 1.0.2s to 1.0.2x are affected by this issue. In order to be vulnerable a 1.0.2 server must: 1) have configured SSLv2 support at compile time (this is off by default), 2) have configured SSLv2 support at runtime (this is off by default), 3) have configured SSLv2 ciphersuites (these are not in the default ciphersuite list) OpenSSL 1.1.1 does not have SSLv2 support and therefore is not vulnerable to this issue. The underlying error is in the implementation of the RSA_padding_check_SSLv23() function. This also affects the RSA_SSLV23_PADDING padding mode used by various other functions. Although 1.1.1 does not support SSLv2 the RSA_padding_check_SSLv23() function still exists, as does the RSA_SSLV23_PADDING padding mode. Applications that directly call that function or use that padding mode will encounter this issue. However since there is no support for the SSLv2 protocol in 1.1.1 this is considered a bug and not a security issue in that version. OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.0.2y (Affected 1.0.2s-1.0.2x).\n\n- CVE-2021-20379: IBM Guardium Data Encryption (GDE) 3.0.0.3 and 4.0.0.4 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 195711.\n\n- CVE-2021-20406: IBM Security Verify Information Queue 1.0.6 and 1.0.7 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 196184. \n\n- CVE-2021-20419: IBM Security Guardium 11.2 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 196280.\n\n- CVE-2021-20441: IBM Security Verify Bridge uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 196617.\n\n- CVE-2021-20479: IBM Cloud Pak System 2.3.0 through 2.3.3.3 Interim Fix 1 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 197498.\n\n- CVE-2021-20497: IBM Security Verify Access Docker 10.0.0 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 197969\n\n- CVE-2021-20566: IBM Resilient SOAR V38.0 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 199238.\n\n- CVE-2021-22212: ntpkeygen can generate keys that ntpd fails to parse. NTPsec 1.2.0 allows ntpkeygen to generate keys with '#' characters. ntpd then either pads, shortens the key, or fails to load these keys entirely, depending on the key type and the placement of the '#'. This results in the administrator not being able to use the keys as expected or the keys are shorter than expected and easier to brute-force, possibly resulting in MITM attacks between ntp clients and ntp servers. For short AES128 keys, ntpd generates a warning that it is padding them.\n\n- CVE-2021-22356: There is a weak secure algorithm vulnerability in Huawei products. A weak secure algorithm is used in a module. Attackers can exploit this vulnerability by capturing and analyzing the messages between devices to obtain information. This can lead to information leak.Affected product versions include: IPS Module V500R005C00SPC100, V500R005C00SPC200; NGFW Module V500R005C00SPC100, V500R005C00SPC200; Secospace USG6300 V500R001C30SPC200, V500R001C30SPC600, V500R001C60SPC500, V500R005C00SPC100, V500R005C00SPC200; Secospace USG6500 V500R001C30SPC200, V500R001C30SPC600, V500R001C60SPC500, V500R005C00SPC100, V500R005C00SPC200; Secospace USG6600 V500R001C30SPC200, V500R001C30SPC600, V500R001C60SPC500, V500R005C00SPC100, V500R005C00SPC200; USG9500 V500R001C30SPC200, V500R001C30SPC600, V500R001C60SPC500, V500R005C00SPC100, V500R005C00SPC200.\n\n- CVE-2021-22738: Use of a Broken or Risky Cryptographic Algorithm vulnerability exists in homeLYnk (Wiser For KNX) and spaceLYnk V2.60 and prior that could cause unauthorized access when credentials are discovered after a brute force attack.\n\n- CVE-2021-25763: In JetBrains Ktor before 1.4.2, weak cipher suites were enabled by default.\n\n- CVE-2021-27756: \"TLS-RSA cipher suites are not disabled in BigFix Compliance up to v2.0.5. If TLS 2.0 and secure ciphers are not enabled then an attacker can passively record traffic and later decrypt it.\"\n\n- CVE-2021-29704: IBM Security SOAR uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information.\n\n- CVE-2021-29722: IBM Sterling Secure Proxy 6.0.1, 6.0.2, 2.4.3.2, and 3.4.3.2 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 201095.\n\n- CVE-2021-29723: IBM Sterling Secure Proxy 6.0.1, 6.0.2, 2.4.3.2, and 3.4.3.2 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-ForceID: 201100.\n\n- CVE-2021-29750: IBM QRadar SIEM 7.3 and 7.4 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 201778.\n\n- CVE-2021-29894: IBM Cloud Pak for Security (CP4S) 1.7.0.0, 1.7.1.0, 1.7.2.0, and 1.8.0.0 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 207320.\n\n- CVE-2021-32593: A use of a broken or risky cryptographic algorithm vulnerability [CWE-327] in the Dynamic Tunnel Protocol of FortiWAN before 4.5.9 may allow an unauthenticated remote attacker to decrypt and forge protocol communication messages.\n\n- CVE-2021-33018: The use of a broken or risky cryptographic algorithm in Philips Vue PACS versions 12.2.x.x and prior is an unnecessary risk that may result in the exposure of sensitive information.\n\n- CVE-2021-33846: Fresenius Kabi Vigilant Software Suite (Mastermed Dashboard) version 2.0.1.3 issues authentication tokens to authenticated users that are signed with a symmetric encryption key. An attacker in possession of the key can issue valid JWTs and impersonate arbitrary users.\n\n- CVE-2021-36647: Use of a Broken or Risky Cryptographic Algorithm in the function mbedtls_mpi_exp_mod() in lignum.c in Mbed TLS Mbed TLS all versions before 3.0.0, 2.27.0 or 2.16.11 allows attackers with access to precise enough timing and memory access information (typically an untrusted operating system attacking a secure enclave such as SGX or the TrustZone secure world) to recover the private keys used in RSA.\n\n- CVE-2021-38921: IBM Security Verify 10.0.0, 10.0.1.0, and 10.0.2.0 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 210067.\n\n- CVE-2021-39002: IBM DB2 for Linux, UNIX and Windows (includes DB2 Connect Server) 9.7, 10.1, 10.5, 11.1, and 11.5 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information.\n\n- CVE-2021-39058: IBM Spectrum Copy Data Management 2.2.13 and earlier uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 214617.\n\n- CVE-2021-39076: IBM Security Guardium 10.5 and 11.3 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt sensitive information. IBM X-Force ID: 215585.\n\n- CVE-2021-39082: IBM UrbanCode Deploy (UCD) 7.1.1.2 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information.\n\n- CVE-2021-41096: Rucky is a USB HID Rubber Ducky Launch Pad for Android. Versions 2.2 and earlier for release builds and versions 425 and earlier for nightly builds suffer from use of a weak cryptographic algorithm (RSA/ECB/PKCS1Padding). The issue will be patched in v2.3 for release builds and 426 onwards for nightly builds. As a workaround, one may disable an advance security feature if not required.\n\n- CVE-2021-41278: Functions SDK for EdgeX is meant to provide all the plumbing necessary for developers to get started in processing/transforming/exporting data out of the EdgeX IoT platform. In affected versions broken encryption in app-functions-sdk \u201cAES\u201d transform in EdgeX Foundry releases prior to Jakarta allows attackers to decrypt messages via unspecified vectors. The app-functions-sdk exports an \u201caes\u201d transform that user scripts can optionally call to encrypt data in the processing pipeline. No decrypt function is provided. Encryption is not enabled by default, but if used, the level of protection may be less than the user may expects due to a broken implementation. Version v2.1.0 (EdgeX Foundry Jakarta release and later) of app-functions-sdk-go/v2 deprecates the \u201caes\u201d transform and provides an improved \u201caes256\u201d transform in its place. The broken implementation will remain in a deprecated state until it is removed in the next EdgeX major release to avoid breakage of existing software that depends on the broken implementation. As the broken transform is a library function that is not invoked by default, users who do not use the AES transform in their processing pipelines are unaffected. Those that are affected are urged to upgrade to the Jakarta EdgeX release and modify processing pipelines to use the new \"aes256\" transform.\n\n- CVE-2021-42583: A Broken or Risky Cryptographic Algorithm exists in Max Mazurov Maddy before 0.5.2, which is an unnecessary risk that may result in the exposure of sensitive information.\n\n- CVE-2021-43550: The use of a broken or risky cryptographic algorithm is an unnecessary risk that may result in the exposure of sensitive information, which affects the communications between Patient Information Center iX (PIC iX) Versions C.02 and C.03 and Efficia CM Series Revisions A.01 to C.0x and 4.0.\n\n- CVE-2022-20117: In (TBD) of (TBD), there is a possible way to decrypt local data encrypted by the GSC due to improperly used crypto. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-217475903References: N/A\n\n- CVE-2022-22327: IBM UrbanCode Deploy (UCD) 7.0.5, 7.1.0, 7.1.1, and 7.1.2 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 218859.\n\n- CVE-2022-22461:  IBM Security Verify Governance, Identity Manager 10.0.1 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 225007. \n\n- CVE-2022-22462:  IBM Security Verify Governance, Identity Manager virtual appliance component 10.0.1 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 225078. \n\n- CVE-2022-22559: Dell PowerScale OneFS, version 9.3.0, contains a use of a broken or risky cryptographic algorithm. An unprivileged network attacker could exploit this vulnerability, leading to the potential for information disclosure.\n\n- CVE-2022-22564: Dell EMC Unity versions before 5.2.0.0.5.173 , use(es) broken cryptographic algorithm. A remote unauthenticated attacker could potentially exploit this vulnerability by performing MitM attacks and let attackers obtain sensitive information. \n\n- CVE-2022-24296: Use of a Broken or Risky Cryptographic Algorithm vulnerability in Air Conditioning System G-150AD Ver. 3.21 and prior, Air Conditioning System AG-150A-A Ver. 3.21 and prior, Air Conditioning System AG-150A-J Ver. 3.21 and prior, Air Conditioning System GB-50AD Ver. 3.21 and prior, Air Conditioning System GB-50ADA-A Ver. 3.21 and prior, Air Conditioning System GB-50ADA-J Ver. 3.21 and prior, Air Conditioning System EB-50GU-A Ver. 7.10 and prior, Air Conditioning System EB-50GU-J Ver. 7.10 and prior, Air Conditioning System AE-200J Ver. 7.97 and prior, Air Conditioning System AE-200A Ver. 7.97 and prior, Air Conditioning System AE-200E Ver. 7.97 and prior, Air Conditioning System AE-50J Ver. 7.97 and prior, Air Conditioning System AE-50A Ver. 7.97 and prior, Air Conditioning System AE-50E Ver. 7.97 and prior, Air Conditioning System EW-50J Ver. 7.97 and prior, Air Conditioning System EW-50A Ver. 7.97 and prior, Air Conditioning System EW-50E Ver. 7.97 and prior, Air Conditioning System TE-200A Ver. 7.97 and prior, Air Conditioning System TE-50A Ver. 7.97 and prior and Air Conditioning System TW-50A Ver. 7.97 and prior allows a remote unauthenticated attacker to cause a disclosure of encrypted message of the air conditioning systems by sniffing encrypted communications.\n\n- CVE-2022-26854: Dell PowerScale OneFS, versions 8.2.x-9.2.x, contain risky cryptographic algorithms. A remote unprivileged malicious attacker could potentially exploit this vulnerability, leading to full system access\n\n- CVE-2022-27581: Use of a Broken or Risky Cryptographic Algorithm in SICK RFU61x firmware version <v2.25 allows a low-privileged remote attacker to decrypt the encrypted data if the user requested weak cipher suites to be used for encryption via the SSH interface. The patch and installation procedure for the firmware update is available from the responsible SICK customer contact person.\n\n- CVE-2022-28622: A potential security vulnerability has been identified in HPE StoreOnce Software. The SSH server supports weak key exchange algorithms which could lead to remote unauthorized access. HPE has made the following software update to resolve the vulnerability in HPE StoreOnce Software 4.3.2.\n\n- CVE-2022-29217: PyJWT is a Python implementation of RFC 7519. PyJWT supports multiple different JWT signing algorithms. With JWT, an attacker submitting the JWT token can choose the used signing algorithm. The PyJWT library requires that the application chooses what algorithms are supported. The application can specify `jwt.algorithms.get_default_algorithms()` to get support for all algorithms, or specify a single algorithm. The issue is not that big as `algorithms=jwt.algorithms.get_default_algorithms()` has to be used. Users should upgrade to v2.4.0 to receive a patch for this issue. As a workaround, always be explicit with the algorithms that are accepted and expected when decoding.\n\n- CVE-2022-29249: JavaEZ is a library that adds new functions to make Java easier. A weakness in JavaEZ 1.6 allows force decryption of locked text by unauthorized actors. The issue is NOT critical for non-secure applications, however may be critical in a situation where the highest levels of security are required. This issue ONLY affects v1.6 and does not affect anything pre-1.6. The vulnerability has been patched in release 1.7. Currently, there is no way to fix the issue without upgrading.\n\n- CVE-2022-30111: Due to the use of an insecure algorithm for rolling codes in MCK Smartlock 1.0, allows attackers to unlock the mechanism via replay attacks.\n\n- CVE-2022-30273: The Motorola MDLC protocol through 2022-05-02 mishandles message integrity. It supports three security modes: Plain, Legacy Encryption, and New Encryption. In Legacy Encryption mode, traffic is encrypted via the Tiny Encryption Algorithm (TEA) block-cipher in ECB mode. This mode of operation does not offer message integrity and offers reduced confidentiality above the block level, as demonstrated by an ECB Penguin attack against any block ciphers.\n\n- CVE-2022-31230: Dell PowerScale OneFS, versions 8.2.x-9.2.x, contain broken or risky cryptographic algorithm. A remote unprivileged malicious attacker could potentially exploit this vulnerability, leading to full system access.\n\n- CVE-2022-34319: IBM CICS TX 11.7 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 229463.\n\n- CVE-2022-34320:  IBM CICS TX 11.1 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 229464. \n\n- CVE-2022-34361:  IBM Sterling Secure Proxy 6.0.3 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 230522. \n\n- CVE-2022-34444:  Dell PowerScale OneFS, versions 9.2.0.x through 9.4.0.x contain an information vulnerability. A remote unauthenticated attacker may potentially exploit this vulnerability to cause data leak. \n\n- CVE-2022-34632: Rocket-Chip commit 4f8114374d8824dfdec03f576a8cd68bebce4e56 was discovered to contain insufficient cryptography via the component /rocket/RocketCore.scala.\n\n- CVE-2022-34757: A CWE-327: Use of a Broken or Risky Cryptographic Algorithm vulnerability exists where weak cipher suites can be used for the SSH connection between Easergy Pro software and the device, which may allow an attacker to observe protected communication details. Affected Products: Easergy P5 (V01.401.102 and prior)\n\n- CVE-2022-35720: IBM Sterling External Authentication Server 6.1.0 and IBM Sterling Secure Proxy 6.0.3 uses weaker than expected cryptographic algorithms during installation that could allow a local attacker to decrypt sensitive information. IBM X-Force ID: 231373.\n\n- CVE-2022-38391:  IBM Spectrum Control 5.4 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information. IBM X-Force ID: 233982. \n\n- CVE-2022-4610: A vulnerability, which was classified as problematic, has been found in Click Studios Passwordstate and Passwordstate Browser Extension Chrome. Affected by this issue is some unknown functionality. The manipulation leads to risky cryptographic algorithm. Local access is required to approach this attack. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-216272.\n\n- CVE-2022-46140: Affected devices use a weak encryption scheme to encrypt the debug zip file. This could allow an authenticated attacker to decrypt the contents of the file and retrieve debug information about the system.\n\n- CVE-2022-46832: Use of a Broken or Risky Cryptographic Algorithm in SICK RFU62x firmware version < 2.21 allows a low-privileged remote attacker to decrypt the encrypted data if the user requested weak cipher suites to be used for encryption via the SSH interface. The patch and installation procedure for the firmware update is available from the responsible SICK customer contact person.\n\n- CVE-2022-46833: Use of a Broken or Risky Cryptographic Algorithm in SICK RFU63x firmware version < v2.21 allows a low-privileged remote attacker to decrypt the encrypted data if the user requested weak cipher suites to be used for encryption via the SSH interface. The patch and installation procedure for the firmware update is available from the responsible SICK customer contact person.\n\n- CVE-2022-46834: Use of a Broken or Risky Cryptographic Algorithm in SICK RFU65x firmware version < v2.21 allows a low-privileged remote attacker to decrypt the encrypted data if the user requested weak cipher suites to be used for encryption via the SSH interface. The patch and installation procedure for the firmware update is available from the responsible SICK customer contact person.\n\nRelated Weaknesses:\n\n- CWE-693 (ChildOf)\n\n- CWE-311 (PeerOf)",
        "type": "Class",
        "source": "sparse",
        "search_source": "rootcause:weak hash function",
        "sources": [
          "base",
          "rootcause"
        ],
        "boost_factor": 3.0,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed-with-Review",
            "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
            "comments": "Examine children of this entry to see if there is a better fit",
            "reasons": [
              "Abstraction"
            ]
          }
        }
      },
      {
        "cwe_id": "301",
        "name": "Reflection Attack in an Authentication Protocol",
        "description": "Simple authentication protocols are subject to reflection attacks if a malicious user can use the target machine to impersonate a trusted user.",
        "score": 221.28674836113777,
        "matched_text": "CWE-301: Reflection Attack in an Authentication Protocol\n\nType: Base\n\nStatus: Draft\n\nDescription:\n\nSimple authentication protocols are subject to reflection attacks if a malicious user can use the target machine to impersonate a trusted user.\n\nExtended Details:\n\n\n\nA mutual authentication protocol requires each party to respond to a random challenge by the other party by encrypting it with a pre-shared key. Often, however, such protocols employ the same pre-shared key for communication with a number of different entities. A malicious user or an attacker can easily compromise this protocol without possessing the correct key by employing a reflection attack on the protocol.\n\n\nReflection attacks capitalize on mutual authentication schemes in order to trick the target into revealing the secret shared between it and another valid user. In a basic mutual-authentication scheme, a secret is known to both the valid user and the server; this allows them to authenticate. In order that they may verify this shared secret without sending it plainly over the wire, they utilize a Diffie-Hellman-style scheme in which they each pick a value, then request the hash of that value as keyed by the shared secret. In a reflection attack, the attacker claims to be a valid user and requests the hash of a random value from the server. When the server returns this value and requests its own value to be hashed, the attacker opens another connection to the server. This time, the hash requested by the attacker is the value which the server requested in the first connection. When the server returns this hashed value, it is used in the first connection, authenticating the attacker successfully as the impersonated valid user.\n\n\nReal-World Examples:\n\n- CVE-2005-3435: product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks.\n\nTop 25 CWE Examples:\n\n- CVE-2020-26558: Bluetooth LE and BR/EDR secure pairing in Bluetooth Core Specification 2.1 through 5.2 may permit a nearby man-in-the-middle attacker to identify the Passkey used during pairing (in the Passkey authentication procedure) by reflection of the public key and the authentication evidence of the initiating device, potentially permitting this attacker to complete authenticated pairing with the responding device using the correct Passkey for the pairing session. The attack methodology determines the Passkey value one bit at a time.\n\nRelated Weaknesses:\n\n- CWE-1390 (ChildOf)\n\n- CWE-327 (PeerOf)",
        "type": "Base",
        "source": "sparse",
        "search_source": "rootcause:weak hash function",
        "sources": [
          "base",
          "rootcause"
        ],
        "boost_factor": 3.0,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          }
        }
      },
      {
        "cwe_id": "674",
        "name": "Uncontrolled Recursion",
        "description": "The product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack.",
        "score": 217.8008214263568,
        "matched_text": "CWE-674: Uncontrolled Recursion\n\nType: Class\n\nStatus: Draft\n\nAlternative Terms:\n\nStack Exhaustion\n\nStack Exhaustion\n\nStack Exhaustion\n\nDescription:\n\nThe product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack.\n\nReal-World Examples:\n\n- CVE-2007-1285: Deeply nested arrays trigger stack exhaustion.\n\n- CVE-2007-3409: Self-referencing pointers create infinite loop and resultant stack exhaustion.\n\n- CVE-2016-10707: Javascript application accidentally changes input in a way that prevents a recursive call from detecting an exit condition.\n\n- CVE-2016-3627: An attempt to recover a corrupted XML file infinite recursion protection counter was not always incremented missing the exit condition.\n\n- CVE-2019-15118: USB-audio driver's descriptor code parsing allows unlimited recursion leading to stack exhaustion.\n\nTop 25 CWE Examples:\n\n- CVE-2020-18392: Stack overflow vulnerability in parse_array Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-18898: A stack exhaustion issue in the printIFDStructure function of Exiv2 0.27 allows remote attackers to cause a denial of service (DOS) via a crafted file.\n\n- CVE-2020-36366: Stack overflow vulnerability in parse_value Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36367: Stack overflow vulnerability in parse_block Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36368: Stack overflow vulnerability in parse_statement Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36369: Stack overflow vulnerability in parse_statement_list Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36370: Stack overflow vulnerability in parse_unary Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36371: Stack overflow vulnerability in parse_mul_div_rem Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36372: Stack overflow vulnerability in parse_plus_minus Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36373: Stack overflow vulnerability in parse_shifts Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36374: Stack overflow vulnerability in parse_comparison Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2020-36375: Stack overflow vulnerability in parse_equality Cesanta MJS 1.20.1, allows remote attackers to cause a Denial of Service (DoS) via a crafted file.\n\n- CVE-2021-20255: A stack overflow via an infinite recursion vulnerability was found in the eepro100 i8255x device emulator of QEMU. This issue occurs while processing controller commands due to a DMA reentry issue. This flaw allows a guest user or process to consume CPU cycles or crash the QEMU process on the host, resulting in a denial of service. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-27432: OPC Foundation UA .NET Standard versions prior to 1.4.365.48 and OPC UA .NET Legacy are vulnerable to an uncontrolled recursion, which may allow an attacker to trigger a stack overflow.\n\n- CVE-2021-27434: Products with Unified Automation .NET based OPC UA Client/Server SDK Bundle: Versions V3.0.7 and prior (.NET 4.5, 4.0, and 3.5 Framework versions only) are vulnerable to an uncontrolled recursion, which may allow an attacker to trigger a stack overflow.\n\n- CVE-2021-28903: A stack overflow in libyang <= v1.0.225 can cause a denial of service through function lyxml_parse_mem(). lyxml_parse_elem() function will be called recursively, which will consume stack space and lead to crash.\n\n- CVE-2021-29615: TensorFlow is an end-to-end open source platform for machine learning. The implementation of `ParseAttrValue`(https://github.com/tensorflow/tensorflow/blob/c22d88d6ff33031aa113e48aa3fc9aa74ed79595/tensorflow/core/framework/attr_value_util.cc#L397-L453) can be tricked into stack overflow due to recursion by giving in a specially crafted input. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n- CVE-2021-30470: A flaw was found in PoDoFo 0.9.7. An uncontrolled recursive call among PdfTokenizer::ReadArray(), PdfTokenizer::GetNextVariant() and PdfTokenizer::ReadDataType() functions can lead to a stack overflow.\n\n- CVE-2021-30471: A flaw was found in PoDoFo 0.9.7. An uncontrolled recursive call in PdfNamesTree::AddToDictionary function in src/podofo/doc/PdfNamesTree.cpp can lead to a stack overflow.\n\n- CVE-2021-42697: Akka HTTP 10.1.x before 10.1.15 and 10.2.x before 10.2.7 can encounter stack exhaustion while parsing HTTP headers, which allows a remote attacker to conduct a Denial of Service attack by sending a User-Agent header with deeply nested comments.\n\n- CVE-2021-43519: Stack overflow in lua_resume of ldo.c in Lua Interpreter 5.1.0~5.4.4 allows attackers to perform a Denial of Service via a crafted script file.\n\n- CVE-2020-20213: Mikrotik RouterOs 6.44.5 (long-term tree) suffers from an stack exhaustion vulnerability in the /nova/bin/net process. An authenticated remote attacker can cause a Denial of Service due to overloading the systems CPU.\n\n- CVE-2021-38566: An issue was discovered in Foxit PDF Reader before 11.0.1 and PDF Editor before 11.0.1. It allows stack consumption during recursive processing of embedded XML nodes.\n\n- CVE-2021-3622: A flaw was found in the hivex library. This flaw allows an attacker to input a specially crafted Windows Registry (hive) file, which would cause hivex to recursively call the _get_children() function, leading to a stack overflow. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-41752: Stack overflow vulnerability in Jerryscript before commit e1ce7dd7271288be8c0c8136eea9107df73a8ce2 on Oct 20, 2021 due to an unbounded recursive call to the new opt() function.\n\n- CVE-2021-45832: A Stack-based Buffer Overflow Vulnerability exists in HDF5 1.13.1-1 at at hdf5/src/H5Eint.c, which causes a Denial of Service (context-dependent).\n\n- CVE-2021-46505: Jsish v3.5.0 was discovered to contain a stack overflow via /usr/lib/x86_64-linux-gnu/libasan.so.4+0x5b1e5.\n\n- CVE-2021-46507: Jsish v3.5.0 was discovered to contain a stack overflow via Jsi_LogMsg at src/jsiUtils.c.\n\n- CVE-2021-46509: Cesanta MJS v2.20.0 was discovered to contain a stack overflow via snquote at mjs/src/mjs_json.c.\n\n- CVE-2022-20382: In (TBD) of (TBD), there is a possible out of bounds write due to kernel stack overflow. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-214245176References: Upstream kernel\n\n- CVE-2022-21708: graphql-go is a GraphQL server with a focus on ease of use. In versions prior to 1.3.0 there exists a DoS vulnerability that is possible due to a bug in the library that would allow an attacker with specifically designed queries to cause stack overflow panics. Any user with access to the GraphQL handler can send these queries and cause stack overflows. This in turn could potentially compromise the ability of the server to serve data to its users. The issue has been patched in version `v1.3.0`. The only known workaround for this issue is to disable the `graphql.MaxDepth` option from your schema which is not recommended.\n\n- CVE-2022-23591: Tensorflow is an Open Source Machine Learning Framework. The `GraphDef` format in TensorFlow does not allow self recursive functions. The runtime assumes that this invariant is satisfied. However, a `GraphDef` containing a fragment such as the following can be consumed when loading a `SavedModel`. This would result in a stack overflow during execution as resolving each `NodeDef` means resolving the function itself and its nodes. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n- CVE-2022-24675: encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.\n\n- CVE-2022-31019: Vapor is a server-side Swift HTTP web framework. When using automatic content decoding an attacker can craft a request body that can make the server crash with the following request: `curl -d \"array[_0][0][array][_0][0][array]$(for f in $(seq 1100); do echo -n '[_0][0][array]'; done)[string][_0]=hello%20world\" http://localhost:8080/foo`. The issue is unbounded, attacker controlled stack growth which will at some point lead to a stack overflow and a process crash. This issue has been fixed in version 4.61.1.\n\n- CVE-2022-31099: rulex is a new, portable, regular expression language. When parsing untrusted rulex expressions, the stack may overflow, possibly enabling a Denial of Service attack. This happens when parsing an expression with several hundred levels of nesting, causing the process to abort immediately. This is a security concern for you, if your service parses untrusted rulex expressions (expressions provided by an untrusted user), and your service becomes unavailable when the process running rulex aborts due to a stack overflow. The crash is fixed in version **0.4.3**. Affected users are advised to update to this version. There are no known workarounds for this issue.\n\n- CVE-2022-3216: A vulnerability has been found in Nintendo Game Boy Color and classified as problematic. This vulnerability affects unknown code of the component Mobile Adapter GB. The manipulation leads to memory corruption. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-208606 is the identifier assigned to this vulnerability.\n\n- CVE-2022-38334: XPDF v4.04 and earlier was discovered to contain a stack overflow via the function Catalog::countPageTree() at Catalog.cc.\n\n- CVE-2022-41966: XStream serializes Java objects to XML and back again. Versions prior to 1.4.20 may allow a remote attacker to terminate the application with a stack overflow error, resulting in a denial of service only via manipulation the processed input stream. The attack uses the hash code implementation for collections and maps to force recursive hash calculation causing a stack overflow. This issue is patched in version 1.4.20 which handles the stack overflow and raises an InputManipulationException instead. A potential workaround for users who only use HashMap or HashSet and whose XML refers these only as default map or set, is to change the default implementation of java.util.Map and java.util per the code example in the referenced advisory. However, this implies that your application does not care about the implementation of the map and all elements are comparable.\n\n- CVE-2022-47662: GPAC MP4Box 2.1-DEV-rev649-ga8f438d20 has a segment fault (/stack overflow) due to infinite recursion in Media_GetSample isomedia/media.c:662\n\n- CVE-2022-23460: Jsonxx or Json++ is a JSON parser, writer and reader written in C++. In affected versions of jsonxx json parsing may lead to stack exhaustion in an address sanitized (ASAN) build. This issue may lead to Denial of Service if the program using the jsonxx library crashes. This issue exists on the current commit of the jsonxx project and the project itself has been archived. Updates are not expected. Users are advised to find a replacement.\n\n- CVE-2022-23606: Envoy is an open source edge and service proxy, designed for cloud-native applications. When a cluster is deleted via Cluster Discovery Service (CDS) all idle connections established to endpoints in that cluster are disconnected. A recursion was introduced in the procedure of disconnecting idle connections that can lead to stack exhaustion and abnormal process termination when a cluster has a large number of idle connections. This infinite recursion causes Envoy to crash. Users are advised to upgrade.\n\n- CVE-2022-24921: regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.\n\n- CVE-2022-25313: In Expat (aka libexpat) before 2.4.5, an attacker can trigger stack exhaustion in build_model via a large nesting depth in the DTD element.\n\n- CVE-2022-27810: It was possible to trigger an infinite recursion condition in the error handler when Hermes executed specific maliciously formed JavaScript. This condition was only possible to trigger in dev-mode (when asserts were enabled). This issue affects Hermes versions prior to v0.12.0.\n\n- CVE-2022-28201: An issue was discovered in MediaWiki before 1.35.6, 1.36.x before 1.36.4, and 1.37.x before 1.37.2. Users with the editinterface permission can trigger infinite recursion, because a bare local interwiki is mishandled for the mainpage message.\n\n- CVE-2022-28773: Due to an uncontrolled recursion in SAP Web Dispatcher and SAP Internet Communication Manager, the application may crash, leading to denial of service, but can be restarted automatically. \n\n- CVE-2022-31173: Juniper is a GraphQL server library for Rust. Affected versions of Juniper are vulnerable to uncontrolled recursion resulting in a program crash. This issue has been addressed in version 0.15.10. Users are advised to upgrade. Users unable to upgrade should limit the recursion depth manually.\n\n- CVE-2022-37315: graphql-go (aka GraphQL for Go) through 0.8.0 has infinite recursion in the type definition parser.\n\n- CVE-2022-41881: Netty project is an event-driven asynchronous network application framework. In versions prior to 4.1.86.Final, a StackOverflowError can be raised when parsing a malformed crafted message due to an infinite recursion. This issue is patched in version 4.1.86.Final. There is no workaround, except using a custom HaProxyMessageDecoder.\n\n- CVE-2022-27943: libiberty/rust-demangle.c in GNU GCC 11.2 allows stack consumption in demangle_const, as demonstrated by nm-new.\n\n- CVE-2022-40150: Those using Jettison to parse untrusted XML or JSON data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by Out of memory. This effect may support a denial of service attack.\n\nRelated Weaknesses:\n\n- CWE-834 (ChildOf)",
        "type": "Class",
        "source": "sparse",
        "search_source": "rootcause:weak hash function",
        "sources": [
          "base",
          "rootcause"
        ],
        "boost_factor": 3.0,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed-with-Review",
            "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
            "comments": "Examine children of this entry to see if there is a better fit",
            "reasons": [
              "Abstraction"
            ]
          }
        }
      },
      {
        "cwe_id": "836",
        "name": "Use of Password Hash Instead of Password for Authentication",
        "description": "The product records password hashes in a data store, receives a hash of a password from a client, and compares the supplied hash to the hash obtained from the data store.",
        "score": 214.51105573266688,
        "matched_text": "CWE-836: Use of Password Hash Instead of Password for Authentication\n\nType: Base\n\nStatus: Incomplete\n\nDescription:\n\nThe product records password hashes in a data store, receives a hash of a password from a client, and compares the supplied hash to the hash obtained from the data store.\n\nExtended Details:\n\n\n\nSome authentication mechanisms rely on the client to generate the hash for a password, possibly to reduce load on the server or avoid sending the password across the network. However, when the client is used to generate the hash, an attacker can bypass the authentication by obtaining a copy of the hash, e.g. by using SQL injection to compromise a database of authentication credentials, or by exploiting an information exposure. The attacker could then use a modified client to replay the stolen hash without having knowledge of the original password.\n\n\nAs a result, the server-side comparison against a client-side hash does not provide any more security than the use of passwords without hashing.\n\n\nReal-World Examples:\n\n- CVE-2009-1283: Product performs authentication with user-supplied password hashes that can be obtained from a separate SQL injection vulnerability (CVE-2009-1282).\n\n- CVE-2005-3435: Product allows attackers to bypass authentication by obtaining the password hash for another user and specifying the hash in the pwd argument.\n\nTop 25 CWE Examples:\n\n- CVE-2021-23857: Login with hash: The login routine allows the client to log in to the system not by using the password, but by using the hash of the password. Combined with CVE-2021-23858, this allows an attacker to subsequently login to the system.\n\n- CVE-2021-36460: VeryFitPro (com.veryfit2hr.second) 3.2.8 hashes the account's password locally on the device and uses the hash to authenticate in all communication with the backend API, including login, registration and changing of passwords. This allows an attacker in possession of a hash to takeover a user's account, rendering the benefits of storing hashed passwords in the database useless.\n\n- CVE-2021-45036:  Velneo vClient on its 28.1.3 version, could allow an attacker with knowledge of the victims's username and hashed password to spoof the victim's id against the server. \n\n- CVE-2022-25155: Use of Password Hash Instead of Password for Authentication vulnerability in Mitsubishi Electric MELSEC iQ-F series FX5U(C) CPU all versions, Mitsubishi Electric MELSEC iQ-F series FX5UJ CPU all versions, Mitsubishi Electric MELSEC iQ-R series R00/01/02CPU all versions, Mitsubishi Electric MELSEC iQ-R series R04/08/16/32/120(EN)CPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120SFCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PSFCPU all versions, Mitsubishi Electric MELSEC iQ-R series RJ71GN11-T2 all versions, Mitsubishi Electric MELSEC iQ-R series RJ71GN11-EIP all versions, Mitsubishi Electric MELSEC iQ-R series RJ71C24(-R2/R4) all versions, Mitsubishi Electric MELSEC iQ-R series RJ71EN71 all versions, Mitsubishi Electric MELSEC iQ-R series RJ72GF15-T2 all versions, Mitsubishi Electric MELSEC Q series Q03UDECPU all versions, Mitsubishi Electric MELSEC Q series Q04/06/10/13/20/26/50/100UDEHCPU all versions, Mitsubishi Electric MELSEC Q series Q03/04/06/13/26UDVCPU all versions, Mitsubishi Electric MELSEC Q series Q04/06/13/26UDPVCPU all versions, Mitsubishi Electric MELSEC Q series QJ71C24N(-R2/R4) all versions, Mitsubishi Electric MELSEC Q series QJ71E71-100 all versions, Mitsubishi Electric MELSEC Q series QJ72BR15 all versions, Mitsubishi Electric MELSEC Q series QJ72LP25(-25/G/GE) all versions, Mitsubishi Electric MELSEC L series L02/06/26CPU(-P) all versions, Mitsubishi Electric MELSEC L series L26CPU-(P)BT all versions, Mitsubishi Electric MELSEC L series LJ71C24(-R2) all versions, Mitsubishi Electric MELSEC L series LJ71E71-100 all versions and Mitsubishi Electric MELSEC L series LJ72GF15-T2 all versions allows a remote unauthenticated attacker to login to the product by replaying an eavesdropped password hash.\n\n- CVE-2022-25157: Use of Password Hash Instead of Password for Authentication vulnerability in Mitsubishi Electric MELSEC iQ-F series FX5U(C) CPU all versions, Mitsubishi Electric MELSEC iQ-F series FX5UJ CPU all versions, Mitsubishi Electric MELSEC iQ-R series R00/01/02CPU all versions, Mitsubishi Electric MELSEC iQ-R series R04/08/16/32/120(EN)CPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120SFCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PCPU all versions, Mitsubishi Electric MELSEC iQ-R series R08/16/32/120PSFCPU all versions, Mitsubishi Electric MELSEC iQ-R series R16/32/64MTCPU all versions, Mitsubishi Electric MELSEC iQ-R series RJ71C24(-R2/R4) all versions, Mitsubishi Electric MELSEC iQ-R series RJ71EN71 all versions, Mitsubishi Electric MELSEC iQ-R series RJ71GF11-T2 all versions, Mitsubishi Electric MELSEC iQ-R series RJ71GP21(S)-SX all versions, Mitsubishi Electric MELSEC iQ-R series RJ72GF15-T2 all versions, Mitsubishi Electric MELSEC Q series Q03UDECPU all versions, Mitsubishi Electric MELSEC Q series Q04/06/10/13/20/26/50/100UDEHCPU all versions, Mitsubishi Electric MELSEC Q series Q03/04/06/13/26UDVCPU all versions, Mitsubishi Electric MELSEC Q series Q04/06/13/26UDPVCPU all versions, Mitsubishi Electric MELSEC Q series QJ71C24N(-R2/R4) all versions, Mitsubishi Electric MELSEC Q series QJ71E71-100 all versions, Mitsubishi Electric MELSEC L series L02/06/26CPU(-P) all versions, Mitsubishi Electric MELSEC L series L26CPU-(P)BT all versions, Mitsubishi Electric MELSEC L series LJ71C24(-R2) all versions, Mitsubishi Electric MELSEC L series LJ71E71-100 all versions and Mitsubishi Electric MELSEC L series LJ72GF15-T2 all versions allows a remote unauthenticated attacker to disclose or tamper with the information in the product by using an eavesdropped password hash.\n\n- CVE-2022-32282: An improper password check exists in the login functionality of WWBN AVideo 11.6 and dev master commit 3f7c0364. An attacker that owns a users' password hash will be able to use it to directly login into the account, leading to increased privileges.\n\nRelated Weaknesses:\n\n- CWE-1390 (ChildOf)\n\n- CWE-602 (PeerOf)",
        "type": "Base",
        "source": "sparse",
        "search_source": "rootcause:weak hash function",
        "sources": [
          "base",
          "rootcause"
        ],
        "boost_factor": 3.0,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          }
        }
      },
      {
        "cwe_id": "1240",
        "name": "Use of a Cryptographic Primitive with a Risky Implementation",
        "description": "To fulfill the need for a cryptographic primitive, the product implements a cryptographic algorithm using a non-standard, unproven, or disallowed/non-compliant cryptographic implementation.",
        "score": 212.37197720097376,
        "matched_text": "CWE-1240: Use of a Cryptographic Primitive with a Risky Implementation\n\nType: Base\n\nStatus: Draft\n\nDescription:\n\nTo fulfill the need for a cryptographic primitive, the product implements a cryptographic algorithm using a non-standard, unproven, or disallowed/non-compliant cryptographic implementation.\n\nExtended Details:\n\n\n\nCryptographic protocols and systems depend on cryptographic primitives (and associated algorithms) as their basic building blocks. Some common examples of primitives are digital signatures, one-way hash functions, ciphers, and public key cryptography; however, the notion of \"primitive\" can vary depending on point of view. See \"Terminology Notes\" for further explanation of some concepts.\n\n\nCryptographic primitives are defined to accomplish one very specific task in a precisely defined and mathematically reliable fashion. For example, suppose that for a specific cryptographic primitive (such as an encryption routine), the consensus is that the primitive can only be broken after trying out N different inputs (where the larger the value of N, the stronger the cryptography). For an encryption scheme like AES-256, one would expect N to be so large as to be infeasible to execute in a reasonable amount of time.\n\n\nIf a vulnerability is ever found that shows that one can break a cryptographic primitive in significantly less than the expected number of attempts, then that primitive is considered weakened (or sometimes in extreme cases, colloquially it is \"broken\"). As a result, anything using this cryptographic primitive would now be considered insecure or risky. Thus, even breaking or weakening a seemingly small cryptographic primitive has the potential to render the whole system vulnerable, due to its reliance on the primitive. A historical example can be found in TLS when using DES. One would colloquially call DES the cryptographic primitive for transport encryption in this version of TLS. In the past, DES was considered strong, because no weaknesses were found in it; importantly, DES has a key length of 56 bits. Trying N=2^56 keys was considered impractical for most actors. Unfortunately, attacking a system with 56-bit keys is now practical via brute force, which makes defeating DES encryption practical. It is now practical for an adversary to read any information sent under this version of TLS and use this information to attack the system. As a result, it can be claimed that this use of TLS is weak, and that any system depending on TLS with DES could potentially render the entire system vulnerable to attack.\n\n\nCryptographic primitives and associated algorithms are only considered safe after extensive research and review from experienced cryptographers from academia, industry, and government entities looking for any possible flaws. Furthermore, cryptographic primitives and associated algorithms are frequently reevaluated for safety when new mathematical and attack techniques are discovered. As a result and over time, even well-known cryptographic primitives can lose their compliance status with the discovery of novel attacks that might either defeat the algorithm or reduce its robustness significantly.\n\n\nIf ad-hoc cryptographic primitives are implemented, it is almost certain that the implementation will be vulnerable to attacks that are well understood by cryptographers, resulting in the exposure of sensitive information and other consequences.\n\n\nThis weakness is even more difficult to manage for hardware-implemented deployment of cryptographic algorithms. First, because hardware is not patchable as easily as software, any flaw discovered after release and production typically cannot be fixed without a recall of the product. Secondly, the hardware product is often expected to work for years, during which time computation power available to the attacker only increases. Therefore, for hardware implementations of cryptographic primitives, it is absolutely essential that only strong, proven cryptographic primitives are used.\n\n\nReal-World Examples:\n\n- CVE-2020-4778: software uses MD5, which is less safe than the default SHA-256 used by related products\n\n- CVE-2005-2946: Default configuration of product uses MD5 instead of stronger algorithms that are available, simplifying forgery of certificates.\n\n- CVE-2019-3907: identity card uses MD5 hash of a salt and password\n\n- CVE-2021-34687: personal key is transmitted over the network using a substitution cipher\n\n- CVE-2020-14254: product does not disable TLS-RSA cipher suites, allowing decryption of traffic if TLS 2.0 and secure ciphers are not enabled.\n\n- CVE-2019-1543: SSL/TLS library generates 16-byte nonces but reduces them to 12 byte nonces for the ChaCha20-Poly1305 cipher, converting them in a way that violates the cipher's requirements for unique nonces.\n\n- CVE-2017-9267: LDAP interface allows use of weak ciphers\n\n- CVE-2017-7971: SCADA product allows \"use of outdated cipher suites\"\n\n- CVE-2020-6616: Chip implementing Bluetooth uses a low-entropy PRNG instead of a hardware RNG, allowing spoofing.\n\n- CVE-2019-1715: security product has insufficient entropy in the DRBG, allowing collisions and private key discovery\n\n- CVE-2014-4192: Dual_EC_DRBG implementation in RSA toolkit does not correctly handle certain byte requests, simplifying plaintext recovery\n\n- CVE-2007-6755: Recommendation for Dual_EC_DRBG algorithm contains point Q constants that could simplify decryption\n\nTop 25 CWE Examples:\n\n- CVE-2021-34687: iDrive RemotePC before 7.6.48 on Windows allows information disclosure. A man in the middle can recover a system's Personal Key when a client attempts to make a LAN connection. The Personal Key is transmitted over the network while only being encrypted via a substitution cipher.\n\nRelated Weaknesses:\n\n- CWE-327 (ChildOf)",
        "type": "Base",
        "source": "sparse",
        "search_source": "rootcause:weak hash function",
        "sources": [
          "base",
          "rootcause"
        ],
        "boost_factor": 3.0,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          }
        }
      },
      {
        "cwe_id": "770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "description": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
        "score": 67.00924514121934,
        "matched_text": "CWE-770: Allocation of Resources Without Limits or Throttling\n\nType: Base\n\nStatus: Incomplete\n\nDescription:\n\nThe product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.\n\nExtended Details:\n\n\n\nCode frequently has to work with limited resources, so programmers must be careful to ensure that resources are not consumed too quickly, or too easily. Without use of quotas, resource limits, or other protection mechanisms, it can be easy for an attacker to consume many resources by rapidly making many requests, or causing larger resources to be used than is needed. When too many resources are allocated, or if a single resource is too large, then it can prevent the code from working correctly, possibly leading to a denial of service.\n\n\nReal-World Examples:\n\n- CVE-2022-21668: Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190).\n\n- CVE-2009-4017: Language interpreter does not restrict the number of temporary files being created when handling a MIME request with a large number of parts..\n\n- CVE-2009-2726: Driver does not use a maximum width when invoking sscanf style functions, causing stack consumption.\n\n- CVE-2009-2540: Large integer value for a length property in an object causes a large amount of memory allocation.\n\n- CVE-2009-2054: Product allows exhaustion of file descriptors when processing a large number of TCP packets.\n\n- CVE-2008-5180: Communication product allows memory consumption with a large number of SIP requests, which cause many sessions to be created.\n\n- CVE-2008-1700: Product allows attackers to cause a denial of service via a large number of directives, each of which opens a separate window.\n\n- CVE-2005-4650: CMS does not restrict the number of searches that can occur simultaneously, leading to resource exhaustion.\n\n- CVE-2020-15100: web application scanner attempts to read an excessively large file created by a user, causing process termination\n\n- CVE-2020-7218: Go-based workload orchestrator does not limit resource usage with unauthenticated connections, allowing a DoS by flooding the service\n\nTop 25 CWE Examples:\n\n- CVE-2020-19463: An issue has been found in function vfprintf in PDF2JSON 0.70 that allows attackers to cause a Denial of Service due to a stack overflow.\n\n- CVE-2020-19464: An issue has been found in function XRef::fetch in PDF2JSON 0.70 that allows attackers to cause a Denial of Service due to a stack overflow .\n\n- CVE-2021-29324: OpenSource Moddable v10.5.0 was discovered to contain a stack overflow via the component /moddable/xs/sources/xsScript.c.\n\n- CVE-2021-29329: OpenSource Moddable v10.5.0 was discovered to contain a stack overflow in the fxBinaryExpressionNodeDistribute function at /moddable/xs/sources/xsTree.c.\n\n- CVE-2021-41800: MediaWiki before 1.36.2 allows a denial of service (resource consumption because of lengthy query processing time). Visiting Special:Contributions can sometimes result in a long running SQL query because PoolCounter protection is mishandled.\n\n- CVE-2021-35492: Wowza Streaming Engine through 4.8.11+5 could allow an authenticated, remote attacker to exhaust filesystem resources via the /enginemanager/server/vhost/historical.jsdata vhost parameter. This is due to the insufficient management of available filesystem resources. An attacker could exploit this vulnerability through the Virtual Host Monitoring section by requesting random virtual-host historical data and exhausting available filesystem resources. A successful exploit could allow the attacker to cause database errors and cause the device to become unresponsive to web-based management. (Manual intervention is required to free filesystem resources and return the application to an operational state.)\n\n- CVE-2021-22174: Crash in USB HID dissector in Wireshark 3.4.0 to 3.4.2 allows denial of service via packet injection or crafted capture file\n\n- CVE-2020-22785: Etherpad < 1.8.3 is affected by a missing lock check which could cause a denial of service. Aggressively targeting random pad import endpoints with empty data would flatten all pads due to lack of rate limiting and missing ownership check.\n\n- CVE-2021-33831: api/account/register in the TH Wildau COVID-19 Contact Tracing application through 2021-09-01 has Incorrect Access Control. An attacker can interfere with tracing of infection chains by creating 500 random users within 2500 seconds.\n\n- CVE-2020-28200: The Sieve engine in Dovecot before 2.3.15 allows Uncontrolled Resource Consumption, as demonstrated by a situation with a complex regular expression for the regex extension.\n\n- CVE-2021-41591: ACINQ Eclair before 0.6.3 allows loss of funds because of dust HTLC exposure.\n\n- CVE-2021-41592: Blockstream c-lightning through 0.10.1 allows loss of funds because of dust HTLC exposure.\n\n- CVE-2021-41593: Lightning Labs lnd before 0.13.3-beta allows loss of funds because of dust HTLC exposure.\n\n- CVE-2020-24821: A vulnerability in the dwarf::cursor::skip_form function of Libelfin v0.3 allows attackers to cause a denial of service (DOS) through a segmentation fault via a crafted ELF file.\n\n- CVE-2020-24822: A vulnerability in the dwarf::cursor::uleb function of Libelfin v0.3 allows attackers to cause a denial of service (DOS) through a segmentation fault via a crafted ELF file.\n\n- CVE-2020-24823: A vulnerability in the dwarf::to_string function of Libelfin v0.3 allows attackers to cause a denial of service (DOS) through a segmentation fault via a crafted ELF file.\n\n- CVE-2020-24825: A vulnerability in the line_table::line_table function of Libelfin v0.3 allows attackers to cause a denial of service (DOS) through a segmentation fault via a crafted ELF file.\n\n- CVE-2020-24826: A vulnerability in the elf::section::as_strtab function of Libelfin v0.3 allows attackers to cause a denial of service (DOS) through a segmentation fault via a crafted ELF file.\n\n- CVE-2021-0217: A vulnerability in processing of certain DHCP packets from adjacent clients on EX Series and QFX Series switches running Juniper Networks Junos OS with DHCP local/relay server configured may lead to exhaustion of DMA memory causing a Denial of Service (DoS). Over time, exploitation of this vulnerability may cause traffic to stop being forwarded, or to crashing of the fxpc process. When Packet DMA heap utilization reaches 99%, the system will become unstable. Packet DMA heap utilization can be monitored through the following command: user@junos# request pfe execute target fpc0 timeout 30 command \"show heap\" ID Base Total(b) Free(b) Used(b) % Name -- ---------- ----------- ----------- ----------- --- ----------- 0 213301a8 536870488 387228840 149641648 27 Kernel 1 91800000 8388608 3735120 4653488 55 DMA 2 92000000 75497472 74452192 1045280 1 PKT DMA DESC 3 d330000 335544320 257091400 78452920 23 Bcm_sdk 4 96800000 184549376 2408 184546968 99 Packet DMA <--- 5 903fffe0 20971504 20971504 0 0 Blob An indication of the issue occurring may be observed through the following log messages: Dec 10 08:07:00.124 2020 hostname fpc0 brcm_pkt_buf_alloc:523 (buf alloc) failed allocating packet buffer Dec 10 08:07:00.126 2020 hostname fpc0 (buf alloc) failed allocating packet buffer Dec 10 08:07:00.128 2020 hostname fpc0 brcm_pkt_buf_alloc:523 (buf alloc) failed allocating packet buffer Dec 10 08:07:00.130 2020 hostnameC fpc0 (buf alloc) failed allocating packet buffer This issue affects Juniper Networks Junos OS on EX Series and QFX Series: 17.4R3 versions prior to 17.4R3-S3; 18.1R3 versions between 18.1R3-S6 and 18.1R3-S11; 18.2R3 versions prior to 18.2R3-S6; 18.3R3 versions prior to 18.3R3-S4; 18.4R2 versions prior to 18.4R2-S5; 18.4R3 versions prior to 18.4R3-S6; 19.1 versions between 19.1R2 and 19.1R3-S3; 19.2 versions prior to 19.2R3-S1; 19.3 versions prior to 19.3R2-S5, 19.3R3; 19.4 versions prior to 19.4R2-S2, 19.4R3; 20.1 versions prior to 20.1R2; 20.2 versions prior to 20.2R1-S2, 20.2R2. Junos OS versions prior to 17.4R3 are unaffected by this vulnerability.\n\n- CVE-2021-0242: A vulnerability due to the improper handling of direct memory access (DMA) buffers on EX4300 switches on Juniper Networks Junos OS allows an attacker sending specific unicast frames to trigger a Denial of Service (DoS) condition by exhausting DMA buffers, causing the FPC to crash and the device to restart. The DMA buffer leak is seen when receiving these specific, valid unicast frames on an interface without Layer 2 Protocol Tunneling (L2PT) or dot1x configured. Interfaces with either L2PT or dot1x configured are not vulnerable to this issue. When this issue occurs, DMA buffer usage keeps increasing and the following error log messages may be observed: Apr 14 14:29:34.360 /kernel: pid 64476 (pfex_junos), uid 0: exited on signal 11 (core dumped) Apr 14 14:29:33.790 init: pfe-manager (PID 64476) terminated by signal number 11. Core dumped! The DMA buffers on the FPC can be monitored by the executing vty command 'show heap': ID Base Total(b) Free(b) Used(b) % Name -- ---------- ----------- ----------- ----------- --- ----------- 0 4a46000 268435456 238230496 30204960 11 Kernel 1 18a46000 67108864 17618536 49490328 73 Bcm_sdk 2 23737000 117440512 18414552 99025960 84 DMA buf <<<<< keeps increasing 3 2a737000 16777216 16777216 0 0 DMA desc This issue affects Juniper Networks Junos OS on the EX4300: 17.3 versions prior to 17.3R3-S11; 17.4 versions prior to 17.4R2-S13, 17.4R3-S4; 18.1 versions prior to 18.1R3-S12; 18.2 versions prior to 18.2R2-S8, 18.2R3-S7; 18.3 versions prior to 18.3R3-S4; 18.4 versions prior to 18.4R1-S8, 18.4R2-S7, 18.4R3-S7; 19.1 versions prior to 19.1R1-S6, 19.1R2-S2, 19.1R3-S4; 19.2 versions prior to 19.2R1-S6, 19.2R3-S2; 19.3 versions prior to 19.3R3-S2; 19.4 versions prior to 19.4R2-S3, 19.4R3-S1; 20.1 versions prior to 20.1R2; 20.2 versions prior to 20.2R2-S1, 20.2R3; 20.3 versions prior to 20.3R1-S1, 20.3R2.\n\n- CVE-2021-0338: In SystemSettingsValidators, there is a possible permanent denial of service due to missing bounds checks on UI settings. This could lead to local denial of service with User execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11Android ID: A-156260178\n\n- CVE-2021-0420: In memory management driver, there is a possible system crash due to a missing bounds check. This could lead to local denial of service with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS05403499; Issue ID: ALPS05381065.\n\n- CVE-2021-0422: In memory management driver, there is a possible system crash due to a missing bounds check. This could lead to local denial of service with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS05403499; Issue ID: ALPS05381071.\n\n- CVE-2021-0424: In memory management driver, there is a possible system crash due to a missing bounds check. This could lead to local denial of service with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS05403499; Issue ID: ALPS05393787.\n\n- CVE-2021-20185: It was found in Moodle before version 3.10.1, 3.9.4, 3.8.7 and 3.5.16 that messaging did not impose a character limit when sending messages, which could result in client-side (browser) denial of service for users receiving very large messages.\n\n- CVE-2021-29430: Sydent is a reference Matrix identity server. Sydent does not limit the size of requests it receives from HTTP clients. A malicious user could send an HTTP request with a very large body, leading to memory exhaustion and denial of service. Sydent also does not limit response size for requests it makes to remote Matrix homeservers. A malicious homeserver could return a very large response, again leading to memory exhaustion and denial of service. This affects any server which accepts registration requests from untrusted clients. This issue has been patched by releases 89071a1, 0523511, f56eee3. As a workaround request sizes can be limited in an HTTP reverse-proxy. There are no known workarounds for the problem with overlarge responses.\n\n- CVE-2021-29932: An issue was discovered in the parse_duration crate through 2021-03-18 for Rust. It allows attackers to cause a denial of service (CPU and memory consumption) via a duration string with a large exponent.\n\n- CVE-2021-32699: Wings is the control plane software for the open source Pterodactyl game management system. All versions of Pterodactyl Wings prior to `1.4.4` are vulnerable to system resource exhaustion due to improper container process limits being defined. A malicious user can consume more resources than intended and cause downstream impacts to other clients on the same hardware, eventually causing the physical server to stop responding. Users should upgrade to `1.4.4` to mitigate the issue. There is no non-code based workaround for impacted versions of the software. Users running customized versions of this software can manually set a PID limit for containers created.\n\n- CVE-2021-3478: There's a flaw in OpenEXR's scanline input file functionality in versions before 3.0.0-beta. An attacker able to submit a crafted file to be processed by OpenEXR could consume excessive system memory. The greatest impact of this flaw is to system availability.\n\n- CVE-2021-38463: The affected product does not properly control the allocation of resources. A user may be able to allocate unlimited memory buffers using API functions.\n\n- CVE-2021-38465: The webinstaller is a Golang web server executable that enables the generation of an Auvesy image agent. Resource consumption can be achieved by generating large amounts of installations, which are then saved without limitation in the temp folder of the webinstaller executable.\n\n- CVE-2021-3912: OctoRPKI tries to load the entire contents of a repository in memory, and in the case of a GZIP bomb, unzip it in memory, making it possible to create a repository that makes OctoRPKI run out of memory (and thus crash).\n\n- CVE-2021-41546: A vulnerability has been identified in RUGGEDCOM ROX MX5000 (All versions < V2.14.1), RUGGEDCOM ROX RX1400 (All versions < V2.14.1), RUGGEDCOM ROX RX1500 (All versions < V2.14.1), RUGGEDCOM ROX RX1501 (All versions < V2.14.1), RUGGEDCOM ROX RX1510 (All versions < V2.14.1), RUGGEDCOM ROX RX1511 (All versions < V2.14.1), RUGGEDCOM ROX RX1512 (All versions < V2.14.1), RUGGEDCOM ROX RX1524 (All versions < V2.14.1), RUGGEDCOM ROX RX1536 (All versions < V2.14.1), RUGGEDCOM ROX RX5000 (All versions < V2.14.1). Affected devices write crashdumps without checking if enough space is available on the filesystem. Once the crashdump fills the entire root filesystem, affected devices fail to boot successfully. An attacker can leverage this vulnerability to cause a permanent Denial-of-Service.\n\n- CVE-2021-21274: Synapse is a Matrix reference homeserver written in python (pypi package matrix-synapse). Matrix is an ecosystem for open federated Instant Messaging and VoIP. In Synapse before version 1.25.0, a malicious homeserver could redirect requests to their .well-known file to a large file. This can lead to a denial of service attack where homeservers will consume significantly more resources when requesting the .well-known file of a malicious homeserver. This affects any server which accepts federation requests from untrusted servers. Issue is resolved in version 1.25.0. As a workaround the `federation_domain_whitelist` setting can be used to restrict the homeservers communicated with over federation.\n\n- CVE-2021-21294: Http4s (http4s-blaze-server) is a minimal, idiomatic Scala interface for HTTP services. Http4s before versions 0.21.17, 0.22.0-M2, and 1.0.0-M14 have a vulnerability which can lead to a denial-of-service. Blaze-core, a library underlying http4s-blaze-server, accepts connections unboundedly on its selector pool. This has the net effect of amplifying degradation in services that are unable to handle their current request load, since incoming connections are still accepted and added to an unbounded queue. Each connection allocates a socket handle, which drains a scarce OS resource. This can also confound higher level circuit breakers which work based on detecting failed connections. http4s provides a general \"MaxActiveRequests\" middleware mechanism for limiting open connections, but it is enforced inside the Blaze accept loop, after the connection is accepted and the socket opened. Thus, the limit only prevents the number of connections which can be simultaneously processed, not the number of connections which can be held open. In 0.21.17, 0.22.0-M2, and 1.0.0-M14, a new \"maxConnections\" property, with a default value of 1024, has been added to the `BlazeServerBuilder`. Setting the value to a negative number restores unbounded behavior, but is strongly disrecommended. The NIO2 backend does not respect `maxConnections`. Its use is now deprecated in http4s-0.21, and the option is removed altogether starting in http4s-0.22. There are several possible workarounds described in the refrenced GitHub Advisory GHSA-xhv5-w9c5-2r2w.\n\n- CVE-2021-23053: On version 15.1.x before 15.1.3, 14.1.x before 14.1.3.1, and 13.1.x before 13.1.3.6, when the brute force protection feature of BIG-IP Advanced WAF or BIG-IP ASM is enabled on a virtual server and the virtual server is under brute force attack, the MySQL database may run out of disk space due to lack of row limit on undisclosed tables in the MYSQL database. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2021-41167: modern-async is an open source JavaScript tooling library for asynchronous operations using async/await and promises. In affected versions a bug affecting two of the functions in this library: forEachSeries and forEachLimit. They should limit the concurrency of some actions but, in practice, they don't. Any code calling these functions will be written thinking they would limit the concurrency but they won't. This could lead to potential security issues in other projects. The problem has been patched in 1.0.4. There is no workaround.\n\n- CVE-2021-42262: An issue was discovered in Softing OPC UA C++ SDK before 5.70. An invalid XML element in the type dictionary makes the OPC/UA client crash due to an out-of-memory condition.\n\n- CVE-2020-35210: A vulnerability in Atomix v3.1.5 allows attackers to cause a denial of service (DoS) via a Raft session flooding attack using Raft OpenSessionRequest messages.\n\n- CVE-2021-32476: A denial-of-service risk was identified in the draft files area, due to it not respecting user file upload limits. Moodle versions 3.10 to 3.10.3, 3.9 to 3.9.6, 3.8 to 3.8.8, 3.5 to 3.5.17 and earlier unsupported versions are affected.\n\n- CVE-2021-43662: totolink EX300_v2, ver V4.0.3c.140_B20210429 and A720R ,ver V4.1.5cu.470_B20200911 have an issue which causes uncontrolled resource consumption.\n\n- CVE-2020-3566: A vulnerability in the Distance Vector Multicast Routing Protocol (DVMRP) feature of Cisco IOS XR Software could allow an unauthenticated, remote attacker to exhaust process memory of an affected device. The vulnerability is due to insufficient queue management for Internet Group Management Protocol (IGMP) packets. An attacker could exploit this vulnerability by sending crafted IGMP traffic to an affected device. A successful exploit could allow the attacker to cause memory exhaustion, resulting in instability of other processes. These processes may include, but are not limited to, interior and exterior routing protocols. Cisco will release software updates that address this vulnerability.\n\n- CVE-2020-3569: Multiple vulnerabilities in the Distance Vector Multicast Routing Protocol (DVMRP) feature of Cisco IOS XR Software could allow an unauthenticated, remote attacker to either immediately crash the Internet Group Management Protocol (IGMP) process or make it consume available memory and eventually crash. The memory consumption may negatively impact other processes that are running on the device. These vulnerabilities are due to the incorrect handling of IGMP packets. An attacker could exploit these vulnerabilities by sending crafted IGMP traffic to an affected device. A successful exploit could allow the attacker to immediately crash the IGMP process or cause memory exhaustion, resulting in other processes becoming unstable. These processes may include, but are not limited to, interior and exterior routing protocols. Cisco will release software updates that address these vulnerabilities.\n\n- CVE-2021-44988: Jerryscript v3.0.0 and below was discovered to contain a stack overflow via ecma_find_named_property in ecma-helpers.c.\n\n- CVE-2021-46050: A Stack Overflow vulnerability exists in Binaryen 103 via the printf_common function.\n\n- CVE-2022-29503: A memory corruption vulnerability exists in the libpthread linuxthreads functionality of uClibC 0.9.33.2 and uClibC-ng 1.0.40. Thread allocation can lead to memory corruption. An attacker can create threads to trigger this vulnerability.\n\n- CVE-2022-35107: SWFTools commit 772e55a2 was discovered to contain a stack overflow via vfprintf at /stdio-common/vfprintf.c.\n\n- CVE-2022-35111: SWFTools commit 772e55a2 was discovered to contain a stack overflow via __sanitizer::StackDepotNode::hash(__sanitizer::StackTrace const&) at /sanitizer_common/sanitizer_stackdepot.cpp.\n\n- CVE-2022-21716: Twisted is an event-based framework for internet applications, supporting Python 3.6+. Prior to 22.2.0, Twisted SSH client and server implement is able to accept an infinite amount of data for the peer's SSH version identifier. This ends up with a buffer using all the available memory. The attach is a simple as `nc -rv localhost 22 < /dev/zero`. A patch is available in version 22.2.0. There are currently no known workarounds.\n\n- CVE-2022-41288: A vulnerability has been identified in JT2Go (All versions < V14.1.0.6), Teamcenter Visualization V13.2 (All versions < V13.2.0.12), Teamcenter Visualization V13.3 (All versions < V13.3.0.8), Teamcenter Visualization V14.0 (All versions < V14.0.0.4), Teamcenter Visualization V14.1 (All versions < V14.1.0.6). The CGM_NIST_Loader.dll contains stack exhaustion vulnerability when parsing a CGM file. An attacker could leverage this vulnerability to crash the application causing denial of service condition.\n\n- CVE-2022-32559: An issue was discovered in Couchbase Server before 7.0.4. Random HTTP requests lead to leaked metrics.\n\n- CVE-2022-3273: Allocation of Resources Without Limits or Throttling in GitHub repository ikus060/rdiffweb prior to 2.5.0a4.\n\n- CVE-2021-3669: A flaw was found in the Linux kernel. Measuring usage of the shared memory does not scale with large shared memory segment counts which could lead to resource exhaustion and DoS.\n\n- CVE-2021-3759: A memory overflow vulnerability was found in the Linux kernel\u2019s ipc functionality of the memcg subsystem, in the way a user calls the semget function multiple times, creating semaphores. This flaw allows a local user to starve the resources, causing a denial of service. The highest threat from this vulnerability is to system availability.\n\n- CVE-2022-1708: A vulnerability was found in CRI-O that causes memory or disk space exhaustion on the node for anyone with access to the Kube API. The ExecSync request runs commands in a container and logs the output of the command. This output is then read by CRI-O after command execution, and it is read in a manner where the entire file corresponding to the output of the command is read in. Thus, if the output of the command is large it is possible to exhaust the memory or the disk space of the node when CRI-O reads the output of the command. The highest threat from this vulnerability is system availability.\n\n- CVE-2022-20143: In addAutomaticZenRule of ZenModeHelper.java, there is a possible permanent denial of service due to resource exhaustion. This could lead to local denial of service with User execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12LAndroid ID: A-220735360\n\n- CVE-2022-20478: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-241764135\n\n- CVE-2022-20479: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-241764340\n\n- CVE-2022-20480: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-241764350\n\n- CVE-2022-20484: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-242702851\n\n- CVE-2022-20485: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-242702935\n\n- CVE-2022-20486: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-242703118\n\n- CVE-2022-20487: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-242703202\n\n- CVE-2022-21952: A Missing Authentication for Critical Function vulnerability in spacewalk-java of SUSE Manager Server 4.1, SUSE Manager Server 4.2 allows remote attackers to easily exhaust available disk resources leading to DoS. This issue affects: SUSE Manager Server 4.1 spacewalk-java versions prior to 4.1.46. SUSE Manager Server 4.2 spacewalk-java versions prior to 4.2.37. \n\n- CVE-2022-23487: js-libp2p is the official javascript Implementation of libp2p networking stack. Versions older than `v0.38.0` of js-libp2p are vulnerable to targeted resource exhaustion attacks. These attacks target libp2p\u2019s connection, stream, peer, and memory management. An attacker can cause the allocation of large amounts of memory, ultimately leading to the process getting killed by the host\u2019s operating system. While a connection manager tasked with keeping the number of connections within manageable limits has been part of js-libp2p, this component was designed to handle the regular churn of peers, not a targeted resource exhaustion attack. Users are advised to update their js-libp2p dependency to `v0.38.0` or greater. There are no known workarounds for this vulnerability.\n\n- CVE-2022-23492: go-libp2p is the offical libp2p implementation in the Go programming language. Version `0.18.0` and older of go-libp2p are vulnerable to targeted resource exhaustion attacks. These attacks target libp2p\u2019s connection, stream, peer, and memory management. An attacker can cause the allocation of large amounts of memory, ultimately leading to the process getting killed by the host\u2019s operating system. While a connection manager tasked with keeping the number of connections within manageable limits has been part of go-libp2p, this component was designed to handle the regular churn of peers, not a targeted resource exhaustion attack. Users are advised to upgrade their version of go-libp2p to version `0.18.1` or newer. Users unable to upgrade may consult the denial of service (dos) mitigation page for more information on how to incorporate mitigation strategies, monitor your application, and respond to attacks.\n\n- CVE-2022-23913: In Apache ActiveMQ Artemis prior to 2.20.0 or 2.19.1, an attacker could partially disrupt availability (DoS) through uncontrolled resource consumption of memory.\n\n- CVE-2022-2406: The legacy Slack import feature in Mattermost version 6.7.0 and earlier fails to properly limit the sizes of imported files, which allows an authenticated attacker to crash the server by importing large files via the Slack import REST API.\n\n- CVE-2022-28871: A Denial-of-Service (DoS) vulnerability was discovered in F-Secure Atlant whereby the fsicapd component used in certain F-Secure products while scanning larger packages/fuzzed files consume too much memory eventually can crash the scanning engine. The exploit can be triggered remotely by an attacker.\n\n- CVE-2022-31075: KubeEdge is an open source system for extending native containerized application orchestration capabilities to hosts at Edge. Prior to versions 1.11.1, 1.10.2, and 1.9.4, EdgeCore may be susceptible to a DoS attack on CloudHub if an attacker was to send a well-crafted HTTP request to `/edge.crt`. If an attacker can send a well-crafted HTTP request to CloudHub, and that request has a very large body, that request can crash the HTTP service through a memory exhaustion vector. The request body is being read into memory, and a body that is larger than the available memory can lead to a successful attack. Because the request would have to make it through authorization, only authorized users may perform this attack. The consequence of the exhaustion is that CloudHub will be in denial of service. KubeEdge is affected only when users enable the CloudHub module in the file `cloudcore.yaml`. This bug has been fixed in Kubeedge 1.11.1, 1.10.2, and 1.9.4. As a workaround, disable the CloudHub switch in the config file `cloudcore.yaml`.\n\n- CVE-2022-31078: KubeEdge is an open source system for extending native containerized application orchestration capabilities to hosts at Edge. Prior to versions 1.11.1, 1.10.2, and 1.9.4, the CloudCore Router does not impose a limit on the size of responses to requests made by the REST handler. An attacker could use this weakness to make a request that will return an HTTP response with a large body and cause DoS of CloudCore. In the HTTP Handler API, the rest handler makes a request to a pre-specified handle. The handle will return an HTTP response that is then read into memory. The consequence of the exhaustion is that CloudCore will be in a denial of service. Only an authenticated user of the cloud can make an attack. It will be affected only when users enable `router` module in the config file `cloudcore.yaml`. This bug has been fixed in Kubeedge 1.11.1, 1.10.2, and 1.9.4. As a workaround, disable the router switch in the config file `cloudcore.yaml`.\n\n- CVE-2022-31079: KubeEdge is an open source system for extending native containerized application orchestration capabilities to hosts at Edge. Prior to versions 1.11.1, 1.10.2, and 1.9.4, the Cloud Stream server and the Edge Stream server reads the entire message into memory without imposing a limit on the size of this message. An attacker can exploit this by sending a large message to exhaust memory and cause a DoS. The Cloud Stream server and the Edge Stream server are under DoS attack in this case. The consequence of the exhaustion is that the CloudCore and EdgeCore will be in a denial of service. Only an authenticated user can cause this issue. It will be affected only when users enable `cloudStream` module in the config file `cloudcore.yaml` and enable `edgeStream` module in the config file `edgecore.yaml`. This bug has been fixed in Kubeedge 1.11.1, 1.10.2, and 1.9.4. As a workaround, disable cloudStream module in the config file `cloudcore.yaml` and disable edgeStream module in the config file `edgecore.yaml`.\n\n- CVE-2022-3147: Mattermost version 7.0.x and earlier fails to sufficiently limit the in-memory sizes of concurrently uploaded JPEG images, which allows authenticated users to cause resource exhaustion on specific system configurations, resulting in server-side Denial of Service.\n\n- CVE-2022-33749: XAPI open file limit DoS It is possible for an unauthenticated client on the network to cause XAPI to hit its file-descriptor limit. This causes XAPI to be unable to accept new requests for other (trusted) clients, and blocks XAPI from carrying out any tasks that require the opening of file descriptors.\n\n- CVE-2022-3423: Allocation of Resources Without Limits or Throttling in GitHub repository nocodb/nocodb prior to 0.92.0. \n\n- CVE-2022-35915: OpenZeppelin Contracts is a library for secure smart contract development. The target contract of an EIP-165 `supportsInterface` query can cause unbounded gas consumption by returning a lot of data, while it is generally assumed that this operation has a bounded cost. The issue has been fixed in v4.7.2. Users are advised to upgrade. There are no known workarounds for this issue.\n\n- CVE-2022-41932: XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. It's possible to make XWiki create many new schemas and fill them with tables just by using a crafted user identifier in the login form. This may lead to degraded database performance. The problem has been patched in XWiki 13.10.8, 14.6RC1 and 14.4.2. Users are advised to upgrade. There are no known workarounds for this issue.\n\n- CVE-2022-2134: Allocation of Resources Without Limits or Throttling in GitHub repository inventree/inventree prior to 0.8.0.\n\n- CVE-2022-43686: In Concrete CMS (formerly concrete5) below 8.5.10 and between 9.0.0 and 9.1.2, the authTypeConcreteCookieMap table can be filled up causing a denial of service (high load).\n\n- CVE-2022-41725: A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary files. Callers can limit the size of form data with http.MaxBytesReader.\n\nRelated Weaknesses:\n\n- CWE-400 (ChildOf)\n\n- CWE-665 (ChildOf)\n\n- CWE-400 (ChildOf)",
        "type": "Base",
        "search_source": "base_query",
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          }
        }
      },
      {
        "cwe_id": "400",
        "name": "Uncontrolled Resource Consumption",
        "description": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
        "score": 65.67394027427275,
        "matched_text": "CWE-400: Uncontrolled Resource Consumption\n\nType: Class\n\nStatus: Draft\n\nAlternative Terms:\n\nResource Exhaustion\n\nResource Exhaustion\n\nResource Exhaustion\n\nDescription:\n\nThe product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.\n\nExtended Details:\n\n\n\nLimited resources include memory, file system storage, database connection pool entries, and CPU. If an attacker can trigger the allocation of these limited resources, but the number or size of the resources is not controlled, then the attacker could cause a denial of service that consumes all available resources. This would prevent valid users from accessing the product, and it could potentially have an impact on the surrounding environment. For example, a memory exhaustion attack against an application could slow down the application as well as its host operating system.\n\n\nThere are at least three distinct scenarios which can commonly lead to resource exhaustion:\n\n\n  - Lack of throttling for the number of allocated resources\n\n  - Losing all references to a resource before reaching the shutdown stage\n\n  - Not closing/returning a resource after processing\n\nResource exhaustion problems are often result due to an incorrect implementation of the following situations:\n\n  - Error conditions and other exceptional circumstances.\n\n  - Confusion over which part of the program is responsible for releasing the resource.\n\n\n\nReal-World Examples:\n\n- CVE-2022-21668: Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190).\n\n- CVE-2020-7218: Go-based workload orchestrator does not limit resource usage with unauthenticated connections, allowing a DoS by flooding the service\n\n- CVE-2020-3566: Resource exhaustion in distributed OS because of \"insufficient\" IGMP queue management, as exploited in the wild per CISA KEV.\n\n- CVE-2009-2874: Product allows attackers to cause a crash via a large number of connections.\n\n- CVE-2009-1928: Malformed request triggers uncontrolled recursion, leading to stack exhaustion.\n\n- CVE-2009-2858: Chain: memory leak (CWE-404) leads to resource exhaustion.\n\n- CVE-2009-2726: Driver does not use a maximum width when invoking sscanf style functions, causing stack consumption.\n\n- CVE-2009-2540: Large integer value for a length property in an object causes a large amount of memory allocation.\n\n- CVE-2009-2299: Web application firewall consumes excessive memory when an HTTP request contains a large Content-Length value but no POST data.\n\n- CVE-2009-2054: Product allows exhaustion of file descriptors when processing a large number of TCP packets.\n\n- CVE-2008-5180: Communication product allows memory consumption with a large number of SIP requests, which cause many sessions to be created.\n\n- CVE-2008-2121: TCP implementation allows attackers to consume CPU and prevent new connections using a TCP SYN flood attack.\n\n- CVE-2008-2122: Port scan triggers CPU consumption with processes that attempt to read data from closed sockets.\n\n- CVE-2008-1700: Product allows attackers to cause a denial of service via a large number of directives, each of which opens a separate window.\n\n- CVE-2007-4103: Product allows resource exhaustion via a large number of calls that do not complete a 3-way handshake.\n\n- CVE-2006-1173: Mail server does not properly handle deeply nested multipart MIME messages, leading to stack exhaustion.\n\n- CVE-2007-0897: Chain: anti-virus product encounters a malformed file but returns from a function without closing a file descriptor (CWE-775) leading to file descriptor consumption (CWE-400) and failed scans.\n\nTop 25 CWE Examples:\n\n- CVE-2021-22101: Cloud Controller versions prior to 1.118.0 are vulnerable to unauthenticated denial of Service(DoS) vulnerability allowing unauthenticated attackers to cause denial of service by using REST HTTP requests with label_selectors on multiple V3 endpoints by generating an enormous SQL query.\n\n- CVE-2021-1266: A vulnerability in the REST API of Cisco Managed Services Accelerator (MSX) could allow an authenticated, remote attacker to cause a denial of service (DoS) condition on an affected device. The vulnerability is due to the way that the affected software logs certain API requests. An attacker could exploit this vulnerability by sending a flood of crafted API requests to an affected device. A successful exploit could allow the attacker to cause a DoS condition on the affected device.\n\n- CVE-2021-1312: A vulnerability in the system resource management of Cisco Elastic Services Controller (ESC) could allow an unauthenticated, remote attacker to cause a denial of service (DoS) to the health monitor API on an affected device. The vulnerability is due to inadequate provisioning of kernel parameters for the maximum number of TCP connections and SYN backlog. An attacker could exploit this vulnerability by sending a flood of crafted TCP packets to an affected device. A successful exploit could allow the attacker to block TCP listening ports that are used by the health monitor API. This vulnerability only affects customers who use the health monitor API.\n\n- CVE-2021-1378: A vulnerability in the SSH service of the Cisco StarOS operating system could allow an unauthenticated, remote attacker to cause an affected device to stop processing traffic, resulting in a denial of service (DoS) condition. The vulnerability is due to a logic error that may occur under specific traffic conditions. An attacker could exploit this vulnerability by sending a series of crafted packets to an affected device. A successful exploit could allow the attacker to prevent the targeted service from receiving any traffic, which would lead to a DoS condition on the affected device.\n\n- CVE-2021-1489: A vulnerability in filesystem usage management for Cisco Firepower Device Manager (FDM) Software could allow an authenticated, remote attacker to exhaust filesystem resources, resulting in a denial of service (DoS) condition on an affected device. This vulnerability is due to the insufficient management of available filesystem resources. An attacker could exploit this vulnerability by uploading files to the device and exhausting available filesystem resources. A successful exploit could allow the attacker to cause database errors and cause the device to become unresponsive to web-based management. Manual intervention is required to free filesystem resources and return the device to an operational state.\n\n- CVE-2021-1460: A vulnerability in the Cisco IOx Application Framework of Cisco 809 Industrial Integrated Services Routers (Industrial ISRs), Cisco 829 Industrial ISRs, Cisco CGR 1000 Compute Module, and Cisco IC3000 Industrial Compute Gateway could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition on an affected device. This vulnerability is due to insufficient error handling during packet processing. An attacker could exploit this vulnerability by sending a high and sustained rate of crafted TCP traffic to the IOx web server on an affected device. A successful exploit could allow the attacker to cause the IOx web server to stop processing requests, resulting in a DoS condition.\n\n- CVE-2021-0285: An uncontrolled resource consumption vulnerability in Juniper Networks Junos OS on QFX5000 Series and EX4600 Series switches allows an attacker sending large amounts of legitimate traffic destined to the device to cause Interchassis Control Protocol (ICCP) interruptions, leading to an unstable control connection between the Multi-Chassis Link Aggregation Group (MC-LAG) nodes which can in turn lead to traffic loss. Continued receipt of this amount of traffic will create a sustained Denial of Service (DoS) condition. An indication that the system could be impacted by this issue is the following log message: \"DDOS_PROTOCOL_VIOLATION_SET: Warning: Host-bound traffic for protocol/exception LOCALNH:aggregate exceeded its allowed bandwidth at fpc <fpc number> for <n> times, started at <timestamp>\" This issue affects Juniper Networks Junos OS on QFX5000 Series and EX4600 Series: 15.1 versions prior to 15.1R7-S9; 17.3 versions prior to 17.3R3-S11; 17.4 versions prior to 17.4R2-S13, 17.4R3-S5; 18.3 versions prior to 18.3R3-S5; 18.4 versions prior to 18.4R2-S8, 18.4R3-S7; 19.1 versions prior to 19.1R3-S5; 19.2 versions prior to 19.2R1-S6, 19.2R3-S2; 19.3 versions prior to 19.3R2-S6, 19.3R3-S2; 19.4 versions prior to 19.4R1-S4, 19.4R2-S4, 19.4R3-S2; 20.1 versions prior to 20.1R2-S2, 20.1R3; 20.2 versions prior to 20.2R2-S3, 20.2R3; 20.3 versions prior to 20.3R2; 20.4 versions prior to 20.4R1-S1, 20.4R2.\n\n- CVE-2021-22119: Spring Security versions 5.5.x prior to 5.5.1, 5.4.x prior to 5.4.7, 5.3.x prior to 5.3.10 and 5.2.x prior to 5.2.11 are susceptible to a Denial-of-Service (DoS) attack via the initiation of the Authorization Request in an OAuth 2.0 Client Web and WebFlux application. A malicious user or attacker can send multiple requests initiating the Authorization Request for the Authorization Code Grant, which has the potential of exhausting system resources using a single session or multiple sessions.\n\n- CVE-2021-43173: In NLnet Labs Routinator prior to 0.10.2, a validation run can be delayed significantly by an RRDP repository by not answering but slowly drip-feeding bytes to keep the connection alive. This can be used to effectively stall validation. While Routinator has a configurable time-out value for RRDP connections, this time-out was only applied to individual read or write operations rather than the complete request. Thus, if an RRDP repository sends a little bit of data before that time-out expired, it can continuously extend the time it takes for the request to finish. Since validation will only continue once the update of an RRDP repository has concluded, this delay will cause validation to stall, leading to Routinator continuing to serve the old data set or, if in the initial validation run directly after starting, never serve any data at all.\n\n- CVE-2020-12291: Uncontrolled resource consumption in some Intel(R) Thunderbolt(TM) controllers may allow an authenticated user to potentially enable denial of service via local access.\n\n- CVE-2020-12296: Uncontrolled resource consumption in some Intel(R) Thunderbolt(TM) controllers may allow an authenticated user to potentially enable denial of service via local access.\n\n- CVE-2020-1702: A malicious container image can consume an unbounded amount of memory when being pulled to a container runtime host, such as Red Hat Enterprise Linux using podman, or OpenShift Container Platform. An attacker can use this flaw to trick a user, with privileges to pull container images, into crashing the process responsible for pulling the image. This flaw affects containers-image versions before 5.2.0.\n\n- CVE-2020-1750: A flaw was found in the machine-config-operator that causes an OpenShift node to become unresponsive when a container consumes a large amount of memory. An attacker could use this flaw to deny access to schedule new pods in the OpenShift cluster. This was fixed in openshift/machine-config-operator 4.4.3, openshift/machine-config-operator 4.3.25, openshift/machine-config-operator 4.2.36.\n\n- CVE-2020-20217: Mikrotik RouterOs before 6.47 (stable tree) suffers from an uncontrolled resource consumption vulnerability in the /nova/bin/route process. An authenticated remote attacker can cause a Denial of Service due to overloading the systems CPU.\n\n- CVE-2020-20221: Mikrotik RouterOs before 6.44.6 (long-term tree) suffers from an uncontrolled resource consumption vulnerability in the /nova/bin/cerm process. An authenticated remote attacker can cause a Denial of Service due to overloading the systems CPU.\n\n- CVE-2020-20230: Mikrotik RouterOs before stable 6.47 suffers from an uncontrolled resource consumption in the sshd process. An authenticated remote attacker can cause a Denial of Service due to overloading the systems CPU.\n\n- CVE-2020-20248: Mikrotik RouterOs before stable 6.47 suffers from an uncontrolled resource consumption in the memtest process. An authenticated remote attacker can cause a Denial of Service due to overloading the systems CPU.\n\n- CVE-2020-25242: A vulnerability has been identified in SIMATIC NET CP 343-1 Advanced (incl. SIPLUS variants) (All versions), SIMATIC NET CP 343-1 Lean (incl. SIPLUS variants) (All versions), SIMATIC NET CP 343-1 Standard (incl. SIPLUS variants) (All versions). Specially crafted packets sent to TCP port 102 could cause a Denial-of-Service condition on the affected devices. A cold restart might be necessary in order to recover.\n\n- CVE-2020-28944: OX Guard 2.10.4 and earlier allows a Denial of Service via a WKS server that responds slowly or with a large amount of data.\n\n- CVE-2020-35498: A vulnerability was found in openvswitch. A limitation in the implementation of userspace packet parsing can allow a malicious user to send a specially crafted packet causing the resulting megaflow in the kernel to be too wide, potentially causing a denial of service. The highest threat from this vulnerability is to system availability.\n\n- CVE-2020-35510: A flaw was found in jboss-remoting in versions before 5.0.20.SP1-redhat-00001. A malicious attacker could cause threads to hold up forever in the EJB server by writing a sequence of bytes corresponding to the expected messages of a successful EJB client request, but omitting the ACK messages, or just tamper with jboss-remoting code, deleting the lines that send the ACK message from the EJB client code resulting in a denial of service. The highest threat from this vulnerability is to system availability.\n\n- CVE-2020-36332: A flaw was found in libwebp in versions before 1.0.1. When reading a file libwebp allocates an excessive amount of memory. The highest threat from this vulnerability is to the service availability.\n\n- CVE-2020-8299: Citrix ADC and Citrix/NetScaler Gateway 13.0 before 13.0-76.29, 12.1-61.18, 11.1-65.20, Citrix ADC 12.1-FIPS before 12.1-55.238, and Citrix SD-WAN WANOP Edition before 11.4.0, 11.3.2, 11.3.1a, 11.2.3a, 11.1.2c, 10.2.9a suffers from uncontrolled resource consumption by way of a network-based denial-of-service from within the same Layer 2 network segment. Note that the attacker must be in the same Layer 2 network segment as the vulnerable appliance.\n\n- CVE-2020-9000: An issue was discovered in iPortalis iCS 7.1.13.0. Attackers can send a sequence of requests to rapidly cause .NET Input Validation errors. This increases the size of the log file on the remote server until memory is exhausted, therefore consuming the maximum amount of resources (triggering a denial of service condition).\n\n- CVE-2021-0008: Uncontrolled resource consumption in firmware for Intel(R) Ethernet Adapters 800 Series Controllers and associated adapters before version 1.5.3.0 may allow privileged user to potentially enable denial of service via local access.\n\n- CVE-2021-0180: Uncontrolled resource consumption in the Intel(R) HAXM software before version 7.6.6 may allow an unauthenticated user to potentially enable privilege escalation via local access.\n\n- CVE-2021-0182: Uncontrolled resource consumption in the Intel(R) HAXM software before version 7.6.6 may allow an unauthenticated user to potentially enable information disclosure via local access.\n\n- CVE-2021-0229: An uncontrolled resource consumption vulnerability in Message Queue Telemetry Transport (MQTT) server of Juniper Networks Junos OS allows an attacker to cause MQTT server to crash and restart leading to a Denial of Service (DoS) by sending a stream of specific packets. A Juniper Extension Toolkit (JET) application designed with a listening port uses the Message Queue Telemetry Transport (MQTT) protocol to connect to a mosquitto broker that is running on Junos OS to subscribe for events. Continued receipt and processing of this packet will create a sustained Denial of Service (DoS) condition. This issue affects Juniper Networks Junos OS: 16.1R1 and later versions prior to 17.3R3-S11; 17.4 versions prior to 17.4R2-S13, 17.4R3-S4; 18.1 versions prior to 18.1R3-S12; 18.2 versions prior to 18.2R2-S8, 18.2R3-S7; 18.3 versions prior to 18.3R3-S4; 18.4 versions prior to 18.4R1-S8, 18.4R2-S7, 18.4R3-S7; 19.1 versions prior to 19.1R3-S5; 19.2 versions prior to 19.2R1-S6, 19.2R3-S2; 19.3 versions prior to 19.3R3-S2; 19.4 versions prior to 19.4R2-S4, 19.4R3-S2; 20.1 versions prior to 20.1R2-S1, 20.1R3; 20.2 versions prior to 20.2R2-S2, 20.2R3; 20.3 versions prior to 20.3R1-S1, 20.3R2. This issue does not affect Juniper Networks Junos OS versions prior to 16.1R1.\n\n- CVE-2021-0238: When a MX Series is configured as a Broadband Network Gateway (BNG) based on Layer 2 Tunneling Protocol (L2TP), executing certain CLI command may cause the system to run out of disk space, excessive disk usage may cause other complications. An administrator can use the following CLI command to monitor the available disk space: user@device> show system storage Filesystem Size Used Avail Capacity Mounted on /dev/gpt/junos 19G 18G 147M 99% /.mount <<<<< running out of space tmpfs 21G 16K 21G 0% /.mount/tmp tmpfs 5.3G 1.7M 5.3G 0% /.mount/mfs This issue affects Juniper Networks Junos OS on MX Series: 17.3R1 and later versions prior to 17.4R3-S5, 18.1 versions prior to 18.1R3-S13, 18.2 versions prior to 18.2R3-S7; 18.3 versions prior to 18.3R3-S4; 18.4 versions prior to 18.4R3-S7; 19.1 versions prior to 19.1R3-S4; 19.2 versions prior to 19.2R1-S6, 19.2R3-S2; 19.3 versions prior to 19.3R3-S2; 19.4 versions prior to 19.4R2-S4, 19.4R3-S2; 20.1 versions prior to 20.1R3; 20.2 versions prior to 20.2R2-S3, 20.2R3; 20.3 versions prior to 20.3R2; 20.4 versions prior to 20.4R1-S1, 20.4R2; This issue does not affect Juniper Networks Junos OS versions prior to 17.3R1.\n\n- CVE-2021-0292: An Uncontrolled Resource Consumption vulnerability in the ARP daemon (arpd) and Network Discovery Protocol (ndp) process of Juniper Networks Junos OS Evolved allows a malicious attacker on the local network to consume memory resources, ultimately resulting in a Denial of Service (DoS) condition. Link-layer functions such as IPv4 and/or IPv6 address resolution may be impacted, leading to traffic loss. The processes do not recover on their own and must be manually restarted. Changes in memory usage can be monitored using the following shell commands (header shown for clarity): user@router:/var/log# ps aux | grep arpd USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 31418 59.0 0.7 *5702564* 247952 ? xxx /usr/sbin/arpd --app-name arpd -I object_select --shared-objects-mode 3 user@router:/var/log# ps aux | grep arpd USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 31418 49.1 1.0 *5813156* 351184 ? xxx /usr/sbin/arpd --app-name arpd -I object_select --shared-objects-mode 3 Memory usage can be monitored for the ndp process in a similar fashion: user@router:/var/log# ps aux | grep ndp USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 14935 0.0 0.1 *5614052* 27256 ? Ssl Jun15 0:17 /usr/sbin/ndp -I no_tab_chk,object_select --app-name ndp --shared-obje user@router:/var/log# ps aux | grep ndp USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND root 14935 0.0 0.1 *5725164* 27256 ? Ssl Jun15 0:17 /usr/sbin/ndp -I no_tab_chk,object_select --app-name ndp --shared-obje This issue affects Juniper Networks Junos OS Evolved: 19.4 versions prior to 19.4R2-S3-EVO; 20.1 versions prior to 20.1R2-S4-EVO; all versions of 20.2-EVO. This issue does not affect Juniper Networks Junos OS Evolved versions prior to 19.4R2-EVO.\n\n- CVE-2021-20591: Uncontrolled Resource Consumption vulnerability in Mitsubishi Electric MELSEC iQ-R series CPU modules (R00/01/02CPU all versions, R04/08/16/32/120(EN)CPU all versions, R08/16/32/120SFCPU all versions, R08/16/32/120PCPU all versions, R08/16/32/120PSFCPU all versions) allows a remote unauthenticated attacker to prevent legitimate clients from connecting to the MELSOFT transmission port (TCP/IP) by not closing a connection properly, which may lead to a denial of service (DoS) condition.\n\n- CVE-2021-20600: Uncontrolled resource consumption in Mitsubishi Electric MELSEC iQ-R series C Controller Module R12CCPU-V Firmware Versions \"16\" and prior allows a remote unauthenticated attacker to cause a denial-of-service (DoS) condition by sending a large number of packets in a short time while the module starting up. System reset is required for recovery.\n\n- CVE-2021-20609: Uncontrolled Resource Consumption vulnerability in Mitsubishi Electric MELSEC iQ-R Series R00/01/02CPU, MELSEC iQ-R Series R04/08/16/32/120(EN)CPU, MELSEC iQ-R Series R08/16/32/120SFCPU, MELSEC iQ-R Series R08/16/32/120PCPU, MELSEC iQ-R Series R08/16/32/120PSFCPU, MELSEC iQ-R Series R16/32/64MTCPU, MELSEC iQ-R Series R12CCPU-V, MELSEC Q Series Q03UDECPU, MELSEC Q Series Q04/06/10/13/20/26/50/100UDEHCPU, MELSEC Q Series Q03/04/06/13/26UDVCPU, MELSEC Q Series Q04/06/13/26UDPVCPU, MELSEC Q Series Q12DCCPU-V, MELSEC Q Series Q24DHCCPU-V(G), MELSEC Q Series Q24/26DHCCPU-LS, MELSEC Q Series MR-MQ100, MELSEC Q Series Q172/173DCPU-S1, MELSEC Q Series Q172/173DSCPU, MELSEC Q Series Q170MCPU, MELSEC Q Series Q170MSCPU(-S1), MELSEC L Series L02/06/26CPU(-P), MELSEC L Series L26CPU-(P)BT and MELIPC Series MI5122-VW allows a remote unauthenticated attacker to cause a denial-of-service (DoS) condition by sending specially crafted packets. System reset is required for recovery.\n\n- CVE-2021-20718: mod_auth_openidc 2.4.0 to 2.4.7 allows a remote attacker to cause a denial-of-service (DoS) condition via unspecified vectors.\n\n- CVE-2021-30464: OMICRON StationGuard before 1.10 allows remote attackers to cause a denial of service (connectivity outage) via crafted tcp/20499 packets to the CTRL Ethernet port.\n\n- CVE-2021-30504: In JetBrains IntelliJ IDEA before 2021.1, DoS was possible because of unbounded resource allocation.\n\n- CVE-2021-31340: A vulnerability has been identified in SIMATIC RF166C (All versions > V1.1 and < V1.3.2), SIMATIC RF185C (All versions > V1.1 and < V1.3.2), SIMATIC RF186C (All versions > V1.1 and < V1.3.2), SIMATIC RF186CI (All versions > V1.1 and < V1.3.2), SIMATIC RF188C (All versions > V1.1 and < V1.3.2), SIMATIC RF188CI (All versions > V1.1 and < V1.3.2), SIMATIC RF360R (All versions < V2.0), SIMATIC Reader RF610R CMIIT (All versions > V3.0 < V4.0), SIMATIC Reader RF610R ETSI (All versions > V3.0 < V4.0), SIMATIC Reader RF610R FCC (All versions > V3.0 < V4.0), SIMATIC Reader RF615R CMIIT (All versions > V3.0 < V4.0), SIMATIC Reader RF615R ETSI (All versions > V3.0 < V4.0), SIMATIC Reader RF615R FCC (All versions > V3.0 < V4.0), SIMATIC Reader RF650R ARIB (All versions > V3.0 < V4.0), SIMATIC Reader RF650R CMIIT (All versions > V3.0 < V4.0), SIMATIC Reader RF650R ETSI (All versions > V3.0 < V4.0), SIMATIC Reader RF650R FCC (All versions > V3.0 < V4.0), SIMATIC Reader RF680R ARIB (All versions > V3.0 < V4.0), SIMATIC Reader RF680R CMIIT (All versions > V3.0 < V4.0), SIMATIC Reader RF680R ETSI (All versions > V3.0 < V4.0), SIMATIC Reader RF680R FCC (All versions > V3.0 < V4.0), SIMATIC Reader RF685R ARIB (All versions > V3.0 < V4.0), SIMATIC Reader RF685R CMIIT (All versions > V3.0 < V4.0), SIMATIC Reader RF685R ETSI (All versions > V3.0 < V4.0), SIMATIC Reader RF685R FCC (All versions > V3.0 < V4.0). Affected devices do not properly handle large numbers of incoming connections. An attacker may leverage this to cause a Denial-of-Service situation.\n\n- CVE-2021-31365: An Uncontrolled Resource Consumption vulnerability in Juniper Networks Junos OS on EX2300, EX3400 and EX4300 Series platforms allows an adjacent attacker sending a stream of layer 2 frames will trigger an Aggregated Ethernet (AE) interface to go down and thereby causing a Denial of Service (DoS). By continuously sending a stream of specific layer 2 frames an attacker will sustain the Denial of Service (DoS) condition. This issue affects: Juniper Networks Junos OS EX4300 Series All versions prior to 15.1R7-S7; 16.1 versions prior to 16.1R7-S8; 17.1 versions prior to 17.1R2-S12; 17.2 versions prior to 17.2R3-S4; 17.3 versions prior to 17.3R3-S8; 17.4 versions prior to 17.4R2-S10, 17.4R3-S2; 18.1 versions prior to 18.1R3-S10; 18.2 versions prior to 18.2R2-S7, 18.2R3-S3; 18.3 versions prior to 18.3R2-S4, 18.3R3-S2; 18.4 versions prior to 18.4R1-S7, 18.4R2-S4, 18.4R3-S1; 19.1 versions prior to 19.1R1-S5, 19.1R2-S1, 19.1R3; 19.2 versions prior to 19.2R1-S5, 19.2R2; 19.3 versions prior to 19.3R2-S2, 19.3R3; 19.4 versions prior to 19.4R1-S2, 19.4R2. Juniper Networks Junos OS EX3400 and EX4300-MP Series All versions prior to 18.1R3-S12; 18.2 versions prior to 18.2R3-S7; 18.3 versions prior to 18.3R3-S4; 18.4 versions prior to 18.4R2-S9, 18.4R3-S7; 19.1 versions prior to 19.1R2-S3, 19.1R3-S4; 19.2 versions prior to 19.2R3-S1; 19.3 versions prior to 19.3R3-S1; 19.4 versions prior to 19.4R3-S1; 20.1 versions prior to 20.1R3; 20.2 versions prior to 20.2R3; 20.3 versions prior to 20.3R2. Juniper Networks Junos OS EX2300 Series All versions prior to 18.3R3-S5; 18.4 versions prior to 18.4R2-S9, 18.4R3-S9; 19.1 versions prior to 19.1R2-S3, 19.1R3-S6; 19.2 versions prior to 19.2R1-S7, 19.2R3-S3; 19.3 versions prior to 19.3R2-S7, 19.3R3-S3; 19.4 versions prior to 19.4R3-S5; 20.1 versions prior to 20.1R2-S2, 20.1R3-S1; 20.2 versions prior to 20.2R3-S2; 20.3 versions prior to 20.3R3-S1; 20.4 versions prior to 20.4R2-S1, 20.4R3; 21.1 versions prior to 21.1R2.\n\n- CVE-2021-31368: An Uncontrolled Resource Consumption vulnerability in the kernel of Juniper Networks JUNOS OS allows an unauthenticated network based attacker to cause 100% CPU load and the device to become unresponsive by sending a flood of traffic to the out-of-band management ethernet port. Continued receipted of a flood will create a sustained Denial of Service (DoS) condition. Once the flood subsides the system will recover by itself. An indication that the system is affected by this issue would be that kernel and netisr process are shown to be using a lot of CPU cycles like in the following example output: user@host> show system processes extensive ... PID USERNAME PRI NICE SIZE RES STATE C TIME WCPU COMMAND 16 root -72 - 0K 304K WAIT 1 839:40 88.96% intr{swi1: netisr 0} 0 root 97 - 0K 160K RUN 1 732:43 87.99% kernel{bcm560xgmac0 que} This issue affects Juniper Networks JUNOS OS on EX2300 Series, EX3400 Series, and ACX710: All versions prior to 18.1R3-S13; 18.2 versions prior to 18.2R3-S8; 18.3 versions prior to 18.3R3-S5; 18.4 versions prior to 18.4R2-S8, 18.4R3-S9; 19.1 versions prior to 19.1R3-S5; 19.2 versions prior to 19.2R1-S7, 19.2R3-S3; 19.3 versions prior to 19.3R2-S6, 19.3R3-S2; 19.4 versions prior to 19.4R1-S4, 19.4R3-S3; 20.1 versions prior to 20.1R2-S2, 20.1R3; 20.2 versions prior to 20.2R3; 20.3 versions prior to 20.3R2-S1, 20.3R3; 20.4 versions prior to 20.4R2.\n\n- CVE-2021-32012: SheetJS and SheetJS Pro through 0.16.9 allows attackers to cause a denial of service (memory consumption) via a crafted .xlsx document that is mishandled when read by xlsx.js (issue 1 of 2).\n\n- CVE-2021-32013: SheetJS and SheetJS Pro through 0.16.9 allows attackers to cause a denial of service (memory consumption) via a crafted .xlsx document that is mishandled when read by xlsx.js (issue 2 of 2).\n\n- CVE-2021-32014: SheetJS and SheetJS Pro through 0.16.9 allows attackers to cause a denial of service (CPU consumption) via a crafted .xlsx document that is mishandled when read by xlsx.js.\n\n- CVE-2021-32455: SITEL CAP/PRX firmware version 5.2.01, allows an attacker with access to the device\u00b4s network to cause a denial of service condition on the device. An attacker could exploit this vulnerability by sending HTTP requests massively.\n\n- CVE-2021-32595: Multiple uncontrolled resource consumption vulnerabilities in the web interface of FortiPortal before 6.0.6 may allow a single low-privileged user to induce a denial of service via multiple HTTP requests.\n\n- CVE-2021-32722: GlobalNewFiles is a mediawiki extension. Versions prior to 48be7adb70568e20e961ea1cb70904454a671b1d are affected by an uncontrolled resource consumption vulnerability. A large amount of page moves within a short space of time could overwhelm Database servers due to improper handling of load balancing and a lack of an appropriate index. As a workaround, one may avoid use of the extension unless additional rate limit at the MediaWiki level or via PoolCounter / MySQL is enabled. A patch is available in version 48be7adb70568e20e961ea1cb70904454a671b1d.\n\n- CVE-2021-32918: An issue was discovered in Prosody before 0.11.9. Default settings are susceptible to remote unauthenticated denial-of-service (DoS) attacks via memory exhaustion when running under Lua 5.2 or Lua 5.3.\n\n- CVE-2021-33073: Uncontrolled resource consumption in the Intel(R) Distribution of OpenVINO\u00e2\u201e\u00a2 Toolkit before version 2021.4 may allow an unauthenticated user to potentially enable denial of service via local access.\n\n- CVE-2021-33818: An issue was discovered in UniFi Protect G3 FLEX Camera Version UVC.v4.30.0.67. Attackers can use slowhttptest tool to send incomplete HTTP request, which could make server keep waiting for the packet to finish the connection, until its resource exhausted. Then the web server is denial-of-service.\n\n- CVE-2021-33822: An issue was discovered on 4GEE ROUTER HH70VB Version HH70_E1_02.00_22. Attackers can use slowhttptest tool to send incomplete HTTP request, which could make server keep waiting for the packet to finish the connection, until its resource exhausted. Then the web server is denial-of-service.\n\n- CVE-2021-33824: An issue was discovered on MOXA Mgate MB3180 Version 2.1 Build 18113012. Attackers can use slowhttptest tool to send incomplete HTTP request, which could make server keep waiting for the packet to finish the connection, until its resource exhausted. Then the web server is denial-of-service.\n\n- CVE-2021-36187: A uncontrolled resource consumption in Fortinet FortiWeb version 6.4.0, version 6.3.15 and below, 6.2.5 and below allows attacker to cause a denial of service for webserver daemon via crafted HTTP requests\n\n- CVE-2021-3909: OctoRPKI does not limit the length of a connection, allowing for a slowloris DOS attack to take place which makes OctoRPKI wait forever. Specifically, the repository that OctoRPKI sends HTTP requests to will keep the connection open for a day before a response is returned, but does keep drip feeding new bytes to keep the connection alive.\n\n- CVE-2021-39171: Passport-SAML is a SAML 2.0 authentication provider for Passport, the Node.js authentication library. Prior to version 3.1.0, a malicious SAML payload can require transforms that consume significant system resources to process, thereby resulting in reduced or denied service. This would be an effective way to perform a denial-of-service attack. This has been resolved in version 3.1.0. The resolution is to limit the number of allowable transforms to 2.\n\n- CVE-2021-21271: Tendermint Core is an open source Byzantine Fault Tolerant (BFT) middleware that takes a state transition machine - written in any programming language - and securely replicates it on many machines. Tendermint Core v0.34.0 introduced a new way of handling evidence of misbehavior. As part of this, we added a new Timestamp field to Evidence structs. This timestamp would be calculated using the same algorithm that is used when a block is created and proposed. (This algorithm relies on the timestamp of the last commit from this specific block.) In Tendermint Core v0.34.0-v0.34.2, the consensus reactor is responsible for forming DuplicateVoteEvidence whenever double signs are observed. However, the current block is still \u201cin flight\u201d when it is being formed by the consensus reactor. It hasn\u2019t been finalized through network consensus yet. This means that different nodes in the network may observe different \u201clast commits\u201d when assigning a timestamp to DuplicateVoteEvidence. In turn, different nodes could form DuplicateVoteEvidence objects at the same height but with different timestamps. One DuplicateVoteEvidence object (with one timestamp) will then eventually get finalized in the block, but this means that any DuplicateVoteEvidence with a different timestamp is considered invalid. Any node that formed invalid DuplicateVoteEvidence will continue to propose invalid evidence; its peers may see this, and choose to disconnect from this node. This bug means that double signs are DoS vectors in Tendermint Core v0.34.0-v0.34.2. Tendermint Core v0.34.3 is a security release which fixes this bug. As of v0.34.3, DuplicateVoteEvidence is no longer formed by the consensus reactor; rather, the consensus reactor passes the Votes themselves into the EvidencePool, which is now responsible for forming DuplicateVoteEvidence. The EvidencePool has timestamp info that should be consistent across the network, which means that DuplicateVoteEvidence formed in this reactor should have consistent timestamps. This release changes the API between the consensus and evidence reactors.\n\n- CVE-2021-21328: Vapor is a web framework for Swift. In Vapor before version 4.40.1, there is a DoS attack against anyone who Bootstraps a metrics backend for their Vapor app. The following is the attack vector: 1. send unlimited requests against a vapor instance with different paths. this will create unlimited counters and timers, which will eventually drain the system. 2. downstream services might suffer from this attack as well by being spammed with error paths. This has been patched in 4.40.1. The `DefaultResponder` will rewrite any undefined route paths for to `vapor_route_undefined` to avoid unlimited counters.\n\n- CVE-2021-21369: Hyperledger Besu is an open-source, MainNet compatible, Ethereum client written in Java. In Besu before version 1.5.1 there is a denial-of-service vulnerability involving the HTTP JSON-RPC API service. If username and password authentication is enabled for the HTTP JSON-RPC API service, then prior to making any requests to an API endpoint the requestor must use the login endpoint to obtain a JSON web token (JWT) using their credentials. A single user can readily overload the login endpoint with invalid requests (incorrect password). As the supplied password is checked for validity on the main vertx event loop and takes a relatively long time this can cause the processing of other valid requests to fail. A valid username is required for this vulnerability to be exposed. This has been fixed in version 1.5.1.\n\n- CVE-2021-21529: Dell System Update (DSU) 1.9 and earlier versions contain a denial of service vulnerability. A local authenticated malicious user with low privileges may potentially exploit this vulnerability to cause the system to run out of memory by running multiple instances of the vulnerable application.\n\n- CVE-2021-21728: A ZTE product has a configuration error vulnerability. Because a certain port is open by default, an attacker can consume system processing resources by flushing a large number of packets to the port, and successfully exploiting this vulnerability could reduce system processing capabilities. This affects: ZXA10 C300M all versions up to V4.3P8.\n\n- CVE-2021-22010: The vCenter Server contains a denial-of-service vulnerability in VPXD service. A malicious actor with network access to port 443 on vCenter Server may exploit this issue to create a denial of service condition due to excessive memory consumption by VPXD service.\n\n- CVE-2021-22124: An uncontrolled resource consumption (denial of service) vulnerability in the login modules of FortiSandbox 3.2.0 through 3.2.2, 3.1.0 through 3.1.4, and 3.0.0 through 3.0.6; and FortiAuthenticator before 6.0.6 may allow an unauthenticated attacker to bring the device into an unresponsive state via specifically-crafted long request parameters.\n\n- CVE-2021-22139: Kibana versions before 7.12.1 contain a denial of service vulnerability was found in the webhook actions due to a lack of timeout or a limit on the request size. An attacker with permissions to create webhook actions could drain the Kibana host connection pool, making Kibana unavailable for all other users.\n\n- CVE-2021-22166: An attacker could cause a Prometheus denial of service in GitLab 13.7+ by sending an HTTP request with a malformed method\n\n- CVE-2021-22177: Potential DoS was identified in gitlab-shell in GitLab CE/EE version 12.6.0 or above, which allows an attacker to spike the server resource utilization via gitlab-shell command.\n\n- CVE-2021-22181: A denial of service vulnerability in GitLab CE/EE affecting all versions since 11.8 allows an attacker to create a recursive pipeline relationship and exhaust resources.\n\n- CVE-2021-22187: An issue has been discovered in GitLab affecting all versions of Gitlab EE/CE before 13.6.7. A potential resource exhaustion issue that allowed running or pending jobs to continue even after project was deleted.\n\n- CVE-2021-22216: A denial of service vulnerability in all versions of GitLab CE/EE before 13.12.2, 13.11.5 or 13.10.5 allows an attacker to cause uncontrolled resource consumption with a very long issue or merge request description\n\n- CVE-2021-22965: A vulnerability in Pulse Connect Secure before 9.1R12.1 could allow an unauthenticated administrator to causes a denial of service when a malformed request is sent to the device.\n\n- CVE-2021-22985: On BIG-IP APM version 16.0.x before 16.0.1.1, under certain conditions, when processing VPN traffic with APM, TMM consumes excessive memory. A malicious, authenticated VPN user may abuse this to perform a DoS attack against the APM. Note: Software versions which have reached End of Software Development (EoSD) are not evaluated.\n\n- CVE-2021-23011: On versions 16.0.x before 16.0.1.1, 15.1.x before 15.1.3, 14.1.x before 14.1.4, 13.1.x before 13.1.4, 12.1.x before 12.1.6, and 11.6.x before 11.6.5.3, when the BIG-IP system is buffering packet fragments for reassembly, the Traffic Management Microkernel (TMM) may consume an excessive amount of resources, eventually leading to a restart and failover event. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2021-23042: On BIG-IP version 16.0.x before 16.0.1.2, 15.1.x before 15.1.3, 14.1.x before 14.1.4, 13.1.x before 13.1.4, and 12.1.x before 12.1.6, when an HTTP profile is configured on a virtual server, undisclosed requests can cause a significant increase in system resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2021-23047: On version 16.x before 16.1.0, 15.1.x before 15.1.3.1, 14.1.x before 14.1.4.3, and all versions of 13.1.x, 12.1.x and 11.6.x, when BIG-IP APM performs Online Certificate Status Protocol (OCSP) verification of a certificate that contains Authority Information Access (AIA), undisclosed requests may cause an increase in memory use. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2021-23049: On BIG-IP version 16.0.x before 16.0.1.2 and 15.1.x before 15.1.3, when the iRules RESOLVER::summarize command is used on a virtual server, undisclosed requests can cause an increase in Traffic Management Microkernel (TMM) memory utilization resulting in an out-of-memory condition and a denial-of-service (DoS). Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2021-23852: An authenticated attacker with administrator rights Bosch IP cameras can call an URL with an invalid parameter that causes the camera to become unresponsive for a few seconds and cause a Denial of Service (DoS).\n\n- CVE-2021-25252: Trend Micro's Virus Scan API (VSAPI) and Advanced Threat Scan Engine (ATSE) - are vulnerable to a memory exhaustion vulnerability that may lead to denial-of-service or system freeze if exploited by an attacker using a specially crafted file.\n\n- CVE-2021-25659: A vulnerability has been identified in Automation License Manager 5 (All versions), Automation License Manager 6 (All versions < V6.0 SP9 Update 2). Sending specially crafted packets to port 4410/tcp of an affected system could lead to extensive memory being consumed and as such could cause a denial-of-service preventing legitimate users from using the system.\n\n- CVE-2021-25909: ZIV Automation 4CCT-EA6-334126BF firmware version 3.23.80.27.36371, allows an unauthenticated, remote attacker to cause a denial of service condition on the device. An attacker could exploit this vulnerability by sending specific packets to the port 7919.\n\n- CVE-2020-15166: In ZeroMQ before version 4.3.3, there is a denial-of-service vulnerability. Users with TCP transport public endpoints, even with CURVE/ZAP enabled, are impacted. If a raw TCP socket is opened and connected to an endpoint that is fully configured with CURVE/ZAP, legitimate clients will not be able to exchange any message. Handshakes complete successfully, and messages are delivered to the library, but the server application never receives them. This is patched in version 4.3.3.\n\n- CVE-2020-21573: An issue was discoverered in in abhijitnathwani image-processing v0.1.0, allows local attackers to cause a denial of service via a crafted image file.\n\n- CVE-2020-26257: Matrix is an ecosystem for open federated Instant Messaging and VoIP. Synapse is a reference \"homeserver\" implementation of Matrix. A malicious or poorly-implemented homeserver can inject malformed events into a room by specifying a different room id in the path of a `/send_join`, `/send_leave`, `/invite` or `/exchange_third_party_invite` request. This can lead to a denial of service in which future events will not be correctly sent to other servers over federation. This affects any server which accepts federation requests from untrusted servers. The Matrix Synapse reference implementation before version 1.23.1 the implementation is vulnerable to this injection attack. Issue is fixed in version 1.23.1. As a workaround homeserver administrators could limit access to the federation API to trusted servers (for example via `federation_domain_whitelist`).\n\n- CVE-2021-28089: Tor before 0.4.5.7 allows a remote participant in the Tor directory protocol to exhaust CPU resources on a target, aka TROVE-2021-001.\n\n- CVE-2021-22100: In cloud foundry CAPI versions prior to 1.122, a denial-of-service attack in which a developer can push a service broker that (accidentally or maliciously) causes CC instances to timeout and fail is possible. An attacker can leverage this vulnerability to cause an inability for anyone to push or manage apps.\n\n- CVE-2021-22955: A unauthenticated denial of service vulnerability exists in Citrix ADC <13.0-83.27, <12.1-63.22 and 11.1-65.23 when configured as a VPN (Gateway) or AAA virtual server could allow an attacker to cause a temporary disruption of the Management GUI, Nitro API, and RPC communication.\n\n- CVE-2021-22956: An uncontrolled resource consumption vulnerability exists in Citrix ADC <13.0-83.27, <12.1-63.22 and 11.1-65.23 that could allow an attacker with access to NSIP or SNIP with management interface access to cause a temporary disruption of the Management GUI, Nitro API, and RPC communication.\n\n- CVE-2021-23236: Requests may be used to interrupt the normal operation of the device. When exploited, Fresenius Kabi Agilia Link+ version 3.0 must be rebooted via a hard reset triggered by pressing a button on the rack system.\n\n- CVE-2021-30301: Possible denial of service due to out of memory while processing RRC and NAS OTA message in Snapdragon Auto, Snapdragon Industrial IOT, Snapdragon Mobile\n\n- CVE-2021-37061: There is a Uncontrolled Resource Consumption vulnerability in Huawei Smartphone.Successful exploitation of this vulnerability may lead to Screen projection application denial of service.\n\n- CVE-2021-37865: Mattermost 6.2 and earlier fails to sufficiently process a specifically crafted GIF file when it is uploaded while drafting a post, which allows authenticated users to cause resource exhaustion while processing the file, resulting in server-side Denial of Service.\n\n- CVE-2021-39939: An uncontrolled resource consumption vulnerability in GitLab Runner affecting all versions starting from 13.7 before 14.3.6, all versions starting from 14.4 before 14.4.4, all versions starting from 14.5 before 14.5.2, allows an attacker triggering a job with a specially crafted docker image to exhaust resources on runner manager\n\n- CVE-2021-39942: A denial of service vulnerability in GitLab CE/EE affecting all versions starting from 12.0 before 14.3.6, all versions starting from 14.4 before 14.4.4, all versions starting from 14.5 before 14.5.2, allows low-privileged users to bypass file size limits in the NPM package repository to potentially cause denial of service.\n\n- CVE-2021-40011: There is an uncontrolled resource consumption vulnerability in the display module. Successful exploitation of this vulnerability may affect integrity.\n\n- CVE-2021-41014: A uncontrolled resource consumption in Fortinet FortiWeb version 6.4.1 and below, 6.3.15 and below allows an unauthenticated attacker to make the httpsd daemon unresponsive via huge HTTP packets\n\n- CVE-2021-43933: The affected product is vulnerable to a network-based attack by threat actors sending unimpeded requests to the receiving server, which could cause a denial-of-service condition due to lack of heap memory resources.\n\n- CVE-2021-44527: A vulnerability found in UniFi Switch firmware Version 5.43.35 and earlier allows a malicious actor who has already gained access to the network to perform a Deny of Service (DoS) attack on the affected switch.This vulnerability is fixed in UniFi Switch firmware 5.76.6 and later.\n\n- CVE-2021-44716: net/http in Go before 1.16.12 and 1.17.x before 1.17.5 allows uncontrolled memory consumption in the header canonicalization cache via HTTP/2 requests.\n\n- CVE-2021-46149: An issue was discovered in MediaWiki before 1.35.5, 1.36.x before 1.36.3, and 1.37.x before 1.37.1. A denial of service (resource consumption) can be accomplished by searching for a very long key in a Language Name Search.\n\n- CVE-2021-46668: MariaDB through 10.5.9 allows an application crash via certain long SELECT DISTINCT statements that improperly interact with storage-engine resource limitations for temporary data structures.\n\n- CVE-2020-9060: Z-Wave devices based on Silicon Labs 500 series chipsets using S2, including but likely not limited to the ZooZ ZST10 version 6.04, ZooZ ZEN20 version 5.03, ZooZ ZEN25 version 5.03, Aeon Labs ZW090-A version 3.95, and Fibaro FGWPB-111 version 4.3, are susceptible to denial of service and resource exhaustion via malformed SECURITY NONCE GET, SECURITY NONCE GET 2, NO OPERATION, or NIF REQUEST messages.\n\n- CVE-2021-33135: Uncontrolled resource consumption in the Linux kernel drivers for Intel(R) SGX may allow an authenticated user to potentially enable denial of service via local access.\n\n- CVE-2022-40513: Transient DOS due to uncontrolled resource consumption in WLAN firmware when peer is freed in non qos state.\n\n- CVE-2022-43572: In Splunk Enterprise versions below 8.2.9, 8.1.12, and 9.0.2, sending a malformed file through the Splunk-to-Splunk (S2S) or HTTP Event Collector (HEC) protocols to an indexer results in a blockage or denial-of-service preventing further indexing. \n\n- CVE-2021-22642: An attacker could use specially crafted invalid Modbus frames to crash the Ovarro TBox system.\n\n- CVE-2021-3629: A flaw was found in Undertow. A potential security issue in flow control handling by the browser over http/2 may potentially cause overhead or a denial of service in the server. The highest threat from this vulnerability is availability. This flaw affects Undertow versions prior to 2.0.40.Final and prior to 2.2.11.Final.\n\n- CVE-2022-0476: Denial of Service in GitHub repository radareorg/radare2 prior to 5.6.4.\n\n- CVE-2022-0488: An issue has been discovered in GitLab CE/EE affecting all versions starting with version 8.10. It was possible to trigger a timeout on a page with markdown by using a specific amount of block-quotes.\n\n- CVE-2022-0489: An issue has been discovered in GitLab CE/EE affecting all versions starting with 8.15 . It was possible to trigger a DOS by using the math feature with a specific formula in issue comments.\n\n- CVE-2022-0671: A flaw was found in vscode-xml in versions prior to 0.19.0. Schema download could lead to blind SSRF or DoS via a large file.\n\n- CVE-2022-0695: Denial of Service in GitHub repository radareorg/radare2 prior to 5.6.4.\n\n- CVE-2022-1099: Adding a very large number of tags to a runner in GitLab CE/EE affecting all versions prior to 14.7.7, 14.8 prior to 14.8.5, and 14.9 prior to 14.9.2 allows an attacker to impact the performance of GitLab\n\n- CVE-2022-1259: A flaw was found in Undertow. A potential security issue in flow control handling by the browser over HTTP/2 may cause overhead or a denial of service in the server. This flaw exists because of an incomplete fix for CVE-2021-3629.\n\n- CVE-2022-1468: On all versions of 17.0.x, 16.1.x, 15.1.x, 14.1.x, 13.1.x, 12.1.x, and 11.6.x on F5 BIG-IP, an authenticated iControl REST user with at least guest role privileges can cause processing delays to iControl REST requests via undisclosed requests. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated\n\n- CVE-2022-1677: In OpenShift Container Platform, a user with permissions to create or modify Routes can craft a payload that inserts a malformed entry into one of the cluster router's HAProxy configuration files. This malformed entry can match any arbitrary hostname, or all hostnames in the cluster, and direct traffic to an arbitrary application within the cluster, including one under attacker control.\n\n- CVE-2022-1797: A malformed Class 3 common industrial protocol message with a cached connection can cause a denial-of-service condition in Rockwell Automation Logix Controllers, resulting in a major nonrecoverable fault. If the target device becomes unavailable, a user would have to clear the fault and redownload the user project file to bring the device back online.\n\n- CVE-2022-1982: Uncontrolled resource consumption in Mattermost version 6.6.0 and earlier allows an authenticated attacker to crash the server via a crafted SVG attachment on a post.\n\n- CVE-2022-2004: AutomationDirect DirectLOGIC is vulnerable to a a specially crafted packet can be sent continuously to the PLC to prevent access from DirectSoft and other devices, causing a denial-of-service condition. This issue affects: AutomationDirect DirectLOGIC D0-06 series CPUs D0-06DD1 versions prior to 2.72; D0-06DD2 versions prior to 2.72; D0-06DR versions prior to 2.72; D0-06DA versions prior to 2.72; D0-06AR versions prior to 2.72; D0-06AA versions prior to 2.72; D0-06DD1-D versions prior to 2.72; D0-06DD2-D versions prior to 2.72; D0-06DR-D versions prior to 2.72;\n\n- CVE-2022-20425: In addAutomaticZenRule of ZenModeHelper.java, there is a possible permanent degradation of performance due to resource exhaustion. This could lead to local denial of service with User execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-235823407\n\n- CVE-2022-20482: In createNotificationChannel of NotificationManager.java, there is a possible way to make the device unusable and require factory reset due to resource exhaustion. This could lead to local denial of service with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-12 Android-12L Android-13Android ID: A-240422263\n\n- CVE-2022-22101: Denial of service in multimedia due to uncontrolled resource consumption while parsing an incoming HAB message in Snapdragon Auto\n\n- CVE-2022-22145: CAMS for HIS Log Server contained in the following Yokogawa Electric products is vulnerable to uncontrolled resource consumption. CENTUM CS 3000 versions from R3.08.10 to R3.09.00, CENTUM VP versions from R4.01.00 to R4.03.00, from R5.01.00 to R5.04.20, from R6.01.00 to R6.08.00, Exaopc versions from R3.72.00 to R3.79.00.\n\n- CVE-2022-22161: An Uncontrolled Resource Consumption vulnerability in the kernel of Juniper Networks Junos OS allows an unauthenticated network based attacker to cause 100% CPU load and the device to become unresponsive by sending a flood of traffic to the out-of-band management ethernet port. Continued receipted of a flood will create a sustained Denial of Service (DoS) condition. Once the flood subsides the system will recover by itself. An indication that the system is affected by this issue would be that an irq handled by the fman process is shown to be using a high percentage of CPU cycles like in the following example output: user@host> show system processes extensive ... PID USERNAME PRI NICE SIZE RES STATE TIME WCPU COMMAND 31 root -84 -187 0K 16K WAIT 22.2H 56939.26% irq96: fman0 This issue affects Juniper Networks Junos OS: All versions prior to 18.3R3-S6; 18.4 versions prior to 18.4R2-S9, 18.4R3-S9; 19.1 versions prior to 19.1R2-S3, 19.1R3-S7; 19.2 versions prior to 19.2R1-S7, 19.2R3-S3; 19.3 versions prior to 19.3R2-S7, 19.3R3-S4; 19.4 versions prior to 19.4R2-S5, 19.4R3-S5; 20.1 versions prior to 20.1R3-S1; 20.2 versions prior to 20.2R3-S2; 20.3 versions prior to 20.3R3-S1; 20.4 versions prior to 20.4R2-S2, 20.4R3; 21.1 versions prior to 21.1R2; 21.2 versions prior to 21.2R1-S1, 21.2R2.\n\n- CVE-2022-2238: A vulnerability was found in the search-api container in Red Hat Advanced Cluster Management for Kubernetes when a query in the search filter gets parsed by the backend. This flaw allows an attacker to craft specific strings containing special characters that lead to crashing the pod and affects system availability while restarting.\n\n- CVE-2022-22556: Dell PowerStore contains an Uncontrolled Resource Consumption Vulnerability in PowerStore User Interface. A remote unauthenticated attacker could potentially exploit this vulnerability, leading to the Denial of Service.\n\n- CVE-2022-22724: A CWE-400: Uncontrolled Resource Consumption vulnerability exists that could cause a denial of service on ports 80 (HTTP) and 502 (Modbus), when sending a large number of TCP RST or FIN packets to any open TCP port of the PLC. Affected Product: Modicon M340 CPUs: BMXP34 (All Versions)\n\n- CVE-2022-23015: On BIG-IP versions 16.x before 16.1.0, 15.1.x before 15.1.4.1, and 14.1.2.6-14.1.4.4, when a Client SSL profile is configured on a virtual server with Client Certificate Authentication set to request/require and Session Ticket enabled and configured, processing SSL traffic can cause an increase in memory resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-23023: On BIG-IP version 16.1.x before 16.1.2.1, 15.1.x before 15.1.5, 14.1.x before 14.1.4.5, and all versions of 13.1.x and 12.1.x, and BIG-IQ all versions of 8.x and 7.x, undisclosed requests by an authenticated iControl REST user can cause an increase in memory resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-23024: On BIG-IP AFM version 16.x before 16.1.0, 15.1.x before 15.1.4.1, 14.1.x before 14.1.4.2, and all versions of 13.1.x, when the IPsec application layer gateway (ALG) logging profile is configured on an IPsec ALG virtual server, undisclosed IPsec traffic can cause the Traffic Management Microkernel (TMM) to terminate. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-23030: On version 16.1.x before 16.1.2, 15.1.x before 15.1.4.1, 14.1.x before 14.1.4.5, and all versions of 13.1.x, when the BIG-IP Virtual Edition (VE) uses the ixlv driver (which is used in SR-IOV mode and requires Intel X710/XL710/XXV710 family of network adapters on the Hypervisor) and TCP Segmentation Offload configuration is enabled, undisclosed requests may cause an increase in CPU resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-24118: Certain General Electric Renewable Energy products allow attackers to use a code to trigger a reboot into the factory default configuration. This affects iNET and iNET II before 8.3.0, SD before 6.4.7, TD220X before 2.0.16, and TD220MAX before 1.2.6.\n\n- CVE-2022-2455: A business logic issue in the handling of large repositories in all versions of GitLab CE/EE from 10.0 before 15.1.6, all versions starting from 15.2 before 15.2.4, all versions starting from 15.3 before 15.3.2 allowed an authenticated and authorized user to exhaust server resources by importing a malicious project.\n\n- CVE-2022-25622: The PROFINET (PNIO) stack, when integrated with the Interniche IP stack, improperly handles internal resources for TCP segments where the minimum TCP-Header length is less than defined. This could allow an attacker to create a denial of service condition for TCP services on affected devices by sending specially crafted TCP segments.\n\n- CVE-2022-26372: On F5 BIG-IP 15.1.x versions prior to 15.1.0.2, 14.1.x versions prior to 14.1.4.6, 13.1.x versions prior to 13.1.5, and all versions of 12.1.x and 11.6.x, when a DNS listener is configured on a virtual server with DNS queueing (default), undisclosed requests can cause an increase in memory resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-27181: On F5 BIG-IP APM 16.1.x versions prior to 16.1.2.2, 15.1.x versions prior to 15.1.5.1, 14.1.x versions prior to 14.1.4.6, 13.1.x versions prior to 13.1.5, and all versions of 12.1.x and 11.6.x, when APM is configured on a virtual server and the associated access profile is configured with APM AAA NTLM Auth, undisclosed requests can cause an increase in internal resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated\n\n- CVE-2022-27182: On F5 BIG-IP 16.1.x versions prior to 16.1.2.2, 15.1.x versions prior to 15.1.5.1, and 14.1.x versions prior to 14.1.4.6, when BIG-IP packet filters are enabled and a virtual server is configured with the type set to Reject, undisclosed requests can cause an increase in memory resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated\n\n- CVE-2022-27194: A vulnerability has been identified in SIMATIC PCS neo (Administration Console) (All versions < V3.1 SP1), SINETPLAN (All versions), TIA Portal (V15, V15.1, V16 and V17). The affected system cannot properly process specially crafted packets sent to port 8888/tcp. A remote attacker could exploit this vulnerability to cause a Denial-of-Service condition. The affected devices must be restarted manually.\n\n- CVE-2022-2741: The denial-of-service can be triggered by transmitting a carefully crafted CAN frame on the same CAN network as the vulnerable node. The frame must have a CAN ID matching an installed filter in the vulnerable node (this can easily be guessed based on CAN traffic analyses). The frame must contain the opposite RTR bit as what the filter installed in the vulnerable node contains (if the filter matches RTR frames, the frame must be a data frame or vice versa).\n\n- CVE-2022-27507: Authenticated denial of service\n\n- CVE-2022-27508: Unauthenticated denial of service\n\n- CVE-2022-27640: A vulnerability has been identified in SIMATIC CP 442-1 RNA (All versions < V1.5.18), SIMATIC CP 443-1 RNA (All versions < V1.5.18). The affected devices improperly handles excessive ARP broadcast requests. This could allow an attacker to create a denial of service condition by performing ARP storming attacks, which can cause the device to reboot.\n\n- CVE-2022-28191: NVIDIA vGPU software contains a vulnerability in the Virtual GPU Manager (nvidia.ko), where uncontrolled resource consumption can be triggered by an unprivileged regular user, which may lead to denial of service.\n\n- CVE-2022-28691: On F5 BIG-IP 16.1.x versions prior to 16.1.2.2, 15.1.x versions prior to 15.1.5, 14.1.x versions prior to 14.1.4.6, and 13.1.x versions prior to 13.1.5, when a Real Time Streaming Protocol (RTSP) profile is configured on a virtual server, undisclosed traffic can cause an increase in Traffic Management Microkernel (TMM) resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated\n\n- CVE-2022-28701: On F5 BIG-IP 16.1.x versions prior to 16.1.2.2, when the stream profile is configured on a virtual server, undisclosed requests can cause an increase in memory resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated\n\n- CVE-2022-29480: On F5 BIG-IP 13.1.x versions prior to 13.1.5, and all versions of 12.1.x and 11.6.x, when multiple route domains are configured, undisclosed requests to big3d can cause an increase in CPU resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated\n\n- CVE-2022-29864: OPC UA .NET Standard Stack 1.04.368 allows a remote attacker to cause a server to crash via a large number of messages that trigger Uncontrolled Resource Consumption.\n\n- CVE-2022-29866: OPC UA .NET Standard Stack 1.04.368 allows a remote attacker to exhaust the memory resources of a server via a crafted request that triggers Uncontrolled Resource Consumption.\n\n- CVE-2022-30551: OPC UA Legacy Java Stack 2022-04-01 allows a remote attacker to cause a server to stop processing messages by sending crafted messages that exhaust available resources.\n\n- CVE-2022-30691: Uncontrolled resource consumption in the Intel(R) Support Android application before version 22.02.28 may allow an authenticated user to potentially enable denial of service via local access.\n\n- CVE-2022-30791: In CmpBlkDrvTcp of CODESYS V3 in multiple versions an uncontrolled ressource consumption allows an unauthorized attacker to block new TCP connections. Existing connections are not affected.\n\n- CVE-2022-30792: In CmpChannelServer of CODESYS V3 in multiple versions an uncontrolled ressource consumption allows an unauthorized attacker to block new communication channel connections. Existing connections are not affected.\n\n- CVE-2022-31006: indy-node is the server portion of Hyperledger Indy, a distributed ledger purpose-built for decentralized identity. In vulnerable versions of indy-node, an attacker can max out the number of client connections allowed by the ledger, leaving the ledger unable to be used for its intended purpose. However, the ledger content will not be impacted and the ledger will resume functioning after the attack. This attack exploits the trade-off between resilience and availability. Any protection against abusive client connections will also prevent the network being accessed by certain legitimate users. As a result, validator nodes must tune their firewall rules to ensure the right trade-off for their network's expected users. The guidance to network operators for the use of firewall rules in the deployment of Indy networks has been modified to better protect against denial of service attacks by increasing the cost and complexity in mounting such attacks. The mitigation for this vulnerability is not in the Hyperledger Indy code per se, but rather in the individual deployments of Indy. The mitigations should be applied to all deployments of Indy, and are not related to a particular release.\n\n- CVE-2022-31030: containerd is an open source container runtime. A bug was found in the containerd's CRI implementation where programs inside a container can cause the containerd daemon to consume memory without bound during invocation of the `ExecSync` API. This can cause containerd to consume all available memory on the computer, denying service to other legitimate workloads. Kubernetes and crictl can both be configured to use containerd's CRI implementation; `ExecSync` may be used when running probes or when executing processes via an \"exec\" facility. This bug has been fixed in containerd 1.6.6 and 1.5.13. Users should update to these versions to resolve the issue. Users unable to upgrade should ensure that only trusted images and commands are used.\n\n- CVE-2022-31073: KubeEdge is an open source system for extending native containerized application orchestration capabilities to hosts at Edge. Prior to versions 1.11.1, 1.10.2, and 1.9.4, the ServiceBus server on the edge side may be susceptible to a DoS attack if an HTTP request containing a very large Body is sent to it. It is possible for the node to be exhausted of memory. The consequence of the exhaustion is that other services on the node, e.g. other containers, will be unable to allocate memory and thus causing a denial of service. Malicious apps accidentally pulled by users on the host and have the access to send HTTP requests to localhost may make an attack. It will be affected only when users enable the `ServiceBus` module in the config file `edgecore.yaml`. This bug has been fixed in Kubeedge 1.11.1, 1.10.2, and 1.9.4. As a workaround, disable the `ServiceBus` module in the config file `edgecore.yaml`.\n\n- CVE-2022-31074: KubeEdge is an open source system for extending native containerized application orchestration capabilities to hosts at Edge. Prior to versions 1.11.1, 1.10.2, and 1.9.4, several endpoints in the Cloud AdmissionController may be susceptible to a DoS attack if an HTTP request containing a very large Body is sent to it. The consequence of the exhaustion is that the Cloud AdmissionController will be in denial of service. This bug has been fixed in Kubeedge 1.11.1, 1.10.2, and 1.9.4. There is currently no known workaround.\n\n- CVE-2022-3283: A potential DOS vulnerability was discovered in GitLab CE/EE affecting all versions before before 15.2.5, all versions starting from 15.3 before 15.3.4, all versions starting from 15.4 before 15.4.1 While cloning an issue with special crafted content added to the description could have been used to trigger high CPU usage.\n\n- CVE-2022-33203: In BIG-IP Versions 16.1.x before 16.1.3, 15.1.x before 15.1.6.1, and 14.1.x before 14.1.5, when a BIG-IP APM access policy with Service Connect agent is configured on a virtual server, undisclosed requests can cause an increase in memory resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-34335:  IBM Sterling Partner Engagement Manager 6.1.2, 6.2.0, and 6.2.1 could allow an authenticated user to exhaust server resources which could lead to a denial of service. IBM X-Force ID: 229705. \n\n- CVE-2022-35236: In BIG-IP Versions 16.1.x before 16.1.2.2, 15.1.x before 15.1.6.1, and 14.1.x before 14.1.5, when an HTTP2 profile is configured on a virtual server, undisclosed traffic can cause an increase in memory resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-35241: In versions 2.x before 2.3.1 and all versions of 1.x, when NGINX Instance Manager is in use, undisclosed requests can cause an increase in disk resource utilization. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-3639: A potential DOS vulnerability was discovered in GitLab CE/EE affecting all versions from 10.8 before 15.1.6, all versions starting from 15.2 before 15.2.4, all versions starting from 15.3 before 15.3.2. Improper data handling on branch creation could have been used to trigger high CPU usage.\n\n- CVE-2022-3818: An uncontrolled resource consumption issue when parsing URLs in GitLab CE/EE affecting all versions prior to 15.3.5, 15.4 prior to 15.4.4, and 15.5 prior to 15.5.2 allows an attacker to cause performance issues and potentially a denial of service on the GitLab instance.\n\n- CVE-2022-39278: Istio is an open platform-independent service mesh that provides traffic management, policy enforcement, and telemetry collection. Prior to versions 1.15.2, 1.14.5, and 1.13.9, the Istio control plane, istiod, is vulnerable to a request processing error, allowing a malicious attacker that sends a specially crafted or oversized message which results in the control plane crashing when the Kubernetes validating or mutating webhook service is exposed publicly. This endpoint is served over TLS port 15017, but does not require any authentication from the attacker. For simple installations, Istiod is typically only reachable from within the cluster, limiting the blast radius. However, for some deployments, especially external istiod topologies, this port is exposed over the public internet. Versions 1.15.2, 1.14.5, and 1.13.9 contain patches for this issue. There are no effective workarounds, beyond upgrading. This bug is due to an error in `regexp.Compile` in Go.\n\n- CVE-2022-39330: Nextcloud Server is the file server software for Nextcloud, a self-hosted productivity platform. Nextcloud Server prior to versions 23.0.10 and 24.0.6 and Nextcloud Enterprise Server prior to versions 22.2.10, 23.0.10, and 24.0.6 are vulnerable to a logged-in attacker slowing down the system by generating a lot of database/cpu load. Nextcloud Server versions 23.0.10 and 24.0.6 and Nextcloud Enterprise Server versions 22.2.10, 23.0.10, and 24.0.6 contain patches for this issue. As a workaround, disable the Circles app.\n\n- CVE-2022-40735: The Diffie-Hellman Key Agreement Protocol allows use of long exponents that arguably make certain calculations unnecessarily expensive, because the 1996 van Oorschot and Wiener paper found that \"(appropriately) short exponents\" can be used when there are adequate subgroup constraints, and these short exponents can lead to less expensive calculations than for long exponents. This issue is different from CVE-2002-20001 because it is based on an observation about exponent size, rather than an observation about numbers that are not public keys. The specific situations in which calculation expense would constitute a server-side vulnerability depend on the protocol (e.g., TLS, SSH, or IKE) and the DHE implementation details. In general, there might be an availability concern because of server-side resource consumption from DHE modular-exponentiation calculations. Finally, it is possible for an attacker to exploit this vulnerability and CVE-2002-20001 together.\n\n- CVE-2022-41770: In BIG-IP versions 17.0.x before 17.0.0.1, 16.1.x before 16.1.3.1, 15.1.x before 15.1.7, 14.1.x before 14.1.5.1, and all versions of 13.1.x, and BIG-IQ all versions of 8.x and 7.x, an authenticated iControl REST user can cause an increase in memory resource utilization, via undisclosed requests.\n\n- CVE-2022-41806: In versions 16.1.x before 16.1.3.2 and 15.1.x before 15.1.5.1, when BIG-IP AFM Network Address Translation policy with IPv6/IPv4 translation rules is configured on a virtual server, undisclosed requests can cause an increase in memory resource utilization.\n\n- CVE-2022-41833: In all BIG-IP 13.1.x versions, when an iRule containing the HTTP::collect command is configured on a virtual server, undisclosed requests can cause Traffic Management Microkernel (TMM) to terminate.\n\n- CVE-2022-4344: Memory exhaustion in the Kafka protocol dissector in Wireshark 4.0.0 to 4.0.1 and 3.6.0 to 3.6.9 allows denial of service via packet injection or crafted capture file\n\n- CVE-2022-20692: A vulnerability in the NETCONF over SSH feature of Cisco IOS XE Software could allow a low-privileged, authenticated, remote attacker to cause a denial of service condition (DoS) on an affected device. This vulnerability is due to insufficient resource management. An attacker could exploit this vulnerability by initiating a large number of NETCONF over SSH connections. A successful exploit could allow the attacker to exhaust resources, causing the device to reload and resulting in a DoS condition on an affected device.\n\n- CVE-2022-20760: A vulnerability in the DNS inspection handler of Cisco Adaptive Security Appliance (ASA) Software and Firepower Threat Defense (FTD) Software could allow an unauthenticated, remote attacker to cause a denial of service condition (DoS) on an affected device. This vulnerability is due to a lack of proper processing of incoming requests. An attacker could exploit this vulnerability by sending crafted DNS requests at a high rate to an affected device. A successful exploit could allow the attacker to cause the device to stop responding, resulting in a DoS condition.\n\n- CVE-2022-20808: A vulnerability in Cisco Smart Software Manager On-Prem (SSM On-Prem) could allow an authenticated, remote attacker to cause a denial of service (DoS) condition on an affected device. This vulnerability is due to incorrect handling of multiple simultaneous device registrations on Cisco SSM On-Prem. An attacker could exploit this vulnerability by sending multiple device registration requests to Cisco SSM On-Prem. A successful exploit could allow the attacker to cause a DoS condition on an affected device.\n\n- CVE-2022-20937: A vulnerability in a feature that monitors RADIUS requests on Cisco Identity Services Engine (ISE) Software could allow an unauthenticated, remote attacker to negatively affect the performance of an affected device. This vulnerability is due to insufficient management of system resources. An attacker could exploit this vulnerability by taking actions that cause Cisco ISE Software to receive specific RADIUS traffic. A successful and sustained exploit of this vulnerability could allow the attacker to cause reduced performance of the affected device, resulting in significant delays to RADIUS authentications. There are workarounds that address this vulnerability.\n\n- CVE-2022-43564: In Splunk Enterprise versions below 8.1.12, 8.2.9, and 9.0.2, a remote user who can create search macros and schedule search reports can cause a denial of service through the use of specially crafted search macros.\n\n- CVE-2022-44608: Uncontrolled resource consumption vulnerability in Cybozu Remote Service 4.0.0 to 4.0.3 allows a remote authenticated attacker to consume huge storage space, which may result in a denial-of-service (DoS) condition.\n\n- CVE-2022-45044: A vulnerability has been identified in SIPROTEC 5 6MD84 (CP300) (All versions < V9.50), SIPROTEC 5 6MD85 (CP200) (All versions), SIPROTEC 5 6MD85 (CP300) (All versions < V9.50), SIPROTEC 5 6MD86 (CP200) (All versions), SIPROTEC 5 6MD86 (CP300) (All versions < V9.50), SIPROTEC 5 6MD89 (CP300) (All versions < V9.64), SIPROTEC 5 6MU85 (CP300) (All versions < V9.50), SIPROTEC 5 7KE85 (CP200) (All versions), SIPROTEC 5 7KE85 (CP300) (All versions < V9.64), SIPROTEC 5 7SA82 (CP100) (All versions), SIPROTEC 5 7SA82 (CP150) (All versions < V9.50), SIPROTEC 5 7SA84 (CP200) (All versions), SIPROTEC 5 7SA86 (CP200) (All versions), SIPROTEC 5 7SA86 (CP300) (All versions < V9.50), SIPROTEC 5 7SA87 (CP200) (All versions), SIPROTEC 5 7SA87 (CP300) (All versions < V9.50), SIPROTEC 5 7SD82 (CP100) (All versions), SIPROTEC 5 7SD82 (CP150) (All versions < V9.50), SIPROTEC 5 7SD84 (CP200) (All versions), SIPROTEC 5 7SD86 (CP200) (All versions), SIPROTEC 5 7SD86 (CP300) (All versions < V9.50), SIPROTEC 5 7SD87 (CP200) (All versions), SIPROTEC 5 7SD87 (CP300) (All versions < V9.50), SIPROTEC 5 7SJ81 (CP100) (All versions < V8.89), SIPROTEC 5 7SJ81 (CP150) (All versions < V9.50), SIPROTEC 5 7SJ82 (CP100) (All versions < V8.89), SIPROTEC 5 7SJ82 (CP150) (All versions < V9.50), SIPROTEC 5 7SJ85 (CP200) (All versions), SIPROTEC 5 7SJ85 (CP300) (All versions < V9.50), SIPROTEC 5 7SJ86 (CP200) (All versions), SIPROTEC 5 7SJ86 (CP300) (All versions < V9.50), SIPROTEC 5 7SK82 (CP100) (All versions < V8.89), SIPROTEC 5 7SK82 (CP150) (All versions < V9.50), SIPROTEC 5 7SK85 (CP200) (All versions), SIPROTEC 5 7SK85 (CP300) (All versions < V9.50), SIPROTEC 5 7SL82 (CP100) (All versions), SIPROTEC 5 7SL82 (CP150) (All versions < V9.50), SIPROTEC 5 7SL86 (CP200) (All versions), SIPROTEC 5 7SL86 (CP300) (All versions < V9.50), SIPROTEC 5 7SL87 (CP200) (All versions), SIPROTEC 5 7SL87 (CP300) (All versions < V9.50), SIPROTEC 5 7SS85 (CP200) (All versions), SIPROTEC 5 7SS85 (CP300) (All versions < V9.50), SIPROTEC 5 7ST85 (CP200) (All versions), SIPROTEC 5 7ST85 (CP300) (All versions < V9.64), SIPROTEC 5 7ST86 (CP300) (All versions < V9.64), SIPROTEC 5 7SX82 (CP150) (All versions < V9.50), SIPROTEC 5 7SX85 (CP300) (All versions < V9.50), SIPROTEC 5 7UM85 (CP300) (All versions < V9.50), SIPROTEC 5 7UT82 (CP100) (All versions), SIPROTEC 5 7UT82 (CP150) (All versions < V9.50), SIPROTEC 5 7UT85 (CP200) (All versions), SIPROTEC 5 7UT85 (CP300) (All versions < V9.50), SIPROTEC 5 7UT86 (CP200) (All versions), SIPROTEC 5 7UT86 (CP300) (All versions < V9.50), SIPROTEC 5 7UT87 (CP200) (All versions), SIPROTEC 5 7UT87 (CP300) (All versions < V9.50), SIPROTEC 5 7VE85 (CP300) (All versions < V9.50), SIPROTEC 5 7VK87 (CP200) (All versions), SIPROTEC 5 7VK87 (CP300) (All versions < V9.50), SIPROTEC 5 7VU85 (CP300) (All versions < V9.50), SIPROTEC 5 Communication Module ETH-BA-2EL (All versions < V8.89 installed on CP100 devices), SIPROTEC 5 Communication Module ETH-BA-2EL (All versions < V9.50 installed on CP150 and CP300 devices), SIPROTEC 5 Communication Module ETH-BA-2EL (All versions installed on CP200 devices), SIPROTEC 5 Communication Module ETH-BB-2FO (All versions < V8.89 installed on CP100 devices), SIPROTEC 5 Communication Module ETH-BB-2FO (All versions < V9.50 installed on CP150 and CP300 devices), SIPROTEC 5 Communication Module ETH-BB-2FO (All versions installed on CP200 devices), SIPROTEC 5 Communication Module ETH-BD-2FO (All versions < V9.50), SIPROTEC 5 Compact 7SX800 (CP050) (All versions < V9.50). Affected devices do not properly restrict secure client-initiated renegotiations within the SSL and TLS protocols. This could allow an attacker to create a denial of service condition on the ports 443/tcp and 4443/tcp for the duration of the attack.\n\n- CVE-2022-45199: Pillow before 9.3.0 allows denial of service via SAMPLESPERPIXEL.\n\n- CVE-2022-46351: A vulnerability has been identified in SCALANCE X204RNA (HSR) (All versions < V3.2.7), SCALANCE X204RNA (PRP) (All versions < V3.2.7), SCALANCE X204RNA EEC (HSR) (All versions < V3.2.7), SCALANCE X204RNA EEC (PRP) (All versions < V3.2.7), SCALANCE X204RNA EEC (PRP/HSR) (All versions < V3.2.7). Specially crafted PROFINET DCP packets could cause a denial of service condition of affected products on a local Ethernet segment (Layer 2).\n\n- CVE-2022-46352: A vulnerability has been identified in SCALANCE X204RNA (HSR) (All versions < V3.2.7), SCALANCE X204RNA (PRP) (All versions < V3.2.7), SCALANCE X204RNA EEC (HSR) (All versions < V3.2.7), SCALANCE X204RNA EEC (PRP) (All versions < V3.2.7), SCALANCE X204RNA EEC (PRP/HSR) (All versions < V3.2.7). Specially crafted PROFINET DCP packets could cause a denial of service condition of affected products.\n\n- CVE-2022-4767: Denial of Service in GitHub repository usememos/memos prior to 0.9.1.\n\n- CVE-2022-24040: A vulnerability has been identified in Desigo DXR2 (All versions < V01.21.142.5-22), Desigo PXC3 (All versions < V01.21.142.4-18), Desigo PXC4 (All versions < V02.20.142.10-10884), Desigo PXC5 (All versions < V02.20.142.10-10884). The web application fails to enforce an upper bound to the cost factor of the PBKDF2 derived key during the creation or update of an account. An attacker with the user profile access privilege could cause a denial of service (DoS) condition through CPU consumption by setting a PBKDF2 derived key with a remarkably high cost effort and then attempting a login to the so-modified account.\n\n- CVE-2022-39158: Affected devices improperly handle partial HTTP requests which makes them vulnerable to slowloris attacks. This could allow a remote attacker to create a denial of service condition that persists until the attack ends.\n\n- CVE-2022-41333: An uncontrolled resource consumption vulnerability [CWE-400] in FortiRecorder version 6.4.3 and below, 6.0.11 and below login authentication mechanism may allow an unauthenticated attacker to make the device unavailable via crafted GET requests.\n\nRelated Weaknesses:\n\n- CWE-664 (ChildOf)",
        "type": "Class",
        "search_source": "base_query",
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Discouraged",
            "rationale": "CWE-400 is intended for incorrect behaviors in which the product is expected to track and restrict how many resources it consumes, but CWE-400 is often misused because it is conflated with the \"technical impact\" of vulnerabilities in which resource consumption occurs. It is sometimes used for low-information vulnerability reports. It is a level-1 Class (i.e., a child of a Pillar).",
            "comments": "Closely analyze the specific mistake that is causing resource consumption, and perform a CWE mapping for that mistake. Consider children/descendants such as CWE-770: Allocation of Resources Without Limits or Throttling, CWE-771: Missing Reference to Active Allocated Resource, CWE-410: Insufficient Resource Pool, CWE-772: Missing Release of Resource after Effective Lifetime, CWE-834: Excessive Iteration, CWE-405: Asymmetric Resource Consumption (Amplification), and others.",
            "reasons": [
              "Frequent Misuse"
            ]
          }
        }
      }
    ],
    "graph_results": [
      {
        "doc_id": "804",
        "text": "CWE-804: Guessable CAPTCHA",
        "score": 2.2100000000000004,
        "metadata": {
          "doc_id": "804",
          "name": "Guessable CAPTCHA",
          "type": "base",
          "original_content": "CWE-804: Guessable CAPTCHA",
          "relationships": [
            {
              "source_id": "804",
              "target_id": "330",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "804",
              "target_id": "1390",
              "label": "CHILDOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "804",
              "target_id": "863",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "863",
              "target_id": "804",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "330",
              "target_id": "804",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "1390",
              "target_id": "804",
              "label": "PARENTOF",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 1.0,
            "sequence_path": 1.0
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "vulnerability_sequence_forward"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "330",
                    "804",
                    "CANPRECEDE"
                  ]
                ],
                "score": 1.0,
                "type": "relationship_chain",
                "source": "330"
              },
              "vulnerability_sequence_forward": {
                "path": [
                  [
                    "330",
                    "804",
                    "CANPRECEDE"
                  ]
                ],
                "score": 1.0,
                "type": "vulnerability_sequence_forward",
                "source": "330"
              }
            }
          },
          "position": "after",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 2.2100000000000004
            }
          }
        },
        "similarity": 2.2100000000000004
      },
      {
        "doc_id": "328",
        "text": "The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).",
        "score": 0.5823686074392721,
        "metadata": {
          "doc_id": "328",
          "name": "Use of Weak Hash",
          "type": "Base",
          "extended_description": "\n\nA hash function is defined as an algorithm that maps arbitrarily sized data into a fixed-sized digest (output) such that the following properties hold:\n\n\n  1. The algorithm is not invertible (also called \"one-way\" or \"not reversible\")\n\n  1. The algorithm is deterministic; the same input produces the same digest every time\n\n Building on this definition, a cryptographic hash function must also ensure that a malicious actor cannot leverage the hash function to have a reasonable chance of success at determining any of the following:\n\n  1. the original input (preimage attack), given only the digest\n\n  1. another input that can produce the same digest (2nd preimage attack), given the original input\n\n  1. a set of two or more inputs that evaluate to the same digest (birthday attack), given the actor can arbitrarily choose the inputs to be hashed and can do so a reasonable amount of times\n\nWhat is regarded as \"reasonable\" varies by context and threat model, but in general, \"reasonable\" could cover any attack that is more efficient than brute force (i.e., on average, attempting half of all possible combinations). Note that some attacks might be more efficient than brute force but are still not regarded as achievable in the real world.\n\nAny algorithm that does not meet the above conditions will generally be considered weak for general use in hashing.\n\n\nIn addition to algorithmic weaknesses, a hash function can be made weak by using the hash in a security context that breaks its security guarantees. For example, using a hash function without a salt for storing passwords (that are sufficiently short) could enable an adversary to create a \"rainbow table\" [REF-637] to recover the password under certain conditions; this attack works against such hash functions as MD5, SHA-1, and SHA-2.\n",
          "alternate_terms": [],
          "original_content": "The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).",
          "relationships": [
            {
              "source_id": "328",
              "target_id": "916",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "328",
              "target_id": "327",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "328",
              "target_id": "326",
              "label": "CHILDOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "916",
              "target_id": "328",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "327",
              "target_id": "328",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "326",
              "target_id": "328",
              "label": "PARENTOF",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "source": "graph",
          "sources": [
            "vector",
            "graph"
          ],
          "vector_score": 0.5823686074392721,
          "graph_score": 2.4699999999999998,
          "score_components": {
            "explicit_mention": 1.0,
            "relationship_chain": 0.3,
            "abstraction_path": 0.9
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "916",
                    "328",
                    "CHILDOF"
                  ]
                ],
                "score": 0.3,
                "type": "relationship_chain",
                "source": "916"
              }
            }
          },
          "is_explicit": true,
          "abstraction_level": "base",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse",
              "graph"
            ],
            "retriever_count": 3,
            "normalized_scores": {
              "dense": 0.5370893326418129,
              "sparse": 266.59713348086973,
              "graph": 1.7149474429757086
            }
          }
        },
        "similarity": 1.7149474429757086
      },
      {
        "doc_id": "916",
        "text": "The product generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.",
        "score": 0.5681020598486438,
        "metadata": {
          "doc_id": "916",
          "name": "Use of Password Hash With Insufficient Computational Effort",
          "type": "Base",
          "extended_description": "\n\nMany password storage mechanisms compute a hash and store the hash, instead of storing the original password in plaintext. In this design, authentication involves accepting an incoming password, computing its hash, and comparing it to the stored hash.\n\n\nMany hash algorithms are designed to execute quickly with minimal overhead, even cryptographic hashes. However, this efficiency is a problem for password storage, because it can reduce an attacker's workload for brute-force password cracking. If an attacker can obtain the hashes through some other method (such as SQL injection on a database that stores hashes), then the attacker can store the hashes offline and use various techniques to crack the passwords by computing hashes efficiently. Without a built-in workload, modern attacks can compute large numbers of hashes, or even exhaust the entire space of all possible passwords, within a very short amount of time, using massively-parallel computing (such as cloud computing) and GPU, ASIC, or FPGA hardware. In such a scenario, an efficient hash algorithm helps the attacker.\n\n\nThere are several properties of a hash scheme that are relevant to its strength against an offline, massively-parallel attack:\n\n\n  - The amount of CPU time required to compute the hash (\"stretching\")\n\n  - The amount of memory required to compute the hash (\"memory-hard\" operations)\n\n  - Including a random value, along with the password, as input to the hash computation (\"salting\")\n\n  - Given a hash, there is no known way of determining an input (e.g., a password) that produces this hash value, other than by guessing possible inputs (\"one-way\" hashing)\n\n  - Relative to the number of all possible hashes that can be generated by the scheme, there is a low likelihood of producing the same hash for multiple different inputs (\"collision resistance\")\n\nNote that the security requirements for the product may vary depending on the environment and the value of the passwords. Different schemes might not provide all of these properties, yet may still provide sufficient security for the environment. Conversely, a solution might be very strong in preserving one property, which still being very weak for an attack against another property, or it might not be able to significantly reduce the efficiency of a massively-parallel attack.",
          "alternate_terms": [],
          "original_content": "The product generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.",
          "relationships": [
            {
              "source_id": "916",
              "target_id": "760",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "916",
              "target_id": "759",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "916",
              "target_id": "327",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "916",
              "target_id": "328",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "760",
              "target_id": "916",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "759",
              "target_id": "916",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "328",
              "target_id": "916",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "327",
              "target_id": "916",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            }
          ],
          "source": "graph",
          "sources": [
            "vector",
            "graph"
          ],
          "vector_score": 0.5681020598486438,
          "graph_score": 2.4699999999999998,
          "score_components": {
            "relationship_chain": 0.3,
            "explicit_mention": 1.0,
            "abstraction_path": 0.9
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "328",
                    "916",
                    "PARENTOF"
                  ]
                ],
                "score": 0.3,
                "type": "relationship_chain",
                "source": "328"
              }
            }
          },
          "is_explicit": true,
          "abstraction_level": "base",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse",
              "graph"
            ],
            "retriever_count": 3,
            "normalized_scores": {
              "dense": 0.5273355740620833,
              "sparse": 243.9991156743613,
              "graph": 1.7092408239394574
            }
          }
        },
        "similarity": 1.7092408239394574
      },
      {
        "doc_id": "294",
        "text": "A capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).",
        "score": 0.5262317556000331,
        "metadata": {
          "doc_id": "294",
          "name": "Authentication Bypass by Capture-replay",
          "type": "Base",
          "extended_description": "Capture-replay attacks are common and can be difficult to defeat without cryptography. They are a subset of network injection attacks that rely on observing previously-sent valid commands, then changing them slightly if necessary and resending the same commands to the server.",
          "alternate_terms": [],
          "original_content": "A capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).",
          "relationships": [
            {
              "source_id": "294",
              "target_id": "287",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "294",
              "target_id": "1390",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "287",
              "target_id": "294",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "1390",
              "target_id": "294",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "source": "graph",
          "sources": [
            "vector",
            "graph"
          ],
          "vector_score": 0.5262317556000331,
          "graph_score": 2.3998000000000004,
          "score_components": {
            "relationship_chain": 0.24,
            "explicit_mention": 1.0,
            "abstraction_path": 0.9
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "836",
                    "1390",
                    "CHILDOF"
                  ],
                  [
                    "1390",
                    "294",
                    "PARENTOF"
                  ]
                ],
                "score": 0.24,
                "type": "relationship_chain",
                "source": "836"
              }
            }
          },
          "is_explicit": true,
          "abstraction_level": "base",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse",
              "graph"
            ],
            "retriever_count": 3,
            "normalized_scores": {
              "dense": 0.44265407701646087,
              "sparse": 222.06386444460597,
              "graph": 1.6503727022400136
            }
          }
        },
        "similarity": 1.6503727022400136
      },
      {
        "doc_id": "412",
        "text": "CWE-412: Unrestricted Externally Accessible Lock",
        "score": 1.521,
        "metadata": {
          "doc_id": "412",
          "name": "Unrestricted Externally Accessible Lock",
          "type": "base",
          "original_content": "CWE-412: Unrestricted Externally Accessible Lock",
          "relationships": [
            {
              "source_id": "412",
              "target_id": "410",
              "label": "CANALSOBE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "412",
              "target_id": "667",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "667",
              "target_id": "412",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.7,
            "peer_group": 0.9
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "peer_relationship"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "412",
                    "410",
                    "CANALSOBE"
                  ]
                ],
                "score": 0.7,
                "type": "relationship_chain",
                "source": "410"
              },
              "peer_relationship": {
                "path": [
                  [
                    "412",
                    "410",
                    "CANALSOBE"
                  ]
                ],
                "score": 0.9,
                "type": "peer_relationship",
                "source": "410"
              }
            }
          },
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.521
            }
          }
        },
        "similarity": 1.521
      },
      {
        "doc_id": "410",
        "text": "The product's resource pool is not large enough to handle peak demand, which allows an attacker to prevent others from accessing the resource by using a (relatively) large number of requests for resources.",
        "score": 0.5717119459936348,
        "metadata": {
          "doc_id": "410",
          "name": "Insufficient Resource Pool",
          "type": "Base",
          "extended_description": "Frequently the consequence is a \"flood\" of connection or sessions.",
          "alternate_terms": [],
          "original_content": "The product's resource pool is not large enough to handle peak demand, which allows an attacker to prevent others from accessing the resource by using a (relatively) large number of requests for resources.",
          "relationships": [
            {
              "source_id": "410",
              "target_id": "400",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "410",
              "target_id": "664",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "664",
              "target_id": "410",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "412",
              "target_id": "410",
              "label": "CANALSOBE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "400",
              "target_id": "410",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "source": "graph",
          "sources": [
            "vector",
            "graph"
          ],
          "vector_score": 0.5717119459936348,
          "graph_score": 2.1189999999999998,
          "score_components": {
            "explicit_mention": 1.0,
            "abstraction_path": 0.9
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [],
            "best_paths": {}
          },
          "is_explicit": true,
          "abstraction_level": "base",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "graph"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "dense": 0.5066851595200853,
              "graph": 1.5000847783974538
            }
          }
        },
        "similarity": 1.5000847783974538
      },
      {
        "doc_id": "836",
        "text": "The product records password hashes in a data store, receives a hash of a password from a client, and compares the supplied hash to the hash obtained from the data store.",
        "score": 0.5436243394098919,
        "metadata": {
          "doc_id": "836",
          "name": "Use of Password Hash Instead of Password for Authentication",
          "type": "Base",
          "extended_description": "\n\nSome authentication mechanisms rely on the client to generate the hash for a password, possibly to reduce load on the server or avoid sending the password across the network. However, when the client is used to generate the hash, an attacker can bypass the authentication by obtaining a copy of the hash, e.g. by using SQL injection to compromise a database of authentication credentials, or by exploiting an information exposure. The attacker could then use a modified client to replay the stolen hash without having knowledge of the original password.\n\n\nAs a result, the server-side comparison against a client-side hash does not provide any more security than the use of passwords without hashing.\n",
          "alternate_terms": [],
          "original_content": "The product records password hashes in a data store, receives a hash of a password from a client, and compares the supplied hash to the hash obtained from the data store.",
          "relationships": [
            {
              "source_id": "836",
              "target_id": "602",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "836",
              "target_id": "1390",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "1390",
              "target_id": "836",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "source": "graph",
          "sources": [
            "vector",
            "graph"
          ],
          "vector_score": 0.5436243394098919,
          "graph_score": 2.1189999999999998,
          "score_components": {
            "explicit_mention": 1.0,
            "abstraction_path": 0.9
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [],
            "best_paths": {}
          },
          "is_explicit": true,
          "abstraction_level": "base",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse",
              "graph"
            ],
            "retriever_count": 3,
            "normalized_scores": {
              "dense": 0.5048399447221708,
              "sparse": 214.51105573266688,
              "graph": 1.4888497357639565
            }
          }
        },
        "similarity": 1.4888497357639565
      },
      {
        "doc_id": "330",
        "text": "The product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.",
        "score": 0.508857858359942,
        "metadata": {
          "doc_id": "330",
          "name": "Use of Insufficiently Random Values",
          "type": "Class",
          "extended_description": "When product generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information.",
          "alternate_terms": [],
          "original_content": "The product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.",
          "relationships": [
            {
              "source_id": "330",
              "target_id": "344",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "330",
              "target_id": "340",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "330",
              "target_id": "338",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "330",
              "target_id": "335",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "330",
              "target_id": "334",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "330",
              "target_id": "331",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "330",
              "target_id": "1241",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "330",
              "target_id": "1204",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "330",
              "target_id": "804",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "330",
              "target_id": "693",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "804",
              "target_id": "330",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "693",
              "target_id": "330",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "344",
              "target_id": "330",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "340",
              "target_id": "330",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "338",
              "target_id": "330",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "338",
              "target_id": "330",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "335",
              "target_id": "330",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "335",
              "target_id": "330",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "334",
              "target_id": "330",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "331",
              "target_id": "330",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "331",
              "target_id": "330",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "1241",
              "target_id": "330",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "1204",
              "target_id": "330",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "source": "graph",
          "sources": [
            "vector",
            "graph"
          ],
          "vector_score": 0.508857858359942,
          "graph_score": 1.6239999999999999,
          "score_components": {
            "relationship_chain": 0.6,
            "explicit_mention": 1.0,
            "abstraction_path": 0.7
          },
          "abstraction_factor": 0.8,
          "graph_path_info": {
            "path_types": [
              "relationship_chain"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "836",
                    "1390",
                    "CHILDOF"
                  ],
                  [
                    "1390",
                    "804",
                    "PARENTOF"
                  ],
                  [
                    "804",
                    "330",
                    "CANFOLLOW"
                  ]
                ],
                "score": 0.6,
                "type": "relationship_chain",
                "source": "836"
              }
            }
          },
          "is_explicit": true,
          "abstraction_level": "class",
          "mapping_notes": {
            "usage": "Discouraged",
            "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
            "comments": "Examine children of this entry to see if there is a better fit",
            "reasons": [
              "Abstraction"
            ]
          },
          "score_info": {
            "retrievers": [
              "sparse",
              "graph"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "sparse": 255.5089161401263,
              "graph": 1.1779431433439767
            }
          }
        },
        "similarity": 1.1779431433439767
      },
      {
        "doc_id": "290",
        "text": "CWE-290: Authentication Bypass by Spoofing",
        "score": 1.1466,
        "metadata": {
          "doc_id": "290",
          "name": "Authentication Bypass by Spoofing",
          "type": "base",
          "original_content": "CWE-290: Authentication Bypass by Spoofing",
          "relationships": [
            {
              "source_id": "290",
              "target_id": "350",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "290",
              "target_id": "293",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "290",
              "target_id": "291",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "290",
              "target_id": "287",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "290",
              "target_id": "1390",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "602",
              "target_id": "290",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "358",
              "target_id": "290",
              "label": "CANALSOBE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "350",
              "target_id": "290",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "293",
              "target_id": "290",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "291",
              "target_id": "290",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "287",
              "target_id": "290",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "1390",
              "target_id": "290",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.5599999999999999,
            "peer_group": 0.63
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "peer_relationship"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "836",
                    "602",
                    "PEEROF"
                  ],
                  [
                    "602",
                    "290",
                    "PEEROF"
                  ]
                ],
                "score": 0.5599999999999999,
                "type": "relationship_chain",
                "source": "836"
              },
              "peer_relationship": {
                "path": [
                  [
                    "836",
                    "602",
                    "PEEROF"
                  ],
                  [
                    "602",
                    "290",
                    "PEEROF"
                  ]
                ],
                "score": 0.63,
                "type": "peer_relationship",
                "source": "836"
              }
            }
          },
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.1466
            }
          }
        },
        "similarity": 1.1466
      },
      {
        "doc_id": "400",
        "text": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
        "score": 0.5052272073990911,
        "metadata": {
          "doc_id": "400",
          "name": "Uncontrolled Resource Consumption",
          "type": "Class",
          "extended_description": "\n\nLimited resources include memory, file system storage, database connection pool entries, and CPU. If an attacker can trigger the allocation of these limited resources, but the number or size of the resources is not controlled, then the attacker could cause a denial of service that consumes all available resources. This would prevent valid users from accessing the product, and it could potentially have an impact on the surrounding environment. For example, a memory exhaustion attack against an application could slow down the application as well as its host operating system.\n\n\nThere are at least three distinct scenarios which can commonly lead to resource exhaustion:\n\n\n  - Lack of throttling for the number of allocated resources\n\n  - Losing all references to a resource before reaching the shutdown stage\n\n  - Not closing/returning a resource after processing\n\nResource exhaustion problems are often result due to an incorrect implementation of the following situations:\n\n  - Error conditions and other exceptional circumstances.\n\n  - Confusion over which part of the program is responsible for releasing the resource.\n\n",
          "alternate_terms": [
            "Resource Exhaustion"
          ],
          "original_content": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
          "relationships": [
            {
              "source_id": "400",
              "target_id": "920",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "400",
              "target_id": "779",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "400",
              "target_id": "771",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "400",
              "target_id": "770",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "400",
              "target_id": "410",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "400",
              "target_id": "405",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "400",
              "target_id": "1246",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "400",
              "target_id": "1235",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "400",
              "target_id": "664",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "920",
              "target_id": "400",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "920",
              "target_id": "400",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "779",
              "target_id": "400",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "771",
              "target_id": "400",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "770",
              "target_id": "400",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "770",
              "target_id": "400",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "664",
              "target_id": "400",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "410",
              "target_id": "400",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "405",
              "target_id": "400",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "1246",
              "target_id": "400",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "1235",
              "target_id": "400",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "source": "graph",
          "sources": [
            "vector",
            "graph"
          ],
          "vector_score": 0.5052272073990911,
          "graph_score": 1.3600000000000003,
          "score_components": {
            "relationship_chain": 1.0,
            "sequence_path": 1.0
          },
          "abstraction_factor": 0.8,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "vulnerability_sequence_forward"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "410",
                    "400",
                    "CANPRECEDE"
                  ]
                ],
                "score": 1.0,
                "type": "relationship_chain",
                "source": "410"
              },
              "vulnerability_sequence_forward": {
                "path": [
                  [
                    "410",
                    "400",
                    "CANPRECEDE"
                  ]
                ],
                "score": 1.0,
                "type": "vulnerability_sequence_forward",
                "source": "410"
              }
            }
          },
          "position": "after",
          "mapping_notes": {
            "usage": "Discouraged",
            "rationale": "CWE-400 is intended for incorrect behaviors in which the product is expected to track and restrict how many resources it consumes, but CWE-400 is often misused because it is conflated with the \"technical impact\" of vulnerabilities in which resource consumption occurs. It is sometimes used for low-information vulnerability reports. It is a level-1 Class (i.e., a child of a Pillar).",
            "comments": "Closely analyze the specific mistake that is causing resource consumption, and perform a CWE mapping for that mistake. Consider children/descendants such as CWE-770: Allocation of Resources Without Limits or Throttling, CWE-771: Missing Reference to Active Allocated Resource, CWE-410: Insufficient Resource Pool, CWE-772: Missing Release of Resource after Effective Lifetime, CWE-834: Excessive Iteration, CWE-405: Asymmetric Resource Consumption (Amplification), and others.",
            "reasons": [
              "Frequent Misuse"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse",
              "graph"
            ],
            "retriever_count": 3,
            "normalized_scores": {
              "dense": 0.4323501872269504,
              "sparse": 65.67394027427275,
              "graph": 1.0180908829596367
            }
          }
        },
        "similarity": 1.0180908829596367
      },
      {
        "doc_id": "407",
        "text": "An algorithm in a product has an inefficient worst-case computational complexity that may be detrimental to system performance and can be triggered by an attacker, typically using crafted manipulations that ensure that the worst case is being reached.",
        "score": 0.5612566938770673,
        "metadata": {
          "doc_id": "407",
          "name": "Inefficient Algorithmic Complexity",
          "type": "Class",
          "extended_description": null,
          "alternate_terms": [
            "Quadratic Complexity"
          ],
          "original_content": "An algorithm in a product has an inefficient worst-case computational complexity that may be detrimental to system performance and can be triggered by an attacker, typically using crafted manipulations that ensure that the worst case is being reached.",
          "relationships": [
            {
              "source_id": "407",
              "target_id": "1333",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "407",
              "target_id": "405",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "405",
              "target_id": "407",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "1333",
              "target_id": "407",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "1333",
              "target_id": "407",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "source": "graph",
          "sources": [
            "vector",
            "graph"
          ],
          "vector_score": 0.5612566938770673,
          "graph_score": 1.3216,
          "score_components": {
            "relationship_chain": 0.18,
            "explicit_mention": 1.0,
            "abstraction_path": 0.7
          },
          "abstraction_factor": 0.8,
          "graph_path_info": {
            "path_types": [
              "relationship_chain"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "410",
                    "400",
                    "CANPRECEDE"
                  ],
                  [
                    "400",
                    "405",
                    "PARENTOF"
                  ],
                  [
                    "405",
                    "407",
                    "PARENTOF"
                  ]
                ],
                "score": 0.18,
                "type": "relationship_chain",
                "source": "410"
              }
            }
          },
          "is_explicit": true,
          "abstraction_level": "class",
          "mapping_notes": {
            "usage": "Allowed-with-Review",
            "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
            "comments": "Examine children of this entry to see if there is a better fit",
            "reasons": [
              "Abstraction"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse",
              "graph"
            ],
            "retriever_count": 3,
            "normalized_scores": {
              "dense": 0.49614102838449897,
              "sparse": 264.8570513392626,
              "graph": 1.0174626775508269
            }
          }
        },
        "similarity": 1.0174626775508269
      },
      {
        "doc_id": "344",
        "text": "CWE-344: Use of Invariant Value in Dynamically Changing Context",
        "score": 1.0062,
        "metadata": {
          "doc_id": "344",
          "name": "Use of Invariant Value in Dynamically Changing Context",
          "type": "base",
          "original_content": "CWE-344: Use of Invariant Value in Dynamically Changing Context",
          "relationships": [
            {
              "source_id": "344",
              "target_id": "798",
              "label": "PARENTOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "344",
              "target_id": "587",
              "label": "PARENTOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "344",
              "target_id": "323",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "344",
              "target_id": "330",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "798",
              "target_id": "344",
              "label": "CHILDOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "587",
              "target_id": "344",
              "label": "CHILDOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "330",
              "target_id": "344",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "323",
              "target_id": "344",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.3,
            "abstraction_path": 0.7200000000000001
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "abstraction_path_down"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "330",
                    "344",
                    "PARENTOF"
                  ]
                ],
                "score": 0.3,
                "type": "relationship_chain",
                "source": "330"
              },
              "abstraction_path_down": {
                "path": [
                  [
                    "330",
                    "344",
                    "PARENTOF"
                  ]
                ],
                "score": 0.7200000000000001,
                "type": "abstraction_path_down",
                "source": "330"
              }
            }
          },
          "abstraction_level": "base",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.0062
            }
          }
        },
        "similarity": 1.0062
      },
      {
        "doc_id": "338",
        "text": "CWE-338: Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)",
        "score": 1.0062,
        "metadata": {
          "doc_id": "338",
          "name": "Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)",
          "type": "base",
          "original_content": "CWE-338: Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)",
          "relationships": [
            {
              "source_id": "338",
              "target_id": "330",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "338",
              "target_id": "330",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "330",
              "target_id": "338",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.3,
            "abstraction_path": 0.7200000000000001
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "abstraction_path_down"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "330",
                    "338",
                    "PARENTOF"
                  ]
                ],
                "score": 0.3,
                "type": "relationship_chain",
                "source": "330"
              },
              "abstraction_path_down": {
                "path": [
                  [
                    "330",
                    "338",
                    "PARENTOF"
                  ]
                ],
                "score": 0.7200000000000001,
                "type": "abstraction_path_down",
                "source": "330"
              }
            }
          },
          "abstraction_level": "base",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.0062
            }
          }
        },
        "similarity": 1.0062
      },
      {
        "doc_id": "335",
        "text": "CWE-335: Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)",
        "score": 1.0062,
        "metadata": {
          "doc_id": "335",
          "name": "Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)",
          "type": "base",
          "original_content": "CWE-335: Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)",
          "relationships": [
            {
              "source_id": "335",
              "target_id": "339",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "335",
              "target_id": "337",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "335",
              "target_id": "336",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "335",
              "target_id": "330",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "335",
              "target_id": "330",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "339",
              "target_id": "335",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "337",
              "target_id": "335",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "336",
              "target_id": "335",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "330",
              "target_id": "335",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.3,
            "abstraction_path": 0.7200000000000001
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "abstraction_path_down"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "330",
                    "335",
                    "PARENTOF"
                  ]
                ],
                "score": 0.3,
                "type": "relationship_chain",
                "source": "330"
              },
              "abstraction_path_down": {
                "path": [
                  [
                    "330",
                    "335",
                    "PARENTOF"
                  ]
                ],
                "score": 0.7200000000000001,
                "type": "abstraction_path_down",
                "source": "330"
              }
            }
          },
          "abstraction_level": "base",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.0062
            }
          }
        },
        "similarity": 1.0062
      },
      {
        "doc_id": "331",
        "text": "CWE-331: Insufficient Entropy",
        "score": 1.0062,
        "metadata": {
          "doc_id": "331",
          "name": "Insufficient Entropy",
          "type": "base",
          "original_content": "CWE-331: Insufficient Entropy",
          "relationships": [
            {
              "source_id": "331",
              "target_id": "333",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "331",
              "target_id": "332",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "331",
              "target_id": "330",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "331",
              "target_id": "330",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "333",
              "target_id": "331",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "332",
              "target_id": "331",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "330",
              "target_id": "331",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.3,
            "abstraction_path": 0.7200000000000001
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "abstraction_path_down"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "330",
                    "331",
                    "PARENTOF"
                  ]
                ],
                "score": 0.3,
                "type": "relationship_chain",
                "source": "330"
              },
              "abstraction_path_down": {
                "path": [
                  [
                    "330",
                    "331",
                    "PARENTOF"
                  ]
                ],
                "score": 0.7200000000000001,
                "type": "abstraction_path_down",
                "source": "330"
              }
            }
          },
          "abstraction_level": "base",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.0062
            }
          }
        },
        "similarity": 1.0062
      },
      {
        "doc_id": "1241",
        "text": "CWE-1241: Use of Predictable Algorithm in Random Number Generator",
        "score": 1.0062,
        "metadata": {
          "doc_id": "1241",
          "name": "Use of Predictable Algorithm in Random Number Generator",
          "type": "base",
          "original_content": "CWE-1241: Use of Predictable Algorithm in Random Number Generator",
          "relationships": [
            {
              "source_id": "1241",
              "target_id": "330",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "330",
              "target_id": "1241",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.3,
            "abstraction_path": 0.7200000000000001
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "abstraction_path_down"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "330",
                    "1241",
                    "PARENTOF"
                  ]
                ],
                "score": 0.3,
                "type": "relationship_chain",
                "source": "330"
              },
              "abstraction_path_down": {
                "path": [
                  [
                    "330",
                    "1241",
                    "PARENTOF"
                  ]
                ],
                "score": 0.7200000000000001,
                "type": "abstraction_path_down",
                "source": "330"
              }
            }
          },
          "abstraction_level": "base",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.0062
            }
          }
        },
        "similarity": 1.0062
      },
      {
        "doc_id": "1204",
        "text": "CWE-1204: Generation of Weak Initialization Vector (IV)",
        "score": 1.0062,
        "metadata": {
          "doc_id": "1204",
          "name": "Generation of Weak Initialization Vector (IV)",
          "type": "base",
          "original_content": "CWE-1204: Generation of Weak Initialization Vector (IV)",
          "relationships": [
            {
              "source_id": "1204",
              "target_id": "329",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "1204",
              "target_id": "330",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "330",
              "target_id": "1204",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "329",
              "target_id": "1204",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.3,
            "abstraction_path": 0.7200000000000001
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "abstraction_path_down"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "330",
                    "1204",
                    "PARENTOF"
                  ]
                ],
                "score": 0.3,
                "type": "relationship_chain",
                "source": "330"
              },
              "abstraction_path_down": {
                "path": [
                  [
                    "330",
                    "1204",
                    "PARENTOF"
                  ]
                ],
                "score": 0.7200000000000001,
                "type": "abstraction_path_down",
                "source": "330"
              }
            }
          },
          "abstraction_level": "base",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.0062
            }
          }
        },
        "similarity": 1.0062
      },
      {
        "doc_id": "1333",
        "text": "CWE-1333: Inefficient Regular Expression Complexity",
        "score": 1.0062,
        "metadata": {
          "doc_id": "1333",
          "name": "Inefficient Regular Expression Complexity",
          "type": "base",
          "original_content": "CWE-1333: Inefficient Regular Expression Complexity",
          "relationships": [
            {
              "source_id": "1333",
              "target_id": "407",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "1333",
              "target_id": "407",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "407",
              "target_id": "1333",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.3,
            "abstraction_path": 0.7200000000000001
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "abstraction_path_down"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "407",
                    "1333",
                    "PARENTOF"
                  ]
                ],
                "score": 0.3,
                "type": "relationship_chain",
                "source": "407"
              },
              "abstraction_path_down": {
                "path": [
                  [
                    "407",
                    "1333",
                    "PARENTOF"
                  ]
                ],
                "score": 0.7200000000000001,
                "type": "abstraction_path_down",
                "source": "407"
              }
            }
          },
          "abstraction_level": "base",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.0062
            }
          }
        },
        "similarity": 1.0062
      },
      {
        "doc_id": "471",
        "text": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
        "score": 0.9360000000000002,
        "metadata": {
          "doc_id": "471",
          "name": "Modification of Assumed-Immutable Data (MAID)",
          "type": "base",
          "original_content": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
          "relationships": [
            {
              "source_id": "471",
              "target_id": "621",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "471",
              "target_id": "607",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "471",
              "target_id": "602",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "471",
              "target_id": "473",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "471",
              "target_id": "472",
              "label": "PARENTOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "471",
              "target_id": "425",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "471",
              "target_id": "291",
              "label": "PARENTOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "471",
              "target_id": "1321",
              "label": "CANFOLLOW",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "471",
              "target_id": "1282",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "471",
              "target_id": "664",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "664",
              "target_id": "471",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "621",
              "target_id": "471",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "607",
              "target_id": "471",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "602",
              "target_id": "471",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "473",
              "target_id": "471",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "472",
              "target_id": "471",
              "label": "CHILDOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "425",
              "target_id": "471",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "291",
              "target_id": "471",
              "label": "CHILDOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "1321",
              "target_id": "471",
              "label": "CANPRECEDE",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "1282",
              "target_id": "471",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.8
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "836",
                    "602",
                    "PEEROF"
                  ],
                  [
                    "602",
                    "471",
                    "CANPRECEDE"
                  ]
                ],
                "score": 0.8,
                "type": "relationship_chain",
                "source": "836"
              }
            }
          },
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 0.9360000000000002
            }
          }
        },
        "similarity": 0.9360000000000002
      },
      {
        "doc_id": "613",
        "text": "CWE-613: Insufficient Session Expiration",
        "score": 0.9360000000000002,
        "metadata": {
          "doc_id": "613",
          "name": "Insufficient Session Expiration",
          "type": "base",
          "original_content": "CWE-613: Insufficient Session Expiration",
          "relationships": [
            {
              "source_id": "613",
              "target_id": "352",
              "label": "REQUIREDBY",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "613",
              "target_id": "287",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "613",
              "target_id": "672",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "613",
              "target_id": "672",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "672",
              "target_id": "613",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "352",
              "target_id": "613",
              "label": "REQUIRES",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "287",
              "target_id": "613",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.8
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "294",
                    "287",
                    "CHILDOF"
                  ],
                  [
                    "287",
                    "613",
                    "CANFOLLOW"
                  ]
                ],
                "score": 0.8,
                "type": "relationship_chain",
                "source": "294"
              }
            }
          },
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 0.9360000000000002
            }
          }
        },
        "similarity": 0.9360000000000002
      }
    ]
  },
  "retrieval_time": 5.16159725189209
}