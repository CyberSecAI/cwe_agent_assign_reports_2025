{
  "retriever": "dense",
  "query": "In the Linux kernel, the following vulnerability has been resolved mptcp fix NULL pointer in can_accept_new_subflow When testing valkey benchmark tool with MPTCP, the kernel panics in mptcp_can_accept_new_subflow because subflow_req->msk is NULL. Call trace mptcp_can_accept_new_subflow (./net/mptcp/subflow.c63 (discriminator 4)) (P) subflow_syn_recv_sock (./net/mptcp/subflow.c854) tcp_check_req (./net/ipv4/tcp_minisocks.c863) tcp_v4_rcv (./net/ipv4/tcp_ipv4.c2268) ip_protocol_deliver_rcu (./net/ipv4/ip_input.c207) ip_local_deliver_finish (./net/ipv4/ip_input.c234) ip_local_deliver (./net/ipv4/ip_input.c254) ip_rcv_finish (./net/ipv4/ip_input.c449) ... According to the debug log, the same req received two SYN-ACK in a very short time, very likely because the client retransmits the syn ack due to multiple reasons. Even if the packets are transmitted with a relevant time interval, they can be processed by the server on different CPUs concurrently). The subflow_req->msk ownership is transferred to the subflow the first, and there will be a risk of a null pointer dereference here. This patch fixes this issue by moving the subflow_req->msk under the `own_req == true` conditional. Note that the !msk check in subflow_hmac_valid() can be dropped, because the same check already exists under the own_req mpj branch where the code has been moved to.",
  "keyphrases": {
    "rootcause": [
      "NULL pointer dereference in mptcp_can_accept_new_subflow",
      "null pointer",
      "race condition"
    ],
    "weakness": [
      "null pointer dereference"
    ]
  },
  "timestamp": "2025-07-12 10:15:47",
  "cve_id": "CVE-2025-23145",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "type": "Variant",
      "score": 0.5423014622279374
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "type": "Base",
      "score": 0.5342864274932031
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "type": "Class",
      "score": 0.5247152623886697
    },
    {
      "cwe_id": "191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "type": "Base",
      "score": 0.5207360837284907
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "type": "Base",
      "score": 0.5196196399196205
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "type": "Class",
      "score": 0.516573926449774
    },
    {
      "cwe_id": "126",
      "name": "Buffer Over-read",
      "type": "Variant",
      "score": 0.5088434670798236
    },
    {
      "cwe_id": "121",
      "name": "Stack-based Buffer Overflow",
      "type": "Variant",
      "score": 0.508570515848042
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "type": "Base",
      "score": 0.5049731317349495
    },
    {
      "cwe_id": "122",
      "name": "Heap-based Buffer Overflow",
      "type": "Variant",
      "score": 0.5012357183009921
    },
    {
      "cwe_id": "131",
      "name": "Incorrect Calculation of Buffer Size",
      "type": "Base",
      "score": 0.4824626808253192
    },
    {
      "cwe_id": "606",
      "name": "Unchecked Input for Loop Condition",
      "type": "Base",
      "score": 0.4767302195528622
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "type": "Base",
      "score": 0.47664848569110074
    },
    {
      "cwe_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "type": "Base",
      "score": 0.4750896120019942
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "type": "Base",
      "score": 0.47412382013850696
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "type": "Class",
      "score": 0.47397353524044
    },
    {
      "cwe_id": "193",
      "name": "Off-by-one Error",
      "type": "Base",
      "score": 0.4700184681261348
    },
    {
      "cwe_id": "119",
      "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
      "type": "Class",
      "score": 0.46984876453279933
    },
    {
      "cwe_id": "824",
      "name": "Access of Uninitialized Pointer",
      "type": "Base",
      "score": 0.4684449916303681
    },
    {
      "cwe_id": "696",
      "name": "Incorrect Behavior Order",
      "type": "Class",
      "score": 0.4679000788234913
    }
  ]
}