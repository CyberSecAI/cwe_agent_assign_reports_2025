{
  "retriever": "graph",
  "query": "In the Linux kernel, the following vulnerability has been resolvednet ks8851 Fix deadlock with the SPI chip variantWhen SMP is enabled and spinlocks are actually functional then there isa deadlock with the statelock spinlock between ks8851_start_xmit_spiand ks8851_irq watchdog BUG soft lockup - CPU#0 stuck for 27s! call trace queued_spin_lock_slowpath+0x100/0x284 do_raw_spin_lock+0x34/0x44 ks8851_start_xmit_spi+0x30/0xb8 ks8851_start_xmit+0x14/0x20 netdev_start_xmit+0x40/0x6c dev_hard_start_xmit+0x6c/0xbc sch_direct_xmit+0xa4/0x22c __qdisc_run+0x138/0x3fc qdisc_run+0x24/0x3c net_tx_action+0xf8/0x130 handle_softirqs+0x1ac/0x1f0 __do_softirq+0x14/0x20 ____do_softirq+0x10/0x1c call_on_irq_stack+0x3c/0x58 do_softirq_own_stack+0x1c/0x28 __irq_exit_rcu+0x54/0x9c irq_exit_rcu+0x10/0x1c el1_interrupt+0x38/0x50 el1h_64_irq_handler+0x18/0x24 el1h_64_irq+0x64/0x68 __netif_schedule+0x6c/0x80 netif_tx_wake_queue+0x38/0x48 ks8851_irq+0xb8/0x2c8 irq_thread_fn+0x2c/0x74 irq_thread+0x10c/0x1b0 kthread+0xc8/0xd8 ret_from_fork+0x10/0x20This issue has not been identified earlier because tests were done ona device with SMP disabled and so spinlocks were actually NOPs.Now use spin_(un)lock_bh for TX queue related locking to avoid executionof softirq work synchronously that would lead to a deadlock. Consider specifically these CWEs: CWE-863 CWE-667 CWE-833 CWE-413 CWE-401 CWE-1285 CWE-755 CWE-1233",
  "keyphrases": {
    "original_query": "In the Linux kernel, the following vulnerability has been resolvednet ks8851 Fix deadlock with the SPI chip variantWhen SMP is enabled and spinlocks are actually functional then there isa deadlock with the statelock spinlock between ks8851_start_xmit_spiand ks8851_irq watchdog BUG soft lockup - CPU#0 stuck for 27s! call trace queued_spin_lock_slowpath+0x100/0x284 do_raw_spin_lock+0x34/0x44 ks8851_start_xmit_spi+0x30/0xb8 ks8851_start_xmit+0x14/0x20 netdev_start_xmit+0x40/0x6c dev_hard_start_xmit+0x6c/0xbc sch_direct_xmit+0xa4/0x22c __qdisc_run+0x138/0x3fc qdisc_run+0x24/0x3c net_tx_action+0xf8/0x130 handle_softirqs+0x1ac/0x1f0 __do_softirq+0x14/0x20 ____do_softirq+0x10/0x1c call_on_irq_stack+0x3c/0x58 do_softirq_own_stack+0x1c/0x28 __irq_exit_rcu+0x54/0x9c irq_exit_rcu+0x10/0x1c el1_interrupt+0x38/0x50 el1h_64_irq_handler+0x18/0x24 el1h_64_irq+0x64/0x68 __netif_schedule+0x6c/0x80 netif_tx_wake_queue+0x38/0x48 ks8851_irq+0xb8/0x2c8 irq_thread_fn+0x2c/0x74 irq_thread+0x10c/0x1b0 kthread+0xc8/0xd8 ret_from_fork+0x10/0x20This issue has not been identified earlier because tests were done ona device with SMP disabled and so spinlocks were actually NOPs.Now use spin_(un)lock_bh for TX queue related locking to avoid executionof softirq work synchronously that would lead to a deadlock.",
    "enhanced_query": "In the Linux kernel, the following vulnerability has been resolvednet ks8851 Fix deadlock with the SPI chip variantWhen SMP is enabled and spinlocks are actually functional then there isa deadlock with the statelock spinlock between ks8851_start_xmit_spiand ks8851_irq watchdog BUG soft lockup - CPU#0 stuck for 27s! call trace queued_spin_lock_slowpath+0x100/0x284 do_raw_spin_lock+0x34/0x44 ks8851_start_xmit_spi+0x30/0xb8 ks8851_start_xmit+0x14/0x20 netdev_start_xmit+0x40/0x6c dev_hard_start_xmit+0x6c/0xbc sch_direct_xmit+0xa4/0x22c __qdisc_run+0x138/0x3fc qdisc_run+0x24/0x3c net_tx_action+0xf8/0x130 handle_softirqs+0x1ac/0x1f0 __do_softirq+0x14/0x20 ____do_softirq+0x10/0x1c call_on_irq_stack+0x3c/0x58 do_softirq_own_stack+0x1c/0x28 __irq_exit_rcu+0x54/0x9c irq_exit_rcu+0x10/0x1c el1_interrupt+0x38/0x50 el1h_64_irq_handler+0x18/0x24 el1h_64_irq+0x64/0x68 __netif_schedule+0x6c/0x80 netif_tx_wake_queue+0x38/0x48 ks8851_irq+0xb8/0x2c8 irq_thread_fn+0x2c/0x74 irq_thread+0x10c/0x1b0 kthread+0xc8/0xd8 ret_from_fork+0x10/0x20This issue has not been identified earlier because tests were done ona device with SMP disabled and so spinlocks were actually NOPs.Now use spin_(un)lock_bh for TX queue related locking to avoid executionof softirq work synchronously that would lead to a deadlock. Consider specifically these CWEs: CWE-863 CWE-667 CWE-833 CWE-413 CWE-401 CWE-1285 CWE-755 CWE-1233",
    "cwe_mentions": [
      "CWE-863",
      "CWE-667",
      "CWE-833",
      "CWE-413",
      "CWE-401",
      "CWE-1285",
      "CWE-755",
      "CWE-1233"
    ],
    "search_time": 2.7412655353546143
  },
  "timestamp": "2025-07-13 12:49:54",
  "cve_id": "CVE-2024-41036",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "390",
      "name": "Detection of Error Condition Without Action",
      "type": "base",
      "score": 2.8651999999999997,
      "relationship_count": 0
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "type": "Base",
      "score": 1.730435767325975,
      "relationship_count": 0
    },
    {
      "cwe_id": "413",
      "name": "Improper Resource Locking",
      "type": "Base",
      "score": 1.7171119678498905,
      "relationship_count": 0
    },
    {
      "cwe_id": "1233",
      "name": "Security-Sensitive Hardware Controls with Missing Lock Bit Protection",
      "type": "Base",
      "score": 1.710291182134454,
      "relationship_count": 0
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "type": "Base",
      "score": 1.5026575789845533,
      "relationship_count": 0
    },
    {
      "cwe_id": "600",
      "name": "Uncaught Exception in Servlet ",
      "type": "variant",
      "score": 1.3747200000000002,
      "relationship_count": 0
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "type": "class",
      "score": 1.192,
      "relationship_count": 0
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "type": "Class",
      "score": 1.0797435084730032,
      "relationship_count": 0
    },
    {
      "cwe_id": "755",
      "name": "Improper Handling of Exceptional Conditions",
      "type": "Class",
      "score": 1.027334610739104,
      "relationship_count": 0
    },
    {
      "cwe_id": "804",
      "name": "Guessable CAPTCHA",
      "type": "base",
      "score": 1.0062,
      "relationship_count": 0
    },
    {
      "cwe_id": "639",
      "name": "Authorization Bypass Through User-Controlled Key",
      "type": "base",
      "score": 1.0062,
      "relationship_count": 0
    },
    {
      "cwe_id": "551",
      "name": "Incorrect Behavior Order: Authorization Before Parsing and Canonicalization",
      "type": "base",
      "score": 1.0062,
      "relationship_count": 0
    },
    {
      "cwe_id": "1244",
      "name": "Internal Asset Exposed to Unsafe Debug Access Level or State",
      "type": "base",
      "score": 1.0062,
      "relationship_count": 0
    },
    {
      "cwe_id": "274",
      "name": "Improper Handling of Insufficient Privileges",
      "type": "base",
      "score": 1.0062,
      "relationship_count": 0
    },
    {
      "cwe_id": "832",
      "name": "Unlock of a Resource that is not Locked",
      "type": "base",
      "score": 1.0062,
      "relationship_count": 0
    },
    {
      "cwe_id": "765",
      "name": "Multiple Unlocks of a Critical Resource",
      "type": "base",
      "score": 1.0062,
      "relationship_count": 0
    },
    {
      "cwe_id": "764",
      "name": "Multiple Locks of a Critical Resource",
      "type": "base",
      "score": 1.0062,
      "relationship_count": 0
    },
    {
      "cwe_id": "609",
      "name": "Double-Checked Locking",
      "type": "base",
      "score": 1.0062,
      "relationship_count": 0
    },
    {
      "cwe_id": "414",
      "name": "Missing Lock Check",
      "type": "base",
      "score": 1.0062,
      "relationship_count": 0
    },
    {
      "cwe_id": "412",
      "name": "Unrestricted Externally Accessible Lock",
      "type": "base",
      "score": 1.0062,
      "relationship_count": 0
    }
  ]
}