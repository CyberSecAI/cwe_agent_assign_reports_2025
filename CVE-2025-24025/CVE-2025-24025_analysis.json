{
  "cve_id": "CVE-2025-24025",
  "description": "Coolify is an open-source and self-hostable tool for managing servers, applications, and databases. Prior to version 4.0.0-beta.380, the tags page allows users to search for tags. If the search does not return any results, the query gets reflected on the error modal, which leads to **cross-site scripting**. Version 4.0.0-beta.380 fixes the issue.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "cross-site scripting",
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": "Coolify",
    "version": "prior to 4.0.0-beta.380",
    "component": "tags page"
  },
  "reference_content": "Root cause of vulnerability:\nThe tags page reflects the search query in an error modal when no results are found, leading to XSS.\n\nWeaknesses/vulnerabilities present:\n- Reflected Cross-Site Scripting (XSS) - CWE-116\n\nImpact of exploitation:\n- XSS\n\nAttack vectors:\n- Searching for tags that yield no results.\n\nRequired attacker capabilities/position:\n- An attacker can inject malicious script through a crafted tag search query.\n\nMitigation or fix:\n- Upgrade to version v4.0.0-beta.361 or later.\n\nThis content provides more detail than the official CVE description by specifying the affected component (tags page), the exact scenario leading to the vulnerability (no search results), and the mitigation (upgrade to a specific version).",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Allowed | Primary CWE: This is the root cause of the vulnerability, as user-controllable input is not neutralized before being used in a web page. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship is that CWE-79 is a Base level CWE, which is a preferred level of abstraction. Many other CWEs are related, but less specific. For example:\n  - CWE-80 is a Variant of CWE-79 and more specific, but does not fit as well\n  - CWE-116 is a Class of CWE-79 and less specific.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe80[\"CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n    \n    cwe80 -->|CHILDOF| cwe79\n    cwe116 -->|PARENTOF| cwe79\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe79 primary\n    class cwe80,cwe116 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **improper neutralization** of user input on the tags page. When a search query returns no results, this un-neutralized input is reflected in an error message, leading to **Cross-Site Scripting (XSS)**.\n  - Root Cause: **Improper Neutralization of Input**\n  - Weakness: Reflected XSS\n\n## Summary of Analysis\nThe vulnerability description clearly states that the tags page reflects the search query in an error modal when no results are found, leading to XSS. The key phrase is \"**cross-site scripting**\". The CVE Reference Links Content Summary explicitly mentions \"Reflected Cross-Site Scripting (XSS) - CWE-116\".\n\nThe Retriever Results identify CWE-79, CWE-116, and CWE-80 as top candidates.\n\nCWE-79, \"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\", is the most appropriate because it directly addresses the root cause: the product does not neutralize user-controllable input before placing it in a web page. It is a Base level CWE, which is preferred.\n\nCWE-80, \"Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\", is a Variant of CWE-79, but is too specific. The description focuses on script-related HTML tags, but the vulnerability description doesn't specify that the XSS is limited to script-related tags only.\n\nCWE-116, \"Improper Encoding or Escaping of Output\", is a Class level CWE and less specific than CWE-79. While encoding/escaping is a common mitigation for XSS, the core issue is the lack of neutralization of input.\n\nTherefore, CWE-79 is the most accurate and specific CWE for this vulnerability.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Allowed | Primary CWE: This is the root cause of the vulnerability, as user-controllable input is not neutralized before being used in a web page. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship is that CWE-79 is a Base level CWE, which is a preferred level of abstraction. Many other CWEs are related, but less specific. For example:\n  - CWE-80 is a Variant of CWE-79 and more specific, but does not fit as well\n  - CWE-116 is a Class of CWE-79 and less specific.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe80[\"CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n    \n    cwe80 -->|CHILDOF| cwe79\n    cwe116 -->|PARENTOF| cwe79\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe79 primary\n    class cwe80,cwe116 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **improper neutralization** of user input on the tags page. When a search query returns no results, this un-neutralized input is reflected in an error message, leading to **Cross-Site Scripting (XSS)**.\n  - Root Cause: **Improper Neutralization of Input**\n  - Weakness: Reflected XSS\n\n## Summary of Analysis\nThe vulnerability description clearly states that the tags page reflects the search query in an error modal when no results are found, leading to XSS. The key phrase is \"**cross-site scripting**\". The CVE Reference Links Content Summary explicitly mentions \"Reflected Cross-Site Scripting (XSS) - CWE-116\".\n\nThe Retriever Results identify CWE-79, CWE-116, and CWE-80 as top candidates.\n\nCWE-79, \"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\", is the most appropriate because it directly addresses the root cause: the product does not neutralize user-controllable input before placing it in a web page. It is a Base level CWE, which is preferred.\n\nCWE-80, \"Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\", is a Variant of CWE-79, but is too specific. The description focuses on script-related HTML tags, but the vulnerability description doesn't specify that the XSS is limited to script-related tags only.\n\nCWE-116, \"Improper Encoding or Escaping of Output\", is a Class level CWE and less specific than CWE-79. While encoding/escaping is a common mitigation for XSS, the core issue is the lack of neutralization of input.\n\nTherefore, CWE-79 is the most accurate and specific CWE for this vulnerability.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-79:**\n- 79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')) - ROOT\n\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 441.17137294989027
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 351.5237008638034
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 350.4167415017231
    },
    {
      "metadata": {
        "doc_id": "80",
        "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
        "source": "sparse"
      },
      "similarity": 343.067598447318
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 315.4259094429462
    },
    {
      "metadata": {
        "doc_id": "942",
        "name": "Permissive Cross-domain Policy with Untrusted Domains",
        "source": "sparse"
      },
      "similarity": 314.5023622233773
    },
    {
      "metadata": {
        "doc_id": "918",
        "name": "Server-Side Request Forgery (SSRF)",
        "source": "sparse"
      },
      "similarity": 310.59731004271487
    },
    {
      "metadata": {
        "doc_id": "1004",
        "name": "Sensitive Cookie Without 'HttpOnly' Flag",
        "source": "sparse"
      },
      "similarity": 308.40892858539763
    },
    {
      "metadata": {
        "doc_id": "790",
        "name": "Improper Filtering of Special Elements",
        "type": "Class",
        "original_content": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
        "keyphrase_source": "weakness:cross-site scripting",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.4043857165809677
          }
        }
      },
      "similarity": 0.4043857165809677
    },
    {
      "doc_id": "494",
      "text": "CWE-494: Download of Code Without Integrity Check",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "494",
        "name": "Download of Code Without Integrity Check",
        "type": "base",
        "original_content": "CWE-494: Download of Code Without Integrity Check",
        "relationships": [
          {
            "source_id": "494",
            "target_id": "79",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "494",
            "target_id": "669",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "494",
            "target_id": "669",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "494",
            "target_id": "345",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "494",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "669",
            "target_id": "494",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "345",
            "target_id": "494",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "79",
                  "494",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "79"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "79",
                  "494",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "79"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-79",
      "CWE-116",
      "CWE-80"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}