{
  "query": "z2d is a pure Zig 2D graphics library. Versions of z2d after `0.5.1` and up to and including `0.6.0`, when writing from one surface to another using `z2d.compositor.StrideCompositor.run`, and higher-level operations when the anti-aliasing mode is set to `.default` (such as `Context.fill`, `Context.stroke`, `painter.fill`, and `painter.stroke`), the source surface can be completely out-of-bounds on the x-axis, but not on the y-axis, by way of a negative offset. This results in an overflow of the value controlling the length of the stride. In non-safe optimization modes (consumers compiling with `ReleaseFast` or `ReleaseSmall`), this could potentially lead to invalid memory accesses or corruption. This issue is patched in version `0.6.1`. Users on an untagged version after `v0.5.1` and before `v0.6.1` are advised to update to address the vulnerability. Those still on Zig `0.13.0` are recommended to downgrade to `v0.5.1`.",
  "count": 12,
  "results": [
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "abstraction": "Base",
      "score": 871.1124653986078,
      "original_score": 871.1124653986078,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "abstraction": "Base",
      "score": 861.2353858864951,
      "original_score": 861.2353858864951,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "122",
      "name": "Heap-based Buffer Overflow",
      "abstraction": "Variant",
      "score": 848.8184488909282,
      "original_score": 848.8184488909282,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 844.9230805764571,
      "original_score": 844.9230805764571,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "787",
      "name": "Out-of-bounds Write",
      "abstraction": "Base",
      "score": 817.3258836092875,
      "original_score": 817.3258836092875,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "681",
      "name": "Incorrect Conversion between Numeric Types",
      "abstraction": "Base",
      "score": 815.5481306230979,
      "original_score": 815.5481306230979,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "20",
      "name": "Improper Input Validation",
      "abstraction": "Class",
      "score": 804.5286451568435,
      "original_score": 804.5286451568435,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "abstraction": "Variant",
      "score": 801.1052156107874,
      "original_score": 801.1052156107874,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "abstraction": "Class",
      "score": 797.5992415255068,
      "original_score": 797.5992415255068,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "126",
      "name": "Buffer Over-read",
      "abstraction": "Variant",
      "score": 794.2517636909963,
      "original_score": 794.2517636909963,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "abstraction": "Base",
      "score": 262.33815164756834,
      "original_score": 262.33815164756834,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "923",
      "name": "Improper Restriction of Communication Channel to Intended Endpoints",
      "abstraction": "Class",
      "score": 260.47403332074134,
      "original_score": 260.47403332074134,
      "mapping_usage": "Allowed-with-Review"
    }
  ],
  "statistics": {
    "min": 260.47403332074134,
    "max": 871.1124653986078,
    "mean": 731.6050371614432,
    "median": 810.0383878899706,
    "count": 12
  }
}