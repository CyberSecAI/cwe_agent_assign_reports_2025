{
  "cve_id": "CVE-2025-32390",
  "description": "EspoCRM is a free, open-source customer relationship management platform. Prior to version 9.0.8, HTML Injection in Knowledge Base (KB) articles leads to complete page defacement imitating the login page. Authenticated users with the read knowledge article privilege can browse to the KB article and if they submit their credentials, they get captured in plain text. The vulnerability is allowed by **overly permissive HTML editing being allowed on the KB articles**. Any authenticated user with the privilege to read KB articles is impacted. In an enterprise with multiple applications, the malicious KB article could be edited to match the login pages of other applications, which would make it useful for credential harvesting against other applications as well. Version 9.0.8 contains a patch for the issue.",
  "key_phrases": {
    "component": "Knowledge Base (KB) articles",
    "rootcause": "overly permissive HTML editing being allowed on the KB articles",
    "vector": "browse to KB article and submit credentials",
    "weakness": "HTML injection",
    "product": "EspoCRM",
    "impact": "capture credentials in plain text, credential harvesting, page defacement",
    "attacker": "authenticated users with the read knowledge article privilege",
    "version": "prior to version 9.0.8"
  },
  "reference_content": "Here's an analysis of the provided content based on the guidelines:\n\n**Content from github.com_257d159b_20250624_184155.html**\n\n*   **Relates to CVE?** Yes.\n*   **Vulnerability Information:**\n    *   **Root cause of vulnerability:** Overly permissive HTML editing is allowed on Knowledge Base (KB) articles.\n    *   **Weaknesses/vulnerabilities present:** HTML Injection. The specific CWE is CWE-74.\n    *   **Impact of exploitation:** Complete page defacement, imitating a login page, leading to the capture of user credentials in plain text (account takeover).\n    *   **Attack vectors:** An attacker with the privilege to create KB articles creates an article with a malicious HTML payload.  Authenticated users with read KB article privileges browse to the article and submit their credentials on the crafted login page.\n    *   **Required attacker capabilities/position:** An attacker must have the privilege to create articles and knowledge of HTML.\n    *   **Mitigation or fix:**  The vulnerability is fixed in version 9.0.8\n    *   **More detail than official CVE description:** Yes, this provides a Proof of Concept (PoC).\n\n**Content from github.com_aa0ec2f3_20250624_184153.html**\n\n*   **Relates to CVE?** Yes.\n*   **Vulnerability Information:**\n    *   **Mitigation or fix:** This content details a commit that improves HTML sanitization.  Specifically, it removes the 'action' attribute from `<form>` elements, changes the `type` attribute of `<button>` elements with type \"submit\" to \"button\", and restricts certain CSS `style` properties, particularly `position: absolute|fixed|sticky`.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Allowed | Primary CWE: The root cause is **overly permissive HTML editing being allowed on the KB articles**, leading to **HTML Injection**. |\n| CWE-256 | Plaintext Storage of a Password | 0.7 | Base | Allowed | Secondary Candidate: Credentials are captured in plain text. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship is that CWE-79 is a base level weakness that directly addresses the improper neutralization of input, leading to cross-site scripting. CWE-256 is included because the impact of the **HTML Injection** is the capture of credentials in plain text.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe256[\"CWE-256: Plaintext Storage of a Password\"]\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe79 primary\n    class cwe256 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **overly permissive HTML editing**, which allows for **HTML injection (CWE-79)**. This leads to a crafted login page that captures credentials in plain text **(CWE-256)**.\n\n## Summary of Analysis\nThe analysis is based on the vulnerability description and the CVE reference links content summary, both of which point to **HTML Injection** as the main weakness. The root cause is **overly permissive HTML editing**. The most relevant CWE is CWE-79, which directly addresses this weakness. Credentials being captured in plain text is a consequence of the injection and is classified as CWE-256.\n\nThe evidence for CWE-79 is:\n*   \"**overly permissive HTML editing being allowed on the KB articles**\"\n*   \"**HTML Injection** in Knowledge Base (KB) articles leads to complete page defacement imitating the login page.\"\n*   \"Authenticated users with the read knowledge article privilege can browse to the KB article and if they submit their credentials, they get captured in plain text.\"\n\nThe evidence for CWE-256 is:\n*   \"...they submit their credentials, they get captured in plain text.\"\n\nCWE-79 is selected because it is at the base level of abstraction and accurately represents the **HTML Injection** vulnerability. CWE-256 is included because it describes the impact of the vulnerability (credentials captured in plain text).\n\nOther CWEs considered but not used:\n\n*   CWE-74 (Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')): This is a more general injection CWE. Because the specific type of injection is **HTML Injection**, CWE-79 is more specific and appropriate.\n*   CWE-863 (Incorrect Authorization), CWE-862 (Missing Authorization), CWE-285 (Improper Authorization): While there is a privilege to read KB articles, the vulnerability is not due to an authorization issue. It is due to **improper neutralization of input**.\n*   CWE-1336 (Improper Neutralization of Special Elements Used in a Template Engine): Not directly related to the stated **HTML Injection**\n*   CWE-116 (Improper Encoding or Escaping of Output): While encoding/escaping could mitigate XSS, the primary issue is the lack of proper neutralization.\n*   CWE-522 (Insufficiently Protected Credentials): This is related to storing credentials, but the primary vulnerability isn't about storage, it's the capture in plain text.\n*   CWE-352 (Cross-Site Request Forgery (CSRF)): Not applicable, as the vulnerability is not related to CSRF.\n*   CWE-184 (Incomplete List of Disallowed Inputs): The problem is not an incomplete list, but rather that HTML editing is **overly permissive**.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Allowed | Primary CWE: The root cause is **overly permissive HTML editing being allowed on the KB articles**, leading to **HTML Injection**. |\n| CWE-256 | Plaintext Storage of a Password | 0.7 | Base | Allowed | Secondary Candidate: Credentials are captured in plain text. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship is that CWE-79 is a base level weakness that directly addresses the improper neutralization of input, leading to cross-site scripting. CWE-256 is included because the impact of the **HTML Injection** is the capture of credentials in plain text.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe256[\"CWE-256: Plaintext Storage of a Password\"]\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe79 primary\n    class cwe256 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **overly permissive HTML editing**, which allows for **HTML injection (CWE-79)**. This leads to a crafted login page that captures credentials in plain text **(CWE-256)**.\n\n## Summary of Analysis\nThe analysis is based on the vulnerability description and the CVE reference links content summary, both of which point to **HTML Injection** as the main weakness. The root cause is **overly permissive HTML editing**. The most relevant CWE is CWE-79, which directly addresses this weakness. Credentials being captured in plain text is a consequence of the injection and is classified as CWE-256.\n\nThe evidence for CWE-79 is:\n*   \"**overly permissive HTML editing being allowed on the KB articles**\"\n*   \"**HTML Injection** in Knowledge Base (KB) articles leads to complete page defacement imitating the login page.\"\n*   \"Authenticated users with the read knowledge article privilege can browse to the KB article and if they submit their credentials, they get captured in plain text.\"\n\nThe evidence for CWE-256 is:\n*   \"...they submit their credentials, they get captured in plain text.\"\n\nCWE-79 is selected because it is at the base level of abstraction and accurately represents the **HTML Injection** vulnerability. CWE-256 is included because it describes the impact of the vulnerability (credentials captured in plain text).\n\nOther CWEs considered but not used:\n\n*   CWE-74 (Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')): This is a more general injection CWE. Because the specific type of injection is **HTML Injection**, CWE-79 is more specific and appropriate.\n*   CWE-863 (Incorrect Authorization), CWE-862 (Missing Authorization), CWE-285 (Improper Authorization): While there is a privilege to read KB articles, the vulnerability is not due to an authorization issue. It is due to **improper neutralization of input**.\n*   CWE-1336 (Improper Neutralization of Special Elements Used in a Template Engine): Not directly related to the stated **HTML Injection**\n*   CWE-116 (Improper Encoding or Escaping of Output): While encoding/escaping could mitigate XSS, the primary issue is the lack of proper neutralization.\n*   CWE-522 (Insufficiently Protected Credentials): This is related to storing credentials, but the primary vulnerability isn't about storage, it's the capture in plain text.\n*   CWE-352 (Cross-Site Request Forgery (CSRF)): Not applicable, as the vulnerability is not related to CSRF.\n*   CWE-184 (Incomplete List of Disallowed Inputs): The problem is not an incomplete list, but rather that HTML editing is **overly permissive**.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: HTML Injection",
        "match_reason": "exact_match_whole_phrase"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 697.0893416701992
    },
    {
      "metadata": {
        "doc_id": "256",
        "name": "Plaintext Storage of a Password",
        "source": "sparse"
      },
      "similarity": 674.0142641120924
    },
    {
      "metadata": {
        "doc_id": "1336",
        "name": "Improper Neutralization of Special Elements Used in a Template Engine",
        "source": "sparse"
      },
      "similarity": 673.8277361607679
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 669.6690790458354
    },
    {
      "metadata": {
        "doc_id": "522",
        "name": "Insufficiently Protected Credentials",
        "source": "sparse"
      },
      "similarity": 656.8803641762444
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 652.6613397977861
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 641.5459808574008
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "type": "Compound",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_source": "rootcause:overly permissive HTML editing being allowed on the KB articles",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.",
          "comments": "While attack-oriented composites are supported in CWE, they have not been a focus of research. There is a chance that future research or CWE scope clarifications will change or deprecate them. Perform root-cause analysis to determine if other weaknesses allow CSRF attacks to occur, and map to those weaknesses. For example, predictable CSRF tokens might allow bypass of CSRF protection mechanisms; if this occurs, they might be better characterized as randomness/predictability weaknesses.",
          "reasons": [
            "Other"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "retriever_count": 3,
          "normalized_scores": {
            "dense": 0.5506541862917702,
            "sparse": 641.0899120027337,
            "graph": 1.5308088387304823
          }
        }
      },
      "similarity": 0.5506541862917702
    },
    {
      "doc_id": "184",
      "text": "CWE-184: Incomplete List of Disallowed Inputs",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "184",
        "name": "Incomplete List of Disallowed Inputs",
        "type": "base",
        "original_content": "CWE-184: Incomplete List of Disallowed Inputs",
        "relationships": [
          {
            "source_id": "184",
            "target_id": "692",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "434",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "78",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "79",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "1023",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "693",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "86",
            "target_id": "184",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "78",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "693",
            "target_id": "184",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "692",
            "target_id": "184",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "692",
            "target_id": "184",
            "label": "STARTSWITH",
            "properties": {
              "view_id": "709"
            }
          },
          {
            "source_id": "625",
            "target_id": "184",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "434",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "186",
            "target_id": "184",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1023",
            "target_id": "184",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "79",
                  "184",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "79"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "79",
                  "184",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "79"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "184",
                  "79",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "79"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-116",
      "CWE-862",
      "CWE-79",
      "CWE-1336",
      "CWE-352",
      "CWE-184",
      "CWE-74",
      "CWE-256",
      "CWE-285",
      "CWE-522"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}