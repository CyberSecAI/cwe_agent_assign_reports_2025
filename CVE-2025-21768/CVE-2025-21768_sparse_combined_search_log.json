{
  "method": "sparse_combined",
  "query": "In the Linux kernel, the following vulnerability has been resolved net ipv6 fix dst ref loops in rpl, seg6 and ioam6 lwtunnels Some lwtunnels have a dst cache for post-transformation dst. If the packet destination did not change we may end up recording a reference to the lwtunnel in its own cache, and the lwtunnel state will never be freed. Discovered by the ioam6.sh test, kmemleak was recently fixed to catch per-cpu memory leaks. Im not sure if rpl and seg6 can actually hit this, but in principle I dont see why not.",
  "keyphrases": {
    "rootcause": [
      "dst ref loops"
    ]
  },
  "timestamp": "2025-07-12T09:54:56.352538",
  "results_count": 11,
  "results_summary": [
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 425.09075574381075
    },
    {
      "doc_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "score": 418.06880196548553
    },
    {
      "doc_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "score": 416.2716460904429
    },
    {
      "doc_id": "201",
      "name": "Insertion of Sensitive Information Into Sent Data",
      "score": 409.8447843816751
    },
    {
      "doc_id": "923",
      "name": "Improper Restriction of Communication Channel to Intended Endpoints",
      "score": 405.26544596174324
    }
  ]
}