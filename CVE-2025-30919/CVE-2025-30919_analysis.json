{
  "cve_id": "CVE-2025-30919",
  "description": "**Cross-Site Request Forgery** (CSRF) vulnerability in Store Locator Widgets Store Locator Widget allows Stored XSS. This issue affects Store Locator Widget from n/a through 20200131.",
  "key_phrases": {
    "component": "Store Locator Widget",
    "rootcause": "Cross-Site Request Forgery",
    "vector": "",
    "weakness": "Cross-Site Scripting",
    "product": "Store Locator Widgets",
    "impact": "Stored XSS, Stored XSS",
    "attacker": "",
    "version": "n/a through 20200131"
  },
  "reference_content": "## Analysis of CVE-2025-30919 Content\n\nThe content relates to CVE-2025-30919 as indicated by the CVE ID present in the document. It provides more detail than the placeholder CVE description.\n\n**Root cause of vulnerability:**\n\nThe vulnerability is a Cross-Site Request Forgery (CSRF). The content doesn't specify the exact root cause within the plugin's code, only that it exists.\n\n**Weaknesses/vulnerabilities present:**\n\n*   Cross-Site Request Forgery (CSRF)\n\n**Impact of exploitation:**\n\nA malicious actor can force higher privileged users to execute unwanted actions under their current authentication. The specific impact varies case by case.\n\n**Attack vectors:**\n\nThe attack vector is through Cross-Site Request Forgery, meaning an attacker would need to trick a logged-in user into performing an action on the vulnerable website.\n\n**Required attacker capabilities/position:**\n\n*   Unauthenticated - The attacker does not need to be authenticated.\n*   Ability to create a malicious website or inject malicious code into a trusted site.\n*   Ability to trick a logged-in user into visiting the malicious site or clicking a malicious link.\n\n**Mitigation or fix:**\n\n*   Update to version 2025r3 or later.\n*   Patchstack users can enable auto-updates for vulnerable plugins.\n\n**Additional Details:**\n\n*   **Software:** Store Locator Widget (WordPress Plugin)\n*   **Vulnerable versions:** <= 2025r2\n*   **Fixed in:** 2025r3\n*   **CVSS Score:** 7.1 (Low severity)\n*   **OWASP Top 10:** A5: Broken Access Control\n*   **Classification:** Cross Site Request Forgery (CSRF)\n*   **Reported by:** Abdi Pranata\n*   **Published by:** Patchstack",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 0.9 | Compound | Allowed | Primary CWE.  The vulnerability description and CVE summary explicitly mention CSRF as the root cause. |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.9 | Base | Allowed | Secondary CWE. The vulnerability description mentions Stored XSS as the impact of the CSRF. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship is that the **Cross-Site Request Forgery (CSRF)** vulnerability (CWE-352) allows an attacker to perform actions on behalf of a user, which in this case leads to **Cross-site Scripting (XSS)** (CWE-79) by injecting malicious scripts.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe352 -->|CANPRECEDE| cwe79\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **Cross-Site Request Forgery (CSRF)** (CWE-352), which allows an attacker to force a user to perform unwanted actions. This leads to **Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')** (CWE-79) because the forced actions inject malicious scripts into the web page.\n\n## Summary of Analysis\nThe initial assessment identifies two key weaknesses: **Cross-Site Request Forgery (CSRF)** and **Cross-site Scripting (XSS)**.\n\nThe selection of CWE-352 as the primary CWE is based on the fact that the vulnerability description and CVE summary explicitly identify **Cross-Site Request Forgery** as the root cause. The description mentions a **Cross-Site Request Forgery** (CSRF) vulnerability in Store Locator Widget which leads to Stored XSS.\n\nCWE-79 is selected as a secondary CWE because the successful exploitation of the **CSRF** vulnerability leads to Stored XSS. This aligns with CWE-79's description of **Improper Neutralization of Input During Web Page Generation**.\n\nThe evidence directly supports these classifications. The graph relationships show that CSRF can precede XSS, where a successful CSRF attack can lead to the injection of malicious scripts into a web page.\n\nThese CWEs are at the optimal level of specificity as they accurately represent the root cause and impact of the vulnerability.\n\nOther CWEs Considered but Not Used:\n\n*   CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') - While SQL Injection is a common web vulnerability, there is no evidence in the provided description or summary to suggest its presence.\n*   CWE-918: Server-Side Request Forgery (SSRF) - Similar to SQL Injection, there is no evidence to suggest that this vulnerability is present.\n*   CWE-601: URL Redirection to Untrusted Site ('Open Redirect') - This is not directly related to the described vulnerability, which focuses on CSRF leading to XSS.\n*   CWE-1275: Sensitive Cookie with Improper SameSite Attribute - While cookies are relevant to web security, there is no specific mention of issues with the SameSite attribute in the description.\n*   CWE-425: Direct Request ('Forced Browsing') - This is about bypassing authorization, which isn't the primary issue here.",
  "analysis_with_relationships": "# Summary\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 0.9 | Compound | Allowed | Primary CWE.  The vulnerability description and CVE summary explicitly mention CSRF as the root cause. |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.9 | Base | Allowed | Secondary CWE. The vulnerability description mentions Stored XSS as the impact of the CSRF. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship is that the **Cross-Site Request Forgery (CSRF)** vulnerability (CWE-352) allows an attacker to perform actions on behalf of a user, which in this case leads to **Cross-site Scripting (XSS)** (CWE-79) by injecting malicious scripts.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe352 -->|CANPRECEDE| cwe79\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **Cross-Site Request Forgery (CSRF)** (CWE-352), which allows an attacker to force a user to perform unwanted actions. This leads to **Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')** (CWE-79) because the forced actions inject malicious scripts into the web page.\n\n## Summary of Analysis\nThe initial assessment identifies two key weaknesses: **Cross-Site Request Forgery (CSRF)** and **Cross-site Scripting (XSS)**.\n\nThe selection of CWE-352 as the primary CWE is based on the fact that the vulnerability description and CVE summary explicitly identify **Cross-Site Request Forgery** as the root cause. The description mentions a **Cross-Site Request Forgery** (CSRF) vulnerability in Store Locator Widget which leads to Stored XSS.\n\nCWE-79 is selected as a secondary CWE because the successful exploitation of the **CSRF** vulnerability leads to Stored XSS. This aligns with CWE-79's description of **Improper Neutralization of Input During Web Page Generation**.\n\nThe evidence directly supports these classifications. The graph relationships show that CSRF can precede XSS, where a successful CSRF attack can lead to the injection of malicious scripts into a web page.\n\nThese CWEs are at the optimal level of specificity as they accurately represent the root cause and impact of the vulnerability.\n\nOther CWEs Considered but Not Used:\n\n*   CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') - While SQL Injection is a common web vulnerability, there is no evidence in the provided description or summary to suggest its presence.\n*   CWE-918: Server-Side Request Forgery (SSRF) - Similar to SQL Injection, there is no evidence to suggest that this vulnerability is present.\n*   CWE-601: URL Redirection to Untrusted Site ('Open Redirect') - This is not directly related to the described vulnerability, which focuses on CSRF leading to XSS.\n*   CWE-1275: Sensitive Cookie with Improper SameSite Attribute - While cookies are relevant to web security, there is no specific mention of issues with the SameSite attribute in the description.\n*   CWE-425: Direct Request ('Forced Browsing') - This is about bypassing authorization, which isn't the primary issue here.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n**Chain starting from CWE-601:**\n- 601 (URL Redirection to Untrusted Site ('Open Redirect')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 252.6015160741462
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 184.38005497632992
    },
    {
      "metadata": {
        "doc_id": "1004",
        "name": "Sensitive Cookie Without 'HttpOnly' Flag",
        "source": "sparse"
      },
      "similarity": 181.54447477950532
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 179.78780563512035
    },
    {
      "metadata": {
        "doc_id": "918",
        "name": "Server-Side Request Forgery (SSRF)",
        "source": "sparse"
      },
      "similarity": 173.14694806053097
    },
    {
      "metadata": {
        "doc_id": "601",
        "name": "URL Redirection to Untrusted Site ('Open Redirect')",
        "source": "sparse"
      },
      "similarity": 163.1641708601543
    },
    {
      "metadata": {
        "doc_id": "830",
        "name": "Inclusion of Web Functionality from an Untrusted Source",
        "source": "sparse"
      },
      "similarity": 159.58397236754143
    },
    {
      "metadata": {
        "doc_id": "1275",
        "name": "Sensitive Cookie with Improper SameSite Attribute",
        "source": "sparse"
      },
      "similarity": 150.6562496029627
    },
    {
      "metadata": {
        "doc_id": "80",
        "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
        "type": "Variant",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.",
        "keyphrase_source": "weakness:Cross-Site Scripting",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5768757362601583,
            "sparse": 145.54395960900575
          }
        }
      },
      "similarity": 0.5768757362601583
    },
    {
      "doc_id": "425",
      "text": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
      "score": 0.6136547937293315,
      "metadata": {
        "doc_id": "425",
        "name": "Direct Request ('Forced Browsing')",
        "type": "Base",
        "extended_description": "Web applications susceptible to direct request attacks often make the false assumption that such resources can only be reached through a given navigation path and so only apply authorization at certain points in the path.",
        "alternate_terms": [
          "forced browsing"
        ],
        "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
        "relationships": [
          {
            "source_id": "425",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "424",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "288",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "862",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "425",
            "target_id": "862",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "862",
            "target_id": "425",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "424",
            "target_id": "425",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "288",
            "target_id": "425",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "source": "graph",
        "sources": [
          "vector",
          "graph"
        ],
        "vector_score": 0.6136547937293315,
        "graph_score": 3.4200400000000006,
        "score_components": {
          "relationship_chain": 0.6,
          "explicit_mention": 1.0,
          "abstraction_path": 0.9,
          "sequence_path": 0.5760000000000002
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "89",
                  "456",
                  "CANFOLLOW"
                ],
                [
                  "456",
                  "98",
                  "CANPRECEDE"
                ],
                [
                  "98",
                  "425",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.6,
              "type": "relationship_chain",
              "source": "89"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "79",
                  "184",
                  "CANFOLLOW"
                ],
                [
                  "184",
                  "98",
                  "CANPRECEDE"
                ],
                [
                  "98",
                  "425",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.5760000000000002,
              "type": "vulnerability_sequence_forward",
              "source": "79"
            }
          }
        },
        "is_explicit": true,
        "abstraction_level": "base",
        "position": "after",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5649221876302314,
            "graph": 2.297485917491733
          }
        }
      },
      "similarity": 2.297485917491733
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-601",
      "CWE-79",
      "CWE-352",
      "CWE-1275",
      "CWE-918",
      "CWE-425"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}