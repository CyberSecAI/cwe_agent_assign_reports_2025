{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved tracing Fix oob write in trace_seq_to_buffer() syzbot reported this bug ================================================================== BUG KASAN slab-out-of-bounds in trace_seq_to_buffer kernel/trace/trace.c1830 [inline] BUG KASAN slab-out-of-bounds in tracing_splice_read_pipe+0x6be/0xdd0 kernel/trace/trace.c6822 Write of size 4507 at addr ffff888032b6b000 by task syz.2.320/7260 CPU 1 UID 0 PID 7260 Comm syz.2.320 Not tainted 6.15.0-rc1-syzkaller-00301-g3bde70a2c827 #0 PREEMPT(full) Hardware name Google Google Compute Engine/Google Compute Engine, BIOS Google 02/12/2025 Call Trace __dump_stack lib/dump_stack.c94 [inline] dump_stack_lvl+0x116/0x1f0 lib/dump_stack.c120 print_address_description mm/kasan/report.c408 [inline] print_report+0xc3/0x670 mm/kasan/report.c521 kasan_report+0xe0/0x110 mm/kasan/report.c634 check_region_inline mm/kasan/generic.c183 [inline] kasan_check_range+0xef/0x1a0 mm/kasan/generic.c189 __asan_memcpy+0x3c/0x60 mm/kasan/shadow.c106 trace_seq_to_buffer kernel/trace/trace.c1830 [inline] tracing_splice_read_pipe+0x6be/0xdd0 kernel/trace/trace.c6822 .... ================================================================== It has been reported that trace_seq_to_buffer() tries to copy more data than PAGE_SIZE to buf. Therefore, to prevent this, we should use the smaller of trace_seq_used(&iter->seq) and PAGE_SIZE as an argument.",
  "keyphrases": {
    "weakness": [
      "slab-out-of-bounds"
    ]
  },
  "timestamp": "2025-07-14 21:55:09",
  "cve_id": "CVE-2025-37923",
  "result_count": 11,
  "results": [
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "score": 570.0638350880544,
      "search_source": "weakness:slab-out-of-bounds"
    },
    {
      "cwe_id": "787",
      "name": "Out-of-bounds Write",
      "score": 555.246934050608,
      "search_source": "weakness:slab-out-of-bounds"
    },
    {
      "cwe_id": "122",
      "name": "Heap-based Buffer Overflow",
      "score": 525.5348773402126,
      "search_source": "weakness:slab-out-of-bounds"
    },
    {
      "cwe_id": "843",
      "name": "Access of Resource Using Incompatible Type ('Type Confusion')",
      "score": 491.7292536745942,
      "search_source": "weakness:slab-out-of-bounds"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 487.5606733215131,
      "search_source": "weakness:slab-out-of-bounds"
    },
    {
      "cwe_id": "1323",
      "name": "Improper Management of Sensitive Trace Data",
      "score": 485.450819684751,
      "search_source": "weakness:slab-out-of-bounds"
    },
    {
      "cwe_id": "193",
      "name": "Off-by-one Error",
      "score": 484.7234617512667,
      "search_source": "weakness:slab-out-of-bounds"
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "score": 482.9747635418301,
      "search_source": "weakness:slab-out-of-bounds"
    },
    {
      "cwe_id": "248",
      "name": "Uncaught Exception",
      "score": 478.8558902057525,
      "search_source": "weakness:slab-out-of-bounds"
    },
    {
      "cwe_id": "119",
      "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
      "score": 476.7014181148082,
      "search_source": "weakness:slab-out-of-bounds"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 160.7104883873238,
      "search_source": "base_query"
    }
  ]
}