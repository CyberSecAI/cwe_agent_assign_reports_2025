{
  "method": "sparse_base",
  "query": "In the Linux kernel, the following vulnerability has been resolved tracing Fix oob write in trace_seq_to_buffer() syzbot reported this bug ================================================================== BUG KASAN slab-out-of-bounds in trace_seq_to_buffer kernel/trace/trace.c1830 [inline] BUG KASAN slab-out-of-bounds in tracing_splice_read_pipe+0x6be/0xdd0 kernel/trace/trace.c6822 Write of size 4507 at addr ffff888032b6b000 by task syz.2.320/7260 CPU 1 UID 0 PID 7260 Comm syz.2.320 Not tainted 6.15.0-rc1-syzkaller-00301-g3bde70a2c827 #0 PREEMPT(full) Hardware name Google Google Compute Engine/Google Compute Engine, BIOS Google 02/12/2025 Call Trace __dump_stack lib/dump_stack.c94 [inline] dump_stack_lvl+0x116/0x1f0 lib/dump_stack.c120 print_address_description mm/kasan/report.c408 [inline] print_report+0xc3/0x670 mm/kasan/report.c521 kasan_report+0xe0/0x110 mm/kasan/report.c634 check_region_inline mm/kasan/generic.c183 [inline] kasan_check_range+0xef/0x1a0 mm/kasan/generic.c189 __asan_memcpy+0x3c/0x60 mm/kasan/shadow.c106 trace_seq_to_buffer kernel/trace/trace.c1830 [inline] tracing_splice_read_pipe+0x6be/0xdd0 kernel/trace/trace.c6822 .... ================================================================== It has been reported that trace_seq_to_buffer() tries to copy more data than PAGE_SIZE to buf. Therefore, to prevent this, we should use the smaller of trace_seq_used(&iter->seq) and PAGE_SIZE as an argument.",
  "keyphrases": {
    "base_query": "In the Linux kernel, the following vulnerability has been resolved tracing Fix oob write in trace_seq_to_buffer() syzbot reported this bug ================================================================== BUG KASAN slab-out-of-bounds in trace_seq_to_buffer kernel/trace/trace.c1830 [inline] BUG KASAN slab-out-of-bounds in tracing_splice_read_pipe+0x6be/0xdd0 kernel/trace/trace.c6822 Write of size 4507 at addr ffff888032b6b000 by task syz.2.320/7260 CPU 1 UID 0 PID 7260 Comm syz.2.320 Not tainted 6.15.0-rc1-syzkaller-00301-g3bde70a2c827 #0 PREEMPT(full) Hardware name Google Google Compute Engine/Google Compute Engine, BIOS Google 02/12/2025 Call Trace __dump_stack lib/dump_stack.c94 [inline] dump_stack_lvl+0x116/0x1f0 lib/dump_stack.c120 print_address_description mm/kasan/report.c408 [inline] print_report+0xc3/0x670 mm/kasan/report.c521 kasan_report+0xe0/0x110 mm/kasan/report.c634 check_region_inline mm/kasan/generic.c183 [inline] kasan_check_range+0xef/0x1a0 mm/kasan/generic.c189 __asan_memcpy+0x3c/0x60 mm/kasan/shadow.c106 trace_seq_to_buffer kernel/trace/trace.c1830 [inline] tracing_splice_read_pipe+0x6be/0xdd0 kernel/trace/trace.c6822 .... ================================================================== It has been reported that trace_seq_to_buffer() tries to copy more data than PAGE_SIZE to buf. Therefore, to prevent this, we should use the smaller of trace_seq_used(&iter->seq) and PAGE_SIZE as an argument."
  },
  "timestamp": "2025-07-12T13:29:55.114755",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "125",
      "name": "Out-of-bounds Read",
      "score": 190.2970694025412
    },
    {
      "doc_id": "787",
      "name": "Out-of-bounds Write",
      "score": 186.48212570959308
    },
    {
      "doc_id": "122",
      "name": "Heap-based Buffer Overflow",
      "score": 177.0002997639846
    },
    {
      "doc_id": "1323",
      "name": "Improper Management of Sensitive Trace Data",
      "score": 170.0788638184632
    },
    {
      "doc_id": "843",
      "name": "Access of Resource Using Incompatible Type ('Type Confusion')",
      "score": 166.15315593346122
    }
  ]
}