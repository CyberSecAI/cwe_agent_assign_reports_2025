{
  "cve_id": "CVE-2025-24904",
  "description": "libsignal-service-rs is a Rust version of the libsignal-service-java library which implements the core functionality to communicate with Signal servers. Prior to commit 82d70f6720e762898f34ae76b0894b0297d9b2f8, **plaintext content envelopes could be injected** by a server or a malicious client, and may have been able to bypass the end-to-end encryption and authentication. The vulnerability is fixed per 82d70f6720e762898f34ae76b0894b0297d9b2f8. The `Metadata` struct contains an additional `was_encrypted` field, which breaks the API, but should be easily resolvable. No known workarounds are available.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "plaintext content envelopes could be injected",
    "impact": "bypass the end-to-end encryption and authentication",
    "vector": "",
    "attacker": "server or malicious client",
    "product": "libsignal-service-rs",
    "version": "Prior to commit 82d70f6720e762898f34ae76b0894b0297d9b2f8",
    "component": ""
  },
  "reference_content": "## CVE-2025-24904 Analysis\n\nThis content is directly related to CVE-2025-24904 and provides significantly more detail than the placeholder description.\n\n**Root cause of vulnerability:**\n\nPlaintext content envelopes can be injected by a server or a malicious client, potentially bypassing end-to-end encryption and authentication. The vulnerability stems from a lack of sanity checks on plaintext envelopes.\n\n**Weaknesses/vulnerabilities present:**\n\n*   Lack of input validation on envelope content.\n*   Potential for server or client-side injection of malicious plaintext.\n\n**Impact of exploitation:**\n\n*   Bypass of end-to-end encryption.\n*   Compromised authentication.\n*   Potential for data manipulation.\n\n**Attack vectors:**\n\n*   A malicious server could inject plaintext envelopes.\n*   A malicious client could inject plaintext envelopes.\n\n**Required attacker capabilities/position:**\n\n*   Low privileges are required to exploit the vulnerability.\n*   Network access is sufficient.\n*   No user interaction is required.\n\n**Mitigation or fix:**\n\n*   The vulnerability is fixed in commit [82d70f6720e762898f34ae76b0894b0297d9b2f8](https://github.com/whisperfish/libsignal-service-rs/commit/82d70f6720e762898f34ae76b0894b0297d9b2f8).\n*   The fix introduces a `was_encrypted` field in the `Metadata` struct.\n*   No known workarounds exist.\n\n**CVSS Score:** 8.5 (High)\n\n**CVSS Vector:** CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:H/A:N\n\n**Credits:**\n\n*   Reporter: @valldrac\n*   Remediation developer: @rubdos",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID  | CWE Name                                                                           | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :--------------------------------------------------------------------------------- | :---------- | :---------------------- | :------------------------------ | :-------------------------------- |\n| CWE-345   | Insufficient Verification of Data Authenticity                                     | 0.9         | Class                   | Primary                         | Allowed-with-Review            |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE, CWE-345, is a Class-level weakness. While a more specific Base or Variant level CWE would be ideal, the available information strongly suggests that the root cause is related to insufficient verification of data authenticity, making CWE-345 the most appropriate choice. The retriever results also suggest related CWEs like CWE-494 (Download of Code Without Integrity Check) and CWE-347 (Improper Verification of Cryptographic Signature) which are related to CWE-345 through hierarchical relationships.\n\n```mermaid\ngraph TD\n    cwe345[\"CWE-345: Insufficient Verification of Data Authenticity\"]\n    cwe494[\"CWE-494: Download of Code Without Integrity Check\"]\n    cwe347[\"CWE-347: Improper Verification of Cryptographic Signature\"]\n\n    cwe494 -->|CHILDOF| cwe345\n    cwe347 -->|CHILDOF| cwe345\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe345 primary\n    class cwe494,cwe347 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **lack of input validation** on envelope content which leads to **plaintext content envelopes being injected**. This then results in the **bypassing of end-to-end encryption and authentication**.\n\n## Summary of Analysis\nThe analysis is based on the provided vulnerability description and CVE reference summary which highlights the **injection of plaintext content envelopes**. The root cause is the **lack of sanity checks** and the **lack of input validation on envelope content**. The most relevant CWE based on this information is CWE-345: Insufficient Verification of Data Authenticity. This CWE aligns with the root cause since the data (plaintext content envelopes) are not being properly verified for authenticity, allowing malicious or incorrect data to be processed.\n\nThe other CWEs considered from the retriever results were not selected because they did not directly address the root cause. For example, CWE-79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')) is related to web page generation, which is not the primary issue here. CWE-863 (Incorrect Authorization) and CWE-306 (Missing Authentication for Critical Function) are more appropriate when there are authentication or authorization issues, which is not the explicit root cause in this case. While the impact is bypassing authentication, the root cause is the insufficient verification, not the missing authentication.\n\nCWE-345 is at the Class level of abstraction. The MITRE guidance suggests considering lower-level children if available, but no direct child CWEs of CWE-345 clearly matched the vulnerability's root cause.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-345: Insufficient Verification of Data Authenticity\n**Abstraction Level**: Class\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nThe product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
  "analysis_with_relationships": "# Summary\n| CWE ID  | CWE Name                                                                           | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :--------------------------------------------------------------------------------- | :---------- | :---------------------- | :------------------------------ | :-------------------------------- |\n| CWE-345   | Insufficient Verification of Data Authenticity                                     | 0.9         | Class                   | Primary                         | Allowed-with-Review            |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE, CWE-345, is a Class-level weakness. While a more specific Base or Variant level CWE would be ideal, the available information strongly suggests that the root cause is related to insufficient verification of data authenticity, making CWE-345 the most appropriate choice. The retriever results also suggest related CWEs like CWE-494 (Download of Code Without Integrity Check) and CWE-347 (Improper Verification of Cryptographic Signature) which are related to CWE-345 through hierarchical relationships.\n\n```mermaid\ngraph TD\n    cwe345[\"CWE-345: Insufficient Verification of Data Authenticity\"]\n    cwe494[\"CWE-494: Download of Code Without Integrity Check\"]\n    cwe347[\"CWE-347: Improper Verification of Cryptographic Signature\"]\n\n    cwe494 -->|CHILDOF| cwe345\n    cwe347 -->|CHILDOF| cwe345\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe345 primary\n    class cwe494,cwe347 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **lack of input validation** on envelope content which leads to **plaintext content envelopes being injected**. This then results in the **bypassing of end-to-end encryption and authentication**.\n\n## Summary of Analysis\nThe analysis is based on the provided vulnerability description and CVE reference summary which highlights the **injection of plaintext content envelopes**. The root cause is the **lack of sanity checks** and the **lack of input validation on envelope content**. The most relevant CWE based on this information is CWE-345: Insufficient Verification of Data Authenticity. This CWE aligns with the root cause since the data (plaintext content envelopes) are not being properly verified for authenticity, allowing malicious or incorrect data to be processed.\n\nThe other CWEs considered from the retriever results were not selected because they did not directly address the root cause. For example, CWE-79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')) is related to web page generation, which is not the primary issue here. CWE-863 (Incorrect Authorization) and CWE-306 (Missing Authentication for Critical Function) are more appropriate when there are authentication or authorization issues, which is not the explicit root cause in this case. While the impact is bypassing authentication, the root cause is the insufficient verification, not the missing authentication.\n\nCWE-345 is at the Class level of abstraction. The MITRE guidance suggests considering lower-level children if available, but no direct child CWEs of CWE-345 clearly matched the vulnerability's root cause.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-345: Insufficient Verification of Data Authenticity\n**Abstraction Level**: Class\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nThe product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-494:**\n- 494 (Download of Code Without Integrity Check) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "source": "sparse"
      },
      "similarity": 416.74103625077237
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 413.09572413304943
    },
    {
      "metadata": {
        "doc_id": "295",
        "name": "Improper Certificate Validation",
        "source": "sparse"
      },
      "similarity": 409.48451995070656
    },
    {
      "metadata": {
        "doc_id": "502",
        "name": "Deserialization of Untrusted Data",
        "source": "sparse"
      },
      "similarity": 407.3909446014587
    },
    {
      "metadata": {
        "doc_id": "918",
        "name": "Server-Side Request Forgery (SSRF)",
        "source": "sparse"
      },
      "similarity": 405.1237665955398
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 402.52321138584125
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 401.59541793705154
    },
    {
      "metadata": {
        "doc_id": "639",
        "name": "Authorization Bypass Through User-Controlled Key",
        "source": "sparse"
      },
      "similarity": 398.14797391848697
    },
    {
      "metadata": {
        "doc_id": "327",
        "name": "Use of a Broken or Risky Cryptographic Algorithm",
        "type": "Class",
        "original_content": "The product uses a broken or risky cryptographic algorithm or protocol.",
        "keyphrase_source": "weakness:plaintext content envelopes could be injected",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.48925681116856545,
            "sparse": 396.4379203156724
          }
        }
      },
      "similarity": 0.48925681116856545
    },
    {
      "doc_id": "494",
      "text": "CWE-494: Download of Code Without Integrity Check",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "494",
        "name": "Download of Code Without Integrity Check",
        "type": "base",
        "original_content": "CWE-494: Download of Code Without Integrity Check",
        "relationships": [
          {
            "source_id": "494",
            "target_id": "79",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "494",
            "target_id": "669",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "494",
            "target_id": "669",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "494",
            "target_id": "345",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "494",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "669",
            "target_id": "494",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "345",
            "target_id": "494",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "79",
                  "494",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "79"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "79",
                  "494",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "79"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-494",
      "CWE-345",
      "CWE-79",
      "CWE-306",
      "CWE-347"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}