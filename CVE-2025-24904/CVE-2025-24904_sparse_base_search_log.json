{
  "method": "sparse_base",
  "query": "libsignal-service-rs is a Rust version of the libsignal-service-java library which implements the core functionality to communicate with Signal servers. Prior to commit 82d70f6720e762898f34ae76b0894b0297d9b2f8, plaintext content envelopes could be injected by a server or a malicious client, and may have been able to bypass the end-to-end encryption and authentication. The vulnerability is fixed per 82d70f6720e762898f34ae76b0894b0297d9b2f8. The `Metadata` struct contains an additional `was_encrypted` field, which breaks the API, but should be easily resolvable. No known workarounds are available.",
  "keyphrases": {
    "base_query": "libsignal-service-rs is a Rust version of the libsignal-service-java library which implements the core functionality to communicate with Signal servers. Prior to commit 82d70f6720e762898f34ae76b0894b0297d9b2f8, plaintext content envelopes could be injected by a server or a malicious client, and may have been able to bypass the end-to-end encryption and authentication. The vulnerability is fixed per 82d70f6720e762898f34ae76b0894b0297d9b2f8. The `Metadata` struct contains an additional `was_encrypted` field, which breaks the API, but should be easily resolvable. No known workarounds are available."
  },
  "timestamp": "2025-07-14T12:59:36.070916",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 144.94796828802532
    },
    {
      "doc_id": "295",
      "name": "Improper Certificate Validation",
      "score": 141.2206076403923
    },
    {
      "doc_id": "502",
      "name": "Deserialization of Untrusted Data",
      "score": 140.26018230456728
    },
    {
      "doc_id": "918",
      "name": "Server-Side Request Forgery (SSRF)",
      "score": 140.02600259954562
    },
    {
      "doc_id": "201",
      "name": "Insertion of Sensitive Information Into Sent Data",
      "score": 139.55316925498605
    }
  ]
}