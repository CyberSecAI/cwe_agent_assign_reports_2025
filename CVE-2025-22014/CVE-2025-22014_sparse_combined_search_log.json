{
  "method": "sparse_combined",
  "query": "In the Linux kernel, the following vulnerability has been resolved soc qcom pdr Fix the potential deadlock When some client process A call pdr_add_lookup() to add the look up for the service and does schedule locator work, later a process B got a new server packet indicating locator is up and call pdr_locator_new_server() which eventually sets pdr->locator_init_complete to true which process A sees and takes list lock and queries domain list but it will timeout due to deadlock as the response will queued to the same qmi->wq and it is ordered workqueue and process B is not able to complete new server request work due to deadlock on list lock. Fix it by removing the unnecessary list iteration as the list iteration is already being done inside locator work, so avoid it here and just call schedule_work() here. Process A Process B process_scheduled_works() pdr_add_lookup() qmi_data_ready_work() process_scheduled_works() pdr_locator_new_server() pdr->locator_init_complete=true pdr_locator_work() mutex_lock(&pdr->list_lock) pdr_locate_service() mutex_lock(&pdr->list_lock) pdr_get_domain_list() pr_err(PDR %s get domain list txn wait failed %d\\\\n, req->service_name, ret) Timeout error log due to deadlock PDR tms/servreg get domain list txn wait failed -110 PDR service lookup for msm/adsp/sensor_pdtms/servreg failed -110 Thanks to Bjorn and Johan for letting me know that this commit also fixes an audio regression when using the in-kernel pd-mapper as that makes it easier to hit this race. [1]",
  "keyphrases": {
    "weakness": [
      "potential deadlock"
    ]
  },
  "timestamp": "2025-07-12T10:00:06.046674",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "667",
      "name": "Improper Locking",
      "score": 967.9270456542409
    },
    {
      "doc_id": "833",
      "name": "Deadlock",
      "score": 903.1317270010637
    },
    {
      "doc_id": "201",
      "name": "Insertion of Sensitive Information Into Sent Data",
      "score": 863.3430499604938
    },
    {
      "doc_id": "863",
      "name": "Incorrect Authorization",
      "score": 858.4542813724432
    },
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 853.2072569590152
    }
  ]
}