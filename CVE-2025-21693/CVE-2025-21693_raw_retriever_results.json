{
  "query": "In the Linux kernel, the following vulnerability has been resolved mm zswap properly synchronize freeing resources during CPU hotunplug In zswap_compress() and zswap_decompress(), the per-CPU acomp_ctx of the current CPU at the beginning of the operation is retrieved and used throughout. However, since neither preemption nor migration are disabled, it is possible that the operation continues on a different CPU. If the original CPU is hotunplugged while the acomp_ctx is still in use, we run into a UAF bug as some of the resources attached to the acomp_ctx are freed during hotunplug in zswap_cpu_comp_dead() (i.e. acomp_ctx.buffer, acomp_ctx.req, or acomp_ctx.acomp). The problem was introduced in commit 1ec3b5fe6eec (mm/zswap move to use crypto_acomp API for hardware acceleration) when the switch to the crypto_acomp API was made. Prior to that, the per-CPU crypto_comp was retrieved using get_cpu_ptr() which disables preemption and makes sure the CPU cannot go away from under us. Preemption cannot be disabled with the crypto_acomp API as a sleepable context is needed. Use the acomp_ctx.mutex to synchronize CPU hotplug callbacks allocating and freeing resources with compression/decompression paths. Make sure that acomp_ctx.req is NULL when the resources are freed. In the compression/decompression paths, check if acomp_ctx.req is NULL after acquiring the mutex (meaning the CPU was offlined) and retry on the new CPU. The initialization of acomp_ctx.mutex is moved from the CPU hotplug callback to the pool initialization where it belongs (where the mutex is allocated). In addition to adding clarity, this makes sure that CPU hotplug cannot reinitialize a mutex that is already locked by compression/decompression. Previously a fix was attempted by holding cpus_read_lock() [1]. This would have caused a potential deadlock as it is possible for code already holding the lock to fall into reclaim and enter zswap (causing a deadlock). A fix was also attempted using SRCU for synchronization, but Johannes pointed out that synchronize_srcu() cannot be used in CPU hotplug notifiers [2]. Alternative fixes that were considered/attempted and could have worked - Refcounting the per-CPU acomp_ctx. This involves complexity in handling the race between the refcount dropping to zero in zswap_[de]compress() and the refcount being re-initialized when the CPU is onlined. - Disabling migration before getting the per-CPU acomp_ctx [3], but thats discouraged and is a much bigger hammer than needed, and could result in subtle performance issues. [1]https//lkml.kernel.org/20241219212437.2714151-1-yosryahmed@google.com/ [2]https//lkml.kernel.org/20250107074724.1756696-2-yosryahmed@google.com/ [3]https//lkml.kernel.org/20250107222236.2715883-2-yosryahmed@google.com/ [yosryahmed@google.com remove comment]",
  "keyphrases": {
    "rootcause": [
      "UAF bug"
    ],
    "weakness": [
      "UAF"
    ]
  },
  "timestamp": "2025-07-12T09:53:17.658779",
  "retriever_config": {
    "weights": {
      "dense": 0.35,
      "sparse": 0.4,
      "graph": 0.25
    },
    "use_graph": true,
    "use_rag": true,
    "use_sparse": true
  },
  "raw_results": {
    "graph": [
      {
        "cwe_id": "908",
        "name": "Use of Uninitialized Resource",
        "abstraction": "Base",
        "score": 2.8195644621352467,
        "description": "The product uses or accesses a resource that has not been initialized....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1322",
        "name": "Use of Blocking Code in Single-threaded, Non-blocking Context",
        "abstraction": "base",
        "score": 2.2100000000000004,
        "description": "CWE-1322: Use of Blocking Code in Single-threaded, Non-blocking Context...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "456",
        "name": "Missing Initialization of a Variable",
        "abstraction": "variant",
        "score": 2.05536,
        "description": "CWE-456: Missing Initialization of a Variable...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "abstraction": "Base",
        "score": 1.8465137399691494,
        "description": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "120",
        "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
        "abstraction": "base",
        "score": 1.7680000000000005,
        "description": "CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')...",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "123",
        "name": "Write-what-where Condition",
        "abstraction": "base",
        "score": 1.7680000000000005,
        "description": "CWE-123: Write-what-where Condition...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "909",
        "name": "Missing Initialization of Resource",
        "abstraction": "Class",
        "score": 1.7662295429191706,
        "description": "The product does not initialize a critical resource....",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "364",
        "name": "Signal Handler Race Condition",
        "abstraction": "base",
        "score": 1.7550000000000001,
        "description": "CWE-364: Signal Handler Race Condition...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "833",
        "name": "Deadlock",
        "abstraction": "Base",
        "score": 1.706755457521475,
        "description": "The product contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1325",
        "name": "Improperly Controlled Sequential Memory Allocation",
        "abstraction": "base",
        "score": 1.6848000000000003,
        "description": "CWE-1325: Improperly Controlled Sequential Memory Allocation...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1265",
        "name": "Unintended Reentrant Invocation of Non-reentrant Code Via Nested Calls",
        "abstraction": "base",
        "score": 1.6848000000000003,
        "description": "CWE-1265: Unintended Reentrant Invocation of Non-reentrant Code Via Nested Calls...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "386",
        "name": "Symbolic Name not Mapping to Correct Object",
        "abstraction": "base",
        "score": 1.6744000000000003,
        "description": "CWE-386: Symbolic Name not Mapping to Correct Object...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "662",
        "name": "Improper Synchronization",
        "abstraction": "class",
        "score": 1.6736000000000002,
        "description": "CWE-662: Improper Synchronization...",
        "mapping_usage": "Discouraged"
      },
      {
        "cwe_id": "835",
        "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "abstraction": "Base",
        "score": 1.6160535515259713,
        "description": "The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "61",
        "name": "UNIX Symbolic Link (Symlink) Following",
        "abstraction": "compound",
        "score": 1.61,
        "description": "CWE-61: UNIX Symbolic Link (Symlink) Following...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "609",
        "name": "Double-Checked Locking",
        "abstraction": "base",
        "score": 1.5912000000000004,
        "description": "CWE-609: Double-Checked Locking...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "476",
        "name": "NULL Pointer Dereference",
        "abstraction": "Base",
        "score": 1.539467412175819,
        "description": "The product dereferences a pointer that it expects to be valid but is NULL....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "415",
        "name": "Double Free",
        "abstraction": "variant",
        "score": 1.4784000000000002,
        "description": "CWE-415: Double Free...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "789",
        "name": "Memory Allocation with Excessive Size Value",
        "abstraction": "Variant",
        "score": 1.4445920494809183,
        "description": "The product allocates memory based on an untrusted, large size value, but it does not ensure that the size is within expected limits, allowing arbitrary amounts of memory to be allocated....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "416",
        "name": "Use After Free",
        "abstraction": "Variant",
        "score": 1.4428335448574154,
        "description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a locati...",
        "mapping_usage": "Allowed"
      }
    ],
    "dense": [
      {
        "cwe_id": "909",
        "name": "Missing Initialization of Resource",
        "abstraction": "Class",
        "score": 0.558131159620634,
        "description": "The product does not initialize a critical resource....",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "667",
        "name": "Improper Locking",
        "abstraction": "Class",
        "score": 0.5568666337768169,
        "description": "The product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors....",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "abstraction": "Class",
        "score": 0.5449122231053833,
        "description": "The product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code ...",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "833",
        "name": "Deadlock",
        "abstraction": "Base",
        "score": 0.5301448671807385,
        "description": "The product contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "908",
        "name": "Use of Uninitialized Resource",
        "abstraction": "Base",
        "score": 0.5249505401124561,
        "description": "The product uses or accesses a resource that has not been initialized....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "413",
        "name": "Improper Resource Locking",
        "abstraction": "Base",
        "score": 0.5229035085800814,
        "description": "The product does not lock or does not correctly lock a resource when the product must have exclusive access to the resource....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "416",
        "name": "Use After Free",
        "abstraction": "Variant",
        "score": 0.520931390663254,
        "description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a locati...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1285",
        "name": "Improper Validation of Specified Index, Position, or Offset in Input",
        "abstraction": "Base",
        "score": 0.520819480318761,
        "description": "The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the spe...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "366",
        "name": "Race Condition within a Thread",
        "abstraction": "Base",
        "score": 0.520690658285841,
        "description": "If two threads of execution use a resource simultaneously, there exists the possibility that resources may be used while invalid, in turn making the state of execution undefined....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "abstraction": "Base",
        "score": 0.5201949633595224,
        "description": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the in...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "409",
        "name": "Improper Handling of Highly Compressed Data (Data Amplification)",
        "abstraction": "Base",
        "score": 0.5098575202854695,
        "description": "The product does not handle or incorrectly handles a compressed input with a very high compression ratio that produces a large output....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "190",
        "name": "Integer Overflow or Wraparound",
        "abstraction": "Base",
        "score": 0.509416786443784,
        "description": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "191",
        "name": "Integer Underflow (Wrap or Wraparound)",
        "abstraction": "Base",
        "score": 0.5063570629401111,
        "description": "The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "789",
        "name": "Memory Allocation with Excessive Size Value",
        "abstraction": "Variant",
        "score": 0.5057671498738602,
        "description": "The product allocates memory based on an untrusted, large size value, but it does not ensure that the size is within expected limits, allowing arbitrary amounts of memory to be allocated....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "126",
        "name": "Buffer Over-read",
        "abstraction": "Variant",
        "score": 0.5045810724698097,
        "description": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "835",
        "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "abstraction": "Base",
        "score": 0.5039112525684852,
        "description": "The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "401",
        "name": "Missing Release of Memory after Effective Lifetime",
        "abstraction": "Variant",
        "score": 0.5037711359316283,
        "description": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "abstraction": "Base",
        "score": 0.5011474046980533,
        "description": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "122",
        "name": "Heap-based Buffer Overflow",
        "abstraction": "Variant",
        "score": 0.5000901464193058,
        "description": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine suc...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "abstraction": "Class",
        "score": 0.49667498360004914,
        "description": "The product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected m...",
        "mapping_usage": "Discouraged"
      }
    ],
    "sparse": [
      {
        "cwe_id": "667",
        "name": "Improper Locking",
        "abstraction": "Class",
        "score": 1972.3170669731799,
        "description": "The product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors....",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "407",
        "name": "Inefficient Algorithmic Complexity",
        "abstraction": "Class",
        "score": 1877.1635867484638,
        "description": "An algorithm in a product has an inefficient worst-case computational complexity that may be detrimental to system performance and can be triggered by an attacker, typically using crafted manipulation...",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "835",
        "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "abstraction": "Base",
        "score": 1875.8279853216889,
        "description": "The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "abstraction": "Class",
        "score": 1869.794142918995,
        "description": "The product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code ...",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "abstraction": "Base",
        "score": 1844.6741853462102,
        "description": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1333",
        "name": "Inefficient Regular Expression Complexity",
        "abstraction": "Base",
        "score": 1832.0089919658813,
        "description": "The product uses a regular expression with an inefficient, possibly exponential worst-case computational complexity that consumes excessive CPU cycles....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "639",
        "name": "Authorization Bypass Through User-Controlled Key",
        "abstraction": "Base",
        "score": 1820.06193675808,
        "description": "The system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "863",
        "name": "Incorrect Authorization",
        "abstraction": "Class",
        "score": 1803.9899293453186,
        "description": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check....",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "833",
        "name": "Deadlock",
        "abstraction": "Base",
        "score": 1794.6521829328185,
        "description": "The product contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "226",
        "name": "Sensitive Information in Resource Not Removed Before Reuse",
        "abstraction": "Base",
        "score": 1792.7226529139484,
        "description": "The product releases a resource such as memory or a file so that it can be made available for reuse, but it does not clear or \"zeroize\" the information contained in the resource before the product per...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "122",
        "name": "Heap-based Buffer Overflow",
        "abstraction": "Variant",
        "score": 1664.764337244618,
        "description": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine suc...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "416",
        "name": "Use After Free",
        "abstraction": "Variant",
        "score": 1000.0,
        "description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a locati...",
        "mapping_usage": "Allowed"
      }
    ]
  },
  "score_statistics": {
    "dense": {
      "min": 0.49667498360004914,
      "max": 0.558131159620634,
      "mean": 0.5181059970117022,
      "median": 0.515026241822496,
      "count": 20
    },
    "sparse": {
      "min": 1000.0,
      "max": 1972.3170669731799,
      "mean": 1762.3314165391002,
      "median": 1826.0354643619808,
      "count": 12
    },
    "graph": {
      "min": 1.4428335448574154,
      "max": 2.8195644621352467,
      "mean": 1.756778488029258,
      "median": 1.6848000000000003,
      "count": 20
    }
  }
}