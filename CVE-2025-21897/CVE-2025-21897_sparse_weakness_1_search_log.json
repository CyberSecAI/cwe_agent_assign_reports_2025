{
  "method": "sparse_weakness_1",
  "query": "In the Linux kernel, the following vulnerability has been resolved sched_ext Fix pick_task_scx() picking non-queued tasks when its called without balance() a6250aa251ea (sched_ext Handle cases where pick_task_scx() is called without preceding balance_scx()) added a workaround to handle the cases where pick_task_scx() is called without prececing balance_scx() which is due to a fair class bug where pick_taks_fair() may return NULL after a true return from balance_fair(). The workaround detects when pick_task_scx() is called without preceding balance_scx() and emulates SCX_RQ_BAL_KEEP and triggers kicking to avoid stalling. Unfortunately, the workaround code was testing whether @prev was on SCX to decide whether to keep the task running. This is incorrect as the task may be on SCX but no longer runnable. This could lead to a non-runnable task to be returned from pick_task_scx() which cause interesting confusions and failures. e.g. A common failure mode is the task ending up with (!on_rq && on_cpu) state which can cause potential wakers to busy loop, which can easily lead to deadlocks. Fix it by testing whether @prev has SCX_TASK_QUEUED set. This makes @prev_on_scx only used in one place. Open code the usage and improve the comment while at it.",
  "keyphrases": {
    "weakness": "non-runnable task to be returned from pick_task_scx()"
  },
  "timestamp": "2025-07-12T09:57:52.640892",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 822.6149181893006
    },
    {
      "doc_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 790.0304016028074
    },
    {
      "doc_id": "364",
      "name": "Signal Handler Race Condition",
      "score": 788.3587509418811
    },
    {
      "doc_id": "79",
      "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "score": 786.258427084265
    },
    {
      "doc_id": "59",
      "name": "Improper Link Resolution Before File Access ('Link Following')",
      "score": 779.5528423065563
    }
  ]
}