{
  "cve_id": "CVE-2025-3935",
  "description": "ScreenConnect versions 25.2.3 and earlier versions may be susceptible to a ViewState **code injection** attack. ASP.NET Web Forms use ViewState to preserve page and control state, with data encoded using Base64 protected by machine keys. It is important to note that to obtain these machine keys, privileged system level access must be obtained. If these machine keys are compromised, attackers could create and send a malicious ViewState to the website, potentially leading to remote code execution on the server. The risk does not originate from a vulnerability introduced by ScreenConnect, but from platform level behavior. This had no direct impact to ScreenConnect Client. ScreenConnect 2025.4 patch disables ViewState and removes any dependency on it.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "code injection",
    "impact": "remote code execution",
    "vector": "malicious ViewState",
    "attacker": "attackers",
    "product": "ScreenConnect",
    "version": "25.2.3 and earlier versions",
    "component": "ASP.NET Web Forms"
  },
  "reference_content": "**1.  Content from www.connectwise.com_473c0f4a_20250624_162653.html (text)**\n\n*   **Relevance:** This document discusses the ScreenConnect 25.2.4 security patch and the vulnerability related to the ViewState code injection attack.\n*   **Root cause of vulnerability:** ASP.NET Web Forms use ViewState to preserve page and control state, and the data is encoded using Base64, protected by machine keys. If the machine keys are compromised, attackers could create and send a malicious ViewState to the website.\n*   **Weaknesses/vulnerabilities present:** ViewState code injection vulnerability (CVE-2025-3935) and Improper Authentication (CWE-287).\n*   **Impact of exploitation:** Remote code execution on the server.\n*   **Attack vectors:** Sending a crafted malicious ViewState.\n*   **Required attacker capabilities/position:** Compromise of machine keys.\n*   **Mitigation or fix:**\n    *   Cloud: No action required.\n    *   On-premises:\n        *   Install the latest build for the current version.\n        *   Upgrade the license if it's out of maintenance.\n        *   Download and install version 25.2.4.\n        *   Assess systems for signs of compromise after patching.\n        *   If compromised, follow incident response procedures.\n\n**2.  Content from www.connectwise.com_b135bca1_20250624_162652.html (text)**\n\n*   **Relevance:** This document provides details about the ScreenConnect security patch and other security advisories.\n*   **Summary:** This document mentions multiple security advisories, including:\n    *   **June 9, 2025 Code Signing Certificate Rotation**: ScreenConnect, ConnectWise Automate, and RMM are updating the digital signing certificates.\n    *   **May 28, 2025 Security Event Advisory**: Suspicious activity within the environment, affecting a small number of ScreenConnect customers. A patch was released.\n    *   **April 24, 2025 ScreenConnect Security Patch Advisory**: Addresses an ASP.NET weakness, code injection, partners must patch their ScreenConnect instance immediately.\n    *   **January 30, 2025 Phishing Alert**: Phishing attempts impersonating ScreenConnect login alerts.\n    *   **March 21, 2024 Unauthenticated Access to Legacy AWS Server**: A security incident involving a legacy AWS server in the EU region with potential data exposure (email addresses)\n    *   **March 4, 2024 Hardening Guidelines for ConnectWise ScreenConnect CVE-2024-1708 (Path Traversal)**: Advice on patching ScreenConnect, including file system review, event log checks, and Mandiant hardening guide.\n    *   **February 21, 2024 ConnectWise ScreenConnect Vulnerability CWE-288**: Instructions on upgrading ScreenConnect, addressing license errors, identifying issues, and checking for malicious activity.\n    *   **February 20, 2024 Patch Immediately - Critical ScreenConnect Vulnerability**: Advisory on patching a ScreenConnect vulnerability, including indicators of compromise (IOCs) such as specific IP addresses.\n    *   **February 9, 2024 FortiSIEM Critical Vulnerabilities**: Vulnerabilities (CVE-2024-23108 and CVE-2024-23109) in FortiSIEM, the advice to upgrade to version 7.1.3\n    *   **January 22, 2024 Brute-Force Attempts on ConnectWise ScreenConnect**: Malicious activity, brute-force attacks, advice to use MFA, and best practices for security.\n    *   **October 18, 2023 Beware the Hook: Malicious Actor Phishing Email Targeting ScreenConnect Users**: Phishing campaigns, impersonating login alerts.\n    *   **October 4, 2023 WebP/libwebp Zero-Day Vulnerabilities**: Disclosing vulnerabilities related to WebP images (CVE-2023-4863), impacting the libwebp library. The advice to update to 23.7.8 or later versions.\n    *   **April 14, 2023 Microsoft Message Queuing Vulnerability**: Vulnerability affecting Windows OS, executing remote code, advice to follow the steps in Microsoft's mitigations.\n    *   **December 20, 2022 Best Practice Reminder \u2013 Download from Trusted Sources**: Malicious Python packages on PyPI, with SDK from SentinelOne, download content directly from the vendor and verify the content.\n    *   **December 13, 2022 SentinelOne/Aikido Vulnerability \u2013 Action Required**: Time-of-check Time-of-use (TOCTOU) race condition, SentinelOne agents are vulnerable.\n    *   **November 29, 2022 Remaining Vigilant Against Email Phishing Attempts**: Phishing campaign mimicking ConnectWise Control New Login Alert emails.\n    *   **May 5, 2022 Email Security Best Practices**: Reminders on email security best practices, including SPF, DKIM, and DMARC.\n    *   **January 31, 2022 ConnectWise Virtual Community Update**: Unauthorized access to virtual community search.\n\n*   **Weaknesses/vulnerabilities present:**\n    *   ViewState code injection vulnerability (CVE-2025-3935)\n    *   CWE-287 Improper Authentication\n    *   CVE-2024-1708 (Path Traversal)\n    *   CWE-288\n    *   CVE-2024-23108 and CVE-2024-23109\n    *   Time-of-check Time-of-use (TOCTOU) Race Condition\n\n*   **Impact of exploitation:** Remote code execution, data breaches.\n*   **Mitigation or fix:** Patching, upgrades, incident response, and security hardening.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-94 | Improper Control of Generation of Code ('Code Injection') | 0.9 | Base | Allowed-with-Review | Primary CWE |\n| CWE-502 | Deserialization of Untrusted Data | 0.7 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship that influenced the decision was the hierarchical relationship between CWE-913 (Improper Control of Dynamically-Managed Code Resources) and its parent CWE-94 (Improper Control of Generation of Code ('Code Injection')). CWE-94 is selected as the more appropriate base level for this particular vulnerability. CWE-502 (Deserialization of Untrusted Data) is related because the **code injection** is happening through the ViewState, which involves deserialization.\n\n```mermaid\ngraph TD\n    cwe94[\"CWE-94: Improper Control of Generation of Code ('Code Injection')\"]\n    cwe502[\"CWE-502: Deserialization of Untrusted Data\"]\n    \n    cwe502 -- CANPRECEDE --> cwe94\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe94 primary\n    class cwe502 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the compromise of machine keys, leading to the ability to create malicious ViewStates. This leads to **code injection** and ultimately remote code execution.\n\nCompromised Machine Keys -> Malicious ViewState Creation -> **CWE-94: Improper Control of Generation of Code ('Code Injection')** -> Remote Code Execution\n\n## Summary of Analysis\nThe initial analysis identified **code injection** as the primary weakness. The provided evidence from the vulnerability description and CVE reference links supports this. The relationship analysis and mapping guidance confirm that CWE-94 is the most appropriate base-level CWE.\n\nThe vulnerability description explicitly mentions a ViewState **code injection** attack and the possibility of remote code execution. The CVE reference links also highlight the ViewState **code injection** vulnerability.\n\nThe selection of CWE-94 is based on the fact that attackers are able to inject code by crafting a malicious ViewState. This fits the description of CWE-94, which involves improper control of the generation of code.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-451: User Interface (UI) Misrepresentation of Critical Information\n**Abstraction Level**: Class\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nThe user interface (UI) does not properly represent critical information to the user, allowing the information - or its source - to be obscured or spoofed. This is often a component in phishing attacks.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\n**Abstraction Level**: Base\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nThe product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-345: Insufficient Verification of Data Authenticity\n**Abstraction Level**: Class\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nThe product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-668: Exposure of Resource to Wrong Sphere\n**Abstraction Level**: Class\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-668 is high-level and is often misused as a catch-all when lower-level CWE IDs might be applicable. It is sometimes used for low-information vulnerability reports [REF-1287]. It is a level-1 Class (i.e., a child of a Pillar). It is not useful for trend analysis.\n\n\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n\n\n## CWE-923: Improper Restriction of Communication Channel to Intended Endpoints\n**Abstraction Level**: Class\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe product establishes a communication channel to (or from) an endpoint for privileged or protected operations, but it does not properly ensure that it is communicating with the correct endpoint.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n**Abstraction Level**: Base\n**Similarity Score**: 1195.75\n**Source**: sparse\n\n**Description**:\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-347: Improper Verification of Cryptographic Signature\n**Abstraction Level**: Base\n**Similarity Score**: 1179.81\n**Source**: sparse\n\n**Description**:\nThe product does not verify, or incorrectly verifies, the cryptographic signature for data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-116: Improper Encoding or Escaping",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-94 | Improper Control of Generation of Code ('Code Injection') | 0.9 | Base | Allowed-with-Review | Primary CWE |\n| CWE-502 | Deserialization of Untrusted Data | 0.7 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship that influenced the decision was the hierarchical relationship between CWE-913 (Improper Control of Dynamically-Managed Code Resources) and its parent CWE-94 (Improper Control of Generation of Code ('Code Injection')). CWE-94 is selected as the more appropriate base level for this particular vulnerability. CWE-502 (Deserialization of Untrusted Data) is related because the **code injection** is happening through the ViewState, which involves deserialization.\n\n```mermaid\ngraph TD\n    cwe94[\"CWE-94: Improper Control of Generation of Code ('Code Injection')\"]\n    cwe502[\"CWE-502: Deserialization of Untrusted Data\"]\n    \n    cwe502 -- CANPRECEDE --> cwe94\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe94 primary\n    class cwe502 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the compromise of machine keys, leading to the ability to create malicious ViewStates. This leads to **code injection** and ultimately remote code execution.\n\nCompromised Machine Keys -> Malicious ViewState Creation -> **CWE-94: Improper Control of Generation of Code ('Code Injection')** -> Remote Code Execution\n\n## Summary of Analysis\nThe initial analysis identified **code injection** as the primary weakness. The provided evidence from the vulnerability description and CVE reference links supports this. The relationship analysis and mapping guidance confirm that CWE-94 is the most appropriate base-level CWE.\n\nThe vulnerability description explicitly mentions a ViewState **code injection** attack and the possibility of remote code execution. The CVE reference links also highlight the ViewState **code injection** vulnerability.\n\nThe selection of CWE-94 is based on the fact that attackers are able to inject code by crafting a malicious ViewState. This fits the description of CWE-94, which involves improper control of the generation of code.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-451: User Interface (UI) Misrepresentation of Critical Information\n**Abstraction Level**: Class\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nThe user interface (UI) does not properly represent critical information to the user, allowing the information - or its source - to be obscured or spoofed. This is often a component in phishing attacks.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\n**Abstraction Level**: Base\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nThe product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-345: Insufficient Verification of Data Authenticity\n**Abstraction Level**: Class\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nThe product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-668: Exposure of Resource to Wrong Sphere\n**Abstraction Level**: Class\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-668 is high-level and is often misused as a catch-all when lower-level CWE IDs might be applicable. It is sometimes used for low-information vulnerability reports [REF-1287]. It is a level-1 Class (i.e., a child of a Pillar). It is not useful for trend analysis.\n\n\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n\n\n## CWE-923: Improper Restriction of Communication Channel to Intended Endpoints\n**Abstraction Level**: Class\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe product establishes a communication channel to (or from) an endpoint for privileged or protected operations, but it does not properly ensure that it is communicating with the correct endpoint.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n**Abstraction Level**: Base\n**Similarity Score**: 1195.75\n**Source**: sparse\n\n**Description**:\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-347: Improper Verification of Cryptographic Signature\n**Abstraction Level**: Base\n**Similarity Score**: 1179.81\n**Source**: sparse\n\n**Description**:\nThe product does not verify, or incorrectly verifies, the cryptographic signature for data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-116: Improper Encoding or Escaping\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-502:**\n- 502 (Deserialization of Untrusted Data) - ROOT\n\n\n**Chain starting from CWE-1391:**\n- 1391 (Use of Weak Credentials) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "346",
        "name": "Origin Validation Error",
        "source": "sparse"
      },
      "similarity": 523.0247855093185
    },
    {
      "metadata": {
        "doc_id": "94",
        "name": "Improper Control of Generation of Code ('Code Injection')",
        "source": "sparse"
      },
      "similarity": 509.8271252640907
    },
    {
      "metadata": {
        "doc_id": "502",
        "name": "Deserialization of Untrusted Data",
        "source": "sparse"
      },
      "similarity": 507.02224267415477
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 500.7123044672838
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 500.31761108654166
    },
    {
      "metadata": {
        "doc_id": "203",
        "name": "Observable Discrepancy",
        "source": "sparse"
      },
      "similarity": 498.8838154390075
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 498.73809942147665
    },
    {
      "metadata": {
        "doc_id": "347",
        "name": "Improper Verification of Cryptographic Signature",
        "source": "sparse"
      },
      "similarity": 496.2950367216094
    },
    {
      "metadata": {
        "doc_id": "1021",
        "name": "Improper Restriction of Rendered UI Layers or Frames",
        "type": "Base",
        "original_content": "The web application does not restrict or incorrectly restricts frame objects or UI layers that belong to another application or domain, which can lead to user confusion about which interface the user is interacting with.",
        "keyphrase_source": "weakness:code injection",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5221363508589173,
            "graph": 1.6635794427934432
          }
        }
      },
      "similarity": 0.5221363508589173
    },
    {
      "doc_id": "471",
      "text": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "471",
        "name": "Modification of Assumed-Immutable Data (MAID)",
        "type": "base",
        "original_content": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
        "relationships": [
          {
            "source_id": "471",
            "target_id": "621",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "607",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "602",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "473",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "472",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "291",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "1321",
            "label": "CANFOLLOW",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "1282",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "664",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "664",
            "target_id": "471",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "621",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "607",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "602",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "473",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "472",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "291",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1321",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1282",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "602",
                  "471",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "602"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "602",
                  "471",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "602"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-502",
      "CWE-1391",
      "CWE-94",
      "CWE-345",
      "CWE-116",
      "CWE-79",
      "CWE-923",
      "CWE-472",
      "CWE-913",
      "CWE-74",
      "CWE-668",
      "CWE-451",
      "CWE-303",
      "CWE-347",
      "CWE-497"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}