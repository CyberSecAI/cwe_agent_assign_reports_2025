{
  "cve_id": "CVE-2025-46466",
  "description": "**Cross-Site Request Forgery** (CSRF) vulnerability in felixtz Modern Polls allows Stored XSS. This issue affects Modern Polls from n/a through 1.0.10.",
  "key_phrases": {
    "rootcause": "Cross-Site Request Forgery",
    "weakness": "Cross-Site Scripting",
    "impact": "Stored XSS",
    "vector": "",
    "attacker": "",
    "product": "Modern Polls",
    "version": "n/a through 1.0.10",
    "component": ""
  },
  "reference_content": "## Analysis of CVE-2025-46466 Content\n\nThe provided content **relates** to CVE-2025-46466 as indicated by the CVE ID present in the text. It provides more detail than the placeholder CVE description.\n\nHere's an extraction of relevant information:\n\n**Root cause of vulnerability:**\nThe vulnerability is a Cross-Site Request Forgery (CSRF). The content does not specify the exact root cause within the Modern Polls plugin code.\n\n**Weaknesses/vulnerabilities present:**\n*   Cross-Site Request Forgery (CSRF)\n\n**Impact of exploitation:**\nA malicious actor could force higher privileged users to execute unwanted actions under their current authentication. The specific impact varies case by case.\n\n**Attack vectors:**\nThe attack vector is through Cross-Site Request Forgery.\n\n**Required attacker capabilities/position:**\n*   Unauthenticated attacker.\n\n**Mitigation or fix:**\n*   No official fix is currently available.\n*   Patchstack offers a \"vPatch\" as a mitigation, which auto-mitigates the vulnerability even without an official patch.\n\n**Additional Details:**\n\n*   **Affected Software:** Modern Polls WordPress Plugin\n*   **Vulnerable Versions:** <= 1.0.10\n*   **CVSS Score:** 7.1 (Low severity)\n*   **OWASP Top 10:** A3: Injection (Note: This categorization seems potentially inaccurate for a CSRF vulnerability, but is stated in the report)\n*   **Reported by:** Skalucy\n*   **Published by:** Patchstack\n*   **PSID:** 129ce44ad2c5",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 1.0 | Compound | Primary | Allowed |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is identified as CWE-352 [Cross-Site Request Forgery (CSRF)], which can lead to other vulnerabilities. The vulnerability description also mentions Stored XSS. In the graph, CWE-352 [Cross-Site Request Forgery (CSRF)] has relationships that REQUIRE CWE-346 [Origin Validation Error], CWE-441 [Unintended Proxy or Intermediary], CWE-613 [Insufficient Session Expiration], and CWE-642 [Externalized Control of Critical Parameters]. The resulting XSS is best represented by CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')].\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe346[\"CWE-346: Origin Validation Error\"]\n    cwe441[\"CWE-441: Unintended Proxy or Intermediary\"]\n    cwe613[\"CWE-613: Insufficient Session Expiration\"]\n    cwe642[\"CWE-642: Externalized Control of Critical Parameters\"]\n\n    cwe352 -->|REQUIRES| cwe346\n    cwe352 -->|REQUIRES| cwe441\n    cwe352 -->|REQUIRES| cwe613\n    cwe352 -->|REQUIRES| cwe642\n    cwe352 -->|CANPRECEDE| cwe79\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **Cross-Site Request Forgery (CSRF)** (CWE-352), which allows an attacker to force a user to perform actions they did not intend to. In this case, the forced action leads to Stored XSS, where malicious scripts are injected into the web application (CWE-79).\n\n## Summary of Analysis\nThe vulnerability is a **Cross-Site Request Forgery (CSRF)** (CWE-352) that allows for Stored XSS (CWE-79). The primary weakness is the **CSRF**, as it is the entry point for the attack. The **CSRF** allows an attacker to force a user to perform actions they did not intend, such as injecting malicious scripts into the web application. The evidence for this mapping is found in the \"Vulnerability Description Key Phrases\" section:\n- **rootcause:** **Cross-Site Request Forgery**\n- **weakness:** **Cross-Site Scripting**\n- **impact:** Stored XSS\n\nCWE-352 [Cross-Site Request Forgery (CSRF)] is a Compound CWE, while CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] is a Base CWE. Both are at appropriate levels of specificity.\n\nCWEs considered but not used:\n- CWE-89 [Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')]: Not selected because there is no indication of SQL injection in the vulnerability description.\n- CWE-918 [Server-Side Request Forgery (SSRF)]: Not selected because there is no indication of Server-Side Request Forgery in the vulnerability description.\n- CWE-601 [URL Redirection to Untrusted Site ('Open Redirect')]: Not selected because there is no indication of URL redirection in the vulnerability description.\n- CWE-80 [Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)]: Not selected because CWE-79 is more appropriate for stored XSS.\n- CWE-95 [Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')]: Not selected because there is no indication of Eval Injection in the vulnerability description.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 1.0 | Compound | Primary | Allowed |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is identified as CWE-352 [Cross-Site Request Forgery (CSRF)], which can lead to other vulnerabilities. The vulnerability description also mentions Stored XSS. In the graph, CWE-352 [Cross-Site Request Forgery (CSRF)] has relationships that REQUIRE CWE-346 [Origin Validation Error], CWE-441 [Unintended Proxy or Intermediary], CWE-613 [Insufficient Session Expiration], and CWE-642 [Externalized Control of Critical Parameters]. The resulting XSS is best represented by CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')].\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe346[\"CWE-346: Origin Validation Error\"]\n    cwe441[\"CWE-441: Unintended Proxy or Intermediary\"]\n    cwe613[\"CWE-613: Insufficient Session Expiration\"]\n    cwe642[\"CWE-642: Externalized Control of Critical Parameters\"]\n\n    cwe352 -->|REQUIRES| cwe346\n    cwe352 -->|REQUIRES| cwe441\n    cwe352 -->|REQUIRES| cwe613\n    cwe352 -->|REQUIRES| cwe642\n    cwe352 -->|CANPRECEDE| cwe79\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **Cross-Site Request Forgery (CSRF)** (CWE-352), which allows an attacker to force a user to perform actions they did not intend to. In this case, the forced action leads to Stored XSS, where malicious scripts are injected into the web application (CWE-79).\n\n## Summary of Analysis\nThe vulnerability is a **Cross-Site Request Forgery (CSRF)** (CWE-352) that allows for Stored XSS (CWE-79). The primary weakness is the **CSRF**, as it is the entry point for the attack. The **CSRF** allows an attacker to force a user to perform actions they did not intend, such as injecting malicious scripts into the web application. The evidence for this mapping is found in the \"Vulnerability Description Key Phrases\" section:\n- **rootcause:** **Cross-Site Request Forgery**\n- **weakness:** **Cross-Site Scripting**\n- **impact:** Stored XSS\n\nCWE-352 [Cross-Site Request Forgery (CSRF)] is a Compound CWE, while CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] is a Base CWE. Both are at appropriate levels of specificity.\n\nCWEs considered but not used:\n- CWE-89 [Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')]: Not selected because there is no indication of SQL injection in the vulnerability description.\n- CWE-918 [Server-Side Request Forgery (SSRF)]: Not selected because there is no indication of Server-Side Request Forgery in the vulnerability description.\n- CWE-601 [URL Redirection to Untrusted Site ('Open Redirect')]: Not selected because there is no indication of URL redirection in the vulnerability description.\n- CWE-80 [Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)]: Not selected because CWE-79 is more appropriate for stored XSS.\n- CWE-95 [Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')]: Not selected because there is no indication of Eval Injection in the vulnerability description.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n**Chain starting from CWE-346:**\n- 346 (Origin Validation Error) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 224.98288452350454
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 186.85765819266896
    },
    {
      "metadata": {
        "doc_id": "918",
        "name": "Server-Side Request Forgery (SSRF)",
        "source": "sparse"
      },
      "similarity": 184.37450201593205
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 177.99031917955585
    },
    {
      "metadata": {
        "doc_id": "601",
        "name": "URL Redirection to Untrusted Site ('Open Redirect')",
        "source": "sparse"
      },
      "similarity": 172.41336235702508
    },
    {
      "metadata": {
        "doc_id": "1004",
        "name": "Sensitive Cookie Without 'HttpOnly' Flag",
        "source": "sparse"
      },
      "similarity": 164.6495416428368
    },
    {
      "metadata": {
        "doc_id": "80",
        "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
        "source": "sparse"
      },
      "similarity": 155.2229032462611
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 154.27958094624722
    },
    {
      "metadata": {
        "doc_id": "95",
        "name": "Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
        "type": "Variant",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before using the input in a dynamic evaluation call (e.g. \"eval\").",
        "keyphrase_source": "weakness:Cross-Site Scripting",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.5390471890523694
          }
        }
      },
      "similarity": 0.5390471890523694
    },
    {
      "doc_id": "494",
      "text": "CWE-494: Download of Code Without Integrity Check",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "494",
        "name": "Download of Code Without Integrity Check",
        "type": "base",
        "original_content": "CWE-494: Download of Code Without Integrity Check",
        "relationships": [
          {
            "source_id": "494",
            "target_id": "79",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "494",
            "target_id": "669",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "494",
            "target_id": "669",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "494",
            "target_id": "345",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "494",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "669",
            "target_id": "494",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "345",
            "target_id": "494",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "79",
                  "494",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "79"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "79",
                  "494",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "79"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-346",
      "CWE-601",
      "CWE-80",
      "CWE-79",
      "CWE-441",
      "CWE-613",
      "CWE-95",
      "CWE-642",
      "CWE-352",
      "CWE-918"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}