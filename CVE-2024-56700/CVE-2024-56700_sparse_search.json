{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved media wl128x Fix atomicity violation in fmc_send_cmd() Atomicity violation occurs when the fmc_send_cmd() function is executed simultaneously with the modification of the fmdev->resp_skb value. Consider a scenario where, after passing the validity check within the function, a non-null fmdev->resp_skb variable is assigned a null value. This results in an invalid fmdev->resp_skb variable passing the validity check. As seen in the later part of the function, skb = fmdev->resp_skb when the invalid fmdev->resp_skb passes the check, a null pointer dereference error may occur at line 478, evt_hdr = (void *)skb->data To address this issue, it is recommended to include the validity check of fmdev->resp_skb within the locked section of the function. This modification ensures that the value of fmdev->resp_skb does not change during the validation process, thereby maintaining its validity. This possible bug is found by an experimental static analysis tool developed by our team. This tool analyzes the locking APIs to extract function pairs that can be concurrently executed, and then analyzes the instructions in the paired functions to identify possible concurrency bugs including data races and atomicity violations.",
  "keyphrases": {
    "rootcause": [
      "atomicity violation"
    ]
  },
  "timestamp": "2025-07-12 06:43:38",
  "cve_id": "CVE-2024-56700",
  "result_count": 10,
  "results": [
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "score": 964.950474112052,
      "search_source": "rootcause:atomicity violation"
    },
    {
      "cwe_id": "364",
      "name": "Signal Handler Race Condition",
      "score": 955.5509965991682,
      "search_source": "rootcause:atomicity violation"
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "score": 941.4316735143634,
      "search_source": "rootcause:atomicity violation"
    },
    {
      "cwe_id": "252",
      "name": "Unchecked Return Value",
      "score": 930.3082799145834,
      "search_source": "rootcause:atomicity violation"
    },
    {
      "cwe_id": "787",
      "name": "Out-of-bounds Write",
      "score": 923.4555897178792,
      "search_source": "rootcause:atomicity violation"
    },
    {
      "cwe_id": "158",
      "name": "Improper Neutralization of Null Byte or NUL Character",
      "score": 910.3886324534155,
      "search_source": "rootcause:atomicity violation"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 899.8195633697521,
      "search_source": "rootcause:atomicity violation"
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "score": 897.5470910161432,
      "search_source": "rootcause:atomicity violation"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 895.5960304238495,
      "search_source": "rootcause:atomicity violation"
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "score": 893.8024308597896,
      "search_source": "rootcause:atomicity violation"
    }
  ]
}