{
  "method": "sparse_weakness_2",
  "query": "The does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin",
  "keyphrases": {
    "weakness": "improper input sanitization"
  },
  "timestamp": "2025-07-13T02:05:34.819888",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "352",
      "name": "Cross-Site Request Forgery (CSRF)",
      "score": 283.06635733216245
    },
    {
      "doc_id": "116",
      "name": "Improper Encoding or Escaping of Output",
      "score": 255.5694649341975
    },
    {
      "doc_id": "79",
      "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "score": 246.01313197432353
    },
    {
      "doc_id": "89",
      "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
      "score": 236.26487215405083
    },
    {
      "doc_id": "138",
      "name": "Improper Neutralization of Special Elements",
      "score": 227.25819528668606
    }
  ]
}