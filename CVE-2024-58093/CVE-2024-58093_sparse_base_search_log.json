{
  "method": "sparse_base",
  "query": "In the Linux kernel, the following vulnerability has been resolved PCI/ASPM Fix link state exit during switch upstream function removal Before 456d8aa37d0f (PCI/ASPM Disable ASPM on MFD function removal to avoid use-after-free), we would free the ASPM link only after the last function on the bus pertaining to the given link was removed. That was too late. If function 0 is removed before sibling function, link->downstream would point to freed memory after. After above change, we freed the ASPM parent link state upon any function removal on the bus pertaining to a given link. That is too early. If the link is to a PCIe switch with MFD on the upstream port, then removing functions other than 0 first would free a link which still remains parent_link to the remaining downstream ports. The resulting GPFs are especially frequent during hot-unplug, because pciehp removes devices on the link bus in reverse order. On that switch, function 0 is the virtual P2P bridge to the internal bus. Free exactly when function 0 is removed -- before the parent link is obsolete, but after all subordinate links are gone. [kwilczynski commit log]",
  "keyphrases": {
    "base_query": "In the Linux kernel, the following vulnerability has been resolved PCI/ASPM Fix link state exit during switch upstream function removal Before 456d8aa37d0f (PCI/ASPM Disable ASPM on MFD function removal to avoid use-after-free), we would free the ASPM link only after the last function on the bus pertaining to the given link was removed. That was too late. If function 0 is removed before sibling function, link->downstream would point to freed memory after. After above change, we freed the ASPM parent link state upon any function removal on the bus pertaining to a given link. That is too early. If the link is to a PCIe switch with MFD on the upstream port, then removing functions other than 0 first would free a link which still remains parent_link to the remaining downstream ports. The resulting GPFs are especially frequent during hot-unplug, because pciehp removes devices on the link bus in reverse order. On that switch, function 0 is the virtual P2P bridge to the internal bus. Free exactly when function 0 is removed -- before the parent link is obsolete, but after all subordinate links are gone. [kwilczynski commit log]"
  },
  "timestamp": "2025-07-12T07:00:55.301919",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 308.8985729616571
    },
    {
      "doc_id": "59",
      "name": "Improper Link Resolution Before File Access ('Link Following')",
      "score": 303.9892656631121
    },
    {
      "doc_id": "61",
      "name": "UNIX Symbolic Link (Symlink) Following",
      "score": 291.99208869944096
    },
    {
      "doc_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "score": 285.20146648610535
    },
    {
      "doc_id": "364",
      "name": "Signal Handler Race Condition",
      "score": 281.9572049905222
    }
  ]
}