{
  "cve_id": "CVE-2025-26768",
  "description": "Cross-Site Request Forgery (CSRF) vulnerability in what3words what3words Address Field allows Stored XSS. This issue affects what3words Address Field from n/a through 4.0.15.",
  "key_phrases": {
    "component": "",
    "rootcause": "",
    "vector": "",
    "weakness": "Cross-Site Request Forgery, Stored XSS",
    "product": "what3words Address Field",
    "impact": "",
    "attacker": "",
    "version": "n/a through 4.0.15"
  },
  "reference_content": "## Analysis of CVE-2025-26768 Content\n\nThe provided content **relates** to CVE-2025-26768.\n\n**Root cause of vulnerability:**\n\nThe vulnerability is a Cross-Site Request Forgery (CSRF) issue. The root cause is the lack of proper CSRF protection in the what3words Address Field plugin.\n\n**Weaknesses/vulnerabilities present:**\n\n*   Cross-Site Request Forgery (CSRF) - allowing malicious actors to execute unwanted actions on behalf of authenticated users.\n*   Broken Access Control (OWASP Top 10 - A1)\n\n**Impact of exploitation:**\n\nA malicious actor can force higher privileged users to execute unwanted actions while they are authenticated. The specific impact varies case by case.\n\n**Attack vectors:**\n\nThe attack vector is through exploiting the lack of CSRF protection, likely via a malicious website or link that triggers an unwanted action on the vulnerable WordPress site when a user is logged in.\n\n**Required attacker capabilities/position:**\n\n*   **Required privilege:** Unauthenticated - meaning an attacker does not need to be logged in to exploit the vulnerability.\n*   The attacker needs to be able to craft a malicious request that a logged-in user will execute.\n\n**Mitigation or fix:**\n\n*   Update to version 4.0.16 or later.\n*   Patchstack users can enable auto-updates for vulnerable plugins.\n\n**Additional Details (more than official CVE description):**\n\n*   **Vulnerable versions:** <= 4.0.15\n*   **Fixed in:** 4.0.16\n*   **CVSS Score:** 7.1 (Low severity)\n*   **Reported by:** Abdi Pranata\n*   **PSID:** 6d6f083139f9\n*   The content highlights Patchstack's role in vulnerability disclosure and virtual patching.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 0.9 | Compound |  Primary | Allowed |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.8 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is CWE-352, which is a compound weakness representing a combination of multiple underlying issues that lead to CSRF. CWE-79 is identified as a secondary weakness due to the mention of Stored XSS in the vulnerability description. While CWE-79 itself isn't directly causing the CSRF, its presence alongside the CSRF vulnerability suggests that input validation and output encoding issues may be exacerbating the overall risk.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe79 -- CANFOLLOW --> cwe352\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **lack of CSRF protection** (**CWE-352**), which allows an attacker to perform actions on behalf of an authenticated user. The presence of Stored XSS (**CWE-79**) suggests that input is not being properly neutralized, potentially allowing for malicious scripts to be stored and executed, further compounding the impact of the CSRF vulnerability.\n\n## Summary of Analysis\nThe initial assessment identifies **Cross-Site Request Forgery (CSRF)** as the primary vulnerability, due to the **lack of proper CSRF protection**. The additional finding of \"Stored XSS\" suggests that there may be input validation issues as well. The retriever results support the selection of CWE-352 and CWE-79. Given the evidence provided, CWE-352 is the primary root cause, with CWE-79 exacerbating the impact. The final selection is based on the evidence from the vulnerability description and the retriever results. The selected CWEs are at the optimal level of specificity, with CWE-352 being a compound weakness and CWE-79 being a Base weakness.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n**Technical Explanation:**\n\nThe primary vulnerability is **CWE-352 - Cross-Site Request Forgery (CSRF)**. This occurs because the what3words Address Field plugin **does not sufficiently verify if a request was intentionally provided by the user.** This allows an attacker to craft a malicious request that is then executed by an authenticated user without their knowledge or consent.\n\n**Security Implications and Potential Impact:**\nThe security implication is that an attacker can perform actions on behalf of an authenticated user. The impact can vary depending on the privileges of the user and the actions that can be performed.\n\n**Parent-Child Relationships and Chain Patterns:**\nCWE-352 is a compound weakness, meaning it is composed of multiple underlying issues.\n\n**Primary or Secondary Weakness:**\nThis is the primary weakness, as it is the root cause of the vulnerability.\n\n**MITRE Mapping Guidance Influence:**\nThe MITRE mapping guidance allows for the use of CWE-352, stating \"This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\"\n\n## CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**Technical Explanation:**\nThe vulnerability description mentions \"Stored XSS,\" which maps to **CWE-79 - Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')**. This occurs because the product **does not neutralize user-controllable input** before placing it in output used as a web page.\n\n**Security Implications and Potential Impact:**\nThe security implication is that an attacker can inject malicious scripts into the web page, which will be executed by other users who view the page. The impact can range from defacement to data theft to session hijacking.\n\n**Parent-Child Relationships and Chain Patterns:**\nCWE-79 can be related to other CWEs such as CWE-116 (Improper Encoding or Escaping of Output) and CWE-80 (Improper Neutralization of Script-Related HTML Tags in a Web Page).\n\n**Primary or Secondary Weakness:**\nThis is a secondary weakness, as it is not the root cause of the CSRF vulnerability, but it exacerbates the overall risk.\n\n**MITRE Mapping Guidance Influence:**\nThe MITRE mapping guidance allows for the use of CWE-79, stating \"This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\"\n\n**CWEs Considered but Not Used:**\n\n*   CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') - Not used because there is no evidence of SQL injection in the vulnerability description.\n*   CWE-918: Server-Side Request Forgery (SSRF) - Not used because there is no evidence of SSRF in the vulnerability description.\n*   CWE-425: Direct Request ('Forced Browsing') - Not used because the issue is not about direct request, but rather about CSRF.\n*   CWE-601: URL Redirection to Untrusted Site ('Open Redirect') - Not used because there is no URL redirection issue.\n*   CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting') - Not used because there is no CRLF injection issue.\n*   CWE-184: Incomplete List of Disallowed Inputs - Not used because the vulnerability is about CSRF and XSS.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 0.9 | Compound |  Primary | Allowed |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.8 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is CWE-352, which is a compound weakness representing a combination of multiple underlying issues that lead to CSRF. CWE-79 is identified as a secondary weakness due to the mention of Stored XSS in the vulnerability description. While CWE-79 itself isn't directly causing the CSRF, its presence alongside the CSRF vulnerability suggests that input validation and output encoding issues may be exacerbating the overall risk.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe79 -- CANFOLLOW --> cwe352\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **lack of CSRF protection** (**CWE-352**), which allows an attacker to perform actions on behalf of an authenticated user. The presence of Stored XSS (**CWE-79**) suggests that input is not being properly neutralized, potentially allowing for malicious scripts to be stored and executed, further compounding the impact of the CSRF vulnerability.\n\n## Summary of Analysis\nThe initial assessment identifies **Cross-Site Request Forgery (CSRF)** as the primary vulnerability, due to the **lack of proper CSRF protection**. The additional finding of \"Stored XSS\" suggests that there may be input validation issues as well. The retriever results support the selection of CWE-352 and CWE-79. Given the evidence provided, CWE-352 is the primary root cause, with CWE-79 exacerbating the impact. The final selection is based on the evidence from the vulnerability description and the retriever results. The selected CWEs are at the optimal level of specificity, with CWE-352 being a compound weakness and CWE-79 being a Base weakness.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n**Technical Explanation:**\n\nThe primary vulnerability is **CWE-352 - Cross-Site Request Forgery (CSRF)**. This occurs because the what3words Address Field plugin **does not sufficiently verify if a request was intentionally provided by the user.** This allows an attacker to craft a malicious request that is then executed by an authenticated user without their knowledge or consent.\n\n**Security Implications and Potential Impact:**\nThe security implication is that an attacker can perform actions on behalf of an authenticated user. The impact can vary depending on the privileges of the user and the actions that can be performed.\n\n**Parent-Child Relationships and Chain Patterns:**\nCWE-352 is a compound weakness, meaning it is composed of multiple underlying issues.\n\n**Primary or Secondary Weakness:**\nThis is the primary weakness, as it is the root cause of the vulnerability.\n\n**MITRE Mapping Guidance Influence:**\nThe MITRE mapping guidance allows for the use of CWE-352, stating \"This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\"\n\n## CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**Technical Explanation:**\nThe vulnerability description mentions \"Stored XSS,\" which maps to **CWE-79 - Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')**. This occurs because the product **does not neutralize user-controllable input** before placing it in output used as a web page.\n\n**Security Implications and Potential Impact:**\nThe security implication is that an attacker can inject malicious scripts into the web page, which will be executed by other users who view the page. The impact can range from defacement to data theft to session hijacking.\n\n**Parent-Child Relationships and Chain Patterns:**\nCWE-79 can be related to other CWEs such as CWE-116 (Improper Encoding or Escaping of Output) and CWE-80 (Improper Neutralization of Script-Related HTML Tags in a Web Page).\n\n**Primary or Secondary Weakness:**\nThis is a secondary weakness, as it is not the root cause of the CSRF vulnerability, but it exacerbates the overall risk.\n\n**MITRE Mapping Guidance Influence:**\nThe MITRE mapping guidance allows for the use of CWE-79, stating \"This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\"\n\n**CWEs Considered but Not Used:**\n\n*   CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') - Not used because there is no evidence of SQL injection in the vulnerability description.\n*   CWE-918: Server-Side Request Forgery (SSRF) - Not used because there is no evidence of SSRF in the vulnerability description.\n*   CWE-425: Direct Request ('Forced Browsing') - Not used because the issue is not about direct request, but rather about CSRF.\n*   CWE-601: URL Redirection to Untrusted Site ('Open Redirect') - Not used because there is no URL redirection issue.\n*   CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting') - Not used because there is no CRLF injection issue.\n*   CWE-184: Incomplete List of Disallowed Inputs - Not used because the vulnerability is about CSRF and XSS.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: XSS",
        "match_reason": "term_in_phrase_compound_part_1"
      },
      "similarity": 800.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 218.87088049007875
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 187.81964405862325
    },
    {
      "metadata": {
        "doc_id": "918",
        "name": "Server-Side Request Forgery (SSRF)",
        "source": "sparse"
      },
      "similarity": 184.94955636511668
    },
    {
      "metadata": {
        "doc_id": "1004",
        "name": "Sensitive Cookie Without 'HttpOnly' Flag",
        "source": "sparse"
      },
      "similarity": 162.03490318444645
    },
    {
      "metadata": {
        "doc_id": "601",
        "name": "URL Redirection to Untrusted Site ('Open Redirect')",
        "source": "sparse"
      },
      "similarity": 153.98932199162795
    },
    {
      "metadata": {
        "doc_id": "80",
        "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
        "source": "sparse"
      },
      "similarity": 150.81528660927546
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 140.87222160231198
    },
    {
      "metadata": {
        "doc_id": "113",
        "name": "Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')",
        "type": "Variant",
        "original_content": "The product receives data from an HTTP agent/component (e.g., web server, proxy, browser, etc.), but it does not neutralize or incorrectly neutralizes CR and LF characters before the data is included in outgoing HTTP headers.",
        "keyphrase_source": "weakness:Stored XSS",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5793969994390216,
            "graph": 2.1850008794303806
          }
        }
      },
      "similarity": 0.5793969994390216
    },
    {
      "doc_id": "184",
      "text": "CWE-184: Incomplete List of Disallowed Inputs",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "184",
        "name": "Incomplete List of Disallowed Inputs",
        "type": "base",
        "original_content": "CWE-184: Incomplete List of Disallowed Inputs",
        "relationships": [
          {
            "source_id": "184",
            "target_id": "692",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "434",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "78",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "79",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "1023",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "693",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "86",
            "target_id": "184",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "78",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "693",
            "target_id": "184",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "692",
            "target_id": "184",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "692",
            "target_id": "184",
            "label": "STARTSWITH",
            "properties": {
              "view_id": "709"
            }
          },
          {
            "source_id": "625",
            "target_id": "184",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "434",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "186",
            "target_id": "184",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1023",
            "target_id": "184",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "79",
                  "184",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "79"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "79",
                  "184",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "79"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "184",
                  "79",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "79"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-116",
      "CWE-80",
      "CWE-601",
      "CWE-79",
      "CWE-113",
      "CWE-352",
      "CWE-184",
      "CWE-918",
      "CWE-425"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}