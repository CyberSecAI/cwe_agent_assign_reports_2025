{
  "method": "sparse_rootcause_1",
  "query": "In the Linux kernel, the following vulnerability has been resolved memblock make memblock_set_node() also warn about use of MAX_NUMNODES On an (old) x86 system with SRAT just covering space above 4Gb ACPI SRAT Node 0 PXM 0 [mem 0x100000000-0xfffffffff] hotplug the commit referenced below leads to this NUMA configuration no longer being refused by a CONFIG_NUMA=y kernel (previously NUMA nodes only cover 6144MB of your 8185MB e820 RAM. Not used. No NUMA configuration found Faking a node at [mem 0x0000000000000000-0x000000027fffffff] was seen in the log directly after the message quoted above), because of memblock_validate_numa_coverage() checking for NUMA_NO_NODE (only). This in turn led to memblock_alloc_range_nid()s warning about MAX_NUMNODES triggering, followed by a NULL deref in memmap_init() when trying to access node 64s (NODE_SHIFT=6) node data. To compensate said change, make memblock_set_node() warn on and adjust a passed in value of MAX_NUMNODES, just like various other functions already do.",
  "keyphrases": {
    "rootcause": "faking a node at [mem 0x0000000000000000-0x000000027fffffff] was seen"
  },
  "timestamp": "2025-07-13T12:42:00.383643",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "201",
      "name": "Insertion of Sensitive Information Into Sent Data",
      "score": 608.6075929589678
    },
    {
      "doc_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "score": 602.9117372267854
    },
    {
      "doc_id": "214",
      "name": "Invocation of Process Using Visible Sensitive Information",
      "score": 601.5648601355913
    },
    {
      "doc_id": "863",
      "name": "Incorrect Authorization",
      "score": 584.551579141565
    },
    {
      "doc_id": "400",
      "name": "Uncontrolled Resource Consumption",
      "score": 570.6483101434306
    }
  ]
}