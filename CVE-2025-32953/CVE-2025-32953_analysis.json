{
  "cve_id": "CVE-2025-32953",
  "description": "z80pack is a mature emulator of multiple platforms with 8080 and Z80 CPU. In version 1.38 and prior, the `makefile-ubuntu.yml` workflow file uses `actions/upload-artifact@v4` to upload the `z80pack-ubuntu` artifact. This artifact is a zip of the current directory, which includes the automatically generated `.git/config` file containing the runs GITHUB_TOKEN. Seeing as the artifact can be downloaded prior to the end of the workflow, there is a few seconds where an attacker can extract the token from the artifact and use it with the Github API to push malicious code or rewrite release commits in your repository. This issue has been fixed in commit bd95916.",
  "key_phrases": {
    "component": "makefile-ubuntu.yml workflow file",
    "rootcause": "",
    "vector": "",
    "weakness": "",
    "product": "z80pack",
    "impact": "push malicious code, rewrite release commits",
    "attacker": "attacker",
    "version": "1.38 and prior"
  },
  "reference_content": "```\n- Root cause of vulnerability:\nThe `makefile-ubuntu.yml` workflow file uses `actions/upload-artifact@v4` to upload the `z80pack-ubuntu` artifact. This artifact is a zip of the current directory, which includes the automatically generated `.git/config` file containing the run's GITHUB_TOKEN.\n\n- Weaknesses/vulnerabilities present:\nExposure of the GITHUB_TOKEN in workflow run artifact.\n\n- Impact of exploitation:\nAn attacker can extract the token from the artifact and use it with the Github API to push malicious code or rewrite release commits in the repository.\n\n- Attack vectors:\n* Monitor for runs of the `makefile-ubuntu.yml` workflow.\n* Once a run is found, wait for the artifact to be made available.\n* Download and extract the GITHUB_TOKEN from it.\n* Use the token with the Github API to push a new commit or update release tags.\n\n- Required attacker capabilities/position:\nAn attacker needs to be able to access the uploaded artifact, which contains the GITHUB_TOKEN.\n\n- Mitigation or fix:\nOnly add the files required to the artifact, instead of specifying the current directory. Make sure the artifact doesn't contain environment variables or the `.git/config` file.\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-497 | Exposure of Sensitive System Information to an Unauthorized Control Sphere | 0.9 | Base | Allowed | Primary CWE |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-497, which is a Base level weakness. No parent or child relationships are directly relevant in refining the selection, as CWE-497 captures the essence of the vulnerability.\n\n```mermaid\ngraph TD\n    cwe497[\"CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\"]\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    class cwe497 primary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the inclusion of the GITHUB_TOKEN in the automatically generated `.git/config` file, which is then included in the uploaded artifact. This leads to the exposure of sensitive information, allowing an attacker to potentially push malicious code or rewrite release commits. The root cause is the **improper handling of sensitive information**, leading to its exposure.\n\n## Summary of Analysis\nThe initial analysis identified several candidate CWEs based on the vulnerability description. However, after a detailed review, CWE-497, \"Exposure of Sensitive System Information to an Unauthorized Control Sphere,\" was selected as the most appropriate primary CWE.\n\nThe selection of CWE-497 is strongly supported by the evidence provided in the \"CVE Reference Links Content Summary,\" which explicitly states: \"Weaknesses/vulnerabilities present: Exposure of the GITHUB_TOKEN in workflow run artifact.\" This directly aligns with the description of CWE-497, which focuses on the **improper prevention of sensitive system-level information from being accessed by unauthorized actors**. The vulnerability description highlights that the `.git/config` file, containing the GITHUB_TOKEN, is included in the uploaded artifact, making it accessible to attackers. This exposure allows attackers to use the token with the Github API to push malicious code or rewrite release commits.\n\nThe retriever results also include CWE-497 \"Exposure of Sensitive System Information to an Unauthorized Control Sphere\".\n\nThe reasoning for selecting CWE-497 is further strengthened by the mitigation strategy outlined in the \"CVE Reference Links Content Summary\": \"Only add the files required to the artifact, instead of specifying the current directory. Make sure the artifact doesn't contain environment variables or the `.git/config` file.\" This mitigation directly addresses the **improper handling and subsequent exposure of sensitive information** within the artifact.\n\nThe selected CWE, CWE-497, is at the optimal level of specificity, providing a clear and accurate representation of the vulnerability.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-88: Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product constructs a string for a command to be executed by a separate component\nin another control sphere, but it does not properly delimit the\nintended arguments, options, or switches within that command string.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Used:* This CWE focuses on command injection, which is not the primary issue in this case. The vulnerability is about exposure of sensitive information, not the construction of commands.\n\n## CWE-1286: Improper Validation of Syntactic Correctness of Input\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product receives input that is expected to be well-formed - i.e., to comply with a certain syntax - but it does not validate or incorrectly validates that the input complies with the syntax.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Used:* This CWE does not directly relate to the exposure of sensitive information.\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Used:* Similar to CWE-497, but CWE-497 is more specific in describing the context of system information exposure.\n\n## CWE-73: External Control of File Name or Path\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product allows user input to control or influence paths or file names that are used in filesystem operations.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Used:* This CWE focuses on path manipulation, not the exposure of sensitive information.\n\n## CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Used:* This CWE directly addresses the vulnerability, as it describes the exposure of sensitive system information (GITHUB_TOKEN) to unauthorized actors.\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n*Not Used:* Encoding or escaping is not the core issue in this vulnerability.\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Used:* The vulnerability does not involve uploading dangerous file types.\n\n## CWE-59: Improper Link Resolution Before File Access ('Link Following')\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Used:* Link resolution is not relevant to the vulnerability.\n\n## CWE-267: Privilege Defined With Unsafe Actions\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nA particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Used:* This CWE is not applicable because the vulnerability is not about privileges being misused.\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Used:* Forced browsing is not related to this vulnerability.\n\n## CWE-59: Improper Link Resolution Before File Access ('Link Following')\n**Abstraction Level**: Base\n**Similarity Score**: 933.20",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-497 | Exposure of Sensitive System Information to an Unauthorized Control Sphere | 0.9 | Base | Allowed | Primary CWE |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-497, which is a Base level weakness. No parent or child relationships are directly relevant in refining the selection, as CWE-497 captures the essence of the vulnerability.\n\n```mermaid\ngraph TD\n    cwe497[\"CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\"]\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    class cwe497 primary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the inclusion of the GITHUB_TOKEN in the automatically generated `.git/config` file, which is then included in the uploaded artifact. This leads to the exposure of sensitive information, allowing an attacker to potentially push malicious code or rewrite release commits. The root cause is the **improper handling of sensitive information**, leading to its exposure.\n\n## Summary of Analysis\nThe initial analysis identified several candidate CWEs based on the vulnerability description. However, after a detailed review, CWE-497, \"Exposure of Sensitive System Information to an Unauthorized Control Sphere,\" was selected as the most appropriate primary CWE.\n\nThe selection of CWE-497 is strongly supported by the evidence provided in the \"CVE Reference Links Content Summary,\" which explicitly states: \"Weaknesses/vulnerabilities present: Exposure of the GITHUB_TOKEN in workflow run artifact.\" This directly aligns with the description of CWE-497, which focuses on the **improper prevention of sensitive system-level information from being accessed by unauthorized actors**. The vulnerability description highlights that the `.git/config` file, containing the GITHUB_TOKEN, is included in the uploaded artifact, making it accessible to attackers. This exposure allows attackers to use the token with the Github API to push malicious code or rewrite release commits.\n\nThe retriever results also include CWE-497 \"Exposure of Sensitive System Information to an Unauthorized Control Sphere\".\n\nThe reasoning for selecting CWE-497 is further strengthened by the mitigation strategy outlined in the \"CVE Reference Links Content Summary\": \"Only add the files required to the artifact, instead of specifying the current directory. Make sure the artifact doesn't contain environment variables or the `.git/config` file.\" This mitigation directly addresses the **improper handling and subsequent exposure of sensitive information** within the artifact.\n\nThe selected CWE, CWE-497, is at the optimal level of specificity, providing a clear and accurate representation of the vulnerability.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-88: Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product constructs a string for a command to be executed by a separate component\nin another control sphere, but it does not properly delimit the\nintended arguments, options, or switches within that command string.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Used:* This CWE focuses on command injection, which is not the primary issue in this case. The vulnerability is about exposure of sensitive information, not the construction of commands.\n\n## CWE-1286: Improper Validation of Syntactic Correctness of Input\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product receives input that is expected to be well-formed - i.e., to comply with a certain syntax - but it does not validate or incorrectly validates that the input complies with the syntax.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Used:* This CWE does not directly relate to the exposure of sensitive information.\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Used:* Similar to CWE-497, but CWE-497 is more specific in describing the context of system information exposure.\n\n## CWE-73: External Control of File Name or Path\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product allows user input to control or influence paths or file names that are used in filesystem operations.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Used:* This CWE focuses on path manipulation, not the exposure of sensitive information.\n\n## CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Used:* This CWE directly addresses the vulnerability, as it describes the exposure of sensitive system information (GITHUB_TOKEN) to unauthorized actors.\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n*Not Used:* Encoding or escaping is not the core issue in this vulnerability.\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Used:* The vulnerability does not involve uploading dangerous file types.\n\n## CWE-59: Improper Link Resolution Before File Access ('Link Following')\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Used:* Link resolution is not relevant to the vulnerability.\n\n## CWE-267: Privilege Defined With Unsafe Actions\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nA particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Used:* This CWE is not applicable because the vulnerability is not about privileges being misused.\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Used:* Forced browsing is not related to this vulnerability.\n\n## CWE-59: Improper Link Resolution Before File Access ('Link Following')\n**Abstraction Level**: Base\n**Similarity Score**: 933.20\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n**Chain starting from CWE-88:**\n- 88 (Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "59",
        "name": "Improper Link Resolution Before File Access ('Link Following')",
        "source": "sparse"
      },
      "similarity": 209.9229629140257
    },
    {
      "metadata": {
        "doc_id": "61",
        "name": "UNIX Symbolic Link (Symlink) Following",
        "source": "sparse"
      },
      "similarity": 200.10487119974
    },
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "sparse"
      },
      "similarity": 199.9742446300875
    },
    {
      "metadata": {
        "doc_id": "23",
        "name": "Relative Path Traversal",
        "source": "sparse"
      },
      "similarity": 199.31394504995285
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 196.9436794474595
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse"
      },
      "similarity": 195.9575248136994
    },
    {
      "metadata": {
        "doc_id": "427",
        "name": "Uncontrolled Search Path Element",
        "source": "sparse"
      },
      "similarity": 194.8088661314794
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 190.803347490154
    },
    {
      "metadata": {
        "doc_id": "88",
        "name": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
        "type": "Base",
        "original_content": "The product constructs a string for a command to be executed by a separate component\nin another control sphere, but it does not properly delimit the\nintended arguments, options, or switches within that command string.",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.36137049073244415,
            "graph": 1.7373555696430798
          }
        }
      },
      "similarity": 0.36137049073244415
    },
    {
      "doc_id": "494",
      "text": "The product downloads source code or an executable from a remote location and executes the code without sufficiently verifying the origin and integrity of the code.",
      "score": 0.4199665621811528,
      "metadata": {
        "doc_id": "494",
        "name": "Download of Code Without Integrity Check",
        "type": "Base",
        "extended_description": "An attacker can execute malicious code by compromising the host server, performing DNS spoofing, or modifying the code in transit.",
        "alternate_terms": [],
        "original_content": "The product downloads source code or an executable from a remote location and executes the code without sufficiently verifying the origin and integrity of the code.",
        "relationships": [
          {
            "source_id": "494",
            "target_id": "79",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "494",
            "target_id": "669",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "494",
            "target_id": "669",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "494",
            "target_id": "345",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "494",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "669",
            "target_id": "494",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "345",
            "target_id": "494",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "source": "graph",
        "sources": [
          "vector",
          "graph"
        ],
        "vector_score": 0.4199665621811528,
        "graph_score": 4.329000000000001,
        "score_components": {
          "explicit_mention": 1.0,
          "relationship_chain": 1.0,
          "abstraction_path": 0.9,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "79",
                  "494",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "79"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "79",
                  "494",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "79"
            }
          }
        },
        "is_explicit": true,
        "abstraction_level": "base",
        "position": "after",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.3437755965122845,
            "graph": 2.7653866248724617
          }
        }
      },
      "similarity": 2.7653866248724617
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-116",
      "CWE-88",
      "CWE-1286",
      "CWE-73",
      "CWE-59",
      "CWE-267",
      "CWE-425",
      "CWE-497",
      "CWE-212",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}