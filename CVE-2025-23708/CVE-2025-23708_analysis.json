{
  "cve_id": "CVE-2025-23708",
  "description": "**Cross-Site Request Forgery (CSRF)** vulnerability in Dominic Fallows DF Draggable allows Stored XSS.This issue affects DF Draggable from n/a through 1.13.2.",
  "key_phrases": {
    "component": "",
    "rootcause": "Cross-Site Request Forgery (CSRF)",
    "vector": "",
    "weakness": "Stored XSS, cross-site scripting",
    "product": "Dominic Fallows DF Draggable",
    "impact": "",
    "attacker": "",
    "version": "n/a through 1.13.2"
  },
  "reference_content": "Root cause of vulnerability:\nThe DF Draggable WordPress plugin is vulnerable to Cross Site Request Forgery (CSRF).\n\nWeaknesses/vulnerabilities present:\nCross Site Request Forgery (CSRF) - allows a malicious actor to force higher privileged users to execute unwanted actions under their current authentication.\n\nImpact of exploitation:\nA malicious actor can force higher privileged users to execute unwanted actions. The specific impact varies case by case.\n\nAttack vectors:\nCross-Site Request Forgery (CSRF) attack.\n\nRequired attacker capabilities/position:\nUnauthenticated attacker.\n\nMitigation or fix:\nNo official fix available. Patchstack offers virtual patching (vPatching) as a mitigation.\n\nAdditional details:\n- CVSS score: 7.1 (Low severity)\n- Affected versions: <= 1.13.2\n- OWASP Top 10: A1: Broken Access Control\n- Reported by: SOPROBRO\n- Published by Patchstack: January 16, 2025\n- Plugin: DF Draggable",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 1.0 | Compound | Allowed | Primary CWE |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship is that CWE-352 [Cross-Site Request Forgery (CSRF)] can lead to other vulnerabilities such as CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] because a successful CSRF attack can allow an attacker to inject malicious scripts. CWE-352 is a compound weakness, while CWE-79 is a base weakness, which aligns with the identified root cause and potential impact.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe79 -->|CANFOLLOW| cwe352\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **Cross-Site Request Forgery (CSRF)** (**rootcause**), which allows an attacker to force a privileged user to perform unwanted actions. This can then be exploited to inject a **Stored XSS** (**weakness**), represented by CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')]. The initial flaw is the lack of CSRF protection, leading to the XSS vulnerability due to improper neutralization of input.\n\n## Summary of Analysis\nThe primary CWE is CWE-352 [Cross-Site Request Forgery (CSRF)] because the vulnerability description and the CVE Reference Links Content Summary clearly state that the **rootcause** of the vulnerability is **Cross-Site Request Forgery (CSRF)**. The **Cross-Site Request Forgery (CSRF)** allows a malicious actor to force higher privileged users to execute unwanted actions which results in **Stored XSS, cross-site scripting**. The retriever results also listed CWE-352 [Cross-Site Request Forgery (CSRF)] as a candidate. The vulnerability is described as a **Cross-Site Request Forgery (CSRF)** vulnerability that allows **Stored XSS**. This aligns with the description of CWE-352 [Cross-Site Request Forgery (CSRF)], which involves forcing users to perform actions they did not intend to perform. The description also mentions that a malicious actor can force higher privileged users to execute unwanted actions under their current authentication. CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] is also relevant because the **Cross-Site Request Forgery (CSRF)** can be exploited to inject a stored XSS due to improper neutralization of input.\n\nCWE-89 [Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')], CWE-918 [Server-Side Request Forgery (SSRF)], CWE-601 [URL Redirection to Untrusted Site ('Open Redirect')], CWE-1004 [Sensitive Cookie Without 'HttpOnly' Flag], CWE-116 [Improper Encoding or Escaping of Output], CWE-1275 [Sensitive Cookie with Improper SameSite Attribute], CWE-80 [Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)], and CWE-494 [Download of Code Without Integrity Check] were considered but ultimately not chosen as primary CWEs because the vulnerability description and CVE Reference Links Content Summary focused on **Cross-Site Request Forgery (CSRF)** as the **rootcause**.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 1.0 | Compound | Allowed | Primary CWE |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship is that CWE-352 [Cross-Site Request Forgery (CSRF)] can lead to other vulnerabilities such as CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] because a successful CSRF attack can allow an attacker to inject malicious scripts. CWE-352 is a compound weakness, while CWE-79 is a base weakness, which aligns with the identified root cause and potential impact.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe79 -->|CANFOLLOW| cwe352\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **Cross-Site Request Forgery (CSRF)** (**rootcause**), which allows an attacker to force a privileged user to perform unwanted actions. This can then be exploited to inject a **Stored XSS** (**weakness**), represented by CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')]. The initial flaw is the lack of CSRF protection, leading to the XSS vulnerability due to improper neutralization of input.\n\n## Summary of Analysis\nThe primary CWE is CWE-352 [Cross-Site Request Forgery (CSRF)] because the vulnerability description and the CVE Reference Links Content Summary clearly state that the **rootcause** of the vulnerability is **Cross-Site Request Forgery (CSRF)**. The **Cross-Site Request Forgery (CSRF)** allows a malicious actor to force higher privileged users to execute unwanted actions which results in **Stored XSS, cross-site scripting**. The retriever results also listed CWE-352 [Cross-Site Request Forgery (CSRF)] as a candidate. The vulnerability is described as a **Cross-Site Request Forgery (CSRF)** vulnerability that allows **Stored XSS**. This aligns with the description of CWE-352 [Cross-Site Request Forgery (CSRF)], which involves forcing users to perform actions they did not intend to perform. The description also mentions that a malicious actor can force higher privileged users to execute unwanted actions under their current authentication. CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] is also relevant because the **Cross-Site Request Forgery (CSRF)** can be exploited to inject a stored XSS due to improper neutralization of input.\n\nCWE-89 [Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')], CWE-918 [Server-Side Request Forgery (SSRF)], CWE-601 [URL Redirection to Untrusted Site ('Open Redirect')], CWE-1004 [Sensitive Cookie Without 'HttpOnly' Flag], CWE-116 [Improper Encoding or Escaping of Output], CWE-1275 [Sensitive Cookie with Improper SameSite Attribute], CWE-80 [Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)], and CWE-494 [Download of Code Without Integrity Check] were considered but ultimately not chosen as primary CWEs because the vulnerability description and CVE Reference Links Content Summary focused on **Cross-Site Request Forgery (CSRF)** as the **rootcause**.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: XSS",
        "match_reason": "term_in_phrase_compound_part_0"
      },
      "similarity": 800.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 248.76242328357426
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 192.13117495435046
    },
    {
      "metadata": {
        "doc_id": "918",
        "name": "Server-Side Request Forgery (SSRF)",
        "source": "sparse"
      },
      "similarity": 184.8863923320119
    },
    {
      "metadata": {
        "doc_id": "601",
        "name": "URL Redirection to Untrusted Site ('Open Redirect')",
        "source": "sparse"
      },
      "similarity": 183.7749006044008
    },
    {
      "metadata": {
        "doc_id": "1004",
        "name": "Sensitive Cookie Without 'HttpOnly' Flag",
        "source": "sparse"
      },
      "similarity": 180.84139741338515
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 172.54632432007875
    },
    {
      "metadata": {
        "doc_id": "1275",
        "name": "Sensitive Cookie with Improper SameSite Attribute",
        "source": "sparse"
      },
      "similarity": 170.5803775105004
    },
    {
      "metadata": {
        "doc_id": "80",
        "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
        "type": "Variant",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.",
        "keyphrase_source": "weakness:Stored XSS",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "retriever_count": 3,
          "normalized_scores": {
            "dense": 0.5349878469413067,
            "sparse": 150.5729913532322,
            "graph": 1.5238484843087503
          }
        }
      },
      "similarity": 0.5349878469413067
    },
    {
      "doc_id": "494",
      "text": "CWE-494: Download of Code Without Integrity Check",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "494",
        "name": "Download of Code Without Integrity Check",
        "type": "base",
        "original_content": "CWE-494: Download of Code Without Integrity Check",
        "relationships": [
          {
            "source_id": "494",
            "target_id": "79",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "494",
            "target_id": "669",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "494",
            "target_id": "669",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "494",
            "target_id": "345",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "494",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "669",
            "target_id": "494",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "345",
            "target_id": "494",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "79",
                  "494",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "79"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "79",
                  "494",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "79"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-116",
      "CWE-494",
      "CWE-80",
      "CWE-601",
      "CWE-79",
      "CWE-1004",
      "CWE-352",
      "CWE-1275",
      "CWE-918"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}