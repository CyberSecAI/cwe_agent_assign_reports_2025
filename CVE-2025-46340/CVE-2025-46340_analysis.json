{
  "cve_id": "CVE-2025-46340",
  "description": "Misskey is an open source, federated social media platform. Starting in version 12.0.0 and prior to version 2025.4.1, due to an oversight in the validation performed in `UrlPreviewService` and `MkUrlPreview`, it is possible for an attacker to inject arbitrary CSS into the `MkUrlPreview` component. `UrlPreviewService.wrap` falls back to returning the original URL if its using a protocol that is likely to not be understood by Misskey, IE something other than `http` or `https`. This both can de-anonymize users and_allow further attacks in the client. Additionally, `MkUrlPreview` doesnt escape CSS when applying a `background-image` property, allowing an attacker to craft a URL that applies arbitrary styles to the preview element. Theoretically, an attacker can craft a CSS injection payload to create a fake error message that can deceive the user into giving away their credentials or similar sensitive information. Version 2025.4.1 contains a patch for the issue.",
  "key_phrases": {
    "component": "UrlPreviewService and MkUrlPreview",
    "rootcause": "oversight in validation performed in UrlPreviewService and MkUrlPreview",
    "vector": "craft a URL",
    "weakness": "cross-site scripting",
    "product": "Misskey",
    "impact": "de-anonymize users, inject arbitrary CSS",
    "attacker": "",
    "version": "12.0.0 to 2025.4.1"
  },
  "reference_content": "```text\nRoot cause of vulnerability:\n- Oversight in the validation performed in `UrlPreviewService` and `MkUrlPreview`.\n- `UrlPreviewService.wrap` falls back to returning the original URL if it's using a protocol that is likely to not be understood by Misskey (e.g., not `http` or `https`).\n- `MkUrlPreview` doesn't escape CSS when applying a `background-image` property.\n\nWeaknesses/vulnerabilities present:\n- CSS Injection\n- Improper Input Validation\n\nImpact of exploitation:\n- An attacker can inject arbitrary CSS into the `MkUrlPreview` component.\n- An attacker can craft a CSS injection payload to create a fake error message to deceive users.\n- Potential deanonymization of users.\n\nAttack vectors:\n- Network (Remote)\n- Crafting a URL with a malicious `twitter:image` opengraph attribute (e.g., using `ftp://` protocol).\n- Linking to a webserver hosting a malicious HTML page.\n\nRequired attacker capabilities/position:\n- No privileges required.\n- No user interaction required.\n- Network access.\n\nMitigation or fix:\n- Patched in version 2025.4.1.\n- Proper validation of URLs in `UrlPreviewService`.\n- Escaping CSS when applying `background-image` property in `MkUrlPreview`.\n\nCVSS Score: 7.2 (High)\nCVSS Vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N\nCWE ID: CWE-20\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Allowed | Primary CWE. The application fails to neutralize user-controllable input before placing it in a web page. |\n| CWE-116 | Improper Encoding or Escaping of Output | 0.7 | Class | Allowed-with-Review | Secondary candidate. The application fails to properly encode or escape output, leading to potential injection issues. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-79, which is a Base level CWE, and it is related to CWE-116. CWE-79 focuses on improper neutralization of input, while CWE-116 is a more general class describing improper encoding or escaping of output. The relationship is that improper encoding or escaping of output (CWE-116) can lead to cross-site scripting (CWE-79) if the output is used in a web page.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n\n    cwe79 -->|CHILDOF| cwe116\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe79 primary\n    class cwe116 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with an **oversight in the validation** of URLs, leading to the possibility of injecting arbitrary CSS. The chain can be described as: **Improper Input Validation** -> **Improper Output Neutralization** -> **Cross-site Scripting**. Specifically, the `UrlPreviewService` doesn't properly validate URLs, which allows an attacker to inject CSS. Then `MkUrlPreview` doesn't escape CSS when applying a `background-image`, resulting in arbitrary styles being applied to the preview element. The root cause is the **oversight in validation**.\n\n## Summary of Analysis\nBased on the vulnerability description and the provided information, the primary weakness is CWE-79, Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). The application fails to neutralize user-controllable input (the URL) before placing it in a web page, allowing for the injection of arbitrary CSS. This is supported by the statement that `MkUrlPreview` doesn't escape CSS when applying a `background-image` property.\n\nCWE-116, Improper Encoding or Escaping of Output, is considered as a secondary candidate because the **failure to escape CSS** can be seen as a form of improper encoding or escaping of output. However, CWE-79 is a more specific fit because it directly addresses the cross-site scripting vulnerability.\n\nThe choice of CWE-79 is at the optimal level of specificity because it directly describes the weakness, the **lack of neutralization of input**, that leads to the XSS vulnerability.\n\nOther CWEs Considered:\n\n*   CWE-20: Improper Input Validation - While there is an input validation issue, the more specific CWE-79 is more relevant.\n*   CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection') - This is not relevant as the vulnerability is about CSS injection, not CRLF injection.\n*   CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting') - Similar to CWE-93, this is not relevant to the vulnerability.\n*   CWE-451: User Interface (UI) Misrepresentation of Critical Information - This could be a consequence of the vulnerability, as the attacker can create a fake error message. However, the root cause is the lack of input neutralization, making CWE-79 a better fit.\n*   CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') - While this is a general injection weakness, CWE-79 is a more specific fit for XSS.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Allowed | Primary CWE. The application fails to neutralize user-controllable input before placing it in a web page. |\n| CWE-116 | Improper Encoding or Escaping of Output | 0.7 | Class | Allowed-with-Review | Secondary candidate. The application fails to properly encode or escape output, leading to potential injection issues. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-79, which is a Base level CWE, and it is related to CWE-116. CWE-79 focuses on improper neutralization of input, while CWE-116 is a more general class describing improper encoding or escaping of output. The relationship is that improper encoding or escaping of output (CWE-116) can lead to cross-site scripting (CWE-79) if the output is used in a web page.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n\n    cwe79 -->|CHILDOF| cwe116\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe79 primary\n    class cwe116 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with an **oversight in the validation** of URLs, leading to the possibility of injecting arbitrary CSS. The chain can be described as: **Improper Input Validation** -> **Improper Output Neutralization** -> **Cross-site Scripting**. Specifically, the `UrlPreviewService` doesn't properly validate URLs, which allows an attacker to inject CSS. Then `MkUrlPreview` doesn't escape CSS when applying a `background-image`, resulting in arbitrary styles being applied to the preview element. The root cause is the **oversight in validation**.\n\n## Summary of Analysis\nBased on the vulnerability description and the provided information, the primary weakness is CWE-79, Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). The application fails to neutralize user-controllable input (the URL) before placing it in a web page, allowing for the injection of arbitrary CSS. This is supported by the statement that `MkUrlPreview` doesn't escape CSS when applying a `background-image` property.\n\nCWE-116, Improper Encoding or Escaping of Output, is considered as a secondary candidate because the **failure to escape CSS** can be seen as a form of improper encoding or escaping of output. However, CWE-79 is a more specific fit because it directly addresses the cross-site scripting vulnerability.\n\nThe choice of CWE-79 is at the optimal level of specificity because it directly describes the weakness, the **lack of neutralization of input**, that leads to the XSS vulnerability.\n\nOther CWEs Considered:\n\n*   CWE-20: Improper Input Validation - While there is an input validation issue, the more specific CWE-79 is more relevant.\n*   CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection') - This is not relevant as the vulnerability is about CSS injection, not CRLF injection.\n*   CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting') - Similar to CWE-93, this is not relevant to the vulnerability.\n*   CWE-451: User Interface (UI) Misrepresentation of Critical Information - This could be a consequence of the vulnerability, as the attacker can create a fake error message. However, the root cause is the lack of input neutralization, making CWE-79 a better fit.\n*   CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') - While this is a general injection weakness, CWE-79 is a more specific fit for XSS.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n**Chain starting from CWE-93:**\n- 93 (Improper Neutralization of CRLF Sequences ('CRLF Injection')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 877.4080149448856
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 818.4320612453932
    },
    {
      "metadata": {
        "doc_id": "1336",
        "name": "Improper Neutralization of Special Elements Used in a Template Engine",
        "source": "sparse"
      },
      "similarity": 809.3224343495638
    },
    {
      "metadata": {
        "doc_id": "93",
        "name": "Improper Neutralization of CRLF Sequences ('CRLF Injection')",
        "source": "sparse"
      },
      "similarity": 796.2969490904271
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 791.8989149619608
    },
    {
      "metadata": {
        "doc_id": "1333",
        "name": "Inefficient Regular Expression Complexity",
        "source": "sparse"
      },
      "similarity": 791.0677364505234
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 790.6914424566002
    },
    {
      "metadata": {
        "doc_id": "138",
        "name": "Improper Neutralization of Special Elements",
        "source": "sparse"
      },
      "similarity": 789.4821066139376
    },
    {
      "metadata": {
        "doc_id": "451",
        "name": "User Interface (UI) Misrepresentation of Critical Information",
        "type": "Class",
        "original_content": "The user interface (UI) does not properly represent critical information to the user, allowing the information - or its source - to be obscured or spoofed. This is often a component in phishing attacks.",
        "keyphrase_source": "weakness:cross-site scripting",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.5332557405161251
          }
        }
      },
      "similarity": 0.5332557405161251
    },
    {
      "doc_id": "117",
      "text": "CWE-117: Improper Output Neutralization for Logs",
      "score": 2.8651999999999997,
      "metadata": {
        "doc_id": "117",
        "name": "Improper Output Neutralization for Logs",
        "type": "base",
        "original_content": "CWE-117: Improper Output Neutralization for Logs",
        "relationships": [
          {
            "source_id": "117",
            "target_id": "93",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "117",
            "target_id": "20",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "700"
            }
          },
          {
            "source_id": "117",
            "target_id": "116",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "93",
            "target_id": "117",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "20",
            "target_id": "117",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "700"
            }
          },
          {
            "source_id": "116",
            "target_id": "117",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.7200000000000001,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "93",
                  "117",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "93"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "116",
                  "117",
                  "PARENTOF"
                ]
              ],
              "score": 0.7200000000000001,
              "type": "abstraction_path_down",
              "source": "116"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "93",
                  "117",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "93"
            }
          }
        },
        "abstraction_level": "base",
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.8651999999999997
          }
        }
      },
      "similarity": 2.8651999999999997
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-116",
      "CWE-93",
      "CWE-79",
      "CWE-113",
      "CWE-74",
      "CWE-451",
      "CWE-20"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}