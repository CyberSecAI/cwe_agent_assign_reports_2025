{
  "cve_id": "CVE-2025-0423",
  "description": "In the bestinformed Web application, some user input was not properly sanitized. This leads to multiple unauthenticated stored cross-site scripting vulnerabilities. An unauthenticated attacker is able to compromise the sessions of users on the server by injecting JavaScript code into their session using an Unauthenticated Stored Cross-Site Scripting. The attacker is then able to ride the session of those users and can abuse their privileges on the bestinformed Web application.",
  "key_phrases": {
    "component": "",
    "rootcause": "improper input sanitization",
    "vector": "",
    "weakness": "Stored XSS, cross-site scripting vulnerabilities",
    "product": "bestinformed Web application",
    "impact": "session compromise",
    "attacker": "unauthenticated attacker",
    "version": ""
  },
  "reference_content": "CVE-2025-0423 is fixed with Cordaware bestinformed web interface version 6.2.2.5. The HttpOnly cookie is also fixed as of Cordaware bestinformed web interface version 6.2.2.5.\n\n**Root cause of vulnerability:** Not explicitly stated, but related to cookie security.\n**Weaknesses/vulnerabilities present:** Lack of HttpOnly flag on cookies, potentially allowing access via JavaScript.\n**Impact of exploitation:** Man-in-the-middle attackers could potentially access cookies.\n**Attack vectors:** Accessing the application over HTTP (unencrypted).\n**Mitigation or fix:** Updating to Cordaware bestinformed web interface version 6.2.2.5, which includes the HttpOnly cookie attribute.\n\nThe content provides more detail than the official CVE description by specifying the version number where the fix is implemented and explaining the function of the HttpOnly and Secure cookie attributes.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Allowed | Primary CWE. The vulnerability description explicitly mentions \"Stored XSS, cross-site scripting vulnerabilities\", and the root cause is **improper input sanitization**. |\n| CWE-1004 | Sensitive Cookie Without 'HttpOnly' Flag | 0.7 | Variant | Allowed | Secondary candidate. The CVE Reference Links Content Summary mentions \"Lack of HttpOnly flag on cookies\", which is related to cookie security. This could allow attackers to access cookies. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary CWE is CWE-79, which is a Base level CWE. CWE-79 has several parent CWEs (e.g., CWE-116, CWE-74, CWE-20) and child CWEs, but none of these are more specific to the provided vulnerability description. CWE-1004 is a variant of CWE-923. The retriever results suggest considering CWE-352 (Cross-Site Request Forgery) and CWE-384 (Session Fixation), however, there isn't enough evidence to support these.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe1004[\"CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag\"]\n    cwe923[\"CWE-923: Improper Prevention of Information Dissemination\"]\n    cwe20[\"CWE-20: Improper Input Validation\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n    \n    cwe79 -->|CHILDOF| cwe20\n    cwe79 -->|CHILDOF| cwe116\n    cwe79 -->|CHILDOF| cwe74\n    cwe1004 -->|CHILDOF| cwe923\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe79 primary\n    class cwe1004 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **improper input sanitization** (root cause), which leads to Stored Cross-Site Scripting (CWE-79). An attacker can inject JavaScript code into user sessions, potentially leading to session compromise and abuse of user privileges. The lack of HttpOnly flag (CWE-1004) on cookies could further facilitate session hijacking.\n\n## Summary of Analysis\nThe primary weakness is CWE-79, as the vulnerability description explicitly states the presence of \"Stored XSS, cross-site scripting vulnerabilities\" due to **improper input sanitization**. The CWE-79 description matches the vulnerability details because the product (**bestinformed Web application**) does not properly neutralize user-controllable input before placing it in a web page. This allows an unauthenticated attacker to inject malicious JavaScript code.\n\nThe CVE Reference Links Content Summary indicates an issue with cookie security, specifically the lack of the HttpOnly flag. Therefore, CWE-1004 is included as a secondary CWE.\n\nCWE-79 is at the optimal level of specificity (Base) as it directly addresses the **improper neutralization** of input leading to Cross-Site Scripting.\n\nOther CWEs Considered:\n\n*   CWE-352 (Cross-Site Request Forgery): While the vulnerability description mentions session compromise, there is no explicit mention of CSRF.\n*   CWE-138 (Improper Neutralization of Special Elements): This is a class-level CWE, and CWE-79 is a more specific base-level CWE.\n*   CWE-80 (Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)): CWE-79 is a more general case of XSS, and the description doesn't specifically mention HTML tag neutralization issues.\n*   CWE-116 (Improper Encoding or Escaping of Output): While encoding/escaping could be a potential solution, the root cause is **improper neutralization** of input.\n*   CWE-89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')): There is no indication of SQL injection in the vulnerability description.\n*   CWE-434 (Unrestricted Upload of File with Dangerous Type): There is no mention of file uploads in the description.\n*   CWE-384 (Session Fixation): While session compromise is mentioned, there is no explicit indication of Session Fixation.\n*   CWE-184 (Incomplete List of Disallowed Inputs): This is a more general CWE, and **improper input sanitization** is a more direct root cause.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Allowed | Primary CWE. The vulnerability description explicitly mentions \"Stored XSS, cross-site scripting vulnerabilities\", and the root cause is **improper input sanitization**. |\n| CWE-1004 | Sensitive Cookie Without 'HttpOnly' Flag | 0.7 | Variant | Allowed | Secondary candidate. The CVE Reference Links Content Summary mentions \"Lack of HttpOnly flag on cookies\", which is related to cookie security. This could allow attackers to access cookies. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary CWE is CWE-79, which is a Base level CWE. CWE-79 has several parent CWEs (e.g., CWE-116, CWE-74, CWE-20) and child CWEs, but none of these are more specific to the provided vulnerability description. CWE-1004 is a variant of CWE-923. The retriever results suggest considering CWE-352 (Cross-Site Request Forgery) and CWE-384 (Session Fixation), however, there isn't enough evidence to support these.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe1004[\"CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag\"]\n    cwe923[\"CWE-923: Improper Prevention of Information Dissemination\"]\n    cwe20[\"CWE-20: Improper Input Validation\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n    \n    cwe79 -->|CHILDOF| cwe20\n    cwe79 -->|CHILDOF| cwe116\n    cwe79 -->|CHILDOF| cwe74\n    cwe1004 -->|CHILDOF| cwe923\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe79 primary\n    class cwe1004 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **improper input sanitization** (root cause), which leads to Stored Cross-Site Scripting (CWE-79). An attacker can inject JavaScript code into user sessions, potentially leading to session compromise and abuse of user privileges. The lack of HttpOnly flag (CWE-1004) on cookies could further facilitate session hijacking.\n\n## Summary of Analysis\nThe primary weakness is CWE-79, as the vulnerability description explicitly states the presence of \"Stored XSS, cross-site scripting vulnerabilities\" due to **improper input sanitization**. The CWE-79 description matches the vulnerability details because the product (**bestinformed Web application**) does not properly neutralize user-controllable input before placing it in a web page. This allows an unauthenticated attacker to inject malicious JavaScript code.\n\nThe CVE Reference Links Content Summary indicates an issue with cookie security, specifically the lack of the HttpOnly flag. Therefore, CWE-1004 is included as a secondary CWE.\n\nCWE-79 is at the optimal level of specificity (Base) as it directly addresses the **improper neutralization** of input leading to Cross-Site Scripting.\n\nOther CWEs Considered:\n\n*   CWE-352 (Cross-Site Request Forgery): While the vulnerability description mentions session compromise, there is no explicit mention of CSRF.\n*   CWE-138 (Improper Neutralization of Special Elements): This is a class-level CWE, and CWE-79 is a more specific base-level CWE.\n*   CWE-80 (Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)): CWE-79 is a more general case of XSS, and the description doesn't specifically mention HTML tag neutralization issues.\n*   CWE-116 (Improper Encoding or Escaping of Output): While encoding/escaping could be a potential solution, the root cause is **improper neutralization** of input.\n*   CWE-89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')): There is no indication of SQL injection in the vulnerability description.\n*   CWE-434 (Unrestricted Upload of File with Dangerous Type): There is no mention of file uploads in the description.\n*   CWE-384 (Session Fixation): While session compromise is mentioned, there is no explicit indication of Session Fixation.\n*   CWE-184 (Incomplete List of Disallowed Inputs): This is a more general CWE, and **improper input sanitization** is a more direct root cause.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: XSS",
        "match_reason": "term_in_phrase_compound_part_0"
      },
      "similarity": 800.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 502.6463971331236
    },
    {
      "metadata": {
        "doc_id": "138",
        "name": "Improper Neutralization of Special Elements",
        "source": "sparse"
      },
      "similarity": 469.72353495031814
    },
    {
      "metadata": {
        "doc_id": "80",
        "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
        "source": "sparse"
      },
      "similarity": 466.88651888479194
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 453.9930259971356
    },
    {
      "metadata": {
        "doc_id": "1004",
        "name": "Sensitive Cookie Without 'HttpOnly' Flag",
        "source": "sparse"
      },
      "similarity": 448.66995047790186
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 424.4284698884047
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse"
      },
      "similarity": 420.73189089119217
    },
    {
      "metadata": {
        "doc_id": "384",
        "name": "Session Fixation",
        "type": "Compound",
        "original_content": "Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.",
        "keyphrase_source": "weakness:Stored XSS",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.",
          "comments": "While attack-oriented composites are supported in CWE, they have not been a focus of research. There is a chance that future research or CWE scope clarifications will change or deprecate them. Perform root-cause analysis to determine which weaknesses allow session fixation to occur, and map to those weaknesses. For example, predictable session identifiers might enable session fixation attacks to succeed; if this occurs, they might be better characterized as randomness/predictability weaknesses.",
          "reasons": [
            "Other"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5734484554336068,
            "graph": 1.5876976823097193
          }
        }
      },
      "similarity": 0.5734484554336068
    },
    {
      "doc_id": "184",
      "text": "CWE-184: Incomplete List of Disallowed Inputs",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "184",
        "name": "Incomplete List of Disallowed Inputs",
        "type": "base",
        "original_content": "CWE-184: Incomplete List of Disallowed Inputs",
        "relationships": [
          {
            "source_id": "184",
            "target_id": "692",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "434",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "78",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "79",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "1023",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "693",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "86",
            "target_id": "184",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "78",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "693",
            "target_id": "184",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "692",
            "target_id": "184",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "692",
            "target_id": "184",
            "label": "STARTSWITH",
            "properties": {
              "view_id": "709"
            }
          },
          {
            "source_id": "625",
            "target_id": "184",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "434",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "186",
            "target_id": "184",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1023",
            "target_id": "184",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "79",
                  "184",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "79"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "79",
                  "184",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "79"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "184",
                  "79",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "79"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-116",
      "CWE-80",
      "CWE-79",
      "CWE-923",
      "CWE-1004",
      "CWE-352",
      "CWE-74",
      "CWE-138",
      "CWE-20",
      "CWE-184",
      "CWE-384",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}