{
  "retriever": "sparse",
  "query": "libsignal-service-rs is a Rust version of the libsignal-service-java library which implements the core functionality to communicate with Signal servers. Prior to commit 82d70f6720e762898f34ae76b0894b0297d9b2f8, plaintext content envelopes could be injected by a server or a malicious client, and may have been able to bypass the end-to-end encryption and authentication. The vulnerability is fixed per 82d70f6720e762898f34ae76b0894b0297d9b2f8. The `Metadata` struct contains an additional `was_encrypted` field, which breaks the API, but should be easily resolvable. No known workarounds are available.",
  "keyphrases": {
    "weakness": [
      "plaintext content envelopes could be injected"
    ]
  },
  "timestamp": "2025-07-14 12:59:36",
  "cve_id": "CVE-2025-24904",
  "result_count": 11,
  "results": [
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 416.74103625077237,
      "search_source": "weakness:plaintext content envelopes could be injected"
    },
    {
      "cwe_id": "79",
      "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "score": 413.09572413304943,
      "search_source": "weakness:plaintext content envelopes could be injected"
    },
    {
      "cwe_id": "295",
      "name": "Improper Certificate Validation",
      "score": 409.48451995070656,
      "search_source": "weakness:plaintext content envelopes could be injected"
    },
    {
      "cwe_id": "502",
      "name": "Deserialization of Untrusted Data",
      "score": 407.3909446014587,
      "search_source": "weakness:plaintext content envelopes could be injected"
    },
    {
      "cwe_id": "918",
      "name": "Server-Side Request Forgery (SSRF)",
      "score": 405.1237665955398,
      "search_source": "weakness:plaintext content envelopes could be injected"
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "score": 402.52321138584125,
      "search_source": "weakness:plaintext content envelopes could be injected"
    },
    {
      "cwe_id": "201",
      "name": "Insertion of Sensitive Information Into Sent Data",
      "score": 401.59541793705154,
      "search_source": "weakness:plaintext content envelopes could be injected"
    },
    {
      "cwe_id": "639",
      "name": "Authorization Bypass Through User-Controlled Key",
      "score": 398.14797391848697,
      "search_source": "weakness:plaintext content envelopes could be injected"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 396.66704282658895,
      "search_source": "weakness:plaintext content envelopes could be injected"
    },
    {
      "cwe_id": "327",
      "name": "Use of a Broken or Risky Cryptographic Algorithm",
      "score": 396.4379203156724,
      "search_source": "weakness:plaintext content envelopes could be injected"
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "score": 137.0037243765986,
      "search_source": "base_query"
    }
  ]
}