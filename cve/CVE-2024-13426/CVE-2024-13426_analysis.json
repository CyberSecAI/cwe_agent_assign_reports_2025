{
  "cve_id": "CVE-2024-13426",
  "description": "The WP-Polls plugin for WordPress is vulnerable to SQL Injection via COOKIE in all versions up to, and including, 2.77.2 due to **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**. This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries. Those queries are stored and results are not displayed to the attacker, which means they cannot be exploited to obtain any additional information about the database. However, a properly configured payload allows for the injection of malicious JavaScript resulting in Stored Cross-Site Scripting.",
  "key_phrases": {
    "rootcause": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
    "weakness": [
      "'Cross-Site Scripting']",
      "['SQL Injection'"
    ],
    "impact": "append additional SQL queries into already existing queries",
    "vector": "",
    "attacker": "unauthenticated attackers",
    "product": "WP-Polls plugin for WordPress",
    "version": "all versions up to and including 2.77.2",
    "component": ""
  },
  "reference_content": "```\nNOINFO\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-89 | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 1.0 | Base | Primary | Allowed |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.9 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.95\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is **CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')**, a Base level CWE. It reflects the **insufficient escaping** and **lack of sufficient preparation on the existing SQL query**. **CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')** is a secondary weakness, as the **SQL Injection** is used to inject malicious JavaScript, which then leads to **Cross-Site Scripting**.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n\n    cwe79 <--|CANFOLLOW| cwe89\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe89 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')** due to **insufficient escaping** and **lack of sufficient preparation on the existing SQL query**. An attacker can then **append additional SQL queries into already existing queries**. This allows the attacker to inject malicious JavaScript, resulting in **CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')**.\n\n## Summary of Analysis\nThe primary **ROOTCAUSE** is the **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**, which directly corresponds to **CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')**. The vulnerability description states that this makes it possible for unauthenticated attackers to append additional SQL queries. This injection of malicious JavaScript results in **CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')**. The relationship analysis shows that **CWE-89** can precede **CWE-79**, supporting the vulnerability chain.\n\nI considered **CWE-116: Improper Encoding or Escaping of Output**, but it's a more general class. The vulnerability is specifically about **SQL Injection**, making **CWE-89** a better fit.\nI considered **CWE-352: Cross-Site Request Forgery (CSRF)**, but this vulnerability doesn't involve CSRF.\nI considered **CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')**, but this vulnerability is about **SQL Injection**, not LDAP Injection.\nI also considered **CWE-434: Unrestricted Upload of File with Dangerous Type**, but this is not related to file uploads.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-184: Incomplete List of Disallowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\n**Abstraction Level**: Variant\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-330: Use of Insufficiently Random Values\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 3947.5",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-89 | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 1.0 | Base | Primary | Allowed |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.9 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.95\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is **CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')**, a Base level CWE. It reflects the **insufficient escaping** and **lack of sufficient preparation on the existing SQL query**. **CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')** is a secondary weakness, as the **SQL Injection** is used to inject malicious JavaScript, which then leads to **Cross-Site Scripting**.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n\n    cwe79 <--|CANFOLLOW| cwe89\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe89 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')** due to **insufficient escaping** and **lack of sufficient preparation on the existing SQL query**. An attacker can then **append additional SQL queries into already existing queries**. This allows the attacker to inject malicious JavaScript, resulting in **CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')**.\n\n## Summary of Analysis\nThe primary **ROOTCAUSE** is the **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**, which directly corresponds to **CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')**. The vulnerability description states that this makes it possible for unauthenticated attackers to append additional SQL queries. This injection of malicious JavaScript results in **CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')**. The relationship analysis shows that **CWE-89** can precede **CWE-79**, supporting the vulnerability chain.\n\nI considered **CWE-116: Improper Encoding or Escaping of Output**, but it's a more general class. The vulnerability is specifically about **SQL Injection**, making **CWE-89** a better fit.\nI considered **CWE-352: Cross-Site Request Forgery (CSRF)**, but this vulnerability doesn't involve CSRF.\nI considered **CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')**, but this vulnerability is about **SQL Injection**, not LDAP Injection.\nI also considered **CWE-434: Unrestricted Upload of File with Dangerous Type**, but this is not related to file uploads.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-184: Incomplete List of Disallowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\n**Abstraction Level**: Variant\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-330: Use of Insufficiently Random Values\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 3947.5\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-90:**\n- 90 (Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')) - ROOT\n\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "weakness:'Cross-Site Scripting']",
            "keyphrase": "'Cross-Site Scripting']",
            "type": "weakness"
          },
          {
            "id": "weakness:['SQL Injection'",
            "keyphrase": "['SQL Injection'",
            "type": "weakness"
          },
          {
            "id": "impact:append additional SQL queries into already existing queries",
            "keyphrase": "append additional SQL queries into already existing queries",
            "type": "impact"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:WP-Polls plugin for WordPress",
            "keyphrase": "WP-Polls plugin for WordPress",
            "type": "product"
          },
          {
            "id": "version:all versions up to and including 2.77.2",
            "keyphrase": "all versions up to and including 2.77.2",
            "type": "version"
          }
        ]
      },
      "similarity": 922.9775837832717
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "weakness:'Cross-Site Scripting']",
            "keyphrase": "'Cross-Site Scripting']",
            "type": "weakness"
          },
          {
            "id": "weakness:['SQL Injection'",
            "keyphrase": "['SQL Injection'",
            "type": "weakness"
          },
          {
            "id": "impact:append additional SQL queries into already existing queries",
            "keyphrase": "append additional SQL queries into already existing queries",
            "type": "impact"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:WP-Polls plugin for WordPress",
            "keyphrase": "WP-Polls plugin for WordPress",
            "type": "product"
          },
          {
            "id": "version:all versions up to and including 2.77.2",
            "keyphrase": "all versions up to and including 2.77.2",
            "type": "version"
          }
        ]
      },
      "similarity": 862.7441816870348
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "weakness:'Cross-Site Scripting']",
            "keyphrase": "'Cross-Site Scripting']",
            "type": "weakness"
          },
          {
            "id": "weakness:['SQL Injection'",
            "keyphrase": "['SQL Injection'",
            "type": "weakness"
          },
          {
            "id": "impact:append additional SQL queries into already existing queries",
            "keyphrase": "append additional SQL queries into already existing queries",
            "type": "impact"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:WP-Polls plugin for WordPress",
            "keyphrase": "WP-Polls plugin for WordPress",
            "type": "product"
          },
          {
            "id": "version:all versions up to and including 2.77.2",
            "keyphrase": "all versions up to and including 2.77.2",
            "type": "version"
          }
        ]
      },
      "similarity": 836.3966788425807
    },
    {
      "metadata": {
        "doc_id": "90",
        "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "impact:append additional SQL queries into already existing queries",
            "keyphrase": "append additional SQL queries into already existing queries",
            "type": "impact"
          }
        ]
      },
      "similarity": 802.7161521388241
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse",
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "weakness:'Cross-Site Scripting']",
            "keyphrase": "'Cross-Site Scripting']",
            "type": "weakness"
          },
          {
            "id": "weakness:['SQL Injection'",
            "keyphrase": "['SQL Injection'",
            "type": "weakness"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "version:all versions up to and including 2.77.2",
            "keyphrase": "all versions up to and including 2.77.2",
            "type": "version"
          }
        ]
      },
      "similarity": 777.2523586468405
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse",
        "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
        "keyphrase_sources": [
          {
            "id": "weakness:'Cross-Site Scripting']",
            "keyphrase": "'Cross-Site Scripting']",
            "type": "weakness"
          },
          {
            "id": "product:WP-Polls plugin for WordPress",
            "keyphrase": "WP-Polls plugin for WordPress",
            "type": "product"
          }
        ]
      },
      "similarity": 588.7571471853859
    },
    {
      "metadata": {
        "doc_id": "502",
        "name": "Deserialization of Untrusted Data",
        "source": "sparse",
        "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.",
        "keyphrase_sources": [
          {
            "id": "weakness:['SQL Injection'",
            "keyphrase": "['SQL Injection'",
            "type": "weakness"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "version:all versions up to and including 2.77.2",
            "keyphrase": "all versions up to and including 2.77.2",
            "type": "version"
          }
        ]
      },
      "similarity": 584.0087591795137
    },
    {
      "metadata": {
        "doc_id": "943",
        "name": "Improper Neutralization of Special Elements in Data Query Logic",
        "source": "sparse",
        "original_content": "The product generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query.",
        "keyphrase_sources": [
          {
            "id": "impact:append additional SQL queries into already existing queries",
            "keyphrase": "append additional SQL queries into already existing queries",
            "type": "impact"
          }
        ]
      },
      "similarity": 237.23800163691857
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse",
        "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
        "keyphrase_sources": [
          {
            "id": "product:WP-Polls plugin for WordPress",
            "keyphrase": "WP-Polls plugin for WordPress",
            "type": "product"
          }
        ]
      },
      "similarity": 224.58124839003386
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-90",
      "CWE-89",
      "CWE-116",
      "CWE-80",
      "CWE-330",
      "CWE-212",
      "CWE-79",
      "CWE-472",
      "CWE-352",
      "CWE-74",
      "CWE-138",
      "CWE-184",
      "CWE-425",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "116": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "weakness:'Cross-Site Scripting']",
        "keyphrase": "'Cross-Site Scripting']",
        "type": "weakness"
      },
      {
        "id": "weakness:['SQL Injection'",
        "keyphrase": "['SQL Injection'",
        "type": "weakness"
      },
      {
        "id": "impact:append additional SQL queries into already existing queries",
        "keyphrase": "append additional SQL queries into already existing queries",
        "type": "impact"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:WP-Polls plugin for WordPress",
        "keyphrase": "WP-Polls plugin for WordPress",
        "type": "product"
      },
      {
        "id": "version:all versions up to and including 2.77.2",
        "keyphrase": "all versions up to and including 2.77.2",
        "type": "version"
      }
    ],
    "352": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "weakness:'Cross-Site Scripting']",
        "keyphrase": "'Cross-Site Scripting']",
        "type": "weakness"
      },
      {
        "id": "weakness:['SQL Injection'",
        "keyphrase": "['SQL Injection'",
        "type": "weakness"
      },
      {
        "id": "impact:append additional SQL queries into already existing queries",
        "keyphrase": "append additional SQL queries into already existing queries",
        "type": "impact"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:WP-Polls plugin for WordPress",
        "keyphrase": "WP-Polls plugin for WordPress",
        "type": "product"
      },
      {
        "id": "version:all versions up to and including 2.77.2",
        "keyphrase": "all versions up to and including 2.77.2",
        "type": "version"
      }
    ],
    "89": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "weakness:'Cross-Site Scripting']",
        "keyphrase": "'Cross-Site Scripting']",
        "type": "weakness"
      },
      {
        "id": "weakness:['SQL Injection'",
        "keyphrase": "['SQL Injection'",
        "type": "weakness"
      },
      {
        "id": "impact:append additional SQL queries into already existing queries",
        "keyphrase": "append additional SQL queries into already existing queries",
        "type": "impact"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:WP-Polls plugin for WordPress",
        "keyphrase": "WP-Polls plugin for WordPress",
        "type": "product"
      },
      {
        "id": "version:all versions up to and including 2.77.2",
        "keyphrase": "all versions up to and including 2.77.2",
        "type": "version"
      }
    ],
    "90": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "impact:append additional SQL queries into already existing queries",
        "keyphrase": "append additional SQL queries into already existing queries",
        "type": "impact"
      }
    ],
    "79": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "weakness:'Cross-Site Scripting']",
        "keyphrase": "'Cross-Site Scripting']",
        "type": "weakness"
      },
      {
        "id": "weakness:['SQL Injection'",
        "keyphrase": "['SQL Injection'",
        "type": "weakness"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "version:all versions up to and including 2.77.2",
        "keyphrase": "all versions up to and including 2.77.2",
        "type": "version"
      }
    ],
    "434": [
      {
        "id": "weakness:'Cross-Site Scripting']",
        "keyphrase": "'Cross-Site Scripting']",
        "type": "weakness"
      },
      {
        "id": "product:WP-Polls plugin for WordPress",
        "keyphrase": "WP-Polls plugin for WordPress",
        "type": "product"
      }
    ],
    "502": [
      {
        "id": "weakness:['SQL Injection'",
        "keyphrase": "['SQL Injection'",
        "type": "weakness"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "version:all versions up to and including 2.77.2",
        "keyphrase": "all versions up to and including 2.77.2",
        "type": "version"
      }
    ],
    "943": [
      {
        "id": "impact:append additional SQL queries into already existing queries",
        "keyphrase": "append additional SQL queries into already existing queries",
        "type": "impact"
      }
    ],
    "862": [
      {
        "id": "product:WP-Polls plugin for WordPress",
        "keyphrase": "WP-Polls plugin for WordPress",
        "type": "product"
      }
    ]
  }
}