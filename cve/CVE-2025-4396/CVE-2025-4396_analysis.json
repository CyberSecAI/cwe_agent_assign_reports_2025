{
  "cve_id": "CVE-2025-4396",
  "description": "The Relevanssi A Better Search plugin for WordPress is vulnerable to **time-based SQL Injection** via the cats and tags query parameters in all versions up to, and including, 4.24.4 (Free) and <= 2.27.4 (Premium) due to **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**. This makes it possible for unauthenticated attackers to append additional SQL queries to already existing queries that can be used to extract sensitive information from the database.",
  "key_phrases": {
    "rootcause": [
      "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
      "lack of sufficient preparation on existing SQL query",
      "insufficient escaping on user-supplied parameter"
    ],
    "weakness": [
      "lack of sufficient preparation on existing SQL query",
      "insufficient escaping on user-supplied parameter",
      "time-based SQL Injection"
    ],
    "impact": [
      "append additional SQL queries to already existing queries",
      "extract sensitive information from the database",
      "extract sensitive information from database"
    ],
    "vector": "",
    "attacker": "unauthenticated attackers",
    "product": "Relevanssi A Better Search plugin for WordPress",
    "version": [
      "['up to 4.24.4 (Free)']",
      "'<= 2.27.4 (Premium)']"
    ],
    "component": "cats and tags query parameters"
  },
  "reference_content": "The provided content consists of the source code for the `search-tax-query.php` file from the Relevanssi WordPress plugin, version 4.24.4.  It details functions responsible for converting tax query parameters into MySQL query restrictions.\n\nHere's a breakdown of the relevant information:\n\n**Root cause of vulnerability:**\n\nThe code processes tax query parameters to build SQL queries.  The vulnerability likely stems from insufficient sanitization or validation of user-supplied input (specifically the `terms` and `taxonomy` parameters) before incorporating them into the SQL query. This could lead to SQL injection.\n\n**Weaknesses/vulnerabilities present:**\n\n*   **Potential SQL Injection:** The code constructs SQL queries using variables derived from user-provided data (tax query parameters). While `esc_sql` is used in some places, there are areas where input might not be adequately sanitized before being included in the query, particularly within the `relevanssi_term_tax_id_from_row` function and the construction of the `$tt_q` query.\n*   **Improper Input Validation:** The code doesn't appear to thoroughly validate the `taxonomy` and `field` parameters, potentially allowing for unexpected values that could be exploited.\n\n**Impact of exploitation:**\n\nSuccessful exploitation could allow an attacker to:\n\n*   **Read sensitive data:** Access data from the WordPress database.\n*   **Modify data:** Alter data within the database.\n*   **Execute arbitrary code:** Potentially gain control of the server.\n\n**Attack vectors:**\n\n*   **Crafted Tax Queries:** An attacker could submit a specially crafted tax query (e.g., through a search form or custom plugin functionality) designed to inject malicious SQL code.\n*   **Manipulated Taxonomy/Field Values:**  Exploiting vulnerabilities in how the `taxonomy` and `field` parameters are handled.\n\n**Required attacker capabilities/position:**\n\n*   **Unauthenticated:** The attack vector may be accessible to unauthenticated users, depending on how the tax query parameters are exposed.\n*   **Ability to submit tax queries:** The attacker needs to be able to submit tax queries to the WordPress site.\n\n**Mitigation or fix:**\n\n*   **Thorough Input Sanitization:**  Implement robust sanitization of all user-supplied input, especially the `terms` and `taxonomy` parameters, before using them in SQL queries. Use `prepare()` function for all database queries.\n*   **Input Validation:**  Validate the `taxonomy` and `field` parameters to ensure they are within expected values.\n*   **Least Privilege:** Ensure the database user used by WordPress has only the necessary privileges.\n*   **Regular Security Audits:** Conduct regular security audits of the code to identify and address potential vulnerabilities.\n\n**Note:** This analysis is based solely on the provided code snippet. A complete security assessment would require a more comprehensive review of the entire plugin and its interactions with other WordPress components.\n\nThe content provides more detail than the official CVE description would likely contain, as it's the actual source code.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-89 | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 1.0 | Base | Allowed | Primary CWE |\n| CWE-116 | Improper Encoding or Escaping of Output | 0.7 | Class | Allowed-with-Review | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship that influenced the CWE selection is the child-of relationship. CWE-89 is a base-level CWE that directly addresses the **improper neutralization** of special elements in SQL commands, which is the core issue described in the vulnerability. While CWE-74 and CWE-77 are parents of CWE-89, they are less specific and do not accurately capture the SQL-specific nature of the vulnerability.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n    cwe77[\"CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection')\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n    \n    cwe89 -->|CHILDOF| cwe74\n    cwe89 -->|CHILDOF| cwe77\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe89 primary\n    class cwe74,cwe77,cwe116 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**, leading to **time-based SQL Injection**. This allows attackers to **append additional SQL queries** to existing ones, ultimately enabling them to **extract sensitive information from the database**.\n\nRoot Cause: **Insufficient escaping and lack of preparation** -> Weakness: **time-based SQL Injection** -> Impact: **Appending queries, extracting sensitive information**.\n\n## Summary of Analysis\nThe analysis is strongly based on the provided evidence, particularly the description of the **insufficient escaping** and **lack of sufficient preparation** leading to **SQL injection**. The vulnerability description explicitly mentions that this allows attackers to append SQL queries to extract sensitive information.\n\nThe retriever results also strongly support CWE-89 as the primary CWE, given its high similarity scores for the keyphrases related to the root cause. The relationship graph confirms that CWE-89 is a specific, base-level CWE that accurately captures the vulnerability.\n\nCWE-89 is at the optimal level of specificity because it directly addresses the **improper neutralization** of special elements within SQL commands. More generic CWEs like CWE-74 would not adequately capture the SQL-specific nature of the vulnerability.\n\nRelevant CWE Information:\n- Vulnerability Description Key Phrases:\n  - **ROOTCAUSE:** 'insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query'\n  - **WEAKNESS:** 'time-based SQL Injection'\n  - **IMPACT:** 'append additional SQL queries to already existing queries'\n  - **IMPACT:** 'extract sensitive information from the database'\n  - **ATTACKER:** 'unauthenticated attackers'\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-668: Exposure of Resource to Wrong Sphere\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-668 is high-level and is often misused as a catch-all when lower-level CWE IDs might be applicable. It is sometimes used for low-information vulnerability reports [REF-1287]. It is a level-1 Class (i.e., a child of a Pillar). It is not useful for trend analysis.\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-184: Incomplete List of Disallowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-345: Insufficient Verification of Data Authenticity\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-89 | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 1.0 | Base | Allowed | Primary CWE |\n| CWE-116 | Improper Encoding or Escaping of Output | 0.7 | Class | Allowed-with-Review | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship that influenced the CWE selection is the child-of relationship. CWE-89 is a base-level CWE that directly addresses the **improper neutralization** of special elements in SQL commands, which is the core issue described in the vulnerability. While CWE-74 and CWE-77 are parents of CWE-89, they are less specific and do not accurately capture the SQL-specific nature of the vulnerability.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n    cwe77[\"CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection')\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n    \n    cwe89 -->|CHILDOF| cwe74\n    cwe89 -->|CHILDOF| cwe77\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe89 primary\n    class cwe74,cwe77,cwe116 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**, leading to **time-based SQL Injection**. This allows attackers to **append additional SQL queries** to existing ones, ultimately enabling them to **extract sensitive information from the database**.\n\nRoot Cause: **Insufficient escaping and lack of preparation** -> Weakness: **time-based SQL Injection** -> Impact: **Appending queries, extracting sensitive information**.\n\n## Summary of Analysis\nThe analysis is strongly based on the provided evidence, particularly the description of the **insufficient escaping** and **lack of sufficient preparation** leading to **SQL injection**. The vulnerability description explicitly mentions that this allows attackers to append SQL queries to extract sensitive information.\n\nThe retriever results also strongly support CWE-89 as the primary CWE, given its high similarity scores for the keyphrases related to the root cause. The relationship graph confirms that CWE-89 is a specific, base-level CWE that accurately captures the vulnerability.\n\nCWE-89 is at the optimal level of specificity because it directly addresses the **improper neutralization** of special elements within SQL commands. More generic CWEs like CWE-74 would not adequately capture the SQL-specific nature of the vulnerability.\n\nRelevant CWE Information:\n- Vulnerability Description Key Phrases:\n  - **ROOTCAUSE:** 'insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query'\n  - **WEAKNESS:** 'time-based SQL Injection'\n  - **IMPACT:** 'append additional SQL queries to already existing queries'\n  - **IMPACT:** 'extract sensitive information from the database'\n  - **ATTACKER:** 'unauthenticated attackers'\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-668: Exposure of Resource to Wrong Sphere\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-668 is high-level and is often misused as a catch-all when lower-level CWE IDs might be applicable. It is sometimes used for low-information vulnerability reports [REF-1287]. It is a level-1 Class (i.e., a child of a Pillar). It is not useful for trend analysis.\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-184: Incomplete List of Disallowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-345: Insufficient Verification of Data Authenticity\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:lack of sufficient preparation on existing SQL query",
            "keyphrase": "lack of sufficient preparation on existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user-supplied parameter",
            "keyphrase": "insufficient escaping on user-supplied parameter",
            "type": "rootcause"
          },
          {
            "id": "weakness:lack of sufficient preparation on existing SQL query",
            "keyphrase": "lack of sufficient preparation on existing SQL query",
            "type": "weakness"
          },
          {
            "id": "weakness:insufficient escaping on user-supplied parameter",
            "keyphrase": "insufficient escaping on user-supplied parameter",
            "type": "weakness"
          },
          {
            "id": "weakness:time-based SQL Injection",
            "keyphrase": "time-based SQL Injection",
            "type": "weakness"
          },
          {
            "id": "impact:append additional SQL queries to already existing queries",
            "keyphrase": "append additional SQL queries to already existing queries",
            "type": "impact"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "impact:extract sensitive information from database",
            "keyphrase": "extract sensitive information from database",
            "type": "impact"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:Relevanssi A Better Search plugin for WordPress",
            "keyphrase": "Relevanssi A Better Search plugin for WordPress",
            "type": "product"
          },
          {
            "id": "version:['up to 4.24.4 (Free)']",
            "keyphrase": "['up to 4.24.4 (Free)']",
            "type": "version"
          },
          {
            "id": "version:'<= 2.27.4 (Premium)']",
            "keyphrase": "'<= 2.27.4 (Premium)']",
            "type": "version"
          },
          {
            "id": "component:cats and tags query parameters",
            "keyphrase": "cats and tags query parameters",
            "type": "component"
          }
        ]
      },
      "similarity": 783.4249383953525
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:lack of sufficient preparation on existing SQL query",
            "keyphrase": "lack of sufficient preparation on existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user-supplied parameter",
            "keyphrase": "insufficient escaping on user-supplied parameter",
            "type": "rootcause"
          },
          {
            "id": "weakness:lack of sufficient preparation on existing SQL query",
            "keyphrase": "lack of sufficient preparation on existing SQL query",
            "type": "weakness"
          },
          {
            "id": "weakness:insufficient escaping on user-supplied parameter",
            "keyphrase": "insufficient escaping on user-supplied parameter",
            "type": "weakness"
          },
          {
            "id": "weakness:time-based SQL Injection",
            "keyphrase": "time-based SQL Injection",
            "type": "weakness"
          },
          {
            "id": "impact:append additional SQL queries to already existing queries",
            "keyphrase": "append additional SQL queries to already existing queries",
            "type": "impact"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "impact:extract sensitive information from database",
            "keyphrase": "extract sensitive information from database",
            "type": "impact"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:Relevanssi A Better Search plugin for WordPress",
            "keyphrase": "Relevanssi A Better Search plugin for WordPress",
            "type": "product"
          },
          {
            "id": "version:['up to 4.24.4 (Free)']",
            "keyphrase": "['up to 4.24.4 (Free)']",
            "type": "version"
          },
          {
            "id": "version:'<= 2.27.4 (Premium)']",
            "keyphrase": "'<= 2.27.4 (Premium)']",
            "type": "version"
          },
          {
            "id": "component:cats and tags query parameters",
            "keyphrase": "cats and tags query parameters",
            "type": "component"
          }
        ]
      },
      "similarity": 750.9186426032212
    },
    {
      "metadata": {
        "doc_id": "90",
        "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:lack of sufficient preparation on existing SQL query",
            "keyphrase": "lack of sufficient preparation on existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user-supplied parameter",
            "keyphrase": "insufficient escaping on user-supplied parameter",
            "type": "rootcause"
          },
          {
            "id": "weakness:lack of sufficient preparation on existing SQL query",
            "keyphrase": "lack of sufficient preparation on existing SQL query",
            "type": "weakness"
          },
          {
            "id": "weakness:insufficient escaping on user-supplied parameter",
            "keyphrase": "insufficient escaping on user-supplied parameter",
            "type": "weakness"
          },
          {
            "id": "weakness:time-based SQL Injection",
            "keyphrase": "time-based SQL Injection",
            "type": "weakness"
          },
          {
            "id": "impact:append additional SQL queries to already existing queries",
            "keyphrase": "append additional SQL queries to already existing queries",
            "type": "impact"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "impact:extract sensitive information from database",
            "keyphrase": "extract sensitive information from database",
            "type": "impact"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:Relevanssi A Better Search plugin for WordPress",
            "keyphrase": "Relevanssi A Better Search plugin for WordPress",
            "type": "product"
          },
          {
            "id": "version:['up to 4.24.4 (Free)']",
            "keyphrase": "['up to 4.24.4 (Free)']",
            "type": "version"
          },
          {
            "id": "version:'<= 2.27.4 (Premium)']",
            "keyphrase": "'<= 2.27.4 (Premium)']",
            "type": "version"
          },
          {
            "id": "component:cats and tags query parameters",
            "keyphrase": "cats and tags query parameters",
            "type": "component"
          }
        ]
      },
      "similarity": 708.315034328829
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:lack of sufficient preparation on existing SQL query",
            "keyphrase": "lack of sufficient preparation on existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user-supplied parameter",
            "keyphrase": "insufficient escaping on user-supplied parameter",
            "type": "rootcause"
          },
          {
            "id": "weakness:lack of sufficient preparation on existing SQL query",
            "keyphrase": "lack of sufficient preparation on existing SQL query",
            "type": "weakness"
          },
          {
            "id": "weakness:insufficient escaping on user-supplied parameter",
            "keyphrase": "insufficient escaping on user-supplied parameter",
            "type": "weakness"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:Relevanssi A Better Search plugin for WordPress",
            "keyphrase": "Relevanssi A Better Search plugin for WordPress",
            "type": "product"
          },
          {
            "id": "version:'<= 2.27.4 (Premium)']",
            "keyphrase": "'<= 2.27.4 (Premium)']",
            "type": "version"
          },
          {
            "id": "component:cats and tags query parameters",
            "keyphrase": "cats and tags query parameters",
            "type": "component"
          }
        ]
      },
      "similarity": 695.4219346153835
    },
    {
      "metadata": {
        "doc_id": "790",
        "name": "Improper Filtering of Special Elements",
        "source": "sparse",
        "original_content": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user-supplied parameter",
            "keyphrase": "insufficient escaping on user-supplied parameter",
            "type": "rootcause"
          },
          {
            "id": "weakness:insufficient escaping on user-supplied parameter",
            "keyphrase": "insufficient escaping on user-supplied parameter",
            "type": "weakness"
          },
          {
            "id": "impact:append additional SQL queries to already existing queries",
            "keyphrase": "append additional SQL queries to already existing queries",
            "type": "impact"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "version:['up to 4.24.4 (Free)']",
            "keyphrase": "['up to 4.24.4 (Free)']",
            "type": "version"
          }
        ]
      },
      "similarity": 661.3177991161886
    },
    {
      "metadata": {
        "doc_id": "943",
        "name": "Improper Neutralization of Special Elements in Data Query Logic",
        "source": "sparse",
        "original_content": "The product generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query.",
        "keyphrase_sources": [
          {
            "id": "rootcause:lack of sufficient preparation on existing SQL query",
            "keyphrase": "lack of sufficient preparation on existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "weakness:lack of sufficient preparation on existing SQL query",
            "keyphrase": "lack of sufficient preparation on existing SQL query",
            "type": "weakness"
          },
          {
            "id": "weakness:time-based SQL Injection",
            "keyphrase": "time-based SQL Injection",
            "type": "weakness"
          },
          {
            "id": "impact:append additional SQL queries to already existing queries",
            "keyphrase": "append additional SQL queries to already existing queries",
            "type": "impact"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "impact:extract sensitive information from database",
            "keyphrase": "extract sensitive information from database",
            "type": "impact"
          }
        ]
      },
      "similarity": 551.0116862912887
    },
    {
      "metadata": {
        "doc_id": "502",
        "name": "Deserialization of Untrusted Data",
        "source": "sparse",
        "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.",
        "keyphrase_sources": [
          {
            "id": "weakness:time-based SQL Injection",
            "keyphrase": "time-based SQL Injection",
            "type": "weakness"
          },
          {
            "id": "version:['up to 4.24.4 (Free)']",
            "keyphrase": "['up to 4.24.4 (Free)']",
            "type": "version"
          }
        ]
      },
      "similarity": 475.380016634692
    },
    {
      "metadata": {
        "doc_id": "138",
        "name": "Improper Neutralization of Special Elements",
        "source": "sparse",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.",
        "keyphrase_sources": [
          {
            "id": "component:cats and tags query parameters",
            "keyphrase": "cats and tags query parameters",
            "type": "component"
          }
        ]
      },
      "similarity": 173.70066221857942
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse",
        "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
        "keyphrase_sources": [
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "impact:extract sensitive information from database",
            "keyphrase": "extract sensitive information from database",
            "type": "impact"
          },
          {
            "id": "product:Relevanssi A Better Search plugin for WordPress",
            "keyphrase": "Relevanssi A Better Search plugin for WordPress",
            "type": "product"
          }
        ]
      },
      "similarity": 172.00382387962466
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse",
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "keyphrase_sources": [
          {
            "id": "version:'<= 2.27.4 (Premium)']",
            "keyphrase": "'<= 2.27.4 (Premium)']",
            "type": "version"
          }
        ]
      },
      "similarity": 161.10837816244484
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-116",
      "CWE-345",
      "CWE-77",
      "CWE-472",
      "CWE-74",
      "CWE-668",
      "CWE-138",
      "CWE-303",
      "CWE-184",
      "CWE-425",
      "CWE-212"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "116": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:lack of sufficient preparation on existing SQL query",
        "keyphrase": "lack of sufficient preparation on existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user-supplied parameter",
        "keyphrase": "insufficient escaping on user-supplied parameter",
        "type": "rootcause"
      },
      {
        "id": "weakness:lack of sufficient preparation on existing SQL query",
        "keyphrase": "lack of sufficient preparation on existing SQL query",
        "type": "weakness"
      },
      {
        "id": "weakness:insufficient escaping on user-supplied parameter",
        "keyphrase": "insufficient escaping on user-supplied parameter",
        "type": "weakness"
      },
      {
        "id": "weakness:time-based SQL Injection",
        "keyphrase": "time-based SQL Injection",
        "type": "weakness"
      },
      {
        "id": "impact:append additional SQL queries to already existing queries",
        "keyphrase": "append additional SQL queries to already existing queries",
        "type": "impact"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "impact:extract sensitive information from database",
        "keyphrase": "extract sensitive information from database",
        "type": "impact"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:Relevanssi A Better Search plugin for WordPress",
        "keyphrase": "Relevanssi A Better Search plugin for WordPress",
        "type": "product"
      },
      {
        "id": "version:['up to 4.24.4 (Free)']",
        "keyphrase": "['up to 4.24.4 (Free)']",
        "type": "version"
      },
      {
        "id": "version:'<= 2.27.4 (Premium)']",
        "keyphrase": "'<= 2.27.4 (Premium)']",
        "type": "version"
      },
      {
        "id": "component:cats and tags query parameters",
        "keyphrase": "cats and tags query parameters",
        "type": "component"
      }
    ],
    "89": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:lack of sufficient preparation on existing SQL query",
        "keyphrase": "lack of sufficient preparation on existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user-supplied parameter",
        "keyphrase": "insufficient escaping on user-supplied parameter",
        "type": "rootcause"
      },
      {
        "id": "weakness:lack of sufficient preparation on existing SQL query",
        "keyphrase": "lack of sufficient preparation on existing SQL query",
        "type": "weakness"
      },
      {
        "id": "weakness:insufficient escaping on user-supplied parameter",
        "keyphrase": "insufficient escaping on user-supplied parameter",
        "type": "weakness"
      },
      {
        "id": "weakness:time-based SQL Injection",
        "keyphrase": "time-based SQL Injection",
        "type": "weakness"
      },
      {
        "id": "impact:append additional SQL queries to already existing queries",
        "keyphrase": "append additional SQL queries to already existing queries",
        "type": "impact"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "impact:extract sensitive information from database",
        "keyphrase": "extract sensitive information from database",
        "type": "impact"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:Relevanssi A Better Search plugin for WordPress",
        "keyphrase": "Relevanssi A Better Search plugin for WordPress",
        "type": "product"
      },
      {
        "id": "version:['up to 4.24.4 (Free)']",
        "keyphrase": "['up to 4.24.4 (Free)']",
        "type": "version"
      },
      {
        "id": "version:'<= 2.27.4 (Premium)']",
        "keyphrase": "'<= 2.27.4 (Premium)']",
        "type": "version"
      },
      {
        "id": "component:cats and tags query parameters",
        "keyphrase": "cats and tags query parameters",
        "type": "component"
      }
    ],
    "90": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:lack of sufficient preparation on existing SQL query",
        "keyphrase": "lack of sufficient preparation on existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user-supplied parameter",
        "keyphrase": "insufficient escaping on user-supplied parameter",
        "type": "rootcause"
      },
      {
        "id": "weakness:lack of sufficient preparation on existing SQL query",
        "keyphrase": "lack of sufficient preparation on existing SQL query",
        "type": "weakness"
      },
      {
        "id": "weakness:insufficient escaping on user-supplied parameter",
        "keyphrase": "insufficient escaping on user-supplied parameter",
        "type": "weakness"
      },
      {
        "id": "weakness:time-based SQL Injection",
        "keyphrase": "time-based SQL Injection",
        "type": "weakness"
      },
      {
        "id": "impact:append additional SQL queries to already existing queries",
        "keyphrase": "append additional SQL queries to already existing queries",
        "type": "impact"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "impact:extract sensitive information from database",
        "keyphrase": "extract sensitive information from database",
        "type": "impact"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:Relevanssi A Better Search plugin for WordPress",
        "keyphrase": "Relevanssi A Better Search plugin for WordPress",
        "type": "product"
      },
      {
        "id": "version:['up to 4.24.4 (Free)']",
        "keyphrase": "['up to 4.24.4 (Free)']",
        "type": "version"
      },
      {
        "id": "version:'<= 2.27.4 (Premium)']",
        "keyphrase": "'<= 2.27.4 (Premium)']",
        "type": "version"
      },
      {
        "id": "component:cats and tags query parameters",
        "keyphrase": "cats and tags query parameters",
        "type": "component"
      }
    ],
    "352": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:lack of sufficient preparation on existing SQL query",
        "keyphrase": "lack of sufficient preparation on existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user-supplied parameter",
        "keyphrase": "insufficient escaping on user-supplied parameter",
        "type": "rootcause"
      },
      {
        "id": "weakness:lack of sufficient preparation on existing SQL query",
        "keyphrase": "lack of sufficient preparation on existing SQL query",
        "type": "weakness"
      },
      {
        "id": "weakness:insufficient escaping on user-supplied parameter",
        "keyphrase": "insufficient escaping on user-supplied parameter",
        "type": "weakness"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:Relevanssi A Better Search plugin for WordPress",
        "keyphrase": "Relevanssi A Better Search plugin for WordPress",
        "type": "product"
      },
      {
        "id": "version:'<= 2.27.4 (Premium)']",
        "keyphrase": "'<= 2.27.4 (Premium)']",
        "type": "version"
      },
      {
        "id": "component:cats and tags query parameters",
        "keyphrase": "cats and tags query parameters",
        "type": "component"
      }
    ],
    "790": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user-supplied parameter",
        "keyphrase": "insufficient escaping on user-supplied parameter",
        "type": "rootcause"
      },
      {
        "id": "weakness:insufficient escaping on user-supplied parameter",
        "keyphrase": "insufficient escaping on user-supplied parameter",
        "type": "weakness"
      },
      {
        "id": "impact:append additional SQL queries to already existing queries",
        "keyphrase": "append additional SQL queries to already existing queries",
        "type": "impact"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "version:['up to 4.24.4 (Free)']",
        "keyphrase": "['up to 4.24.4 (Free)']",
        "type": "version"
      }
    ],
    "943": [
      {
        "id": "rootcause:lack of sufficient preparation on existing SQL query",
        "keyphrase": "lack of sufficient preparation on existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "weakness:lack of sufficient preparation on existing SQL query",
        "keyphrase": "lack of sufficient preparation on existing SQL query",
        "type": "weakness"
      },
      {
        "id": "weakness:time-based SQL Injection",
        "keyphrase": "time-based SQL Injection",
        "type": "weakness"
      },
      {
        "id": "impact:append additional SQL queries to already existing queries",
        "keyphrase": "append additional SQL queries to already existing queries",
        "type": "impact"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "impact:extract sensitive information from database",
        "keyphrase": "extract sensitive information from database",
        "type": "impact"
      }
    ],
    "502": [
      {
        "id": "weakness:time-based SQL Injection",
        "keyphrase": "time-based SQL Injection",
        "type": "weakness"
      },
      {
        "id": "version:['up to 4.24.4 (Free)']",
        "keyphrase": "['up to 4.24.4 (Free)']",
        "type": "version"
      }
    ],
    "862": [
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "impact:extract sensitive information from database",
        "keyphrase": "extract sensitive information from database",
        "type": "impact"
      },
      {
        "id": "product:Relevanssi A Better Search plugin for WordPress",
        "keyphrase": "Relevanssi A Better Search plugin for WordPress",
        "type": "product"
      }
    ],
    "79": [
      {
        "id": "version:'<= 2.27.4 (Premium)']",
        "keyphrase": "'<= 2.27.4 (Premium)']",
        "type": "version"
      }
    ],
    "138": [
      {
        "id": "component:cats and tags query parameters",
        "keyphrase": "cats and tags query parameters",
        "type": "component"
      }
    ]
  }
}