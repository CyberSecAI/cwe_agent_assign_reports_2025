{
  "cve_id": "CVE-2024-47000",
  "description": "Zitadel is an open source identity management platform. ZITADELs user account deactivation mechanism did not work correctly with service accounts. Deactivated service accounts retained the ability to request tokens, which could lead to unauthorized access to applications and resources. Versions 2.62.1, 2.61.1, 2.60.2, 2.59.3, 2.58.5, 2.57.5, 2.56.6, 2.55.8, and 2.54.10 have been released which address this issue. Users are advised t upgrade. Users unable to upgrade may instead of deactivating the service account, consider creating new credentials and replacing the old ones wherever they are used. This effectively prevents the deactivated service account from being utilized. Be sure to revoke all existing authentication keys associated with the service account and to rotate the service accounts password.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "Zitadel's user account deactivation mechanism did not work correctly with service accounts",
    "impact": "unauthorized access to applications and resources",
    "vector": "request tokens",
    "attacker": "",
    "product": "Zitadel",
    "version": "2.62.1, 2.61.1, 2.60.2, 2.59.3, 2.58.5, 2.57.5, 2.56.6, 2.55.8, and 2.54.10",
    "component": ""
  },
  "reference_content": "- **Root cause of vulnerability:** The user account deactivation mechanism in ZITADEL did not correctly handle service accounts.\n- **Weaknesses/vulnerabilities present:** Deactivated service accounts could still request tokens, allowing unauthorized access.\n- **Impact of exploitation:** Unauthorized access to applications and resources due to the ability of deactivated service accounts to obtain tokens.\n- **Attack vectors:** Network-based attacks, exploiting the vulnerability through token requests.\n- **Required attacker capabilities/position:** An attacker needs low privileges to exploit the vulnerability. No user interaction is required.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n\n| CWE ID  | CWE Name                                                                   | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :------------------------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-306   | Missing Authentication for Critical Function                               | 0.9        | Base                  | Primary                         | Allowed                         |\n| CWE-862   | Missing Authorization                                                        | 0.7        | Class                  | Secondary                       | Allowed-with-Review             |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary relationship that influenced the decision was the parent-child relationship between CWE-287 Improper Authentication (Class), CWE-306 Missing Authentication for Critical Function (Base), and CWE-862 Missing Authorization (Class). CWE-306 and CWE-862 are children of CWE-287. The vulnerability description clearly points to a **missing authentication** issue for deactivated service accounts, making CWE-306 the most specific and appropriate choice for the primary CWE. However, because the token request is still processed by Zitadel, even though the service account is deactivated, suggests a failure to authorize the request as well, suggesting CWE-862 as secondary.\n\n```mermaid\ngraph TD\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    cwe862[\"CWE-862: Missing Authorization\"]\n    cwe287[\"CWE-287: Improper Authentication\"]\n\n    cwe306 -->|CHILDOF| cwe287\n    cwe862 -->|CHILDOF| cwe287\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe306 primary\n    class cwe862 secondary\n    class cwe287 tertiary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with a **missing authentication** check for deactivated service accounts (CWE-306), leading to a potential **missing authorization** check (CWE-862). This allows unauthorized token requests, ultimately resulting in unauthorized access to applications and resources.\n\n## Summary of Analysis\n\nThe initial analysis focused on identifying the root cause of the vulnerability. The description clearly states that the **user account deactivation mechanism did not work correctly with service accounts**. This **weakness** allowed deactivated service accounts to still request tokens, leading to unauthorized access.\n\nThe Retriever Results indicated several potential CWEs, including CWE-1390 Weak Authentication, CWE-863 Incorrect Authorization, and CWE-306 Missing Authentication for Critical Function.\n\nBased on the evidence and the provided CWE guidance, CWE-306 Missing Authentication for Critical Function was selected as the primary CWE because the core issue is that deactivated service accounts were not properly prevented from requesting tokens. This indicates a failure to properly authenticate the service account before allowing the token request.\n\nCWE-862 Missing Authorization was considered as a secondary CWE because, even though authentication should have failed, the system still attempted to process the token request, implying a **missing authorization** check to verify if the deactivated account should still be allowed to request tokens.\n\nThe selected CWEs are at the optimal level of specificity. CWE-306 is a Base-level CWE, which is preferred, and it directly addresses the **missing authentication** issue. The decision is based on the vulnerability description, the Retriever Results, and the CWE guidance, which all point to a **missing authentication** problem as the root cause. The fact that deactivated service accounts could still request tokens is strong evidence for this classification.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-1390: Weak Authentication\n**Abstraction Level**: Class\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-288: Authentication Bypass Using an Alternate Path or Channel\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product requires authentication, but the product has an alternate path or channel that does not require authentication.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-204: Observable Response Discrepancy\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product provides different responses to incoming requests in a way that reveals internal state information to an unauthorized actor outside of the intended control sphere.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-330: Use of Insufficiently Random Values\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n## CWE-267: Privilege Defined With Unsafe Actions\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nA particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-807: Reliance on Untrusted Inputs in a Security Decision\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-639: Authorization Bypass Through User-Controlled Key\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-863: Incorrect Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 1503.68\n**Source**: sparse\n\n**Description**:\nThe product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.",
  "analysis_with_relationships": "# Summary\n\n| CWE ID  | CWE Name                                                                   | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :------------------------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-306   | Missing Authentication for Critical Function                               | 0.9        | Base                  | Primary                         | Allowed                         |\n| CWE-862   | Missing Authorization                                                        | 0.7        | Class                  | Secondary                       | Allowed-with-Review             |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary relationship that influenced the decision was the parent-child relationship between CWE-287 Improper Authentication (Class), CWE-306 Missing Authentication for Critical Function (Base), and CWE-862 Missing Authorization (Class). CWE-306 and CWE-862 are children of CWE-287. The vulnerability description clearly points to a **missing authentication** issue for deactivated service accounts, making CWE-306 the most specific and appropriate choice for the primary CWE. However, because the token request is still processed by Zitadel, even though the service account is deactivated, suggests a failure to authorize the request as well, suggesting CWE-862 as secondary.\n\n```mermaid\ngraph TD\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    cwe862[\"CWE-862: Missing Authorization\"]\n    cwe287[\"CWE-287: Improper Authentication\"]\n\n    cwe306 -->|CHILDOF| cwe287\n    cwe862 -->|CHILDOF| cwe287\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe306 primary\n    class cwe862 secondary\n    class cwe287 tertiary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with a **missing authentication** check for deactivated service accounts (CWE-306), leading to a potential **missing authorization** check (CWE-862). This allows unauthorized token requests, ultimately resulting in unauthorized access to applications and resources.\n\n## Summary of Analysis\n\nThe initial analysis focused on identifying the root cause of the vulnerability. The description clearly states that the **user account deactivation mechanism did not work correctly with service accounts**. This **weakness** allowed deactivated service accounts to still request tokens, leading to unauthorized access.\n\nThe Retriever Results indicated several potential CWEs, including CWE-1390 Weak Authentication, CWE-863 Incorrect Authorization, and CWE-306 Missing Authentication for Critical Function.\n\nBased on the evidence and the provided CWE guidance, CWE-306 Missing Authentication for Critical Function was selected as the primary CWE because the core issue is that deactivated service accounts were not properly prevented from requesting tokens. This indicates a failure to properly authenticate the service account before allowing the token request.\n\nCWE-862 Missing Authorization was considered as a secondary CWE because, even though authentication should have failed, the system still attempted to process the token request, implying a **missing authorization** check to verify if the deactivated account should still be allowed to request tokens.\n\nThe selected CWEs are at the optimal level of specificity. CWE-306 is a Base-level CWE, which is preferred, and it directly addresses the **missing authentication** issue. The decision is based on the vulnerability description, the Retriever Results, and the CWE guidance, which all point to a **missing authentication** problem as the root cause. The fact that deactivated service accounts could still request tokens is strong evidence for this classification.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-1390: Weak Authentication\n**Abstraction Level**: Class\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-288: Authentication Bypass Using an Alternate Path or Channel\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product requires authentication, but the product has an alternate path or channel that does not require authentication.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-204: Observable Response Discrepancy\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product provides different responses to incoming requests in a way that reveals internal state information to an unauthorized actor outside of the intended control sphere.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-330: Use of Insufficiently Random Values\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n## CWE-267: Privilege Defined With Unsafe Actions\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nA particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-807: Reliance on Untrusted Inputs in a Security Decision\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-639: Authorization Bypass Through User-Controlled Key\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-863: Incorrect Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 1503.68\n**Source**: sparse\n\n**Description**:\nThe product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-1390:**\n- 1390 (Weak Authentication) - ROOT\n\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "1390",
        "name": "Weak Authentication",
        "source": "sparse"
      },
      "similarity": 659.0258648201803
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 641.6614153331902
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 641.0139915583958
    },
    {
      "metadata": {
        "doc_id": "288",
        "name": "Authentication Bypass Using an Alternate Path or Channel",
        "source": "sparse"
      },
      "similarity": 607.5861391254048
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 604.2930989091603
    },
    {
      "metadata": {
        "doc_id": "256",
        "name": "Plaintext Storage of a Password",
        "source": "sparse"
      },
      "similarity": 600.9332041939049
    },
    {
      "metadata": {
        "doc_id": "287",
        "name": "Improper Authentication",
        "source": "sparse"
      },
      "similarity": 599.2715412624916
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 594.3553277355524
    },
    {
      "metadata": {
        "doc_id": "90",
        "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
        "type": "Base",
        "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.",
        "keyphrase_source": "weakness:Zitadel's user account deactivation mechanism did not work correctly with service accounts",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.4270648757531239,
            "graph": 1.4541574436281084
          }
        }
      },
      "similarity": 0.4270648757531239
    },
    {
      "doc_id": "620",
      "text": "When setting a new password for a user, the product does not require knowledge of the original password, or using another form of authentication.",
      "score": 0.45456371827158965,
      "metadata": {
        "doc_id": "620",
        "name": "Unverified Password Change",
        "type": "Base",
        "extended_description": "This could be used by an attacker to change passwords for another user, thus gaining the privileges associated with that user.",
        "alternate_terms": [],
        "original_content": "When setting a new password for a user, the product does not require knowledge of the original password, or using another form of authentication.",
        "relationships": [
          {
            "source_id": "620",
            "target_id": "1390",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1390",
            "target_id": "620",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "source": "graph",
        "sources": [
          "vector",
          "graph"
        ],
        "vector_score": 0.45456371827158965,
        "graph_score": 2.4699999999999998,
        "score_components": {
          "relationship_chain": 0.3,
          "explicit_mention": 1.0,
          "abstraction_path": 0.9
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "1390",
                  "620",
                  "PARENTOF"
                ]
              ],
              "score": 0.3,
              "type": "relationship_chain",
              "source": "1390"
            }
          }
        },
        "is_explicit": true,
        "abstraction_level": "base",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.421409235036065,
            "graph": 1.6638254873086356
          }
        }
      },
      "similarity": 1.6638254873086356
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-1390",
      "CWE-863",
      "CWE-288",
      "CWE-862",
      "CWE-330",
      "CWE-639",
      "CWE-267",
      "CWE-306",
      "CWE-303",
      "CWE-1391",
      "CWE-807",
      "CWE-287",
      "CWE-497",
      "CWE-204"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}