{
  "method": "sparse_rootcause_1",
  "query": "In the Linux kernel, the following vulnerability has been resolved tracing/timerlat Drop interface_lock in stop_kthread() stop_kthread() is the offline callback for trace/osnoiseonline, since commit 5bfbcd1ee57b (tracing/timerlat Add interface_lock around clearing of kthread in stop_kthread()), the following ABBA deadlock scenario is introduced T1 | T2 [BP] | T3 [AP] osnoise_hotplug_workfn() | work_for_cpu_fn() | cpuhp_thread_fun() | _cpu_down() | osnoise_cpu_die() mutex_lock(&interface_lock) | | stop_kthread() | cpus_write_lock() | mutex_lock(&interface_lock) cpus_read_lock() | cpuhp_kick_ap() | As the interface_lock here in just for protecting the kthread field of the osn_var, use xchg() instead to fix this issue. Also use for_each_online_cpu() back in stop_per_cpu_kthreads() as it can take cpu_read_lock() again.",
  "keyphrases": {
    "rootcause": "ABBA deadlock scenario"
  },
  "timestamp": "2025-07-13T19:42:36.233330",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "833",
      "name": "Deadlock",
      "score": 351.18924069196436
    },
    {
      "doc_id": "667",
      "name": "Improper Locking",
      "score": 349.09144756070094
    },
    {
      "doc_id": "79",
      "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "score": 337.28291893234757
    },
    {
      "doc_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "score": 333.63333436251014
    },
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 325.5006636353294
    }
  ]
}