{
  "query": "In the Linux kernel, the following vulnerability has been resolved riscv prevent pt_regs corruption for secondary idle threads Top of the kernel thread stack should be reserved for pt_regs. However this is not the case for the idle threads of the secondary boot harts. Their stacks overlap with their pt_regs, so both may get corrupted. Similar issue has been fixed for the primary hart, see c7cdd96eca28 (riscv prevent stack corruption by reserving task_pt_regs(p) early). However that fix was not propagated to the secondary harts. The problem has been noticed in some CPU hotplug tests with V enabled. The function smp_callin stored several registers on stack, corrupting top of pt_regs structure including status field. As a result, kernel attempted to save or restore inexistent V context.",
  "count": 11,
  "results": [
    {
      "cwe_id": "674",
      "name": "Uncontrolled Recursion",
      "abstraction": "Class",
      "score": 585.7850763362671,
      "original_score": 585.7850763362671,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "abstraction": "Class",
      "score": 581.0939844086067,
      "original_score": 581.0939844086067,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 556.2317480713239,
      "original_score": 556.2317480713239,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "abstraction": "Base",
      "score": 552.0668340157998,
      "original_score": 552.0668340157998,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "457",
      "name": "Use of Uninitialized Variable",
      "abstraction": "Variant",
      "score": 548.9743937618517,
      "original_score": 548.9743937618517,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "abstraction": "Base",
      "score": 539.8791583052451,
      "original_score": 539.8791583052451,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "abstraction": "Base",
      "score": 538.2675698461196,
      "original_score": 538.2675698461196,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 534.0336674301813,
      "original_score": 534.0336674301813,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "abstraction": "Base",
      "score": 533.5295287819748,
      "original_score": 533.5295287819748,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "665",
      "name": "Improper Initialization",
      "abstraction": "Class",
      "score": 531.8849955478923,
      "original_score": 531.8849955478923,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "abstraction": "Base",
      "score": 172.1045020996663,
      "original_score": 172.1045020996663,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 172.1045020996663,
    "max": 585.7850763362671,
    "mean": 515.8046780549935,
    "median": 539.8791583052451,
    "count": 11
  }
}