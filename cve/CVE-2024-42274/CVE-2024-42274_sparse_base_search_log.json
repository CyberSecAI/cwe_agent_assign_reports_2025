{
  "method": "sparse_base",
  "query": "In the Linux kernel, the following vulnerability has been resolved Revert ALSA firewire-lib operate for period elapse event in process context Commit 7ba5ca32fe6e (ALSA firewire-lib operate for period elapse event in process context) removed the process context workqueue from amdtp_domain_stream_pcm_pointer() and update_pcm_pointers() to remove its overhead. With RME Fireface 800, this lead to a regression since Kernels 5.14.0, causing an AB/BA deadlock competition for the substream lock with eventual system freeze under ALSA operation thread 0 * (lock A) acquire substream lock by snd_pcm_stream_lock_irq() in snd_pcm_status64() * (lock B) wait for tasklet to finish by calling tasklet_unlock_spin_wait() in tasklet_disable_in_atomic() in ohci_flush_iso_completions() of ohci.c thread 1 * (lock B) enter tasklet * (lock A) attempt to acquire substream lock, waiting for it to be released snd_pcm_stream_lock_irqsave() in snd_pcm_period_elapsed() in update_pcm_pointers() in process_ctx_payloads() in process_rx_packets() of amdtp-stream.c ? tasklet_unlock_spin_wait ohci_flush_iso_completions firewire_ohci amdtp_domain_stream_pcm_pointer snd_firewire_lib snd_pcm_update_hw_ptr0 snd_pcm snd_pcm_status64 snd_pcm ? native_queued_spin_lock_slowpath _raw_spin_lock_irqsave snd_pcm_period_elapsed snd_pcm process_rx_packets snd_firewire_lib irq_target_callback snd_firewire_lib handle_it_packet firewire_ohci context_t",
  "keyphrases": {
    "base_query": "In the Linux kernel, the following vulnerability has been resolved Revert ALSA firewire-lib operate for period elapse event in process context Commit 7ba5ca32fe6e (ALSA firewire-lib operate for period elapse event in process context) removed the process context workqueue from amdtp_domain_stream_pcm_pointer() and update_pcm_pointers() to remove its overhead. With RME Fireface 800, this lead to a regression since Kernels 5.14.0, causing an AB/BA deadlock competition for the substream lock with eventual system freeze under ALSA operation thread 0 * (lock A) acquire substream lock by snd_pcm_stream_lock_irq() in snd_pcm_status64() * (lock B) wait for tasklet to finish by calling tasklet_unlock_spin_wait() in tasklet_disable_in_atomic() in ohci_flush_iso_completions() of ohci.c thread 1 * (lock B) enter tasklet * (lock A) attempt to acquire substream lock, waiting for it to be released snd_pcm_stream_lock_irqsave() in snd_pcm_period_elapsed() in update_pcm_pointers() in process_ctx_payloads() in process_rx_packets() of amdtp-stream.c ? tasklet_unlock_spin_wait ohci_flush_iso_completions firewire_ohci amdtp_domain_stream_pcm_pointer snd_firewire_lib snd_pcm_update_hw_ptr0 snd_pcm snd_pcm_status64 snd_pcm ? native_queued_spin_lock_slowpath _raw_spin_lock_irqsave snd_pcm_period_elapsed snd_pcm process_rx_packets snd_firewire_lib irq_target_callback snd_firewire_lib handle_it_packet firewire_ohci context_t"
  },
  "timestamp": "2025-07-13T13:52:32.766170",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "833",
      "name": "Deadlock",
      "score": 229.5548704571223
    },
    {
      "doc_id": "667",
      "name": "Improper Locking",
      "score": 225.40747620293257
    },
    {
      "doc_id": "451",
      "name": "User Interface (UI) Misrepresentation of Critical Information",
      "score": 207.83878871615204
    },
    {
      "doc_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 190.3252953995105
    },
    {
      "doc_id": "663",
      "name": "Use of a Non-reentrant Function in a Concurrent Context",
      "score": 189.07863895326136
    }
  ]
}