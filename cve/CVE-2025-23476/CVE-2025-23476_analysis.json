{
  "cve_id": "CVE-2025-23476",
  "description": "Cross-Site Request Forgery (CSRF) vulnerability in isnowfy my-related-posts allows Stored XSS.This issue affects my-related-posts from n/a through 1.1.",
  "key_phrases": {
    "component": "",
    "rootcause": "",
    "vector": "",
    "weakness": "['Cross-Site Request Forgery', 'Stored XSS']",
    "product": "isnowfy my-related-posts",
    "impact": "",
    "attacker": "",
    "version": "n/a through 1.1"
  },
  "reference_content": "Root cause of vulnerability:\nThe WordPress my-related-posts Plugin <= 1.1 is vulnerable to Cross Site Request Forgery (CSRF).\n\nWeaknesses/vulnerabilities present:\nCross Site Request Forgery (CSRF) - allows a malicious actor to force higher privileged users to execute unwanted actions under their current authentication. Classified as Broken Access Control (OWASP Top 10 A1).\n\nImpact of exploitation:\nA malicious actor can force higher privileged users to execute unwanted actions. The specific impact varies case by case.\n\nAttack vectors:\nCross-Site Request Forgery (CSRF) attack.\n\nRequired attacker capabilities/position:\nUnauthenticated.\n\nMitigation or fix:\nNo official fix available. Patchstack vPatching can auto-mitigate the vulnerability.\n\nAdditional details:\n- CVSS score: 7.1 (Low severity)\n- Vulnerable versions: <= 1.1\n- Fixed in: N/A\n- PSID: e9e30d86fb69\n- Reported by: SOPROBRO on 18 Oct 2024\n- Published by Patchstack: 16 Jan 2025\n\nThe content provides more detail than the official CVE description by specifying the vulnerable plugin, versions, and providing a CVSS score.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 1.0 | Compound | Allowed | Primary CWE. The **weakness** is **Cross-Site Request Forgery**.|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Allowed | Secondary CWE. The **weakness** is **Stored XSS**.|\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is CWE-352 [Cross-Site Request Forgery (CSRF)], which can lead to other vulnerabilities such as CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')]. CWE-352 is a compound weakness. CWE-79 is a base weakness and is listed as a top combined result in the retriever results.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe79 -->|CANRESULTIN| cwe352\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **Cross-Site Request Forgery (CSRF)**, which allows an attacker to force a user to perform unwanted actions. This can lead to **Stored XSS** (CWE-79) if the attacker uses the CSRF vulnerability to inject malicious scripts into the web application. The root cause is the **Cross-Site Request Forgery (CSRF)** vulnerability.\n\n## Summary of Analysis\nThe vulnerability description clearly states a **Cross-Site Request Forgery (CSRF)** vulnerability that allows **Stored XSS**. The **Vulnerability Description Key Phrases** section confirms these as the identified **weaknesses**. The CVE reference link content summary also indicates that the root cause is **Cross-Site Request Forgery (CSRF)**.\n\nCWE-352 [Cross-Site Request Forgery (CSRF)] is selected as the primary CWE because it is the root cause vulnerability. The retriever results also list CWE-352 as a potential match. The description of CWE-352 matches the vulnerability description.\n\nCWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] is selected as a secondary CWE because the **Cross-Site Request Forgery (CSRF)** leads to **Stored XSS**. The retriever results also list CWE-79 as the top combined result and the description of CWE-79 matches the vulnerability description where user-controllable input is not neutralized before being placed in a web page.\n\nThe selected CWEs are at the optimal level of specificity as they are at the Base and Compound level of abstraction.\n\nOther CWEs Considered but Not Used:\n\n*   CWE-918 [Server-Side Request Forgery (SSRF)], CWE-89 [Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')], CWE-601 [URL Redirection to Untrusted Site ('Open Redirect')], CWE-116 [Improper Encoding or Escaping of Output], CWE-80 [Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)], CWE-96 [Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')], CWE-425 [Direct Request ('Forced Browsing')]: These CWEs were considered but not selected as they do not directly relate to the root cause or impact of the vulnerability. They are related to different types of vulnerabilities.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 1.0 | Compound | Allowed | Primary CWE. The **weakness** is **Cross-Site Request Forgery**.|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Allowed | Secondary CWE. The **weakness** is **Stored XSS**.|\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is CWE-352 [Cross-Site Request Forgery (CSRF)], which can lead to other vulnerabilities such as CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')]. CWE-352 is a compound weakness. CWE-79 is a base weakness and is listed as a top combined result in the retriever results.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe79 -->|CANRESULTIN| cwe352\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **Cross-Site Request Forgery (CSRF)**, which allows an attacker to force a user to perform unwanted actions. This can lead to **Stored XSS** (CWE-79) if the attacker uses the CSRF vulnerability to inject malicious scripts into the web application. The root cause is the **Cross-Site Request Forgery (CSRF)** vulnerability.\n\n## Summary of Analysis\nThe vulnerability description clearly states a **Cross-Site Request Forgery (CSRF)** vulnerability that allows **Stored XSS**. The **Vulnerability Description Key Phrases** section confirms these as the identified **weaknesses**. The CVE reference link content summary also indicates that the root cause is **Cross-Site Request Forgery (CSRF)**.\n\nCWE-352 [Cross-Site Request Forgery (CSRF)] is selected as the primary CWE because it is the root cause vulnerability. The retriever results also list CWE-352 as a potential match. The description of CWE-352 matches the vulnerability description.\n\nCWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] is selected as a secondary CWE because the **Cross-Site Request Forgery (CSRF)** leads to **Stored XSS**. The retriever results also list CWE-79 as the top combined result and the description of CWE-79 matches the vulnerability description where user-controllable input is not neutralized before being placed in a web page.\n\nThe selected CWEs are at the optimal level of specificity as they are at the Base and Compound level of abstraction.\n\nOther CWEs Considered but Not Used:\n\n*   CWE-918 [Server-Side Request Forgery (SSRF)], CWE-89 [Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')], CWE-601 [URL Redirection to Untrusted Site ('Open Redirect')], CWE-116 [Improper Encoding or Escaping of Output], CWE-80 [Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)], CWE-96 [Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')], CWE-425 [Direct Request ('Forced Browsing')]: These CWEs were considered but not selected as they do not directly relate to the root cause or impact of the vulnerability. They are related to different types of vulnerabilities.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: XSS",
        "match_reason": "term_in_phrase_compound_part_1"
      },
      "similarity": 800.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 236.1874836250663
    },
    {
      "metadata": {
        "doc_id": "918",
        "name": "Server-Side Request Forgery (SSRF)",
        "source": "sparse"
      },
      "similarity": 177.04054057164936
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 176.16522928376867
    },
    {
      "metadata": {
        "doc_id": "601",
        "name": "URL Redirection to Untrusted Site ('Open Redirect')",
        "source": "sparse"
      },
      "similarity": 165.1150365437034
    },
    {
      "metadata": {
        "doc_id": "1004",
        "name": "Sensitive Cookie Without 'HttpOnly' Flag",
        "source": "sparse"
      },
      "similarity": 160.67937372676423
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 157.88266111543845
    },
    {
      "metadata": {
        "doc_id": "80",
        "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
        "source": "sparse"
      },
      "similarity": 156.34489437474525
    },
    {
      "metadata": {
        "doc_id": "96",
        "name": "Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')",
        "type": "Base",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before inserting the input into an executable resource, such as a library, configuration file, or template.",
        "keyphrase_source": "weakness:'Stored XSS']",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5624935356300795,
            "graph": 1.631673280462962
          }
        }
      },
      "similarity": 0.5624935356300795
    },
    {
      "doc_id": "425",
      "text": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
      "score": 0.5926408552593629,
      "metadata": {
        "doc_id": "425",
        "name": "Direct Request ('Forced Browsing')",
        "type": "Base",
        "extended_description": "Web applications susceptible to direct request attacks often make the false assumption that such resources can only be reached through a given navigation path and so only apply authorization at certain points in the path.",
        "alternate_terms": [
          "forced browsing"
        ],
        "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
        "relationships": [
          {
            "source_id": "425",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "424",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "288",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "862",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "425",
            "target_id": "862",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "862",
            "target_id": "425",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "424",
            "target_id": "425",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "288",
            "target_id": "425",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "source": "graph",
        "sources": [
          "vector",
          "graph"
        ],
        "vector_score": 0.5926408552593629,
        "graph_score": 3.4200400000000006,
        "score_components": {
          "relationship_chain": 0.6,
          "explicit_mention": 1.0,
          "abstraction_path": 0.9,
          "sequence_path": 0.5760000000000002
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "89",
                  "456",
                  "CANFOLLOW"
                ],
                [
                  "456",
                  "98",
                  "CANPRECEDE"
                ],
                [
                  "98",
                  "425",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.6,
              "type": "relationship_chain",
              "source": "89"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "79",
                  "184",
                  "CANFOLLOW"
                ],
                [
                  "184",
                  "98",
                  "CANPRECEDE"
                ],
                [
                  "98",
                  "425",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.5760000000000002,
              "type": "vulnerability_sequence_forward",
              "source": "79"
            }
          }
        },
        "is_explicit": true,
        "abstraction_level": "base",
        "position": "after",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5584153933765637,
            "graph": 2.2890803421037456
          }
        }
      },
      "similarity": 2.2890803421037456
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-116",
      "CWE-80",
      "CWE-601",
      "CWE-79",
      "CWE-96",
      "CWE-352",
      "CWE-918",
      "CWE-425"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}