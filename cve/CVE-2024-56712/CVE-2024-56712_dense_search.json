{
  "retriever": "dense",
  "query": "In the Linux kernel, the following vulnerability has been resolved udmabuf fix memory leak on last export_udmabuf() error path In export_udmabuf(), if dma_buf_fd() fails because the FD table is full, a dma_buf owning the udmabuf has already been created but the error handling in udmabuf_create() will tear down the udmabuf without doing anything about the containing dma_buf. This leaves a dma_buf in memory that contains a dangling pointer though that doesnt seem to lead to anything bad except a memory leak. Fix it by moving the dma_buf_fd() call out of export_udmabuf() so that we can give it different error handling. Note that the shape of this code changed a lot in commit 5e72b2b41a21 (udmabuf convert udmabuf driver to use folios) but the memory leak seems to have existed since the introduction of udmabuf.",
  "keyphrases": {
    "weakness": [
      "memory leak"
    ]
  },
  "timestamp": "2025-07-13 23:55:54",
  "cve_id": "CVE-2024-56712",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "type": "Variant",
      "score": 0.4738022495527949
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "type": "Class",
      "score": 0.4578106470259058
    },
    {
      "cwe_id": "403",
      "name": "Exposure of File Descriptor to Unintended Control Sphere ('File Descriptor Leak')",
      "type": "Base",
      "score": 0.44966417336122716
    },
    {
      "cwe_id": "763",
      "name": "Release of Invalid Pointer or Reference",
      "type": "Base",
      "score": 0.42940504698703946
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "type": "Variant",
      "score": 0.4254787439810464
    },
    {
      "cwe_id": "590",
      "name": "Free of Memory not on the Heap",
      "type": "Variant",
      "score": 0.4245576088420562
    },
    {
      "cwe_id": "126",
      "name": "Buffer Over-read",
      "type": "Variant",
      "score": 0.4233291183117621
    },
    {
      "cwe_id": "122",
      "name": "Heap-based Buffer Overflow",
      "type": "Variant",
      "score": 0.4227724347054713
    },
    {
      "cwe_id": "775",
      "name": "Missing Release of File Descriptor or Handle after Effective Lifetime",
      "type": "Variant",
      "score": 0.4211993745912475
    },
    {
      "cwe_id": "822",
      "name": "Untrusted Pointer Dereference",
      "type": "Base",
      "score": 0.4198032828688726
    },
    {
      "cwe_id": "805",
      "name": "Buffer Access with Incorrect Length Value",
      "type": "Base",
      "score": 0.41685383791144226
    },
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "type": "Base",
      "score": 0.4126087959259307
    },
    {
      "cwe_id": "773",
      "name": "Missing Reference to Active File Descriptor or Handle",
      "type": "Variant",
      "score": 0.4093007253358664
    },
    {
      "cwe_id": "911",
      "name": "Improper Update of Reference Count",
      "type": "Base",
      "score": 0.40871594722096927
    },
    {
      "cwe_id": "1190",
      "name": "DMA Device Enabled Too Early in Boot Phase",
      "type": "Base",
      "score": 0.40840029324204524
    },
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "type": "Variant",
      "score": 0.40810485567095006
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "type": "Base",
      "score": 0.4059309955008068
    },
    {
      "cwe_id": "761",
      "name": "Free of Pointer not at Start of Buffer",
      "type": "Variant",
      "score": 0.4054841488205274
    },
    {
      "cwe_id": "124",
      "name": "Buffer Underwrite ('Buffer Underflow')",
      "type": "Base",
      "score": 0.4054310539730804
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "type": "Base",
      "score": 0.40414261891001896
    }
  ]
}