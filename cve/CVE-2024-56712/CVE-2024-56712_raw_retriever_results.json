{
  "query": "In the Linux kernel, the following vulnerability has been resolved udmabuf fix memory leak on last export_udmabuf() error path In export_udmabuf(), if dma_buf_fd() fails because the FD table is full, a dma_buf owning the udmabuf has already been created but the error handling in udmabuf_create() will tear down the udmabuf without doing anything about the containing dma_buf. This leaves a dma_buf in memory that contains a dangling pointer though that doesnt seem to lead to anything bad except a memory leak. Fix it by moving the dma_buf_fd() call out of export_udmabuf() so that we can give it different error handling. Note that the shape of this code changed a lot in commit 5e72b2b41a21 (udmabuf convert udmabuf driver to use folios) but the memory leak seems to have existed since the introduction of udmabuf.",
  "keyphrases": {
    "weakness": [
      "memory leak"
    ]
  },
  "timestamp": "2025-07-13T23:55:57.670292",
  "retriever_config": {
    "weights": {
      "dense": 0.35,
      "sparse": 0.4,
      "graph": 0.25
    },
    "use_graph": true,
    "use_rag": true,
    "use_sparse": true
  },
  "raw_results": {
    "graph": [
      {
        "cwe_id": "125",
        "name": "Out-of-bounds Read",
        "abstraction": "base",
        "score": 3.7206,
        "description": "CWE-125: Out-of-bounds Read...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "364",
        "name": "Signal Handler Race Condition",
        "abstraction": "base",
        "score": 2.8651999999999997,
        "description": "CWE-364: Signal Handler Race Condition...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "123",
        "name": "Write-what-where Condition",
        "abstraction": "base",
        "score": 2.4700000000000006,
        "description": "CWE-123: Write-what-where Condition...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "390",
        "name": "Detection of Error Condition Without Action",
        "abstraction": "base",
        "score": 2.2100000000000004,
        "description": "CWE-390: Detection of Error Condition Without Action...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "824",
        "name": "Access of Uninitialized Pointer",
        "abstraction": "base",
        "score": 2.2100000000000004,
        "description": "CWE-824: Access of Uninitialized Pointer...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "abstraction": "base",
        "score": 2.2100000000000004,
        "description": "CWE-1284: Improper Validation of Specified Quantity in Input...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "129",
        "name": "Improper Validation of Array Index",
        "abstraction": "variant",
        "score": 2.04,
        "description": "CWE-129: Improper Validation of Array Index...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "789",
        "name": "Memory Allocation with Excessive Size Value",
        "abstraction": "Variant",
        "score": 1.8434121480505226,
        "description": "The product allocates memory based on an untrusted, large size value, but it does not ensure that the size is within expected limits, allowing arbitrary amounts of memory to be allocated....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "456",
        "name": "Missing Initialization of a Variable",
        "abstraction": "variant",
        "score": 1.83936,
        "description": "CWE-456: Missing Initialization of a Variable...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "416",
        "name": "Use After Free",
        "abstraction": "Variant",
        "score": 1.7924613646688943,
        "description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a locati...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "120",
        "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
        "abstraction": "base",
        "score": 1.7680000000000005,
        "description": "CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')...",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "562",
        "name": "Return of Stack Variable Address",
        "abstraction": "base",
        "score": 1.7680000000000005,
        "description": "CWE-562: Return of Stack Variable Address...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1265",
        "name": "Unintended Reentrant Invocation of Non-reentrant Code Via Nested Calls",
        "abstraction": "base",
        "score": 1.6848000000000003,
        "description": "CWE-1265: Unintended Reentrant Invocation of Non-reentrant Code Via Nested Calls...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "252",
        "name": "Unchecked Return Value",
        "abstraction": "base",
        "score": 1.6848000000000003,
        "description": "CWE-252: Unchecked Return Value...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "386",
        "name": "Symbolic Name not Mapping to Correct Object",
        "abstraction": "base",
        "score": 1.6744000000000003,
        "description": "CWE-386: Symbolic Name not Mapping to Correct Object...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "415",
        "name": "Double Free",
        "abstraction": "Variant",
        "score": 1.634217086977805,
        "description": "The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "781",
        "name": "Improper Address Validation in IOCTL with METHOD_NEITHER I/O Control Code",
        "abstraction": "variant",
        "score": 1.6320000000000003,
        "description": "CWE-781: Improper Address Validation in IOCTL with METHOD_NEITHER I/O Control Code...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1325",
        "name": "Improperly Controlled Sequential Memory Allocation",
        "abstraction": "Base",
        "score": 1.6111396759452181,
        "description": "The product manages a group of objects or resources and performs a separate memory allocation for each object, but it does not properly limit the total amount of memory that is consumed by all of the ...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "61",
        "name": "UNIX Symbolic Link (Symlink) Following",
        "abstraction": "compound",
        "score": 1.61,
        "description": "CWE-61: UNIX Symbolic Link (Symlink) Following...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "134",
        "name": "Use of Externally-Controlled Format String",
        "abstraction": "base",
        "score": 1.5350400000000004,
        "description": "CWE-134: Use of Externally-Controlled Format String...",
        "mapping_usage": "Allowed"
      }
    ],
    "dense": [
      {
        "cwe_id": "401",
        "name": "Missing Release of Memory after Effective Lifetime",
        "abstraction": "Variant",
        "score": 0.4738022495527949,
        "description": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "909",
        "name": "Missing Initialization of Resource",
        "abstraction": "Class",
        "score": 0.4578106470259058,
        "description": "The product does not initialize a critical resource....",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "403",
        "name": "Exposure of File Descriptor to Unintended Control Sphere ('File Descriptor Leak')",
        "abstraction": "Base",
        "score": 0.44966417336122716,
        "description": "A process does not close sensitive file descriptors before invoking a child process, which allows the child to perform unauthorized I/O operations using those descriptors....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "763",
        "name": "Release of Invalid Pointer or Reference",
        "abstraction": "Base",
        "score": 0.42940504698703946,
        "description": "The product attempts to return a memory resource to the system, but it calls the wrong release function or calls the appropriate release function incorrectly....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "789",
        "name": "Memory Allocation with Excessive Size Value",
        "abstraction": "Variant",
        "score": 0.4254787439810464,
        "description": "The product allocates memory based on an untrusted, large size value, but it does not ensure that the size is within expected limits, allowing arbitrary amounts of memory to be allocated....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "590",
        "name": "Free of Memory not on the Heap",
        "abstraction": "Variant",
        "score": 0.4245576088420562,
        "description": "The product calls free() on a pointer to memory that was not allocated using associated heap allocation functions such as malloc(), calloc(), or realloc()....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "126",
        "name": "Buffer Over-read",
        "abstraction": "Variant",
        "score": 0.4233291183117621,
        "description": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "122",
        "name": "Heap-based Buffer Overflow",
        "abstraction": "Variant",
        "score": 0.4227724347054713,
        "description": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine suc...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "775",
        "name": "Missing Release of File Descriptor or Handle after Effective Lifetime",
        "abstraction": "Variant",
        "score": 0.4211993745912475,
        "description": "The product does not release a file descriptor or handle after its effective lifetime has ended, i.e., after the file descriptor/handle is no longer needed....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "822",
        "name": "Untrusted Pointer Dereference",
        "abstraction": "Base",
        "score": 0.4198032828688726,
        "description": "The product obtains a value from an untrusted source, converts this value to a pointer, and dereferences the resulting pointer....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "805",
        "name": "Buffer Access with Incorrect Length Value",
        "abstraction": "Base",
        "score": 0.41685383791144226,
        "description": "The product uses a sequential operation to read or write a buffer, but it uses an incorrect length value that causes it to access memory that is outside of the bounds of the buffer....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "908",
        "name": "Use of Uninitialized Resource",
        "abstraction": "Base",
        "score": 0.4126087959259307,
        "description": "The product uses or accesses a resource that has not been initialized....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "773",
        "name": "Missing Reference to Active File Descriptor or Handle",
        "abstraction": "Variant",
        "score": 0.4093007253358664,
        "description": "The product does not properly maintain references to a file descriptor or handle, which prevents that file descriptor/handle from being reclaimed....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "911",
        "name": "Improper Update of Reference Count",
        "abstraction": "Base",
        "score": 0.40871594722096927,
        "description": "The product uses a reference count to manage a resource, but it does not update or incorrectly updates the reference count....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1190",
        "name": "DMA Device Enabled Too Early in Boot Phase",
        "abstraction": "Base",
        "score": 0.40840029324204524,
        "description": "The product enables a Direct Memory Access (DMA) capable device before the security configuration settings are established, which allows an attacker to extract data from or gain privileges on the prod...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "416",
        "name": "Use After Free",
        "abstraction": "Variant",
        "score": 0.40810485567095006,
        "description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a locati...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1285",
        "name": "Improper Validation of Specified Index, Position, or Offset in Input",
        "abstraction": "Base",
        "score": 0.4059309955008068,
        "description": "The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the spe...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "761",
        "name": "Free of Pointer not at Start of Buffer",
        "abstraction": "Variant",
        "score": 0.4054841488205274,
        "description": "The product calls free() on a pointer to a memory resource that was allocated on the heap, but the pointer is not at the start of the buffer....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "124",
        "name": "Buffer Underwrite ('Buffer Underflow')",
        "abstraction": "Base",
        "score": 0.4054310539730804,
        "description": "The product writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "190",
        "name": "Integer Overflow or Wraparound",
        "abstraction": "Base",
        "score": 0.40414261891001896,
        "description": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original...",
        "mapping_usage": "Allowed"
      }
    ],
    "sparse": [
      {
        "cwe_id": "401",
        "name": "Missing Release of Memory after Effective Lifetime",
        "abstraction": "Variant",
        "score": 1000.0,
        "description": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "909",
        "name": "Missing Initialization of Resource",
        "abstraction": "Class",
        "score": 591.352908978426,
        "description": "The product does not initialize a critical resource....",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "125",
        "name": "Out-of-bounds Read",
        "abstraction": "Base",
        "score": 591.06302895203,
        "description": "The product reads data past the end, or before the beginning, of the intended buffer....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "415",
        "name": "Double Free",
        "abstraction": "Variant",
        "score": 582.6933320314484,
        "description": "The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "abstraction": "Class",
        "score": 580.6369421151818,
        "description": "The product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code ...",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "667",
        "name": "Improper Locking",
        "abstraction": "Class",
        "score": 568.0540640220736,
        "description": "The product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors....",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "476",
        "name": "NULL Pointer Dereference",
        "abstraction": "Base",
        "score": 566.1178836035349,
        "description": "The product dereferences a pointer that it expects to be valid but is NULL....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "787",
        "name": "Out-of-bounds Write",
        "abstraction": "Base",
        "score": 558.9564903594238,
        "description": "The product writes data past the end, or before the beginning, of the intended buffer....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "193",
        "name": "Off-by-one Error",
        "abstraction": "Base",
        "score": 558.4067532842297,
        "description": "A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "209",
        "name": "Generation of Error Message Containing Sensitive Information",
        "abstraction": "Base",
        "score": 555.0348742593628,
        "description": "The product generates an error message that includes sensitive information about its environment, users, or associated data....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "abstraction": "Base",
        "score": 194.61221410415436,
        "description": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties....",
        "mapping_usage": "Allowed"
      }
    ]
  },
  "score_statistics": {
    "dense": {
      "min": 0.40414261891001896,
      "max": 0.4738022495527949,
      "mean": 0.421639797636953,
      "median": 0.4183285603901574,
      "count": 20
    },
    "sparse": {
      "min": 194.61221410415436,
      "max": 1000.0,
      "mean": 576.9934992463513,
      "median": 568.0540640220736,
      "count": 11
    },
    "graph": {
      "min": 1.5350400000000004,
      "max": 3.7206,
      "mean": 1.990171513782122,
      "median": 1.7802306823344474,
      "count": 20
    }
  }
}