{
  "cve_id": "CVE-2024-39315",
  "description": "Pomerium is an identity and context-aware access proxy. Prior to version 0.26.1, the Pomerium user info page (at `/.pomerium`) unintentionally included serialized OAuth2 access and ID tokens from the logged-in users session. These tokens are not intended to be exposed to end users. This issue may be more severe in the presence of a **cross-site scripting** vulnerability in an upstream application proxied through Pomerium. If an attacker could insert a malicious script onto a web page proxied through Pomerium, that script could access these tokens by making a request to the `/.pomerium` endpoint. Upstream applications that authenticate only the ID token may be vulnerable to user impersonation using a token obtained in this manner. Note that an OAuth2 access token or ID token by itself is not sufficient to hijack a users Pomerium session. Upstream applications should not be vulnerable to user impersonation via these tokens provided the application verifies the Pomerium JWT for each request, the connection between Pomerium and the application is secured by mTLS, or the connection between Pomerium and the application is otherwise secured at the network layer. The issue is patched in Pomerium v0.26.1. No known workarounds are available.",
  "key_phrases": {
    "rootcause": "",
    "weakness": [
      "cross-site scripting",
      "information exposure"
    ],
    "impact": [
      "access serialized OAuth2 access and ID tokens",
      "impersonation"
    ],
    "vector": "",
    "attacker": "",
    "product": "Pomerium",
    "version": "prior to 0.26.1",
    "component": "/.pomerium endpoint"
  },
  "reference_content": "Based on the provided information, here's an analysis of CVE-2024-39315:\n\n**Root Cause of Vulnerability:**\n\nThe Pomerium user info page (located at `/.pomerium`) was unintentionally including serialized OAuth2 access and ID tokens from the logged-in user's session within the response. These tokens were not meant to be exposed to end-users.\n\n**Weaknesses/Vulnerabilities Present:**\n\n*   **Information Exposure:** The primary vulnerability is the exposure of sensitive OAuth2 access and ID tokens within the user info endpoint response.\n*   **Data Leakage:** These tokens, intended for internal use within the Pomerium service and downstream applications, are leaked to the end user's browser, potentially making them accessible to malicious actors.\n\n**Impact of Exploitation:**\n\n*   **Potential for User Impersonation:** If an attacker were to obtain the exposed ID token, they might be able to impersonate the user in upstream applications that rely solely on the ID token for authentication.\n*   **Increased Severity with XSS:** The impact is more severe when combined with an XSS vulnerability in a proxied upstream application.  An attacker injecting a malicious script could then retrieve these leaked tokens by querying the `/.pomerium` endpoint.\n*   **Privilege escalation**: Though not explicitly detailed, access tokens could potentially be used to perform actions on the user's behalf depending on the permissions associated with the tokens.\n\n**Attack Vectors:**\n\n*   **Network-based:** An attacker could exploit this vulnerability by directly accessing the `/.pomerium` endpoint after a user has logged in.\n*   **Cross-Site Scripting (XSS) Augmentation:** An XSS vulnerability in a proxied upstream application can be used as a means to retrieve the tokens from the vulnerable endpoint by injecting malicious scripts that then make a request to the `/.pomerium` endpoint.\n\n**Required Attacker Capabilities/Position:**\n\n*   **Low privilege:** An attacker would need to be a logged-in user of the Pomerium service (or have access to a logged-in user's session to view the data).\n*   **Network access:** The attacker would need network access to the Pomerium service.\n*   **User interaction:** The user interaction required here is low. A user simply needs to be logged into Pomerium. The attacker may need additional interaction if using XSS in an upstream application to obtain the tokens, which would require the victim to visit the compromised site.\n\n**Additional Notes:**\n\n*   The vulnerability is mitigated in Pomerium v0.26.1.\n*   The provided commit (`4c7c4320afb2ced70ba19b46de1ac4383f3daa48`) shows the fix where the excess user information, including the OAuth tokens, are removed from the userinfo endpoint response.\n*   The severity is rated as \"Moderate\" with a CVSS score of 5.7.\n*   The advisory states that while the tokens exposed might be used to impersonate users in upstream applications, the risk is reduced if applications verify the Pomerium JWT, use mTLS, or have network-level security.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID   | CWE Name                                                                    | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :-------------------------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :-------------------------------- |\n| CWE-201   | Insertion of Sensitive Information Into Sent Data                           | 0.90       | Base                  | Primary CWE                     | Allowed                           |\n| CWE-79    | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.60       | Base                  | Secondary Candidate             | Allowed                           |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.80\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary weakness is CWE-201, which involves the **insertion of sensitive information into sent data**. The description clearly indicates that OAuth2 access and ID tokens were unintentionally included in the user info page, which is a form of data being sent to the user.\n\nCWE-79 is related because the vulnerability description mentions that the issue may be more severe in the presence of a **cross-site scripting** vulnerability. If an attacker could insert a malicious script onto a web page proxied through Pomerium, that script could access these tokens. Thus, CWE-79 can lead to exploitation of the sensitive information exposure.\n\n```mermaid\ngraph TD\n    cwe201[\"CWE-201: Insertion of Sensitive Information Into Sent Data\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe79 -->|CANPRECEDE| cwe201\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe201 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **insertion of sensitive information (OAuth2 access and ID tokens) into the user info page** (CWE-201). This exposed information can then be potentially exploited if a **cross-site scripting** vulnerability is present (CWE-79), allowing an attacker to access the tokens and potentially impersonate a user.\n\n## Summary of Analysis\nThe primary CWE is CWE-201 because the root cause is the **unintentional inclusion of sensitive tokens in the user info page**. The presence of a **cross-site scripting** vulnerability (CWE-79) would only amplify the impact of the vulnerability, but is not the root cause itself.\n\nThe evidence supporting CWE-201 is the statement that \"Pomerium user info page (at `/.pomerium`) unintentionally included serialized OAuth2 access and ID tokens from the logged-in users session. These tokens are not intended to be exposed to end users.\"\n\nCWE-79 is a secondary concern because it describes how an attacker might leverage the exposed tokens.\n\nThe chosen CWEs are at the optimal level of specificity because they directly represent the **information exposure** and the potential for **cross-site scripting** to worsen the vulnerability.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-696: Incorrect Behavior Order\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product performs multiple related behaviors, but the behaviors are performed in the wrong order in ways which may produce resultant weaknesses.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-668: Exposure of Resource to Wrong Sphere\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-668 is high-level and is often misused as a catch-all when lower-level CWE IDs might be applicable. It is sometimes used for low-information vulnerability reports [REF-1287]. It is a level-1 Class (i.e., a child of a Pillar). It is not useful for trend analysis.\n\n\n\n## CWE-1390: Weak Authentication\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n\n\n## CWE-345: Insufficient Verification of Data Authenticity\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-863: Incorrect Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 2687.63\n**Source**: sparse\n\n**Description**:\nThe product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-639: Authorization Bypass Through User-Controlled Key\n**Abstraction Level**: Base\n**Similarity Score**: 2678.77\n**Source**: sparse\n\n**Description**:\nThe system'",
  "analysis_with_relationships": "# Summary\n| CWE ID   | CWE Name                                                                    | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :-------------------------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :-------------------------------- |\n| CWE-201   | Insertion of Sensitive Information Into Sent Data                           | 0.90       | Base                  | Primary CWE                     | Allowed                           |\n| CWE-79    | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.60       | Base                  | Secondary Candidate             | Allowed                           |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.80\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary weakness is CWE-201, which involves the **insertion of sensitive information into sent data**. The description clearly indicates that OAuth2 access and ID tokens were unintentionally included in the user info page, which is a form of data being sent to the user.\n\nCWE-79 is related because the vulnerability description mentions that the issue may be more severe in the presence of a **cross-site scripting** vulnerability. If an attacker could insert a malicious script onto a web page proxied through Pomerium, that script could access these tokens. Thus, CWE-79 can lead to exploitation of the sensitive information exposure.\n\n```mermaid\ngraph TD\n    cwe201[\"CWE-201: Insertion of Sensitive Information Into Sent Data\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe79 -->|CANPRECEDE| cwe201\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe201 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **insertion of sensitive information (OAuth2 access and ID tokens) into the user info page** (CWE-201). This exposed information can then be potentially exploited if a **cross-site scripting** vulnerability is present (CWE-79), allowing an attacker to access the tokens and potentially impersonate a user.\n\n## Summary of Analysis\nThe primary CWE is CWE-201 because the root cause is the **unintentional inclusion of sensitive tokens in the user info page**. The presence of a **cross-site scripting** vulnerability (CWE-79) would only amplify the impact of the vulnerability, but is not the root cause itself.\n\nThe evidence supporting CWE-201 is the statement that \"Pomerium user info page (at `/.pomerium`) unintentionally included serialized OAuth2 access and ID tokens from the logged-in users session. These tokens are not intended to be exposed to end users.\"\n\nCWE-79 is a secondary concern because it describes how an attacker might leverage the exposed tokens.\n\nThe chosen CWEs are at the optimal level of specificity because they directly represent the **information exposure** and the potential for **cross-site scripting** to worsen the vulnerability.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-696: Incorrect Behavior Order\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product performs multiple related behaviors, but the behaviors are performed in the wrong order in ways which may produce resultant weaknesses.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-668: Exposure of Resource to Wrong Sphere\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-668 is high-level and is often misused as a catch-all when lower-level CWE IDs might be applicable. It is sometimes used for low-information vulnerability reports [REF-1287]. It is a level-1 Class (i.e., a child of a Pillar). It is not useful for trend analysis.\n\n\n\n## CWE-1390: Weak Authentication\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n\n\n## CWE-345: Insufficient Verification of Data Authenticity\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-863: Incorrect Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 2687.63\n**Source**: sparse\n\n**Description**:\nThe product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-639: Authorization Bypass Through User-Controlled Key\n**Abstraction Level**: Base\n**Similarity Score**: 2678.77\n**Source**: sparse\n\n**Description**:\nThe system'\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-1390:**\n- 1390 (Weak Authentication) - ROOT\n\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "489",
        "name": "Active Debug Code",
        "source": "sparse",
        "original_content": "The product is deployed to unauthorized actors with debugging code still enabled or active, which can create unintended entry points or expose sensitive information.",
        "keyphrase_sources": [
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "weakness:information exposure",
            "keyphrase": "information exposure",
            "type": "weakness"
          },
          {
            "id": "impact:access serialized OAuth2 access and ID tokens",
            "keyphrase": "access serialized OAuth2 access and ID tokens",
            "type": "impact"
          },
          {
            "id": "impact:impersonation",
            "keyphrase": "impersonation",
            "type": "impact"
          },
          {
            "id": "product:Pomerium",
            "keyphrase": "Pomerium",
            "type": "product"
          },
          {
            "id": "version:prior to 0.26.1",
            "keyphrase": "prior to 0.26.1",
            "type": "version"
          },
          {
            "id": "component:/.pomerium endpoint",
            "keyphrase": "/.pomerium endpoint",
            "type": "component"
          }
        ]
      },
      "similarity": 1122.2617101318685
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse",
        "original_content": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.",
        "keyphrase_sources": [
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "weakness:information exposure",
            "keyphrase": "information exposure",
            "type": "weakness"
          },
          {
            "id": "impact:access serialized OAuth2 access and ID tokens",
            "keyphrase": "access serialized OAuth2 access and ID tokens",
            "type": "impact"
          },
          {
            "id": "impact:impersonation",
            "keyphrase": "impersonation",
            "type": "impact"
          },
          {
            "id": "product:Pomerium",
            "keyphrase": "Pomerium",
            "type": "product"
          },
          {
            "id": "version:prior to 0.26.1",
            "keyphrase": "prior to 0.26.1",
            "type": "version"
          },
          {
            "id": "component:/.pomerium endpoint",
            "keyphrase": "/.pomerium endpoint",
            "type": "component"
          }
        ]
      },
      "similarity": 1102.2413269823949
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse",
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "keyphrase_sources": [
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          }
        ]
      },
      "similarity": 1080.1022915480125
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse",
        "original_content": "The code transmits data to another actor, but a portion of the data includes sensitive information that should not be accessible to that actor.",
        "keyphrase_sources": [
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "weakness:information exposure",
            "keyphrase": "information exposure",
            "type": "weakness"
          },
          {
            "id": "impact:access serialized OAuth2 access and ID tokens",
            "keyphrase": "access serialized OAuth2 access and ID tokens",
            "type": "impact"
          },
          {
            "id": "impact:impersonation",
            "keyphrase": "impersonation",
            "type": "impact"
          },
          {
            "id": "product:Pomerium",
            "keyphrase": "Pomerium",
            "type": "product"
          },
          {
            "id": "version:prior to 0.26.1",
            "keyphrase": "prior to 0.26.1",
            "type": "version"
          },
          {
            "id": "component:/.pomerium endpoint",
            "keyphrase": "/.pomerium endpoint",
            "type": "component"
          }
        ]
      },
      "similarity": 1079.8491688816603
    },
    {
      "metadata": {
        "doc_id": "639",
        "name": "Authorization Bypass Through User-Controlled Key",
        "source": "sparse",
        "original_content": "The system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.",
        "keyphrase_sources": [
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "weakness:information exposure",
            "keyphrase": "information exposure",
            "type": "weakness"
          },
          {
            "id": "version:prior to 0.26.1",
            "keyphrase": "prior to 0.26.1",
            "type": "version"
          },
          {
            "id": "component:/.pomerium endpoint",
            "keyphrase": "/.pomerium endpoint",
            "type": "component"
          }
        ]
      },
      "similarity": 1018.6276982002903
    },
    {
      "metadata": {
        "doc_id": "287",
        "name": "Improper Authentication",
        "source": "sparse",
        "original_content": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
        "keyphrase_sources": [
          {
            "id": "weakness:information exposure",
            "keyphrase": "information exposure",
            "type": "weakness"
          },
          {
            "id": "impact:access serialized OAuth2 access and ID tokens",
            "keyphrase": "access serialized OAuth2 access and ID tokens",
            "type": "impact"
          },
          {
            "id": "impact:impersonation",
            "keyphrase": "impersonation",
            "type": "impact"
          },
          {
            "id": "product:Pomerium",
            "keyphrase": "Pomerium",
            "type": "product"
          },
          {
            "id": "version:prior to 0.26.1",
            "keyphrase": "prior to 0.26.1",
            "type": "version"
          }
        ]
      },
      "similarity": 1011.0991712185495
    },
    {
      "metadata": {
        "doc_id": "1390",
        "name": "Weak Authentication",
        "source": "sparse",
        "original_content": "The product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.",
        "keyphrase_sources": [
          {
            "id": "impact:access serialized OAuth2 access and ID tokens",
            "keyphrase": "access serialized OAuth2 access and ID tokens",
            "type": "impact"
          },
          {
            "id": "impact:impersonation",
            "keyphrase": "impersonation",
            "type": "impact"
          },
          {
            "id": "product:Pomerium",
            "keyphrase": "Pomerium",
            "type": "product"
          }
        ]
      },
      "similarity": 384.83903215770914
    },
    {
      "metadata": {
        "doc_id": "923",
        "name": "Improper Restriction of Communication Channel to Intended Endpoints",
        "source": "sparse",
        "original_content": "The product establishes a communication channel to (or from) an endpoint for privileged or protected operations, but it does not properly ensure that it is communicating with the correct endpoint.",
        "keyphrase_sources": [
          {
            "id": "component:/.pomerium endpoint",
            "keyphrase": "/.pomerium endpoint",
            "type": "component"
          }
        ]
      },
      "similarity": 360.0758469047394
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-1390",
      "CWE-863",
      "CWE-345",
      "CWE-639",
      "CWE-79",
      "CWE-201",
      "CWE-472",
      "CWE-696",
      "CWE-74",
      "CWE-303",
      "CWE-668",
      "CWE-1391",
      "CWE-497",
      "CWE-212"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "489": [
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "weakness:information exposure",
        "keyphrase": "information exposure",
        "type": "weakness"
      },
      {
        "id": "impact:access serialized OAuth2 access and ID tokens",
        "keyphrase": "access serialized OAuth2 access and ID tokens",
        "type": "impact"
      },
      {
        "id": "impact:impersonation",
        "keyphrase": "impersonation",
        "type": "impact"
      },
      {
        "id": "product:Pomerium",
        "keyphrase": "Pomerium",
        "type": "product"
      },
      {
        "id": "version:prior to 0.26.1",
        "keyphrase": "prior to 0.26.1",
        "type": "version"
      },
      {
        "id": "component:/.pomerium endpoint",
        "keyphrase": "/.pomerium endpoint",
        "type": "component"
      }
    ],
    "863": [
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "weakness:information exposure",
        "keyphrase": "information exposure",
        "type": "weakness"
      },
      {
        "id": "impact:access serialized OAuth2 access and ID tokens",
        "keyphrase": "access serialized OAuth2 access and ID tokens",
        "type": "impact"
      },
      {
        "id": "impact:impersonation",
        "keyphrase": "impersonation",
        "type": "impact"
      },
      {
        "id": "product:Pomerium",
        "keyphrase": "Pomerium",
        "type": "product"
      },
      {
        "id": "version:prior to 0.26.1",
        "keyphrase": "prior to 0.26.1",
        "type": "version"
      },
      {
        "id": "component:/.pomerium endpoint",
        "keyphrase": "/.pomerium endpoint",
        "type": "component"
      }
    ],
    "79": [
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      }
    ],
    "201": [
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "weakness:information exposure",
        "keyphrase": "information exposure",
        "type": "weakness"
      },
      {
        "id": "impact:access serialized OAuth2 access and ID tokens",
        "keyphrase": "access serialized OAuth2 access and ID tokens",
        "type": "impact"
      },
      {
        "id": "impact:impersonation",
        "keyphrase": "impersonation",
        "type": "impact"
      },
      {
        "id": "product:Pomerium",
        "keyphrase": "Pomerium",
        "type": "product"
      },
      {
        "id": "version:prior to 0.26.1",
        "keyphrase": "prior to 0.26.1",
        "type": "version"
      },
      {
        "id": "component:/.pomerium endpoint",
        "keyphrase": "/.pomerium endpoint",
        "type": "component"
      }
    ],
    "639": [
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "weakness:information exposure",
        "keyphrase": "information exposure",
        "type": "weakness"
      },
      {
        "id": "version:prior to 0.26.1",
        "keyphrase": "prior to 0.26.1",
        "type": "version"
      },
      {
        "id": "component:/.pomerium endpoint",
        "keyphrase": "/.pomerium endpoint",
        "type": "component"
      }
    ],
    "287": [
      {
        "id": "weakness:information exposure",
        "keyphrase": "information exposure",
        "type": "weakness"
      },
      {
        "id": "impact:access serialized OAuth2 access and ID tokens",
        "keyphrase": "access serialized OAuth2 access and ID tokens",
        "type": "impact"
      },
      {
        "id": "impact:impersonation",
        "keyphrase": "impersonation",
        "type": "impact"
      },
      {
        "id": "product:Pomerium",
        "keyphrase": "Pomerium",
        "type": "product"
      },
      {
        "id": "version:prior to 0.26.1",
        "keyphrase": "prior to 0.26.1",
        "type": "version"
      }
    ],
    "1390": [
      {
        "id": "impact:access serialized OAuth2 access and ID tokens",
        "keyphrase": "access serialized OAuth2 access and ID tokens",
        "type": "impact"
      },
      {
        "id": "impact:impersonation",
        "keyphrase": "impersonation",
        "type": "impact"
      },
      {
        "id": "product:Pomerium",
        "keyphrase": "Pomerium",
        "type": "product"
      }
    ],
    "923": [
      {
        "id": "component:/.pomerium endpoint",
        "keyphrase": "/.pomerium endpoint",
        "type": "component"
      }
    ]
  }
}