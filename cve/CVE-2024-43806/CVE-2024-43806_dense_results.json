{
  "query": "Rustix is a set of safe Rust bindings to POSIX-ish APIs. When using `rustixfsDir` using the `linux_raw` backend, its possible for the iterator to get stuck when an IO error is encountered. Combined with a memory over-allocation issue in `rustixfsDirread_more`, this can cause quick and unbounded memory explosion (gigabytes in a few seconds if used on a hot path) and eventually lead to an OOM crash of the application. The symptoms were initially discovered in https//github.com/imsnif/bandwhich/issues/284. That post has lots of details of our investigation. Full details can be read on the GHSA-c827-hfw6-qwvm repo advisory. If a program tries to access a directory with its file descriptor after the file has been unlinked (or any other action that leaves the `Dir` iterator in the stuck state), and the implementation does not break after seeing an error, it can cause a memory explosion. As an example, Linuxs various virtual file systems (e.g. `/proc`, `/sys`) can contain directories that spontaneously pop in and out of existence. Attempting to iterate over them using `rustixfsDir` directly or indirectly (e.g. with the `procfs` crate) can trigger this fault condition if the implementation decides to continue on errors. An attacker knowledgeable about the implementation details of a vulnerable target can therefore try to trigger this fault condition via any one or a combination of several available APIs. If successful, the application host will quickly run out of m",
  "count": 20,
  "results": [
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "abstraction": "Base",
      "score": 0.4969784329837653,
      "original_score": 0.4969784329837653,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "674",
      "name": "Uncontrolled Recursion",
      "abstraction": "Class",
      "score": 0.49007517906578835,
      "original_score": 0.49007517906578835,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "abstraction": "Variant",
      "score": 0.48938865070750015,
      "original_score": 0.48938865070750015,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "abstraction": "Base",
      "score": 0.4750338853529076,
      "original_score": 0.4750338853529076,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1325",
      "name": "Improperly Controlled Sequential Memory Allocation",
      "abstraction": "Base",
      "score": 0.47320789481664927,
      "original_score": 0.47320789481664927,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 0.4714181180463298,
      "original_score": 0.4714181180463298,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "409",
      "name": "Improper Handling of Highly Compressed Data (Data Amplification)",
      "abstraction": "Base",
      "score": 0.46818668852089895,
      "original_score": 0.46818668852089895,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "366",
      "name": "Race Condition within a Thread",
      "abstraction": "Base",
      "score": 0.46807702157385844,
      "original_score": 0.46807702157385844,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "abstraction": "Base",
      "score": 0.46581893893399046,
      "original_score": 0.46581893893399046,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 0.46472432863611374,
      "original_score": 0.46472432863611374,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "122",
      "name": "Heap-based Buffer Overflow",
      "abstraction": "Variant",
      "score": 0.4569434054644097,
      "original_score": 0.4569434054644097,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "abstraction": "Variant",
      "score": 0.45650036780109393,
      "original_score": 0.45650036780109393,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "61",
      "name": "UNIX Symbolic Link (Symlink) Following",
      "abstraction": "Compound",
      "score": 0.45140599948619287,
      "original_score": 0.45140599948619287,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "abstraction": "Base",
      "score": 0.451010389418805,
      "original_score": 0.451010389418805,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "abstraction": "Base",
      "score": 0.4509544147041845,
      "original_score": 0.4509544147041845,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "abstraction": "Class",
      "score": 0.4447431504229224,
      "original_score": 0.4447431504229224,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "126",
      "name": "Buffer Over-read",
      "abstraction": "Variant",
      "score": 0.44341883380484043,
      "original_score": 0.44341883380484043,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "787",
      "name": "Out-of-bounds Write",
      "abstraction": "Base",
      "score": 0.44159547607989724,
      "original_score": 0.44159547607989724,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "abstraction": "Base",
      "score": 0.4399405262877162,
      "original_score": 0.4399405262877162,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "119",
      "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
      "abstraction": "Class",
      "score": 0.43986874631353123,
      "original_score": 0.43986874631353123,
      "mapping_usage": "Discouraged"
    }
  ],
  "statistics": {
    "min": 0.43986874631353123,
    "max": 0.4969784329837653,
    "mean": 0.4619645224210697,
    "median": 0.46083386705026175,
    "count": 20
  }
}