{
  "query": "In the Linux kernel, the following vulnerability has been resolved mm vmalloc check if a hash-index is in cpu_possible_mask The problem is that there are systems where cpu_possible_mask has gaps between set CPUs, for example SPARC. In this scenario addr_to_vb_xa() hash function can return an index which accesses to not-possible and not setup CPU area using per_cpu() macro. This results in an oops on SPARC. A per-cpu vmap_block_queue is also used as hash table, incorrectly assuming the cpu_possible_mask has no gaps. Fix it by adjusting an index to a next possible CPU.",
  "count": 12,
  "results": [
    {
      "cwe_id": "407",
      "name": "Inefficient Algorithmic Complexity",
      "abstraction": "Class",
      "score": 510.8557060594974,
      "original_score": 510.8557060594974,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "328",
      "name": "Use of Weak Hash",
      "abstraction": "Base",
      "score": 479.65127107702017,
      "original_score": 479.65127107702017,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1176",
      "name": "Inefficient CPU Computation",
      "abstraction": "Class",
      "score": 469.0439599568647,
      "original_score": 469.0439599568647,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "abstraction": "Base",
      "score": 461.5759654469481,
      "original_score": 461.5759654469481,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 460.60964978357487,
      "original_score": 460.60964978357487,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "abstraction": "Base",
      "score": 460.5930393716827,
      "original_score": 460.5930393716827,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "abstraction": "Base",
      "score": 459.73297482795766,
      "original_score": 459.73297482795766,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "abstraction": "Class",
      "score": 456.2703632443687,
      "original_score": 456.2703632443687,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "119",
      "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
      "abstraction": "Class",
      "score": 451.39381275418316,
      "original_score": 451.39381275418316,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "306",
      "name": "Missing Authentication for Critical Function",
      "abstraction": "Base",
      "score": 451.3614340694886,
      "original_score": 451.3614340694886,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "116",
      "name": "Improper Encoding or Escaping of Output",
      "abstraction": "Class",
      "score": 149.05725535931563,
      "original_score": 149.05725535931563,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 148.58988153883257,
      "original_score": 148.58988153883257,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 148.58988153883257,
    "max": 510.8557060594974,
    "mean": 413.22794279081114,
    "median": 460.1630070998202,
    "count": 12
  }
}