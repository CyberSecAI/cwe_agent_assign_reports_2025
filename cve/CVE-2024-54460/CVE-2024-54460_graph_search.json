{
  "retriever": "graph",
  "query": "In the Linux kernel, the following vulnerability has been resolved Bluetooth iso Fix circular lock in iso_listen_bis This fixes the circular locking dependency warning below, by releasing the socket lock before enterning iso_listen_bis, to avoid any potential deadlock with hdev lock. [ 75.307983] ====================================================== [ 75.307984] WARNING possible circular locking dependency detected [ 75.307985] 6.12.0-rc6+ #22 Not tainted [ 75.307987] ------------------------------------------------------ [ 75.307987] kworker/u812/2623 is trying to acquire lock [ 75.307988] ffff8fde1769da58 (sk_lock-AF_BLUETOOTH-BTPROTO_ISO) at iso_connect_cfm+0x253/0x840 [bluetooth] [ 75.308021] but task is already holding lock [ 75.308022] ffff8fdd61a10078 (&hdev->lock) at hci_le_per_adv_report_evt+0x47/0x2f0 [bluetooth] [ 75.308053] which lock already depends on the new lock. [ 75.308054] the existing dependency chain (in reverse order) is [ 75.308055] -> #1 (&hdev->lock){+.+.}-{33} [ 75.308057] __mutex_lock+0xad/0xc50 [ 75.308061] mutex_lock_nested+0x1b/0x30 [ 75.308063] iso_sock_listen+0x143/0x5c0 [bluetooth] [ 75.308085] __sys_listen_socket+0x49/0x60 [ 75.308088] __x64_sys_listen+0x4c/0x90 [ 75.308090] x64_sys_call+0x2517/0x25f0 [ 75.308092] do_syscall_64+0x87/0x150 [ 75.308095] entry_SYSCALL_64_after_hwframe+0x76/0x7e [ 75.308098] -> #0 (sk_lock-AF_BLUETOOTH-BTPROTO_ISO){+.+.}-{00} [ 75.308100] __lock_acquire+0x155e/0x25f0 [ 75.308103] lock_acquire+0xc9/0x300 [ 75.308105] lock_sock_nested+0x32/0x90 [ 75.308107] iso_connect_cfm+0x253/0x840 [bluetooth] [ 75.308128] hci_connect_cfm+0x6c/0x190 [bluetooth] [ 75.308155] hci_le_per_adv_report_evt+0x27b/0x2f0 [bluetooth] [ 75.308180] hci_le_meta_evt+0xe7/0x200 [bluetooth] [ 75.308206] hci_event_packet+0x21f/0x5c0 [bluetooth] [ 75.308230] hci_rx_work+0x3ae/0xb10 [bluetooth] [ 75.308254] process_one_work+0x212/0x740 [ 75.308256] worker_thread+0x1bd/0x3a0 [ 75.308258] kthread+0xe4/0x120 [ 75.308259] ret_from_fork+0x44/0x70 [ 75.308261] ret_from_fork_asm+0x1a/0x30 [ 75.308263] other info that might help us debug this [ 75.308264] Possible unsafe locking scenario [ 75.308264] CPU0 CPU1 [ 75.308265] ---- ---- [ 75.308265] lock(&hdev->lock) [ 75.308267] lock(sk_lock- AF_BLUETOOTH-BTPROTO_ISO) [ 75.308268] lock(&hdev->lock) [ 75.308269] lock(sk_lock-AF_BLUETOOTH-BTPROTO_ISO) [ 75.308270] *** DEADLOCK *** [ 75.308271] 4 locks held by kworker/u812/2623 [ 75.308272] #0 ffff8fdd66e52148 ((wq_completion)hci0#2){+.+.}-{00}, at process_one_work+0x443/0x740 [ 75.308276] #1 ffffafb488b7fe48 ((work_completion)(&hdev->rx_work)), at process_one_work+0x1ce/0x740 [ 75.308280] #2 ffff8fdd61a10078 (&hdev->lock){+.+.}-{33} at hci_le_per_adv_report_evt+0x47/0x2f0 [bluetooth] [ 75.308304] #3 ffffffffb6ba4900 (rcu_read_lock){....}-{12}, at hci_connect_cfm+0x29/0x190 [bluetooth] Consider specifically these CWEs: CWE-359 CWE-75 CWE-76 CWE-667 CWE-833 CWE-401 CWE-413 CWE-362 CWE-74",
  "keyphrases": {
    "original_query": "In the Linux kernel, the following vulnerability has been resolved Bluetooth iso Fix circular lock in iso_listen_bis This fixes the circular locking dependency warning below, by releasing the socket lock before enterning iso_listen_bis, to avoid any potential deadlock with hdev lock. [ 75.307983] ====================================================== [ 75.307984] WARNING possible circular locking dependency detected [ 75.307985] 6.12.0-rc6+ #22 Not tainted [ 75.307987] ------------------------------------------------------ [ 75.307987] kworker/u812/2623 is trying to acquire lock [ 75.307988] ffff8fde1769da58 (sk_lock-AF_BLUETOOTH-BTPROTO_ISO) at iso_connect_cfm+0x253/0x840 [bluetooth] [ 75.308021] but task is already holding lock [ 75.308022] ffff8fdd61a10078 (&hdev->lock) at hci_le_per_adv_report_evt+0x47/0x2f0 [bluetooth] [ 75.308053] which lock already depends on the new lock. [ 75.308054] the existing dependency chain (in reverse order) is [ 75.308055] -> #1 (&hdev->lock){+.+.}-{33} [ 75.308057] __mutex_lock+0xad/0xc50 [ 75.308061] mutex_lock_nested+0x1b/0x30 [ 75.308063] iso_sock_listen+0x143/0x5c0 [bluetooth] [ 75.308085] __sys_listen_socket+0x49/0x60 [ 75.308088] __x64_sys_listen+0x4c/0x90 [ 75.308090] x64_sys_call+0x2517/0x25f0 [ 75.308092] do_syscall_64+0x87/0x150 [ 75.308095] entry_SYSCALL_64_after_hwframe+0x76/0x7e [ 75.308098] -> #0 (sk_lock-AF_BLUETOOTH-BTPROTO_ISO){+.+.}-{00} [ 75.308100] __lock_acquire+0x155e/0x25f0 [ 75.308103] lock_acquire+0xc9/0x300 [ 75.308105] lock_sock_nested+0x32/0x90 [ 75.308107] iso_connect_cfm+0x253/0x840 [bluetooth] [ 75.308128] hci_connect_cfm+0x6c/0x190 [bluetooth] [ 75.308155] hci_le_per_adv_report_evt+0x27b/0x2f0 [bluetooth] [ 75.308180] hci_le_meta_evt+0xe7/0x200 [bluetooth] [ 75.308206] hci_event_packet+0x21f/0x5c0 [bluetooth] [ 75.308230] hci_rx_work+0x3ae/0xb10 [bluetooth] [ 75.308254] process_one_work+0x212/0x740 [ 75.308256] worker_thread+0x1bd/0x3a0 [ 75.308258] kthread+0xe4/0x120 [ 75.308259] ret_from_fork+0x44/0x70 [ 75.308261] ret_from_fork_asm+0x1a/0x30 [ 75.308263] other info that might help us debug this [ 75.308264] Possible unsafe locking scenario [ 75.308264] CPU0 CPU1 [ 75.308265] ---- ---- [ 75.308265] lock(&hdev->lock) [ 75.308267] lock(sk_lock- AF_BLUETOOTH-BTPROTO_ISO) [ 75.308268] lock(&hdev->lock) [ 75.308269] lock(sk_lock-AF_BLUETOOTH-BTPROTO_ISO) [ 75.308270] *** DEADLOCK *** [ 75.308271] 4 locks held by kworker/u812/2623 [ 75.308272] #0 ffff8fdd66e52148 ((wq_completion)hci0#2){+.+.}-{00}, at process_one_work+0x443/0x740 [ 75.308276] #1 ffffafb488b7fe48 ((work_completion)(&hdev->rx_work)), at process_one_work+0x1ce/0x740 [ 75.308280] #2 ffff8fdd61a10078 (&hdev->lock){+.+.}-{33} at hci_le_per_adv_report_evt+0x47/0x2f0 [bluetooth] [ 75.308304] #3 ffffffffb6ba4900 (rcu_read_lock){....}-{12}, at hci_connect_cfm+0x29/0x190 [bluetooth]",
    "enhanced_query": "In the Linux kernel, the following vulnerability has been resolved Bluetooth iso Fix circular lock in iso_listen_bis This fixes the circular locking dependency warning below, by releasing the socket lock before enterning iso_listen_bis, to avoid any potential deadlock with hdev lock. [ 75.307983] ====================================================== [ 75.307984] WARNING possible circular locking dependency detected [ 75.307985] 6.12.0-rc6+ #22 Not tainted [ 75.307987] ------------------------------------------------------ [ 75.307987] kworker/u812/2623 is trying to acquire lock [ 75.307988] ffff8fde1769da58 (sk_lock-AF_BLUETOOTH-BTPROTO_ISO) at iso_connect_cfm+0x253/0x840 [bluetooth] [ 75.308021] but task is already holding lock [ 75.308022] ffff8fdd61a10078 (&hdev->lock) at hci_le_per_adv_report_evt+0x47/0x2f0 [bluetooth] [ 75.308053] which lock already depends on the new lock. [ 75.308054] the existing dependency chain (in reverse order) is [ 75.308055] -> #1 (&hdev->lock){+.+.}-{33} [ 75.308057] __mutex_lock+0xad/0xc50 [ 75.308061] mutex_lock_nested+0x1b/0x30 [ 75.308063] iso_sock_listen+0x143/0x5c0 [bluetooth] [ 75.308085] __sys_listen_socket+0x49/0x60 [ 75.308088] __x64_sys_listen+0x4c/0x90 [ 75.308090] x64_sys_call+0x2517/0x25f0 [ 75.308092] do_syscall_64+0x87/0x150 [ 75.308095] entry_SYSCALL_64_after_hwframe+0x76/0x7e [ 75.308098] -> #0 (sk_lock-AF_BLUETOOTH-BTPROTO_ISO){+.+.}-{00} [ 75.308100] __lock_acquire+0x155e/0x25f0 [ 75.308103] lock_acquire+0xc9/0x300 [ 75.308105] lock_sock_nested+0x32/0x90 [ 75.308107] iso_connect_cfm+0x253/0x840 [bluetooth] [ 75.308128] hci_connect_cfm+0x6c/0x190 [bluetooth] [ 75.308155] hci_le_per_adv_report_evt+0x27b/0x2f0 [bluetooth] [ 75.308180] hci_le_meta_evt+0xe7/0x200 [bluetooth] [ 75.308206] hci_event_packet+0x21f/0x5c0 [bluetooth] [ 75.308230] hci_rx_work+0x3ae/0xb10 [bluetooth] [ 75.308254] process_one_work+0x212/0x740 [ 75.308256] worker_thread+0x1bd/0x3a0 [ 75.308258] kthread+0xe4/0x120 [ 75.308259] ret_from_fork+0x44/0x70 [ 75.308261] ret_from_fork_asm+0x1a/0x30 [ 75.308263] other info that might help us debug this [ 75.308264] Possible unsafe locking scenario [ 75.308264] CPU0 CPU1 [ 75.308265] ---- ---- [ 75.308265] lock(&hdev->lock) [ 75.308267] lock(sk_lock- AF_BLUETOOTH-BTPROTO_ISO) [ 75.308268] lock(&hdev->lock) [ 75.308269] lock(sk_lock-AF_BLUETOOTH-BTPROTO_ISO) [ 75.308270] *** DEADLOCK *** [ 75.308271] 4 locks held by kworker/u812/2623 [ 75.308272] #0 ffff8fdd66e52148 ((wq_completion)hci0#2){+.+.}-{00}, at process_one_work+0x443/0x740 [ 75.308276] #1 ffffafb488b7fe48 ((work_completion)(&hdev->rx_work)), at process_one_work+0x1ce/0x740 [ 75.308280] #2 ffff8fdd61a10078 (&hdev->lock){+.+.}-{33} at hci_le_per_adv_report_evt+0x47/0x2f0 [bluetooth] [ 75.308304] #3 ffffffffb6ba4900 (rcu_read_lock){....}-{12}, at hci_connect_cfm+0x29/0x190 [bluetooth] Consider specifically these CWEs: CWE-359 CWE-75 CWE-76 CWE-667 CWE-833 CWE-401 CWE-413 CWE-362 CWE-74",
    "cwe_mentions": [
      "CWE-359",
      "CWE-75",
      "CWE-76",
      "CWE-667",
      "CWE-833",
      "CWE-401",
      "CWE-413",
      "CWE-362",
      "CWE-74"
    ],
    "search_time": 2.8404085636138916
  },
  "timestamp": "2025-07-13 22:50:08",
  "cve_id": "CVE-2024-54460",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "76",
      "name": "Improper Neutralization of Equivalent Special Elements",
      "type": "base",
      "score": 2.4699999999999998,
      "relationship_count": 0
    },
    {
      "cwe_id": "390",
      "name": "Detection of Error Condition Without Action",
      "type": "base",
      "score": 2.2100000000000004,
      "relationship_count": 0
    },
    {
      "cwe_id": "359",
      "name": "Exposure of Private Personal Information to an Unauthorized Actor",
      "type": "base",
      "score": 2.1189999999999998,
      "relationship_count": 0
    },
    {
      "cwe_id": "22",
      "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
      "type": "base",
      "score": 1.7680000000000005,
      "relationship_count": 0
    },
    {
      "cwe_id": "41",
      "name": "Improper Resolution of Path Equivalence",
      "type": "base",
      "score": 1.7680000000000005,
      "relationship_count": 0
    },
    {
      "cwe_id": "120",
      "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
      "type": "base",
      "score": 1.7680000000000005,
      "relationship_count": 0
    },
    {
      "cwe_id": "123",
      "name": "Write-what-where Condition",
      "type": "base",
      "score": 1.7680000000000005,
      "relationship_count": 0
    },
    {
      "cwe_id": "364",
      "name": "Signal Handler Race Condition",
      "type": "base",
      "score": 1.7550000000000001,
      "relationship_count": 0
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "type": "Base",
      "score": 1.7170081956295573,
      "relationship_count": 0
    },
    {
      "cwe_id": "413",
      "name": "Improper Resource Locking",
      "type": "Base",
      "score": 1.7080536432083033,
      "relationship_count": 0
    },
    {
      "cwe_id": "1265",
      "name": "Unintended Reentrant Invocation of Non-reentrant Code Via Nested Calls",
      "type": "base",
      "score": 1.6848000000000003,
      "relationship_count": 0
    },
    {
      "cwe_id": "1325",
      "name": "Improperly Controlled Sequential Memory Allocation",
      "type": "base",
      "score": 1.6848000000000003,
      "relationship_count": 0
    },
    {
      "cwe_id": "386",
      "name": "Symbolic Name not Mapping to Correct Object",
      "type": "base",
      "score": 1.6744000000000003,
      "relationship_count": 0
    },
    {
      "cwe_id": "662",
      "name": "Improper Synchronization",
      "type": "class",
      "score": 1.6736000000000002,
      "relationship_count": 0
    },
    {
      "cwe_id": "61",
      "name": "UNIX Symbolic Link (Symlink) Following",
      "type": "compound",
      "score": 1.61,
      "relationship_count": 0
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "type": "Base",
      "score": 1.5301705640578391,
      "relationship_count": 0
    },
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "type": "Variant",
      "score": 1.4309715593216765,
      "relationship_count": 0
    },
    {
      "cwe_id": "456",
      "name": "Missing Initialization of a Variable",
      "type": "variant",
      "score": 1.4169600000000002,
      "relationship_count": 0
    },
    {
      "cwe_id": "75",
      "name": "Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)",
      "type": "class",
      "score": 1.4080000000000001,
      "relationship_count": 0
    },
    {
      "cwe_id": "74",
      "name": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
      "type": "class",
      "score": 1.4080000000000001,
      "relationship_count": 0
    }
  ]
}