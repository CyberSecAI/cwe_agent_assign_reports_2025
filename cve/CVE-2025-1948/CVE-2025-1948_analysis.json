{
  "cve_id": "CVE-2025-1948",
  "description": "In Eclipse Jetty versions 12.0.0 to 12.0.16 included, an HTTP/2 client can specify a very large value for the HTTP/2 settings parameter SETTINGS_MAX_HEADER_LIST_SIZE. The Jetty HTTP/2 server **does not perform validation** on this setting, and tries to allocate a ByteBuffer of the specified capacity to encode HTTP responses, likely resulting in OutOfMemoryError being thrown, or even the JVM process exiting.",
  "key_phrases": {
    "component": "HTTP/2 server",
    "rootcause": "does not perform validation",
    "vector": "very large value for SETTINGS_MAX_HEADER_LIST_SIZE",
    "weakness": "",
    "product": "Eclipse Jetty",
    "impact": "allocate a ByteBuffer, JVM process exiting, OutOfMemoryError",
    "attacker": "HTTP/2 client",
    "version": "versions 12.0.0 to 12.0.16"
  },
  "reference_content": "## Analysis of CVE-2025-1948 based on provided content:\n\nBoth provided content sources relate to CVE-2025-1948. The GitHub advisory provides more detailed information than the GitLab entry.\n\n**Root cause of vulnerability:**\n\nThe Jetty HTTP/2 server does not validate the `SETTINGS_MAX_HEADER_LIST_SIZE` parameter sent by an HTTP/2 client. This allows a malicious client to specify a very large value. The server then attempts to allocate a ByteBuffer of this size, leading to an OutOfMemoryError (OOM) or JVM process exit.\n\n**Weaknesses/vulnerabilities present:**\n\n*   **CWE-400: Uncontrolled Resource Consumption:** Specifically, excessive memory allocation.\n\n**Impact of exploitation:**\n\n*   Remote peers can cause the JVM to crash.\n*   Continuous reporting of OutOfMemoryErrors (OOM).\n*   Denial of Service (DoS).\n\n**Attack vectors:**\n\n*   **Network:** An attacker can exploit this vulnerability remotely over the network.\n*   An HTTP/2 client sends a crafted `SETTINGS_MAX_HEADER_LIST_SIZE` value to the server.\n\n**Required attacker capabilities/position:**\n\n*   The attacker needs to be able to act as an HTTP/2 client and connect to the Jetty server. No privileges or user interaction are required.\n\n**Mitigation or fix:**\n\n*   Upgrade to Jetty version 12.0.17 or later, which includes a fix for this vulnerability.\n*   No workarounds are available.\n\n**CVSS Score:** 7.5 (High)\n\n*   **CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H**\n\n**Additional Details (from GitHub advisory - more detail than official CVE description):**\n\n*   The vulnerability was originally reported by Bj\u00f8rn Seime (bjorncs@vespa.ai).\n*   A proof of concept is available in a zip file attached to the original report.\n*   The issue is tracked as #12690 on the Jetty project's GitHub repository.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-789 | Memory Allocation with Excessive Size Value | 0.9 | Variant | Allowed | Primary CWE.  The server allocates memory based on an untrusted size value without proper validation. |\n| CWE-770 | Allocation of Resources Without Limits or Throttling | 0.7 | Base | Allowed | Secondary CWE. The server allocates resources without proper limits, leading to potential resource exhaustion. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-789 (Memory Allocation with Excessive Size Value), a variant of CWE-770 (Allocation of Resources Without Limits or Throttling). CWE-789 is a more specific case of uncontrolled resource allocation. The vulnerability involves the server's failure to validate the `SETTINGS_MAX_HEADER_LIST_SIZE` parameter, leading to excessive memory allocation and potential OOM errors.\n\n```mermaid\ngraph TD\n    cwe789[\"CWE-789: Memory Allocation with Excessive Size Value\"]\n    cwe770[\"CWE-770: Allocation of Resources Without Limits or Throttling\"]\n    cwe400[\"CWE-400: Uncontrolled Resource Consumption\"]\n    \n    cwe789 -->|CHILDOF| cwe770\n    cwe770 -->|CHILDOF| cwe400\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe789 primary\n    class cwe770 secondary\n    class cwe400 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **lack of validation** of the `SETTINGS_MAX_HEADER_LIST_SIZE` parameter, which leads to **excessive memory allocation** and can result in an **OutOfMemoryError** or JVM process exit, ultimately causing a Denial of Service.\n\n## Summary of Analysis\nThe analysis is based on the vulnerability description and the CVE reference content, which clearly state that the Jetty HTTP/2 server **does not perform validation** on the `SETTINGS_MAX_HEADER_LIST_SIZE` parameter, leading to excessive memory allocation.\n\nThe selection of CWE-789 is based on the fact that it is a specific variant of CWE-770, which accurately describes the vulnerability. The graph relationships confirm this, with CWE-789 being a child of CWE-770.\n\nThe evidence supporting this decision is:\n\n*   \"The Jetty HTTP/2 server **does not validate** the `SETTINGS_MAX_HEADER_LIST_SIZE` parameter sent by an HTTP/2 client.\"\n*   \"This allows a malicious client to specify a very large value. The server then attempts to allocate a ByteBuffer of this size, leading to an OutOfMemoryError (OOM) or JVM process exit.\"\n\nThe selected CWEs are at the optimal level of specificity because they accurately describe the **root cause** and the immediate consequence of the vulnerability.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-789: Memory Allocation with Excessive Size Value\n**Abstraction Level**: Variant\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product allocates memory based on an untrusted, large size value, but it **does not ensure that the size is within expected limits**, allowing arbitrary amounts of memory to be allocated.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-770: Allocation of Resources Without Limits or Throttling\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product allocates a reusable resource or group of resources on behalf of an actor **without imposing any restrictions** on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-1284: Improper Validation of Specified Quantity in Input\n**Abstraction Level**: Base\n**Similarity Score**: 938.68\n**Source**: sparse\n\n**Description**:\nThe product receives input that is expected to specify a quantity (such as size or length), but it **does not validate or incorrectly validates** that the quantity has the required properties.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n### Other CWEs Considered but Not Used:\n\n*   CWE-20 (Improper Input Validation): While the vulnerability does involve **improper input validation**, CWE-789 and CWE-770 are more specific and provide a better description of the vulnerability.\n*   CWE-400 (Uncontrolled Resource Consumption): This is a high-level class that describes the impact of the vulnerability, but not the **root cause**. The **root cause** is the **lack of validation** leading to excessive memory allocation.\n*   CWE-1284 (Improper Validation of Specified Quantity in Input): Although it involves improper validation, CWE-789 is more specific to memory allocation with excessive size, making it a better fit.",
  "analysis_with_relationships": "# Summary\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-789 | Memory Allocation with Excessive Size Value | 0.9 | Variant | Allowed | Primary CWE.  The server allocates memory based on an untrusted size value without proper validation. |\n| CWE-770 | Allocation of Resources Without Limits or Throttling | 0.7 | Base | Allowed | Secondary CWE. The server allocates resources without proper limits, leading to potential resource exhaustion. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-789 (Memory Allocation with Excessive Size Value), a variant of CWE-770 (Allocation of Resources Without Limits or Throttling). CWE-789 is a more specific case of uncontrolled resource allocation. The vulnerability involves the server's failure to validate the `SETTINGS_MAX_HEADER_LIST_SIZE` parameter, leading to excessive memory allocation and potential OOM errors.\n\n```mermaid\ngraph TD\n    cwe789[\"CWE-789: Memory Allocation with Excessive Size Value\"]\n    cwe770[\"CWE-770: Allocation of Resources Without Limits or Throttling\"]\n    cwe400[\"CWE-400: Uncontrolled Resource Consumption\"]\n    \n    cwe789 -->|CHILDOF| cwe770\n    cwe770 -->|CHILDOF| cwe400\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe789 primary\n    class cwe770 secondary\n    class cwe400 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **lack of validation** of the `SETTINGS_MAX_HEADER_LIST_SIZE` parameter, which leads to **excessive memory allocation** and can result in an **OutOfMemoryError** or JVM process exit, ultimately causing a Denial of Service.\n\n## Summary of Analysis\nThe analysis is based on the vulnerability description and the CVE reference content, which clearly state that the Jetty HTTP/2 server **does not perform validation** on the `SETTINGS_MAX_HEADER_LIST_SIZE` parameter, leading to excessive memory allocation.\n\nThe selection of CWE-789 is based on the fact that it is a specific variant of CWE-770, which accurately describes the vulnerability. The graph relationships confirm this, with CWE-789 being a child of CWE-770.\n\nThe evidence supporting this decision is:\n\n*   \"The Jetty HTTP/2 server **does not validate** the `SETTINGS_MAX_HEADER_LIST_SIZE` parameter sent by an HTTP/2 client.\"\n*   \"This allows a malicious client to specify a very large value. The server then attempts to allocate a ByteBuffer of this size, leading to an OutOfMemoryError (OOM) or JVM process exit.\"\n\nThe selected CWEs are at the optimal level of specificity because they accurately describe the **root cause** and the immediate consequence of the vulnerability.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-789: Memory Allocation with Excessive Size Value\n**Abstraction Level**: Variant\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product allocates memory based on an untrusted, large size value, but it **does not ensure that the size is within expected limits**, allowing arbitrary amounts of memory to be allocated.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-770: Allocation of Resources Without Limits or Throttling\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product allocates a reusable resource or group of resources on behalf of an actor **without imposing any restrictions** on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-1284: Improper Validation of Specified Quantity in Input\n**Abstraction Level**: Base\n**Similarity Score**: 938.68\n**Source**: sparse\n\n**Description**:\nThe product receives input that is expected to specify a quantity (such as size or length), but it **does not validate or incorrectly validates** that the quantity has the required properties.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n### Other CWEs Considered but Not Used:\n\n*   CWE-20 (Improper Input Validation): While the vulnerability does involve **improper input validation**, CWE-789 and CWE-770 are more specific and provide a better description of the vulnerability.\n*   CWE-400 (Uncontrolled Resource Consumption): This is a high-level class that describes the impact of the vulnerability, but not the **root cause**. The **root cause** is the **lack of validation** leading to excessive memory allocation.\n*   CWE-1284 (Improper Validation of Specified Quantity in Input): Although it involves improper validation, CWE-789 is more specific to memory allocation with excessive size, making it a better fit.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-1284:**\n- 1284 (Improper Validation of Specified Quantity in Input) - ROOT\n\n\n**Chain starting from CWE-400:**\n- 400 (Uncontrolled Resource Consumption) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "789",
        "name": "Memory Allocation with Excessive Size Value",
        "source": "sparse"
      },
      "similarity": 388.5476842170872
    },
    {
      "metadata": {
        "doc_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "source": "sparse"
      },
      "similarity": 388.4236360549768
    },
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "sparse"
      },
      "similarity": 368.76183634997005
    },
    {
      "metadata": {
        "doc_id": "770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "source": "sparse"
      },
      "similarity": 367.9720339154177
    },
    {
      "metadata": {
        "doc_id": "113",
        "name": "Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')",
        "source": "sparse"
      },
      "similarity": 356.8624137901711
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 355.5765563427401
    },
    {
      "metadata": {
        "doc_id": "755",
        "name": "Improper Handling of Exceptional Conditions",
        "source": "sparse"
      },
      "similarity": 354.7933160592621
    },
    {
      "metadata": {
        "doc_id": "20",
        "name": "Improper Input Validation",
        "source": "sparse"
      },
      "similarity": 354.0828216215406
    },
    {
      "metadata": {
        "doc_id": "6",
        "name": "J2EE Misconfiguration: Insufficient Session-ID Length",
        "type": "Variant",
        "original_content": "The J2EE application is configured to use an insufficient session ID length.",
        "keyphrase_source": "rootcause:does not perform validation",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.4453496000077224
          }
        }
      },
      "similarity": 0.4453496000077224
    },
    {
      "doc_id": "1325",
      "text": "The product manages a group of objects or resources and performs a separate memory allocation for each object, but it does not properly limit the total amount of memory that is consumed by all of the combined objects.",
      "score": 0.4673929393599584,
      "metadata": {
        "doc_id": "1325",
        "name": "Improperly Controlled Sequential Memory Allocation",
        "type": "Base",
        "extended_description": "\n\nWhile the product might limit the amount of memory that is allocated in a single operation for a single object (such as a malloc of an array), if an attacker can cause multiple objects to be allocated in separate operations, then this might cause higher total memory consumption than the developer intended, leading to a denial of service.\n",
        "alternate_terms": [
          "Stack Exhaustion"
        ],
        "original_content": "The product manages a group of objects or resources and performs a separate memory allocation for each object, but it does not properly limit the total amount of memory that is consumed by all of the combined objects.",
        "relationships": [
          {
            "source_id": "1325",
            "target_id": "476",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1325",
            "target_id": "789",
            "label": "PEEROF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1325",
            "target_id": "770",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "770",
            "target_id": "1325",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "476",
            "target_id": "1325",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "source": "graph",
        "sources": [
          "vector",
          "graph"
        ],
        "vector_score": 0.4673929393599584,
        "graph_score": 4.3888,
        "score_components": {
          "relationship_chain": 0.7,
          "explicit_mention": 1.0,
          "abstraction_path": 0.9,
          "sequence_path": 0.7200000000000001,
          "peer_group": 0.9
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down",
            "vulnerability_sequence_forward",
            "peer_relationship"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "1325",
                  "789",
                  "PEEROF"
                ]
              ],
              "score": 0.7,
              "type": "relationship_chain",
              "source": "789"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "770",
                  "1325",
                  "PARENTOF"
                ]
              ],
              "score": 0.7200000000000001,
              "type": "abstraction_path_down",
              "source": "770"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "789",
                  "476",
                  "CANPRECEDE"
                ],
                [
                  "476",
                  "1325",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.7200000000000001,
              "type": "vulnerability_sequence_forward",
              "source": "789"
            },
            "peer_relationship": {
              "path": [
                [
                  "1325",
                  "789",
                  "PEEROF"
                ]
              ],
              "score": 0.9,
              "type": "peer_relationship",
              "source": "789"
            }
          }
        },
        "is_explicit": true,
        "abstraction_level": "base",
        "position": "after",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.3865855751333323,
            "graph": 2.820237175743983
          }
        }
      },
      "similarity": 2.820237175743983
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-1284",
      "CWE-400",
      "CWE-770",
      "CWE-20",
      "CWE-789"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}