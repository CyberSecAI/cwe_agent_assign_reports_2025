{
  "method": "sparse_base",
  "query": "In the Linux kernel, the following vulnerability has been resolved scsi ufs mcq Add NULL check in ufshcd_mcq_abort() A race can occur between the MCQ completion path and the abort handler once a request completes, __blk_mq_free_request() sets rq->mq_hctx to NULL, meaning the subsequent ufshcd_mcq_req_to_hwq() call in ufshcd_mcq_abort() can return a NULL pointer. If this NULL pointer is dereferenced, the kernel will crash. Add a NULL check for the returned hwq pointer. If hwq is NULL, log an error and return FAILED, preventing a potential NULL-pointer dereference. As suggested by Bart, the ufshcd_cmd_inflight() check is removed. This is similar to the fix in commit 74736103fb41 (scsi ufs core Fix ufshcd_abort_one racing issue). This is found by our static analysis tool KNighter.",
  "keyphrases": {
    "base_query": "In the Linux kernel, the following vulnerability has been resolved scsi ufs mcq Add NULL check in ufshcd_mcq_abort() A race can occur between the MCQ completion path and the abort handler once a request completes, __blk_mq_free_request() sets rq->mq_hctx to NULL, meaning the subsequent ufshcd_mcq_req_to_hwq() call in ufshcd_mcq_abort() can return a NULL pointer. If this NULL pointer is dereferenced, the kernel will crash. Add a NULL check for the returned hwq pointer. If hwq is NULL, log an error and return FAILED, preventing a potential NULL-pointer dereference. As suggested by Bart, the ufshcd_cmd_inflight() check is removed. This is similar to the fix in commit 74736103fb41 (scsi ufs core Fix ufshcd_abort_one racing issue). This is found by our static analysis tool KNighter."
  },
  "timestamp": "2025-07-14T21:31:47.441718",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "476",
      "name": "NULL Pointer Dereference",
      "score": 255.54775718311748
    },
    {
      "doc_id": "252",
      "name": "Unchecked Return Value",
      "score": 238.35823274004557
    },
    {
      "doc_id": "824",
      "name": "Access of Uninitialized Pointer",
      "score": 234.68080401678543
    },
    {
      "doc_id": "617",
      "name": "Reachable Assertion",
      "score": 216.21733207032858
    },
    {
      "doc_id": "908",
      "name": "Use of Uninitialized Resource",
      "score": 215.308513186319
    }
  ]
}