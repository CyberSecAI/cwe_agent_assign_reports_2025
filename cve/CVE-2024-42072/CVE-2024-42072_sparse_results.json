{
  "query": "In the Linux kernel, the following vulnerability has been resolved bpf Fix may_goto with negative offset. Zacs syzbot crafted a bpf prog that exposed two bugs in may_goto. The 1st bug is the way may_goto is patched. When offset is negative it should be patched differently. The 2nd bug is in the verifier when current state may_goto_depth is equal to visited state may_goto_depth it means there is an actual infinite loop. Its not correct to prune exploration of the program at this point. Note, that this check doesnt limit the program to only one may_goto insn, since 2nd and any further may_goto will increment may_goto_depth only in the queued state pushed for future exploration. The current state will have may_goto_depth == 0 regardless of number of may_goto insns and the verifier has to explore the program until bpf_exit.",
  "count": 12,
  "results": [
    {
      "cwe_id": "197",
      "name": "Numeric Truncation Error",
      "abstraction": "Base",
      "score": 710.8986067981127,
      "original_score": 710.8986067981127,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "823",
      "name": "Use of Out-of-range Pointer Offset",
      "abstraction": "Base",
      "score": 700.1696975830017,
      "original_score": 700.1696975830017,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "abstraction": "Base",
      "score": 666.8209968102722,
      "original_score": 666.8209968102722,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "abstraction": "Base",
      "score": 666.8091764537052,
      "original_score": 666.8091764537052,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1390",
      "name": "Weak Authentication",
      "abstraction": "Class",
      "score": 660.8806228025901,
      "original_score": 660.8806228025901,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "abstraction": "Base",
      "score": 656.4206125279478,
      "original_score": 656.4206125279478,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "abstraction": "Base",
      "score": 649.3176411623963,
      "original_score": 649.3176411623963,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "abstraction": "Class",
      "score": 648.9257897436519,
      "original_score": 648.9257897436519,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "787",
      "name": "Out-of-bounds Write",
      "abstraction": "Base",
      "score": 641.7447744771866,
      "original_score": 641.7447744771866,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "843",
      "name": "Access of Resource Using Incompatible Type ('Type Confusion')",
      "abstraction": "Base",
      "score": 639.4742635901977,
      "original_score": 639.4742635901977,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "abstraction": "Variant",
      "score": 205.0337337467505,
      "original_score": 205.0337337467505,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "674",
      "name": "Uncontrolled Recursion",
      "abstraction": "Class",
      "score": 204.7066063598215,
      "original_score": 204.7066063598215,
      "mapping_usage": "Allowed-with-Review"
    }
  ],
  "statistics": {
    "min": 204.7066063598215,
    "max": 710.8986067981127,
    "mean": 587.6002101713029,
    "median": 652.8691268451721,
    "count": 12
  }
}