{
  "cve_id": "CVE-2025-0714",
  "description": "The vulnerability exists in the password storage of Mobateks MobaXterm in versions below 25.0. MobaXTerm uses an initialisation vector (IV) consisting only of zero bytes and a master key to encrypt each password individually. In the default configuration, on opening MobaXTerm, the user is prompted for their password. A derivative of the password is used as the master key. As both the master key and the IV are the same for each stored password, the AES CFB ciphertext depends only on the plaintext (the password). The **static IV and master key** make it easier to obtain sensitive information and to decrypt data when it is stored at rest.",
  "key_phrases": {
    "component": "password storage",
    "rootcause": "static IV and master key",
    "vector": "",
    "weakness": "uses IV consisting of only zero bytes and master key",
    "product": "Mobateks MobaXterm",
    "impact": "obtain sensitive information, decrypt data when at rest",
    "attacker": "",
    "version": "below 25.0"
  },
  "reference_content": "```text\nRoot cause of vulnerability:\nMobaXTerm uses an initialisation vector (IV) consisting only of zero bytes and a master key to encrypt each password individually.\n\nWeaknesses/vulnerabilities present:\n- The static IV and master key make it easier to obtain sensitive information and to decrypt data when it is stored at rest.\n- Password reuse can be recognized, as the same password is always encrypted to the same ciphertext.\n- Chosen plaintext attacks can be performed, if one or multiple passwords can be recovered.\n- The prefix of similar passwords can be recognized if one password is known.\n\nImpact of exploitation:\nAn attacker that has access to the encrypted passwords can obtain sensitive information and decrypt data.\n\nAttack vectors:\nAn attacker that has access to the encrypted passwords.\n\nRequired attacker capabilities/position:\nAn attacker with access to the encrypted passwords.\n\nMitigation or fix:\nManually reencrypt all passwords that were encrypted with a vulnerable version of MobaXterm. The vulnerability was fixed in version 25.0.\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-1204 | Generation of Weak Initialization Vector (IV) | 1.0 | Base | Allowed | Primary CWE. The IV consists of only zero bytes. |\n| CWE-321 | Use of Hard-coded Cryptographic Key | 0.8 | Variant | Allowed | Secondary CWE. The master key used for encryption is derived from the user's password, making it predictable and essentially hard-coded for a given user. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is the **generation of a weak Initialization Vector (IV)**, which is directly related to the cryptographic implementation. A secondary contributing factor is the **use of a key derived from the password**, effectively making it a hard-coded key for each user's stored passwords.\n\n```mermaid\ngraph TD\n    cwe1204[\"CWE-1204: Generation of Weak Initialization Vector (IV)\"]\n    cwe321[\"CWE-321: Use of Hard-coded Cryptographic Key\"]\n    \n    cwe321 -->|CHILDOF| cwe798[\"CWE-798: Use of Hard-coded Credentials\"]\n    cwe1204 -->|CANPRECEDE| cwe312[\"CWE-312: Cleartext Storage of Sensitive Information\"]\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe1204 primary\n    class cwe321 secondary\n    class cwe798,cwe312 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **use of a weak Initialization Vector (IV)** and a **predictable master key**. This leads to the possibility of decrypting stored passwords, effectively resulting in sensitive information disclosure.\n\nCWE-1204 (Generation of Weak Initialization Vector) -> CWE-321 (Use of Hard-coded Cryptographic Key) -> CWE-312 (Cleartext Storage of Sensitive Information)\n\n## Summary of Analysis\nThe vulnerability in MobaXterm's password storage stems from using a weak Initialization Vector (IV) and a predictable key derived from the password. The **static IV and master key** is the root cause that leads to the weakness. This combination allows attackers with access to the encrypted passwords to decrypt the data.\n\nCWE-1204 (Generation of Weak Initialization Vector) is chosen as the primary CWE because the use of an all-zero IV is a critical flaw in the cryptographic implementation. The retriever results also list this as the top candidate.\n\nCWE-321 (Use of Hard-coded Cryptographic Key) is selected as a secondary CWE because the key is derived from the user's password, making it predictable and effectively hard-coded for a given user. Although it is derived from a password, if an attacker has access to the user's password, they will have the master key.\n\nThe evidence strongly supports these mappings, and the CWEs are at the appropriate level of specificity (Base and Variant).\n\n**CWEs Considered But Not Used:**\n\n*   CWE-329 (Generation of Predictable IV with CBC Mode): While the IV is predictable, the vulnerability description doesn't specifically mention CBC mode. Therefore, CWE-1204 is a more general and accurate fit.\n*   CWE-798 (Use of Hard-coded Credentials): The key is derived from the password, it is not technically hardcoded into the software.\n*   CWE-312 (Cleartext Storage of Sensitive Information): This is the impact of the vulnerability, not the root cause.\n*   CWE-257 (Storing Passwords in a Recoverable Format): This is a more general description of the impact, and less precise than the selected CWEs.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-1204 | Generation of Weak Initialization Vector (IV) | 1.0 | Base | Allowed | Primary CWE. The IV consists of only zero bytes. |\n| CWE-321 | Use of Hard-coded Cryptographic Key | 0.8 | Variant | Allowed | Secondary CWE. The master key used for encryption is derived from the user's password, making it predictable and essentially hard-coded for a given user. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is the **generation of a weak Initialization Vector (IV)**, which is directly related to the cryptographic implementation. A secondary contributing factor is the **use of a key derived from the password**, effectively making it a hard-coded key for each user's stored passwords.\n\n```mermaid\ngraph TD\n    cwe1204[\"CWE-1204: Generation of Weak Initialization Vector (IV)\"]\n    cwe321[\"CWE-321: Use of Hard-coded Cryptographic Key\"]\n    \n    cwe321 -->|CHILDOF| cwe798[\"CWE-798: Use of Hard-coded Credentials\"]\n    cwe1204 -->|CANPRECEDE| cwe312[\"CWE-312: Cleartext Storage of Sensitive Information\"]\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe1204 primary\n    class cwe321 secondary\n    class cwe798,cwe312 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **use of a weak Initialization Vector (IV)** and a **predictable master key**. This leads to the possibility of decrypting stored passwords, effectively resulting in sensitive information disclosure.\n\nCWE-1204 (Generation of Weak Initialization Vector) -> CWE-321 (Use of Hard-coded Cryptographic Key) -> CWE-312 (Cleartext Storage of Sensitive Information)\n\n## Summary of Analysis\nThe vulnerability in MobaXterm's password storage stems from using a weak Initialization Vector (IV) and a predictable key derived from the password. The **static IV and master key** is the root cause that leads to the weakness. This combination allows attackers with access to the encrypted passwords to decrypt the data.\n\nCWE-1204 (Generation of Weak Initialization Vector) is chosen as the primary CWE because the use of an all-zero IV is a critical flaw in the cryptographic implementation. The retriever results also list this as the top candidate.\n\nCWE-321 (Use of Hard-coded Cryptographic Key) is selected as a secondary CWE because the key is derived from the user's password, making it predictable and effectively hard-coded for a given user. Although it is derived from a password, if an attacker has access to the user's password, they will have the master key.\n\nThe evidence strongly supports these mappings, and the CWEs are at the appropriate level of specificity (Base and Variant).\n\n**CWEs Considered But Not Used:**\n\n*   CWE-329 (Generation of Predictable IV with CBC Mode): While the IV is predictable, the vulnerability description doesn't specifically mention CBC mode. Therefore, CWE-1204 is a more general and accurate fit.\n*   CWE-798 (Use of Hard-coded Credentials): The key is derived from the password, it is not technically hardcoded into the software.\n*   CWE-312 (Cleartext Storage of Sensitive Information): This is the impact of the vulnerability, not the root cause.\n*   CWE-257 (Storing Passwords in a Recoverable Format): This is a more general description of the impact, and less precise than the selected CWEs.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-321:**\n- 321 (Use of Hard-coded Cryptographic Key) - ROOT\n\n\n**Chain starting from CWE-1204:**\n- 1204 (Generation of Weak Initialization Vector (IV)) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "1204",
        "name": "Generation of Weak Initialization Vector (IV)",
        "source": "sparse"
      },
      "similarity": 834.6118804236577
    },
    {
      "metadata": {
        "doc_id": "329",
        "name": "Generation of Predictable IV with CBC Mode",
        "source": "sparse"
      },
      "similarity": 734.5685314555701
    },
    {
      "metadata": {
        "doc_id": "321",
        "name": "Use of Hard-coded Cryptographic Key",
        "source": "sparse"
      },
      "similarity": 724.388431319909
    },
    {
      "metadata": {
        "doc_id": "1391",
        "name": "Use of Weak Credentials",
        "source": "sparse"
      },
      "similarity": 685.7954820209383
    },
    {
      "metadata": {
        "doc_id": "331",
        "name": "Insufficient Entropy",
        "source": "sparse"
      },
      "similarity": 676.761258392376
    },
    {
      "metadata": {
        "doc_id": "327",
        "name": "Use of a Broken or Risky Cryptographic Algorithm",
        "source": "sparse"
      },
      "similarity": 676.6805191330673
    },
    {
      "metadata": {
        "doc_id": "798",
        "name": "Use of Hard-coded Credentials",
        "source": "sparse"
      },
      "similarity": 673.7329371115086
    },
    {
      "metadata": {
        "doc_id": "312",
        "name": "Cleartext Storage of Sensitive Information",
        "source": "sparse"
      },
      "similarity": 662.355767956914
    },
    {
      "metadata": {
        "doc_id": "261",
        "name": "Weak Encoding for Password",
        "type": "Base",
        "original_content": "Obscuring a password with a trivial encoding does not protect the password.",
        "keyphrase_source": "weakness:uses IV consisting of only zero bytes",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5016894442547054,
            "graph": 1.6048407279893528
          }
        }
      },
      "similarity": 0.5016894442547054
    },
    {
      "doc_id": "257",
      "text": "The storage of passwords in a recoverable format makes them subject to password reuse attacks by malicious users. In fact, it should be noted that recoverable encrypted passwords provide no significant benefit over plaintext passwords since they are subject not only to reuse by malicious attackers but also by malicious insiders. If a system administrator can recover a password directly, or use a brute force search on the available information, the administrator can use the password on other accounts.",
      "score": 0.5264964688608893,
      "metadata": {
        "doc_id": "257",
        "name": "Storing Passwords in a Recoverable Format",
        "type": "Base",
        "extended_description": null,
        "alternate_terms": [],
        "original_content": "The storage of passwords in a recoverable format makes them subject to password reuse attacks by malicious users. In fact, it should be noted that recoverable encrypted passwords provide no significant benefit over plaintext passwords since they are subject not only to reuse by malicious attackers but also by malicious insiders. If a system administrator can recover a password directly, or use a brute force search on the available information, the administrator can use the password on other accounts.",
        "relationships": [
          {
            "source_id": "257",
            "target_id": "259",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "257",
            "target_id": "522",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "798",
            "target_id": "257",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "522",
            "target_id": "257",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "259",
            "target_id": "257",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "source": "graph",
        "sources": [
          "vector",
          "graph"
        ],
        "vector_score": 0.5264964688608893,
        "graph_score": 3.2656,
        "score_components": {
          "relationship_chain": 0.5599999999999999,
          "explicit_mention": 1.0,
          "abstraction_path": 0.9,
          "peer_group": 0.63
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "peer_relationship"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "321",
                  "798",
                  "CHILDOF"
                ],
                [
                  "798",
                  "257",
                  "PEEROF"
                ]
              ],
              "score": 0.5599999999999999,
              "type": "relationship_chain",
              "source": "321"
            },
            "peer_relationship": {
              "path": [
                [
                  "259",
                  "321",
                  "PEEROF"
                ],
                [
                  "259",
                  "257",
                  "PEEROF"
                ]
              ],
              "score": 0.63,
              "type": "peer_relationship",
              "source": "321"
            }
          }
        },
        "is_explicit": true,
        "abstraction_level": "base",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.49229509884877987,
            "graph": 2.1699585875443557
          }
        }
      },
      "similarity": 2.1699585875443557
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-321",
      "CWE-1204",
      "CWE-329",
      "CWE-257",
      "CWE-312",
      "CWE-798"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}