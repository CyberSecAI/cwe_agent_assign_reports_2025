{
  "cve_id": "CVE-2025-32796",
  "description": "Dify is an open-source LLM app development platform. Prior to version 0.6.12, a vulnerability was identified in the DIFY where normal users can enable or disable apps through the API, even though the web UI button for this action is disabled and normal users are not permitted to make such changes. This **access control flaw** allows non-admin users to make unauthorized changes, which can disrupt the functionality and availability of the APPS. This issue has been patched in version 0.6.12. A workaround for this vulnerability involves updating the API access control mechanisms to enforce stricter user role permissions and implementing role-based access controls (RBAC) to ensure that only users with admin privileges can send enable or disable requests for apps.",
  "key_phrases": {
    "rootcause": "access control flaw",
    "weakness": "",
    "impact": [
      "enable or disable apps through the API",
      "availability"
    ],
    "vector": "",
    "attacker": "normal users",
    "product": "Dify",
    "version": "prior to version 0.6.12",
    "component": ""
  },
  "reference_content": "CVE-2025-32796 relates to the content.\n\n**Root cause of vulnerability:**\nNormal users can enable or disable apps through the API, even though the web UI button for this action is disabled for normal users and they are not permitted to make such changes.\n\n**Weaknesses/vulnerabilities present:**\nAccess control flaw.\n\n**Impact of exploitation:**\nUnauthorized changes to APPs, potentially causing disruption and instability, service downtime, and data loss.\n\n**Attack vectors:**\nAPI calls to `/console/api/apps/{app.id}/site-enable` and `/console/api/apps/{app.id}/api-enable` by a normal user.\n\n**Required attacker capabilities/position:**\nNormal user account.\n\n**Mitigation or fix:**\nUpdate the API access control mechanisms to ensure that only users with admin privileges can send requests to enable or disable apps. Implement and review role-based access controls (RBAC) for API endpoints.\n\nThe content provides more detail than the official CVE description, detailing the affected endpoints and providing a step-by-step PoC.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID  | CWE Name                        | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :------------------------------ | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-862   | Missing Authorization         | 0.9        | Class                 | Allowed-with-Review           | Primary CWE                   |\n| CWE-863   | Incorrect Authorization         | 0.7        | Class                 | Allowed-with-Review           | Secondary Candidate             |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary CWE is CWE-862, which represents the **missing authorization** check. However, CWE-863 (Incorrect Authorization) is considered because there might be a flawed authorization check instead of a completely missing one. Both CWE-862 and CWE-863 are children of CWE-285 (Improper Authorization) and represent different ways in which authorization can fail. Selecting CWE-862 provides a more specific classification, assuming no authorization check exists.\n\n```mermaid\ngraph TD\n    cwe862[\"CWE-862: Missing Authorization\"]\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe285[\"CWE-285: Improper Authorization\"]\n    cwe284[\"CWE-284: Improper Access Control\"]\n    \n    cwe862 -->|CHILDOF| cwe285\n    cwe863 -->|CHILDOF| cwe285\n    cwe285 -->|CHILDOF| cwe284\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe862 primary\n    class cwe863 secondary\n    class cwe285,cwe284 tertiary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with the **missing authorization** check (CWE-862), which allows normal users to enable or disable apps through the API. This leads to unauthorized changes and potential disruption of the app's functionality and availability.\n\n## Summary of Analysis\n\nThe initial assessment identified the **access control flaw** as the root cause, allowing normal users to perform actions that should be restricted to administrators. The analysis leans towards CWE-862 because the description states that normal users can enable or disable apps through the API even though the UI button for this action is disabled, implying that no authorization check exists for the API endpoint. The provided evidence is strong, especially the \"CVE Reference Links Content Summary\" section, which details the affected API endpoints and the required attacker capabilities.\n\nThe selection of CWE-862 is made because the core issue is that the application **does not perform an authorization check** when an actor attempts to access a resource or perform an action. This aligns with the definition of CWE-862.\n\nOther CWEs considered but not used:\n\n*   CWE-863 (**Incorrect Authorization**) was considered, but the description leans more towards a **missing authorization** check rather than an incorrect one.\n*   CWE-285 (**Improper Authorization**) is a more general category and less specific than CWE-862.\n*   CWE-306 (**Missing Authentication for Critical Function**) is not applicable because the vulnerability occurs after authentication, focusing on authorization.\n*   CWE-284 (**Improper Access Control**) is too broad and less descriptive than CWE-862.\n\nThe final decision is based on the evidence provided, which points to a **missing authorization** check, making CWE-862 the most appropriate and specific classification.",
  "analysis_with_relationships": "# Summary\n| CWE ID  | CWE Name                        | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :------------------------------ | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-862   | Missing Authorization         | 0.9        | Class                 | Allowed-with-Review           | Primary CWE                   |\n| CWE-863   | Incorrect Authorization         | 0.7        | Class                 | Allowed-with-Review           | Secondary Candidate             |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary CWE is CWE-862, which represents the **missing authorization** check. However, CWE-863 (Incorrect Authorization) is considered because there might be a flawed authorization check instead of a completely missing one. Both CWE-862 and CWE-863 are children of CWE-285 (Improper Authorization) and represent different ways in which authorization can fail. Selecting CWE-862 provides a more specific classification, assuming no authorization check exists.\n\n```mermaid\ngraph TD\n    cwe862[\"CWE-862: Missing Authorization\"]\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe285[\"CWE-285: Improper Authorization\"]\n    cwe284[\"CWE-284: Improper Access Control\"]\n    \n    cwe862 -->|CHILDOF| cwe285\n    cwe863 -->|CHILDOF| cwe285\n    cwe285 -->|CHILDOF| cwe284\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe862 primary\n    class cwe863 secondary\n    class cwe285,cwe284 tertiary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with the **missing authorization** check (CWE-862), which allows normal users to enable or disable apps through the API. This leads to unauthorized changes and potential disruption of the app's functionality and availability.\n\n## Summary of Analysis\n\nThe initial assessment identified the **access control flaw** as the root cause, allowing normal users to perform actions that should be restricted to administrators. The analysis leans towards CWE-862 because the description states that normal users can enable or disable apps through the API even though the UI button for this action is disabled, implying that no authorization check exists for the API endpoint. The provided evidence is strong, especially the \"CVE Reference Links Content Summary\" section, which details the affected API endpoints and the required attacker capabilities.\n\nThe selection of CWE-862 is made because the core issue is that the application **does not perform an authorization check** when an actor attempts to access a resource or perform an action. This aligns with the definition of CWE-862.\n\nOther CWEs considered but not used:\n\n*   CWE-863 (**Incorrect Authorization**) was considered, but the description leans more towards a **missing authorization** check rather than an incorrect one.\n*   CWE-285 (**Improper Authorization**) is a more general category and less specific than CWE-862.\n*   CWE-306 (**Missing Authentication for Critical Function**) is not applicable because the vulnerability occurs after authentication, focusing on authorization.\n*   CWE-284 (**Improper Access Control**) is too broad and less descriptive than CWE-862.\n\nThe final decision is based on the evidence provided, which points to a **missing authorization** check, making CWE-862 the most appropriate and specific classification.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-862:**\n- 862 (Missing Authorization) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 758.1065358223636
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 720.5703654641438
    },
    {
      "metadata": {
        "doc_id": "287",
        "name": "Improper Authentication",
        "source": "sparse"
      },
      "similarity": 716.872070627709
    },
    {
      "metadata": {
        "doc_id": "284",
        "name": "Improper Access Control",
        "source": "sparse"
      },
      "similarity": 704.494247488266
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 702.7889271473005
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 701.1109967050156
    },
    {
      "metadata": {
        "doc_id": "1390",
        "name": "Weak Authentication",
        "source": "sparse"
      },
      "similarity": 685.3885449991303
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 684.2696232628068
    },
    {
      "metadata": {
        "doc_id": "939",
        "name": "Improper Authorization in Handler for Custom URL Scheme",
        "type": "Base",
        "original_content": "The product uses a handler for a custom URL scheme, but it does not properly restrict which actors can invoke the handler using the scheme.",
        "keyphrase_source": "rootcause:access control flaw",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5023769601656596,
            "graph": 1.6068215162692883
          }
        }
      },
      "similarity": 0.5023769601656596
    },
    {
      "doc_id": "613",
      "text": "CWE-613: Insufficient Session Expiration",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "613",
        "name": "Insufficient Session Expiration",
        "type": "base",
        "original_content": "CWE-613: Insufficient Session Expiration",
        "relationships": [
          {
            "source_id": "613",
            "target_id": "352",
            "label": "REQUIREDBY",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "613",
            "target_id": "287",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "613",
            "target_id": "672",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "613",
            "target_id": "672",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "672",
            "target_id": "613",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "352",
            "target_id": "613",
            "label": "REQUIRES",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "287",
            "target_id": "613",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "287",
                  "613",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "287"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "287",
                  "613",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "287"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "613",
                  "287",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "287"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-862",
      "CWE-306",
      "CWE-285",
      "CWE-284"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}