{
  "cve_id": "CVE-2025-32044",
  "description": "A flaw has been identified in Moodle where, on certain sites, unauthenticated users could retrieve sensitive user dataincluding names, contact information, and hashed passwordsvia stack traces returned by specific API calls. Sites with PHP configured with zend.exception_ignore_args = 1 in the php.ini file are not affected by this vulnerability.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "",
    "impact": "retrieve sensitive user data",
    "vector": "",
    "attacker": "unauthenticated users",
    "product": "Moodle",
    "version": "",
    "component": ""
  },
  "reference_content": "```json\n{\n  \"cve_id\": \"CVE-2025-32044\",\n  \"related_content\": [\n    {\n      \"file\": \"bugzilla.redhat.com_2abadf7e_20250624_200139.html\",\n      \"details\": {\n        \"vulnerability\": \"Unauthenticated REST API User Data Exposure\",\n        \"product\": \"Moodle\",\n        \"root_cause\": \"Retrieval of user data via a stack trace returned by an API call.\",\n        \"weaknesses_vulnerabilities\": [\n          \"Unauthenticated REST API User Data Exposure\"\n        ],\n        \"impact\": \"Retrieval of user data, including names, contact information, and hashed passwords.\",\n        \"attack_vectors\": \"API call\",\n        \"affected_versions\": \"4.5 to 4.5.2\",\n        \"fixed_versions\": \"4.5.3\",\n        \"mitigation_fix\": \"Upgrade to version 4.5.3 or later.\",\n        \"additional_details\": \"Sites with PHP configured with zend.exception_ignore_args = 1 in the php.ini file are not affected by this vulnerability.\"\n      }\n    }\n  ]\n}\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-209 | Generation of Error Message Containing Sensitive Information | 0.9 | Base | Allowed | Primary CWE |\n| CWE-359 | Exposure of Private Personal Information to an Unauthorized Actor | 0.7 | Base | Allowed | Secondary Candidate |\n| CWE-497 | Exposure of Sensitive System Information to an Unauthorized Control Sphere | 0.6 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE identified is CWE-209 [CWE-209: Generation of Error Message Containing Sensitive Information], which is a base-level CWE. It has child CWEs like CWE-210 [CWE-210: Generation of Error Message Containing Full Path Disclosure] and CWE-211 [CWE-211: Exposure of Sensitive Information Through 'Man-in-the-Middle' Attack], which are more specific cases of sensitive information exposure. However, the provided description doesn't specify the exact type of sensitive information or the attack vector beyond the API call revealing a stack trace; thus, the base CWE is appropriate.\n\nCWE-359 [CWE-359: Exposure of Private Personal Information to an Unauthorized Actor] and CWE-497 [CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere] are also at the base level and represent different facets of the information exposure.\n\n```mermaid\ngraph TD\n    cwe209[\"CWE-209: Generation of Error Message Containing Sensitive Information\"]\n    cwe359[\"CWE-359: Exposure of Private Personal Information to an Unauthorized Actor\"]\n    cwe497[\"CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\"]\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe209 primary\n    class cwe359,cwe497 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with a misconfiguration or default setting in the Moodle application and PHP, leading to the generation of stack traces that include sensitive information. This information is then exposed to unauthenticated users via API calls.\n\n1.  **Root Cause:** Generation of stack traces containing sensitive information due to misconfiguration (zend.exception_ignore_args = 0).\n2.  **Weakness:** CWE-209 [CWE-209: Generation of Error Message Containing Sensitive Information]\n3.  **Impact:** Exposure of user data (names, contact information, hashed passwords) to unauthorized users.\n\n## Summary of Analysis\nThe primary classification is CWE-209 [CWE-209: Generation of Error Message Containing Sensitive Information] because the root cause is the generation of error messages (stack traces) containing sensitive information. The vulnerability description and CVE details explicitly mention the retrieval of user data via stack traces returned by API calls, which aligns directly with the CWE description.\n\nCWE-359 [CWE-359: Exposure of Private Personal Information to an Unauthorized Actor] is considered as a secondary CWE because the exposed information includes private personal information. CWE-497 [CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere] is also considered because the stack trace may contain system-level information.\n\nOther CWEs were considered but deemed less relevant. For instance, CWE-306 [CWE-306: Missing Authentication for Critical Function] was considered because unauthenticated users can access the data. However, the primary issue is the exposure of sensitive information in error messages, not the lack of authentication. The API calls themselves might not require authentication by design, but the **sensitive data** should not be included in the response. Therefore, CWE-209 [CWE-209: Generation of Error Message Containing Sensitive Information] more accurately captures the **root cause**.\n\nThe selected CWEs are at the optimal level of specificity because they directly address the **root cause** and the nature of the exposed information based on the evidence provided.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-209 | Generation of Error Message Containing Sensitive Information | 0.9 | Base | Allowed | Primary CWE |\n| CWE-359 | Exposure of Private Personal Information to an Unauthorized Actor | 0.7 | Base | Allowed | Secondary Candidate |\n| CWE-497 | Exposure of Sensitive System Information to an Unauthorized Control Sphere | 0.6 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE identified is CWE-209 [CWE-209: Generation of Error Message Containing Sensitive Information], which is a base-level CWE. It has child CWEs like CWE-210 [CWE-210: Generation of Error Message Containing Full Path Disclosure] and CWE-211 [CWE-211: Exposure of Sensitive Information Through 'Man-in-the-Middle' Attack], which are more specific cases of sensitive information exposure. However, the provided description doesn't specify the exact type of sensitive information or the attack vector beyond the API call revealing a stack trace; thus, the base CWE is appropriate.\n\nCWE-359 [CWE-359: Exposure of Private Personal Information to an Unauthorized Actor] and CWE-497 [CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere] are also at the base level and represent different facets of the information exposure.\n\n```mermaid\ngraph TD\n    cwe209[\"CWE-209: Generation of Error Message Containing Sensitive Information\"]\n    cwe359[\"CWE-359: Exposure of Private Personal Information to an Unauthorized Actor\"]\n    cwe497[\"CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\"]\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe209 primary\n    class cwe359,cwe497 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with a misconfiguration or default setting in the Moodle application and PHP, leading to the generation of stack traces that include sensitive information. This information is then exposed to unauthenticated users via API calls.\n\n1.  **Root Cause:** Generation of stack traces containing sensitive information due to misconfiguration (zend.exception_ignore_args = 0).\n2.  **Weakness:** CWE-209 [CWE-209: Generation of Error Message Containing Sensitive Information]\n3.  **Impact:** Exposure of user data (names, contact information, hashed passwords) to unauthorized users.\n\n## Summary of Analysis\nThe primary classification is CWE-209 [CWE-209: Generation of Error Message Containing Sensitive Information] because the root cause is the generation of error messages (stack traces) containing sensitive information. The vulnerability description and CVE details explicitly mention the retrieval of user data via stack traces returned by API calls, which aligns directly with the CWE description.\n\nCWE-359 [CWE-359: Exposure of Private Personal Information to an Unauthorized Actor] is considered as a secondary CWE because the exposed information includes private personal information. CWE-497 [CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere] is also considered because the stack trace may contain system-level information.\n\nOther CWEs were considered but deemed less relevant. For instance, CWE-306 [CWE-306: Missing Authentication for Critical Function] was considered because unauthenticated users can access the data. However, the primary issue is the exposure of sensitive information in error messages, not the lack of authentication. The API calls themselves might not require authentication by design, but the **sensitive data** should not be included in the response. Therefore, CWE-209 [CWE-209: Generation of Error Message Containing Sensitive Information] more accurately captures the **root cause**.\n\nThe selected CWEs are at the optimal level of specificity because they directly address the **root cause** and the nature of the exposed information based on the evidence provided.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-359:**\n- 359 (Exposure of Private Personal Information to an Unauthorized Actor) - ROOT\n\n\n**Chain starting from CWE-306:**\n- 306 (Missing Authentication for Critical Function) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "1390",
        "name": "Weak Authentication",
        "source": "sparse"
      },
      "similarity": 82.52332744398294
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 80.56316569348596
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 77.71607114746665
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 75.30553149914428
    },
    {
      "metadata": {
        "doc_id": "639",
        "name": "Authorization Bypass Through User-Controlled Key",
        "source": "sparse"
      },
      "similarity": 75.09128233244262
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 75.06860303351682
    },
    {
      "metadata": {
        "doc_id": "497",
        "name": "Exposure of Sensitive System Information to an Unauthorized Control Sphere",
        "source": "sparse"
      },
      "similarity": 74.64598535497606
    },
    {
      "metadata": {
        "doc_id": "209",
        "name": "Generation of Error Message Containing Sensitive Information",
        "source": "sparse"
      },
      "similarity": 74.19038131999325
    },
    {
      "metadata": {
        "doc_id": "359",
        "name": "Exposure of Private Personal Information to an Unauthorized Actor",
        "type": "Base",
        "original_content": "The product does not properly prevent a person's private, personal information from being accessed by actors who either (1) are not explicitly authorized to access the information or (2) do not have the implicit consent of the person about whom the information is collected.",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5394678082388962,
            "graph": 1.5180828188407767
          }
        }
      },
      "similarity": 0.5394678082388962
    },
    {
      "doc_id": "202",
      "text": "When trying to keep information confidential, an attacker can often infer some of the information by using statistics.",
      "score": 0.5809126375258998,
      "metadata": {
        "doc_id": "202",
        "name": "Exposure of Sensitive Information Through Data Queries",
        "type": "Base",
        "extended_description": "In situations where data should not be tied to individual users, but a large number of users should be able to make queries that \"scrub\" the identity of users, it may be possible to get information about a user -- e.g., by specifying search terms that are known to be unique to that user.",
        "alternate_terms": [],
        "original_content": "When trying to keep information confidential, an attacker can often infer some of the information by using statistics.",
        "relationships": [
          {
            "source_id": "202",
            "target_id": "1230",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "201",
            "target_id": "202",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1230",
            "target_id": "202",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "source": "graph",
        "sources": [
          "vector",
          "graph"
        ],
        "vector_score": 0.5809126375258998,
        "graph_score": 3.6399999999999997,
        "score_components": {
          "relationship_chain": 0.7,
          "explicit_mention": 1.0,
          "abstraction_path": 0.9,
          "peer_group": 0.9
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "peer_relationship"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "201",
                  "202",
                  "CANALSOBE"
                ]
              ],
              "score": 0.7,
              "type": "relationship_chain",
              "source": "201"
            },
            "peer_relationship": {
              "path": [
                [
                  "201",
                  "202",
                  "CANALSOBE"
                ]
              ],
              "score": 0.9,
              "type": "peer_relationship",
              "source": "201"
            }
          }
        },
        "is_explicit": true,
        "abstraction_level": "base",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.502446502678923,
            "graph": 2.4163650550103597
          }
        }
      },
      "similarity": 2.4163650550103597
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-359",
      "CWE-306",
      "CWE-209",
      "CWE-211",
      "CWE-497",
      "CWE-210"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}