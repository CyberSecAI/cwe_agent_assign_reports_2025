{
  "cve_id": "CVE-2024-42472",
  "description": "Flatpak is a Linux application sandboxing and distribution framework. Prior to versions 1.14.0 and 1.15.10, a malicious or compromised Flatpak app using persistent directories could access and write files outside of what it would otherwise have access to, which is an attack on integrity and confidentiality. When `persistent=subdir` is used in the application permissions (represented as `--persist=subdir` in the command-line interface), that means that an application which otherwise doesnt have access to the real user home directory will see an empty home directory with a writeable subdirectory `subdir`. Behind the scenes, this directory is actually a bind mount and the data is stored in the per-application directory as `~/.var/app/$APPID/subdir`. This allows existing apps that are not aware of the per-application directory to still work as intended without general home directory access. However, the application does have write access to the application directory `~/.var/app/$APPID` where this directory is stored. If the source directory for the `persistent`/`--persist` option is replaced by a symlink, then the next time the application is started, the bind mount will follow the symlink and mount whatever it points to into the sandbox. Partial protection against this vulnerability can be provided by patching Flatpak using the patches in commits ceec2ffc and 98f79773. However, this leaves a **race condition** that could be exploited by two instances of a malicious app running i",
  "key_phrases": {
    "rootcause": "race condition",
    "weakness": "symlink following",
    "impact": [
      "access files outside sandbox",
      "integrity"
    ],
    "vector": "",
    "attacker": "malicious Flatpak app",
    "product": "Flatpak",
    "version": "prior to 1.14.0 and 1.15.10",
    "component": ""
  },
  "reference_content": "```\n{\n  \"CVE-2024-42472\": {\n    \"Description\": \"A vulnerability in Flatpak allows a malicious or compromised Flatpak app using persistent directories to read and write files in locations it would not normally have access to. When `persistent=subdir` is used, the application sees an empty home directory with a writeable subdirectory `subdir`. This directory is a bind mount to `~/.var/app/$APPID/subdir`. If the source directory is replaced by a symlink, then the next time the app is started, the bind mount will follow the symlink and mount whatever it points to into the sandbox.\",\n    \"Root cause\": \"The vulnerability arises from the fact that Flatpak did not properly validate the target of the bind mount for persistent directories, allowing a symlink to be placed there, leading to a sandbox escape.\",\n    \"Weaknesses\": [\n      \"Improper handling of symbolic links in persistent directory mounts.\",\n       \"Time-of-check/time-of-use race condition when mounting persistent directories\"\n    ],\n    \"Impact\": \"A malicious or compromised Flatpak application can gain read and write access to files outside of its sandbox, leading to a compromise of data integrity and confidentiality. For example, an application could gain access to sensitive data like SSH keys, even if it is not designed to have such access.\",\n    \"Attack vectors\": \"An attacker can exploit this vulnerability by replacing the persistent directory with a symbolic link that points to a sensitive location on the host filesystem. When the application is started, the bind mount will follow the symlink, granting the application access to the targeted directory.\",\n    \"Required attacker capabilities/position\": \"The attacker needs to have the ability to modify the application's persistent storage directory, which is typically located within the user's home directory. This could be achieved if the application itself is malicious or if the application's persistent storage has been compromised.\"\n  }\n}\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID    | CWE Name                                                                                                   | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :--------------------------------------------------------------------------------------------------------- | :--------- | :---------------------- | :------------------------------ | :-------------------------------- |\n| CWE-367   | Time-of-check Time-of-use (TOCTOU) Race Condition                                                          | 0.9        | Base                    | Primary                         | Allowed                           |\n| CWE-59    | Improper Link Resolution Before File Access ('Link Following')                                             | 0.8        | Base                    | Secondary                       | Allowed                           |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is a Time-of-check Time-of-use (TOCTOU) Race Condition (CWE-367) that enables the exploitation of Improper Link Resolution (CWE-59). CWE-367 is a child of CWE-362 (Concurrent Execution using Shared Resource with Improper Synchronization), while CWE-59 has various parent CWEs related to path traversal and resource handling. CWE-363 (Race Condition Enabling Link Following) is also relevant.\n\n```mermaid\ngraph TD\n    cwe367[\"CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition\"]\n    cwe59[\"CWE-59: Improper Link Resolution Before File Access ('Link Following')\"]\n    cwe362[\"CWE-362: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')\"]\n    cwe363[\"CWE-363: Race Condition Enabling Link Following\"]\n\n    cwe367 -->|CHILDOF| cwe362\n    cwe363 -->|CANPRECEDE| cwe59\n    cwe363 -->|CHILDOF| cwe367\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe367 primary\n    class cwe59,cwe362,cwe363 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with a **race condition** (CWE-367), where the state of a directory is checked before use, but changes to a symlink before it is actually used, leading to **improper link resolution** (CWE-59), finally resulting in the application accessing files outside of its intended sandbox.\n  - The **Primary CWE** should identify the issue that led to the vulnerability i.e. the first in the \"Vulnerability Chain\"\n\n## Summary of Analysis\nThe primary cause of the vulnerability is a **race condition** (CWE-367) that allows a malicious application to replace a directory with a symbolic link after it has been checked but before it is used for a bind mount. This leads to the bind mount following the symlink and granting the application access to unintended files, which can be described as **improper link resolution** (CWE-59).\n\nThe **Vulnerability Description Key Phrases** mentions the **rootcause** as a \"**race condition**\" and a \"**weakness**\" related to \"**symlink following**\". The CVE description also mentions both \"**Time-of-check/time-of-use race condition**\" and \"**Improper handling of symbolic links**\".\n\nThe retriever results indicate that CWE-367 and CWE-59 are good candidates. CWE-362 (Concurrent Execution using Shared Resource with Improper Synchronization) is a parent of CWE-367 and is too high level. CWE-61 (UNIX Symbolic Link (Symlink) Following) is a compound weakness and also a good candidate but less specific than the **race condition** that leads to it.\n\nI am confident in this assessment because it directly addresses the root cause and the mechanism of the vulnerability, and the selected CWEs are at the appropriate level of abstraction.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-362: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')\n**Abstraction Level**: Class\n**Similarity Score**: 2137.93\n**Source**: sparse\n\n**Description**:\nThe product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence operating concurrently.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-61: UNIX Symbolic Link (Symlink) Following\n**Abstraction Level**: Compound\n**Similarity Score**: 2130.22\n**Source**: sparse\n\n**Description**:\nThe product, when opening a file or directory, does not sufficiently account for when the file is a symbolic link that resolves to a target outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n## CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition\n**Abstraction Level**: Base\n**Similarity Score**: 2263.71\n**Source**: sparse\n\n**Description**:\nThe product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the resource is in an unexpected state.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-59: Improper Link Resolution Before File Access ('Link Following')\n**Abstraction Level**: Base\n**Similarity Score**: 2271.53\n**Source**: sparse\n\n**Description**:\nThe product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
  "analysis_with_relationships": "# Summary\n| CWE ID    | CWE Name                                                                                                   | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :--------------------------------------------------------------------------------------------------------- | :--------- | :---------------------- | :------------------------------ | :-------------------------------- |\n| CWE-367   | Time-of-check Time-of-use (TOCTOU) Race Condition                                                          | 0.9        | Base                    | Primary                         | Allowed                           |\n| CWE-59    | Improper Link Resolution Before File Access ('Link Following')                                             | 0.8        | Base                    | Secondary                       | Allowed                           |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is a Time-of-check Time-of-use (TOCTOU) Race Condition (CWE-367) that enables the exploitation of Improper Link Resolution (CWE-59). CWE-367 is a child of CWE-362 (Concurrent Execution using Shared Resource with Improper Synchronization), while CWE-59 has various parent CWEs related to path traversal and resource handling. CWE-363 (Race Condition Enabling Link Following) is also relevant.\n\n```mermaid\ngraph TD\n    cwe367[\"CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition\"]\n    cwe59[\"CWE-59: Improper Link Resolution Before File Access ('Link Following')\"]\n    cwe362[\"CWE-362: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')\"]\n    cwe363[\"CWE-363: Race Condition Enabling Link Following\"]\n\n    cwe367 -->|CHILDOF| cwe362\n    cwe363 -->|CANPRECEDE| cwe59\n    cwe363 -->|CHILDOF| cwe367\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe367 primary\n    class cwe59,cwe362,cwe363 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with a **race condition** (CWE-367), where the state of a directory is checked before use, but changes to a symlink before it is actually used, leading to **improper link resolution** (CWE-59), finally resulting in the application accessing files outside of its intended sandbox.\n  - The **Primary CWE** should identify the issue that led to the vulnerability i.e. the first in the \"Vulnerability Chain\"\n\n## Summary of Analysis\nThe primary cause of the vulnerability is a **race condition** (CWE-367) that allows a malicious application to replace a directory with a symbolic link after it has been checked but before it is used for a bind mount. This leads to the bind mount following the symlink and granting the application access to unintended files, which can be described as **improper link resolution** (CWE-59).\n\nThe **Vulnerability Description Key Phrases** mentions the **rootcause** as a \"**race condition**\" and a \"**weakness**\" related to \"**symlink following**\". The CVE description also mentions both \"**Time-of-check/time-of-use race condition**\" and \"**Improper handling of symbolic links**\".\n\nThe retriever results indicate that CWE-367 and CWE-59 are good candidates. CWE-362 (Concurrent Execution using Shared Resource with Improper Synchronization) is a parent of CWE-367 and is too high level. CWE-61 (UNIX Symbolic Link (Symlink) Following) is a compound weakness and also a good candidate but less specific than the **race condition** that leads to it.\n\nI am confident in this assessment because it directly addresses the root cause and the mechanism of the vulnerability, and the selected CWEs are at the appropriate level of abstraction.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-362: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')\n**Abstraction Level**: Class\n**Similarity Score**: 2137.93\n**Source**: sparse\n\n**Description**:\nThe product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence operating concurrently.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-61: UNIX Symbolic Link (Symlink) Following\n**Abstraction Level**: Compound\n**Similarity Score**: 2130.22\n**Source**: sparse\n\n**Description**:\nThe product, when opening a file or directory, does not sufficiently account for when the file is a symbolic link that resolves to a target outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n## CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition\n**Abstraction Level**: Base\n**Similarity Score**: 2263.71\n**Source**: sparse\n\n**Description**:\nThe product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the resource is in an unexpected state.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-59: Improper Link Resolution Before File Access ('Link Following')\n**Abstraction Level**: Base\n**Similarity Score**: 2271.53\n**Source**: sparse\n\n**Description**:\nThe product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-59:**\n- 59 (Improper Link Resolution Before File Access ('Link Following')) - ROOT\n\n\n**Chain starting from CWE-363:**\n- 363 (Race Condition Enabling Link Following) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Race Condition",
        "match_reason": "exact_match_whole_phrase"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "61",
        "name": "UNIX Symbolic Link (Symlink) Following",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Symlink following",
        "match_reason": "exact_match_whole_phrase"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "64",
        "name": "Windows Shortcut Following (.LNK)",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: symlink",
        "match_reason": "term_in_phrase_whole_phrase"
      },
      "similarity": 800.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "367",
        "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
        "source": "sparse"
      },
      "similarity": 1340.2737575885512
    },
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "sparse"
      },
      "similarity": 1297.8222333126448
    },
    {
      "metadata": {
        "doc_id": "59",
        "name": "Improper Link Resolution Before File Access ('Link Following')",
        "source": "sparse"
      },
      "similarity": 1280.4556222290887
    },
    {
      "metadata": {
        "doc_id": "99",
        "name": "Improper Control of Resource Identifiers ('Resource Injection')",
        "source": "sparse"
      },
      "similarity": 1269.6287890871836
    },
    {
      "metadata": {
        "doc_id": "184",
        "name": "Incomplete List of Disallowed Inputs",
        "source": "sparse"
      },
      "similarity": 1266.206556540685
    },
    {
      "metadata": {
        "doc_id": "277",
        "name": "Insecure Inherited Permissions",
        "type": "Variant",
        "original_content": "A product defines a set of insecure permissions that are inherited by objects that are created by the program.",
        "keyphrase_source": "rootcause:race condition",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.4527206476649227,
            "sparse": 1239.1860320769802
          }
        }
      },
      "similarity": 0.4527206476649227
    },
    {
      "doc_id": "363",
      "text": "CWE-363: Race Condition Enabling Link Following",
      "score": 2.8651999999999997,
      "metadata": {
        "doc_id": "363",
        "name": "Race Condition Enabling Link Following",
        "type": "base",
        "original_content": "CWE-363: Race Condition Enabling Link Following",
        "relationships": [
          {
            "source_id": "363",
            "target_id": "59",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "363",
            "target_id": "367",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "59",
            "target_id": "363",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "367",
            "target_id": "363",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.7200000000000001,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "59",
                  "363",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "59"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "367",
                  "363",
                  "PARENTOF"
                ]
              ],
              "score": 0.7200000000000001,
              "type": "abstraction_path_down",
              "source": "367"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "59",
                  "363",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "59"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "363",
                  "59",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "59"
            }
          }
        },
        "abstraction_level": "base",
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.8651999999999997
          }
        }
      },
      "similarity": 2.8651999999999997
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-59",
      "CWE-363",
      "CWE-362",
      "CWE-367",
      "CWE-61"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}