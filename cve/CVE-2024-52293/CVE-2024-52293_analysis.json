{
  "cve_id": "CVE-2024-52293",
  "description": "Craft is a content management system (CMS). Prior to 4.12.2 and 5.4.3, Craft is **missing normalizePath in the function FileHelperabsolutePath** could lead to Remote Code Execution on the server via twig SSTI. This is a sequel to CVE-2023-40035. This vulnerability is fixed in 4.12.2 and 5.4.3.",
  "key_phrases": {
    "rootcause": "missing normalizePath in the function FileHelperabsolutePath",
    "weakness": "server-side template injection",
    "impact": "remote code execution",
    "vector": "",
    "attacker": "",
    "product": "Craft CMS",
    "version": "prior to 4.12.2 and 5.4.3",
    "component": ""
  },
  "reference_content": "The provided content is related to CVE-2024-52293.\n\n**Root cause of vulnerability:**\nThe vulnerability stems from a missing path normalization in the `FileHelper::absolutePath` function. This allows an attacker to bypass the `isSystemDir` check and create a local filesystem within the system directories. Specifically, the `absolutePath` function was returning `$from . $ds . $to` without normalizing the resulting path which can lead to directory traversal.\n\n**Weaknesses/vulnerabilities present:**\n- Missing path normalization in `FileHelper::absolutePath`.\n- Incomplete Twig sandbox, allowing the use of functions like 'system' and 'passthru' via filters.\n- Ability to bypass `isSystemDir` by crafting paths using directory traversal such as `../templates/poc`.\n- Ability to create a local filesystem and asset volume within system directories.\n- Resulting ability to upload a file containing Twig code and execute it via a new route.\n\n**Impact of exploitation:**\n- Remote Code Execution (RCE) on the server.\n- Full control of the vulnerable system\n- Potential data exfiltration, malware execution, and further attacks.\n\n**Attack vectors:**\n- Network-based attack.\n- Exploitation occurs through a crafted path that bypasses security checks, followed by uploading a file with malicious Twig code.\n\n**Required attacker capabilities/position:**\n- Authenticated user with administrative privileges (`ALLOW_ADMIN_CHANGES=true`).\n- Ability to create a new filesystem, asset volume, and route.\n- Ability to upload a file.\n\n**Technical Details:**\nThe vulnerability is a sequel to CVE-2023-40035.\nThe `FileHelper::absolutePath` function in `src/helpers/FileHelper.php` did not normalize the path after combining the from and to paths, returning `$from . $ds . $to`.\nThis could lead to multiple security risks, where `../templates/poc` was not considered a system dir when passed to `isSystemDir` because the `absolutePath` function call returned `/var/www/html/web//../templates/poc`\nThis allowed for bypassing `validatePath` function.\nThe attacker can then create a local filesystem within the system directories like `/var/www/html/templates/poc`.\nAfter creating an asset volume using the crafted filesystem, attacker can upload a `poc.ttml` file containing malicious twig code.\nThe attacker can create a new route to execute the uploaded twig file.\nThe twig sandbox was incomplete and allowed for usage of functions such as `system` and `passthru` via `find` filter in twig.\nThe fix is to normalize the path after concatenation in `FileHelper::absolutePath` and adding more filters to the twig sandbox.\nThe vulnerability affects Craft CMS versions >= 4.0.0-RC1 and <= 4.12.1, and >= 5.0.0-RC1 and <= 5.4.2.\nPatched versions are 4.12.2 and 5.4.3.\nThe CVSS score is 7.2 High.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-1336 | Improper Neutralization of Special Elements Used in a Template Engine | 1.0 | Base | Allowed | Primary CWE. This is the **rootcause** that led to the RCE. |\n| CWE-22 | Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') | 0.9 | Base | Allowed | Secondary. This allowed the bypass of security checks. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.95\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-1336 (Improper Neutralization of Special Elements Used in a Template Engine). The vulnerability description explicitly mentions that the missing path normalization in `FileHelperabsolutePath` leads to Remote Code Execution on the server via twig SSTI. This aligns with the description of CWE-1336, which involves the use of a template engine and the failure to neutralize special elements.\n\nCWE-22 (Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')) is a secondary CWE. The path traversal allows the attacker to bypass security checks and create a local filesystem within the system directories, which is a prerequisite for the template injection.\n\n```mermaid\ngraph TD\n    cwe1336[\"CWE-1336: Improper Neutralization of Special Elements Used in a Template Engine\"]\n    cwe22[\"CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\"]\n    cwe94[\"CWE-94: Improper Control of Generation of Code ('Code Injection')\"]\n\n    cwe1336 -->|CANFOLLOW| cwe94\n    cwe22 -->|CANPRECEDE| cwe1336\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe1336 primary\n    class cwe22 secondary\n    class cwe94 tertiary\n```\n\n## Vulnerability Chain\n1.  **Missing Path Normalization (CWE-N/A - Custom)**: The `FileHelper::absolutePath` function **missing normalizePath**, which is the initial coding error.\n2.  **Path Traversal (CWE-22)**: This allows bypassing `isSystemDir` checks by using directory traversal sequences like `../templates/poc`.\n3.  **Template Injection (CWE-1336)**: The attacker can upload a file containing malicious Twig code due to the **incomplete Twig sandbox**.\n4.  **Remote Code Execution (CWE-N/A - Impact)**: The attacker can execute the uploaded Twig file via a new route, achieving RCE.\n\nThe primary **rootcause** is the **missing normalizePath**, leading to CWE-22 and then CWE-1336, ultimately resulting in Remote Code Execution.\n\n## Summary of Analysis\n\nThe vulnerability is primarily due to the **improper neutralization** of special elements used in a template engine (CWE-1336). The evidence for this is strong, as the description explicitly mentions the **missing normalizePath in the function FileHelperabsolutePath** leading to SSTI. The CVE Reference Links Content Summary confirms that the fix involves normalizing the path in `FileHelper::absolutePath`.\n\nThe path traversal (CWE-22) is a secondary weakness that facilitates the template injection by allowing the attacker to bypass security checks.\n\nOther CWEs were considered but not selected:\n\n*   CWE-94 (Improper Control of Generation of Code ('Code Injection')): While the vulnerability results in code execution, the **rootcause** is the template injection, making CWE-1336 more appropriate.\n*   CWE-78 (Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')): The code execution is achieved through template injection, not directly through OS command injection.\n*   CWE-434 (Unrestricted Upload of File with Dangerous Type): The vulnerability is not primarily about unrestricted file upload, but rather about the template engine processing the uploaded file.\n*   CWE-862 (Missing Authorization): While administrative privileges are required, the core weakness is the template injection, not the missing authorization.\n\nThe selected CWEs are at the optimal level of specificity because they directly address the **rootcause** and contributing factors to the vulnerability.\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-1336: Improper Neutralization of Special Elements Used in a Template Engine\n**Abstraction Level**: Base\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe product uses a template engine to insert or process externally-influenced input, but it does not neutralize or incorrectly neutralizes special elements or syntax that can be interpreted as template expressions or other code directives when processed by the engine.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-88: Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product constructs a string for a command to be executed by a separate component\nin another control sphere, but it does not properly delimit the\nintended arguments, options, or switches within that command string.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-23: Relative Path Traversal\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as \"..\" that can resolve to a location that is outside of that directory.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.72",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-1336 | Improper Neutralization of Special Elements Used in a Template Engine | 1.0 | Base | Allowed | Primary CWE. This is the **rootcause** that led to the RCE. |\n| CWE-22 | Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') | 0.9 | Base | Allowed | Secondary. This allowed the bypass of security checks. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.95\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-1336 (Improper Neutralization of Special Elements Used in a Template Engine). The vulnerability description explicitly mentions that the missing path normalization in `FileHelperabsolutePath` leads to Remote Code Execution on the server via twig SSTI. This aligns with the description of CWE-1336, which involves the use of a template engine and the failure to neutralize special elements.\n\nCWE-22 (Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')) is a secondary CWE. The path traversal allows the attacker to bypass security checks and create a local filesystem within the system directories, which is a prerequisite for the template injection.\n\n```mermaid\ngraph TD\n    cwe1336[\"CWE-1336: Improper Neutralization of Special Elements Used in a Template Engine\"]\n    cwe22[\"CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\"]\n    cwe94[\"CWE-94: Improper Control of Generation of Code ('Code Injection')\"]\n\n    cwe1336 -->|CANFOLLOW| cwe94\n    cwe22 -->|CANPRECEDE| cwe1336\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe1336 primary\n    class cwe22 secondary\n    class cwe94 tertiary\n```\n\n## Vulnerability Chain\n1.  **Missing Path Normalization (CWE-N/A - Custom)**: The `FileHelper::absolutePath` function **missing normalizePath**, which is the initial coding error.\n2.  **Path Traversal (CWE-22)**: This allows bypassing `isSystemDir` checks by using directory traversal sequences like `../templates/poc`.\n3.  **Template Injection (CWE-1336)**: The attacker can upload a file containing malicious Twig code due to the **incomplete Twig sandbox**.\n4.  **Remote Code Execution (CWE-N/A - Impact)**: The attacker can execute the uploaded Twig file via a new route, achieving RCE.\n\nThe primary **rootcause** is the **missing normalizePath**, leading to CWE-22 and then CWE-1336, ultimately resulting in Remote Code Execution.\n\n## Summary of Analysis\n\nThe vulnerability is primarily due to the **improper neutralization** of special elements used in a template engine (CWE-1336). The evidence for this is strong, as the description explicitly mentions the **missing normalizePath in the function FileHelperabsolutePath** leading to SSTI. The CVE Reference Links Content Summary confirms that the fix involves normalizing the path in `FileHelper::absolutePath`.\n\nThe path traversal (CWE-22) is a secondary weakness that facilitates the template injection by allowing the attacker to bypass security checks.\n\nOther CWEs were considered but not selected:\n\n*   CWE-94 (Improper Control of Generation of Code ('Code Injection')): While the vulnerability results in code execution, the **rootcause** is the template injection, making CWE-1336 more appropriate.\n*   CWE-78 (Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')): The code execution is achieved through template injection, not directly through OS command injection.\n*   CWE-434 (Unrestricted Upload of File with Dangerous Type): The vulnerability is not primarily about unrestricted file upload, but rather about the template engine processing the uploaded file.\n*   CWE-862 (Missing Authorization): While administrative privileges are required, the core weakness is the template injection, not the missing authorization.\n\nThe selected CWEs are at the optimal level of specificity because they directly address the **rootcause** and contributing factors to the vulnerability.\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-1336: Improper Neutralization of Special Elements Used in a Template Engine\n**Abstraction Level**: Base\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe product uses a template engine to insert or process externally-influenced input, but it does not neutralize or incorrectly neutralizes special elements or syntax that can be interpreted as template expressions or other code directives when processed by the engine.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-88: Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product constructs a string for a command to be executed by a separate component\nin another control sphere, but it does not properly delimit the\nintended arguments, options, or switches within that command string.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-23: Relative Path Traversal\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as \"..\" that can resolve to a location that is outside of that directory.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-94:**\n- 94 (Improper Control of Generation of Code ('Code Injection')) - ROOT\n\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "1336",
        "name": "Improper Neutralization of Special Elements Used in a Template Engine",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Server-Side Template Injection / SSTI",
        "match_reason": "exact_match_whole_phrase"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "138",
        "name": "Improper Neutralization of Special Elements",
        "source": "sparse"
      },
      "similarity": 363.05668642843546
    },
    {
      "metadata": {
        "doc_id": "94",
        "name": "Improper Control of Generation of Code ('Code Injection')",
        "source": "sparse"
      },
      "similarity": 345.6496119427102
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 342.5895365981129
    },
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "sparse"
      },
      "similarity": 340.7834770697449
    },
    {
      "metadata": {
        "doc_id": "502",
        "name": "Deserialization of Untrusted Data",
        "source": "sparse"
      },
      "similarity": 340.2265378038268
    },
    {
      "metadata": {
        "doc_id": "248",
        "name": "Uncaught Exception",
        "source": "sparse"
      },
      "similarity": 339.05489374459466
    },
    {
      "metadata": {
        "doc_id": "95",
        "name": "Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
        "source": "sparse"
      },
      "similarity": 336.3717447557115
    },
    {
      "metadata": {
        "doc_id": "96",
        "name": "Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')",
        "type": "Base",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before inserting the input into an executable resource, such as a library, configuration file, or template.",
        "keyphrase_source": "weakness:server-side template injection",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5723224294128584,
            "graph": 1.7162155883074823
          }
        }
      },
      "similarity": 0.5723224294128584
    },
    {
      "doc_id": "613",
      "text": "CWE-613: Insufficient Session Expiration",
      "score": 2.0930000000000004,
      "metadata": {
        "doc_id": "613",
        "name": "Insufficient Session Expiration",
        "type": "base",
        "original_content": "CWE-613: Insufficient Session Expiration",
        "relationships": [
          {
            "source_id": "613",
            "target_id": "352",
            "label": "REQUIREDBY",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "613",
            "target_id": "287",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "613",
            "target_id": "672",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "613",
            "target_id": "672",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "672",
            "target_id": "613",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "352",
            "target_id": "613",
            "label": "REQUIRES",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "287",
            "target_id": "613",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 0.9,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "352",
                  "613",
                  "REQUIRES"
                ]
              ],
              "score": 0.9,
              "type": "relationship_chain",
              "source": "352"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "352",
                  "613",
                  "REQUIRES"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "352"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.0930000000000004
          }
        }
      },
      "similarity": 2.0930000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-94",
      "CWE-116",
      "CWE-862",
      "CWE-22",
      "CWE-88",
      "CWE-212",
      "CWE-1336",
      "CWE-74",
      "CWE-78",
      "CWE-138",
      "CWE-23",
      "CWE-425",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}