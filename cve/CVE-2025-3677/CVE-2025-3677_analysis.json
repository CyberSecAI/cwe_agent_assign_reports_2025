{
  "cve_id": "CVE-2025-3677",
  "description": "A vulnerability classified as critical was found in lm-sys fastchat up to 0.2.36. This vulnerability affects the function split_files/apply_delta_low_cpu_mem of the file fastchat/model/apply_delta.py. The manipulation leads to **deserialization**. An attack has to be approached locally.",
  "key_phrases": {
    "rootcause": "deserialization",
    "weakness": "",
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": "lm-sys fastchat",
    "version": "up to 0.2.36",
    "component": "split_files/apply_delta_low_cpu_mem of the file fastchat/model/apply_delta.py"
  },
  "reference_content": "## Analysis of CVE-2025-3677 related content\n\nThe provided content details a vulnerability in FastChat related to insecure deserialization using `torch.load`.\n\n**Root cause of vulnerability:**\n\nThe `torch.load` function is used without the `weights_only=True` parameter when loading potentially untrusted data. This allows for arbitrary code execution during deserialization if a malicious pickle file is provided as input.\n\n**Weaknesses/vulnerabilities present:**\n\n*   **CWE-502: Deserialization of Untrusted Data:** The core vulnerability is the lack of protection against malicious data during deserialization.\n*   Insecure use of `torch.load`: Specifically, the absence of `weights_only=True` makes the application susceptible to code execution via crafted pickle files.\n\n**Impact of exploitation:**\n\n*   **Arbitrary Code Execution:** Successful exploitation allows an attacker to execute arbitrary code on the system.\n*   **Unauthorized Access:** Potential for gaining unauthorized access to the system and sensitive data.\n*   **Data Leakage:**  The attacker could exfiltrate sensitive data.\n*   **System Compromise:** Complete compromise of the system is possible.\n\n**Attack vectors:**\n\n*   **File Manipulation:** An attacker needs to be able to replace legitimate input files with malicious pickle files.\n*   **Input Control:** The attacker must control the data that is passed to the `torch.load` function.\n\n**Required attacker capabilities/position:**\n\n*   **Access to the System:** The attacker needs access to the system where the vulnerable code is running.\n*   **File Write Access:** The attacker needs to be able to write or modify files that are loaded by `torch.load`.\n*   **Pickle Creation:** The attacker needs the ability to create malicious pickle files containing arbitrary code.\n\n**Mitigation or fix:**\n\n*   **Use `weights_only=True`:** Add the `weights_only=True` parameter to all calls to `torch.load` that handle potentially untrusted data. This restricts the deserialization process to only loading the model weights, preventing the execution of arbitrary code.\n\n**More detail than official CVE description:**\n\nYes, the content provides significantly more detail than a typical CVE description. It includes:\n\n*   Specific code locations where the vulnerability exists.\n*   Detailed exploit steps.\n*   Prerequisites for exploitation.\n*   A clear explanation of the root cause and impact.\n*   Specific mitigation advice.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-502 | Deserialization of Untrusted Data | 1.0 | Base | Primary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary relationship is that CWE-502 stands alone as the root cause. It's a base level CWE, which is the preferred level. There are no clear child or parent relationships that are essential to this analysis, as CWE-502 is a specific and accurate description of the vulnerability.\n\n```mermaid\ngraph TD\n    cwe502[\"CWE-502: Deserialization of Untrusted Data\"]\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    class cwe502 primary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with the **deserialization** of untrusted data, which directly leads to arbitrary code execution.\n\n## Summary of Analysis\n\nThe initial assessment strongly points towards CWE-502 as the primary weakness, which is supported by the \"Vulnerability Description Key Phrases\" identifying the **rootcause** as **deserialization**, and the \"CVE Reference Links Content Summary\" which highlights the use of `torch.load` without proper safeguards, directly leading to the **deserialization** of untrusted data. The mitigation focuses on using `weights_only=True`, which is a direct countermeasure for insecure **deserialization**. The \"Retriever Results\" also lists CWE-502 with a high score.\n\nThe evidence from the vulnerability description, the CVE reference summary, and the retriever results all converge on **CWE-502: Deserialization of Untrusted Data** as the most appropriate classification. No other CWEs are necessary to describe the vulnerability. This CWE is at the optimal level of specificity (Base).",
  "analysis_with_relationships": "# Summary\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-502 | Deserialization of Untrusted Data | 1.0 | Base | Primary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary relationship is that CWE-502 stands alone as the root cause. It's a base level CWE, which is the preferred level. There are no clear child or parent relationships that are essential to this analysis, as CWE-502 is a specific and accurate description of the vulnerability.\n\n```mermaid\ngraph TD\n    cwe502[\"CWE-502: Deserialization of Untrusted Data\"]\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    class cwe502 primary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with the **deserialization** of untrusted data, which directly leads to arbitrary code execution.\n\n## Summary of Analysis\n\nThe initial assessment strongly points towards CWE-502 as the primary weakness, which is supported by the \"Vulnerability Description Key Phrases\" identifying the **rootcause** as **deserialization**, and the \"CVE Reference Links Content Summary\" which highlights the use of `torch.load` without proper safeguards, directly leading to the **deserialization** of untrusted data. The mitigation focuses on using `weights_only=True`, which is a direct countermeasure for insecure **deserialization**. The \"Retriever Results\" also lists CWE-502 with a high score.\n\nThe evidence from the vulnerability description, the CVE reference summary, and the retriever results all converge on **CWE-502: Deserialization of Untrusted Data** as the most appropriate classification. No other CWEs are necessary to describe the vulnerability. This CWE is at the optimal level of specificity (Base).\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-502:**\n- 502 (Deserialization of Untrusted Data) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "502",
        "name": "Deserialization of Untrusted Data",
        "source": "sparse"
      },
      "similarity": 238.5442860973423
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 235.78340180131198
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 226.73348957989447
    },
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "sparse"
      },
      "similarity": 203.42490591181542
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 201.71487239482116
    },
    {
      "metadata": {
        "doc_id": "820",
        "name": "Missing Synchronization",
        "source": "sparse"
      },
      "similarity": 201.51105029388094
    },
    {
      "metadata": {
        "doc_id": "99",
        "name": "Improper Control of Resource Identifiers ('Resource Injection')",
        "source": "sparse"
      },
      "similarity": 201.3214836493004
    },
    {
      "metadata": {
        "doc_id": "1336",
        "name": "Improper Neutralization of Special Elements Used in a Template Engine",
        "source": "sparse"
      },
      "similarity": 200.56715617239055
    },
    {
      "metadata": {
        "doc_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.5488953458360912
          }
        }
      },
      "similarity": 0.5488953458360912
    },
    {
      "doc_id": "770",
      "text": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
      "score": 0.5710944054357594,
      "metadata": {
        "doc_id": "770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "type": "Base",
        "extended_description": "\n\nCode frequently has to work with limited resources, so programmers must be careful to ensure that resources are not consumed too quickly, or too easily. Without use of quotas, resource limits, or other protection mechanisms, it can be easy for an attacker to consume many resources by rapidly making many requests, or causing larger resources to be used than is needed. When too many resources are allocated, or if a single resource is too large, then it can prevent the code from working correctly, possibly leading to a denial of service.\n",
        "alternate_terms": [],
        "original_content": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
        "relationships": [
          {
            "source_id": "770",
            "target_id": "789",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "770",
            "target_id": "774",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "770",
            "target_id": "20",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "770",
            "target_id": "1325",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "770",
            "target_id": "400",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "770",
            "target_id": "665",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "770",
            "target_id": "400",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "789",
            "target_id": "770",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "774",
            "target_id": "770",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "665",
            "target_id": "770",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "400",
            "target_id": "770",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "20",
            "target_id": "770",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1325",
            "target_id": "770",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "source": "graph",
        "sources": [
          "vector",
          "graph"
        ],
        "vector_score": 0.5710944054357594,
        "graph_score": 4.329000000000001,
        "score_components": {
          "relationship_chain": 1.0,
          "explicit_mention": 1.0,
          "abstraction_path": 0.9,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "20",
                  "770",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "20"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "20",
                  "770",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "20"
            }
          }
        },
        "is_explicit": true,
        "abstraction_level": "base",
        "position": "after",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.54596874966336,
            "graph": 2.825837762174304
          }
        }
      },
      "similarity": 2.825837762174304
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-502"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}