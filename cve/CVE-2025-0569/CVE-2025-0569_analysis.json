{
  "cve_id": "CVE-2025-0569",
  "description": "Sante PACS Server DCM File Parsing Memory Corruption Denial-of-Service Vulnerability. This vulnerability allows remote attackers to create a denial-of-service condition on affected installations of Sante PACS Server. Authentication is not required to exploit this vulnerability. The specific flaw exists within the parsing of DCM files. The issue results from the **lack of proper validation of user-supplied data**, which can result in a memory corruption condition. An attacker can leverage this vulnerability to create a denial-of-service condition on the system. Was ZDI-CAN-25303.",
  "key_phrases": {
    "component": "DCM File Parsing",
    "rootcause": "lack of proper validation of user-supplied data",
    "vector": "",
    "weakness": "Memory Corruption, memory corruption",
    "product": "Sante PACS Server",
    "impact": "Denial of Service",
    "attacker": "remote attackers",
    "version": ""
  },
  "reference_content": "The content relates to CVE-2025-0569. Here's the extracted information:\n\n* **Root cause of vulnerability:** Lack of proper validation of user-supplied data when parsing DCM files.\n* **Weaknesses/vulnerabilities present:** Memory corruption.\n* **Impact of exploitation:** Denial-of-service condition on affected installations of Sante PACS Server.\n* **Attack vectors:** Remote attackers can exploit the vulnerability.\n* **Required attacker capabilities/position:** No authentication required.\n* **Mitigation or fix:** Fixed in Sante PACS Server version 4.0.10.\n* **CVSS Score:** 7.5 (AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)\n* **Affected Vendor:** Sante\n* **Affected Product:** PACS Server\n\nThe content provides more detail than the placeholder CVE description.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID  | CWE Name                                                                                    | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :------- | :------------------------------------------------------------------------------------------ | :--------- | :---------------------- | :------------------------------ | :------------------------------ |\n| CWE-787 | Out-of-bounds Write                                                                       | 0.90       | Base                    | Primary CWE                      | Allowed                       |\n| CWE-1284 | Improper Validation of Specified Quantity in Input                                       | 0.70       | Base                    | Secondary Candidate             | Allowed                       |\n| CWE-20  | Improper Input Validation                                                                 | 0.60       | Class                   | Secondary Candidate             | Discouraged                    |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.80\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is CWE-787 (Out-of-bounds Write), which stems from a **lack of proper validation of user-supplied data**. This **lack of proper validation** can be seen as a form of **improper input validation** (CWE-20), but the resulting **memory corruption** leading to an out-of-bounds write provides more specific details of the root cause. CWE-787 is a child of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer), indicating a more general class of memory safety issues. Since we have the specific cause that the user supplied data was not validated, then we can also add CWE-1284 (Improper Validation of Specified Quantity in Input) as a secondary weakness that resulted in CWE-787.\n\n```mermaid\ngraph TD\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe20[\"CWE-20: Improper Input Validation\"]\n    cwe1284[\"CWE-1284: Improper Validation of Specified Quantity in Input\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations\"]\n\n    cwe787 -->|CHILDOF| cwe119\n    cwe787 <--|ROOT_CAUSE| cwe1284\n    cwe1284 -->|CHILDOF| cwe20\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe787 primary\n    class cwe20,cwe1284 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **lack of proper validation of user-supplied data** (CWE-1284), leading to **memory corruption** and ultimately an **out-of-bounds write** (CWE-787). This results in a denial-of-service condition.\n\nCWE-1284 (Improper Validation of Specified Quantity in Input) -> CWE-787 (Out-of-bounds Write) -> Denial of Service\n\n## Summary of Analysis\nThe analysis is based on the vulnerability description and CVE reference details, which clearly point to a **lack of proper validation of user-supplied data** in DCM file parsing leading to **memory corruption**. The primary CWE is CWE-787 (Out-of-bounds Write) because the issue results from the **lack of proper validation of user-supplied data**, which can result in a memory corruption condition.\nThe retriever results also show CWE-787 as the top candidate, and it is at the Base level of abstraction, which is the preferred level.\nThe provided evidence supports this conclusion with high confidence.\n\nThe selection of CWE-787 is at the optimal level of specificity because it directly describes the **memory corruption** issue. While **improper input validation** (CWE-20) is a contributing factor, it's a more general weakness. The problem isn't simply that input isn't validated, but that a specific type of invalid input leads to an out-of-bounds write. Similarly, while CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer) is a parent of CWE-787, it doesn't capture the precise nature of the vulnerability.\nCWE-1284, *Improper Validation of Specified Quantity in Input*, is added because the user supplied data was not validated for a quantity and size and length.\n\nOther CWEs Considered and Rejected:\n\n*   CWE-20 (Improper Input Validation): While input validation is the root cause, it is too general, and we have a more specific consequence (out-of-bounds write).\n*   CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer): This is a parent of CWE-787 and is less specific.\n*   CWE-476 (NULL Pointer Dereference): Not applicable as the issue is related to memory corruption due to invalid input and not dereferencing NULL pointers.\n*   CWE-770 (Allocation of Resources Without Limits or Throttling): Not applicable as the issue isn't related to resource allocation.\n*   CWE-73 (External Control of File Name or Path): Not applicable as the issue isn't related to path manipulation.\n*   CWE-121 (Stack-based Buffer Overflow) and CWE-122 (Heap-based Buffer Overflow): These are specific types of buffer overflows, but the description only mentions memory corruption and out-of-bounds write, so using the more general CWE-787 is more appropriate.\n*   CWE-863 (Incorrect Authorization), CWE-285 (Improper Authorization), CWE-639 (Authorization Bypass Through User-Controlled Key), CWE-306 (Missing Authentication for Critical Function): The vulnerability description explicitly states that authentication is not required, meaning it's not an authorization or authentication issue.",
  "analysis_with_relationships": "# Summary\n| CWE ID  | CWE Name                                                                                    | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :------- | :------------------------------------------------------------------------------------------ | :--------- | :---------------------- | :------------------------------ | :------------------------------ |\n| CWE-787 | Out-of-bounds Write                                                                       | 0.90       | Base                    | Primary CWE                      | Allowed                       |\n| CWE-1284 | Improper Validation of Specified Quantity in Input                                       | 0.70       | Base                    | Secondary Candidate             | Allowed                       |\n| CWE-20  | Improper Input Validation                                                                 | 0.60       | Class                   | Secondary Candidate             | Discouraged                    |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.80\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is CWE-787 (Out-of-bounds Write), which stems from a **lack of proper validation of user-supplied data**. This **lack of proper validation** can be seen as a form of **improper input validation** (CWE-20), but the resulting **memory corruption** leading to an out-of-bounds write provides more specific details of the root cause. CWE-787 is a child of CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer), indicating a more general class of memory safety issues. Since we have the specific cause that the user supplied data was not validated, then we can also add CWE-1284 (Improper Validation of Specified Quantity in Input) as a secondary weakness that resulted in CWE-787.\n\n```mermaid\ngraph TD\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe20[\"CWE-20: Improper Input Validation\"]\n    cwe1284[\"CWE-1284: Improper Validation of Specified Quantity in Input\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations\"]\n\n    cwe787 -->|CHILDOF| cwe119\n    cwe787 <--|ROOT_CAUSE| cwe1284\n    cwe1284 -->|CHILDOF| cwe20\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe787 primary\n    class cwe20,cwe1284 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **lack of proper validation of user-supplied data** (CWE-1284), leading to **memory corruption** and ultimately an **out-of-bounds write** (CWE-787). This results in a denial-of-service condition.\n\nCWE-1284 (Improper Validation of Specified Quantity in Input) -> CWE-787 (Out-of-bounds Write) -> Denial of Service\n\n## Summary of Analysis\nThe analysis is based on the vulnerability description and CVE reference details, which clearly point to a **lack of proper validation of user-supplied data** in DCM file parsing leading to **memory corruption**. The primary CWE is CWE-787 (Out-of-bounds Write) because the issue results from the **lack of proper validation of user-supplied data**, which can result in a memory corruption condition.\nThe retriever results also show CWE-787 as the top candidate, and it is at the Base level of abstraction, which is the preferred level.\nThe provided evidence supports this conclusion with high confidence.\n\nThe selection of CWE-787 is at the optimal level of specificity because it directly describes the **memory corruption** issue. While **improper input validation** (CWE-20) is a contributing factor, it's a more general weakness. The problem isn't simply that input isn't validated, but that a specific type of invalid input leads to an out-of-bounds write. Similarly, while CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer) is a parent of CWE-787, it doesn't capture the precise nature of the vulnerability.\nCWE-1284, *Improper Validation of Specified Quantity in Input*, is added because the user supplied data was not validated for a quantity and size and length.\n\nOther CWEs Considered and Rejected:\n\n*   CWE-20 (Improper Input Validation): While input validation is the root cause, it is too general, and we have a more specific consequence (out-of-bounds write).\n*   CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer): This is a parent of CWE-787 and is less specific.\n*   CWE-476 (NULL Pointer Dereference): Not applicable as the issue is related to memory corruption due to invalid input and not dereferencing NULL pointers.\n*   CWE-770 (Allocation of Resources Without Limits or Throttling): Not applicable as the issue isn't related to resource allocation.\n*   CWE-73 (External Control of File Name or Path): Not applicable as the issue isn't related to path manipulation.\n*   CWE-121 (Stack-based Buffer Overflow) and CWE-122 (Heap-based Buffer Overflow): These are specific types of buffer overflows, but the description only mentions memory corruption and out-of-bounds write, so using the more general CWE-787 is more appropriate.\n*   CWE-863 (Incorrect Authorization), CWE-285 (Improper Authorization), CWE-639 (Authorization Bypass Through User-Controlled Key), CWE-306 (Missing Authentication for Critical Function): The vulnerability description explicitly states that authentication is not required, meaning it's not an authorization or authentication issue.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-1284:**\n- 1284 (Improper Validation of Specified Quantity in Input) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "787",
        "name": "Out-of-bounds Write",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Memory Corruption",
        "match_reason": "exact_match_compound_part_0"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "20",
        "name": "Improper Input Validation",
        "source": "sparse"
      },
      "similarity": 628.0966991771525
    },
    {
      "metadata": {
        "doc_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "source": "sparse"
      },
      "similarity": 595.4210959742743
    },
    {
      "metadata": {
        "doc_id": "119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "source": "sparse"
      },
      "similarity": 566.6270322426287
    },
    {
      "metadata": {
        "doc_id": "121",
        "name": "Stack-based Buffer Overflow",
        "source": "sparse"
      },
      "similarity": 560.4498790037252
    },
    {
      "metadata": {
        "doc_id": "122",
        "name": "Heap-based Buffer Overflow",
        "source": "sparse"
      },
      "similarity": 555.7057474300964
    },
    {
      "metadata": {
        "doc_id": "476",
        "name": "NULL Pointer Dereference",
        "source": "sparse"
      },
      "similarity": 553.5930013730426
    },
    {
      "metadata": {
        "doc_id": "125",
        "name": "Out-of-bounds Read",
        "source": "sparse"
      },
      "similarity": 552.2723916815937
    },
    {
      "metadata": {
        "doc_id": "770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "type": "Base",
        "original_content": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.",
        "keyphrase_source": "weakness:Memory Corruption",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5292970309711456,
            "graph": 2.8187292927717302
          }
        }
      },
      "similarity": 0.5292970309711456
    },
    {
      "doc_id": "73",
      "text": "CWE-73: External Control of File Name or Path",
      "score": 2.8651999999999997,
      "metadata": {
        "doc_id": "73",
        "name": "External Control of File Name or Path",
        "type": "base",
        "original_content": "CWE-73: External Control of File Name or Path",
        "relationships": [
          {
            "source_id": "73",
            "target_id": "114",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "59",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "434",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "41",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "22",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "20",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "700"
            }
          },
          {
            "source_id": "73",
            "target_id": "610",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "642",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "99",
            "target_id": "73",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "642",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "610",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "59",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "434",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "22",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "20",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "700"
            }
          },
          {
            "source_id": "114",
            "target_id": "73",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.7200000000000001,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "22",
                  "73",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "22"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "20",
                  "73",
                  "PARENTOF"
                ]
              ],
              "score": 0.7200000000000001,
              "type": "abstraction_path_down",
              "source": "20"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "22",
                  "73",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "22"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "73",
                  "22",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "22"
            }
          }
        },
        "abstraction_level": "base",
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.8651999999999997
          }
        }
      },
      "similarity": 2.8651999999999997
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-1284",
      "CWE-476",
      "CWE-121",
      "CWE-770",
      "CWE-639",
      "CWE-787",
      "CWE-73",
      "CWE-306",
      "CWE-285",
      "CWE-122",
      "CWE-20",
      "CWE-119"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}