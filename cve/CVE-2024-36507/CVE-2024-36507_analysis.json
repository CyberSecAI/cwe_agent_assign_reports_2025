{
  "cve_id": "CVE-2024-36507",
  "description": "A **untrusted search path** in Fortinet FortiClientWindows versions 7.4.0, versions 7.2.4 through 7.2.0, versions 7.0.12 through 7.0.0 allows an attacker to run arbitrary code via **DLL hijacking** and social engineering.",
  "key_phrases": {
    "rootcause": "untrusted search path",
    "weakness": "DLL hijacking",
    "impact": "run arbitrary code",
    "vector": "DLL hijacking",
    "attacker": "attacker",
    "product": "Fortinet FortiClientWindows",
    "version": [
      "['7.4.0'",
      "'7.2.4 through 7.2.0'",
      "'7.0.12 through 7.0.0']"
    ],
    "component": ""
  },
  "reference_content": "- **Root cause of vulnerability:** An untrusted search path vulnerability (CWE-426) exists in FortiClient Windows. This means that when the FortiClient online installer loads, it searches for required DLL files in locations that an attacker might control.\n- **Weaknesses/vulnerabilities present:** DLL hijacking, an untrusted search path vulnerability.\n- **Impact of exploitation:** An attacker can execute arbitrary code by placing a malicious DLL in a location where the FortiClient installer will load it. This can lead to unauthorized code execution on the victim's machine.\n- **Attack vectors:** The attacker needs to place a malicious DLL file in a location that the FortiClient installer searches before finding the legitimate DLL. This requires social engineering to trick a user into running the modified installer.\n- **Required attacker capabilities/position:** The attacker needs to have local access and the ability to place a malicious DLL in a location that is searched by the FortiClient installer. They must also trick the user into running the malicious installer.\n\n**Additional Information:**\n- The vulnerability affects FortiClient Windows versions 7.0.0 through 7.0.12, 7.2.0 through 7.2.4 and 7.4.0.\n- The vulnerability is classified as Medium severity with a CVSSv3 score of 6.7\n- The vulnerability was reported by Aleksandar Marceta-Pavlovic from WKO Inhouse GmbH.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-426 | Untrusted Search Path | 1.0 | Base | Allowed | Primary CWE |\n| CWE-427 | Uncontrolled Search Path Element | 0.7 | Base | Allowed | Secondary Candidate |\n| CWE-434 | Unrestricted Upload of File with Dangerous Type | 0.3 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-426, which is a base level CWE. CWE-427 is a peer of CWE-426, and both are children of CWE-668. The vulnerability description directly states that an **untrusted search path** is the root cause, making CWE-426 the most appropriate choice. The relationship with CWE-427 indicates a similar but slightly different weakness.\n\n```mermaid\ngraph TD\n    cwe426[\"CWE-426: Untrusted Search Path\"]\n    cwe427[\"CWE-427: Uncontrolled Search Path Element\"]\n    cwe668[\"CWE-668: Exposure of Resource to Wrong Sphere\"]\n    \n    cwe426 -->|CHILDOF| cwe668\n    cwe427 -->|CHILDOF| cwe668\n    cwe426 -- PEEROF --> cwe427\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe426 primary\n    class cwe427 secondary\n    class cwe668 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with an **untrusted search path** (CWE-426). This leads to **DLL hijacking**, which allows an attacker to run arbitrary code. The root cause is the **untrusted search path**, and the impact is arbitrary code execution.\n\nCWE-426 (Untrusted Search Path) -> DLL Hijacking -> Arbitrary Code Execution\n\n## Summary of Analysis\nThe vulnerability description clearly indicates an **untrusted search path** as the root cause, which directly aligns with CWE-426. The \"CVE Reference Links Content Summary\" reinforces this by stating, \"An **untrusted search path vulnerability** (CWE-426) exists in FortiClient Windows.\" The retriever results also list CWE-426 as a top candidate. The relationship analysis shows that CWE-426 is a base-level CWE and is the most specific and accurate representation of the weakness.\n\nCWE-427 (Uncontrolled Search Path Element) was considered because it is closely related to CWE-426, but CWE-426 is a more precise description of the vulnerability. CWE-434 (Unrestricted Upload of File with Dangerous Type) was considered because the attacker places a malicious DLL, but the root cause is not related to the upload itself.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-427: Uncontrolled Search Path Element\n**Abstraction Level**: Base\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nThe product uses a fixed or controlled search path to find resources, but one or more locations in that path can be under the control of unintended actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-426: Untrusted Search Path\n**Abstraction Level**: Base\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe product searches for critical resources using an externally-supplied search path that can point to resources that are not under the product's direct control.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: base\n**Similarity Score**: 2.21\n**Source**: graph\n\n**Description**:\nCWE-434: Unrestricted Upload of File with Dangerous Type\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**Relationships**:\n- CANFOLLOW -> CWE-73\n- CANFOLLOW -> CWE-184\n- CANFOLLOW -> CWE-183\n- PEEROF -> CWE-430\n- PEEROF -> CWE-436",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-426 | Untrusted Search Path | 1.0 | Base | Allowed | Primary CWE |\n| CWE-427 | Uncontrolled Search Path Element | 0.7 | Base | Allowed | Secondary Candidate |\n| CWE-434 | Unrestricted Upload of File with Dangerous Type | 0.3 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-426, which is a base level CWE. CWE-427 is a peer of CWE-426, and both are children of CWE-668. The vulnerability description directly states that an **untrusted search path** is the root cause, making CWE-426 the most appropriate choice. The relationship with CWE-427 indicates a similar but slightly different weakness.\n\n```mermaid\ngraph TD\n    cwe426[\"CWE-426: Untrusted Search Path\"]\n    cwe427[\"CWE-427: Uncontrolled Search Path Element\"]\n    cwe668[\"CWE-668: Exposure of Resource to Wrong Sphere\"]\n    \n    cwe426 -->|CHILDOF| cwe668\n    cwe427 -->|CHILDOF| cwe668\n    cwe426 -- PEEROF --> cwe427\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe426 primary\n    class cwe427 secondary\n    class cwe668 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with an **untrusted search path** (CWE-426). This leads to **DLL hijacking**, which allows an attacker to run arbitrary code. The root cause is the **untrusted search path**, and the impact is arbitrary code execution.\n\nCWE-426 (Untrusted Search Path) -> DLL Hijacking -> Arbitrary Code Execution\n\n## Summary of Analysis\nThe vulnerability description clearly indicates an **untrusted search path** as the root cause, which directly aligns with CWE-426. The \"CVE Reference Links Content Summary\" reinforces this by stating, \"An **untrusted search path vulnerability** (CWE-426) exists in FortiClient Windows.\" The retriever results also list CWE-426 as a top candidate. The relationship analysis shows that CWE-426 is a base-level CWE and is the most specific and accurate representation of the weakness.\n\nCWE-427 (Uncontrolled Search Path Element) was considered because it is closely related to CWE-426, but CWE-426 is a more precise description of the vulnerability. CWE-434 (Unrestricted Upload of File with Dangerous Type) was considered because the attacker places a malicious DLL, but the root cause is not related to the upload itself.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-427: Uncontrolled Search Path Element\n**Abstraction Level**: Base\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nThe product uses a fixed or controlled search path to find resources, but one or more locations in that path can be under the control of unintended actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-426: Untrusted Search Path\n**Abstraction Level**: Base\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe product searches for critical resources using an externally-supplied search path that can point to resources that are not under the product's direct control.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: base\n**Similarity Score**: 2.21\n**Source**: graph\n\n**Description**:\nCWE-434: Unrestricted Upload of File with Dangerous Type\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**Relationships**:\n- CANFOLLOW -> CWE-73\n- CANFOLLOW -> CWE-184\n- CANFOLLOW -> CWE-183\n- PEEROF -> CWE-430\n- PEEROF -> CWE-436\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-183:**\n- 183 (Permissive List of Allowed Inputs) - ROOT\n\n\n**Chain starting from CWE-427:**\n- 427 (Uncontrolled Search Path Element) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "427",
        "name": "Uncontrolled Search Path Element",
        "source": "sparse"
      },
      "similarity": 274.499192814647
    },
    {
      "metadata": {
        "doc_id": "73",
        "name": "External Control of File Name or Path",
        "source": "sparse"
      },
      "similarity": 223.42100152506413
    },
    {
      "metadata": {
        "doc_id": "426",
        "name": "Untrusted Search Path",
        "source": "sparse"
      },
      "similarity": 213.71388185047363
    },
    {
      "metadata": {
        "doc_id": "23",
        "name": "Relative Path Traversal",
        "source": "sparse"
      },
      "similarity": 207.73202767010275
    },
    {
      "metadata": {
        "doc_id": "113",
        "name": "Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')",
        "source": "sparse"
      },
      "similarity": 204.48781142439785
    },
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "sparse"
      },
      "similarity": 199.13552052674453
    },
    {
      "metadata": {
        "doc_id": "94",
        "name": "Improper Control of Generation of Code ('Code Injection')",
        "source": "sparse"
      },
      "similarity": 194.41412825337113
    },
    {
      "metadata": {
        "doc_id": "95",
        "name": "Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
        "source": "sparse"
      },
      "similarity": 191.88729654734638
    },
    {
      "metadata": {
        "doc_id": "428",
        "name": "Unquoted Search Path or Element",
        "type": "Base",
        "original_content": "The product uses a search path that contains an unquoted element, in which the element contains whitespace or other separators. This can cause the product to access resources in a parent path.",
        "keyphrase_source": "rootcause:untrusted search path",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5338998557478756,
            "graph": 2.414012513152669
          }
        }
      },
      "similarity": 0.5338998557478756
    },
    {
      "doc_id": "98",
      "text": "CWE-98: Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')",
      "score": 2.688,
      "metadata": {
        "doc_id": "98",
        "name": "Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')",
        "type": "variant",
        "original_content": "CWE-98: Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')",
        "relationships": [
          {
            "source_id": "98",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "473",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "456",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "426",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "94",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "829",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "706",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "94",
            "target_id": "98",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "829",
            "target_id": "98",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "706",
            "target_id": "98",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "473",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "456",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0,
          "peer_group": 0.9
        },
        "abstraction_factor": 1.2,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "peer_relationship"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "73",
                  "98",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "73"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "73",
                  "98",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "73"
            },
            "peer_relationship": {
              "path": [
                [
                  "98",
                  "426",
                  "CANALSOBE"
                ]
              ],
              "score": 0.9,
              "type": "peer_relationship",
              "source": "426"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.688
          }
        }
      },
      "similarity": 2.688
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-183",
      "CWE-427",
      "CWE-426",
      "CWE-73",
      "CWE-436",
      "CWE-668",
      "CWE-184",
      "CWE-430",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}