{
  "query": "oqs-provider is a provider for the OpenSSL 3 cryptography library that adds support for post-quantum cryptography in TLS, X.509, and S/MIME using post-quantum algorithms from liboqs. Flaws have been identified in the way oqs-provider handles lengths decoded with DECODE_UINT32 at the start of serialized hybrid (traditional + post-quantum) keys and signatures. Unchecked length values are later used for memory reads and writes malformed input can lead to crashes or information leakage. Handling of plain/non-hybrid PQ key operation is not affected. This issue has been patched in in v0.6.1. All users are advised to upgrade. There are no workarounds for this issue.",
  "count": 11,
  "results": [
    {
      "cwe_id": "327",
      "name": "Use of a Broken or Risky Cryptographic Algorithm",
      "abstraction": "Class",
      "score": 586.4018252608271,
      "original_score": 586.4018252608271,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "abstraction": "Base",
      "score": 521.4249925988235,
      "original_score": 521.4249925988235,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "abstraction": "Base",
      "score": 516.9303451097851,
      "original_score": 516.9303451097851,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1390",
      "name": "Weak Authentication",
      "abstraction": "Class",
      "score": 504.3663299240375,
      "original_score": 504.3663299240375,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "347",
      "name": "Improper Verification of Cryptographic Signature",
      "abstraction": "Base",
      "score": 503.8266964850968,
      "original_score": 503.8266964850968,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "203",
      "name": "Observable Discrepancy",
      "abstraction": "Base",
      "score": 501.74442809151026,
      "original_score": 501.74442809151026,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "201",
      "name": "Insertion of Sensitive Information Into Sent Data",
      "abstraction": "Base",
      "score": 500.1907361942668,
      "original_score": 500.1907361942668,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "abstraction": "Class",
      "score": 497.3341262849826,
      "original_score": 497.3341262849826,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 497.3100316649459,
      "original_score": 497.3100316649459,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "287",
      "name": "Improper Authentication",
      "abstraction": "Class",
      "score": 497.24176224608726,
      "original_score": 497.24176224608726,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "209",
      "name": "Generation of Error Message Containing Sensitive Information",
      "abstraction": "Base",
      "score": 165.44445751430175,
      "original_score": 165.44445751430175,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 165.44445751430175,
    "max": 586.4018252608271,
    "mean": 481.11052103406035,
    "median": 501.74442809151026,
    "count": 11
  }
}