{
  "retriever": "dense",
  "query": "secp256k1-node is a Node.js binding for an Optimized C library for EC operations on curve secp256k1. In `elliptic`-based version, `loadUncompressedPublicKey` has a check that the public key is on the curve. Prior to versions 5.0.1, 4.0.4, and 3.8.1, however, `loadCompressedPublicKey` is missing that check. That allows the attacker to use public keys on low-cardinality curves to extract enough information to fully restore the private key from as little as 11 ECDH sessions, and very cheaply on compute power. Other operations on public keys are also affected, including e.g. `publicKeyVerify()` incorrectly returning `true` on those invalid keys, and e.g. `publicKeyTweakMul()` also returning predictable outcomes allowing to restore the tweak. Versions 5.0.1, 4.0.4, and 3.8.1 contain a fix for the issue.",
  "keyphrases": {
    "rootcause": [
      "missing public key curve check"
    ]
  },
  "timestamp": "2025-07-13 19:05:06",
  "cve_id": "CVE-2024-48930",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "325",
      "name": "Missing Cryptographic Step",
      "type": "Base",
      "score": 0.4532020750652771
    },
    {
      "cwe_id": "335",
      "name": "Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)",
      "type": "Base",
      "score": 0.44913706431321243
    },
    {
      "cwe_id": "1394",
      "name": "Use of Default Cryptographic Key",
      "type": "Base",
      "score": 0.43649118357932565
    },
    {
      "cwe_id": "780",
      "name": "Use of RSA Algorithm without OAEP",
      "type": "Variant",
      "score": 0.43636363782812254
    },
    {
      "cwe_id": "327",
      "name": "Use of a Broken or Risky Cryptographic Algorithm",
      "type": "Class",
      "score": 0.434366215838662
    },
    {
      "cwe_id": "409",
      "name": "Improper Handling of Highly Compressed Data (Data Amplification)",
      "type": "Base",
      "score": 0.43171280337024887
    },
    {
      "cwe_id": "1291",
      "name": "Public Key Re-Use for Signing both Debug and Production Code",
      "type": "Base",
      "score": 0.4205554277439033
    },
    {
      "cwe_id": "1240",
      "name": "Use of a Cryptographic Primitive with a Risky Implementation",
      "type": "Base",
      "score": 0.4173875709454021
    },
    {
      "cwe_id": "834",
      "name": "Excessive Iteration",
      "type": "Class",
      "score": 0.4140309256891325
    },
    {
      "cwe_id": "347",
      "name": "Improper Verification of Cryptographic Signature",
      "type": "Base",
      "score": 0.41118323537747975
    },
    {
      "cwe_id": "194",
      "name": "Unexpected Sign Extension",
      "type": "Variant",
      "score": 0.40056304254059094
    },
    {
      "cwe_id": "195",
      "name": "Signed to Unsigned Conversion Error",
      "type": "Variant",
      "score": 0.3926038364786202
    },
    {
      "cwe_id": "322",
      "name": "Key Exchange without Entity Authentication",
      "type": "Base",
      "score": 0.3913501030063803
    },
    {
      "cwe_id": "295",
      "name": "Improper Certificate Validation",
      "type": "Base",
      "score": 0.3880789534888544
    },
    {
      "cwe_id": "703",
      "name": "Improper Check or Handling of Exceptional Conditions",
      "type": "Pillar",
      "score": 0.38383210296683307
    },
    {
      "cwe_id": "337",
      "name": "Predictable Seed in Pseudo-Random Number Generator (PRNG)",
      "type": "Variant",
      "score": 0.38145130007706557
    },
    {
      "cwe_id": "1339",
      "name": "Insufficient Precision or Accuracy of a Real Number",
      "type": "Base",
      "score": 0.3813463660195239
    },
    {
      "cwe_id": "328",
      "name": "Use of Weak Hash",
      "type": "Base",
      "score": 0.3802402212053878
    },
    {
      "cwe_id": "1261",
      "name": "Improper Handling of Single Event Upsets",
      "type": "Base",
      "score": 0.3765841478666583
    },
    {
      "cwe_id": "331",
      "name": "Insufficient Entropy",
      "type": "Base",
      "score": 0.3755989308164879
    }
  ]
}