{
  "vulnerability_info": "VulnerabilityInfo(cve_id='CVE-2025-29743', description='D-Link DIR-816 A2V1.1.0B05 was found to contain a **command injection** in /goform/delRouting.', key_phrases={'rootcause': '', 'weakness': 'command injection', 'impact': '', 'vector': '', 'attacker': '', 'product': 'D-Link DIR-816', 'version': 'A2V1.1.0B05', 'component': '/goform/delRouting'}, reference_content='UNRELATED', similar_info={'cwe_distribution': {}, 'cwe_consensus': '', 'similarity_stats': {'thresholds': [], 'total_samples_by_threshold': {}, 'top_cwes_by_threshold': {}}}, similarity_summary=SimilarityInsight(consensus_cwe='', top_cwes=[], confidence_levels={}, total_samples=0), analysis='', analysis_with_relationships='', criticism='', resolution='', relevant_cwes=[{'metadata': {'doc_id': '77', 'name': \"Improper Neutralization of Special Elements used in a Command ('Command Injection')\", 'source': 'alternate_terms', 'original_match': 'AlternateTerms: Command injection', 'match_reason': 'exact_match_whole_phrase'}, 'similarity': 1000.0, 'alternate_term_match': True}, {'metadata': {'doc_id': '78', 'name': \"Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')\", 'source': 'alternate_terms', 'original_match': 'AlternateTerms: OS Command Injection', 'match_reason': 'phrase_in_term_whole_phrase'}, 'similarity': 700.0, 'alternate_term_match': True}, {'metadata': {'doc_id': '121', 'name': 'Stack-based Buffer Overflow', 'source': 'sparse'}, 'similarity': np.float64(109.23438345945085)}, {'metadata': {'doc_id': '426', 'name': 'Untrusted Search Path', 'source': 'sparse'}, 'similarity': np.float64(94.56104726448638)}, {'metadata': {'doc_id': '138', 'name': 'Improper Neutralization of Special Elements', 'source': 'sparse'}, 'similarity': np.float64(91.22587651898233)}, {'metadata': {'doc_id': '790', 'name': 'Improper Filtering of Special Elements', 'type': 'Class', 'original_content': 'The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.', 'keyphrase_source': 'weakness:command injection', 'source': 'dense', 'mapping_notes': {'usage': 'Allowed-with-Review', 'rationale': 'This CWE entry is a Class and might have Base-level children that would be more appropriate', 'comments': 'Examine children of this entry to see if there is a better fit', 'reasons': ['Abstraction']}, 'score_info': {'retrievers': ['dense', 'sparse'], 'retriever_count': 2, 'normalized_scores': {'dense': 0.5421319818299566, 'sparse': np.float64(85.21118989842024)}}}, 'similarity': 0.5421319818299566}, {'doc_id': '98', 'text': \"CWE-98: Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')\", 'score': 2.2800000000000002, 'metadata': {'doc_id': '98', 'name': \"Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')\", 'type': 'variant', 'original_content': \"CWE-98: Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')\", 'relationships': [{'source_id': '98', 'target_id': '73', 'label': 'CANFOLLOW', 'properties': {'view_id': '1000'}}, {'source_id': '98', 'target_id': '473', 'label': 'CANFOLLOW', 'properties': {'view_id': '1000'}}, {'source_id': '98', 'target_id': '456', 'label': 'CANFOLLOW', 'properties': {'view_id': '1000'}}, {'source_id': '98', 'target_id': '425', 'label': 'CANFOLLOW', 'properties': {'view_id': '1000'}}, {'source_id': '98', 'target_id': '184', 'label': 'CANFOLLOW', 'properties': {'view_id': '1000'}}, {'source_id': '98', 'target_id': '426', 'label': 'CANALSOBE', 'properties': {'view_id': '1000'}}, {'source_id': '98', 'target_id': '94', 'label': 'CANPRECEDE', 'properties': {'view_id': '1000'}}, {'source_id': '98', 'target_id': '829', 'label': 'CHILDOF', 'properties': {'ordinal': 'Primary', 'view_id': '1000'}}, {'source_id': '98', 'target_id': '706', 'label': 'CHILDOF', 'properties': {'view_id': '1000'}}, {'source_id': '94', 'target_id': '98', 'label': 'CANFOLLOW', 'properties': {'view_id': '1000'}}, {'source_id': '829', 'target_id': '98', 'label': 'PARENTOF', 'properties': {'ordinal': 'Primary', 'view_id': '1000'}}, {'source_id': '73', 'target_id': '98', 'label': 'CANPRECEDE', 'properties': {'view_id': '1000'}}, {'source_id': '706', 'target_id': '98', 'label': 'PARENTOF', 'properties': {'view_id': '1000'}}, {'source_id': '473', 'target_id': '98', 'label': 'CANPRECEDE', 'properties': {'view_id': '1000'}}, {'source_id': '456', 'target_id': '98', 'label': 'CANPRECEDE', 'properties': {'view_id': '1000'}}, {'source_id': '425', 'target_id': '98', 'label': 'CANPRECEDE', 'properties': {'view_id': '1000'}}, {'source_id': '184', 'target_id': '98', 'label': 'CANPRECEDE', 'properties': {'view_id': '1000'}}], 'score_components': {'relationship_chain': 0.8, 'sequence_path': 0.8, 'peer_group': 0.9}, 'abstraction_factor': 1.2, 'graph_path_info': {'path_types': ['relationship_chain', 'vulnerability_sequence_forward', 'peer_relationship'], 'best_paths': {'relationship_chain': {'path': [('78', '184', 'CANFOLLOW'), ('184', '98', 'CANPRECEDE')], 'score': 0.8, 'type': 'relationship_chain', 'source': '78'}, 'vulnerability_sequence_forward': {'path': [('78', '184', 'CANFOLLOW'), ('184', '98', 'CANPRECEDE')], 'score': 0.8, 'type': 'vulnerability_sequence_forward', 'source': '78'}, 'peer_relationship': {'path': [('98', '426', 'CANALSOBE')], 'score': 0.9, 'type': 'peer_relationship', 'source': '426'}}}, 'position': 'after', 'sources': ['graph'], 'source': 'graph', 'mapping_notes': {'usage': 'Allowed', 'rationale': 'This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.', 'comments': \"Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\", 'reasons': ['Acceptable-Use']}, 'score_info': {'retrievers': ['graph'], 'retriever_count': 1, 'normalized_scores': {'graph': 2.2800000000000002}}}, 'similarity': 2.2800000000000002}, {'metadata': {'doc_id': '89', 'name': \"Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\", 'source': 'sparse'}, 'similarity': np.float64(91.01956869206971)}, {'metadata': {'doc_id': '259', 'name': 'Use of Hard-coded Password', 'source': 'sparse'}, 'similarity': np.float64(87.74115526296906)}, {'metadata': {'doc_id': '116', 'name': 'Improper Encoding or Escaping of Output', 'source': 'sparse'}, 'similarity': np.float64(86.1787009146509)}], identified_cwes={'analyzer': [], 'critic_additional': []})",
  "retrieval_results": {
    "has_multiple_keyphrases": false,
    "raw_search_results": {
      "all_results": [
        {
          "metadata": {
            "doc_id": "78",
            "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
            "type": "Base",
            "original_content": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
            "keyphrase_source": "weakness:command injection",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse",
                "graph"
              ],
              "retriever_count": 3,
              "normalized_scores": {
                "dense": 0.6110023594431819,
                "sparse": 700.0,
                "graph": 1.7428713778815073
              }
            }
          },
          "similarity": 0.6110023594431819
        },
        {
          "metadata": {
            "doc_id": "77",
            "name": "Improper Neutralization of Special Elements used in a Command ('Command Injection')",
            "type": "Class",
            "original_content": "The product constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component.",
            "keyphrase_source": "weakness:command injection",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed-with-Review",
              "rationale": "CWE-77 is often misused when OS command injection (CWE-78) was intended instead [REF-1287].",
              "comments": "Ensure that the analysis focuses on the root-cause error that allows the execution of commands, as there are many weaknesses that can lead to this consequence. See Terminology Notes. If the weakness involves a command language besides OS shell invocation, then CWE-77 could be used.",
              "reasons": [
                "Frequent Misuse"
              ],
              "suggestions": [
                {
                  "CweID": "78",
                  "Comment": "OS Command Injection"
                }
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "dense": 0.5919752449753382,
                "sparse": 1000.0
              }
            }
          },
          "similarity": 0.5919752449753382
        },
        {
          "metadata": {
            "doc_id": "121",
            "name": "Stack-based Buffer Overflow",
            "type": "Variant",
            "original_content": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
            "keyphrase_source": "weakness:command injection",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "dense": 0.5552101544549111,
                "sparse": 109.23438345945085
              }
            }
          },
          "similarity": 0.5552101544549111
        },
        {
          "metadata": {
            "doc_id": "790",
            "name": "Improper Filtering of Special Elements",
            "type": "Class",
            "original_content": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
            "keyphrase_source": "weakness:command injection",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed-with-Review",
              "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
              "comments": "Examine children of this entry to see if there is a better fit",
              "reasons": [
                "Abstraction"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "dense": 0.5421319818299566,
                "sparse": 85.21118989842024
              }
            }
          },
          "similarity": 0.5421319818299566
        },
        {
          "metadata": {
            "doc_id": "259",
            "name": "Use of Hard-coded Password",
            "type": "Variant",
            "original_content": "The product contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.",
            "keyphrase_source": "weakness:command injection",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "dense": 0.5416348097537143,
                "sparse": 87.74115526296906
              }
            }
          },
          "similarity": 0.5416348097537143
        },
        {
          "metadata": {
            "doc_id": "912",
            "name": "Hidden Functionality",
            "type": "Class",
            "original_content": "The product contains functionality that is not documented, not part of the specification, and not accessible through an interface or command sequence that is obvious to the product's users or administrators.",
            "keyphrase_source": "weakness:command injection",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed-with-Review",
              "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
              "comments": "Examine children of this entry to see if there is a better fit",
              "reasons": [
                "Abstraction"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.533127624833597
              }
            }
          },
          "similarity": 0.533127624833597
        },
        {
          "metadata": {
            "doc_id": "306",
            "name": "Missing Authentication for Critical Function",
            "type": "Base",
            "original_content": "The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.",
            "keyphrase_source": "weakness:command injection",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.511780591620396
              }
            }
          },
          "similarity": 0.511780591620396
        },
        {
          "metadata": {
            "doc_id": "1188",
            "name": "Initialization of a Resource with an Insecure Default",
            "type": "Base",
            "original_content": "The product initializes or sets a resource with a default that is intended to be changed by the administrator, but the default is not secure.",
            "keyphrase_source": "weakness:command injection",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "dense": 0.5102088704911982,
                "sparse": 26.02621927023227
              }
            }
          },
          "similarity": 0.5102088704911982
        },
        {
          "metadata": {
            "doc_id": "134",
            "name": "Use of Externally-Controlled Format String",
            "type": "Base",
            "original_content": "The product uses a function that accepts a format string as an argument, but the format string originates from an external source.",
            "keyphrase_source": "weakness:command injection",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.508809193864759
              }
            }
          },
          "similarity": 0.508809193864759
        },
        {
          "metadata": {
            "doc_id": "288",
            "name": "Authentication Bypass Using an Alternate Path or Channel",
            "type": "Base",
            "original_content": "The product requires authentication, but the product has an alternate path or channel that does not require authentication.",
            "keyphrase_source": "weakness:command injection",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.5073632765334025
              }
            }
          },
          "similarity": 0.5073632765334025
        },
        {
          "metadata": {
            "doc_id": "94",
            "name": "Improper Control of Generation of Code ('Code Injection')",
            "type": "Base",
            "original_content": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed-with-Review",
              "rationale": "This entry is frequently misused for vulnerabilities with a technical impact of \"code execution,\" which does not by itself indicate a root cause weakness, since dozens of weaknesses can enable code execution.",
              "comments": "This weakness only applies when the product's functionality intentionally constructs all or part of a code segment. It could be that executing code could be the result of other weaknesses that do not involve the construction of code segments.",
              "reasons": [
                "Frequent Misuse",
                "Frequent Misinterpretation"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "graph"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "dense": 0.5022731050833147,
                "graph": 1.186631703183716
              }
            }
          },
          "similarity": 0.5022731050833147
        },
        {
          "metadata": {
            "doc_id": "20",
            "name": "Improper Input Validation",
            "type": "Class",
            "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Discouraged",
              "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
              "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
              "reasons": [
                "Frequent Misuse"
              ],
              "suggestions": [
                {
                  "CweID": "1284",
                  "Comment": "Specified Quantity"
                },
                {
                  "CweID": "1285",
                  "Comment": "Specified Index, Position, or Offset"
                },
                {
                  "CweID": "1286",
                  "Comment": "Syntactic Correctness"
                },
                {
                  "CweID": "1287",
                  "Comment": "Specified Type"
                },
                {
                  "CweID": "1288",
                  "Comment": "Consistency within Input"
                },
                {
                  "CweID": "1289",
                  "Comment": "Unsafe Equivalence"
                },
                {
                  "CweID": "116",
                  "Comment": "Improper Encoding or Escaping of Output"
                }
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.4868820517493534
              }
            }
          },
          "similarity": 0.4868820517493534
        },
        {
          "metadata": {
            "doc_id": "401",
            "name": "Missing Release of Memory after Effective Lifetime",
            "type": "Variant",
            "original_content": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "dense": 0.4839039932245426,
                "sparse": 25.34208451259859
              }
            }
          },
          "similarity": 0.4839039932245426
        },
        {
          "metadata": {
            "doc_id": "425",
            "name": "Direct Request ('Forced Browsing')",
            "type": "Base",
            "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.4828631702038313
              }
            }
          },
          "similarity": 0.4828631702038313
        },
        {
          "metadata": {
            "doc_id": "321",
            "name": "Use of Hard-coded Cryptographic Key",
            "type": "Variant",
            "original_content": "The use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "graph"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "dense": 0.4807996292781689,
                "graph": 1.5276001298578379
              }
            }
          },
          "similarity": 0.4807996292781689
        },
        {
          "metadata": {
            "doc_id": "93",
            "name": "Improper Neutralization of CRLF Sequences ('CRLF Injection')",
            "type": "Base",
            "original_content": "The product uses CRLF (carriage return line feeds) as a special element, e.g. to separate lines or records, but it does not neutralize or incorrectly neutralizes CRLF sequences from inputs.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.47708765875651704
              }
            }
          },
          "similarity": 0.47708765875651704
        },
        {
          "metadata": {
            "doc_id": "601",
            "name": "URL Redirection to Untrusted Site ('Open Redirect')",
            "type": "Base",
            "original_content": "The web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a redirect.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.47546222778872377
              }
            }
          },
          "similarity": 0.47546222778872377
        },
        {
          "metadata": {
            "doc_id": "400",
            "name": "Uncontrolled Resource Consumption",
            "type": "Class",
            "original_content": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Discouraged",
              "rationale": "CWE-400 is intended for incorrect behaviors in which the product is expected to track and restrict how many resources it consumes, but CWE-400 is often misused because it is conflated with the \"technical impact\" of vulnerabilities in which resource consumption occurs. It is sometimes used for low-information vulnerability reports. It is a level-1 Class (i.e., a child of a Pillar).",
              "comments": "Closely analyze the specific mistake that is causing resource consumption, and perform a CWE mapping for that mistake. Consider children/descendants such as CWE-770: Allocation of Resources Without Limits or Throttling, CWE-771: Missing Reference to Active Allocated Resource, CWE-410: Insufficient Resource Pool, CWE-772: Missing Release of Resource after Effective Lifetime, CWE-834: Excessive Iteration, CWE-405: Asymmetric Resource Consumption (Amplification), and others.",
              "reasons": [
                "Frequent Misuse"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.47374860592759593
              }
            }
          },
          "similarity": 0.47374860592759593
        },
        {
          "metadata": {
            "doc_id": "22",
            "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
            "type": "Base",
            "original_content": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.4729037946031221
              }
            }
          },
          "similarity": 0.4729037946031221
        },
        {
          "metadata": {
            "doc_id": "291",
            "name": "Reliance on IP Address for Authentication",
            "type": "Variant",
            "original_content": "The product uses an IP address for authentication.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.4712697584344623
              }
            }
          },
          "similarity": 0.4712697584344623
        },
        {
          "cwe_id": "77",
          "name": "Improper Neutralization of Special Elements used in a Command ('Command Injection')",
          "description": "The product constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component.",
          "score": 1000.0,
          "matched_text": "AlternateTerms: Command injection",
          "matched_phrase": "command injection",
          "matched_term": "command injection",
          "type": "Class",
          "source": "sparse",
          "search_source": "alternate_term_match",
          "match_reason": "exact_match_whole_phrase",
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed-with-Review",
              "rationale": "CWE-77 is often misused when OS command injection (CWE-78) was intended instead [REF-1287].",
              "comments": "Ensure that the analysis focuses on the root-cause error that allows the execution of commands, as there are many weaknesses that can lead to this consequence. See Terminology Notes. If the weakness involves a command language besides OS shell invocation, then CWE-77 could be used.",
              "reasons": [
                "Frequent Misuse"
              ],
              "suggestions": [
                {
                  "CweID": "78",
                  "Comment": "OS Command Injection"
                }
              ]
            }
          }
        },
        {
          "cwe_id": "78",
          "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
          "description": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
          "score": 700.0,
          "matched_text": "AlternateTerms: OS Command Injection",
          "matched_phrase": "command injection",
          "matched_term": "os command injection",
          "type": "Base",
          "source": "sparse",
          "search_source": "alternate_term_match",
          "match_reason": "phrase_in_term_whole_phrase",
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            }
          }
        },
        {
          "cwe_id": "121",
          "name": "Stack-based Buffer Overflow",
          "description": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
          "score": 109.23438345945085,
          "matched_text": "CWE-121: Stack-based Buffer Overflow\n\nType: Variant\n\nStatus: Draft\n\nAlternative Terms:\n\nStack Overflow - \"Stack Overflow\" is often used to mean the same thing as stack-based buffer overflow, however it is also used on occasion to mean stack exhaustion, usually a result from an excessively recursive function call. Due to the ambiguity of the term, use of stack overflow to describe either circumstance is discouraged.\n\nStack Overflow - \"Stack Overflow\" is often used to mean the same thing as stack-based buffer overflow, however it is also used on occasion to mean stack exhaustion, usually a result from an excessively recursive function call. Due to the ambiguity of the term, use of stack overflow to describe either circumstance is discouraged.\n\nStack Overflow - \"Stack Overflow\" is often used to mean the same thing as stack-based buffer overflow, however it is also used on occasion to mean stack exhaustion, usually a result from an excessively recursive function call. Due to the ambiguity of the term, use of stack overflow to describe either circumstance is discouraged.\n\nDescription:\n\nA stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).\n\nReal-World Examples:\n\n- CVE-2021-35395: Stack-based buffer overflows in SFK for wifi chipset used for IoT/embedded devices, as exploited in the wild per CISA KEV.\n\nTop 25 CWE Examples:\n\n- CVE-2020-11267: Stack out-of-bounds write occurs while setting up a cipher device if the provided IV length exceeds the max limit value in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Voice & Music, Snapdragon Wearables, Snapdragon Wired Infrastructure and Networking\n\n- CVE-2020-11633: The Zscaler Client Connector for Windows prior to 2.1.2.74 had a stack based buffer overflow when connecting to misconfigured TLS servers. An adversary would potentially have been able to execute arbitrary code with system privileges.\n\n- CVE-2020-12893: Stack Buffer Overflow in AMD Graphics Driver for Windows 10 in Escape 0x15002a may lead to escalation of privilege or denial of service.\n\n- CVE-2020-12898: Stack Buffer Overflow in AMD Graphics Driver for Windows 10 may lead to escalation of privilege or denial of service.\n\n- CVE-2020-13598: FS: Buffer Overflow when enabling Long File Names in FAT_FS and calling fs_stat. Zephyr versions >= v1.14.2, >= v2.3.0 contain Stack-based Buffer Overflow (CWE-121). For more information, see https://github.com/zephyrproject-rtos/zephyr/security/advisories/GHSA-7fhv-rgxr-x56h\n\n- CVE-2020-15744: Stack-based Buffer Overflow vulnerability in the ONVIF server component of Victure PC420 smart camera allows an attacker to execute remote code on the target device. This issue affects: Victure PC420 firmware version 1.2.2 and prior versions.\n\n- CVE-2020-17541: Libjpeg-turbo all version have a stack-based buffer overflow in the \"transform\" component. A remote attacker can send a malformed jpeg file to the service and cause arbitrary code execution or denial of service of the target service.\n\n- CVE-2020-18734: A stack buffer overflow in /ddsi/q_bitset.h of Eclipse IOT Cyclone DDS Project v0.1.0 causes the DDS subscriber server to crash.\n\n- CVE-2020-18971: Stack-based Buffer Overflow in PoDoFo v0.9.6 allows attackers to cause a denial of service via the component 'src/base/PdfDictionary.cpp:65'.\n\n- CVE-2020-20746: A stack-based buffer overflow in the httpd server on Tenda AC9 V15.03.06.60_EN allows remote attackers to execute arbitrary code or cause a denial of service (DoS) via a crafted POST request to /goform/SetStaticRouteCfg.\n\n- CVE-2020-21050: Libsixel prior to v1.8.3 contains a stack buffer overflow in the function gif_process_raster at fromgif.c.\n\n- CVE-2020-21529: fig2dev 3.2.7b contains a stack buffer overflow in the bezier_spline function in genepic.c.\n\n- CVE-2020-21533: fig2dev 3.2.7b contains a stack buffer overflow in the read_textobject function in read.c.\n\n- CVE-2020-21601: libde265 v1.0.4 contains a stack buffer overflow in the put_qpel_fallback function, which can be exploited via a crafted a file.\n\n- CVE-2020-21675: A stack-based buffer overflow in the genptk_text component in genptk.c of fig2dev 3.2.7b allows attackers to cause a denial of service (DOS) via converting a xfig file into ptk format.\n\n- CVE-2020-21676: A stack-based buffer overflow in the genpstrx_text() component in genpstricks.c of fig2dev 3.2.7b allows attackers to cause a denial of service (DOS) via converting a xfig file into pstricks format.\n\n- CVE-2020-21680: A stack-based buffer overflow in the put_arrow() component in genpict2e.c of fig2dev 3.2.7b allows attackers to cause a denial of service (DOS) via converting a xfig file into pict2e format.\n\n- CVE-2020-22079: Stack-based buffer overflow in Tenda AC-10U AC1200 Router US_AC10UV1.0RTL_V15.03.06.48_multi_TDE01 allows remote attackers to execute arbitrary code via the timeZone parameter to goform/SetSysTimeCfg.\n\n- CVE-2020-22907: Stack overflow vulnerability in function jsi_evalcode_sub in jsish before 3.0.18, allows remote attackers to cause a Denial of Service via a crafted value to the execute parameter.\n\n- CVE-2020-23060: Internet Download Manager 6.37.11.1 was discovered to contain a stack buffer overflow in the Export/Import function. This vulnerability allows attackers to escalate local process privileges via a crafted ef2 file.\n\n- CVE-2020-23851: A stack-based buffer overflow vulnerability exists in ffjpeg through 2020-07-02 in the jfif_decode(void *ctxt, BMP *pb) function at ffjpeg/src/jfif.c:513:28, which could cause a denial of service by submitting a malicious jpeg image.\n\n- CVE-2020-23877: pdf2xml v2.0 was discovered to contain a stack buffer overflow in the component getObjectStream.\n\n- CVE-2020-23878: pdf2json v0.71 was discovered to contain a stack buffer overflow in the component XRef::fetch.\n\n- CVE-2020-23904: A stack buffer overflow in speexenc.c of Speex v1.2 allows attackers to cause a denial of service (DoS) via a crafted WAV file. NOTE: the vendor states \"I cannot reproduce it\" and it \"is a demo program.\n\n- CVE-2020-24870: Libraw before 0.20.1 has a stack buffer overflow via LibRaw::identify_process_dng_fields in identify.cpp.\n\n- CVE-2020-27301: A stack buffer overflow in Realtek RTL8710 (and other Ameba-based devices) can lead to remote code execution via the \"AES_UnWRAP\" function, when an attacker in Wi-Fi range sends a crafted \"Encrypted GTK\" value as part of the WPA2 4-way-handshake.\n\n- CVE-2020-27302: A stack buffer overflow in Realtek RTL8710 (and other Ameba-based devices) can lead to remote code execution via the \"memcpy\" function, when an attacker in Wi-Fi range sends a crafted \"Encrypted GTK\" value as part of the WPA2 4-way-handshake.\n\n- CVE-2020-28198: The 'id' parameter of IBM Tivoli Storage Manager Version 5 Release 2 (Command Line Administrative Interface, dsmadmc.exe) is vulnerable to an exploitable stack buffer overflow. Note: the vulnerability can be exploited when it is used in \"interactive\" mode while, cause of a max number characters limitation, it cannot be exploited in batch or command line usage (e.g. dsmadmc.exe -id=username -password=pwd). NOTE: This vulnerability only affects products that are no longer supported by the maintainer\n\n- CVE-2020-28964: Internet Download Manager 6.37.11.1 was discovered to contain a stack buffer overflow in the Search function. This vulnerability allows attackers to escalate local process privileges via unspecified vectors.\n\n- CVE-2020-35452: Apache HTTP Server versions 2.4.0 to 2.4.46 A specially crafted Digest nonce can cause a stack overflow in mod_auth_digest. There is no report of this overflow being exploitable, nor the Apache HTTP Server team could create one, though some particular compiler and/or compilation option might make it possible, with limited consequences anyway due to the size (a single byte) and the value (zero byte) of the overflow\n\n- CVE-2020-36129: AOM v2.0.1 was discovered to contain a stack buffer overflow via the component src/aom_image.c.\n\n- CVE-2020-36131: AOM v2.0.1 was discovered to contain a stack buffer overflow via the component stats/rate_hist.c.\n\n- CVE-2020-36406: uWebSockets 18.11.0 and 18.12.0 has a stack-based buffer overflow in uWS::TopicTree::trimTree (called from uWS::TopicTree::unsubscribeAll). NOTE: the vendor's position is that this is \"a minor issue or not even an issue at all\" because the developer of an application (that uses uWebSockets) should not be allowing the large number of triggered topics to accumulate\n\n- CVE-2021-0276: A stack-based Buffer Overflow vulnerability in Juniper Networks SBR Carrier with EAP (Extensible Authentication Protocol) authentication configured, allows an attacker sending specific packets causing the radius daemon to crash resulting with a Denial of Service (DoS) or leading to remote code execution (RCE). By continuously sending this specific packets, an attacker can repeatedly crash the radius daemon, causing a sustained Denial of Service (DoS). This issue affects Juniper Networks SBR Carrier: 8.4.1 versions prior to 8.4.1R19; 8.5.0 versions prior to 8.5.0R10; 8.6.0 versions prior to 8.6.0R4.\n\n- CVE-2021-0362: In aee, there is a possible memory corruption due to a stack buffer overflow. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Product: Android; Versions: Android-11; Patch ID: ALPS05457070.\n\n- CVE-2021-0657: In apusys, there is a possible out of bounds write due to a stack-based buffer overflow. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS05672103; Issue ID: ALPS05672103.\n\n- CVE-2021-1099: NVIDIA vGPU software contains a vulnerability in the Virtual GPU Manager (vGPU plugin) that could allow an attacker to cause stack-based buffer overflow and put a customized ROP gadget on the stack. Such an attack may lead to information disclosure, data tampering, or denial of service. This affects vGPU version 12.x (prior to 12.3), version 11.x (prior to 11.5) and version 8.x (prior 8.8).\n\n- CVE-2021-1967: Possible stack buffer overflow due to lack of check on the maximum number of post NAN discovery attributes while processing a NAN Match event in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Voice & Music, Snapdragon Wearables\n\n- CVE-2021-20236: A flaw was found in the ZeroMQ server in versions before 4.3.3. This flaw allows a malicious client to cause a stack buffer overflow on the server by sending crafted topic subscription requests and then unsubscribing. The highest threat from this vulnerability is to confidentiality, integrity, as well as system availability.\n\n- CVE-2021-20294: A flaw was found in binutils readelf 2.35 program. An attacker who is able to convince a victim using readelf to read a crafted file could trigger a stack buffer overflow, out-of-bounds write of arbitrary data supplied by the attacker. The highest impact of this flaw is to confidentiality, integrity, and availability.\n\n- CVE-2021-20314: Stack buffer overflow in libspf2 versions below 1.2.11 when processing certain SPF macros can lead to Denial of service and potentially code execution via malicious crafted SPF explanation messages.\n\n- CVE-2021-20349: IBM Tivoli Workload Scheduler 9.4 and 9.5 is vulnerable to a stack-based buffer overflow, caused by improper bounds checking. A local attacker could overflow a buffer and gain lower level privileges. IBM X-Force ID: 194599.\n\n- CVE-2021-20491: IBM Spectrum Protect Server 7.1 and 8.1 is subject to a stack-based buffer overflow caused by improper bounds checking during the parsing of commands. By issuing such a command with an improper parameter, an authorized administrator could overflow a buffer and cause the server to crash. IBM X-Force ID: 197792.\n\n- CVE-2021-20515: IBM Informix Dynamic Server 14.10 is vulnerable to a stack based buffer overflow, caused by improper bounds checking. A local privileged user could overflow a buffer and execute arbitrary code on the system or cause a denial of service condition. IBM X-Force ID: 198366.\n\n- CVE-2021-20546: IBM Spectrum Protect Client 8.1.0.0 through 8.1.11.0 is vulnerable to a stack-based buffer overflow, caused by improper bounds checking. A local attacker could overflow a buffer and cause the application to crash. IBM X-Force ID: 198934\n\n- CVE-2021-20572: IBM Security Identity Manager Adapters 6.0 and 7.0 are vulnerable to a stack-based buffer overflow, caused by improper bounds checking. A remote authenticated attacker could overflow the and cause the server to crash. IBM X-Force ID: 199247.\n\n- CVE-2021-21149: Stack buffer overflow in Data Transfer in Google Chrome on Linux prior to 88.0.4324.182 allowed a remote attacker to perform out of bounds memory access via a crafted HTML page.\n\n- CVE-2021-21153: Stack buffer overflow in GPU Process in Google Chrome on Linux prior to 88.0.4324.182 allowed a remote attacker to potentially perform out of bounds memory access via a crafted HTML page.\n\n- CVE-2021-21540: Dell EMC iDRAC9 versions prior to 4.40.00.00 contain a stack-based overflow vulnerability. A remote authenticated attacker could potentially exploit this vulnerability to overwrite configuration information by injecting arbitrarily large payload.\n\n- CVE-2021-21554: Dell PowerEdge R640, R740, R740XD, R840, R940, R940xa, MX740c, MX840c, and, Dell Precision 7920 Rack Workstation BIOS contain a stack-based buffer overflow vulnerability in systems with Intel Optane DC Persistent Memory installed. A local malicious user with high privileges may potentially exploit this vulnerability, leading to a denial of Service, arbitrary code execution, or information disclosure in UEFI or BIOS Preboot Environment.\n\n- CVE-2021-21556: Dell PowerEdge R640, R740, R740XD, R840, R940, R940xa, MX740c, MX840c, and T640 Server BIOS contain a stack-based buffer overflow vulnerability in systems with NVDIMM-N installed. A local malicious user with high privileges may potentially exploit this vulnerability, leading to a denial of Service, arbitrary code execution, or information disclosure in UEFI or BIOS Preboot Environment.\n\n- CVE-2021-21748: ZTE MF971R product has two stack-based buffer overflow vulnerabilities. An attacker could exploit the vulnerabilities to execute arbitrary code.\n\n- CVE-2021-21749: ZTE MF971R product has two stack-based buffer overflow vulnerabilities. An attacker could exploit the vulnerabilities to execute arbitrary code.\n\n- CVE-2021-21812: A stack-based buffer overflow vulnerability exists in the command-line-parsing HandleFileArg functionality of AT&T Labs\u2019 Xmill 0.7. Within the function HandleFileArg the argument filepattern is under control of the user who passes it in from the command line. filepattern is passed directly to strcpy copying the path provided by the user into a static sized buffer without any length checks resulting in a stack-buffer overflow. An attacker can provide malicious input to trigger these vulnerabilities.\n\n- CVE-2021-21815: A stack-based buffer overflow vulnerability exists in the command-line-parsing HandleFileArg functionality of AT&T Labs' Xmill 0.7. Within the function HandleFileArg the argument filepattern is under control of the user who passes it in from the command line. filepattern is passed directly to strcpy copying the path provided by the user into a staticly sized buffer without any length checks resulting in a stack-buffer overflow. An attacker can provide malicious input to trigger this vulnerability.\n\n- CVE-2021-21821: A stack-based buffer overflow vulnerability exists in the PDF process_fontname functionality of Accusoft ImageGear 19.9. A specially crafted malformed file can lead to code execution. An attacker can provide a malicious file to trigger this vulnerability.\n\n- CVE-2021-22130: A stack-based buffer overflow vulnerability in FortiProxy physical appliance CLI 2.0.0 to 2.0.1, 1.2.0 to 1.2.9, 1.1.0 to 1.1.6, 1.0.0 to 1.0.7 may allow an authenticated, remote attacker to perform a Denial of Service attack by running the `diagnose sys cpuset` with a large cpuset mask value. Fortinet is not aware of any successful exploitation of this vulnerability that would lead to code execution.\n\n- CVE-2021-22637: Multiple stack-based buffer overflow issues have been identified in the way the application processes project files, allowing an attacker to craft a special project file that may allow arbitrary code execution on the Tellus Lite V-Simulator and V-Server Lite (versions prior to 4.0.10.0).\n\n- CVE-2021-22666: Fatek FvDesigner Version 1.5.76 and prior is vulnerable to a stack-based buffer overflow while project files are being processed, allowing an attacker to craft a special project file that may permit arbitrary code execution.\n\n- CVE-2021-22673: The affected product is vulnerable to stack-based buffer overflow while processing over-the-air firmware updates from the CDN server, which may allow an attacker to remotely execute code on the SimpleLink Wi-Fi (MSP432E4 SDK: v4.20.00.12 and prior, CC32XX SDK v4.30.00.06 and prior, CC13X0 SDK versions prior to v4.10.03, CC13X2 and CC26XX SDK versions prior to v4.40.00, CC3200 SDK v1.5.0 and prior, CC3100 SDK v1.3.0 and prior).\n\n- CVE-2021-25139: A potential security vulnerability has been identified in the HPE Moonshot Provisioning Manager v1.20. The HPE Moonshot Provisioning Manager is an application that is installed in a VMWare or Microsoft Hyper-V environment that is used to setup and configure an HPE Moonshot 1500 chassis. This vulnerability could be remotely exploited by an unauthenticated user to cause a stack based buffer overflow using user supplied input to the `khuploadfile.cgi` CGI ELF. The stack based buffer overflow could lead to Remote Code Execution, Denial of Service, and/or compromise system integrity. **Note:** HPE recommends that customers discontinue the use of the HPE Moonshot Provisioning Manager. The HPE Moonshot Provisioning Manager application is discontinued, no longer supported, is not available to download from the HPE Support Center, and no patch is available.\n\n- CVE-2021-25178: An issue was discovered in Open Design Alliance Drawings SDK before 2021.11. A stack-based buffer overflow vulnerability exists when the recover operation is run with malformed .DXF and .DWG files. This can allow attackers to cause a crash potentially enabling a denial of service attack (Crash, Exit, or Restart) or possible code execution.\n\n- CVE-2021-25461: An improper length check in APAService prior to SMR Sep-2021 Release 1 results in stack based Buffer Overflow.\n\n- CVE-2021-25469: A possible stack-based buffer overflow vulnerability in Widevine trustlet prior to SMR Oct-2021 Release 1 allows arbitrary code execution.\n\n- CVE-2021-25478: A possible stack-based buffer overflow vulnerability in Exynos CP Chipset prior to SMR Oct-2021 Release 1 allows arbitrary memory write and code execution.\n\n- CVE-2021-26236: FastStone Image Viewer v.<= 7.5 is affected by a Stack-based Buffer Overflow at 0x005BDF49, affecting the CUR file parsing functionality (BITMAPINFOHEADER Structure, 'BitCount' file format field), that will end up corrupting the Structure Exception Handler (SEH). Attackers could exploit this issue to achieve code execution when a user opens or views a malformed/specially crafted CUR file.\n\n- CVE-2021-26561: Stack-based buffer overflow vulnerability in synoagentregisterd in Synology DiskStation Manager (DSM) before 6.2.3-25426-3 allows man-in-the-middle attackers to execute arbitrary code via syno_finder_site HTTP header.\n\n- CVE-2021-26675: A stack-based buffer overflow in dnsproxy in ConnMan before 1.39 could be used by network adjacent attackers to execute code.\n\n- CVE-2021-26709: D-Link DSL-320B-D1 devices through EU_1.25 are prone to multiple Stack-Based Buffer Overflows that allow unauthenticated remote attackers to take over a device via the login.xgi user and pass parameters. NOTE: This vulnerability only affects products that are no longer supported by the maintainer\n\n- CVE-2021-26713: A stack-based buffer overflow in res_rtp_asterisk.c in Sangoma Asterisk before 16.16.1, 17.x before 17.9.2, and 18.x before 18.2.1 and Certified Asterisk before 16.8-cert6 allows an authenticated WebRTC client to cause an Asterisk crash by sending multiple hold/unhold requests in quick succession. This is caused by a signedness comparison mismatch.\n\n- CVE-2021-26826: A stack overflow issue exists in Godot Engine up to v3.2 and is caused by improper boundary checks when loading .TGA image files. Depending on the context of the application, attack vector can be local or remote, and can lead to code execution and/or system crash.\n\n- CVE-2021-27114: An issue was discovered in D-Link DIR-816 A2 1.10 B05 devices. Within the handler function of the /goform/addassignment route, a very long text entry for the\"'s_ip\" and \"s_mac\" fields could lead to a Stack-Based Buffer Overflow and overwrite the return address.\n\n- CVE-2021-27232: The RTSPLive555.dll ActiveX control in Pelco Digital Sentry Server 7.18.72.11464 has a SetCameraConnectionParameter stack-based buffer overflow. This can be exploited by a remote attacker to potentially execute arbitrary attacker-supplied code. The victim would have to visit a malicious webpage using Internet Explorer where the exploit could be triggered.\n\n- CVE-2021-27413: Omron CX-One Versions 4.60 and prior, including CX-Server Versions 5.0.29.0 and prior, are vulnerable to a stack-based buffer overflow, which may allow an attacker to execute arbitrary code.\n\n- CVE-2021-27790: The command ipfilter in Brocade Fabric OS before Brocade Fabric OS v.9.0.1a, v8.2.3, and v8.2.0_CBN4, and v7.4.2h uses unsafe string function to process user input. Authenticated attackers can abuse this vulnerability to exploit stack-based buffer overflows, allowing execution of arbitrary code as the root user account.\n\n- CVE-2021-27799: ean_leading_zeroes in backend/upcean.c in Zint Barcode Generator 2.9.1 has a stack-based buffer overflow that is reachable from the C API through an application that includes the Zint Barcode Generator library code.\n\n- CVE-2021-28606: Adobe After Effects version 18.2 (and earlier) is affected by a Stack-based Buffer Overflow vulnerability when parsing a specially crafted file. An unauthenticated attacker could leverage this vulnerability to achieve arbitrary code execution in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file.\n\n- CVE-2021-28686: AsIO2_64.sys and AsIO2_32.sys in ASUS GPUTweak II before 2.3.0.3 allow low-privileged users to trigger a stack-based buffer overflow. This could enable low-privileged users to achieve Denial of Service via a DeviceIoControl.\n\n- CVE-2021-28797: A stack-based buffer overflow vulnerability has been reported to affect QNAP NAS devices running Surveillance Station. If exploited, this vulnerability allows attackers to execute arbitrary code. QNAP have already fixed this vulnerability in the following versions: Surveillance Station 5.1.5.4.3 (and later) for ARM CPU NAS (64bit OS) and x86 CPU NAS (64bit OS) Surveillance Station 5.1.5.3.3 (and later) for ARM CPU NAS (32bit OS) and x86 CPU NAS (32bit OS)\n\n- CVE-2021-28816: A stack buffer overflow vulnerability has been reported to affect QNAP device running QTS, QuTScloud, QuTS hero. If exploited, this vulnerability allows attackers to execute arbitrary code. We have already fixed this vulnerability in the following versions of QTS, QuTScloud, QuTS hero: QTS 4.5.4.1715 build 20210630 and later QTS 5.0.0.1716 build 20210701 and later QTS 4.3.3.1693 build 20210624 and later QTS 4.3.6.1750 build 20210730 and later QuTScloud c4.5.6.1755 and later QuTS hero h4.5.4.1771 build 20210825 and later\n\n- CVE-2021-29073: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects R8000P before 1.4.1.66, MK62 before 1.0.6.110, MR60 before 1.0.6.110, MS60 before 1.0.6.110, R7960P before 1.4.1.66, R7900P before 1.4.1.66, RAX15 before 1.0.2.82, RAX20 before 1.0.2.82, RAX45 before 1.0.2.72, RAX50 before 1.0.2.72, RAX75 before 1.0.3.106, RAX80 before 1.0.3.106, and RAX200 before 1.0.3.106.\n\n- CVE-2021-29074: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects RBW30 before 2.6.2.2, RBK852 before 3.2.17.12, RBK853 before 3.2.17.12, RBK854 before 3.2.17.12, RBR850 before 3.2.17.12, RBS850 before 3.2.17.12, RBK752 before 3.2.17.12, RBK753 before 3.2.17.12, RBK753S before 3.2.17.12, RBK754 before 3.2.17.12, RBR750 before 3.2.17.12, and RBS750 before 3.2.17.12.\n\n- CVE-2021-29075: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects RBW30 before 2.6.2.2, RBK852 before 3.2.17.12, RBK852 before 3.2.17.12, RBK852 before 3.2.17.12, RBR850 before 3.2.17.12, RBS850 before 3.2.17.12, RBK752 before 3.2.17.12, RBK753 before 3.2.17.12, RBK753S before 3.2.17.12, RBK754 before 3.2.17.12, RBR750 before 3.2.17.12, and RBS750 before 3.2.17.12.\n\n- CVE-2021-29081: Certain NETGEAR devices are affected by a stack-based buffer overflow by an unauthenticated attacker. This affects RBW30 before 2.6.2.2, RBK852 before 3.2.17.12, RBK853 before 3.2.17.12, RBK854 before 3.2.17.12, RBR850 before 3.2.17.12, RBS850 before 3.2.17.12, RBK752 before 3.2.17.12, RBK753 before 3.2.17.12, RBK753S before 3.2.17.12, RBK754 before 3.2.17.12, RBR750 before 3.2.17.12, and RBS750 before 3.2.17.12.\n\n- CVE-2021-29665: IBM Security Verify Access 20.07 is vulnerable to a stack based buffer overflow, caused by improper bounds checking which could allow a local attacker to execute arbitrary code on the system with elevated privileges.\n\n- CVE-2021-29672: IBM Spectrum Protect Client 8.1.0.0-8 through 1.11.0 is vulnerable to a stack-based buffer overflow, caused by improper bounds checking when processing the current locale settings. A local attacker could overflow a buffer and execute arbitrary code on the system with elevated privileges or cause the application to crash. IBM X-Force ID: 199479\n\n- CVE-2021-29999: An issue was discovered in Wind River VxWorks through 6.8. There is a possible stack overflow in dhcp server.\n\n- CVE-2021-30072: An issue was discovered in prog.cgi on D-Link DIR-878 1.30B08 devices. Because strcat is misused, there is a stack-based buffer overflow that does not require authentication.\n\n- CVE-2021-30188: CODESYS V2 runtime system SP before 2.4.7.55 has a Stack-based Buffer Overflow.\n\n- CVE-2021-30189: CODESYS V2 Web-Server before 1.1.9.20 has a Stack-based Buffer Overflow.\n\n- CVE-2021-30566: Stack buffer overflow in Printing in Google Chrome prior to 92.0.4515.107 allowed a remote attacker who had compromised the renderer process to potentially exploit stack corruption via a crafted HTML page.\n\n- CVE-2021-3057: A stack-based buffer overflow vulnerability exists in the Palo Alto Networks GlobalProtect app that enables a man-in-the-middle attacker to disrupt system processes and potentially execute arbitrary code with SYSTEM privileges. This issue impacts: GlobalProtect app 5.1 versions earlier than GlobalProtect app 5.1.9 on Windows; GlobalProtect app 5.2 versions earlier than GlobalProtect app 5.2.8 on Windows; GlobalProtect app 5.2 versions earlier than GlobalProtect app 5.2.8 on the Universal Windows Platform; GlobalProtect app 5.3 versions earlier than GlobalProtect app 5.3.1 on Linux.\n\n- CVE-2021-30628: Stack buffer overflow in ANGLE in Google Chrome prior to 93.0.4577.82 allowed a remote attacker to potentially exploit stack corruption via a crafted HTML page.\n\n- CVE-2021-31315: Telegram Android <7.1.0 (2090), Telegram iOS <7.1, and Telegram macOS <7.1 are affected by a Stack Based Overflow in the blit function of their custom fork of the rlottie library. A remote attacker might be able to access Telegram's stack memory out-of-bounds on a victim device via a malicious animated sticker.\n\n- CVE-2021-31321: Telegram Android <7.1.0 (2090), Telegram iOS <7.1, and Telegram macOS <7.1 are affected by a Stack Based Overflow in the gray_split_cubic function of their custom fork of the rlottie library. A remote attacker might be able to overwrite Telegram's stack memory out-of-bounds on a victim device via a malicious animated sticker.\n\n- CVE-2021-31383: In Point to MultiPoint (P2MP) scenarios within established sessions between network or adjacent neighbors the improper use of a source to destination copy write operation combined with a Stack-based Buffer Overflow on certain specific packets processed by the routing protocol daemon (RPD) of Juniper Networks Junos OS and Junos OS Evolved sent by a remote unauthenticated network attacker causes the RPD to crash causing a Denial of Service (DoS). Continued receipt and processing of these packets will create a sustained Denial of Service (DoS) condition. This issue affects: Juniper Networks Junos OS 19.2 versions prior to 19.2R3-S2; 19.3 versions prior to 19.3R2-S6, 19.3R3-S2; 19.4 versions prior to 19.4R1-S4, 19.4R2-S4, 19.4R3-S3; 20.1 versions prior to 20.1R2-S2, 20.1R3; 20.2 versions prior to 20.2R2-S3, 20.2R3; 20.3 versions prior to 20.3R2. This issue does not affect Juniper Networks Junos OS versions prior to 19.2R1. Juniper Networks Junos OS Evolved 20.1 versions prior to 20.1R3-EVO; 20.2 versions prior to 20.2R3-EVO; 20.3 versions prior to 20.3R2-EVO.\n\n- CVE-2021-31616: Insufficient length checks in the ShapeShift KeepKey hardware wallet firmware before 7.1.0 allow a stack buffer overflow via crafted messages. The overflow in ethereum_extractThorchainSwapData() in ethereum.c can circumvent stack protections and lead to code execution. The vulnerable interface is reachable remotely over WebUSB.\n\n- CVE-2021-31755: An issue was discovered on Tenda AC11 devices with firmware through 02.03.01.104_CN. A stack buffer overflow vulnerability in /goform/setmac allows attackers to execute arbitrary code on the system via a crafted post request.\n\n- CVE-2021-31756: An issue was discovered on Tenda AC11 devices with firmware through 02.03.01.104_CN. A stack buffer overflow vulnerability in /gofrom/setwanType allows attackers to execute arbitrary code on the system via a crafted post request. This occurs when input vector controlled by malicious attack get copied to the stack variable.\n\n- CVE-2021-31757: An issue was discovered on Tenda AC11 devices with firmware through 02.03.01.104_CN. A stack buffer overflow vulnerability in /goform/setVLAN allows attackers to execute arbitrary code on the system via a crafted post request.\n\n- CVE-2021-31758: An issue was discovered on Tenda AC11 devices with firmware through 02.03.01.104_CN. A stack buffer overflow vulnerability in /goform/setportList allows attackers to execute arbitrary code on the system via a crafted post request.\n\n- CVE-2021-3185: A flaw was found in the gstreamer h264 component of gst-plugins-bad before v1.18.1 where when parsing a h264 header, an attacker could cause the stack to be smashed, memory corruption and possibly code execution.\n\n- CVE-2021-31886: A vulnerability has been identified in APOGEE MBC (PPC) (BACnet) (All versions), APOGEE MBC (PPC) (P2 Ethernet) (All versions), APOGEE MEC (PPC) (BACnet) (All versions), APOGEE MEC (PPC) (P2 Ethernet) (All versions), APOGEE PXC Compact (BACnet) (All versions < V3.5.4), APOGEE PXC Compact (P2 Ethernet) (All versions < V2.8.19), APOGEE PXC Modular (BACnet) (All versions < V3.5.4), APOGEE PXC Modular (P2 Ethernet) (All versions < V2.8.19), Desigo PXC00-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC00-U (All versions >= V2.3 and < V6.30.016), Desigo PXC001-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC100-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC12-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC128-U (All versions >= V2.3 and < V6.30.016), Desigo PXC200-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC22-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC22.1-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC36.1-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC50-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC64-U (All versions >= V2.3 and < V6.30.016), Desigo PXM20-E (All versions >= V2.3 and < V6.30.016), Nucleus NET (All versions), Nucleus ReadyStart V3 (All versions < V2017.02.4), Nucleus Source Code (All versions), TALON TC Compact (BACnet) (All versions < V3.5.4), TALON TC Modular (BACnet) (All versions < V3.5.4). FTP server does not properly validate the length of the \u201cUSER\u201d command, leading to stack-based buffer overflows. This may result in Denial-of-Service conditions and Remote Code Execution. (FSMD-2021-0010)\n\n- CVE-2021-31887: A vulnerability has been identified in APOGEE MBC (PPC) (BACnet) (All versions), APOGEE MBC (PPC) (P2 Ethernet) (All versions), APOGEE MEC (PPC) (BACnet) (All versions), APOGEE MEC (PPC) (P2 Ethernet) (All versions), APOGEE PXC Compact (BACnet) (All versions < V3.5.4), APOGEE PXC Compact (P2 Ethernet) (All versions < V2.8.19), APOGEE PXC Modular (BACnet) (All versions < V3.5.4), APOGEE PXC Modular (P2 Ethernet) (All versions < V2.8.19), Desigo PXC00-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC00-U (All versions >= V2.3 and < V6.30.016), Desigo PXC001-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC100-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC12-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC128-U (All versions >= V2.3 and < V6.30.016), Desigo PXC200-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC22-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC22.1-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC36.1-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC50-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC64-U (All versions >= V2.3 and < V6.30.016), Desigo PXM20-E (All versions >= V2.3 and < V6.30.016), Nucleus NET (All versions), Nucleus ReadyStart V3 (All versions < V2017.02.4), Nucleus Source Code (All versions), TALON TC Compact (BACnet) (All versions < V3.5.4), TALON TC Modular (BACnet) (All versions < V3.5.4). FTP server does not properly validate the length of the \u201cPWD/XPWD\u201d command, leading to stack-based buffer overflows. This may result in Denial-of-Service conditions and Remote Code Execution. (FSMD-2021-0016)\n\n- CVE-2021-31888: A vulnerability has been identified in APOGEE MBC (PPC) (BACnet) (All versions), APOGEE MBC (PPC) (P2 Ethernet) (All versions), APOGEE MEC (PPC) (BACnet) (All versions), APOGEE MEC (PPC) (P2 Ethernet) (All versions), APOGEE PXC Compact (BACnet) (All versions < V3.5.4), APOGEE PXC Compact (P2 Ethernet) (All versions < V2.8.19), APOGEE PXC Modular (BACnet) (All versions < V3.5.4), APOGEE PXC Modular (P2 Ethernet) (All versions < V2.8.19), Desigo PXC00-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC00-U (All versions >= V2.3 and < V6.30.016), Desigo PXC001-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC100-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC12-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC128-U (All versions >= V2.3 and < V6.30.016), Desigo PXC200-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC22-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC22.1-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC36.1-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC50-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC64-U (All versions >= V2.3 and < V6.30.016), Desigo PXM20-E (All versions >= V2.3 and < V6.30.016), Nucleus NET (All versions), Nucleus ReadyStart V3 (All versions < V2017.02.4), Nucleus Source Code (All versions), TALON TC Compact (BACnet) (All versions < V3.5.4), TALON TC Modular (BACnet) (All versions < V3.5.4). FTP server does not properly validate the length of the \u201cMKD/XMKD\u201d command, leading to stack-based buffer overflows. This may result in Denial-of-Service conditions and Remote Code Execution. (FSMD-2021-0018)\n\n- CVE-2021-32238: Epic Games / Psyonix Rocket League <=1.95 is affected by Buffer Overflow. Stack-based buffer overflow occurs when Rocket League handles UPK object files that can result in code execution and denial of service scenario.\n\n- CVE-2021-32457: Trend Micro Home Network Security version 6.6.604 and earlier is vulnerable to an iotcl stack-based buffer overflow vulnerability which could allow an attacker to issue a specially crafted iotcl to escalate privileges on affected devices. An attacker must first obtain the ability to execute low-privileged code on the target device in order to exploit this vulnerability.\n\n- CVE-2021-32458: Trend Micro Home Network Security version 6.6.604 and earlier is vulnerable to an iotcl stack-based buffer overflow vulnerability which could allow an attacker to issue a specially crafted iotcl which could lead to code execution on affected devices. An attacker must first obtain the ability to execute low-privileged code on the target device in order to exploit this vulnerability.\n\n- CVE-2021-32943: The affected product is vulnerable to a stack-based buffer overflow, which may allow an attacker to remotely execute arbitrary code on the WebAccess/SCADA (WebAccess/SCADA versions prior to 8.4.5, WebAccess/SCADA versions prior to 9.0.1).\n\n- CVE-2021-33186: SerenityOS in test-crypto.cpp contains a stack buffer overflow which could allow attackers to obtain sensitive information.\n\n- CVE-2021-33265: D-Link DIR-809 devices with firmware through DIR-809Ax_FW1.12WWB03_20190410 were discovered to contain a stack buffer overflow vulnerability in the function FUN_80046eb4 in /formSetPortTr. This vulnerability is triggered via a crafted POST request.\n\n- CVE-2021-33266: D-Link DIR-809 devices with firmware through DIR-809Ax_FW1.12WWB03_20190410 were discovered to contain a stack buffer overflow vulnerability in the function FUN_8004776c in /formVirtualApp. This vulnerability is triggered via a crafted POST request.\n\n- CVE-2021-33267: D-Link DIR-809 devices with firmware through DIR-809Ax_FW1.12WWB03_20190410 were discovered to contain a stack buffer overflow vulnerability in the function FUN_80034d60 in /formStaticDHCP. This vulnerability is triggered via a crafted POST request.\n\n- CVE-2021-33268: D-Link DIR-809 devices with firmware through DIR-809Ax_FW1.12WWB03_20190410 were discovered to contain a stack buffer overflow vulnerability in the function sub_8003183C in /fromLogin. This vulnerability is triggered via a crafted POST request.\n\n- CVE-2021-33269: D-Link DIR-809 devices with firmware through DIR-809Ax_FW1.12WWB03_20190410 were discovered to contain a stack buffer overflow vulnerability in the function FUN_8004776c in /formVirtualServ. This vulnerability is triggered via a crafted POST request.\n\n- CVE-2021-33270: D-Link DIR-809 devices with firmware through DIR-809Ax_FW1.12WWB03_20190410 were discovered to contain a stack buffer overflow vulnerability in the function FUN_800462c4 in /formAdvFirewall. This vulnerability is triggered via a crafted POST request.\n\n- CVE-2021-33271: D-Link DIR-809 devices with firmware through DIR-809Ax_FW1.12WWB03_20190410 were discovered to contain a stack buffer overflow vulnerability in the function sub_80046EB4 in /formSetPortTr. This vulnerability is triggered via a crafted POST request.\n\n- CVE-2021-33274: D-Link DIR-809 devices with firmware through DIR-809Ax_FW1.12WWB03_20190410 were discovered to contain a stack buffer overflow vulnerability in the function FUN_80040af8 in /formWlanSetup. This vulnerability is triggered via a crafted POST request.\n\n- CVE-2021-33362: Stack buffer overflow in the hevc_parse_vps_extension function in MP4Box in GPAC 1.0.1 allows attackers to cause a denial of service or execute arbitrary code via a crafted file.\n\n- CVE-2021-33479: A stack-based buffer overflow vulnerability was discovered in gocr through 0.53-20200802 in measure_pitch() in pgm2asc.c.\n\n- CVE-2021-33481: A stack-based buffer overflow vulnerability was discovered in gocr through 0.53-20200802 in try_to_divide_boxes() in pgm2asc.c.\n\n- CVE-2021-3382: Stack buffer overflow vulnerability in gitea 1.9.0 through 1.13.1 allows remote attackers to cause a denial of service (crash) via vectors related to a file path.\n\n- CVE-2021-33833: ConnMan (aka Connection Manager) 1.30 through 1.39 has a stack-based buffer overflow in uncompress in dnsproxy.c via NAME, RDATA, or RDLENGTH (for A or AAAA).\n\n- CVE-2021-33889: OpenThread wpantund through 2021-07-02 has a stack-based Buffer Overflow because of an inconsistency in the integer data type for metric_len.\n\n- CVE-2021-34343: A stack buffer overflow vulnerability has been reported to affect QNAP device running QTS, QuTScloud, QuTS hero. If exploited, this vulnerability allows attackers to execute arbitrary code. We have already fixed this vulnerability in the following versions of QTS, QuTScloud, QuTS hero: QTS 4.5.4.1715 build 20210630 and later QTS 5.0.0.1716 build 20210701 and later QuTScloud c4.5.6.1755 and later QuTS hero h4.5.4.1771 build 20210825 and later\n\n- CVE-2021-34344: A stack buffer overflow vulnerability has been reported to affect QNAP device running QUSBCam2. If exploited, this vulnerability allows attackers to execute arbitrary code. We have already fixed this vulnerability in the following versions of QUSBCam2: QTS 4.5.4: QUSBCam2 1.1.4 ( 2021/07/30 ) and later QTS 5.0: QUSBCam2 2.0.1 ( 2021/08/03 ) and later QTS 4.3.6: QUSBCam2 1.1.4 ( 2021/07/30 ) and later QTS 4.3.3: QUSBCam2 1.1.4 ( 2021/08/06 ) and later QuTS hero 4.5.3: QUSBCam2 1.1.4 ( 2021/07/30 ) and later\n\n- CVE-2021-34345: A stack buffer overflow vulnerability has been reported to affect QNAP device running NVR Storage Expansion. If exploited, this vulnerability allows attackers to execute arbitrary code. We have already fixed this vulnerability in the following versions of NVR Storage Expansion: NVR Storage Expansion 1.0.6 ( 2021/08/03 ) and later\n\n- CVE-2021-34346: A stack buffer overflow vulnerability has been reported to affect QNAP device running NVR Storage Expansion. If exploited, this vulnerability allows attackers to execute arbitrary code. We have already fixed this vulnerability in the following versions of NVR Storage Expansion: NVR Storage Expansion 1.0.6 ( 2021/08/03 ) and later\n\n- CVE-2021-34813: Matrix libolm before 3.2.3 allows a malicious Matrix homeserver to crash a client (while it is attempting to retrieve an Olm encrypted room key backup from the homeserver) because olm_pk_decrypt has a stack-based buffer overflow. Remote code execution might be possible for some nonstandard build configurations.\n\n- CVE-2021-3500: A flaw was found in djvulibre-3.5.28 and earlier. A Stack overflow in function DJVU::DjVuDocument::get_djvu_file() via crafted djvu file may lead to application crash and other consequences.\n\n- CVE-2021-35267: NTFS-3G versions < 2021.8.22, a stack buffer overflow can occur when correcting differences in the MFT and MFTMirror allowing for code execution or escalation of privileges when setuid-root.\n\n- CVE-2021-35325: A stack overflow in the checkLoginUser function of TOTOLINK A720R A720R_Firmware v4.1.5cu.470_B20200911 allows attackers to cause a denial of service (DOS).\n\n- CVE-2021-35393: Realtek Jungle SDK version v2.x up to v3.4.14B provides a 'WiFi Simple Config' server that implements both UPnP and SSDP protocols. The binary is usually named wscd or mini_upnpd and is the successor to miniigd. The server is vulnerable to a stack buffer overflow vulnerability that is present due to unsafe parsing of the UPnP SUBSCRIBE/UNSUBSCRIBE Callback header. Successful exploitation of this vulnerability allows remote unauthenticated attackers to gain arbitrary code execution on the affected device.\n\n- CVE-2021-35395: Realtek Jungle SDK version v2.x up to v3.4.14B provides an HTTP web server exposing a management interface that can be used to configure the access point. Two versions of this management interface exists: one based on Go-Ahead named webs and another based on Boa named boa. Both of them are affected by these vulnerabilities. Specifically, these binaries are vulnerable to the following issues: - stack buffer overflow in formRebootCheck due to unsafe copy of submit-url parameter - stack buffer overflow in formWsc due to unsafe copy of submit-url parameter - stack buffer overflow in formWlanMultipleAP due to unsafe copy of submit-url parameter - stack buffer overflow in formWlSiteSurvey due to unsafe copy of ifname parameter - stack buffer overflow in formStaticDHCP due to unsafe copy of hostname parameter - stack buffer overflow in formWsc due to unsafe copy of 'peerPin' parameter - arbitrary command execution in formSysCmd via the sysCmd parameter - arbitrary command injection in formWsc via the 'peerPin' parameter Exploitability of identified issues will differ based on what the end vendor/manufacturer did with the Realtek SDK webserver. Some vendors use it as-is, others add their own authentication implementation, some kept all the features from the server, some remove some of them, some inserted their own set of features. However, given that Realtek SDK implementation is full of insecure calls and that developers tends to re-use those examples in their custom code, any binary based on Realtek SDK webserver will probably contains its own set of issues on top of the Realtek ones (if kept). Successful exploitation of these issues allows remote attackers to gain arbitrary code execution on the device.\n\n- CVE-2021-35474: Stack-based Buffer Overflow vulnerability in cachekey plugin of Apache Traffic Server. This issue affects Apache Traffic Server 7.0.0 to 7.1.12, 8.0.0 to 8.1.1, 9.0.0 to 9.0.1.\n\n- CVE-2021-3569: A stack corruption bug was found in libtpms in versions before 0.7.2 and before 0.8.0 while decrypting data using RSA. This flaw could result in a SIGBUS (bad memory access) and termination of swtpm. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-36082: ntop nDPI 3.4 has a stack-based buffer overflow in processClientServerHello.\n\n- CVE-2021-36083: KDE KImageFormats 5.70.0 through 5.81.0 has a stack-based buffer overflow in XCFImageFormat::loadTileRLE.\n\n- CVE-2021-36179: A stack-based buffer overflow in Fortinet FortiWeb version 6.3.14 and below, 6.2.4 and below allows attacker to execute unauthorized code or commands via crafted parameters in CLI command execution\n\n- CVE-2021-36186: A stack-based buffer overflow in Fortinet FortiWeb version 6.4.0, version 6.3.15 and below, 6.2.5 and below allows attacker to execute unauthorized code or commands via crafted HTTP requests\n\n- CVE-2021-36301: Dell iDRAC 9 prior to version 4.40.40.00 and iDRAC 8 prior to version 2.80.80.80 contain a Stack Buffer Overflow in Racadm. An authenticated remote attacker may potentially exploit this vulnerability to control process execution and gain access to the underlying operating system.\n\n- CVE-2021-37232: A stack overflow vulnerability occurs in Atomicparsley 20210124.204813.840499f through APar_read64() in src/util.cpp due to the lack of buffer size of uint32_buffer while reading more bytes in APar_read64.\n\n- CVE-2021-38389: Advantech WebAccess versions 9.02 and prior are vulnerable to a stack-based buffer overflow, which may allow an attacker to remotely execute code.\n\n- CVE-2021-38473: The affected product\u2019s code base doesn\u2019t properly control arguments for specific functions, which could lead to a stack overflow.\n\n- CVE-2021-38522: NETGEAR R6400 devices before 1.0.1.52 are affected by a stack-based buffer overflow by an authenticated user.\n\n- CVE-2021-38523: NETGEAR R6400 devices before 1.0.1.70 are affected by a stack-based buffer overflow by an authenticated user.\n\n- CVE-2021-38524: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects MK62 before 1.0.6.110, MR60 before 1.0.6.110, MS60 before 1.0.6.110, RAX15 before 1.0.2.82, RAX20 before 1.0.2.82, RAX200 before 1.0.3.106, RAX45 before 1.0.2.32, RAX50 before 1.0.2.32, RAX75 before 1.0.3.106, RAX80 before 1.0.3.106, RBK752 before 3.2.16.6, RBR750 before 3.2.16.6, and RBS750 before 3.2.16.6.\n\n- CVE-2021-38525: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects D3600 before 1.0.0.76, D6000 before 1.0.0.76, D6200 before 1.1.00.36, D7000 before 1.0.1.70, EX6200v2 before 1.0.1.78, EX7000 before 1.0.1.78, EX8000 before 1.0.1.186, JR6150 before 1.0.1.18, PR2000 before 1.0.0.28, R6020 before 1.0.0.42, R6050 before 1.0.1.18, R6080 before 1.0.0.42, R6120 before 1.0.0.46, R6220 before 1.1.0.80, R6260 before 1.1.0.64, R6300v2 before 1.0.4.34, R6700 before 1.0.2.6, R6700v2 before 1.2.0.36, R6800 before 1.2.0.36, R6900 before 1.0.2.4, R6900P before 1.3.1.64, R6900v2 before 1.2.0.36, R7000 before 1.0.9.42, R7000P before 1.3.1.64, R7800 before 1.0.2.60, R8900 before 1.0.4.12, R9000 before 1.0.4.12, and XR500 before 2.3.2.40.\n\n- CVE-2021-38684: A stack buffer overflow vulnerability has been reported to affect QNAP NAS running Multimedia Console. If exploited, this vulnerability allows attackers to execute arbitrary code. We have already fixed this vulnerability in the following versions of Multimedia Console: Multimedia Console 1.4.3 ( 2021/10/05 ) and later Multimedia Console 1.5.3 ( 2021/10/05 ) and later\n\n- CVE-2021-3928: vim is vulnerable to Use of Uninitialized Variable\n\n- CVE-2021-39531: An issue was discovered in libslax through v0.22.1. slaxLexer() in slaxlexer.c has a stack-based buffer overflow.\n\n- CVE-2021-39845: Acrobat Reader DC versions 2021.005.20060 (and earlier), 2020.004.30006 (and earlier) and 2017.011.30199 (and earlier) are affected by a stack overflow vulnerability due to insecure handling of a crafted PDF file, potentially resulting in memory corruption in the context of the current user. Exploitation requires user interaction in that a victim must open a crafted PDF file in Acrobat Reader.\n\n- CVE-2021-39846: Acrobat Reader DC versions 2021.005.20060 (and earlier), 2020.004.30006 (and earlier) and 2017.011.30199 (and earlier) are affected by a stack overflow vulnerability due to insecure handling of a crafted PDF file, potentially resulting in memory corruption in the context of the current user. Exploitation requires user interaction in that a victim must open a crafted PDF file in Acrobat Reader.\n\n- CVE-2021-41456: There is a stack buffer overflow in MP4Box v1.0.1 at src/filters/dmx_nhml.c:1004 in the nhmldmx_send_sample() function szXmlTo parameter which leads to a denial of service vulnerability.\n\n- CVE-2021-41457: There is a stack buffer overflow in MP4Box 1.1.0 at src/filters/dmx_nhml.c in nhmldmx_init_parsing which leads to a denial of service vulnerability.\n\n- CVE-2021-41459: There is a stack buffer overflow in MP4Box v1.0.1 at src/filters/dmx_nhml.c:1008 in the nhmldmx_send_sample() function szXmlFrom parameter which leads to a denial of service vulnerability.\n\n- CVE-2021-42012: A stack-based buffer overflow vulnerability in Trend Micro Apex One, Apex One as a Service and Worry-Free Business Security 10.0 SP1 could allow a local attacker to escalate privileges on affected installations. Please note: an attacker must first obtain the ability to execute low-privileged code on the target system in order to exploit this vulnerability.\n\n- CVE-2021-44352: A Stack-based Buffer Overflow vulnerability exists in the Tenda AC15 V15.03.05.18_multi device via the list parameter in a post request in goform/SetIpMacBind.\n\n- CVE-2020-35492: A flaw was found in cairo's image-compositor.c in all versions prior to 1.17.4. This flaw allows an attacker who can provide a crafted input file to cairo's image-compositor (for example, by convincing a user to open a file in an application using cairo, or if an application uses cairo on untrusted input) to cause a stack buffer overflow -> out-of-bounds WRITE. The highest impact from this vulnerability is to confidentiality, integrity, as well as system availability.\n\n- CVE-2021-25217: In ISC DHCP 4.1-ESV-R1 -> 4.1-ESV-R16, ISC DHCP 4.4.0 -> 4.4.2 (Other branches of ISC DHCP (i.e., releases in the 4.0.x series or lower and releases in the 4.3.x series) are beyond their End-of-Life (EOL) and no longer supported by ISC. From inspection it is clear that the defect is also present in releases from those series, but they have not been officially tested for the vulnerability), The outcome of encountering the defect while reading a lease that will trigger it varies, according to: the component being affected (i.e., dhclient or dhcpd) whether the package was built as a 32-bit or 64-bit binary whether the compiler flag -fstack-protection-strong was used when compiling In dhclient, ISC has not successfully reproduced the error on a 64-bit system. However, on a 32-bit system it is possible to cause dhclient to crash when reading an improper lease, which could cause network connectivity problems for an affected system due to the absence of a running DHCP client process. In dhcpd, when run in DHCPv4 or DHCPv6 mode: if the dhcpd server binary was built for a 32-bit architecture AND the -fstack-protection-strong flag was specified to the compiler, dhcpd may exit while parsing a lease file containing an objectionable lease, resulting in lack of service to clients. Additionally, the offending lease and the lease immediately following it in the lease database may be improperly deleted. if the dhcpd server binary was built for a 64-bit architecture OR if the -fstack-protection-strong compiler flag was NOT specified, the crash will not occur, but it is possible for the offending lease and the lease which immediately followed it to be improperly deleted.\n\n- CVE-2020-14107: A stack overflow in the HTTP server of Cast can be exploited to make the app crash in LAN.\n\n- CVE-2021-38427: RTI Connext DDS Professional and Connext DDS Secure Versions 4.2.x to 6.1.0 are vulnerable to a stack-based buffer overflow, which may allow a local attacker to execute arbitrary code.\n\n- CVE-2021-42529: XMP Toolkit SDK version 2021.07 (and earlier) is affected by a stack-based buffer overflow vulnerability potentially resulting in arbitrary code execution in the context of the current user. Exploitation requires user interaction in that a victim must open a crafted file.\n\n- CVE-2021-42530: XMP Toolkit SDK version 2021.07 (and earlier) is affected by a stack-based buffer overflow vulnerability potentially resulting in arbitrary code execution in the context of the current user. Exploitation requires user interaction in that a victim must open a crafted file.\n\n- CVE-2021-42531: XMP Toolkit SDK version 2021.07 (and earlier) is affected by a stack-based buffer overflow vulnerability potentially resulting in arbitrary code execution in the context of the current user. Exploitation requires user interaction in that a victim must open a crafted file.\n\n- CVE-2020-0938: A remote code execution vulnerability exists in Microsoft Windows when the Windows Adobe Type Manager Library improperly handles a specially-crafted multi-master font - Adobe Type 1 PostScript format.For all systems except Windows 10, an attacker who successfully exploited the vulnerability could execute code remotely, aka 'Adobe Font Manager Library Remote Code Execution Vulnerability'. This CVE ID is unique from CVE-2020-1020.\n\n- CVE-2020-14871: Vulnerability in the Oracle Solaris product of Oracle Systems (component: Pluggable authentication module). Supported versions that are affected are 10 and 11. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Solaris. While the vulnerability is in Oracle Solaris, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Oracle Solaris. Note: This CVE is not exploitable for Solaris 11.1 and later releases, and ZFSSA 8.7 and later releases, thus the CVSS Base Score is 0.0. CVSS 3.1 Base Score 10.0 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H).\n\n- CVE-2020-5735: Amcrest cameras and NVR are vulnerable to a stack-based buffer overflow over port 37777. An authenticated remote attacker can abuse this issue to crash the device and possibly execute arbitrary code.\n\n- CVE-2020-1020: A remote code execution vulnerability exists in Microsoft Windows when the Windows Adobe Type Manager Library improperly handles a specially-crafted multi-master font - Adobe Type 1 PostScript format.For all systems except Windows 10, an attacker who successfully exploited the vulnerability could execute code remotely, aka 'Adobe Font Manager Library Remote Code Execution Vulnerability'. This CVE ID is unique from CVE-2020-0938.\n\n- CVE-2021-20038: A Stack-based buffer overflow vulnerability in SMA100 Apache httpd server's mod_cgi module environment variables allows a remote unauthenticated attacker to potentially execute code as a 'nobody' user in the appliance. This vulnerability affected SMA 200, 210, 400, 410 and 500v appliances firmware 10.2.0.8-37sv, 10.2.1.1-19sv, 10.2.1.2-24sv and earlier versions.\n\n- CVE-2021-20046: A Stack-based buffer overflow in the SonicOS HTTP Content-Length response header allows a remote authenticated attacker to cause Denial of Service (DoS) and potentially results in code execution in the firewall. This vulnerability affected SonicOS Gen 5, Gen 6 and Gen 7 firmware versions.\n\n- CVE-2021-20048: A Stack-based buffer overflow in the SonicOS SessionID HTTP response header allows a remote authenticated attacker to cause Denial of Service (DoS) and potentially results in code execution in the firewall. This vulnerability affected SonicOS Gen 5, Gen 6 and Gen 7 firmware versions.\n\n- CVE-2021-21887: A stack-based buffer overflow vulnerability exists in the Web Manager SslGenerateCSR functionality of Lantronix PremierWave 2050 8.9.0.0R4 (in QEMU). A specially crafted HTTP request can lead to remote code execution. An attacker can make an authenticated HTTP request to trigger this vulnerability.\n\n- CVE-2021-21889: A stack-based buffer overflow vulnerability exists in the Web Manager Ping functionality of Lantronix PremierWave 2050 8.9.0.0R4 (in QEMU). A specially crafted HTTP request can lead to remote code execution. An attacker can make an authenticated HTTP request to trigger this vulnerability.\n\n- CVE-2021-21890: A stack-based buffer overflow vulnerability exists in the Web Manager FsBrowseClean functionality of Lantronix PremierWave 2050 8.9.0.0R4 (in QEMU). A specially crafted HTTP request can lead to remote code execution in the vulnerable portion of the branch (deletedir). An attacker can make an authenticated HTTP request to trigger this vulnerability.\n\n- CVE-2021-21901: A stack-based buffer overflow vulnerability exists in the CMA check_udp_crc function of Garrett Metal Detectors\u2019 iC Module CMA Version 5.0. A specially-crafted packet can lead to a stack-based buffer overflow during a call to memcpy. An attacker can send a malicious packet to trigger this vulnerability.\n\n- CVE-2021-21961: A stack-based buffer overflow vulnerability exists in the NBNS functionality of Sealevel Systems, Inc. SeaConnect 370W v1.3.34. A specially-crafted network packet can lead to remote code execution. An attacker can send a malicious packet to trigger this vulnerability.\n\n- CVE-2021-23206: A flaw was found in htmldoc in v1.9.12 and prior. A stack buffer overflow in parse_table() in ps-pdf.cxx may lead to execute arbitrary code and denial of service.\n\n- CVE-2021-26112: Multiple stack-based buffer overflow vulnerabilities [CWE-121] both in network daemons and in the command line interpreter of FortiWAN before 4.5.9 may allow an unauthenticated attacker to potentially corrupt control data in memory and execute arbitrary code via specifically crafted requests.\n\n- CVE-2021-26567: Stack-based buffer overflow vulnerability in frontend/main.c in faad2 before 2.2.7.1 allow local attackers to execute arbitrary code via filename and pathname options.\n\n- CVE-2021-26727: Multiple command injections and stack-based buffer overflows vulnerabilities in the SubNet_handler_func function of spx_restservice allow an attacker to execute arbitrary code with the same privileges as the server user (root). This issue affects: Lanner Inc IAC-AST2500A standard firmware version 1.10.0.\n\n- CVE-2021-26728: Command injection and stack-based buffer overflow vulnerabilities in the KillDupUsr_func function of spx_restservice allow an attacker to execute arbitrary code with the same privileges as the server user (root). This issue affects: Lanner Inc IAC-AST2500A standard firmware version 1.10.0.\n\n- CVE-2021-26729: Command injection and multiple stack-based buffer overflows vulnerabilities in the Login_handler_func function of spx_restservice allow an attacker to execute arbitrary code with the same privileges as the server user (root). This issue affects: Lanner Inc IAC-AST2500A standard firmware version 1.10.0.\n\n- CVE-2021-26730: A stack-based buffer overflow vulnerability in a subfunction of the Login_handler_func function of spx_restservice allows an attacker to execute arbitrary code with the same privileges as the server user (root). This issue affects: Lanner Inc IAC-AST2500A standard firmware version 1.10.0.\n\n- CVE-2021-26731: Command injection and multiple stack-based buffer overflows vulnerabilities in the modifyUserb_func function of spx_restservice allow an attacker to execute arbitrary code with the same privileges as the server user (root). This issue affects: Lanner Inc IAC-AST2500A standard firmware version 1.10.0.\n\n- CVE-2021-31578: In Boa, there is a possible escalation of privilege due to a stack buffer overflow. This could lead to remote escalation of privilege from a proximal attacker with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: A20210008; Issue ID: OSBNB00123241.\n\n- CVE-2021-32435: Stack-based buffer overflow in the function get_key in parse.c of abcm2ps v8.14.11 allows remote attackers to cause a Denial of Service (DoS) via unspecified vectors.\n\n- CVE-2021-32941: Annke N48PBB (Network Video Recorder) products of version 3.4.106 build 200422 and prior are vulnerable to a stack-based buffer overflow, which allows an unauthorized remote attacker to execute arbitrary code with the same privileges as the server user (root).\n\n- CVE-2021-33019: A stack-based buffer overflow vulnerability in Delta Electronics DOPSoft Version 4.00.11 and prior may be exploited by processing a specially crafted project file, which may allow an attacker to execute arbitrary code.\n\n- CVE-2021-33438: An issue was discovered in mjs (mJS: Restricted JavaScript engine), ES6 (JavaScript version 6). There is stack buffer overflow in json_parse_array() in mjs.c.\n\n- CVE-2021-33443: An issue was discovered in mjs (mJS: Restricted JavaScript engine), ES6 (JavaScript version 6). There is stack buffer overflow in mjs_execute() in mjs.c.\n\n- CVE-2021-33448: An issue was discovered in mjs(mJS: Restricted JavaScript engine), ES6 (JavaScript version 6). There is stack buffer overflow at 0x7fffe9049390.\n\n- CVE-2021-33545: Multiple camera devices by UDP Technology, Geutebr\u00fcck and other vendors are vulnerable to a stack-based buffer overflow condition in the counter parameter which may allow an attacker to remotely execute arbitrary code.\n\n- CVE-2021-33945: RICOH Printer series SP products 320DN, SP 325DNw, SP 320SN, SP 320SFN, SP 325SNw, SP 325SFNw, SP 330SN, Aficio SP 3500SF, SP 221S, SP 220SNw, SP 221SNw, SP 221SF, SP 220SFNw, SP 221SFNw v1.06 were discovered to contain a stack buffer overflow in the file /etc/wpa_supplicant.conf. This vulnerability allows attackers to cause a Denial of Service (DoS) via crafted overflow data.\n\n- CVE-2021-3434: Stack based buffer overflow in le_ecred_conn_req(). Zephyr versions >= v2.5.0 Stack-based Buffer Overflow (CWE-121). For more information, see https://github.com/zephyrproject-rtos/zephyr/security/advisories/GHSA-8w87-6rfp-cfrm\n\n- CVE-2021-3611: A stack overflow vulnerability was found in the Intel HD Audio device (intel-hda) of QEMU. A malicious guest could use this flaw to crash the QEMU process on the host, resulting in a denial of service condition. The highest threat from this vulnerability is to system availability. This flaw affects QEMU versions prior to 7.0.0.\n\n- CVE-2021-36193: Multiple stack-based buffer overflows in the command line interpreter of FortiWeb before 6.4.2 may allow an authenticated attacker to achieve arbitrary code execution via specially crafted commands.\n\n- CVE-2021-36194: Multiple stack-based buffer overflows in the API controllers of FortiWeb 6.4.1, 6.4.0, and 6.3.0 through 6.3.15 may allow an authenticated attacker to achieve arbitrary code execution via specially crafted requests.\n\n- CVE-2021-36347: iDRAC9 versions prior to 5.00.20.00 and iDRAC8 versions prior to 2.82.82.82 contain a stack-based buffer overflow vulnerability. An authenticated remote attacker with high privileges could potentially exploit this vulnerability to control process execution and gain access to the iDRAC operating system.\n\n- CVE-2021-37014: There is a Stack-based Buffer Overflow vulnerability in Huawei Smartphone.Successful exploitation of this vulnerability may lead to device cannot be used properly.\n\n- CVE-2021-37020: There is a Stack-based Buffer Overflow vulnerability in Huawei Smartphone.Successful exploitation of this vulnerability may lead to Out-of-bounds read.\n\n- CVE-2021-37021: There is a Stack-based Buffer Overflow vulnerability in Huawei Smartphone.Successful exploitation of this vulnerability may lead to Out-of-bounds read.\n\n- CVE-2021-3826: Heap/stack buffer overflow in the dlang_lname function in d-demangle.c in libiberty allows attackers to potentially cause a denial of service (segmentation fault and crash) via a crafted mangled symbol.\n\n- CVE-2021-38682: A stack buffer overflow vulnerability has been reported to affect QNAP device running QVR Elite, QVR Pro, QVR Guard. If exploited, this vulnerability allows attackers to execute arbitrary code. We have already fixed this vulnerability in the following versions of QVR Elite, QVR Pro, QVR Guard: QuTS hero h5.0.0: QVR Elite 2.1.4.0 (2021/12/06) and later QuTS hero h4.5.4: QVR Elite 2.1.4.0 (2021/12/06) and later QTS 5.0.0: QVR Elite 2.1.4.0 (2021/12/06) and later QTS 4.5.4: QVR Elite 2.1.4.0 (2021/12/06) and later QTS 4.5.4: QVR Pro 2.1.3.0 (2021/12/06) and later QTS 5.0.0: QVR Pro 2.1.3.0 (2021/12/06) and later QTS 4.5.4: QVR Guard 2.1.3.0 and later QTS 5.0.0: QVR Guard 2.1.3.0 and later\n\n- CVE-2021-38690: A stack buffer overflow vulnerability has been reported to affect QNAP device running QVR Elite, QVR Pro, QVR Guard. If exploited, this vulnerability allows attackers to execute arbitrary code. We have already fixed this vulnerability in the following versions of QVR Elite, QVR Pro, QVR Guard: QuTS hero h5.0.0: QVR Elite 2.1.4.0 (2021/12/06) and later QuTS hero h4.5.4: QVR Elite 2.1.4.0 (2021/12/06) and later QTS 5.0.0: QVR Elite 2.1.4.0 (2021/12/06) and later QTS 4.5.4: QVR Elite 2.1.4.0 (2021/12/06) and later QTS 4.5.4: QVR Pro 2.1.3.0 (2021/12/06) and later QTS 5.0.0: QVR Pro 2.1.3.0 (2021/12/06) and later QTS 4.5.4: QVR Guard 2.1.3.0 (2021/12/06) and later QTS 5.0.0: QVR Guard 2.1.3.0 (2021/12/06) and later\n\n- CVE-2021-39048: IBM Spectrum Protect Client 7.1 and 8.1 is vulnerable to a stack based buffer overflow, caused by improper bounds checking. A local attacker could exploit this vulnerability and cause a denial of service. IBM X-Force ID: 214438.\n\n- CVE-2021-39049: IBM i2 Analyst's Notebook 9.2.0, 9.2.1, and 9.2.2 is vulnerable to a stack-based buffer overflow, caused by improper bounds checking. A local attacker could overflow a buffer and gain lower level privileges. IBM X-Force ID: 214439.\n\n- CVE-2021-39050: IBM i2 Analyst's Notebook 9.2.0, 9.2.1, and 9.2.2 is vulnerable to a stack-based buffer overflow, caused by improper bounds checking. A local attacker could overflow a buffer and gain lower level privileges. IBM X-Force ID: 214440.\n\n- CVE-2021-39306: A stack buffer overflow was discovered on Realtek RTL8195AM device before 2.0.10, it exists in the client code when an attacker sends a big size Authentication challenge text in WEP security.\n\n- CVE-2021-39990: The screen lock module has a Stack-based Buffer Overflow vulnerability.Successful exploitation of this vulnerability may affect user experience.\n\n- CVE-2021-40057: There is a heap-based and stack-based buffer overflow vulnerability in the video framework. Successful exploitation of this vulnerability may affect availability.\n\n- CVE-2021-40556: A stack overflow vulnerability exists in the httpd service in ASUS RT-AX56U Router Version 3.0.0.4.386.44266. This vulnerability is caused by the strcat function called by \"caupload\" input handle function allowing the user to enter 0xFFFF bytes into the stack. This vulnerability allows an attacker to execute commands remotely. The vulnerability requires authentication.\n\n- CVE-2021-41027: A stack-based buffer overflow in Fortinet FortiWeb version 6.4.1 and 6.4.0, allows an authenticated attacker to execute unauthorized code or commands via crafted certificates loaded into the device.\n\n- CVE-2021-41458: In GPAC MP4Box v1.1.0, there is a stack buffer overflow at src/utils/error.c:1769 which leads to a denial of service vulnerability.\n\n- CVE-2021-42059: An issue was discovered in Insyde InsydeH2O Kernel 5.0 before 05.08.41, Kernel 5.1 before 05.16.41, Kernel 5.2 before 05.26.41, Kernel 5.3 before 05.35.41, and Kernel 5.4 before 05.42.20. A stack-based buffer overflow leads toarbitrary code execution in UEFI DisplayTypeDxe DXE driver.\n\n- CVE-2021-42756: Multiple stack-based buffer overflow vulnerabilities [CWE-121] in the proxy daemon of FortiWeb 5.x all versions, 6.0.7 and below, 6.1.2 and below, 6.2.6 and below, 6.3.16 and below, 6.4 all versions may allow an unauthenticated remote attacker to achieve arbitrary code execution via specifically crafted HTTP requests.\n\n- CVE-2021-42757: A buffer overflow [CWE-121] in the TFTP client library of FortiOS before 6.4.7 and FortiOS 7.0.0 through 7.0.2, may allow an authenticated local attacker to achieve arbitrary code execution via specially crafted command line arguments.\n\n- CVE-2021-42782: Stack buffer overflow issues were found in Opensc before version 0.22.0 in various places that could potentially crash programs using the library.\n\n- CVE-2021-43299: Stack overflow in PJSUA API when calling pjsua_player_create. An attacker-controlled 'filename' argument may cause a buffer overflow since it is copied to a fixed-size stack buffer without any size validation.\n\n- CVE-2021-43300: Stack overflow in PJSUA API when calling pjsua_recorder_create. An attacker-controlled 'filename' argument may cause a buffer overflow since it is copied to a fixed-size stack buffer without any size validation.\n\n- CVE-2021-43301: Stack overflow in PJSUA API when calling pjsua_playlist_create. An attacker-controlled 'file_names' argument may cause a buffer overflow since it is copied to a fixed-size stack buffer without any size validation.\n\n- CVE-2021-43556: FATEK WinProladder Versions 3.30_24518 and prior are vulnerable to a stack-based buffer overflow while processing project files, which may allow an attacker to execute arbitrary code.\n\n- CVE-2021-43579: A stack-based buffer overflow in image_load_bmp() in HTMLDOC <= 1.9.13 results in remote code execution if the victim converts an HTML document linking to a crafted BMP file.\n\n- CVE-2021-43983: WECON LeviStudioU Versions 2019-09-21 and prior are vulnerable to multiple stack-based buffer overflow instances while parsing project files, which may allow an attacker to execute arbitrary code.\n\n- CVE-2021-44170: A stack-based buffer overflow vulnerability [CWE-121] in the command line interpreter of FortiOS before 7.0.4 and FortiProxy before 2.0.8 may allow an authenticated attacker to execute unauthorized code or commands via specially crafted command line arguments.\n\n- CVE-2021-44435: A vulnerability has been identified in JT Utilities (All versions < V13.1.1.0), JTTK (All versions < V11.1.1.0). JTTK library in affected products is vulnerable to stack based buffer overflow while parsing specially crafted JT files. An attacker could leverage this vulnerability to execute code in the context of the current process. (ZDI-CAN-14903)\n\n- CVE-2021-44703: Acrobat Reader DC version 21.007.20099 (and earlier), 20.004.30017 (and earlier) and 17.011.30204 (and earlier) are affected by a stack buffer overflow vulnerability due to insecure handling of a crafted file, potentially resulting in arbitrary code execution in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file.\n\n- CVE-2021-45258: A stack overflow vulnerability exists in gpac 1.1.0 via the gf_bifs_dec_proto_list function, which causes a segmentation fault and application crash.\n\n- CVE-2021-45573: Certain NETGEAR devices are affected by a stack-based buffer overflow by an unauthenticated attacker. This affects R6260 before 1.1.0.76, R6800 before 1.2.0.62, R6700v2 before 1.2.0.62, R6900v2 before 1.2.0.62, R7450 before 1.2.0.62, AC2100 before 1.2.0.62, AC2400 before 1.2.0.62, and AC2600 before 1.2.0.62.\n\n- CVE-2021-45604: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects CBR750 before 3.2.18.2, D6220 before 1.0.0.68, D6400 before 1.0.0.102, D8500 before 1.0.3.60, LAX20 before 1.1.6.28, MK62 before 1.0.6.116, MR60 before 1.0.6.116, MS60 before 1.0.6.116, R6300v2 before 1.0.4.50, R6400 before 1.0.1.68, R6400v2 before 1.0.4.118, R6700v3 before 1.0.4.118, R6900P before 1.3.3.140, R7000 before 1.0.11.116, R7000P before 1.3.3.140, R7850 before 1.0.5.68, R7900 before 1.0.4.38, R7900P before 1.4.2.84, R7960P before 1.4.2.84, R8000 before 1.0.4.68, R8000P before 1.4.2.84, RAX15 before 1.0.3.96, RAX20 before 1.0.3.96, RAX200 before 1.0.4.120, RAX35v2 before 1.0.3.96, RAX40v2 before 1.0.3.96, RAX43 before 1.0.3.96, RAX45 before 1.0.3.96, RAX50 before 1.0.3.96, RAX75 before 1.0.4.120, RAX80 before 1.0.4.120, RBK752 before 3.2.17.12, RBK852 before 3.2.17.12, RBR750 before 3.2.17.12, RBR850 before 3.2.17.12, RBS750 before 3.2.17.12, RBS850 before 3.2.17.12, RS400 before 1.5.1.80, and XR1000 before 1.0.0.58.\n\n- CVE-2021-45605: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects R6400 before 1.0.1.68, R7000 before 1.0.11.116, R6900P before 1.3.3.140, R7000P before 1.3.3.140, R7900 before 1.0.4.38, RAX75 before 1.0.3.102, RAX80 before 1.0.3.102, and XR300 before 1.0.3.50.\n\n- CVE-2021-45606: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects R6400 before 1.0.1.70, R7000 before 1.0.11.126, R7900 before 1.0.4.46, R7900P before 1.4.2.84, R7960P before 1.4.2.84, R8000 before 1.0.4.74, R8000P before 1.4.2.84, RAX200 before 1.0.4.120, RS400 before 1.5.1.80, R6400v2 before 1.0.4.118, R7000P before 1.3.3.140, RAX80 before 1.0.4.120, R6700v3 before 1.0.4.118, R6900P before 1.3.3.140, and RAX75 before 1.0.4.120.\n\n- CVE-2021-45607: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects R6400v2 before 1.0.4.118, R6700v3 before 1.0.4.118, R6900P before 1.3.3.140, R7000 before 1.0.11.126, R7000P before 1.3.3.140, RAX200 before 1.0.5.126, RAX75 before 1.0.5.126, and RAX80 before 1.0.5.126.\n\n- CVE-2021-45636: NETGEAR D7000 devices before 1.0.1.82 are affected by a stack-based buffer overflow by an unauthenticated attacker.\n\n- CVE-2021-45637: Certain NETGEAR devices are affected by a stack-based buffer overflow by an unauthenticated attacker. This affects R6260 before 1.1.0.76, R6800 before 1.2.0.62, R6700v2 before 1.2.0.62, R6900v2 before 1.2.0.62, R7450 before 1.2.0.62, AC2100 before 1.2.0.62, AC2400 before 1.2.0.62, and AC2600 before 1.2.0.62.\n\n- CVE-2021-45638: Certain NETGEAR devices are affected by a stack-based buffer overflow by an unauthenticated attacker. This affects D6220 before 1.0.0.68, D6400 before 1.0.0.102, D7000v2 before 1.0.0.74, D8500 before 1.0.3.60, DC112A before 1.0.0.56, R6300v2 before 1.0.4.50, R6400 before 1.0.1.68, R7000 before 1.0.11.116, R7100LG before 1.0.0.70, RBS40V before 2.6.2.8, RBW30 before 2.6.2.2, RS400 before 1.5.1.80, R7000P before 1.3.2.132, and R6900P before 1.3.2.132.\n\n- CVE-2021-45833: A Stack-based Buffer Overflow Vulnerability exists in HDF5 1.13.1-1 via the H5D__create_chunk_file_map_hyper function in /hdf5/src/H5Dchunk.c, which causes a Denial of Service (context-dependent).\n\n- CVE-2021-45907: An issue was discovered in gif2apng 1.9. There is a stack-based buffer overflow involving a for loop. An attacker has little influence over the data written to the stack, making it unlikely that the flow of control can be subverted.\n\n- CVE-2021-45908: An issue was discovered in gif2apng 1.9. There is a stack-based buffer overflow involving a while loop. An attacker has little influence over the data written to the stack, making it unlikely that the flow of control can be subverted.\n\n- CVE-2021-45926: MDB Tools (aka mdbtools) 0.9.2 has a stack-based buffer overflow (at 0x7ffd0c689be0) in mdb_numeric_to_string (called from mdb_xfer_bound_data and _mdb_attempt_bind).\n\n- CVE-2021-45927: MDB Tools (aka mdbtools) 0.9.2 has a stack-based buffer overflow (at 0x7ffd6e029ee0) in mdb_numeric_to_string (called from mdb_xfer_bound_data and _mdb_attempt_bind).\n\n- CVE-2021-45958: UltraJSON (aka ujson) through 5.1.0 has a stack-based buffer overflow in Buffer_AppendIndentUnchecked (called from encode). Exploitation can, for example, use a large amount of indentation.\n\n- CVE-2021-45988: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function formAddDnsForward. This vulnerability allows attackers to cause a Denial of Service (DoS) via the DnsForwardRule parameter.\n\n- CVE-2021-45989: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function guestWifiRuleRefresh. This vulnerability allows attackers to cause a Denial of Service (DoS) via the qosGuestUpstream and qosGuestDownstream parameters.\n\n- CVE-2021-45991: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function formAddVpnUsers. This vulnerability allows attackers to cause a Denial of Service (DoS) via the vpnUsers parameter.\n\n- CVE-2021-45992: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function formSetQvlanList. This vulnerability allows attackers to cause a Denial of Service (DoS) via the qvlanName parameter.\n\n- CVE-2021-45993: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function formIPMacBindModify. This vulnerability allows attackers to cause a Denial of Service (DoS) via the IPMacBindRuleIP and IPMacBindRuleMac parameters.\n\n- CVE-2021-45994: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function formDelDhcpRule. This vulnerability allows attackers to cause a Denial of Service (DoS) via the delDhcpIndex parameter.\n\n- CVE-2021-45995: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function formSetStaticRoute. This vulnerability allows attackers to cause a Denial of Service (DoS) via the staticRouteNet, staticRouteMask, and staticRouteGateway parameters.\n\n- CVE-2021-45996: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function formSetPortMapping. This vulnerability allows attackers to cause a Denial of Service (DoS) via the portMappingServer, portMappingProtocol, portMappingWan, porMappingtInternal, and portMappingExternal parameters.\n\n- CVE-2021-45997: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function formSetPortMapping. This vulnerability allows attackers to cause a Denial of Service (DoS) via the portMappingServer, portMappingProtocol, portMappingWan, porMappingtInternal, and portMappingExternal parameters.\n\n- CVE-2021-46238: GPAC v1.1.0 was discovered to contain a stack overflow via the function gf_node_get_name () at scenegraph/base_scenegraph.c. This vulnerability can lead to a program crash, causing a Denial of Service (DoS).\n\n- CVE-2021-46262: Tenda AC Series Router AC11_V02.03.01.104_CN was discovered to contain a stack buffer overflow in the PPPoE module. This vulnerability allows attackers to cause a Denial of Service (DoS) via crafted overflow data.\n\n- CVE-2021-46263: Tenda AC Series Router AC11_V02.03.01.104_CN was discovered to contain a stack buffer overflow in the wifiTime module. This vulnerability allows attackers to cause a Denial of Service (DoS) via crafted overflow data.\n\n- CVE-2021-46264: Tenda AC Series Router AC11_V02.03.01.104_CN was discovered to contain a stack buffer overflow in the onlineList module. This vulnerability allows attackers to cause a Denial of Service (DoS) via crafted overflow data.\n\n- CVE-2021-46265: Tenda AC Series Router AC11_V02.03.01.104_CN was discovered to contain a stack buffer overflow in the wanBasicCfg module. This vulnerability allows attackers to cause a Denial of Service (DoS) via crafted overflow data.\n\n- CVE-2021-46321: Tenda AC Series Router AC11_V02.03.01.104_CN was discovered to contain a stack buffer overflow in the wifiBasicCfg module. This vulnerability allows attackers to cause a Denial of Service (DoS) via crafted overflow data.\n\n- CVE-2021-46324: Espruino 2v11.251 was discovered to contain a stack buffer overflow via src/jsvar.c in jsvNewFromString.\n\n- CVE-2021-46325: Espruino 2v10.246 was discovered to contain a stack buffer overflow via src/jsutils.c in vcbprintf.\n\n- CVE-2021-46334: Moddable SDK v11.5.0 was discovered to contain a stack buffer overflow via the component __interceptor_strcat.\n\n- CVE-2021-46393: There is a stack buffer overflow vulnerability in the formSetPPTPServer function of Tenda-AX3 router V16.03.12.10_CN. The v10 variable is directly retrieved from the http request parameter startIp. Then v10 will be splice to stack by function sscanf without any security check,which causes stack overflow. By POSTing the page /goform/SetPptpServerCfg with proper startIp, the attacker can easily perform remote code execution with carefully crafted overflow data.\n\n- CVE-2021-46394: There is a stack buffer overflow vulnerability in the formSetPPTPServer function of Tenda-AX3 router V16.03.12.10_CN. The v13 variable is directly retrieved from the http request parameter startIp. Then v13 will be splice to stack by function sscanf without any security check, which causes stack overflow. By POSTing the page /goform/SetPptpServerCfg with proper startIp, the attacker can easily perform remote code execution with carefully crafted overflow data.\n\n- CVE-2021-46408: Tenda AX12 v22.03.01.21 was discovered to contain a stack buffer overflow in the function sub_422CE4. This vulnerability allows attackers to cause a Denial of Service (DoS) via the strcpy parameter.\n\n- CVE-2021-46699: A vulnerability has been identified in Simcenter Femap (All versions < V2022.1.1). Affected application contains a stack based buffer overflow vulnerability while parsing specially crafted BDF files. This could allow an attacker to execute code in the context of the current process. (ZDI-CAN-15061)\n\n- CVE-2022-0435: A stack overflow flaw was found in the Linux kernel's TIPC protocol functionality in the way a user sends a packet with malicious content where the number of domain member nodes is higher than the 64 allowed. This flaw allows a remote user to crash the system or possibly escalate their privileges if they have access to the TIPC network.\n\n- CVE-2022-0903: A call stack overflow bug in the SAML login feature in Mattermost server in versions up to and including 6.3.2 allows an attacker to crash the server via submitting a maliciously crafted POST body.\n\n- CVE-2022-0904: A stack overflow bug in the document extractor in Mattermost Server in versions up to and including 6.3.2 allows an attacker to crash the server via submitting a maliciously crafted Apple Pages document.\n\n- CVE-2022-1068: Modbus Tools Modbus Slave (versions 7.4.2 and prior) is vulnerable to a stack-based buffer overflow in the registration field. This may cause the program to crash when a long character string is used.\n\n- CVE-2022-1211: A vulnerability classified as critical has been found in tildearrow Furnace dev73. This affects the FUR to VGM converter in console mode which causes stack-based overflows and crashes. It is possible to initiate the attack remotely but it requires user-interaction. A POC has been disclosed to the public and may be used.\n\n- CVE-2022-1888: Alpha7 PC Loader (All versions) is vulnerable to a stack-based buffer overflow while processing a specifically crafted project file, which may allow an attacker to execute arbitrary code.\n\n- CVE-2022-20030: In vow driver, there is a possible out of bounds write due to a stack-based buffer overflow. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS05837793; Issue ID: ALPS05837793.\n\n- CVE-2022-20040: In power_hal_manager_service, there is a possible permission bypass due to a stack-based buffer overflow. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS06219150; Issue ID: ALPS06219150.\n\n- CVE-2022-20105: In MM service, there is a possible out of bounds write due to a stack-based buffer overflow. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: DTV03330460; Issue ID: DTV03330460.\n\n- CVE-2022-20108: In voice service, there is a possible out of bounds write due to a stack-based buffer overflow. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: DTV03330702; Issue ID: DTV03330702.\n\n- CVE-2022-25308: A stack-based buffer overflow flaw was found in the Fribidi package. This flaw allows an attacker to pass a specially crafted file to the Fribidi application, which leads to a possible memory leak or a denial of service.\n\n- CVE-2022-25427: Tenda AC9 v15.03.2.21 was discovered to contain a stack overflow via the schedendtime parameter in the openSchedWifi function.\n\n- CVE-2022-25428: Tenda AC9 v15.03.2.21 was discovered to contain a stack overflow via the deviceId parameter in the saveparentcontrolinfo function.\n\n- CVE-2022-25429: Tenda AC9 v15.03.2.21 was discovered to contain a buffer overflow via the time parameter in the saveparentcontrolinfo function.\n\n- CVE-2022-25431: Tenda AC9 v15.03.2.21 was discovered to contain multiple stack overflows via the NPTR, V12, V10 and V11 parameter in the Formsetqosband function.\n\n- CVE-2022-25433: Tenda AC9 v15.03.2.21 was discovered to contain a stack overflow via the urls parameter in the saveparentcontrolinfo function.\n\n- CVE-2022-25434: Tenda AC9 v15.03.2.21 was discovered to contain a stack overflow via the firewallen parameter in the SetFirewallCfg function.\n\n- CVE-2022-25435: Tenda AC9 v15.03.2.21 was discovered to contain a stack overflow via the list parameter in the SetStaticRoutecfg function.\n\n- CVE-2022-25437: Tenda AC9 v15.03.2.21 was discovered to contain a stack overflow via the list parameter in the SetVirtualServerCfg function.\n\n- CVE-2022-25439: Tenda AC9 v15.03.2.21 was discovered to contain a stack overflow via the list parameter in the SetIpMacBind function.\n\n- CVE-2022-25440: Tenda AC9 v15.03.2.21 was discovered to contain a stack overflow via the ntpserver parameter in the SetSysTimeCfg function.\n\n- CVE-2022-28556: Tenda AC15 US_AC15V1.0BR_V15.03.05.20_multi_TDE01.bin is vulnerable to Buffer Overflow. The stack overflow vulnerability lies in the /goform/setpptpservercfg interface of the web. The sent post data startip and endip are copied to the stack using the sanf function, resulting in stack overflow. Similarly, this vulnerability can be used together with CVE-2021-44971\n\n- CVE-2022-29395: TOTOLINK N600R V4.3.0cu.7647_B20210106 was discovered to contain a stack overflow via the apcliKey parameter in the function FUN_0041bac4.\n\n- CVE-2022-29396: TOTOLINK N600R V4.3.0cu.7647_B20210106 was discovered to contain a stack overflow via the comment parameter in the function FUN_00418f10.\n\n- CVE-2022-29397: TOTOLINK N600R V4.3.0cu.7647_B20210106 was discovered to contain a stack overflow via the comment parameter in the function FUN_004196c8.\n\n- CVE-2022-29398: TOTOLINK N600R V4.3.0cu.7647_B20210106 was discovered to contain a stack overflow via the File parameter in the function FUN_0041309c.\n\n- CVE-2022-29399: TOTOLINK N600R V4.3.0cu.7647_B20210106 was discovered to contain a stack overflow via the url parameter in the function FUN_00415bf0.\n\n- CVE-2022-29496: A stack-based buffer overflow vulnerability exists in the BlynkConsole.h runCommand functionality of Blynk -Library v1.0.1. A specially-crafted network request can lead to command execution. An attacker can send a network request to trigger this vulnerability.\n\n- CVE-2022-29638: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a stack overflow via the comment parameter in the function setIpQosRules. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted POST request.\n\n- CVE-2022-29640: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a stack overflow via the comment parameter in the function setPortForwardRules. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted POST request.\n\n- CVE-2022-29641: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a stack overflow via the startTime and endTime parameters in the function setParentalRules. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted POST request.\n\n- CVE-2022-29642: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a stack overflow via the url parameter in the function setUrlFilterRules. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted POST request.\n\n- CVE-2022-29643: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a stack overflow via the macAddress parameter in the function setMacQos. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted POST request.\n\n- CVE-2022-2972: MZ Automation's libIEC61850 (versions 1.4 and prior; version 1.5 prior to commit a3b04b7bc4872a5a39e5de3fdc5fbde52c09e10e) is vulnerable to a stack-based buffer overflow, which could allow an attacker to crash the device or remotely execute arbitrary code.\n\n- CVE-2022-29776: Onlyoffice Document Server v6.0.0 and below and Core 6.1.0.26 and below were discovered to contain a stack overflow via the component DesktopEditor/common/File.cpp.\n\n- CVE-2022-30040: Tenda AX1803 v1.0.0.1_2890 is vulnerable to Buffer Overflow. The vulnerability lies in rootfs_ In / goform / setsystimecfg of / bin / tdhttpd in ubif file system, attackers can access http://ip/goform/SetSysTimeCfg, and by setting the ntpserve parameter, the stack buffer overflow can be caused to achieve the effect of router denial of service.\n\n- CVE-2022-30306: A stack-based buffer overflow vulnerability [CWE-121] in the CA sign functionality of FortiWeb version 7.0.1 and below, 6.4 all versions, version 6.3.19 and below may allow an authenticated attacker to achieve arbitrary code execution via specifically crafted password.\n\n- CVE-2022-30426: There is a stack buffer overflow vulnerability, which could lead to arbitrary code execution in UEFI DXE driver on some Acer products. An attack could exploit this vulnerability to escalate privilege from ring 3 to ring 0, and hijack control flow during UEFI DXE execution. This affects Altos T110 F3 firmware version <= P13 (latest) and AP130 F2 firmware version <= P04 (latest) and Aspire 1600X firmware version <= P11.A3L (latest) and Aspire 1602M firmware version <= P11.A3L (latest) and Aspire 7600U firmware version <= P11.A4 (latest) and Aspire MC605 firmware version <= P11.A4L (latest) and Aspire TC-105 firmware version <= P12.B0L (latest) and Aspire TC-120 firmware version <= P11-A4 (latest) and Aspire U5-620 firmware version <= P11.A1 (latest) and Aspire X1935 firmware version <= P11.A3L (latest) and Aspire X3475 firmware version <= P11.A3L (latest) and Aspire X3995 firmware version <= P11.A3L (latest) and Aspire XC100 firmware version <= P11.B3 (latest) and Aspire XC600 firmware version <= P11.A4 (latest) and Aspire Z3-615 firmware version <= P11.A2L (latest) and Veriton E430G firmware version <= P21.A1 (latest) and Veriton B630_49 firmware version <= AAP02SR (latest) and Veriton E430 firmware version <= P11.A4 (latest) and Veriton M2110G firmware version <= P21.A3 (latest) and Veriton M2120G fir.\n\n- CVE-2022-30472: Tenda AC Seris Router AC18_V15.03.05.19(6318) has a stack-based buffer overflow vulnerability in function fromAddressNat\n\n- CVE-2022-30473: Tenda AC Series Router AC18_V15.03.05.19(6318) has a stack-based buffer overflow vulnerability in function form_fast_setting_wifi_set\n\n- CVE-2022-30475: Tenda AC Series Router AC18_V15.03.05.19(6318) was discovered to contain a stack-based buffer overflow in the httpd module when handling /goform/WifiExtraSet request.\n\n- CVE-2022-30476: Tenda AC Series Router AC18_V15.03.05.19(6318) was discovered to contain a stack-based buffer overflow in the httpd module when handling /goform/SetFirewallCfg request.\n\n- CVE-2022-31031: PJSIP is a free and open source multimedia communication library written in C language implementing standard based protocols such as SIP, SDP, RTP, STUN, TURN, and ICE. In versions prior to and including 2.12.1 a stack buffer overflow vulnerability affects PJSIP users that use STUN in their applications, either by: setting a STUN server in their account/media config in PJSUA/PJSUA2 level, or directly using `pjlib-util/stun_simple` API. A patch is available in commit 450baca which should be included in the next release. There are no known workarounds for this issue.\n\n- CVE-2022-32030: Tenda AX1806 v1.0.0.1 was discovered to contain a stack overflow via the list parameter in the function formSetQosBand.\n\n- CVE-2022-32031: Tenda AX1806 v1.0.0.1 was discovered to contain a stack overflow via the list parameter in the function fromSetRouteStatic.\n\n- CVE-2022-32037: Tenda M3 V1.0.0.12 was discovered to contain a stack overflow via the function formSetAPCfg.\n\n- CVE-2022-32039: Tenda M3 V1.0.0.12 was discovered to contain a stack overflow via the listN parameter in the function fromDhcpListClient.\n\n- CVE-2022-32040: Tenda M3 V1.0.0.12 was discovered to contain a stack overflow via the function formSetCfm.\n\n- CVE-2022-32041: Tenda M3 V1.0.0.12 was discovered to contain a stack overflow via the function formGetPassengerAnalyseData.\n\n- CVE-2022-32043: Tenda M3 V1.0.0.12 was discovered to contain a stack overflow via the function formSetAccessCodeInfo.\n\n- CVE-2022-32044: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the password parameter in the function FUN_00413f80.\n\n- CVE-2022-32045: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the desc parameter in the function FUN_00413be4.\n\n- CVE-2022-32046: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the desc parameter in the function FUN_0041880c.\n\n- CVE-2022-32047: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the desc parameter in the function FUN_00412ef4.\n\n- CVE-2022-32048: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the command parameter in the function FUN_0041cc88.\n\n- CVE-2022-32049: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the url parameter in the function FUN_00418540.\n\n- CVE-2022-32050: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the cloneMac parameter in the function FUN_0041af40.\n\n- CVE-2022-32051: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the desc, week, sTime, eTime parameters in the function FUN_004133c4.\n\n- CVE-2022-32052: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the desc parameter in the function FUN_004137a4.\n\n- CVE-2022-32053: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the cloneMac parameter in the function FUN_0041621c.\n\n- CVE-2022-33183: A vulnerability in Brocade Fabric OS CLI before Brocade Fabric OS v9.1.0, 9.0.1e, 8.2.3c, 8.2.0cbn5, 7.4.2.j could allow a remote authenticated attacker to perform stack buffer overflow using in \u201cfirmwaredownload\u201d and \u201cdiagshow\u201d commands.\n\n- CVE-2022-34287: A vulnerability has been identified in PADS Standard/Plus Viewer (All versions). The affected application contains a stack corruption vulnerability while parsing PCB files. An attacker could leverage this vulnerability to leak information in the context of the current process. (FG-VD-22-052, FG-VD-22-056)\n\n- CVE-2022-34290: A vulnerability has been identified in PADS Standard/Plus Viewer (All versions). The affected application contains a stack corruption vulnerability while parsing PCB files. An attacker could leverage this vulnerability to leak information in the context of the current process. (FG-VD-22-055)\n\n- CVE-2022-34291: A vulnerability has been identified in PADS Standard/Plus Viewer (All versions). The affected application contains a stack corruption vulnerability while parsing PCB files. An attacker could leverage this vulnerability to leak information in the context of the current process. (FG-VD-22-057, FG-VD-22-058, FG-VD-22-060)\n\n- CVE-2022-35407: An issue was discovered in Insyde InsydeH2O with kernel 5.0 through 5.5. A stack buffer overflow leads to arbitrary code execution in the SetupUtility driver on Intel platforms. An attacker can change the values of certain UEFI variables. If the size of the second variable exceeds the size of the first, then the buffer will be overwritten. This issue affects the SetupUtility driver of InsydeH2O.\n\n- CVE-2022-35690: Adobe ColdFusion versions Update 14 (and earlier) and Update 4 (and earlier) are affected by a Stack-based Buffer Overflow vulnerability that could result in arbitrary code execution in the context of the current user. Exploitation of this issue does not require user interaction, the vulnerability is triggered when a crafted network packet is sent to the server.\n\n- CVE-2022-35710: Adobe ColdFusion versions Update 14 (and earlier) and Update 4 (and earlier) are affected by a Stack-based Buffer Overflow vulnerability that could result in arbitrary code execution in the context of the current user. Exploitation of this issue does not require user interaction, the vulnerability is triggered when a crafted network packet is sent to the server.\n\n- CVE-2022-3602: A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed the malicious certificate or for the application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address to overflow four attacker-controlled bytes on the stack. This buffer overflow could result in a crash (causing a denial of service) or potentially remote code execution. Many platforms implement stack overflow protections which would mitigate against the risk of remote code execution. The risk may be further mitigated based on stack layout for any given platform/compiler. Pre-announcements of CVE-2022-3602 described this issue as CRITICAL. Further analysis based on some of the mitigating factors described above have led this to be downgraded to HIGH. Users are still encouraged to upgrade to a new version as soon as possible. In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects. Fixed in OpenSSL 3.0.7 (Affected 3.0.0,3.0.1,3.0.2,3.0.3,3.0.4,3.0.5,3.0.6).\n\n- CVE-2022-37415: The Uniwill SparkIO.sys driver 1.0 is vulnerable to a stack-based buffer overflow via IOCTL 0x40002008.\n\n- CVE-2022-39803: Due to lack of proper memory management, when a victim opens a manipulated ACIS Part and Assembly (.sat, CoreCadTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-39804: Due to lack of proper memory management, when a victim opens a manipulated SolidWorks Part (.sldprt, CoreCadTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-39805: Due to lack of proper memory management, when a victim opens a manipulated Computer Graphics Metafile (.cgm, CgmTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-39806: Due to lack of proper memory management, when a victim opens a manipulated SolidWorks Drawing (.slddrw, CoreCadTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-39808: Due to lack of proper memory management, when a victim opens a manipulated Wavefront Object (.obj, ObjTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41167: Due to lack of proper memory management, when a victim opens a manipulated AutoCAD (.dwg, TeighaTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41168: Due to lack of proper memory management, when a victim opens a manipulated CATIA5 Part (.catpart, CatiaTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41170: Due to lack of proper memory management, when a victim opens a manipulated CATIA4 Part (.model, CatiaTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41172: Due to lack of proper memory management, when a victim opens a manipulated AutoCAD (.dxf, TeighaTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41175: Due to lack of proper memory management, when a victim opens a manipulated Enhanced Metafile (.emf, emf.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41177: Due to lack of proper memory management, when a victim opens a manipulated Iges Part and Assembly (.igs, .iges, CoreCadTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41179: Due to lack of proper memory management, when a victim opens a manipulated Jupiter Tesselation (.jt, JtTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41180: Due to lack of proper memory management, when a victim opens a manipulated Portable Document Format (.pdf, PDFPublishing.dll) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41184: Due to lack of proper memory management, when a victim opens a manipulated Windows Cursor File (.cur, ico.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41185: Due to lack of proper memory management, when a victim opens a manipulated Visual Design Stream (.vds, MataiPersistence.dll) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41186: Due to lack of proper memory management, when a victim opens manipulated Computer Graphics Metafile (.cgm, CgmCore.dll) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, a Remote Code Execution can be triggered when payload forces a stack-based overflow and or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41187: Due to lack of proper memory management, when a victim opens a manipulated Wavefront Object (.obj, ObjTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41189: Due to lack of proper memory management, when a victim opens a manipulated AutoCAD (.dwg, TeighaTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41190: Due to lack of proper memory management, when a victim opens a manipulated AutoCAD (.dxf, TeighaTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41191: Due to lack of proper memory management, when a victim opens a manipulated Jupiter Tesselation (.jt, JTReader.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41193: Due to lack of proper memory management, when a victim opens a manipulated Encapsulated Post Script (.eps, ai.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41195: Due to lack of proper memory management, when a victim opens a manipulated EAAmiga Interchange File Format (.iff, 2d.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41196: Due to lack of proper memory management, when a victim opens a manipulated VRML Worlds (.wrl, vrml.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41198: Due to lack of proper memory management, when a victim opens a manipulated SketchUp (.skp, SketchUp.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41199: Due to lack of proper memory management, when a victim opens a manipulated Open Inventor File (.iv, vrml.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41200: Due to lack of proper memory management, when a victim opens a manipulated Scalable Vector Graphic (.svg, svg.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41201: Due to lack of proper memory management, when a victim opens a manipulated Right Hemisphere Binary (.rh, rh.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41202: Due to lack of proper memory management, when a victim opens a manipulated Visual Design Stream (.vds, vds.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41211: Due to lack of proper memory management, when a victim opens manipulated file received from untrusted sources in SAP 3D Visual Enterprise Author and SAP 3D Visual Enterprise Viewer, Arbitrary Code Execution can be triggered when payload forces:Re-use of dangling pointer which refers to overwritten space in memory. The accessed memory must be filled with code to execute the attack. Therefore, repeated success is unlikely.Stack-based buffer overflow. Since the memory overwritten is random, based on access rights of the memory, repeated success is not assured. \n\n- CVE-2022-41415: Acer Altos W2000h-W570h F4 R01.03.0018 was discovered to contain a stack overflow in the RevserveMem component. This vulnerability allows attackers to cause a Denial of Service (DoS) via injecting crafted shellcode into the NVRAM variable.\n\n- CVE-2022-41420: nasm v2.16 was discovered to contain a stack overflow in the Ndisasm component\n\n- CVE-2022-41517: TOTOLINK NR1800X V9.1.0u.6279_B20210910 was discovered to contain a stack overflow in the lang parameter in the setLanguageCfg function\n\n- CVE-2022-41520: TOTOLINK NR1800X V9.1.0u.6279_B20210910 was discovered to contain an authenticated stack overflow via the File parameter in the UploadCustomModule function.\n\n- CVE-2022-41521: TOTOLINK NR1800X V9.1.0u.6279_B20210910 was discovered to contain an authenticated stack overflow via the sPort/ePort parameter in the setIpPortFilterRules function.\n\n- CVE-2022-41522: TOTOLINK NR1800X V9.1.0u.6279_B20210910 was discovered to contain an unauthenticated stack overflow via the \"main\" function.\n\n- CVE-2022-41523: TOTOLINK NR1800X V9.1.0u.6279_B20210910 was discovered to contain an authenticated stack overflow via the command parameter in the setTracerouteCfg function.\n\n- CVE-2022-41524: TOTOLINK NR1800X V9.1.0u.6279_B20210910 was discovered to contain an authenticated stack overflow via the week, sTime, and eTime parameters in the setParentalRules function.\n\n- CVE-2022-35506: TripleCross v0.1.0 was discovered to contain a stack overflow which occurs because there is no limit to the length of program parameters.\n\n- CVE-2022-35558: A stack overflow vulnerability exists in /goform/WifiMacFilterGet in Tenda W6 V1.0.0.9(4122) version, which can be exploited by attackers to cause a denial of service (DoS) via the index parameter.\n\n- CVE-2022-35559: A stack overflow vulnerability exists in /goform/setAutoPing in Tenda W6 V1.0.0.9(4122), which allows an attacker to construct ping1 parameters and ping2 parameters for a stack overflow attack. An attacker can use this vulnerability to execute arbitrary code execution.\n\n- CVE-2022-35560: A stack overflow vulnerability exists in /goform/wifiSSIDset in Tenda W6 V1.0.0.9(4122) version, which can be exploited by attackers to cause a denial of service (DoS) via the index parameter.\n\n- CVE-2022-35561: A stack overflow vulnerability exists in /goform/WifiMacFilterSet in Tenda W6 V1.0.0.9(4122) version, which can be exploited by attackers to cause a denial of service (DoS) via the index parameter.\n\n- CVE-2022-39173: In wolfSSL before 5.5.1, malicious clients can cause a buffer overflow during a TLS 1.3 handshake. This occurs when an attacker supposedly resumes a previous TLS session. During the resumption Client Hello a Hello Retry Request must be triggered. Both Client Hellos are required to contain a list of duplicate cipher suites to trigger the buffer overflow. In total, two Client Hellos have to be sent: one in the resumed session, and a second one as a response to a Hello Retry Request message.\n\n- CVE-2022-37078: TOTOLINK A7000R V9.1.0u.6115_B20201022 was discovered to contain a command injection vulnerability via the lang parameter at /setting/setLanguageCfg.\n\n- CVE-2022-1185: A denial of service vulnerability when rendering RDoc files in GitLab CE/EE versions 10 to 14.7.7, 14.8.0 to 14.8.5, and 14.9.0 to 14.9.2 allows an attacker to crash the GitLab web application with a maliciously crafted RDoc file\n\n- CVE-2022-22899: Core FTP / SFTP Server v2 Build 725 was discovered to allow unauthenticated attackers to cause a Denial of Service (DoS) via a crafted packet through the SSH service.\n\n- CVE-2022-41842: An issue was discovered in Xpdf 4.04. There is a crash in gfseek(_IO_FILE*, long, int) in goo/gfile.cc.\n\n- CVE-2022-41844: An issue was discovered in Xpdf 4.04. There is a crash in XRef::fetch(int, int, Object*, int) in xpdf/XRef.cc, a different vulnerability than CVE-2018-16369 and CVE-2019-16088.\n\nRelated Weaknesses:\n\n- CWE-788 (ChildOf)\n\n- CWE-787 (ChildOf)",
          "type": "Variant",
          "source": "sparse",
          "search_source": "weakness:command injection",
          "sources": [
            "base",
            "weakness"
          ],
          "boost_factor": 2.8,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            }
          }
        },
        {
          "cwe_id": "426",
          "name": "Untrusted Search Path",
          "description": "The product searches for critical resources using an externally-supplied search path that can point to resources that are not under the product's direct control.",
          "score": 94.56104726448638,
          "matched_text": "CWE-426: Untrusted Search Path\n\nType: Base\n\nStatus: Stable\n\nAlternative Terms:\n\nUntrusted Path\n\nUntrusted Path\n\nUntrusted Path\n\nDescription:\n\nThe product searches for critical resources using an externally-supplied search path that can point to resources that are not under the product's direct control.\n\nExtended Details:\n\n\n\nThis might allow attackers to execute their own programs, access unauthorized data files, or modify configuration in unexpected ways. If the product uses a search path to locate critical resources such as programs, then an attacker could modify that search path to point to a malicious program, which the targeted product would then execute. The problem extends to any type of critical resource that the product trusts.\n\n\nSome of the most common variants of untrusted search path are:\n\n\n  - In various UNIX and Linux-based systems, the PATH environment variable may be consulted to locate executable programs, and LD_PRELOAD may be used to locate a separate library.\n\n  - In various Microsoft-based systems, the PATH environment variable is consulted to locate a DLL, if the DLL is not found in other paths that appear earlier in the search order.\n\n\n\nReal-World Examples:\n\n- CVE-1999-1120: Application relies on its PATH environment variable to find and execute program.\n\n- CVE-2008-1810: Database application relies on its PATH environment variable to find and execute program.\n\n- CVE-2007-2027: Chain: untrusted search path enabling resultant format string by loading malicious internationalization messages.\n\n- CVE-2008-3485: Untrusted search path using malicious .EXE in Windows environment.\n\n- CVE-2008-2613: setuid program allows compromise using path that finds and loads a malicious library.\n\n- CVE-2008-1319: Server allows client to specify the search path, which can be modified to point to a program that the client has uploaded.\n\nTop 25 CWE Examples:\n\n- CVE-2021-41387: seatd-launch in seatd 0.6.x before 0.6.2 allows privilege escalation because it uses execlp and may be installed setuid root.\n\n- CVE-2021-28249: CA eHealth Performance Manager through 6.3.2.12 is affected by Privilege Escalation via a Dynamically Linked Shared Object Library. To exploit the vulnerability, the ehealth user must create a malicious library in the writable RPATH, to be dynamically linked when the FtpCollector executable is run. The code in the library will be executed as the root user. NOTE: This vulnerability only affects products that are no longer supported by the maintainer\n\n- CVE-2022-22047: Windows Client Server Run-time Subsystem (CSRSS) Elevation of Privilege Vulnerability\n\n- CVE-2021-3305: Beijing Feishu Technology Co., Ltd Feishu v3.40.3 was discovered to contain an untrusted search path vulnerability.\n\n- CVE-2022-36403: Untrusted search path vulnerability in the installer of Device Software Manager prior to Ver.2.20.3.0 allows an attacker to gain privileges via a Trojan horse DLL in an unspecified directory.\n\n- CVE-2021-36666: An issue was discovered in Druva 6.9.0 for MacOS, allows attackers to gain escalated local privileges via the inSyncDecommission.\n\n- CVE-2022-38060: A privilege escalation vulnerability exists in the sudo functionality of OpenStack Kolla git master 05194e7618. A misconfiguration in /etc/sudoers within a container can lead to increased privileges.\n\n- CVE-2022-25366: Cryptomator through 1.6.5 allows DYLIB injection because, although it has the flag 0x1000 for Hardened Runtime, it has the com.apple.security.cs.disable-library-validation and com.apple.security.cs.allow-dyld-environment-variables entitlements. An attacker can exploit this by creating a malicious .dylib file that can be executed via the DYLD_INSERT_LIBRARIES environment variable.\n\n- CVE-2022-39245: Mist is the command-line interface for the makedeb Package Repository. Prior to version 0.9.5, a user-provided `sudo` binary via the `PATH` variable can allow a local user to run arbitrary commands on the user's system with root permissions. Versions 0.9.5 and later contain a patch. No known workarounds exist.\n\n- CVE-2021-21817: An information disclosure vulnerability exists in the Zebra IP Routing Manager functionality of D-LINK DIR-3040 1.13B03. A specially crafted network request can lead to the disclosure of sensitive information. An attacker can send a sequence of requests to trigger this vulnerability.\n\nRelated Weaknesses:\n\n- CWE-642 (ChildOf)\n\n- CWE-668 (ChildOf)\n\n- CWE-673 (ChildOf)\n\n- CWE-427 (PeerOf)\n\n- CWE-428 (PeerOf)",
          "type": "Base",
          "source": "sparse",
          "search_source": "weakness:command injection",
          "sources": [
            "base",
            "weakness"
          ],
          "boost_factor": 2.8,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            }
          }
        },
        {
          "cwe_id": "138",
          "name": "Improper Neutralization of Special Elements",
          "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.",
          "score": 91.22587651898233,
          "matched_text": "CWE-138: Improper Neutralization of Special Elements\n\nType: Class\n\nStatus: Draft\n\nDescription:\n\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n\nExtended Details:\n\nMost languages and protocols have their own special elements such as characters and reserved words. These special elements can carry control implications. If product does not prevent external control or influence over the inclusion of such special elements, the control flow of the program may be altered from what was intended. For example, both Unix and Windows interpret the symbol < (\"less than\") as meaning \"read input from a file\".\n\nReal-World Examples:\n\n- CVE-2001-0677: Read arbitrary files from mail client by providing a special MIME header that is internally used to store pathnames for attachments.\n\n- CVE-2000-0703: Setuid program does not cleanse special escape sequence before sending data to a mail program, causing the mail program to process those sequences.\n\n- CVE-2003-0020: Multi-channel issue. Terminal escape sequences not filtered from log files.\n\n- CVE-2003-0083: Multi-channel issue. Terminal escape sequences not filtered from log files.\n\nTop 25 CWE Examples:\n\n- CVE-2021-33592: NAVER Toolbar before 4.0.30.323 allows remote attackers to execute arbitrary code via a crafted upgrade.xml file. Special characters in filename parameter can be the cause of bypassing code signing check function.\n\n- CVE-2022-0661: The Ad Injection WordPress plugin through 1.2.0.19 does not properly sanitize the body of the adverts injected into the pages, allowing a high privileged user (Admin+) to inject arbitrary HTML or javascript even with unfiltered_html disallowed, leading to a stored cross-site scripting (XSS) vulnerability. Further it is also possible to inject PHP code, leading to a Remote Code execution (RCE) vulnerability, even if the DISALLOW_FILE_EDIT and DISALLOW_FILE_MOD constants are both set.\n\n- CVE-2022-35651: A stored XSS and blind SSRF vulnerability was found in Moodle, occurs due to insufficient sanitization of user-supplied data in the SCORM track details. A remote attacker can trick the victim to follow a specially crafted link and execute arbitrary HTML and script code in user's browser in context of vulnerable website to steal potentially sensitive information, change appearance of the web page, can perform phishing and drive-by-download attacks.\n\n- CVE-2022-36325: Affected devices do not properly sanitize data introduced by an user when rendering the web interface. This could allow an authenticated remote attacker with administrative privileges to inject code and lead to a DOM-based XSS.\n\n- CVE-2022-4029: The Simple:Press plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the 'sforum_[md5 hash of the WordPress URL]' cookie value in versions up to, and including, 6.8 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link. This would be highly complex to exploit as it would require the attacker to set the cookie a cookie for the targeted user.\n\n- CVE-2022-24720: image_processing is an image processing wrapper for libvips and ImageMagick/GraphicsMagick. Prior to version 1.12.2, using the `#apply` method from image_processing to apply a series of operations that are coming from unsanitized user input allows the attacker to execute shell commands. This method is called internally by Active Storage variants, so Active Storage is vulnerable as well. The vulnerability has been fixed in version 1.12.2 of image_processing. As a workaround, users who process based on user input should always sanitize the user input by allowing only a constrained set of operations.\n\n- CVE-2021-25296: Nagios XI version xi-5.7.5 is affected by OS command injection. The vulnerability exists in the file /usr/local/nagiosxi/html/includes/configwizards/windowswmi/windowswmi.inc.php due to improper sanitization of authenticated user-controlled input by a single HTTP request, which can lead to OS command injection on the Nagios XI server.\n\n- CVE-2021-25297: Nagios XI version xi-5.7.5 is affected by OS command injection. The vulnerability exists in the file /usr/local/nagiosxi/html/includes/configwizards/switch/switch.inc.php due to improper sanitization of authenticated user-controlled input by a single HTTP request, which can lead to OS command injection on the Nagios XI server.\n\n- CVE-2021-25298: Nagios XI version xi-5.7.5 is affected by OS command injection. The vulnerability exists in the file /usr/local/nagiosxi/html/includes/configwizards/cloud-vm/cloud-vm.inc.php due to improper sanitization of authenticated user-controlled input by a single HTTP request, which can lead to OS command injection on the Nagios XI server.\n\n- CVE-2021-27101: Accellion FTA 9_12_370 and earlier is affected by SQL injection via a crafted Host header in a request to document_root.html. The fixed version is FTA_9_12_380 and later.\n\n- CVE-2021-35394: Realtek Jungle SDK version v2.x up to v3.4.14B provides a diagnostic tool called 'MP Daemon' that is usually compiled as 'UDPServer' binary. The binary is affected by multiple memory corruption vulnerabilities and an arbitrary command injection vulnerability that can be exploited by remote unauthenticated attackers.\n\n- CVE-2022-26352: An issue was discovered in the ContentResource API in dotCMS 3.0 through 22.02. Attackers can craft a multipart form request to post a file whose filename is not initially sanitized. This allows directory traversal, in which the file is saved outside of the intended storage location. If anonymous content creation is enabled, this allows an unauthenticated attacker to upload an executable file, such as a .jsp file, that can lead to remote code execution.\n\n- CVE-2022-27926: A reflected cross-site scripting (XSS) vulnerability in the /public/launchNewWindow.jsp component of Zimbra Collaboration (aka ZCS) 9.0 allows unauthenticated attackers to execute arbitrary web script or HTML via request parameters.\n\n- CVE-2022-22221: An Improper Neutralization of Special Elements vulnerability in the download manager of Juniper Networks Junos OS on SRX Series and EX Series allows a locally authenticated attacker with low privileges to take full control over the device. One aspect of this vulnerability is that the attacker needs to be able to execute any of the \"request ...\" or \"show system download ...\" commands. This issue affects Juniper Networks Junos OS on SRX Series and EX Series: All versions prior to 19.2R1-S9, 19.2R3-S5; 19.3 versions prior to 19.3R3-S6; 19.4 versions prior to 19.4R3-S8; 20.1 versions prior to 20.1R3-S4; 20.2 versions prior to 20.2R3-S4; 20.3 versions prior to 20.3R3-S3; 20.4 versions prior to 20.4R3-S2, 20.4R3-S3; 21.1 versions prior to 21.1R3-S1; 21.2 versions prior to 21.2R2-S2, 21.2R3; 21.3 versions prior to 21.3R2, 21.3R3; 21.4 versions prior to 21.4R1-S1, 21.4R2.\n\n- CVE-2022-3047: Insufficient policy enforcement in Extensions API in Google Chrome prior to 105.0.5195.52 allowed an attacker who convinced a user to install a malicious extension to bypass downloads policy via a crafted HTML page.\n\n- CVE-2022-21705: Octobercms is a self-hosted CMS platform based on the Laravel PHP Framework. In affected versions user input was not properly sanitized before rendering. An authenticated user with the permissions to create, modify and delete website pages can exploit this vulnerability to bypass `cms.safe_mode` / `cms.enableSafeMode` in order to execute arbitrary code. This issue only affects admin panels that rely on safe mode and restricted permissions. To exploit this vulnerability, an attacker must first have access to the backend area. The issue has been patched in Build 474 (v1.0.474) and v1.1.10. Users unable to upgrade should apply https://github.com/octobercms/library/commit/c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe to your installation manually.\n\n- CVE-2022-24039: A vulnerability has been identified in Desigo PXC4 (All versions < V02.20.142.10-10884), Desigo PXC5 (All versions < V02.20.142.10-10884). The \u201caddCell\u201d JavaScript function fails to properly sanitize user-controllable input before including it into the generated XML body of the XLS report document, such that it is possible to inject arbitrary content (e.g., XML tags) into the generated file. An attacker with restricted privileges, by poisoning any of the content used to generate XLS reports, could be able to leverage the application to deliver malicious files against higher-privileged users and obtain Remote Code Execution (RCE) against the administrator\u2019s workstation.\n\n- CVE-2022-35948: undici is an HTTP/1.1 client, written from scratch for Node.js.`=< undici@5.8.0` users are vulnerable to _CRLF Injection_ on headers when using unsanitized input as request headers, more specifically, inside the `content-type` header. Example: ``` import { request } from 'undici' const unsanitizedContentTypeInput = 'application/json\\\\r\\\\n\\\\r\\\\nGET /foo2 HTTP/1.1' await request('http://localhost:3000, { method: 'GET', headers: { 'content-type': unsanitizedContentTypeInput }, }) ``` The above snippet will perform two requests in a single `request` API call: 1) `http://localhost:3000/` 2) `http://localhost:3000/foo2` This issue was patched in Undici v5.8.1. Sanitize input when sending content-type headers using user input as a workaround.\n\n- CVE-2021-24942: The Menu Item Visibility Control WordPress plugin through 0.5 doesn't sanitize and validate the \"Visibility logic\" option for WordPress menu items, which could allow highly privileged users to execute arbitrary PHP code even in a hardened environment.\n\n- CVE-2022-0819: Code Injection in GitHub repository dolibarr/dolibarr prior to 15.0.1.\n\n- CVE-2022-25644: All versions of package @pendo324/get-process-by-name are vulnerable to Arbitrary Code Execution due to improper sanitization of getProcessByName function.\n\n- CVE-2022-46161: pdfmake is an open source client/server side PDF printing in pure JavaScript. In versions up to and including 0.2.5 pdfmake contains an unsafe evaluation of user controlled input. Users of pdfmake are thus subject to arbitrary code execution in the context of the process running the pdfmake code. There are no known fixes for this issue. Users are advised to restrict access to trusted user input.\n\n- CVE-2022-46836: PHP code injection in watolib auth.php and hosttags.php in Tribe29's Checkmk <= 2.1.0p10, Checkmk <= 2.0.0p27, and Checkmk <= 1.6.0p29 allows an attacker to inject and execute PHP code which will be executed upon request of the vulnerable component.\n\n- CVE-2021-33360: An issue found in Stoqey gnuplot v.0.0.3 and earlier allows attackers to execute arbitrary code via the src/index.ts, plotCallack, child_process, and/or filePath parameter(s).\n\n- CVE-2022-0764: Arbitrary Command Injection in GitHub repository strapi/strapi prior to 4.1.0.\n\n- CVE-2022-21129: Versions of the package nemo-appium before 0.0.9 are vulnerable to Command Injection due to improper input sanitization in the 'module.exports.setup' function. **Note:** In order to exploit this vulnerability appium-running 0.1.3 has to be installed as one of nemo-appium dependencies. \n\n- CVE-2022-21165: All versions of package font-converter are vulnerable to Arbitrary Command Injection due to missing sanitization of input that potentially flows into the child_process.exec() function.\n\n- CVE-2022-21186: The package @acrontum/filesystem-template before 0.0.2 are vulnerable to Arbitrary Command Injection due to the fetchRepo API missing sanitization of the href field of external input.\n\n- CVE-2022-21191: Versions of the package global-modules-path before 3.0.0 are vulnerable to Command Injection due to missing input sanitization or other checks and sandboxes being employed to the getPath function. \n\n- CVE-2022-2143: The affected product is vulnerable to two instances of command injection, which may allow an attacker to remotely execute arbitrary code.\n\n- CVE-2022-21810: All versions of the package smartctl are vulnerable to Command Injection via the info method due to improper input sanitization. \n\n- CVE-2022-25350: All versions of the package puppet-facter are vulnerable to Command Injection via the getFact function due to improper input sanitization. \n\n- CVE-2022-25853: All versions of the package semver-tags are vulnerable to Command Injection via the getGitTagsRemote function due to improper input sanitization. \n\n- CVE-2022-25855: All versions of the package create-choo-app3 are vulnerable to Command Injection via the devInstall function due to improper user-input sanitization. \n\n- CVE-2022-25890: All versions of the package wifey are vulnerable to Command Injection via the connect() function due to improper input sanitization. \n\n- CVE-2022-25908: All versions of the package create-choo-electron are vulnerable to Command Injection via the devInstall function due to improper user-input sanitization. \n\n- CVE-2022-25916: Versions of the package mt7688-wiscan before 0.8.3 are vulnerable to Command Injection due to improper input sanitization in the 'wiscan.scan' function. \n\n- CVE-2022-25923: Versions of the package exec-local-bin before 1.2.0 are vulnerable to Command Injection via the theProcess() functionality due to improper user-input sanitization. \n\n- CVE-2022-25926: Versions of the package window-control before 1.4.5 are vulnerable to Command Injection via the sendKeys function, due to improper input sanitization. \n\n- CVE-2022-25962: All versions of the package vagrant.js are vulnerable to Command Injection via the boxAdd function due to improper input sanitization. \n\n- CVE-2022-3275: Command injection is possible in the puppetlabs-apt module prior to version 9.0.0. A malicious actor is able to exploit this vulnerability only if they are able to provide unsanitized input to the module. This condition is rare in most deployments of Puppet and Puppet Enterprise.\n\n- CVE-2022-3276: Command injection is possible in the puppetlabs-mysql module prior to version 13.0.0. A malicious actor is able to exploit this vulnerability only if they are able to provide unsanitized input to the module. This condition is rare in most deployments of Puppet and Puppet Enterprise.\n\n- CVE-2022-36267: In Airspan AirSpot 5410 version 0.3.4.1-4 and under there exists a Unauthenticated remote command injection vulnerability. The ping functionality can be called without user authentication when crafting a malicious http request by injecting code in one of the parameters allowing for remote code execution. This vulnerability is exploited via the binary file /home/www/cgi-bin/diagnostics.cgi that accepts unauthenticated requests and unsanitized data. As a result, a malicious actor can craft a specific request and interact remotely with the device.\n\n- CVE-2022-40282: The web server of Hirschmann BAT-C2 before 09.13.01.00R04 allows authenticated command injection. This allows an authenticated attacker to pass commands to the shell of the system because the dir parameter of the FsCreateDir Ajax function is not sufficiently sanitized. The vendor's ID is BSECV-2022-21.\n\n- CVE-2022-40785: Unsanitized input when setting a locale file leads to shell injection in mIPC camera firmware 5.3.1.2003161406. This allows an attacker to gain remote code execution on cameras running the firmware when a victim logs into a specially crafted mobile app.\n\n- CVE-2022-48338: An issue was discovered in GNU Emacs through 28.2. In ruby-mode.el, the ruby-find-library-file function has a local command injection vulnerability. The ruby-find-library-file function is an interactive function, and bound to C-c C-f. Inside the function, the external command gem is called through shell-command-to-string, but the feature-name parameters are not escaped. Thus, malicious Ruby source files may cause commands to be executed.\n\n- CVE-2022-36323: Affected devices do not properly sanitize an input field. This could allow an authenticated remote attacker with administrative privileges to inject code or spawn a system root shell.\n\n- CVE-2022-25921: All versions of package morgan-json are vulnerable to Arbitrary Code Execution due to missing sanitization of input passed to the Function constructor.\n\n- CVE-2021-35254: SolarWinds received a report of a vulnerability related to an input that was not sanitized in WebHelpDesk. SolarWinds has removed this input field to prevent the misuse of this input in the future.\n\n- CVE-2021-38450: The affected controllers do not properly sanitize the input containing code syntax. As a result, an attacker could craft code to alter the intended controller flow of the software.\n\n- CVE-2021-43404: An issue was discovered in FusionPBX before 4.5.30. The FAX file name may have risky characters.\n\n- CVE-2021-43405: An issue was discovered in FusionPBX before 4.5.30. The fax_extension may have risky characters (it is not constrained to be numeric).\n\n- CVE-2021-43861: Mermaid is a Javascript based diagramming and charting tool that uses Markdown-inspired text definitions and a renderer to create and modify complex diagrams. Prior to version 8.13.8, malicious diagrams can run javascript code at diagram readers' machines. Users should upgrade to version 8.13.8 to receive a patch. There are no known workarounds aside from upgrading.\n\n- CVE-2022-1414: 3scale API Management 2 does not perform adequate sanitation for user input in multiple fields. An authenticated user could use this flaw to inject scripts and possibly gain access to sensitive information or conduct further attacks.\n\n- CVE-2022-1867: Insufficient validation of untrusted input in Data Transfer in Google Chrome prior to 102.0.5005.61 allowed a remote attacker to bypass same origin policy via a crafted clipboard content.\n\n- CVE-2022-22589: A validation issue was addressed with improved input sanitization. This issue is fixed in iOS 15.3 and iPadOS 15.3, watchOS 8.4, tvOS 15.3, Safari 15.3, macOS Monterey 12.2. Processing a maliciously crafted mail message may lead to running arbitrary javascript.\n\n- CVE-2022-28054: Improper sanitization of trigger action scripts in VanDyke Software VShell for Windows v4.6.2 allows attackers to execute arbitrary code via a crafted value.\n\n- CVE-2022-32229: A information disclosure vulnerability exists in Rockert.Chat <v5 due to /api/v1/chat.getThreadsList lack of sanitization of user inputs and can therefore leak private thread messages to unauthorized users via Mongo DB injection.\n\n- CVE-2022-34885: An improper input sanitization vulnerability in the Motorola MR2600 router could allow a local user with elevated permissions to execute arbitrary code.\n\n- CVE-2022-20664: A vulnerability in the web management interface of Cisco Secure Email and Web Manager, formerly Cisco Security Management Appliance (SMA), and Cisco Email Security Appliance (ESA) could allow an authenticated, remote attacker to retrieve sensitive information from a Lightweight Directory Access Protocol (LDAP) external authentication server connected to an affected device. This vulnerability is due to a lack of proper input sanitization while querying the external authentication server. An attacker could exploit this vulnerability by sending a crafted query through an external authentication web page. A successful exploit could allow the attacker to gain access to sensitive information, including user credentials from the external authentication server. To exploit this vulnerability, an attacker would need valid operator-level (or higher) credentials.\n\n- CVE-2021-38703: Wireless devices running certain Arcadyan-derived firmware (such as KPN Experia WiFi 1.00.15) do not properly sanitise user input to the syslog configuration form. An authenticated remote attacker could leverage this to alter the device configuration and achieve remote code execution. This can be exploited in conjunction with CVE-2021-20090.\n\nRelated Weaknesses:\n\n- CWE-707 (ChildOf)",
          "type": "Class",
          "source": "sparse",
          "search_source": "weakness:command injection",
          "sources": [
            "base",
            "weakness"
          ],
          "boost_factor": 2.8,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Discouraged",
              "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
              "comments": "Examine children of this entry to see if there is a better fit",
              "reasons": [
                "Abstraction"
              ]
            }
          }
        },
        {
          "cwe_id": "89",
          "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
          "description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
          "score": 91.01956869206971,
          "matched_text": "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\n\nType: Base\n\nStatus: Stable\n\nAlternative Terms:\n\nSQL injection - a common attack-oriented phrase\nSQLi - a common abbreviation for \"SQL injection\"\n\nSQL injection - a common attack-oriented phrase\nSQLi - a common abbreviation for \"SQL injection\"\n\nSQL injection - a common attack-oriented phrase\nSQLi - a common abbreviation for \"SQL injection\"\n\nDescription:\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.\n\nReal-World Examples:\n\n- CVE-2023-32530: SQL injection in security product dashboard using crafted certificate fields\n\n- CVE-2021-42258: SQL injection in time and billing software, as exploited in the wild per CISA KEV.\n\n- CVE-2021-27101: SQL injection in file-transfer system via a crafted Host header, as exploited in the wild per CISA KEV.\n\n- CVE-2020-12271: SQL injection in firewall product's admin interface or user portal, as exploited in the wild per CISA KEV.\n\n- CVE-2019-3792: An automation system written in Go contains an API that is vulnerable to SQL injection allowing the attacker to read privileged data.\n\n- CVE-2004-0366: chain: SQL injection in library intended for database authentication allows SQL injection and authentication bypass.\n\n- CVE-2008-2790: SQL injection through an ID that was supposed to be numeric.\n\n- CVE-2008-2223: SQL injection through an ID that was supposed to be numeric.\n\n- CVE-2007-6602: SQL injection via user name.\n\n- CVE-2008-5817: SQL injection via user name or password fields.\n\n- CVE-2003-0377: SQL injection in security product, using a crafted group name.\n\n- CVE-2008-2380: SQL injection in authentication library.\n\n- CVE-2017-11508: SQL injection in vulnerability management and reporting tool, using a crafted password.\n\nTop 25 CWE Examples:\n\n- CVE-2020-13587: An exploitable SQL injection vulnerability exists in the \"forms_fields_rules/rules\" page of the Rukovoditel Project Management App 2.7.2. A specially crafted HTTP request can lead to SQL injection. An attacker can make an authenticated HTTP request to trigger this vulnerability, this can be done either with administrator credentials or through cross-site request forgery.\n\n- CVE-2020-13588: An exploitable SQL injection vulnerability exists in the \u2018entities/fields\u2019 page of the Rukovoditel Project Management App 2.7.2. The heading_field_id parameter in \u2018\u2018entities/fields\u2019 page is vulnerable to authenticated SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability, this can be done either with administrator credentials or through cross-site request forgery.\n\n- CVE-2020-13589: An exploitable SQL injection vulnerability exists in the \u2018entities/fields\u2019 page of the Rukovoditel Project Management App 2.7.2. The entities_id parameter in the 'entities/fields page (mulitple_edit or copy_selected or export function) is vulnerable to authenticated SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability, this can be done either with administrator credentials or through cross-site request forgery.\n\n- CVE-2020-13591: An exploitable SQL injection vulnerability exists in the \"access_rules/rules_form\" page of the Rukovoditel Project Management App 2.7.2. A specially crafted HTTP request can lead to SQL injection. An attacker can make an authenticated HTTP request to trigger this vulnerability, this can be done either with administrator credentials or through cross-site request forgery.\n\n- CVE-2020-13592: An exploitable SQL injection vulnerability exists in \"global_lists/choices\" page of the Rukovoditel Project Management App 2.7.2. A specially crafted HTTP request can lead to SQL injection. An attacker can make an authenticated HTTP request to trigger this vulnerability, this can be done either with administrator credentials or through cross-site request forgery.\n\n- CVE-2020-27240: An exploitable SQL injection vulnerability exists in \u2018getAssets.jsp\u2019 page of OpenClinic GA 5.173.3. The componentStatus parameter in the getAssets.jsp page is vulnerable to unauthenticated SQL injection An attacker can make an authenticated HTTP request to trigger this vulnerability.\n\n- CVE-2020-27241: An exploitable SQL injection vulnerability exists in \u2018getAssets.jsp\u2019 page of OpenClinic GA 5.173.3. The serialnumber parameter in the getAssets.jsp page is vulnerable to unauthenticated SQL injection. An attacker can make an authenticated HTTP request to trigger this vulnerability.\n\n- CVE-2021-24465: The Meow Gallery WordPress plugin before 4.1.9 does not sanitise, validate or escape the ids attribute of its gallery shortcode (available for users as low as Contributor) before using it in an SQL statement, leading to an authenticated SQL Injection issue. The injection also allows the returned values to be manipulated in a way that could lead to data disclosure and arbitrary objects to be deserialized.\n\n- CVE-2021-24555: The daac_delete_booking_callback function, hooked to the daac_delete_booking AJAX action, takes the id POST parameter which is passed into the SQL statement without proper sanitisation, validation or escaping, leading to a SQL Injection issue. Furthermore, the ajax action is lacking any CSRF and capability check, making it available to any authenticated user.\n\n- CVE-2021-24626: The Chameleon CSS WordPress plugin through 1.2 does not have any CSRF and capability checks in all its AJAX calls, allowing any authenticated user, such as subscriber to call them and perform unauthorised actions. One of AJAX call, remove_css, also does not sanitise or escape the css_id POST parameter before using it in a SQL statement, leading to a SQL Injection\n\n- CVE-2021-24651: The Poll Maker WordPress plugin before 3.4.2 allows unauthenticated users to perform SQL injection via the ays_finish_poll AJAX action. While the result is not disclosed in the response, it is possible to use a timing attack to exfiltrate data such as password hash.\n\n- CVE-2021-24728: The Membership & Content Restriction \u2013 Paid Member Subscriptions WordPress plugin before 2.4.2 did not sanitise, validate or escape its order and orderby parameters before using them in SQL statement, leading to Authenticated SQL Injections in the Members and Payments pages.\n\n- CVE-2021-25874: AVideo/YouPHPTube AVideo/YouPHPTube 10.0 and prior is affected by a SQL Injection SQL injection in the catName parameter which allows a remote unauthenticated attacker to retrieve databases information such as application passwords hashes.\n\n- CVE-2021-26201: The Login Panel of CASAP Automated Enrollment System 1.0 is vulnerable to SQL injection authentication bypass. An attacker can obtain access to the admin panel by injecting a SQL query in the username field of the login page.\n\n- CVE-2021-26685: A remote authenticated SQL Injection vulnerabilitiy was discovered in Aruba ClearPass Policy Manager version(s): Prior to 6.9.5, 6.8.8-HF1, 6.7.14-HF1. A vulnerability in the web-based management interface API of ClearPass could allow an authenticated remote attacker to conduct SQL injection attacks against the ClearPass instance. An attacker could exploit this vulnerability to obtain and modify sensitive information in the underlying database.\n\n- CVE-2021-27130: Online Reviewer System 1.0 contains a SQL injection vulnerability through authentication bypass, which may lead to a reverse shell upload.\n\n- CVE-2021-28242: SQL Injection in the \"evoadm.php\" component of b2evolution v7.2.2-stable allows remote attackers to obtain sensitive database information by injecting SQL commands into the \"cf_name\" parameter when creating a new filter under the \"Collections\" tab.\n\n- CVE-2021-31632: b2evolution CMS v7.2.3 was discovered to contain a SQL injection vulnerability via the parameter cfqueryparam in the User login section. This vulnerability allows attackers to execute arbitrary code via a crafted input.\n\n- CVE-2021-3278: Local Service Search Engine Management System 1.0 has a vulnerability through authentication bypass using SQL injection . Using this vulnerability, an attacker can bypass the login page.\n\n- CVE-2021-34166: A SQL INJECTION vulnerability in Sourcecodester Simple Food Website 1.0 allows a remote attacker to Bypass Authentication and become Admin.\n\n- CVE-2021-36621: Sourcecodester Online Covid Vaccination Scheduler System 1.0 is vulnerable to SQL Injection. The username parameter is vulnerable to time-based SQL injection. Upon successful dumping the admin password hash, an attacker can decrypt and obtain the plain-text password. Hence, the attacker could authenticate as Administrator.\n\n- CVE-2021-36624: Sourcecodester Phone Shop Sales Managements System version 1.0 suffers from a remote SQL injection vulnerability that allows for authentication bypass.\n\n- CVE-2021-40313: Piwigo v11.5 was discovered to contain a SQL injection vulnerability via the parameter pwg_token in /admin/batch_manager_global.php.\n\n- CVE-2021-42580: Sourcecodester Online Learning System 2.0 is vunlerable to sql injection authentication bypass in admin login file (/admin/login.php) and authenticated file upload in (Master.php) file , we can craft these two vunlerablities to get unauthenticated remote command execution.\n\n- CVE-2021-36300: iDRAC9 versions prior to 5.00.00.00 contain an improper input validation vulnerability. An unauthenticated remote attacker may potentially exploit this vulnerability by sending a specially crafted malicious request to crash the webserver or cause information disclosure.\n\n- CVE-2021-24007: Multiple improper neutralization of special elements of SQL commands vulnerabilities in FortiMail before 6.4.4 may allow a non-authenticated attacker to execute unauthorized code or commands via specifically crafted HTTP requests.\n\n- CVE-2021-29089: Improper neutralization of special elements used in an SQL command ('SQL Injection') vulnerability in thumbnail component in Synology Photo Station before 6.8.14-3500 allows remote attackers users to execute arbitrary SQL commands via unspecified vectors.\n\n- CVE-2021-29090: Improper neutralization of special elements used in an SQL command ('SQL Injection') vulnerability in PHP component in Synology Photo Station before 6.8.14-3500 allows remote authenticated users to execute arbitrary SQL command via unspecified vectors.\n\n- CVE-2021-32590: Multiple improper neutralization of special elements used in an SQL command vulnerabilities in FortiPortal 6.0.0 through 6.0.4, 5.3.0 through 5.3.5, 5.2.0 through 5.2.5, and 4.2.2 and earlier may allow an attacker with regular user's privileges to execute arbitrary commands on the underlying SQL database via specifically crafted HTTP requests.\n\n- CVE-2021-33180: Improper neutralization of special elements used in an SQL command ('SQL Injection') vulnerability in cgi component in Synology Media Server before 1.8.1-2876 allows remote attackers to execute arbitrary SQL commands via unspecified vectors.\n\n- CVE-2021-36184: A improper neutralization of Special Elements used in an SQL Command ('SQL Injection') in Fortinet FortiWLM version 8.6.1 and below allows attacker to disclosure device, users and database information via crafted HTTP requests.\n\n- CVE-2021-39165: Cachet is an open source status page. With Cachet prior to and including 2.3.18, there is a SQL injection which is in the `SearchableTrait#scopeSearch()`. Attackers without authentication can utilize this vulnerability to exfiltrate sensitive data from the database such as administrator's password and session. The original repository of Cachet <https://github.com/CachetHQ/Cachet> is not active, the stable version 2.3.18 and it's developing 2.4 branch is affected.\n\n- CVE-2021-21263: Laravel is a web application framework. Versions of Laravel before 6.20.11, 7.30.2 and 8.22.1 contain a query binding exploitation. This same exploit applies to the illuminate/database package which is used by Laravel. If a request is crafted where a field that is normally a non-array value is an array, and that input is not validated or cast to its expected type before being passed to the query builder, an unexpected number of query bindings can be added to the query. In some situations, this will simply lead to no results being returned by the query builder; however, it is possible certain queries could be affected in a way that causes the query to return unexpected results.\n\n- CVE-2021-43038: An issue was discovered in Kaseya Unitrends Backup Appliance before 10.5.5. The wguest account could execute commands by injecting into PostgreSQL trigger functions. This allowed privilege escalation from the wguest user to the postgres user.\n\n- CVE-2021-36348: iDRAC9 versions prior to 5.00.20.00 contain an input injection vulnerability. A remote authenticated malicious user with low privileges may potentially exploit this vulnerability to cause information disclosure or denial of service by supplying specially crafted input data to iDRAC.\n\n- CVE-2020-13590: Multiple exploitable SQL injection vulnerabilities exist in the 'entities/fields' page of the Rukovoditel Project Management App 2.7.2. A specially crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger these vulnerabilities, this can be done either with administrator credentials or through cross-site request forgery.\n\n- CVE-2020-18081: The checkuser function of SEMCMS 3.8 was discovered to contain a vulnerability which allows attackers to obtain the password in plaintext through a SQL query.\n\n- CVE-2020-5722: The HTTP interface of the Grandstream UCM6200 series is vulnerable to an unauthenticated remote SQL injection via crafted HTTP request. An attacker can use this vulnerability to execute shell commands as root on versions before 1.0.19.20 or inject HTML in password recovery emails in versions before 1.0.20.17.\n\n- CVE-2021-21915: An exploitable SQL injection vulnerability exist in the \u2018group_list\u2019 page of the Advantech R-SeeNet 2.4.15 (30.07.2021). A specially-crafted HTTP request at \u2018company_filter\u2019 parameter. An attacker can make authenticated HTTP requests to trigger this vulnerability. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21916: An exploitable SQL injection vulnerability exist in the \u2018group_list\u2019 page of the Advantech R-SeeNet 2.4.15 (30.07.2021). A specially-crafted HTTP request at 'description_filter\u2019 parameter. An attacker can make authenticated HTTP requests to trigger this vulnerability. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21917: An exploitable SQL injection vulnerability exist in the \u2018group_list\u2019 page of the Advantech R-SeeNet 2.4.15 (30.07.2021). A specially-crafted HTTP request at '\u2018ord\u2019 parameter. An attacker can make authenticated HTTP requests to trigger this vulnerability. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21918: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at \u2018name_filter\u2019 parameter. However, the high privilege super-administrator account needs to be used to achieve exploitation without cross-site request forgery attack.\n\n- CVE-2021-21919: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at ord\u2019 parameter. However, the high privilege super-administrator account needs to be used to achieve exploitation without cross-site request forgery attack.\n\n- CVE-2021-21920: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at \u2018surname_filter\u2019 parameter with the administrative account or through cross-site request forgery.\n\n- CVE-2021-21921: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at \u2018name_filter\u2019 parameter with the administrative account or through cross-site request forgery.\n\n- CVE-2021-21922: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at \u2018username_filter\u2019 parameter with the administrative account or through cross-site request forgery.\n\n- CVE-2021-21923: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at \u2018company_filter\u2019 parameter with the administrative account or through cross-site request forgery.\n\n- CVE-2021-21924: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger these vulnerabilities. This can be done as any authenticated user or through cross-site request forgery at \u2018desc_filter\u2019 parameter.\n\n- CVE-2021-21925: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger these vulnerabilities. This can be done as any authenticated user or through cross-site request forgery at \u2018firm_filter\u2019 parameter.\n\n- CVE-2021-21926: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger these vulnerabilities. This can be done as any authenticated user or through cross-site request forgery at \u2018health_filter\u2019 parameter.\n\n- CVE-2021-21927: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger these vulnerabilities. This can be done as any authenticated user or through cross-site request forgery at \u2018loc_filter\u2019 parameter.\n\n- CVE-2021-21928: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests at \u2018mac_filter\u2019 parameter to trigger this vulnerability. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21929: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests at \u2018prod_filter\u2019 parameter to trigger this vulnerability. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21930: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests at \u2018sn_filter\u2019 parameter to trigger this vulnerability. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21931: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests at\u2018 stat_filter\u2019 parameter to trigger this vulnerability. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21932: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this at \u2018name_filter\u2019 parameter. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21933: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this at \u2018esn_filter\u2019 parameter. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21934: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this at \u2018imei_filter\u2019 parameter. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21935: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at \u2018host_alt_filter2\u2019 parameter. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21936: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at \u2018health_alt_filter\u2019 parameter. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21937: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at \u2018host_alt_filter\u2019 parameter. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-23214: When the server is configured to use trust authentication with a clientcert requirement or to use cert authentication, a man-in-the-middle attacker can inject arbitrary SQL queries when a connection is first established, despite the use of SSL certificate verification and encryption.\n\n- CVE-2021-24928: The Rearrange Woocommerce Products WordPress plugin before 3.0.8 does not have proper access controls in the save_all_order AJAX action, nor validation and escaping when inserting user data in SQL statement, leading to an SQL injection, and allowing any authenticated user, such as subscriber, to modify arbitrary post content (for example with an XSS payload), as well as exfiltrate any data by copying it to another post.\n\n- CVE-2021-25037: The All in One SEO WordPress plugin before 4.1.5.3 is affected by an authenticated SQL injection issue, which was discovered during an internal audit by the Jetpack Scan team, and could grant attackers access to privileged information from the affected site\u2019s database (e.g., usernames and hashed passwords).\n\n- CVE-2021-25069: The Download Manager WordPress plugin before 3.2.34 does not sanitise and escape the package_ids parameter before using it in a SQL statement, leading to a SQL injection, which can also be exploited to cause a Reflected Cross-Site Scripting issue\n\n- CVE-2021-25076: The WP User Frontend WordPress plugin before 3.5.26 does not validate and escape the status parameter before using it in a SQL statement in the Subscribers dashboard, leading to an SQL injection. Due to the lack of sanitisation and escaping, this could also lead to Reflected Cross-Site Scripting\n\n- CVE-2021-25109: The Futurio Extra WordPress plugin before 1.6.3 is affected by a SQL Injection vulnerability that could be used by high privilege users to extract data from the database as well as used to perform Cross-Site Scripting (XSS) against logged in admins by making send open a malicious link.\n\n- CVE-2021-36722: Emuse - eServices / eNvoice SQL injection can be used in various ways ranging from bypassing login authentication or dumping the whole database to full RCE on the affected endpoints. The SQLi caused by CWE-209: Generation of Error Message Containig Sensetive Information, showing parts of the aspx code and the webroot location , information an attacker can leverage to further compromise the host.\n\n- CVE-2021-41942: The Magic CMS MSVOD v10 video system has a SQL injection vulnerability. Attackers can use vulnerabilities to obtain sensitive information in the database.\n\n- CVE-2021-44653: Online Magazine Management System 1.0 contains a SQL injection authentication bypass vulnerability. The Admin panel authentication can be bypassed due to SQL injection vulnerability in the login form allowing attacker to gain access as admin to the application.\n\n- CVE-2021-44655: Online Pre-owned/Used Car Showroom Management System 1.0 contains a SQL injection authentication bypass vulnerability. Admin panel authentication can be bypassed due to SQL injection vulnerability in the login form allowing attacker to get admin access on the application.\n\n- CVE-2021-45406: In SalonERP 3.0.1, a SQL injection vulnerability allows an attacker to inject payload using 'sql' parameter in SQL query while generating a report. Upon successfully discovering the login admin password hash, it can be decrypted to obtain the plain-text password.\n\n- CVE-2020-12271: A SQL injection issue was found in SFOS 17.0, 17.1, 17.5, and 18.0 before 2020-04-25 on Sophos XG Firewall devices, as exploited in the wild in April 2020. This affected devices configured with either the administration (HTTPS) service or the User Portal exposed on the WAN zone. A successful attack may have caused remote code execution that exfiltrated usernames and hashed passwords for the local device admin(s), portal admins, and user accounts used for remote access (but not external Active Directory or LDAP passwords)\n\n- CVE-2020-17463: FUEL CMS 1.4.7 allows SQL Injection via the col parameter to /pages/items, /permissions/items, or /navigation/items.\n\n- CVE-2021-20016: A SQL-Injection vulnerability in the SonicWall SSLVPN SMA100 product allows a remote unauthenticated attacker to perform SQL query to access username password and other session related information. This vulnerability impacts SMA100 build version 10.x.\n\n- CVE-2021-20028: Improper neutralization of a SQL Command leading to SQL Injection vulnerability impacting end-of-life Secure Remote Access (SRA) products, specifically the SRA appliances running all 8.x firmware and 9.0.0.9-26sv or earlier\n\n- CVE-2021-27101: Accellion FTA 9_12_370 and earlier is affected by SQL injection via a crafted Host header in a request to document_root.html. The fixed version is FTA_9_12_380 and later.\n\n- CVE-2021-42258: BQE BillQuick Web Suite 2018 through 2021 before 22.0.9.1 allows SQL injection for unauthenticated remote code execution, as exploited in the wild in October 2021 for ransomware installation. SQL injection can, for example, use the txtID (aka username) parameter. Successful exploitation can include the ability to execute arbitrary code as MSSQLSERVER$ via xp_cmdshell.\n\n- CVE-2021-26634: SQL injection and file upload attacks are possible due to insufficient validation of input values in some parameters and variables of files compromising Maxboard, which may lead to arbitrary code execution or privilege escalation. Attackers can use these vulnerabilities to perform attacks such as stealing server management rights using a web shell.\n\n- CVE-2021-41433: SQL Injection vulnerability exists in version 1.0 of the Resumes Management and Job Application Website application login form by EGavilan Media that allows authentication bypass through login.php.\n\n- CVE-2022-0366: An authenticated and authorized agent user could potentially gain administrative access via an SQLi vulnerability to Capsule8 Console between versions 4.6.0 and 4.9.1.\n\n- CVE-2022-0439: The Email Subscribers & Newsletters WordPress plugin before 5.3.2 does not correctly escape the `order` and `orderby` parameters to the `ajax_fetch_report_list` action, making it vulnerable to blind SQL injection attacks by users with roles as low as Subscriber. Further, it does not have any CSRF protection in place for the action, allowing an attacker to trick any logged in user to perform the action by clicking a link.\n\n- CVE-2022-23857: model/criteria/criteria.go in Navidrome before 0.47.5 is vulnerable to SQL injection attacks when processing crafted Smart Playlists. An authenticated user could abuse this to extract arbitrary data from the database, including the user table (which contains sensitive information such as the users' encrypted passwords).\n\n- CVE-2022-24690: An issue was discovered in DSK DSKNet 2.16.136.0 and 2.17.136.5. A PresAbs.php SQL Injection vulnerability allows unauthenticated users to taint database data and extract sensitive information via crafted HTTP requests. The type of SQL Injection is blind boolean based. (An unauthenticated attacker can discover the endpoint by abusing a Broken Access Control issue with further SQL injection attacks to gather all user's badge numbers and PIN codes.)\n\n- CVE-2022-29603: A SQL Injection vulnerability exists in UniverSIS UniverSIS-API through 1.2.1 via the $select parameter to multiple API endpoints. A remote authenticated attacker could send crafted SQL statements to a vulnerable endpoint (such as /api/students/me/messages/) to, for example, retrieve personal information or change grades.\n\n- CVE-2022-29652: Online Sports Complex Booking System 1.0 is vulnerable to SQL Injection via /scbs/classes/Users.php?f=save_client.\n\n- CVE-2022-30335: Bonanza Wealth Management System (BWM) 7.3.2 allows SQL injection via the login form. Users who supply the application with a SQL injection payload in the User Name textbox could collect all passwords in encrypted format from the Microsoft SQL Server component.\n\n- CVE-2022-36669: Hospital Information System version 1.0 suffers from a remote SQL injection vulnerability that allows for authentication bypass.\n\n- CVE-2021-35226: An entity in Network Configuration Manager product is misconfigured and exposing password field to Solarwinds Information Service (SWIS). Exposed credentials are encrypted and require authenticated access with an NCM role. \n\n- CVE-2022-46163: Travel support program is a rails app to support the travel support program of openSUSE (TSP). Sensitive user data (bank account details, password Hash) can be extracted via Ransack query injection. Every deployment of travel-support-program below the patched version is affected. The travel-support-program uses the Ransack library to implement search functionality. In its default configuration, Ransack will allow for query conditions based on properties of associated database objects [1]. The `*_start`, `*_end` or `*_cont` search matchers [2] can then be abused to exfiltrate sensitive string values of associated database objects via character-by-character brute-force (A match is indicated by the returned JSON not being empty). A single bank account number can be extracted with <200 requests, a password hash can be extracted with ~1200 requests, all within a few minutes. The problem has been patched in commit d22916275c51500b4004933ff1b0a69bc807b2b7. In order to work around this issue, you can also cherry pick that patch, however it will not work without the Rails 5.0 migration that was done in #150, which in turn had quite a few pull requests it depended on.\n\n- CVE-2021-3958: Improper Handling of Parameters vulnerability in Ipack Automation Systems Ipack SCADA Software allows : Blind SQL Injection.This issue affects Ipack SCADA Software: from unspecified before 1.1.0. \n\n- CVE-2021-42760: A improper neutralization of special elements used in an sql command ('sql injection') in Fortinet FortiWLM version 8.6.1 and below allows attacker to disclose sensitive information from DB tables via crafted requests.\n\n- CVE-2021-43077: A improper neutralization of special elements used in an sql command ('sql injection') in Fortinet FortiWLM version 8.6.2 and below, version 8.5.2 and below, version 8.4.2 and below, version 8.3.2 and below allows attacker to execute unauthorized code or commands via crafted HTTP requests to the AP monitor handlers.\n\n- CVE-2021-43925: Improper neutralization of special elements used in an SQL command ('SQL Injection') vulnerability in Log Management functionality in Synology DiskStation Manager (DSM) before 7.0.1-42218-2 allows remote attackers to inject SQL commands via unspecified vectors.\n\n- CVE-2021-43926: Improper neutralization of special elements used in an SQL command ('SQL Injection') vulnerability in Log Management functionality in Synology DiskStation Manager (DSM) before 7.0.1-42218-2 allows remote attackers to inject SQL commands via unspecified vectors.\n\n- CVE-2021-43927: Improper neutralization of special elements used in an SQL command ('SQL Injection') vulnerability in Security Management functionality in Synology DiskStation Manager (DSM) before 7.0.1-42218-2 allows remote attackers to inject SQL commands via unspecified vectors.\n\n- CVE-2022-0224: dolibarr is vulnerable to Improper Neutralization of Special Elements used in an SQL Command\n\n- CVE-2022-0258: pimcore is vulnerable to Improper Neutralization of Special Elements used in an SQL Command\n\n- CVE-2022-1358: The affected On-Premise is vulnerable to data exfiltration through improper neutralization of special elements used in an SQL command. This could allow an attacker to exfiltrate and dump all data held in the cnMaestro database.\n\n- CVE-2022-1361: The affected On-Premise cnMaestro is vulnerable to a pre-auth data exfiltration through improper neutralization of special elements used in an SQL command. This could allow an attacker to exfiltrate data about other user\u2019s accounts and devices.\n\n- CVE-2022-22280: Improper Neutralization of Special Elements used in an SQL Command leading to Unauthenticated SQL Injection vulnerability, impacting SonicWall GMS 9.3.1-SP2-Hotfix1, Analytics On-Prem 2.5.0.3-2520 and earlier versions.\n\n- CVE-2022-3332: A vulnerability classified as critical has been found in SourceCodester Food Ordering Management System. This affects an unknown part of the file router.php of the component POST Parameter Handler. The manipulation of the argument username leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-209583.\n\n- CVE-2022-3414: A vulnerability was found in SourceCodester Web-Based Student Clearance System. It has been classified as critical. Affected is an unknown function of the file /Admin/login.php of the component POST Parameter Handler. The manipulation of the argument txtusername leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-210246 is the identifier assigned to this vulnerability.\n\n- CVE-2022-3467: A vulnerability classified as critical was found in Jiusi OA. Affected by this vulnerability is an unknown functionality of the file /jsoa/hntdCustomDesktopActionContent. The manipulation of the argument inforid leads to sql injection. The exploit has been disclosed to the public and may be used. The identifier VDB-210709 was assigned to this vulnerability.\n\n- CVE-2022-3470: A vulnerability was found in SourceCodester Human Resource Management System. It has been classified as critical. Affected is an unknown function of the file getstatecity.php. The manipulation of the argument sc leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-210714 is the identifier assigned to this vulnerability.\n\n- CVE-2022-3825: A vulnerability was found in Huaxia ERP 2.3 and classified as critical. Affected by this issue is some unknown functionality of the component User Management. The manipulation of the argument login leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-212792.\n\n- CVE-2022-3827: A vulnerability was found in centreon. It has been declared as critical. This vulnerability affects unknown code of the file formContactGroup.php of the component Contact Groups Form. The manipulation of the argument cg_id leads to sql injection. The attack can be initiated remotely. The name of the patch is 293b10628f7d9f83c6c82c78cf637cbe9b907369. It is recommended to apply a patch to fix this issue. VDB-212794 is the identifier assigned to this vulnerability.\n\n- CVE-2022-3868: A vulnerability classified as critical has been found in SourceCodester Sanitization Management System. Affected is an unknown function of the file /php-sms/classes/Master.php?f=save_quote. The manipulation of the argument id leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-213012.\n\n- CVE-2022-3971: A vulnerability was found in matrix-appservice-irc up to 0.35.1. It has been declared as critical. This vulnerability affects unknown code of the file src/datastore/postgres/PgDataStore.ts. The manipulation of the argument roomIds leads to sql injection. Upgrading to version 0.36.0 is able to address this issue. The name of the patch is 179313a37f06b298150edba3e2b0e5a73c1415e7. It is recommended to upgrade the affected component. VDB-213550 is the identifier assigned to this vulnerability.\n\n- CVE-2022-3972: A vulnerability was found in Pingkon HMS-PHP. It has been rated as critical. This issue affects some unknown processing of the file admin/adminlogin.php. The manipulation of the argument uname/pass leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-213551.\n\n- CVE-2022-3973: A vulnerability classified as critical has been found in Pingkon HMS-PHP. Affected is an unknown function of the file /admin/admin.php of the component Data Pump Metadata. The manipulation of the argument uname/pass leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-213552.\n\n- CVE-2022-3997: A vulnerability, which was classified as critical, has been found in MonikaBrzica scm. Affected by this issue is some unknown functionality of the file upis_u_bazu.php. The manipulation of the argument email/lozinka/ime/id leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. VDB-213698 is the identifier assigned to this vulnerability.\n\n- CVE-2022-3998: A vulnerability, which was classified as critical, was found in MonikaBrzica scm. This affects an unknown part of the file uredi_korisnika.php. The manipulation of the argument id leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-213699.\n\n- CVE-2022-4015: A vulnerability, which was classified as critical, was found in Sports Club Management System 119. This affects an unknown part of the file admin/make_payments.php. The manipulation of the argument m_id/plan leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-213789 was assigned to this vulnerability.\n\n- CVE-2022-4247: A vulnerability classified as critical was found in Movie Ticket Booking System. This vulnerability affects unknown code of the file booking.php. The manipulation of the argument id leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-214624.\n\n- CVE-2022-4248: A vulnerability, which was classified as critical, has been found in Movie Ticket Booking System. This issue affects some unknown processing of the file editBooking.php. The manipulation of the argument id leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-214625 was assigned to this vulnerability.\n\n- CVE-2022-3471: A vulnerability was found in SourceCodester Human Resource Management System. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file city.php. The manipulation of the argument searccity leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-210715.\n\n- CVE-2022-3472: A vulnerability was found in SourceCodester Human Resource Management System. It has been rated as critical. Affected by this issue is some unknown functionality of the file city.php. The manipulation of the argument cityedit leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-210716.\n\n- CVE-2022-3473: A vulnerability classified as critical has been found in SourceCodester Human Resource Management System. This affects an unknown part of the file getstatecity.php. The manipulation of the argument ci leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-210717 was assigned to this vulnerability.\n\n- CVE-2022-3579: A vulnerability classified as critical was found in SourceCodester Cashier Queuing System 1.0. This vulnerability affects unknown code of the file /queuing/login.php of the component Login Page. The manipulation of the argument username/password leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-211186 is the identifier assigned to this vulnerability.\n\n- CVE-2022-3584: A vulnerability was found in SourceCodester Canteen Management System 1.0. It has been rated as critical. This issue affects some unknown processing of the file edituser.php. The manipulation of the argument id leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-211193 was assigned to this vulnerability.\n\n- CVE-2022-3671: A vulnerability classified as critical was found in SourceCodester eLearning System 1.0. This vulnerability affects unknown code of the file /admin/students/manage.php. The manipulation of the argument id leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-212014 is the identifier assigned to this vulnerability.\n\n- CVE-2022-3714: A vulnerability classified as critical has been found in SourceCodester Online Medicine Ordering System 1.0. Affected is an unknown function of the file admin/?page=orders/view_order. The manipulation of the argument id leads to sql injection. It is possible to launch the attack remotely. VDB-212346 is the identifier assigned to this vulnerability.\n\n- CVE-2022-3729: A vulnerability, which was classified as critical, has been found in seccome Ehoney. This issue affects some unknown processing of the file /api/v1/attack. The manipulation of the argument AttackIP leads to sql injection. The attack may be initiated remotely. The associated identifier of this vulnerability is VDB-212411.\n\n- CVE-2022-3730: A vulnerability, which was classified as critical, was found in seccome Ehoney. Affected is an unknown function of the file /api/v1/attack/falco. The manipulation of the argument Payload leads to sql injection. It is possible to launch the attack remotely. The identifier of this vulnerability is VDB-212412.\n\n- CVE-2022-3731: A vulnerability has been found in seccome Ehoney and classified as critical. Affected by this vulnerability is an unknown functionality of the file /api/v1/attack/token. The manipulation of the argument Payload leads to sql injection. The attack can be launched remotely. The identifier VDB-212413 was assigned to this vulnerability.\n\n- CVE-2022-3733: A vulnerability was found in SourceCodester Web-Based Student Clearance System. It has been classified as critical. This affects an unknown part of the file Admin/edit-admin.php. The manipulation of the argument id leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-212415.\n\nRelated Weaknesses:\n\n- CWE-943 (ChildOf)\n\n- CWE-74 (ChildOf)",
          "type": "Base",
          "source": "sparse",
          "search_source": "weakness:command injection",
          "sources": [
            "base",
            "weakness"
          ],
          "boost_factor": 2.8,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            }
          }
        },
        {
          "cwe_id": "259",
          "name": "Use of Hard-coded Password",
          "description": "The product contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.",
          "score": 87.74115526296906,
          "matched_text": "CWE-259: Use of Hard-coded Password\n\nType: Variant\n\nStatus: Draft\n\nDescription:\n\nThe product contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.\n\nExtended Details:\n\n\n\nA hard-coded password typically leads to a significant authentication failure that can be difficult for the system administrator to detect. Once detected, it can be difficult to fix, so the administrator may be forced into disabling the product entirely. There are two main variations:\n\n```\n\t\tInbound: the product contains an authentication mechanism that checks for a hard-coded password.\n\t\tOutbound: the product connects to another system or component, and it contains hard-coded password for connecting to that component.\n```\nIn the Inbound variant, a default administration account is created, and a simple password is hard-coded into the product and associated with that account. This hard-coded password is the same for each installation of the product, and it usually cannot be changed or disabled by system administrators without manually modifying the program, or otherwise patching the product. If the password is ever discovered or published (a common occurrence on the Internet), then anybody with knowledge of this password can access the product. Finally, since all installations of the product will have the same password, even across different organizations, this enables massive attacks such as worms to take place.\n\nThe Outbound variant applies to front-end systems that authenticate with a back-end service. The back-end service may require a fixed password which can be easily discovered. The programmer may simply hard-code those back-end credentials into the front-end product. Any user of that program may be able to extract the password. Client-side systems with hard-coded passwords pose even more of a threat, since the extraction of a password from a binary is usually very simple.\n\n\nReal-World Examples:\n\n- CVE-2022-29964: Distributed Control System (DCS) has hard-coded passwords for local shell access\n\n- CVE-2021-37555: Telnet service for IoT feeder for dogs and cats has hard-coded password [REF-1288]\n\n- CVE-2021-35033: Firmware for a WiFi router uses a hard-coded password for a BusyBox shell, allowing bypass of authentication through the UART port\n\nTop 25 CWE Examples:\n\n- CVE-2021-27438: The software contains a hard-coded password it uses for its own inbound authentication or for outbound communication to external components on the Reason DR60 (all firmware versions prior to 02A04.1).\n\n- CVE-2021-34757: Multiple vulnerabilities in Cisco Business 220 Series Smart Switches firmware could allow an attacker with Administrator privileges to access sensitive login credentials or reconfigure the passwords on the user account. For more information about these vulnerabilities, see the Details section of this advisory.\n\n- CVE-2020-1716: A flaw was found in the ceph-ansible playbook where it contained hardcoded passwords that were being used as default passwords while deploying Ceph services. Any authenticated attacker can abuse this flaw to brute-force Ceph deployments, and gain administrator access to Ceph clusters via the Ceph dashboard to initiate read, write, and delete Ceph clusters and also modify Ceph cluster configurations. Versions before ceph-ansible 6.0.0alpha1 are affected.\n\n- CVE-2021-21818: A hard-coded password vulnerability exists in the Zebra IP Routing Manager functionality of D-LINK DIR-3040 1.13B03. A specially crafted network request can lead to a denial of service. An attacker can send a sequence of requests to trigger this vulnerability.\n\n- CVE-2021-21820: A hard-coded password vulnerability exists in the Libcli Test Environment functionality of D-LINK DIR-3040 1.13B03. A specially crafted network request can lead to code execution. An attacker can send a sequence of requests to trigger this vulnerability.\n\n- CVE-2021-27440: The software contains a hard-coded password it uses for its own inbound authentication or for outbound communication to external components on the Reason DR60 (all firmware versions prior to 02A04.1).\n\n- CVE-2021-27452: The software contains a hard-coded password that could allow an attacker to take control of the merging unit using these hard-coded credentials on the MU320E (all firmware versions prior to v04A00.1).\n\n- CVE-2021-32454: SITEL CAP/PRX firmware version 5.2.01 makes use of a hardcoded password. An attacker with access to the device could modify these credentials, leaving the administrators of the device without access.\n\n- CVE-2021-32459: Trend Micro Home Network Security version 6.6.604 and earlier contains a hard-coded password vulnerability in the log collection server which could allow an attacker to use a specially crafted network request to lead to arbitrary authentication. An attacker must first obtain the ability to execute high-privileged code on the target device in order to exploit this vulnerability.\n\n- CVE-2021-36799: KNX ETS5 through 5.7.6 uses the hard-coded password ETS5Password, with a salt value of Ivan Medvedev, allowing local users to read project information. NOTE: This vulnerability only affects products that are no longer supported by the maintainer\n\n- CVE-2021-38456: A use of hard-coded password vulnerability in the Moxa MXview Network Management software Versions 3.x to 3.2.2 may allow an attacker to gain access through accounts using default passwords\n\n- CVE-2021-43575: KNX ETS6 through 6.0.0 uses the hard-coded password ETS5Password, with a salt value of Ivan Medvedev, allowing local users to read project information, a similar issue to CVE-2021-36799. NOTE: The vendor disputes this because it is not the responsibility of the ETS to securely store cryptographic key material when it is not being exported\n\n- CVE-2020-25752: An issue was discovered on Enphase Envoy R3.x and D4.x devices. There are hardcoded web-panel login passwords for the installer and Enphase accounts. The passwords for these accounts are hardcoded values derived from the MD5 hash of the username and serial number mixed with some static strings. The serial number can be retrieved by an unauthenticated user at /info.xml. These passwords can be easily calculated by an attacker; users are unable to change these passwords.\n\n- CVE-2020-29321: The D-Link router DIR-868L 3.01 is vulnerable to credentials disclosure in telnet service through decompilation of firmware, that allows an unauthenticated attacker to gain access to the firmware and to extract sensitive data.\n\n- CVE-2020-29322: The D-Link router DIR-880L 1.07 is vulnerable to credentials disclosure in telnet service through decompilation of firmware, that allows an unauthenticated attacker to gain access to the firmware and to extract sensitive data.\n\n- CVE-2020-29323: The D-link router DIR-885L-MFC 1.15b02, v1.21b05 is vulnerable to credentials disclosure in telnet service through decompilation of firmware, that allows an unauthenticated attacker to gain access to the firmware and to extract sensitive data.\n\n- CVE-2021-45520: Certain NETGEAR devices are affected by a hardcoded password. This affects RBK352 before 4.4.0.10, RBR350 before 4.4.0.10, and RBS350 before 4.4.0.10.\n\n- CVE-2021-45521: Certain NETGEAR devices are affected by a hardcoded password. This affects RBK352 before 4.4.0.10, RBR350 before 4.4.0.10, and RBS350 before 4.4.0.10.\n\n- CVE-2021-45522: NETGEAR XR1000 devices before 1.0.0.58 are affected by a hardcoded password.\n\n- CVE-2022-26138: The Atlassian Questions For Confluence app for Confluence Server and Data Center creates a Confluence user account in the confluence-users group with the username disabledsystemuser and a hardcoded password. A remote, unauthenticated attacker with knowledge of the hardcoded password could exploit this to log into Confluence and access all content accessible to users in the confluence-users group. This user account is created when installing versions 2.7.34, 2.7.35, and 3.0.2 of the app.\n\n- CVE-2021-31477: This vulnerability allows remote attackers to execute arbitrary code on affected installations of GE Reason RPV311 14A03. Authentication is not required to exploit this vulnerability. The specific flaw exists within the firmware and filesystem of the device. The firmware and filesystem contain hard-coded default credentials. An attacker can leverage this vulnerability to execute code in the context of the download user. Was ZDI-CAN-11852.\n\n- CVE-2022-1162: A hardcoded password was set for accounts registered using an OmniAuth provider (e.g. OAuth, LDAP, SAML) in GitLab CE/EE versions 14.7 prior to 14.7.7, 14.8 prior to 14.8.5, and 14.9 prior to 14.9.2 allowing attackers to potentially take over accounts\n\n- CVE-2022-22144: A hard-coded password vulnerability exists in the libcommonprod.so prod_change_root_passwd functionality of TCL LinkHub Mesh Wi-Fi MS1G_00_01.00_14. During system startup this functionality is always called, leading to a known root password. An attacker does not have to do anything to trigger this vulnerability.\n\n- CVE-2022-25577: ALF-BanCO v8.2.5 and below was discovered to use a hardcoded password to encrypt the SQLite database containing the user's data. Attackers who are able to gain remote or local access to the system are able to read and modify the data.\n\n- CVE-2022-26119: A improper authentication vulnerability in Fortinet FortiSIEM before 6.5.0 allows a local attacker with CLI access to perform operations on the Glassfish server directly via a hardcoded password.\n\n- CVE-2022-27172: A hard-coded password vulnerability exists in the console infactory functionality of InHand Networks InRouter302 V3.5.37. A specially-crafted network request can lead to privileged operation execution. An attacker can send a sequence of requests to trigger this vulnerability.\n\n- CVE-2022-29644: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a hard coded password for the telnet service stored in the component /web_cste/cgi-bin/product.ini.\n\n- CVE-2022-29645: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a hard coded password for root stored in the component /etc/shadow.sample.\n\n- CVE-2022-29825: Use of Hard-coded Password vulnerability in Mitsubishi Electric GX Works3 versions from 1.000A to 1.090U and GT Designer3 Version1 (GOT2000) versions from 1.122C to 1.290C allows an unauthenticated attacker to disclose sensitive information. As a result, unauthenticated users may view programs and project files or execute programs illegally.\n\n- CVE-2022-29831: Use of Hard-coded Password vulnerability in Mitsubishi Electric Corporation GX Works3 versions from 1.015R to 1.095Z allows a remote unauthenticated attacker to obtain information about the project file for MELSEC safety CPU modules.\n\n- CVE-2022-29889: A hard-coded password vulnerability exists in the telnet functionality of Abode Systems, Inc. iota All-In-One Security Kit 6.9Z. Use of a hard-coded root password can lead to arbitrary command execution. An attacker can authenticate with hard-coded credentials to trigger this vulnerability.\n\n- CVE-2022-32967: RTL8111EP-CG/RTL8111FP-CG DASH function has hard-coded password. An unauthenticated physical attacker can use the hard-coded default password during system reboot triggered by other user, to acquire partial system information such as serial number and server information.\n\n- CVE-2022-34005: An issue was discovered in TitanFTP (aka Titan FTP) NextGen before 1.2.1050. There is Remote Code Execution due to a hardcoded password for the sa account on the Microsoft SQL Express 2019 instance installed by default during TitanFTP NextGen installation, aka NX-I674 (sub-issue 1). NOTE: as of 2022-06-21, the 1.2.1050 release corrects this vulnerability in a new installation, but not in an upgrade installation.\n\n- CVE-2022-34462:  Dell EMC SCG Policy Manager, versions from 5.10 to 5.12, contain(s) a Hard-coded Password Vulnerability. An attacker, with the knowledge of the hard-coded credentials, could potentially exploit this vulnerability to login to the system to gain admin privileges. \n\n- CVE-2022-35491: TOTOLINK A3002RU V3.0.0-B20220304.1804 has a hardcoded password for root in /etc/shadow.sample.\n\n- CVE-2022-35866: This vulnerability allows remote attackers to bypass authentication on affected installations of Vinchin Backup and Recovery 6.5.0.17561. Authentication is not required to exploit this vulnerability. The specific flaw exists within the configuration of the MySQL server. The server uses a hard-coded password for the administrator user. An attacker can leverage this vulnerability to bypass authentication on the system. Was ZDI-CAN-17139.\n\n- CVE-2022-36610: TOTOLINK A720R V4.1.5cu.532_B20210610 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36611: TOTOLINK A800R V4.1.2cu.5137_B20200730 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36612: TOTOLINK A950RG V4.1.2cu.5204_B20210112 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36613: TOTOLINK N600R V4.3.0cu.7647_B20210106 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36614: TOTOLINK A860R V4.1.2cu.5182_B20201027 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36615: TOTOLINK A3000RU V4.1.2cu.5185_B20201128 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36616: TOTOLINK A810R V4.1.2cu.5182_B20201026 and V5.9c.4050_B20190424 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-37841: In TOTOLINK A860R V4.1.2cu.5182_B20201027 there is a hard coded password for root in /etc/shadow.sample.\n\n- CVE-2022-37857: bilde2910 Hauk v1.6.1 requires a hardcoded password which by default is blank. This hardcoded password is hashed but stored within the config.php file server-side as well as in clear-text on the android client device by default.\n\n- CVE-2022-38823: In TOTOLINK T6 V4.1.5cu.709_B20210518, there is a hard coded password for root in /etc/shadow.sample.\n\n- CVE-2022-45444: Sewio\u2019s Real-Time Location System (RTLS) Studio version 2.0.0 up to and including version 2.6.2 contains hard-coded passwords for select users in the application\u2019s database. This could allow a remote attacker to login to the database with unrestricted access. \n\n- CVE-2022-36159: Contec FXA3200 version 1.13 and under were discovered to contain a hard coded hash password for root stored in the component /etc/shadow. As the password strength is weak, it can be cracked in few minutes. Through this credential, a malicious actor can access the Wireless LAN Manager interface and open the telnet port then sniff the traffic or inject any malware.\n\n- CVE-2022-41653: Daikin SVMPC1 version 2.1.22 and prior and SVMPC2 version 1.2.3 and prior are vulnerable to an attacker obtaining user login credentials and control the system.\n\n- CVE-2022-48067: An information disclosure vulnerability in Totolink A830R V4.1.2cu.5182 allows attackers to obtain the root password via a brute-force attack.\n\nRelated Weaknesses:\n\n- CWE-798 (ChildOf)\n\n- CWE-798 (ChildOf)\n\n- CWE-798 (ChildOf)\n\n- CWE-321 (PeerOf)\n\n- CWE-257 (PeerOf)",
          "type": "Variant",
          "source": "sparse",
          "search_source": "weakness:command injection",
          "sources": [
            "base",
            "weakness"
          ],
          "boost_factor": 2.8,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            }
          }
        },
        {
          "cwe_id": "116",
          "name": "Improper Encoding or Escaping of Output",
          "description": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
          "score": 86.1787009146509,
          "matched_text": "CWE-116: Improper Encoding or Escaping of Output\n\nType: Class\n\nStatus: Draft\n\nAlternative Terms:\n\nOutput Sanitization\nOutput Validation\nOutput Encoding\n\nOutput Sanitization\nOutput Validation\nOutput Encoding\n\nOutput Sanitization\nOutput Validation\nOutput Encoding\n\nDescription:\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\nExtended Details:\n\n\n\nImproper encoding or escaping can allow attackers to change the commands that are sent to another component, inserting malicious commands instead.\n\n\nMost products follow a certain protocol that uses structured messages for communication between components, such as queries or commands. These structured messages can contain raw data interspersed with metadata or control information. For example, \"GET /index.html HTTP/1.1\" is a structured message containing a command (\"GET\") with a single argument (\"/index.html\") and metadata about which protocol version is being used (\"HTTP/1.1\").\n\n\nIf an application uses attacker-supplied inputs to construct a structured message without properly encoding or escaping, then the attacker could insert special characters that will cause the data to be interpreted as control information or metadata. Consequently, the component that receives the output will perform the wrong operations, or otherwise interpret the data incorrectly.\n\n\nReal-World Examples:\n\n- CVE-2021-41232: Chain: authentication routine in Go-based agile development product does not escape user name (CWE-116), allowing LDAP injection (CWE-90)\n\n- CVE-2008-4636: OS command injection in backup software using shell metacharacters in a filename; correct behavior would require that this filename could not be changed.\n\n- CVE-2008-0769: Web application does not set the charset when sending a page to a browser, allowing for XSS exploitation when a browser chooses an unexpected encoding.\n\n- CVE-2008-0005: Program does not set the charset when sending a page to a browser, allowing for XSS exploitation when a browser chooses an unexpected encoding.\n\n- CVE-2008-5573: SQL injection via password parameter; a strong password might contain \"&\"\n\n- CVE-2008-3773: Cross-site scripting in chat application via a message subject, which normally might contain \"&\" and other XSS-related characters.\n\n- CVE-2008-0757: Cross-site scripting in chat application via a message, which normally might be allowed to contain arbitrary content.\n\nTop 25 CWE Examples:\n\n- CVE-2021-20195: A flaw was found in keycloak in versions before 13.0.0. A Self Stored XSS attack vector escalating to a complete account takeover is possible due to user-supplied data fields not being properly encoded and Javascript code being used to process the data. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.\n\n- CVE-2021-21684: Jenkins Git Plugin 4.8.2 and earlier does not escape the Git SHA-1 checksum parameters provided to commit notifications when displaying them in a build cause, resulting in a stored cross-site scripting (XSS) vulnerability.\n\n- CVE-2021-3148: An issue was discovered in SaltStack Salt before 3002.5. Sending crafted web requests to the Salt API can result in salt.utils.thin.gen_thin() command injection because of different handling of single versus double quotes. This is related to salt/utils/thin.py.\n\n- CVE-2021-32796: xmldom is an open source pure JavaScript W3C standard-based (XML DOM Level 2 Core) DOMParser and XMLSerializer module. xmldom versions 0.6.0 and older do not correctly escape special characters when serializing elements removed from their ancestor. This may lead to unexpected syntactic changes during XML processing in some downstream applications. This issue has been resolved in version 0.7.0. As a workaround downstream applications can validate the input and reject the maliciously crafted documents.\n\n- CVE-2021-30640: A vulnerability in the JNDI Realm of Apache Tomcat allows an attacker to authenticate using variations of a valid user name and/or to bypass some of the protection provided by the LockOut Realm. This issue affects Apache Tomcat 10.0.0-M1 to 10.0.5; 9.0.0.M1 to 9.0.45; 8.5.0 to 8.5.65.\n\n- CVE-2020-27958: The Job Composer app in Ohio Supercomputer Center Open OnDemand before 1.7.19 and 1.8.x before 1.8.18 allows remote authenticated users to provide crafted input in a job template.\n\n- CVE-2021-44042: An issue was discovered in UiPath Assistant 21.4.4. User-controlled data supplied to the --process-start argument of the URI handler for uipath-assistant:// is not correctly encoded, resulting in attacker-controlled content being injected into the error message displayed (when the injected content does not match an existing process). A determined attacker could leverage this to execute JavaScript in the context of the Electron application.\n\n- CVE-2022-0210: The Random Banner WordPress plugin is vulnerable to Stored Cross-Site Scripting due to insufficient escaping via the category parameter found in the ~/include/models/model.php file which allowed attackers with administrative user access to inject arbitrary web scripts, in versions up to and including 4.1.4. This affects multi-site installations where unfiltered_html is disabled for administrators, and sites where unfiltered_html is disabled.\n\n- CVE-2022-0220: The check_privacy_settings AJAX action of the WordPress GDPR WordPress plugin before 1.9.27, available to both unauthenticated and authenticated users, responds with JSON data without an \"application/json\" content-type. Since an HTML payload isn't properly escaped, it may be interpreted by a web browser led to this endpoint. Javascript code may be executed on a victim's browser. Due to v1.9.26 adding a CSRF check, the XSS is only exploitable against unauthenticated users (as they all share the same nonce)\n\n- CVE-2022-0479: The Popup Builder WordPress plugin before 4.1.1 does not sanitise and escape the sgpb-subscription-popup-id parameter before using it in a SQL statement in the All Subscribers admin dashboard, leading to a SQL injection, which could also be used to perform Reflected Cross-Site Scripting attack against a logged in admin opening a malicious link\n\n- CVE-2022-1407: The VikBooking Hotel Booking Engine & PMS WordPress plugin before 1.5.8 does not have CSRF check in place when adding a tracking campaign, and does not escape the campaign fields when outputting them In attributes. As a result, attackers could make a logged in admin add tracking campaign with XSS payloads in them via a CSRF attack\n\n- CVE-2022-2099: The WooCommerce WordPress plugin before 6.6.0 is vulnerable to stored HTML injection due to lack of escaping and sanitizing in the payment gateway titles\n\n- CVE-2022-2241: The Featured Image from URL (FIFU) WordPress plugin before 4.0.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack. Furthermore, due to the lack of validation, sanitisation and escaping in some of them, it could also lead to Stored XSS issues\n\n- CVE-2022-22734: The Simple Quotation WordPress plugin through 1.3.2 does not have CSRF check when creating or editing a quote and does not sanitise and escape Quotes. As a result, attacker could make a logged in admin create or edit arbitrary quote, and put Cross-Site Scripting payloads in them\n\n- CVE-2022-23603: iTunesRPC-Remastered is a discord rich presence application for use with iTunes & Apple Music. In code before commit 24f43aa user input is not properly sanitized and code injection is possible. Users are advised to upgrade as soon as is possible. There are no known workarounds for this issue.\n\n- CVE-2022-23620: XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. In affected versions AbstractSxExportURLFactoryActionHandler#processSx does not escape anything from SSX document references when serializing it on filesystem, it is possible to for the HTML export process to contain reference elements containing filesystem syntax like \"../\", \"./\". or \"/\" in general. The referenced elements are not properly escaped. This issue has been resolved in version 13.6-rc-1. This issue can be worked around by limiting or disabling document export.\n\n- CVE-2022-30966: Jenkins Random String Parameter Plugin 1.0 and earlier does not escape the name and description of Random String parameters on views displaying parameters, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.\n\n- CVE-2022-48339: An issue was discovered in GNU Emacs through 28.2. htmlfontify.el has a command injection vulnerability. In the hfy-istext-command function, the parameter file and parameter srcdir come from external input, and parameters are not escaped. If a file name or directory name contains shell metacharacters, code may be executed.\n\n- CVE-2022-24682: An issue was discovered in the Calendar feature in Zimbra Collaboration Suite 8.8.x before 8.8.15 patch 30 (update 1), as exploited in the wild starting in December 2021. An attacker could place HTML containing executable JavaScript inside element attributes. This markup becomes unescaped, causing arbitrary markup to be injected into the document.\n\n- CVE-2022-42948: Cobalt Strike 4.7.1 fails to properly escape HTML tags when they are displayed on Swing components. By injecting crafted HTML code, it is possible to remotely execute code in the Cobalt Strike UI.\n\n- CVE-2021-39027: IBM Guardium Data Encryption (GDE) 4.0.0 and 5.0.0 prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved. IBM X-Force ID: 213865.\n\n- CVE-2022-41934: XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. Any user with view rights on commonly accessible documents including the menu macro can execute arbitrary Groovy, Python or Velocity code in XWiki leading to full access to the XWiki installation due to improper escaping of the macro content and parameters of the menu macro. The problem has been patched in XWiki 14.6RC1, 13.10.8 and 14.4.3. The patch (commit `2fc20891`) for the document `Menu.MenuMacro` can be manually applied or a XAR archive of a patched version can be imported. The menu macro was basically unchanged since XWiki 11.6 so on XWiki 11.6 or later the patch for version of 13.10.8 (commit `59ccca24a`) can most likely be applied, on XWiki version 14.0 and later the versions in XWiki 14.6 and 14.4.3 should be appropriate.\n\n- CVE-2022-45143: The JsonErrorReportValve in Apache Tomcat 8.5.83, 9.0.40 to 9.0.68 and 10.1.0-M1 to 10.1.1 did not escape the type, message or description values. In some circumstances these are constructed from user provided data and it was therefore possible for users to supply values that invalidated or manipulated the JSON output.\n\n- CVE-2022-28960: A PHP injection vulnerability in Spip before v3.2.8 allows attackers to execute arbitrary PHP code via the _oups parameter at /ecrire.\n\n- CVE-2022-36099: XWiki Platform Wiki UI Main Wiki is software for managing subwikis on XWiki Platform, a generic wiki platform. Starting with version 5.3-milestone-2 and prior to versions 13.10.6 and 14.4, it's possible to inject arbitrary wiki syntax including Groovy, Python and Velocity script macros via the request (URL parameter) using the `XWikiServerClassSheet` if the user has view access to this sheet and another page that has been saved with programming rights, a standard condition on a public read-only XWiki installation or a private XWiki installation where the user has an account. This allows arbitrary Groovy/Python/Velocity code execution which allows bypassing all rights checks and thus both modification and disclosure of all content stored in the XWiki installation. Also, this could be used to impact the availability of the wiki. This has been patched in versions 13.10.6 and 14.4. As a workaround, edit the affected document `XWiki.XWikiServerClassSheet` or `WikiManager.XWikiServerClassSheet` and manually perform the changes from the patch fixing the issue. On XWiki versions 12.0 and later, it is also possible to import the document `XWiki.XWikiServerClassSheet` from the xwiki-platform-wiki-ui-mainwiki package version 14.4 using the import feature of the administration application as there have been no other changes to this document since XWiki 12.0.\n\n- CVE-2022-36100: XWiki Platform Applications Tag and XWiki Platform Tag UI are tag applications for XWiki, a generic wiki platform. Starting with version 1.7 in XWiki Platform Applications Tag and prior to 13.10.6 and 14.4 in XWiki Platform Tag UI, the tags document `Main.Tags` in XWiki didn't sanitize user inputs properly. This allowed users with view rights on the document (default in a public wiki or for authenticated users on private wikis) to execute arbitrary Groovy, Python and Velocity code with programming rights. This also allowed bypassing all rights checks and thus both modification and disclosure of all content stored in the XWiki installation. The vulnerability could be used to impact the availability of the wiki. On XWiki versions before 13.10.4 and 14.2, this can be combined with CVE-2022-36092, meaning that no rights are required to perform the attack. The vulnerability has been patched in versions 13.10.6 and 14.4. As a workaround, the patch that fixes the issue can be manually applied to the document `Main.Tags` or the updated version of that document can be imported from version 14.4 of xwiki-platform-tag-ui using the import feature in the administration UI on XWiki 10.9 and later.\n\n- CVE-2022-22744: The constructed curl command from the \"Copy as curl\" feature in DevTools was not properly escaped for PowerShell. This could have lead to command injection if pasted into a Powershell prompt.<br>*This bug only affects Thunderbird for Windows. Other operating systems are unaffected.*. This vulnerability affects Firefox ESR < 91.5, Firefox < 96, and Thunderbird < 91.5.\n\n- CVE-2022-22992: A command injection remote code execution vulnerability was discovered on Western Digital My Cloud Devices that could allow an attacker to execute arbitrary system commands on the device. The vulnerability was addressed by escaping individual arguments to shell functions coming from user input.\n\n- CVE-2022-34820: A vulnerability has been identified in SIMATIC CP 1242-7 V2 (All versions < V3.3.46), SIMATIC CP 1243-1 (All versions < V3.3.46), SIMATIC CP 1243-7 LTE EU (All versions < V3.3.46), SIMATIC CP 1243-7 LTE US (All versions < V3.3.46), SIMATIC CP 1243-8 IRC (All versions < V3.3.46), SIMATIC CP 1542SP-1 IRC (All versions >= V2.0 < V2.2.28), SIMATIC CP 1543-1 (All versions < V3.0.22), SIMATIC CP 1543SP-1 (All versions >= V2.0 < V2.2.28), SIPLUS ET 200SP CP 1542SP-1 IRC TX RAIL (All versions >= V2.0 < V2.2.28), SIPLUS ET 200SP CP 1543SP-1 ISEC (All versions >= V2.0 < V2.2.28), SIPLUS ET 200SP CP 1543SP-1 ISEC TX RAIL (All versions >= V2.0 < V2.2.28), SIPLUS NET CP 1242-7 V2 (All versions < V3.3.46), SIPLUS NET CP 1543-1 (All versions < V3.0.22), SIPLUS S7-1200 CP 1243-1 (All versions < V3.3.46), SIPLUS S7-1200 CP 1243-1 RAIL (All versions < V3.3.46). The application does not correctly escape some user provided fields during the authentication process. This could allow an attacker to inject custom commands and execute arbitrary code with elevated privileges.\n\n- CVE-2022-35153: FusionPBX 5.0.1 was discovered to contain a command injection vulnerability via /fax/fax_send.php.\n\n- CVE-2022-29599: In Apache Maven maven-shared-utils prior to version 3.3.3, the Commandline class can emit double-quoted strings without proper escaping, allowing shell injection attacks.\n\n- CVE-2022-26174: A remote code execution (RCE) vulnerability in Beekeeper Studio v3.2.0 allows attackers to execute arbitrary code via a crafted payload injected into the display fields.\n\n- CVE-2021-30589: Insufficient validation of untrusted input in Sharing in Google Chrome prior to 92.0.4515.107 allowed a remote attacker to bypass navigation restrictions via a crafted click-to-call link.\n\n- CVE-2022-0124: An issue has been discovered affecting GitLab versions prior to 14.4.5, between 14.5.0 and 14.5.3, and between 14.6.0 and 14.6.1. Gitlab's Slack integration is incorrectly validating user input and allows to craft malicious URLs that are sent to slack.\n\n- CVE-2022-0741: Improper input validation in all versions of GitLab CE/EE using sendmail to send emails allowed an attacker to steal environment variables via specially crafted email addresses.\n\n- CVE-2022-20230: In choosePrivateKeyAlias of KeyChain.java, there is a possible access to the user's certificate due to improper input validation. This could lead to local information disclosure with no additional execution privileges needed. User interaction is needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12LAndroid ID: A-221859869\n\n- CVE-2022-2619: Insufficient validation of untrusted input in Settings in Google Chrome prior to 104.0.5112.79 allowed an attacker who convinced a user to install a malicious extension to inject scripts or HTML into a privileged page via a crafted HTML page.\n\n- CVE-2021-4068: Insufficient data validation in new tab page in Google Chrome prior to 96.0.4664.93 allowed a remote attacker to leak cross-origin data via a crafted HTML page.\n\nRelated Weaknesses:\n\n- CWE-707 (ChildOf)\n\n- CWE-74 (CanPrecede)",
          "type": "Class",
          "source": "sparse",
          "search_source": "weakness:command injection",
          "sources": [
            "base",
            "weakness"
          ],
          "boost_factor": 2.8,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed-with-Review",
              "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
              "comments": "Examine children of this entry to see if there is a better fit",
              "reasons": [
                "Abstraction"
              ]
            }
          }
        },
        {
          "cwe_id": "74",
          "name": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
          "description": "The product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.",
          "score": 85.84432739015202,
          "matched_text": "CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n\nType: Class\n\nStatus: Incomplete\n\nDescription:\n\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\nExtended Details:\n\nSoftware or other automated logic has certain assumptions about what constitutes data and control respectively. It is the lack of verification of these assumptions for user-controlled input that leads to injection problems. Injection problems encompass a wide variety of issues -- all mitigated in very different ways and usually attempted in order to alter the control flow of the process. For this reason, the most effective way to discuss these weaknesses is to note the distinct features that classify them as injection weaknesses. The most important issue to note is that all injection problems share one thing in common -- i.e., they allow for the injection of control plane data into the user-controlled data plane. This means that the execution of the process may be altered by sending code in through legitimate data channels, using no other mechanism. While buffer overflows, and many other flaws, involve the use of some further issue to gain execution, injection problems need only for the data to be parsed.\n\nReal-World Examples:\n\n- CVE-2024-5184: API service using a large generative AI model allows direct prompt injection to leak hard-coded system prompts or execute other prompts.\n\n- CVE-2022-36069: Python-based dependency management tool avoids OS command injection when generating Git commands but allows injection of optional arguments with input beginning with a dash (CWE-88), potentially allowing for code execution.\n\n- CVE-1999-0067: Canonical example of OS command injection. CGI program does not neutralize \"|\" metacharacter when invoking a phonebook program.\n\n- CVE-2022-1509: injection of sed script syntax (\"sed injection\")\n\n- CVE-2020-9054: Chain: improper input validation (CWE-20) in username parameter, leading to OS command injection (CWE-78), as exploited in the wild per CISA KEV.\n\n- CVE-2021-44228: Product does not neutralize ${xyz} style expressions, allowing remote code execution. (log4shell vulnerability)\n\nTop 25 CWE Examples:\n\n- CVE-2021-29676: IBM Security Verify (IBM Security Verify Privilege Vault 10.9.66) is vulnerable to link injection. By persuading a victim to click on a specially-crafted URL link, a remote attacker could exploit this vulnerability to conduct various attacks against the vulnerable system, including cross-site scripting, cache poisoning or session hijacking\n\n- CVE-2021-38458: A path traversal vulnerability in the Moxa MXview Network Management software Versions 3.x to 3.2.2 may allow an attacker to create or overwrite critical files used to execute code, such as programs or libraries.\n\n- CVE-2021-21137: Inappropriate implementation in DevTools in Google Chrome prior to 88.0.4324.96 allowed a remote attacker to obtain potentially sensitive information from disk via a crafted HTML page.\n\n- CVE-2021-27614: SAP Business One Hana Chef Cookbook, versions - 8.82, 9.0, 9.1, 9.2, 9.3, 10.0, used to install SAP Business One on SAP HANA, allows an attacker to inject code that can be executed by the application. An attacker could thereby control the behaviour of the application thereby highly impacting the integrity and availability of the application.\n\n- CVE-2021-3154: An issue was discovered in SolarWinds Serv-U before 15.2.2. Unauthenticated attackers can retrieve cleartext passwords via macro Injection. NOTE: this had a distinct fix relative to CVE-2020-35481.\n\n- CVE-2021-29084: Improper neutralization of special elements in output used by a downstream component ('Injection') vulnerability in Security Advisor report management component in Synology DiskStation Manager (DSM) before 6.2.3-25426-3 allows remote attackers to read arbitrary files via unspecified vectors.\n\n- CVE-2021-29085: Improper neutralization of special elements in output used by a downstream component ('Injection') vulnerability in file sharing management component in Synology DiskStation Manager (DSM) before 6.2.3-25426-3 allows remote attackers to read arbitrary files via unspecified vectors.\n\n- CVE-2021-27908: In all versions prior to Mautic 3.3.2, secret parameters such as database credentials could be exposed publicly by an authorized admin user through leveraging Symfony parameter syntax in any of the free text fields in Mautic\u2019s configuration that are used in publicly facing parts of the application.\n\n- CVE-2020-5323: Dell EMC OpenManage Enterprise (OME) versions prior to 3.2 and OpenManage Enterprise-Modular (OME-M) versions prior to 1.10.00 contain an injection vulnerability. A remote authenticated malicious user with low privileges could potentially exploit this vulnerability to gain access to sensitive information or cause denial-of-service.\n\n- CVE-2021-20101: Machform prior to version 16 is vulnerable to HTTP host header injection due to improperly validated host headers. This could cause a victim to receive malformed content.\n\n- CVE-2021-20644: ELECOM WRC-1467GHBK-A allows arbitrary scripts to be executed on the user's web browser by displaying a specially crafted SSID on the web setup page.\n\n- CVE-2021-20802: HTTP header injection vulnerability in Cybozu Remote Service 3.1.8 to 3.1.9 allows a remote attacker to alter the information stored in the product.\n\n- CVE-2021-21510: Dell iDRAC8 versions prior to 2.75.100.75 contain a host header injection vulnerability. A remote unauthenticated attacker may potentially exploit this vulnerability by injecting arbitrary \u2018Host\u2019 header values to poison a web-cache or trigger redirections.\n\n- CVE-2021-21580: Dell EMC iDRAC8 versions prior to 2.80.80.80 & Dell EMC iDRAC9 versions prior to 5.00.00.00 contain a Content spoofing / Text injection, where a malicious URL can inject text to present a customized message on the application that can phish users into believing that the message is legitimate.\n\n- CVE-2021-23400: The package nodemailer before 6.6.1 are vulnerable to HTTP Header Injection if unsanitized user input that may contain newlines and carriage returns is passed into an address object.\n\n- CVE-2021-25980: In Talkyard, versions v0.04.01 through v0.6.74-WIP-63220cb, v0.2020.22-WIP-b2e97fe0e through v0.2021.02-WIP-879ef3fe1 and tyse-v0.2021.02-879ef3fe1-regular through tyse-v0.2021.28-af66b6905-regular, are vulnerable to Host Header Injection. By luring a victim application-user to click on a link, an unauthenticated attacker can use the \u201cforgot password\u201d functionality to reset the victim\u2019s password and successfully take over their account.\n\n- CVE-2021-26084: In affected versions of Confluence Server and Data Center, an OGNL injection vulnerability exists that would allow an unauthenticated attacker to execute arbitrary code on a Confluence Server or Data Center instance. The affected versions are before version 6.13.23, from version 6.14.0 before 7.4.11, from version 7.5.0 before 7.11.6, and from version 7.12.0 before 7.12.5.\n\n- CVE-2021-28963: Shibboleth Service Provider before 3.2.1 allows content injection because template generation uses attacker-controlled parameters.\n\n- CVE-2021-36322: Dell Networking X-Series firmware versions prior to 3.0.1.8 contain a host header injection vulnerability. A remote unauthenticated attacker may potentially exploit this vulnerability by injecting arbitrary host header values to poison the web-cache or trigger redirections.\n\n- CVE-2021-36381: In Edifecs Transaction Management through 2021-07-12, an unauthenticated user can inject arbitrary text into a user's browser via logon.jsp?logon_error= on the login screen of the Web application.\n\n- CVE-2021-37033: There is an Injection attack vulnerability in Huawei Smartphone.Successful exploitation of this vulnerability may affect service availability.\n\n- CVE-2021-38290: A host header attack vulnerability exists in FUEL CMS 1.5.0 through fuel/modules/fuel/config/fuel_constants.php and fuel/modules/fuel/libraries/Asset.php. An attacker can use a man in the middle attack such as phishing.\n\n- CVE-2021-38371: The STARTTLS feature in Exim through 4.94.2 allows response injection (buffering) during MTA SMTP sending.\n\n- CVE-2021-39213: GLPI is a free Asset and IT management software package. Starting in version 9.1 and prior to version 9.5.6, GLPI with API Rest enabled is vulnerable to API bypass with custom header injection. This issue is fixed in version 9.5.6. One may disable API Rest as a workaround.\n\n- CVE-2021-40143: Sonatype Nexus Repository 3.x through 3.33.1-01 is vulnerable to an HTTP header injection. By sending a crafted HTTP request, a remote attacker may disclose sensitive information or request external resources from a vulnerable instance.\n\n- CVE-2021-43185: JetBrains YouTrack before 2021.3.23639 is vulnerable to Host header injection.\n\n- CVE-2021-25994: In Userfrosting, versions v0.3.1 to v4.6.2 are vulnerable to Host Header Injection. By luring a victim application user to click on a link, an unauthenticated attacker can use the \u201cforgot password\u201d functionality to reset the victim\u2019s password and successfully take over their account.\n\n- CVE-2021-37262: JFinal_cms 5.1.0 is vulnerable to regex injection that may lead to Denial of Service.\n\n- CVE-2021-43437: In sourcecodetester Engineers Online Portal as of 10-21-21, an attacker can manipulate the Host header as seen by the web application and cause the application to behave in unexpected ways. Very often multiple websites are hosted on the same IP address. This is where the Host Header comes in. This header specifies which website should process the HTTP request. The web server uses the value of this header to dispatch the request to the specified website. Each website hosted on the same IP address is called a virtual host. And It's possible to send requests with arbitrary Host Headers to the first virtual host.\n\n- CVE-2021-44530: An injection vulnerability exists in a third-party library used in UniFi Network Version 6.5.53 and earlier (Log4J CVE-2021-44228) allows a malicious actor to control the application.\n\n- CVE-2021-44537: ownCloud owncloud/client before 2.9.2 allows Resource Injection by a server into the desktop client via a URL, leading to remote code execution.\n\n- CVE-2021-45658: Certain NETGEAR devices are affected by server-side injection. This affects D7800 before 1.0.1.58, DM200 before 1.0.0.66, EX2700 before 1.0.1.56, EX6150v2 before 1.0.1.86, EX6100v2 before 1.0.1.86, EX6200v2 before 1.0.1.78, EX6250 before 1.0.0.110, EX6410 before 1.0.0.110, EX6420 before 1.0.0.110, EX6400v2 before 1.0.0.110, EX7300 before 1.0.2.144, EX6400 before 1.0.2.144, EX7320 before 1.0.0.110, EX7300v2 before 1.0.0.110, R7500v2 before 1.0.3.48, R7800 before 1.0.2.68, R8900 before 1.0.5.2, R9000 before 1.0.5.2, RAX120 before 1.0.1.90, RBK40 before 2.5.1.16, RBK20 before 2.5.1.16, RBR20 before 2.5.1.16, RBS20 before 2.5.1.16, RBK50 before 2.5.1.16, RBR50 before 2.5.1.16, RBS50 before 2.5.1.16, RBS50Y before 2.6.1.40, WN3000RPv2 before 1.0.0.78, WN3000RPv3 before 1.0.2.80, WNR2000v5 before 1.0.0.72, XR500 before 2.3.2.56, and XR700 before 1.0.1.20.\n\n- CVE-2021-45655: NETGEAR R6400 devices before 1.0.1.70 are affected by server-side injection.\n\n- CVE-2021-45656: Certain NETGEAR devices are affected by server-side injection. This affects D6200 before 1.1.00.38, D7000 before 1.0.1.78, R6020 before 1.0.0.48, R6080 before 1.0.0.48, R6050 before 1.0.1.26, JR6150 before 1.0.1.26, R6120 before 1.0.0.66, R6220 before 1.1.0.100, R6230 before 1.1.0.100, R6260 before 1.1.0.78, R6800 before 1.2.0.76, R6900v2 before 1.2.0.76, R6700v2 before 1.2.0.76, R7450 before 1.2.0.76, AC2100 before 1.2.0.76, AC2400 before 1.2.0.76, AC2600 before 1.2.0.76, RBK40 before 2.5.1.16, RBR40 before 2.5.1.16, RBS40 before 2.5.1.16, RBK20 before 2.5.1.16, RBR20 before 2.5.1.16, RBS20 before 2.5.1.16, RBK50 before 2.5.1.16, RBR50 before 2.5.1.16, RBS50 before 2.5.1.16, and RBS50Y before 2.6.1.40.\n\n- CVE-2021-45657: Certain NETGEAR devices are affected by server-side injection. This affects D6200 before 1.1.00.38, D7000 before 1.0.1.78, R6020 before 1.0.0.48, R6080 before 1.0.0.48, R6050 before 1.0.1.26, JR6150 before 1.0.1.26, R6120 before 1.0.0.66, R6220 before 1.1.0.100, R6230 before 1.1.0.100, R6260 before 1.1.0.78, R6800 before 1.2.0.76, R6900v2 before 1.2.0.76, R6700v2 before 1.2.0.76, R7450 before 1.2.0.76, AC2100 before 1.2.0.76, AC2400 before 1.2.0.76, AC2600 before 1.2.0.76, RBK40 before 2.5.1.16, RBR40 before 2.5.1.16, RBS40 before 2.5.1.16, RBK20 before 2.5.1.16, RBR20 before 2.5.1.16, RBS20 before 2.5.1.16, RBK50 before 2.5.1.16, RBR50 before 2.5.1.16, RBS50 before 2.5.1.16, RBS50Y before 2.6.1.40, and WNR2020 before 1.1.0.62.\n\n- CVE-2021-45659: Certain NETGEAR devices are affected by server-side injection. This affects RBK40 before 2.5.1.16, RBR40 before 2.5.1.16, RBS40 before 2.5.1.16, RBK20 before 2.5.1.16, RBR20 before 2.5.1.16, RBS20 before 2.5.1.16, RBK50 before 2.5.1.16, RBR50 before 2.5.1.16, RBS50 before 2.5.1.16, and RBS50Y before 2.6.1.40.\n\n- CVE-2021-45660: Certain NETGEAR devices are affected by server-side injection. This affects RBK40 before 2.5.1.16, RBR40 before 2.5.1.16, RBS40 before 2.5.1.16, RBK20 before 2.5.1.16, RBR20 before 2.5.1.16, RBS20 before 2.5.1.16, RBK50 before 2.5.1.16, RBR50 before 2.5.1.16, RBS50 before 2.5.1.16, and RBS50Y before 2.6.1.40.\n\n- CVE-2021-45661: Certain NETGEAR devices are affected by server-side injection. This affects RBK40 before 2.5.1.16, RBR40 before 2.5.1.16, RBS40 before 2.5.1.16, RBK20 before 2.5.1.16, RBR20 before 2.5.1.16, RBS20 before 2.5.1.16, RBK50 before 2.5.1.16, RBR50 before 2.5.1.16, RBS50 before 2.5.1.16, and RBS50Y before 2.6.1.40.\n\n- CVE-2021-32499: SICK SOPAS ET before version 4.8.0 allows attackers to manipulate the command line arguments to pass in any value to the Emulator executable.\n\n- CVE-2021-29872: IBM Cloud Pak for Automation 21.0.1 and 21.0.2 - Business Automation Studio Component is vulnerable to HTTP header injection, caused by improper validation of input by the HOST headers. By sending a specially crafted HTTP request, a remote attacker could exploit this vulnerability to inject HTTP HOST header, which will allow the attacker to conduct various attacks against the vulnerable system, including cross-site scripting, cache poisoning or session hijacking. IBM X-Force ID: 206228.\n\n- CVE-2021-41282: diag_routes.php in pfSense 2.5.2 allows sed data injection. Authenticated users are intended to be able to view data about the routes set in the firewall. The data is retrieved by executing the netstat utility, and then its output is parsed via the sed utility. Although the common protection mechanisms against command injection (i.e., the usage of the escapeshellarg function for the arguments) are used, it is still possible to inject sed-specific code and write an arbitrary file in an arbitrary location.\n\n- CVE-2022-31777: A stored cross-site scripting (XSS) vulnerability in Apache Spark 3.2.1 and earlier, and 3.3.0, allows remote attackers to execute arbitrary JavaScript in the web browser of a user, by including a malicious payload into the logs which would be returned in logs rendered in the UI.\n\n- CVE-2022-28345: The Signal app before 5.34 for iOS allows URI spoofing via RTLO injection. It incorrectly renders RTLO encoded URLs beginning with a non-breaking space, when there is a hash character in the URL. This technique allows a remote unauthenticated attacker to send legitimate looking links, appearing to be any website URL, by abusing the non-http/non-https automatic rendering of URLs. An attacker can spoof, for example, example.com, and masquerade any URL with a malicious destination. An attacker requires a subdomain such as gepj, txt, fdp, or xcod, which would appear backwards as jpeg, txt, pdf, and docx respectively.\n\n- CVE-2022-3941: A vulnerability has been found in Activity Log Plugin and classified as critical. This vulnerability affects unknown code of the component HTTP Header Handler. The manipulation of the argument X-Forwarded-For leads to improper output neutralization for logs. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-213448.\n\n- CVE-2021-36668: URL injection in Driva inSync 6.9.0 for MacOS, allows attackers to force a visit to an arbitrary url via the port parameter to the Electron App.\n\n- CVE-2022-23064: In Snipe-IT, versions v3.0-alpha to v5.3.7 are vulnerable to Host Header Injection. By sending a specially crafted host header in the reset password request, it is possible to send password reset links to users which once clicked lead to an attacker controlled server and thus leading to password reset token leak. This leads to account take over.\n\n- CVE-2022-23701: A potential remote host header injection security vulnerability has been identified in HPE Integrated Lights-Out 4 (iLO 4) firmware version(s): Prior to 2.60. This vulnerability could be remotely exploited to allow an attacker to supply invalid input to the iLO 4 webserver, causing it to respond with a redirect to an attacker-controlled domain. HPE has provided a firmware update to resolve this vulnerability in HPE Integrated Lights-Out 4 (iLO 4).\n\n- CVE-2022-25337: Ibexa DXP ezsystems/ezpublish-kernel 7.5.x before 7.5.26 and 1.3.x before 1.3.12 allows injection attacks via image filenames.\n\n- CVE-2022-31593: SAP Business One client - version 10.0 allows an attacker with low privileges, to inject code that can be executed by the application. An attacker could thereby control the behavior of the application.\n\n- CVE-2022-31658: VMware Workspace ONE Access, Identity Manager and vRealize Automation contain a remote code execution vulnerability. A malicious actor with administrator and network access can trigger a remote code execution.\n\n- CVE-2022-31665: VMware Workspace ONE Access, Identity Manager and vRealize Automation contain a remote code execution vulnerability. A malicious actor with administrator and network access can trigger a remote code execution.\n\n- CVE-2022-34773: Tabit - HTTP Method manipulation. https://bridge.tabit.cloud/configuration/addresses-query - can be POST-ed to add addresses to the DB. This is an example of OWASP:API8 \u2013 Injection.\n\n- CVE-2022-35735: In BIG-IP Versions 16.1.x before 16.1.3.1, 15.1.x before 15.1.6.1, 14.1.x before 14.1.5.1, and all versions of 13.1.x, an authenticated attacker with Resource Administrator or Manager privileges can create or modify existing monitor objects in the Configuration utility in an undisclosed manner leading to a privilege escalation. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-35954: The GitHub Actions ToolKit provides a set of packages to make creating actions easier. The `core.exportVariable` function uses a well known delimiter that attackers can use to break out of that specific variable and assign values to other arbitrary variables. Workflows that write untrusted values to the `GITHUB_ENV` file may cause the path or other environment variables to be modified without the intention of the workflow or action author. Users should upgrade to `@actions/core v1.9.1`. If you are unable to upgrade the `@actions/core` package, you can modify your action to ensure that any user input does not contain the delimiter `_GitHubActionsFileCommandDelimeter_` before calling `core.exportVariable`.\n\n- CVE-2022-46265: A vulnerability has been identified in Polarion ALM (All versions < V2304.0). The affected application contains a Host header injection vulnerability that could allow an attacker to spoof a Host header information and redirect users to malicious websites.\n\n- CVE-2022-26205: Marky commit 3686565726c65756e was discovered to contain a remote code execution (RCE) vulnerability via the Display text fields. This vulnerability allows attackers to execute arbitrary code via injection of a crafted payload.\n\n- CVE-2022-37933: A potential security vulnerability has been identified in HPE Superdome Flex and Superdome Flex 280 servers. The vulnerability could be exploited to allow local unauthorized data injection. HPE has made the following software updates to resolve the vulnerability in HPE Superdome Flex firmware 3.60.50 and below and Superdome Flex 280 servers firmware 1.40.60 and below. \n\n- CVE-2022-38796: A Host Header Injection vulnerability in Feehi CMS 2.1.1 may allow an attacker to spoof a particular header. This can be exploited by abusing password reset emails.\n\n- CVE-2022-33011: Known v1.3.1+2020120201 was discovered to allow attackers to perform an account takeover via a host header injection attack.\n\n- CVE-2022-33012: Microweber v1.2.15 was discovered to allow attackers to perform an account takeover via a host header injection attack.\n\n- CVE-2022-37108: An injection vulnerability in the syslog-ng configuration wizard in Securonix Snypr 6.4 allows an application user with the \"Manage Ingesters\" permission to execute arbitrary code on remote ingesters by appending arbitrary text to text files that are executed by the system, such as users' crontab files. The patch for this was present in SNYPR version 6.4 Jun 2022 R3_[06170871], but may have been introduced sooner.\n\nRelated Weaknesses:\n\n- CWE-707 (ChildOf)",
          "type": "Class",
          "source": "sparse",
          "search_source": "weakness:command injection",
          "sources": [
            "base",
            "weakness"
          ],
          "boost_factor": 2.8,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Discouraged",
              "rationale": "CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.",
              "comments": "Examine the children and descendants of this entry to find a more precise mapping.",
              "reasons": [
                "Frequent Misuse",
                "Abstraction"
              ]
            }
          }
        },
        {
          "cwe_id": "790",
          "name": "Improper Filtering of Special Elements",
          "description": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
          "score": 85.21118989842024,
          "matched_text": "CWE-790: Improper Filtering of Special Elements\n\nType: Class\n\nStatus: Incomplete\n\nDescription:\n\nThe product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.\n\nTop 25 CWE Examples:\n\n- CVE-2021-26029: An issue was discovered in Joomla! 1.6.0 through 3.9.24. Inadequate filtering of form contents could allow to overwrite the author field.\n\n- CVE-2021-0931: In getAlias of BluetoothDevice.java, there is a possible way to create misleading permission dialogs due to missing data filtering. This could lead to local information disclosure with User execution privileges needed. User interaction is needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-9Android ID: A-180747689\n\n- CVE-2022-0895: Static Code Injection in GitHub repository microweber/microweber prior to 1.3.\n\n- CVE-2022-40145: This vulnerable is about a potential code injection when an attacker has control of the target LDAP server using in the JDBC JNDI URL. The function jaas.modules.src.main.java.porg.apache.karaf.jass.modules.jdbc.JDBCUtils#doCreateDatasource use InitialContext.lookup(jndiName) without filtering. An user can modify `options.put(JDBCUtils.DATASOURCE, \"osgi:\" + DataSource.class.getName());` to `options.put(JDBCUtils.DATASOURCE,\"jndi:rmi://x.x.x.x:xxxx/Command\");` in JdbcLoginModuleTest#setup. This is vulnerable to a remote code execution (RCE) attack when a configuration uses a JNDI LDAP data source URI when an attacker has control of the target LDAP server.This issue affects all versions of Apache Karaf up to 4.4.1 and 4.3.7. We encourage the users to upgrade to Apache Karaf at least 4.4.2 or 4.3.8\n\n- CVE-2022-40740: Realtek GPON router has insufficient filtering for special characters. A remote attacker authenticated as an administrator can exploit this vulnerability to perform command injection attacks, to execute arbitrary system command, manipulate system or disrupt service.\n\n- CVE-2021-35587: Vulnerability in the Oracle Access Manager product of Oracle Fusion Middleware (component: OpenSSO Agent). Supported versions that are affected are 11.1.2.3.0, 12.2.1.3.0 and 12.2.1.4.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Oracle Access Manager. Successful attacks of this vulnerability can result in takeover of Oracle Access Manager. CVSS 3.1 Base Score 9.8 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H).\n\n- CVE-2022-24300: Minetest before 5.4.0 allows attackers to add or modify arbitrary meta fields of the same item stack as saved user input, aka ItemStack meta injection.\n\n- CVE-2022-24888: Nextcloud Server is the file server software for Nextcloud, a self-hosted productivity platform. Prior to versions 20.0.14.4, 21.0.8, 22.2.4, and 23.0.1, it is possible to create files and folders that have leading and trailing \\\\n, \\\\r, \\\\t, and \\\\v characters. The server rejects files and folders that have these characters in the middle of their names, so this might be an opportunity for injection. This issue is fixed in versions 20.0.14.4, 21.0.8, 22.2.4, and 23.0.1. There are currently no known workarounds.\n\n- CVE-2022-0578: Code Injection in GitHub repository publify/publify prior to 9.2.8.\n\n- CVE-2022-22985: The absence of filters when loading some sections in the web application of the vulnerable device allows attackers to inject malicious code that will be interpreted when a legitimate user accesses the specific web section where the information is displayed. Injection can be done on specific parameters. The injected code is executed when a legitimate user attempts to review history.\n\n- CVE-2022-24915: The absence of filters when loading some sections in the web application of the vulnerable device allows attackers to inject malicious code that will be interpreted when a legitimate user accesses the web section where the information is displayed. Injection can be done on specific parameters. The injected code is executed when a legitimate user attempts to upload, copy, download, or delete an existing configuration (Administrative Services).\n\n- CVE-2022-26198: Notable v1.8.4 does not filter text editing, allowing attackers to execute arbitrary code via a crafted payload injected into the Title text field.\n\n- CVE-2022-26272: A remote code execution (RCE) vulnerability in Ionize v1.0.8.1 allows attackers to execute arbitrary code via a crafted string written to the file application/config/config.php.\n\n- CVE-2022-28096: Skycaiji v2.4 was discovered to contain a remote code execution (RCE) vulnerability via /SkycaijiApp/admin/controller/Develop.php.\n\n- CVE-2022-3383: The Ultimate Member plugin for WordPress is vulnerable to Remote Code Execution in versions up to, and including, 2.5.0 via the get_option_value_from_callback function that accepts user supplied input and passes it through call_user_func(). This makes it possible for authenticated attackers, with administrative capabilities, to execute code on the server.\n\n- CVE-2022-3384: The Ultimate Member plugin for WordPress is vulnerable to Remote Code Execution in versions up to, and including, 2.5.0 via the populate_dropdown_options function that accepts user supplied input and passes it through call_user_func(). This is restricted to non-parameter PHP functions like phpinfo(); since user supplied parameters are not passed through the function. This makes it possible for authenticated attackers, with administrative privileges, to execute code on the server.\n\n- CVE-2022-36215: DedeBIZ v6 was discovered to contain a remote code execution vulnerability in sys_info.php.\n\n- CVE-2022-41945: super-xray is a vulnerability scanner (xray) GUI launcher. In version 0.1-beta, the URL is not filtered and directly spliced ??into the command, resulting in a possible RCE vulnerability. Users should upgrade to super-xray 0.2-beta.\n\n- CVE-2022-23881: ZZZCMS zzzphp v2.1.0 was discovered to contain a remote command execution (RCE) vulnerability via danger_key() at zzz_template.php.\n\n- CVE-2022-27411: TOTOLINK N600R v5.3c.5507_B20171031 was discovered to contain a command injection vulnerability via the QUERY_STRING parameter in the \"Main\" function.\n\n- CVE-2022-35517: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 adm.cgi has no filtering on parameters: web_pskValue, wl_Method, wlan_ssid, EncrypType, rwan_ip, rwan_mask, rwan_gateway, ppp_username, ppp_passwd and ppp_setver, which leads to command injection in page /wizard_router_mesh.shtml.\n\n- CVE-2022-35518: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 nas.cgi has no filtering on parameters: User1Passwd and User1, which leads to command injection in page /nas_disk.shtml.\n\n- CVE-2022-35519: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 firewall.cgi has no filtering on parameter add_mac, which leads to command injection in page /cli_black_list.shtml.\n\n- CVE-2022-35520: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 api.cgi has no filtering on parameter ufconf, and this is a hidden parameter which doesn't appear in POST body, but exist in cgi binary. This leads to command injection in page /ledonoff.shtml.\n\n- CVE-2022-35521: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 firewall.cgi has no filtering on parameters: remoteManagementEnabled, blockPortScanEnabled, pingFrmWANFilterEnabled and blockSynFloodEnabled, which leads to command injection in page /man_security.shtml.\n\n- CVE-2022-35522: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 adm.cgi has no filtering on parameters: ppp_username, ppp_passwd, rwan_gateway, rwan_mask and rwan_ip, which leads to command injection in page /wan.shtml.\n\n- CVE-2022-35523: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 firewall.cgi has no filtering on parameter del_mac and parameter flag, which leads to command injection in page /cli_black_list.shtml.\n\n- CVE-2022-35524: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 adm.cgi has no filtering on parameters: wlan_signal, web_pskValue, sel_EncrypTyp, sel_Automode, wlan_bssid, wlan_ssid and wlan_channel, which leads to command injection in page /wizard_rep.shtml.\n\n- CVE-2022-35525: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 adm.cgi has no filtering on parameter led_switch, which leads to command injection in page /ledonoff.shtml.\n\n- CVE-2022-35526: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 login.cgi has no filtering on parameter key, which leads to command injection in page /login.shtml.\n\n- CVE-2022-35533: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 qos.cgi has no filtering on parameters: cli_list and cli_num, which leads to command injection in page /qos.shtml.\n\n- CVE-2022-35534: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 wireless.cgi has no filtering on parameter hiddenSSID32g and SSID2G2, which leads to command injection in page /wifi_multi_ssid.shtml.\n\n- CVE-2022-35535: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 wireless.cgi has no filtering on parameter macAddr, which leads to command injection in page /wifi_mesh.shtml.\n\n- CVE-2022-35536: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 qos.cgi has no filtering on parameters: qos_bandwith and qos_dat, which leads to command injection in page /qos.shtml.\n\n- CVE-2022-35537: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 wireless.cgi has no filtering on parameters: mac_5g and Newname, which leads to command injection in page /wifi_mesh.shtml.\n\n- CVE-2022-35538: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 wireless.cgi has no filtering on parameters: delete_list, delete_al_mac, b_delete_list and b_delete_al_mac, which leads to command injection in page /wifi_mesh.shtml.\n\n- CVE-2022-37843: In TOTOLINK A860R V4.1.2cu.5182_B20201027 in cstecgi.cgi, the acquired parameters are directly put into the system for execution without filtering, resulting in a command injection vulnerability.\n\n- CVE-2022-29639: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a command injection vulnerability via the magicid parameter in the function uci_cloudupdate_config.\n\n- CVE-2022-32228: An information disclosure vulnerability exists in Rocket.Chat <v5, <v4.8.2 and <v4.7.5 since the getReadReceipts Meteor server method does not properly filter user inputs that are passed to MongoDB queries, allowing $regex queries to enumerate arbitrary Message IDs.\n\nRelated Weaknesses:\n\n- CWE-138 (ChildOf)",
          "type": "Class",
          "source": "sparse",
          "search_source": "weakness:command injection",
          "sources": [
            "weakness"
          ],
          "boost_factor": 2.8,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed-with-Review",
              "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
              "comments": "Examine children of this entry to see if there is a better fit",
              "reasons": [
                "Abstraction"
              ]
            }
          }
        },
        {
          "cwe_id": "620",
          "name": "Unverified Password Change",
          "description": "When setting a new password for a user, the product does not require knowledge of the original password, or using another form of authentication.",
          "score": 26.325134034464202,
          "matched_text": "CWE-620: Unverified Password Change\n\nType: Base\n\nStatus: Draft\n\nDescription:\n\nWhen setting a new password for a user, the product does not require knowledge of the original password, or using another form of authentication.\n\nExtended Details:\n\nThis could be used by an attacker to change passwords for another user, thus gaining the privileges associated with that user.\n\nReal-World Examples:\n\n- CVE-2007-0681: Web app allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions.\n\n- CVE-2000-0944: Web application password change utility doesn't check the original password.\n\nTop 25 CWE Examples:\n\n- CVE-2021-24359: The Plus Addons for Elementor Page Builder WordPress plugin before 4.1.11 did not properly check that a user requesting a password reset was the legitimate user, allowing an attacker to send an arbitrary reset password email to a registered user on behalf of the WordPress site. Such issue could be chained with an open redirect (CVE-2021-24358) in version below 4.1.10, to include a crafted password reset link in the email, which would lead to an account takeover.\n\n- CVE-2021-34785: Multiple vulnerabilities in Cisco BroadWorks CommPilot Application Software could allow an authenticated, remote attacker to delete arbitrary user accounts or gain elevated privileges on an affected system.\n\n- CVE-2021-34786: Multiple vulnerabilities in Cisco BroadWorks CommPilot Application Software could allow an authenticated, remote attacker to delete arbitrary user accounts or gain elevated privileges on an affected system.\n\n- CVE-2020-16839: On Crestron DM-NVX-DIR, DM-NVX-DIR80, and DM-NVX-ENT devices before the DM-XIO/1-0-3-802 patch, the password can be changed by sending an unauthenticated WebSocket request.\n\n- CVE-2021-40101: An issue was discovered in Concrete CMS before 8.5.7. The Dashboard allows a user's password to be changed without a prompt for the current password.\n\n- CVE-2020-20466: White Shark System (WSS) 1.3.2 is vulnerable to unauthorized access via user_edit_password.php, remote attackers can modify the password of any user.\n\n- CVE-2021-34977: This vulnerability allows network-adjacent attackers to bypass authentication on affected installations of NETGEAR R7000 1.0.11.116_10.2.100 routers. Authentication is not required to exploit this vulnerability. The specific flaw exists within the processing of SOAP requests. The issue results from the lack of proper authentication verification before performing a password reset. An attacker can leverage this vulnerability to reset the admin password. Was ZDI-CAN-13483.\n\n- CVE-2021-44152: An issue was discovered in Reprise RLM 14.2. Because /goform/change_password_process does not verify authentication or authorization, an unauthenticated user can change the password of any existing user. This allows an attacker to change the password of any known user, thereby preventing valid users from accessing the system and granting the attacker full access to that user's account.\n\n- CVE-2021-29394: Account Hijacking in /northstar/Admin/changePassword.jsp in Northstar Technologies Inc NorthStar Club Management 6.3 allows remote authenticated users to change the password of any targeted user accounts via lack of proper authorization in the user-controlled \"userID\" parameter of the HTTP POST request.\n\n- CVE-2022-21935: A vulnerability in Metasys ADS/ADX/OAS 10 versions prior to 10.1.5 and Metasys ADS/ADX/OAS 11 versions prior to 11.0.2 allows unverified password change.\n\n- CVE-2022-27484: A unverified password change in Fortinet FortiADC version 6.2.0 through 6.2.3, 6.1.x, 6.0.x, 5.x.x allows an authenticated attacker to bypass the Old Password check in the password change form via a crafted HTTP request.\n\n- CVE-2022-3152: Unverified Password Change in GitHub repository phpfusion/phpfusion prior to 9.10.20.\n\n- CVE-2022-21934: Under certain circumstances an authenticated user could lock other users out of the system or take over their accounts in Metasys ADS/ADX/OAS server 10 versions prior to 10.1.5 and Metasys ADS/ADX/OAS server 11 versions prior to 11.0.2.\n\n- CVE-2022-24551: A flaw was found in StarWind Stack. The endpoint for setting a new password doesn\u2019t check the current username and old password. An attacker could reset any local user password (including system/administrator user) using any available user This affects StarWind SAN and NAS v0.2 build 1633.\n\n- CVE-2022-0862: A lack of password change protection vulnerability in a depreciated API of McAfee Enterprise ePolicy Orchestrator (ePO) prior to 5.10 Update 13 allows a remote attacker to change the password of a compromised session without knowing the existing user's password. This functionality was removed from the User Interface in ePO 10 and the API has now been disabled. Other protection is in place to reduce the likelihood of this being successful through sending a link to a logged in user.\n\nRelated Weaknesses:\n\n- CWE-1390 (ChildOf)",
          "type": "Base",
          "search_source": "base_query",
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            }
          }
        },
        {
          "cwe_id": "1188",
          "name": "Initialization of a Resource with an Insecure Default",
          "description": "The product initializes or sets a resource with a default that is intended to be changed by the administrator, but the default is not secure.",
          "score": 26.02621927023227,
          "matched_text": "CWE-1188: Initialization of a Resource with an Insecure Default\n\nType: Base\n\nStatus: Incomplete\n\nDescription:\n\nThe product initializes or sets a resource with a default that is intended to be changed by the administrator, but the default is not secure.\n\nExtended Details:\n\n\n\nDevelopers often choose default values that leave the product as open and easy to use as possible out-of-the-box, under the assumption that the administrator can (or should) change the default value. However, this ease-of-use comes at a cost when the default is insecure and the administrator does not change it.\n\n\nReal-World Examples:\n\n- CVE-2022-36349: insecure default variable initialization in BIOS firmware for a hardware board allows DoS\n\n- CVE-2022-42467: A generic database browser interface has a default mode that exposes a web server to the network, allowing queries to the database.\n\nTop 25 CWE Examples:\n\n- CVE-2021-34795: Multiple vulnerabilities in the web-based management interface of the Cisco Catalyst Passive Optical Network (PON) Series Switches Optical Network Terminal (ONT) could allow an unauthenticated, remote attacker to perform the following actions: Log in with a default credential if the Telnet protocol is enabled Perform command injection Modify the configuration For more information about these vulnerabilities, see the Details section of this advisory.\n\n- CVE-2020-10279: MiR robot controllers (central computation unit) makes use of Ubuntu 16.04.2 an operating system, Thought for desktop uses, this operating system presents insecure defaults for robots. These insecurities include a way for users to escalate their access beyond what they were granted via file creation, access race conditions, insecure home directory configurations and defaults that facilitate Denial of Service (DoS) attacks.\n\n- CVE-2021-28123: Undocumented Default Cryptographic Key Vulnerability in Cohesity DataPlatform version 6.3 prior 6.3.1g, 6.4 up to 6.4.1c and 6.5.1 through 6.5.1b. The ssh key can provide an attacker access to the linux system in the affected version.\n\n- CVE-2021-40825: nLight ECLYPSE (nECY) system Controllers running software prior to 1.17.21245.754 contain a default key vulnerability. The nECY does not force a change to the key upon the initial configuration of an affected device. nECY system controllers utilize an encrypted channel to secure SensorViewTM configuration and monitoring software and nECY to nECY communications. Impacted devices are at risk of exploitation. A remote attacker with IP access to an impacted device could submit lighting control commands to the nECY by leveraging the default key. A successful attack may result in the attacker gaining the ability to modify lighting conditions or gain the ability to update the software on lighting devices. The impacted key is referred to as the SensorView Password in the nECY nLight Explorer Interface and the Gateway Password in the SensorView application. An attacker cannot authenticate to or modify the configuration or software of the nECY system controller.\n\n- CVE-2021-35965: The Orca HCM digital learning platform uses a weak factory default administrator password, which is hard-coded in the source code of the webpage in plain text, thus remote attackers can obtain administrator\u2019s privilege without logging in.\n\n- CVE-2020-12732: DEPSTECH WiFi Digital Microscope 3 has a default SSID of Jetion_xxxxxxxx with a password of 12345678.\n\n- CVE-2021-34203: D-Link DIR-2640-US 1.01B04 is vulnerable to Incorrect Access Control. Router ac2600 (dir-2640-us), when setting PPPoE, will start quagga process in the way of whole network monitoring, and this function uses the original default password and port. An attacker can easily use telnet to log in, modify routing information, monitor the traffic of all devices under the router, hijack DNS and phishing attacks. In addition, this interface is likely to be questioned by customers as a backdoor, because the interface should not be exposed.\n\n- CVE-2021-35336: Tieline IP Audio Gateway 2.6.4.8 and below is affected by Incorrect Access Control. A vulnerability in the Tieline Web Administrative Interface could allow an unauthenticated user to access a sensitive part of the system with a high privileged account.\n\n- CVE-2021-42109: VITEC Exterity IPTV products through 2021-04-30 allow privilege escalation to root.\n\n- CVE-2021-0468: In LK, there is a possible escalation of privilege due to an insecure default value. This could lead to local escalation of privilege for an attacker who has physical access to the device with no additional execution privileges needed. User interaction is needed for exploitation.Product: AndroidVersions: Android SoCAndroid ID: A-180427272\n\n- CVE-2021-38759: Raspberry Pi OS through 5.10 has the raspberry default password for the pi account. If not changed, attackers can gain administrator privileges.\n\n- CVE-2020-13927: The previous default setting for Airflow's Experimental API was to allow all API requests without authentication, but this poses security risks to users who miss this fact. From Airflow 1.10.11 the default has been changed to deny all requests by default and is documented at https://airflow.apache.org/docs/1.10.11/security.html#api-authentication. Note this change fixes it for new installs but existing users need to change their config to default `[api]auth_backend = airflow.api.auth.backend.deny_all` as mentioned in the Updating Guide: https://github.com/apache/airflow/blob/1.10.11/UPDATING.md#experimental-api-will-deny-all-request-by-default\n\n- CVE-2022-24706: In Apache CouchDB prior to 3.2.2, an attacker can access an improperly secured default installation without authenticating and gain admin privileges. The CouchDB documentation has always made recommendations for properly securing an installation, including recommending using a firewall in front of all CouchDB installations.\n\n- CVE-2022-42467: When running in prototype mode, the h2 webconsole module (accessible from the Prototype menu) is automatically made available with the ability to directly query the database. It was felt that it is safer to require the developer to explicitly enable this capability. As of 2.0.0-M8, this can now be done using the 'isis.prototyping.h2-console.web-allow-remote-access' configuration property; the web console will be unavailable without setting this configuration. As an additional safeguard, the new 'isis.prototyping.h2-console.generate-random-web-admin-password' configuration parameter (enabled by default) requires that the administrator use a randomly generated password to use the console. The password is printed to the log, as \"webAdminPass: xxx\" (where \"xxx\") is the password. To revert to the original behaviour, the administrator would therefore need to set these configuration parameter: isis.prototyping.h2-console.web-allow-remote-access=true isis.prototyping.h2-console.generate-random-web-admin-password=false Note also that the h2 webconsole is never available in production mode, so these safeguards are only to ensure that the webconsole is secured by default also in prototype mode.\n\n- CVE-2022-25568: MotionEye v0.42.1 and below allows attackers to access sensitive information via a GET request to /config/list. To exploit this vulnerability, a regular user password must be unconfigured.\n\nRelated Weaknesses:\n\n- CWE-1419 (ChildOf)\n\n- CWE-665 (ChildOf)",
          "type": "Base",
          "search_source": "base_query",
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            }
          }
        },
        {
          "cwe_id": "1284",
          "name": "Improper Validation of Specified Quantity in Input",
          "description": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
          "score": 25.51944036111138,
          "matched_text": "CWE-1284: Improper Validation of Specified Quantity in Input\n\nType: Base\n\nStatus: Incomplete\n\nDescription:\n\nThe product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.\n\nExtended Details:\n\n\n\nSpecified quantities include size, length, frequency, price, rate, number of operations, time, and others. Code may rely on specified quantities to allocate resources, perform calculations, control iteration, etc. When the quantity is not properly validated, then attackers can specify malicious quantities to cause excessive resource allocation, trigger unexpected failures, enable buffer overflows, etc.\n\n\nReal-World Examples:\n\n- CVE-2022-21668: Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190).\n\n- CVE-2008-1440: lack of validation of length field leads to infinite loop\n\n- CVE-2008-2374: lack of validation of string length fields allows memory consumption or buffer over-read\n\nTop 25 CWE Examples:\n\n- CVE-2021-31401: An issue was discovered in tcp_rcv() in nptcp.c in HCC embedded InterNiche 4.0.1. The TCP header processing code doesn't sanitize the value of the IP total length field (header length + data length). With a crafted IP packet, an integer overflow occurs whenever the value of the IP data length is calculated by subtracting the length of the header from the total length of the IP packet.\n\n- CVE-2021-31802: NETGEAR R7000 1.0.11.116 devices have a heap-based Buffer Overflow that is exploitable from the local network without authentication. The vulnerability exists within the handling of an HTTP request. An attacker can leverage this to execute code as root. The problem is that a user-provided length value is trusted during a backup.cgi file upload. The attacker must add a \\\\n before the Content-Length header.\n\n- CVE-2021-37663: TensorFlow is an end-to-end open source platform for machine learning. In affected versions due to incomplete validation in `tf.raw_ops.QuantizeV2`, an attacker can trigger undefined behavior via binding a reference to a null pointer or can access data outside the bounds of heap allocated arrays. The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/quantize_op.cc#L59) has some validation but does not check that `min_range` and `max_range` both have the same non-zero number of elements. If `axis` is provided (i.e., not `-1`), then validation should check that it is a value in range for the rank of `input` tensor and then the lengths of `min_range` and `max_range` inputs match the `axis` dimension of the `input` tensor. We have patched the issue in GitHub commit 6da6620efad397c85493b8f8667b821403516708. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n- CVE-2021-37665: TensorFlow is an end-to-end open source platform for machine learning. In affected versions due to incomplete validation in MKL implementation of requantization, an attacker can trigger undefined behavior via binding a reference to a null pointer or can access data outside the bounds of heap allocated arrays. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc) does not validate the dimensions of the `input` tensor. A similar issue occurs in `MklRequantizePerChannelOp`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/mkl/mkl_requantize_per_channel_op.cc) does not perform full validation for all the input arguments. We have patched the issue in GitHub commit 9e62869465573cb2d9b5053f1fa02a81fce21d69 and in the Github commit 203214568f5bc237603dbab6e1fd389f1572f5c9. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n- CVE-2021-3655: A vulnerability was found in the Linux kernel in versions prior to v5.14-rc1. Missing size validations on inbound SCTP packets may allow the kernel to read uninitialized memory.\n\n- CVE-2021-21404: Syncthing is a continuous file synchronization program. In Syncthing before version 1.15.0, the relay server `strelaysrv` can be caused to crash and exit by sending a relay message with a negative length field. Similarly, Syncthing itself can crash for the same reason if given a malformed message from a malicious relay server when attempting to join the relay. Relay joins are essentially random (from a subset of low latency relays) and Syncthing will by default restart when crashing, at which point it's likely to pick another non-malicious relay. This flaw is fixed in version 1.15.0.\n\n- CVE-2021-1903: Possible denial of service scenario can occur due to lack of length check on Channel Switch Announcement IE in beacon or probe response frame in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer Electronics Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Voice & Music, Snapdragon Wired Infrastructure and Networking\n\n- CVE-2021-23906: An issue was discovered in the Headunit NTG6 in the MBUX Infotainment System on Mercedes-Benz vehicles through 2021. A Message Length is not checked in the HiQnet Protocol, leading to remote code execution.\n\n- CVE-2021-31555: An issue was discovered in the Oauth extension for MediaWiki through 1.35.2. It did not validate the oarc_version (aka oauth_registered_consumer.oarc_version) parameter's length.\n\n- CVE-2021-33196: In archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic.\n\n- CVE-2021-33609: Missing check in DataCommunicator class in com.vaadin:vaadin-server versions 8.0.0 through 8.14.0 (Vaadin 8.0.0 through 8.14.0) allows authenticated network attacker to cause heap exhaustion by requesting too many rows of data.\n\n- CVE-2021-35041: The blockchain node in FISCO-BCOS V2.7.2 may have a bug when dealing with unformatted packet and lead to a crash. A malicious node can send a packet continuously. The packet is in an incorrect format and cannot be decoded by the node correctly. As a result, the node may consume the memory sustainably and crash. More details are shown at: https://github.com/FISCO-BCOS/FISCO-BCOS/issues/1951\n\n- CVE-2020-7459: In FreeBSD 12.1-STABLE before r362166, 12.1-RELEASE before p8, 11.4-STABLE before r362167, 11.4-RELEASE before p2, and 11.3-RELEASE before p12, missing length validation code common to mulitple USB network drivers allows a malicious USB device to write beyond the end of an allocated network packet buffer.\n\n- CVE-2021-1084: NVIDIA vGPU driver contains a vulnerability in the guest kernel mode driver and Virtual GPU Manager (vGPU plugin), in which an input length is not validated, which may lead to information disclosure, tampering of data or denial of service. This affects vGPU version 12.x (prior to 12.2) and version 11.x (prior to 11.4).\n\n- CVE-2021-1097: NVIDIA vGPU software contains a vulnerability in the Virtual GPU Manager (vGPU plugin), where it improperly validates the length field in a request from a guest. This flaw allows a malicious guest to send a length field that is inconsistent with the actual length of the input, which may lead to information disclosure, data tampering, or denial of service. This affects vGPU version 12.x (prior to 12.3), version 11.x (prior to 11.5) and version 8.x (prior 8.8).\n\n- CVE-2021-20252: A flaw was found in Red Hat 3scale API Management Platform 2. The 3scale backend does not perform preventive handling on user-requested date ranges in certain queries allowing a malicious authenticated user to submit a request with a sufficiently large date range to eventually yield an internal server error resulting in denial of service. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-29629: In FreeBSD 13.0-STABLE before n245765-bec0d2c9c841, 12.2-STABLE before r369859, 11.4-STABLE before r369866, 13.0-RELEASE before p1, 12.2-RELEASE before p7, and 11.4-RELEASE before p10, missing message validation in libradius(3) could allow malicious clients or servers to trigger denial of service in vulnerable servers or clients respectively.\n\n- CVE-2021-37594: In FreeRDP before 2.4.0 on Windows, wf_cliprdr_server_file_contents_request in client/Windows/wf_cliprdr.c has missing input checks for a FILECONTENTS_SIZE File Contents Request PDU.\n\n- CVE-2021-37595: In FreeRDP before 2.4.0 on Windows, wf_cliprdr_server_file_contents_request in client/Windows/wf_cliprdr.c has missing input checks for a FILECONTENTS_RANGE File Contents Request PDU.\n\n- CVE-2021-24894: The Reviews Plus WordPress plugin before 1.2.14 does not validate the submitted rating, allowing submission of long integer, causing a Denial of Service in the review section when an authenticated user submit such rating and the reviews are set to be displayed on the post/page\n\n- CVE-2021-27921: Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for a BLP container, and thus an attempted memory allocation can be very large.\n\n- CVE-2021-27922: Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for an ICNS container, and thus an attempted memory allocation can be very large.\n\n- CVE-2021-27923: Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for an ICO container, and thus an attempted memory allocation can be very large.\n\n- CVE-2021-0485: In getMinimalSize of PipBoundsAlgorithm.java, there is a possible bypass of restrictions on background processes due to a permissions bypass. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-11Android ID: A-174302616\n\n- CVE-2020-25713: A malformed input file can lead to a segfault due to an out of bounds array access in raptor_xml_writer_start_element_common.\n\n- CVE-2021-0651: In loadLabel of PackageItemInfo.java, there is a possible way to DoS a device by having a long label in an app due to incorrect input validation. This could lead to local denial of service with no additional execution privileges needed. User interaction is needed for exploitation.Product: AndroidVersions: Android-11 Android-9 Android-10Android ID: A-67013844\n\n- CVE-2020-0206: In the settings app, there is a possible app crash due to improper input validation. This could lead to local denial of service of the Settings app with User execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10Android ID: A-136005061\n\n- CVE-2021-24893: The Stars Rating WordPress plugin before 3.5.1 does not validate the submitted rating, allowing submission of long integer, causing a Denial of Service in the comments section, or pending comment dashboard depending if the user sent it as unauthenticated or authenticated.\n\n- CVE-2021-4111: yetiforcecrm is vulnerable to Business Logic Errors\n\n- CVE-2021-4117: yetiforcecrm is vulnerable to Business Logic Errors\n\n- CVE-2021-26631: Improper input validation vulnerability in Mangboard commerce package could lead to occur for abnormal request. A remote attacker can exploit this vulnerability to manipulate the total order amount into a negative number and then pay for the order.\n\n- CVE-2021-21939: A heap-based buffer overflow vulnerability exists in the XWD parser functionality of Accusoft ImageGear 19.10. A specially-crafted file can lead to code execution. An attacker can provide a malicious file to trigger this vulnerability.\n\n- CVE-2021-21943: A heap-based buffer overflow vulnerability exists in the XWD parser functionality of Accusoft ImageGear 19.10. A specially-crafted file can lead to code execution. An attacker can provide a malicious file to trigger this vulnerability.\n\n- CVE-2021-21950: An out-of-bounds write vulnerability exists in the CMD_DEVICE_GET_SERVER_LIST_REQUEST functionality of the home_security binary of Anker Eufy Homebase 2 2.1.6.9h in function recv_server_device_response_msg_process. A specially-crafted network packet can lead to code execution.\n\n- CVE-2021-21951: An out-of-bounds write vulnerability exists in the CMD_DEVICE_GET_SERVER_LIST_REQUEST functionality of the home_security binary of Anker Eufy Homebase 2 2.1.6.9h in function read_udp_push_config_file. A specially-crafted network packet can lead to code execution.\n\n- CVE-2021-21960: A stack-based buffer overflow vulnerability exists in both the LLMNR functionality of Sealevel Systems, Inc. SeaConnect 370W v1.3.34. A specially-crafted network packet can lead to remote code execution. An attacker can send a malicious packet to trigger this vulnerability.\n\n- CVE-2021-26347: Failure to validate the integer operand in ASP (AMD Secure Processor) bootloader may allow an attacker to introduce an integer overflow in the L2 directory table in SPI flash resulting in a potential denial of service.\n\n- CVE-2021-30350: Lack of MBN header size verification against input buffer can lead to memory corruption in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Wearables\n\n- CVE-2021-35132: Out of bound write in DSP service due to improper bound check for response buffer size in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Wearables\n\n- CVE-2021-44158: ASUS RT-AX56U Wi-Fi Router is vulnerable to stack-based buffer overflow due to improper validation for httpd parameter length. An authenticated local area network attacker can launch arbitrary code execution to control the system or disrupt service.\n\n- CVE-2021-45918: NHI\u2019s health insurance web service component has insufficient validation for input string length, which can result in heap-based buffer overflow attack. A remote attacker can exploit this vulnerability to flood the memory space reserved for the program, in order to terminate service without authentication, which requires a system restart to recover service.\n\n- CVE-2021-45972: The giftrans function in giftrans 1.12.2 contains a stack-based buffer overflow because a value inside the input file determines the amount of data to write. This allows an attacker to overwrite up to 250 bytes outside of the allocated buffer with arbitrary data.\n\n- CVE-2021-46154: A vulnerability has been identified in Simcenter Femap V2020.2 (All versions), Simcenter Femap V2021.1 (All versions). Affected application contains a stack based buffer overflow vulnerability while parsing NEU files. This could allow an attacker to execute code in the context of the current process. (ZDI-CAN-14646, ZDI-CAN-14679, ZDI-CAN-15084, ZDI-CAN-15304)\n\n- CVE-2021-46155: A vulnerability has been identified in Simcenter Femap V2020.2 (All versions), Simcenter Femap V2021.1 (All versions). Affected application contains a stack based buffer overflow vulnerability while parsing NEU files. This could allow an attacker to execute code in the context of the current process. (ZDI-CAN-14683, ZDI-CAN-15283, ZDI-CAN-15303, ZDI-CAN-15593)\n\n- CVE-2021-46158: A vulnerability has been identified in Simcenter Femap V2020.2 (All versions), Simcenter Femap V2021.1 (All versions). Affected application contains a stack based buffer overflow vulnerability while parsing NEU files. This could allow an attacker to execute code in the context of the current process. (ZDI-CAN-15085, ZDI-CAN-15289, ZDI-CAN-15602)\n\n- CVE-2022-20689: Multiple vulnerabilities in the Cisco Discovery Protocol functionality of Cisco ATA 190 Series Analog Telephone Adapter firmware could allow an unauthenticated, adjacent attacker to cause Cisco Discovery Protocol memory corruption on an affected device. These vulnerabilities are due to missing length validation checks when processing Cisco Discovery Protocol messages. An attacker could exploit these vulnerabilities by sending a malicious Cisco Discovery Protocol packet to an affected device. A successful exploit could allow the attacker to cause an out-of-bounds read of the valid Cisco Discovery Protocol packet data, which could allow the attacker to cause corruption in the internal Cisco Discovery Protocol database of the affected device.\n\n- CVE-2022-20690: Multiple vulnerabilities in the Cisco Discovery Protocol functionality of Cisco ATA 190 Series Analog Telephone Adapter firmware could allow an unauthenticated, adjacent attacker to cause Cisco Discovery Protocol memory corruption on an affected device. These vulnerabilities are due to missing length validation checks when processing Cisco Discovery Protocol messages. An attacker could exploit these vulnerabilities by sending a malicious Cisco Discovery Protocol packet to an affected device. A successful exploit could allow the attacker to cause an out-of-bounds read of the valid Cisco Discovery Protocol packet data, which could allow the attacker to cause corruption in the internal Cisco Discovery Protocol database of the affected device.\n\n- CVE-2022-22072: Buffer overflow can occur due to improper validation of NDP application information length in Snapdragon Auto, Snapdragon Compute, Snapdragon Consumer Electronics Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Voice & Music\n\n- CVE-2022-24903: Rsyslog is a rocket-fast system for log processing. Modules for TCP syslog reception have a potential heap buffer overflow when octet-counted framing is used. This can result in a segfault or some other malfunction. As of our understanding, this vulnerability can not be used for remote code execution. But there may still be a slight chance for experts to do that. The bug occurs when the octet count is read. While there is a check for the maximum number of octets, digits are written to a heap buffer even when the octet count is over the maximum, This can be used to overrun the memory buffer. However, once the sequence of digits stop, no additional characters can be added to the buffer. In our opinion, this makes remote exploits impossible or at least highly complex. Octet-counted framing is one of two potential framing modes. It is relatively uncommon, but enabled by default on receivers. Modules `imtcp`, `imptcp`, `imgssapi`, and `imhttp` are used for regular syslog message reception. It is best practice not to directly expose them to the public. When this practice is followed, the risk is considerably lower. Module `imdiag` is a diagnostics module primarily intended for testbench runs. We do not expect it to be present on any production installation. Octet-counted framing is not very common. Usually, it needs to be specifically enabled at senders. If users do not need it, they can turn it off for the most important modules. This will mitigate the vulnerability.\n\n- CVE-2022-25727: Memory Corruption in modem due to improper length check while copying into memory in Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Voice & Music\n\n- CVE-2022-25793: A Stack-based Buffer Overflow Vulnerability in Autodesk 3ds Max 2022, 2021, and 2020 may lead to code execution through the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length stack-based buffer when parsing ActionScript Byte Code files. This vulnerability may allow arbitrary code execution on affected installations of Autodesk 3ds Max.\n\n- CVE-2022-2845: Improper Validation of Specified Quantity in Input in GitHub repository vim/vim prior to 9.0.0218. \n\n- CVE-2022-35928: AES Crypt is a file encryption software for multiple platforms. AES Crypt for Linux built using the source on GitHub and having the version number 3.11 has a vulnerability with respect to reading user-provided passwords and confirmations via command-line prompts. Passwords lengths were not checked before being read. This vulnerability may lead to buffer overruns. This does _not_ affect source code found on aescrypt.com, nor is the vulnerability present when providing a password or a key via the `-p` or `-k` command-line options. The problem was fixed via in commit 68761851b and will be included in release 3.16. Users are advised to upgrade. Users unable to upgrade should us the `-p` or `-k` options to provide a password or key.\n\n- CVE-2022-36063: Azure RTOS USBx is a USB host, device, and on-the-go (OTG) embedded stack, fully integrated with Azure RTOS ThreadX and available for all Azure RTOS ThreadX\u2013supported processors. Azure RTOS USBX implementation of host support for USB CDC ECM includes an integer underflow and a buffer overflow in the `_ux_host_class_cdc_ecm_mac_address_get` function which may be potentially exploited to achieve remote code execution or denial of service. Setting mac address string descriptor length to a `0` or `1` allows an attacker to introduce an integer underflow followed (string_length) by a buffer overflow of the `cdc_ecm -> ux_host_class_cdc_ecm_node_id` array. This may allow one to redirect the code execution flow or introduce a denial of service. The fix has been included in USBX release [6.1.12](https://github.com/azure-rtos/usbx/releases/tag/v6.1.12_rel). Improved mac address string descriptor length validation to check for unexpectedly small values may be used as a workaround.\n\n- CVE-2022-36620: D-link DIR-816 A2_v1.10CNB04, DIR-878 DIR_878_FW1.30B08.img is vulnerable to Buffer Overflow via /goform/addRouting.\n\n- CVE-2022-37134: D-link DIR-816 A2_v1.10CNB04.img is vulnerable to Buffer Overflow via /goform/form2Wan.cgi. When wantype is 3, l2tp_usrname will be decrypted by base64, and the result will be stored in v94, which does not check the size of l2tp_usrname, resulting in stack overflow.\n\n- CVE-2022-41877: FreeRDP is a free remote desktop protocol library and clients. Affected versions of FreeRDP are missing input length validation in `drive` channel. A malicious server can trick a FreeRDP based client to read out of bound data and send it back to the server. This issue has been addressed in version 2.9.0 and all users are advised to upgrade. Users unable to upgrade should not use the drive redirection channel - command line options `/drive`, `+drives` or `+home-drive`.\n\n- CVE-2022-4904: A flaw was found in the c-ares package. The ares_set_sortlist is missing checks about the validity of the input string, which allows a possible arbitrary length stack overflow. This issue may cause a denial of service or a limited impact on confidentiality and integrity.\n\n- CVE-2022-20699: Multiple vulnerabilities in Cisco Small Business RV160, RV260, RV340, and RV345 Series Routers could allow an attacker to do any of the following: Execute arbitrary code Elevate privileges Execute arbitrary commands Bypass authentication and authorization protections Fetch and run unsigned software Cause denial of service (DoS) For more information about these vulnerabilities, see the Details section of this advisory.\n\n- CVE-2022-24754: PJSIP is a free and open source multimedia communication library written in C language. In versions prior to and including 2.12 PJSIP there is a stack-buffer overflow vulnerability which only impacts PJSIP users who accept hashed digest credentials (credentials with data_type `PJSIP_CRED_DATA_DIGEST`). This issue has been patched in the master branch of the PJSIP repository and will be included with the next release. Users unable to upgrade need to check that the hashed digest data length must be equal to `PJSIP_MD5STRLEN` before passing to PJSIP.\n\n- CVE-2021-3581: Buffer Access with Incorrect Length Value in zephyr. Zephyr versions >= >=2.5.0 contain Buffer Access with Incorrect Length Value (CWE-805). For more information, see https://github.com/zephyrproject-rtos/zephyr/security/advisories/GHSA-8q65-5gqf-fmw5\n\n- CVE-2022-0414: Improper Validation of Specified Quantity in Input in Packagist dolibarr/dolibarr prior to 16.0.\n\n- CVE-2022-0596: Improper Validation of Specified Quantity in Input in Packagist microweber/microweber prior to 1.2.11.\n\n- CVE-2022-20445: In process_service_search_rsp of sdp_discovery.cc, there is a possible out of bounds read due to improper input validation. This could lead to remote information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-225876506\n\n- CVE-2022-22166: An Improper Validation of Specified Quantity in Input vulnerability in the routing protocol daemon (rpd) of Juniper Networks Junos OS allows an unauthenticated networked attacker to cause an rdp crash and thereby a Denial of Service (DoS). If a BGP update message is received over an established BGP session where a BGP SR-TE policy tunnel attribute is malformed and BGP update tracing flag is enabled, the rpd will core. This issue can happen with any BGP session as long as the previous conditions are met. This issue can not propagate as the crash occurs as soon as the malformed update is received. This issue affects Juniper Networks Junos OS: 20.4 versions prior to 20.4R3-S1; 21.1 versions prior to 21.1R2-S2, 21.1R3. This issue does not affect Juniper Networks Junos OS versions prior to 20.4R1.\n\n- CVE-2022-4171: The demon image annotation plugin for WordPress is vulnerable to improper input validation in versions up to, and including 5.0. This is due to the plugin improperly validating the number of characters supplied during an annotation despite there being a setting to limit the number characters input. This means that unauthenticated attackers can bypass the length restrictions and input more characters than allowed via the settings.\n\n- CVE-2022-25375: An issue was discovered in drivers/usb/gadget/function/rndis.c in the Linux kernel before 5.16.10. The RNDIS USB gadget lacks validation of the size of the RNDIS_MSG_SET command. Attackers can obtain sensitive information from kernel memory.\n\n- CVE-2022-23635: Istio is an open platform to connect, manage, and secure microservices. In affected versions the Istio control plane, `istiod`, is vulnerable to a request processing error, allowing a malicious attacker that sends a specially crafted message which results in the control plane crashing. This endpoint is served over TLS port 15012, but does not require any authentication from the attacker. For simple installations, Istiod is typically only reachable from within the cluster, limiting the blast radius. However, for some deployments, especially [multicluster](https://istio.io/latest/docs/setup/install/multicluster/primary-remote/) topologies, this port is exposed over the public internet. There are no effective workarounds, beyond upgrading. Limiting network access to Istiod to the minimal set of clients can help lessen the scope of the vulnerability to some extent.\n\n- CVE-2021-31556: An issue was discovered in the Oauth extension for MediaWiki through 1.35.2. MWOAuthConsumerSubmitControl.php does not ensure that the length of an RSA key will fit in a MySQL blob.\n\n- CVE-2022-20686: Multiple vulnerabilities in the Link Layer Discovery Protocol (LLDP) functionality of Cisco ATA 190 Series Analog Telephone Adapter firmware could allow an unauthenticated, remote attacker to execute arbitrary code on an affected device and cause the LLDP service to restart. These vulnerabilities are due to missing length validation of certain LLDP packet header fields. An attacker could exploit these vulnerabilities by sending a malicious LLDP packet to an affected device. A successful exploit could allow the attacker to execute code on the affected device and cause LLDP to restart unexpectedly, resulting in a denial of service (DoS) condition.\n\n- CVE-2022-20385: a function called 'nla_parse', do not check the len of para, it will check nla_type (which can be controlled by userspace) with 'maxtype' (in this case, it is GSCAN_MAX), then it access polciy array 'policy[type]', which OOB access happens.Product: AndroidVersions: Android SoCAndroid ID: A-238379819\n\n- CVE-2022-26125: Buffer overflow vulnerabilities exist in FRRouting through 8.1.0 due to wrong checks on the input packet length in isisd/isis_tlvs.c.\n\n- CVE-2022-26127: A buffer overflow vulnerability exists in FRRouting through 8.1.0 due to missing a check on the input packet length in the babel_packet_examin function in babeld/message.c.\n\n- CVE-2022-26128: A buffer overflow vulnerability exists in FRRouting through 8.1.0 due to a wrong check on the input packet length in the babel_packet_examin function in babeld/message.c.\n\n- CVE-2022-36086: linked_list_allocator is an allocator usable for no_std systems. Prior to version 0.10.2, the heap initialization methods were missing a minimum size check for the given heap size argument. This could lead to out-of-bound writes when a heap was initialized with a size smaller than `3 * size_of::<usize>` because of metadata write operations. This vulnerability impacts all the initialization functions on the `Heap` and `LockedHeap` types, including `Heap::new`, `Heap::init`, `Heap::init_from_slice`, and `LockedHeap::new`. It also affects multiple uses of the `Heap::extend` method. Version 0.10.2 contains a patch for the issue. As a workaround, ensure that the heap is only initialized with a size larger than `3 * size_of::<usize>` and that the `Heap::extend` method is only called with sizes larger than `2 * size_of::<usize>()`. Also, ensure that the total heap size is (and stays) a multiple of `2 * size_of::<usize>()`.\n\n- CVE-2022-36938: DexLoader function get_stringidx_fromdex() in Redex prior to commit 3b44c64 can load an out of bound address when loading the string index table, potentially allowing remote code execution during processing of a 3rd party Android APK file.\n\n- CVE-2021-1058: NVIDIA vGPU software contains a vulnerability in the guest kernel mode driver and vGPU plugin, in which an input data size is not validated, which may lead to tampering of data or denial of service. This affects vGPU version 8.x (prior to 8.6) and version 11.0 (prior to 11.3).\n\n- CVE-2021-1062: NVIDIA vGPU manager contains a vulnerability in the vGPU plugin, in which an input data length is not validated, which may lead to tampering of data or denial of service. This affects vGPU version 8.x (prior to 8.6) and version 11.0 (prior to 11.3).\n\n- CVE-2021-1081: NVIDIA vGPU software contains a vulnerability in the guest kernel mode driver and Virtual GPU manager (vGPU plugin), in which an input length is not validated, which may lead to information disclosure, tampering of data, or denial of service. This affects vGPU version 12.x (prior to 12.2), version 11.x (prior to 11.4) and version 8.x (prior 8.7).\n\n- CVE-2021-1082: NVIDIA vGPU software contains a vulnerability in the Virtual GPU Manager (vGPU plugin), in which an input length is not validated, which may lead to information disclosure, tampering of data, or denial of service. vGPU version 12.x (prior to 12.2), version 11.x (prior to 11.4) and version 8.x (prior to 8.7)\n\n- CVE-2021-1083: NVIDIA vGPU software contains a vulnerability in the guest kernel mode driver and Virtual GPU Manager (vGPU plugin), in which an input length is not validated, which may lead to information disclosure, tampering of data, or denial of service. This affects vGPU version 12.x (prior to 12.2) and version 11.x (prior to 11.4).\n\n- CVE-2021-37674: TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can trigger a denial of service via a segmentation fault in `tf.raw_ops.MaxPoolGrad` caused by missing validation. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/maxpooling_op.cc) misses some validation for the `orig_input` and `orig_output` tensors. The fixes for CVE-2021-29579 were incomplete. We have patched the issue in GitHub commit 136b51f10903e044308cf77117c0ed9871350475. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n- CVE-2021-37677: TensorFlow is an end-to-end open source platform for machine learning. In affected versions the shape inference code for `tf.raw_ops.Dequantize` has a vulnerability that could trigger a denial of service via a segfault if an attacker provides invalid arguments. The shape inference [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/ops/array_ops.cc#L2999-L3014) uses `axis` to select between two different values for `minmax_rank` which is then used to retrieve tensor dimensions. However, code assumes that `axis` can be either `-1` or a value greater than `-1`, with no validation for the other values. We have patched the issue in GitHub commit da857cfa0fde8f79ad0afdbc94e88b5d4bbec764. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n- CVE-2021-39193: Frontier is Substrate's Ethereum compatibility layer. Prior to commit number 0b962f218f0cdd796dadfe26c3f09e68f7861b26, a bug in `pallet-ethereum` can cause invalid transactions to be included in the Ethereum block state in `pallet-ethereum` due to not validating the input data size. Any invalid transactions included this way have no possibility to alter the internal Ethereum or Substrate state. The transaction will appear to have be included, but is of no effect as it is rejected by the EVM engine. The impact is further limited by Substrate extrinsic size constraints. A patch is available in commit number 0b962f218f0cdd796dadfe26c3f09e68f7861b26. There are no workarounds aside from applying the patch.\n\n- CVE-2021-39690: In setDisplayPadding of WallpaperManagerService.java, there is a possible way to cause a persistent DoS due to improper input validation. This could lead to local denial of service with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-12Android ID: A-204316511\n\n- CVE-2021-43267: An issue was discovered in net/tipc/crypto.c in the Linux kernel before 5.14.16. The Transparent Inter-Process Communication (TIPC) functionality allows remote attackers to exploit insufficient validation of user-supplied sizes for the MSG_CRYPTO message type.\n\n- CVE-2021-45462: In Open5GS 2.4.0, a crafted packet from UE can crash SGW-U/UPF.\n\n- CVE-2022-0174: Improper Validation of Specified Quantity in Input vulnerability in dolibarr dolibarr/dolibarr.\n\n- CVE-2022-20493: In Condition of Condition.java, there is a possible way to grant notification access due to improper input validation. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-242846316\n\n- CVE-2022-20543: In multiple locations, there is a possible display crash loop due to improper input validation. This could lead to local denial of service with system execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-13Android ID: A-238178261\n\n- CVE-2022-20687: Multiple vulnerabilities in the Link Layer Discovery Protocol (LLDP) functionality of Cisco ATA 190 Series Analog Telephone Adapter firmware could allow an unauthenticated, remote attacker to execute arbitrary code on an affected device and cause the LLDP service to restart. These vulnerabilities are due to missing length validation of certain LLDP packet header fields. An attacker could exploit these vulnerabilities by sending a malicious LLDP packet to an affected device. A successful exploit could allow the attacker to execute code on the affected device and cause LLDP to restart unexpectedly, resulting in a denial of service (DoS) condition.\n\n- CVE-2022-20688: A vulnerability in the Cisco Discovery Protocol functionality of Cisco ATA 190 Series Analog Telephone Adapter firmware could allow an unauthenticated, remote attacker to execute arbitrary code on an affected device and cause Cisco Discovery Protocol service to restart. This vulnerability is due to missing length validation of certain Cisco Discovery Protocol packet header fields. An attacker could exploit these vulnerabilities by sending a malicious Cisco Discovery Protocol packet to an affected device. A successful exploit could allow the attacker to execute code on the affected device and cause Cisco Discovery Protocol to restart unexpectedly, resulting in a DoS condition.\n\n- CVE-2022-2277: Improper Input Validation vulnerability exists in the Hitachi Energy MicroSCADA X SYS600's ICCP stack during the ICCP communication establishment causes a denial-of-service when ICCP of SYS600 is request to forward any data item updates with timestamps too distant in the future to any remote ICCP system. By default, ICCP is not configured and not enabled. This issue affects: Hitachi Energy MicroSCADA X SYS600 version 10.2 to version 10.3.1. cpe:2.3:a:hitachienergy:microscada_x_sys600:10.2:*:*:*:*:*:*:* cpe:2.3:a:hitachienergy:microscada_x_sys600:10.2.1:*:*:*:*:*:*:* cpe:2.3:a:hitachienergy:microscada_x_sys600:10.3:*:*:*:*:*:*:* cpe:2.3:a:hitachienergy:microscada_x_sys600:10.3.1:*:*:*:*:*:*:*\n\n- CVE-2022-2592: A lack of length validation in Snippet descriptions in GitLab CE/EE affecting all versions prior to 15.1.6, 15.2 prior to 15.2.4 and 15.3 prior to 15.3.2 allows an authenticated attacker to create a maliciously large Snippet which when requested with or without authentication places excessive load on the server, potential leading to Denial of Service.\n\n- CVE-2022-28613: A vulnerability in the HCI Modbus TCP COMPONENT of Hitachi Energy RTU500 series CMU Firmware that is caused by the validation error in the length information carried in MBAP header allows an ATTACKER to reboot the device by sending a special crafted message. This issue affects: Hitachi Energy RTU500 series CMU Firmware 12.0.*; 12.2.*; 12.4.*; 12.6.*; 12.7.*; 13.2.*.\n\n- CVE-2022-2868: libtiff's tiffcrop utility has a improper input validation flaw that can lead to out of bounds read and ultimately cause a crash if an attacker is able to supply a crafted file to tiffcrop.\n\n- CVE-2022-3411: A lack of length validation in GitLab CE/EE affecting all versions from 12.4 before 15.6.7, 15.7 before 15.7.6, and 15.8 before 15.8.1 allows an authenticated attacker to create a large Issue description via GraphQL which, when repeatedly requested, saturates CPU usage.\n\n- CVE-2022-39272: Flux is an open and extensible continuous delivery solution for Kubernetes. Versions prior to 0.35.0 are subject to a Denial of Service. Users that have permissions to change Flux\u2019s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields `.spec.interval` or `.spec.timeout` (and structured variations of these fields), causing the entire object type to stop being processed. This issue is patched in version 0.35.0. As a workaround, Admission controllers can be employed to restrict the values that can be used for fields `.spec.interval` and `.spec.timeout`, however upgrading to the latest versions is still the recommended mitigation.\n\n- CVE-2022-39313: Parse Server is an open source backend that can be deployed to any infrastructure that can run Node.js. Versions prior to 4.10.17, and prior to 5.2.8 on the 5.x branch, crash when a file download request is received with an invalid byte range, resulting in a Denial of Service. This issue has been patched in versions 4.10.17, and 5.2.8. There are no known workarounds.\n\n- CVE-2022-40761: The function tee_obj_free in Samsung mTower through 0.3.0 allows a trusted application to trigger a Denial of Service (DoS) by invoking the function TEE_AllocateOperation with a disturbed heap layout, related to utee_cryp_obj_alloc.\n\n- CVE-2022-41896: TensorFlow is an open source platform for machine learning. If `ThreadUnsafeUnigramCandidateSampler` is given input `filterbank_channel_count` greater than the allowed max size, TensorFlow will crash. We have patched the issue in GitHub commit 39ec7eaf1428e90c37787e5b3fbd68ebd3c48860. The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.\n\n- CVE-2022-48297: The geofencing kernel code has a vulnerability of not verifying the length of the input data. Successful exploitation of this vulnerability may cause out-of-bounds memory access.\n\n- CVE-2022-48298: The geofencing kernel code does not verify the length of the input data. Successful exploitation of this vulnerability may cause out-of-bounds memory access.\n\n- CVE-2021-0934: In findAllDeAccounts of AccountsDb.java, there is a possible denial of service due to resource exhaustion. This could lead to local denial of service with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-169762606\n\n- CVE-2021-28510: For certain systems running EOS, a Precision Time Protocol (PTP) packet of a management/signaling message with an invalid Type-Length-Value (TLV) causes the PTP agent to restart. Repeated restarts of the service will make the service unavailable.\n\n- CVE-2022-0214: The Custom Popup Builder WordPress plugin before 1.3.1 autoload data from its popup on every pages, as such data can be sent by unauthenticated user, and is not validated in length, this could cause a denial of service on the blog\n\n- CVE-2022-1174: A potential DoS vulnerability was discovered in Gitlab CE/EE versions 13.7 before 14.7.7, all versions starting from 14.8 before 14.8.5, all versions starting from 14.9 before 14.9.2 allowed an attacker to trigger high CPU usage via a special crafted input added in Issues, Merge requests, Milestones, Snippets, Wiki pages, etc.\n\n- CVE-2022-23319: A segmentation fault during PCF file parsing in pcf2bdf versions >=1.05 allows an attacker to trigger a program crash via a specially crafted PCF font file. This crash affects the availability of the software and dependent downstream components.\n\n- CVE-2022-23580: Tensorflow is an Open Source Machine Learning Framework. During shape inference, TensorFlow can allocate a large vector based on a value from a tensor controlled by the user. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n- CVE-2022-29202: TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, the implementation of `tf.ragged.constant` does not fully validate the input arguments. This results in a denial of service by consuming all available memory. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue.\n\n- CVE-2022-36078: Binary provides encoding/decoding in Borsh and other formats. The vulnerability is a memory allocation vulnerability that can be exploited to allocate slices in memory with (arbitrary) excessive size value, which can either exhaust available memory or crash the whole program. When using `github.com/gagliardetto/binary` to parse unchecked (or wrong type of) data from untrusted sources of input (e.g. the blockchain) into slices, it's possible to allocate memory with excessive size. When `dec.Decode(&val)` method is used to parse data into a structure that is or contains slices of values, the length of the slice was previously read directly from the data itself without any checks on the size of it, and then a slice was allocated. This could lead to an overflow and an allocation of memory with excessive size value. Users should upgrade to `v0.7.1` or higher. A workaround is not to rely on the `dec.Decode(&val)` function to parse the data, but to use a custom `UnmarshalWithDecoder()` method that reads and checks the length of any slice.\n\n- CVE-2022-37311: OX App Suite through 7.10.6 has Uncontrolled Resource Consumption via a large location request parameter to the redirect servlet.\n\n- CVE-2022-37312: OX App Suite through 7.10.6 has Uncontrolled Resource Consumption via a large request body containing a redirect URL to the deferrer servlet.\n\n- CVE-2022-39294: conduit-hyper integrates a conduit application with the hyper server. Prior to version 0.4.2, `conduit-hyper` did not check any limit on a request's length before calling [`hyper::body::to_bytes`](https://docs.rs/hyper/latest/hyper/body/fn.to_bytes.html). An attacker could send a malicious request with an abnormally large `Content-Length`, which could lead to a panic if memory allocation failed for that request. In version 0.4.2, `conduit-hyper` sets an internal limit of 128 MiB per request, otherwise returning status 400 (\"Bad Request\"). This crate is part of the implementation of Rust's [crates.io](https://crates.io/), but that service is not affected due to its existing cloud infrastructure, which already drops such malicious requests. Even with the new limit in place, `conduit-hyper` is not recommended for production use, nor to directly serve the public Internet.\n\n- CVE-2022-4111: Unrestricted file size limit can lead to DoS in tooljet/tooljet <1.27 by allowing a logged in attacker to upload profile pictures over 2MB. \n\n- CVE-2022-41968: Nextcloud Server is an open source personal cloud server. Prior to versions 23.0.10 and 24.0.5, calendar name lengths are not validated before writing to a database. As a result, an attacker can send unnecessary amounts of data against the database. Version 23.0.10 and 24.0.5 contain patches for the issue. No known workarounds are available.\n\n- CVE-2022-20488: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-242703217\n\n- CVE-2022-20491: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-242703556\n\n- CVE-2022-20691: A vulnerability in the Cisco Discovery Protocol functionality of Cisco ATA 190 Series Adaptive Telephone Adapter firmware could allow an unauthenticated, adjacent attacker to cause a DoS condition of an affected device. This vulnerability is due to missing length validation of certain Cisco Discovery Protocol packet header fields. An attacker could exploit this vulnerability by sending crafted Cisco Discovery Protocol packets to an affected device. A successful exploit could allow the attacker to cause the device to exhaust available memory and cause the service to restart. Cisco has released firmware updates that address this vulnerability. \n\n- CVE-2022-21208: The package node-opcua before 2.74.0 are vulnerable to Denial of Service (DoS) due to a missing limitation on the number of received chunks - per single session or in total for all concurrent sessions. An attacker can exploit this vulnerability by sending an unlimited number of huge chunks (e.g. 2GB each) without sending the Final closing chunk.\n\n- CVE-2022-29212: TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, certain TFLite models that were created using TFLite model converter would crash when loaded in the TFLite interpreter. The culprit is that during quantization the scale of values could be greater than 1 but code was always assuming sub-unit scaling. Thus, since code was calling `QuantizeMultiplierSmallerThanOneExp`, the `TFLITE_CHECK_LT` assertion would trigger and abort the process. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue.\n\n- CVE-2022-29196: TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, the implementation of `tf.raw_ops.Conv3DBackpropFilterV2` does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack. The code does not validate that the `filter_sizes` argument is a vector. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue.\n\n- CVE-2022-29200: TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, the implementation of `tf.raw_ops.LSTMBlockCell` does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack. The code does not validate the ranks of any of the arguments to this API call. This results in `CHECK`-failures when the elements of the tensor are accessed. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue.\n\nRelated Weaknesses:\n\n- CWE-20 (ChildOf)\n\n- CWE-20 (ChildOf)\n\n- CWE-789 (CanPrecede)",
          "type": "Base",
          "search_source": "base_query",
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            }
          }
        },
        {
          "cwe_id": "401",
          "name": "Missing Release of Memory after Effective Lifetime",
          "description": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.",
          "score": 25.34208451259859,
          "matched_text": "CWE-401: Missing Release of Memory after Effective Lifetime\n\nType: Variant\n\nStatus: Draft\n\nAlternative Terms:\n\nMemory Leak\n\nMemory Leak\n\nMemory Leak\n\nDescription:\n\nThe product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.\n\nExtended Details:\n\nThis is often triggered by improper handling of malformed data or unexpectedly interrupted sessions. In some languages, developers are responsible for tracking memory allocation and releasing the memory. If there are no more pointers or references to the memory, then it can no longer be tracked and identified for release.\n\nReal-World Examples:\n\n- CVE-2005-3119: Memory leak because function does not free() an element of a data structure.\n\n- CVE-2004-0427: Memory leak when counter variable is not decremented.\n\n- CVE-2002-0574: chain: reference count is not decremented, leading to memory leak in OS by sending ICMP packets.\n\n- CVE-2005-3181: Kernel uses wrong function to release a data structure, preventing data from being properly tracked by other code.\n\n- CVE-2004-0222: Memory leak via unknown manipulations as part of protocol test suite.\n\n- CVE-2001-0136: Memory leak via a series of the same command.\n\nTop 25 CWE Examples:\n\n- CVE-2021-31256: Memory leak in the stbl_GetSampleInfos function in MP4Box in GPAC 1.0.1 allows attackers to read memory via a crafted file.\n\n- CVE-2021-33361: Memory leak in the afra_box_read function in MP4Box in GPAC 1.0.1 allows attackers to read memory via a crafted file.\n\n- CVE-2021-33363: Memory leak in the infe_box_read function in MP4Box in GPAC 1.0.1 allows attackers to read memory via a crafted file.\n\n- CVE-2021-33365: Memory leak in the gf_isom_get_root_od function in MP4Box in GPAC 1.0.1 allows attackers to read memory via a crafted file.\n\n- CVE-2021-36993: There is a Memory leaks vulnerability in Huawei Smartphone.Successful exploitation of this vulnerability may affect service availability.\n\n- CVE-2021-1313: Multiple vulnerabilities in the ingress packet processing function of Cisco IOS XR Software could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition on an affected device. For more information about these vulnerabilities, see the Details section of this advisory.\n\n- CVE-2020-20665: rudp v0.6 was discovered to contain a memory leak in the component main.c.\n\n- CVE-2020-21839: An issue was discovered in GNU LibreDWG 0.10. Crafted input will lead to an memory leak in dwg_decode_eed ../../src/decode.c:3638.\n\n- CVE-2021-0202: On Juniper Networks MX Series and EX9200 Series platforms with Trio-based MPC (Modular Port Concentrator) where Integrated Routing and Bridging (IRB) interface is configured and it is mapped to a VPLS instance or a Bridge-Domain, certain network events at Customer Edge (CE) device may cause memory leak in the MPC which can cause an out of memory and MPC restarts. When this issue occurs, there will be temporary traffic interruption until the MPC is restored. An administrator can use the following CLI command to monitor the status of memory usage level of the MPC: user@device> show system resource-monitor fpc FPC Resource Usage Summary Free Heap Mem Watermark : 20 % Free NH Mem Watermark : 20 % Free Filter Mem Watermark : 20 % * - Watermark reached Slot # % Heap Free RTT Average RTT 1 87 PFE # % ENCAP mem Free % NH mem Free % FW mem Free 0 NA 88 99 1 NA 89 99 When the issue is occurring, the value of \u201c% NH mem Free\u201d will go down until the MPC restarts. This issue affects MX Series and EX9200 Series with Trio-based PFEs (Packet Forwarding Engines). Please refer to https://kb.juniper.net/KB25385 for the list of Trio-based PFEs. This issue affects Juniper Networks Junos OS on MX Series, EX9200 Series: 17.3R3-S8; 17.4R3-S2; 18.2R3-S4, 18.2R3-S5; 18.3R3-S2, 18.3R3-S3; 18.4 versions starting from 18.4R3-S1 and later versions prior to 18.4R3-S6; 19.2 versions starting from 19.2R2 and later versions prior to 19.2R3-S1; 19.4 versions starting from 19.4R2 and later versions prior to 19.4R2-S3, 19.4R3; 20.2 versions starting from 20.2R1 and later versions prior to 20.2R1-S3, 20.2R2. This issue does not affect Juniper Networks Junos OS: 18.1, 19.1, 19.3, 20.1.\n\n- CVE-2021-0215: On Juniper Networks Junos EX series, QFX Series, MX Series and SRX branch series devices, a memory leak occurs every time the 802.1X authenticator port interface flaps which can lead to other processes, such as the pfex process, responsible for packet forwarding, to crash and restart. An administrator can use the following CLI command to monitor the status of memory consumption: user@device> show task memory detail Please refer to https://kb.juniper.net/KB31522 for details. This issue affects Juniper Networks Junos OS: 14.1X53 versions prior to 14.1X53-D54; 15.1X49 versions prior to 15.1X49-D240 ; 15.1X53 versions prior to 15.1X53-D593; 16.1 versions prior to 16.1R7-S8; 17.2 versions prior to 17.2R3-S4; 17.3 versions prior to 17.3R3-S8; 17.4 versions prior to 17.4R2-S11, 17.4R3-S2; 18.1 versions prior to 18.1R3-S10 ; 18.2 versions prior to 18.2R2-S7, 18.2R3-S3; 18.3 versions prior to 18.3R2-S4, 18.3R3-S2; 18.4 versions prior to 18.4R1-S7, 18.4R2-S4, 18.4R3-S2; 19.1 versions prior to 19.1R1-S5, 19.1R2-S2, 19.1R3; 19.2 versions prior to 19.2R1-S5, 19.2R2; 19.3 versions prior to 19.3R2-S3, 19.3R3; 19.4 versions prior to 19.4R1-S2, 19.4R2. This issue does not affect Juniper Networks Junos OS 12.3, 15.1.\n\n- CVE-2021-0230: On Juniper Networks SRX Series devices with link aggregation (lag) configured, executing any operation that fetches Aggregated Ethernet (AE) interface statistics, including but not limited to SNMP GET requests, causes a slow kernel memory leak. If all the available memory is consumed, the traffic will be impacted and a reboot might be required. The following log can be seen if this issue happens. /kernel: rt_pfe_veto: Memory over consumed. Op 1 err 12, rtsm_id 0:-1, msg type 72 /kernel: rt_pfe_veto: free kmem_map memory = (20770816) curproc = kmd An administrator can use the following CLI command to monitor the status of memory consumption (ifstat bucket): user@device > show system virtual-memory no-forwarding | match ifstat Type InUse MemUse HighUse Limit Requests Limit Limit Size(s) ifstat 2588977 162708K - 19633958 <<<< user@device > show system virtual-memory no-forwarding | match ifstat Type InUse MemUse HighUse Limit Requests Limit Limit Size(s) ifstat 3021629 189749K - 22914415 <<<< This issue affects Juniper Networks Junos OS on SRX Series: 17.1 versions 17.1R3 and above prior to 17.3R3-S11; 17.4 versions prior to 17.4R3-S5; 18.2 versions prior to 18.2R3-S7, 18.2R3-S8; 18.3 versions prior to 18.3R3-S4; 18.4 versions prior to 18.4R2-S7, 18.4R3-S6; 19.1 versions prior to 19.1R3-S4; 19.2 versions prior to 19.2R1-S6; 19.3 versions prior to 19.3R3-S1; 19.4 versions prior to 19.4R3-S1; 20.1 versions prior to 20.1R2, 20.1R3; 20.2 versions prior to 20.2R2-S2, 20.2R3; 20.3 versions prior to 20.3R1-S2, 20.3R2. This issue does not affect Juniper Networks Junos OS prior to 17.1R3.\n\n- CVE-2021-0257: On Juniper Networks MX Series and EX9200 Series platforms with Trio-based MPCs (Modular Port Concentrators) where Integrated Routing and Bridging (IRB) interfaces are configured and mapped to a VPLS instance or a Bridge-Domain, certain Layer 2 network events at Customer Edge (CE) devices may cause memory leaks in the MPC of Provider Edge (PE) devices which can cause an out of memory condition and MPC restart. When this issue occurs, there will be temporary traffic interruption until the MPC is restored. An administrator can use the following CLI command to monitor the status of memory usage level of the MPC: user@device> show system resource-monitor fpc FPC Resource Usage Summary Free Heap Mem Watermark : 20 % Free NH Mem Watermark : 20 % Free Filter Mem Watermark : 20 % * - Watermark reached Slot # % Heap Free RTT Average RTT 1 87 PFE # % ENCAP mem Free % NH mem Free % FW mem Free 0 NA 88 99 1 NA 89 99 When the issue is occurring, the value of \u201c% NH mem Free\u201d will go down until the MPC restarts. This issue affects MX Series and EX9200 Series with Trio-based PFEs (Packet Forwarding Engines), including MX-MPC1-3D, MX-MPC1E-3D, MX-MPC2-3D, MX-MPC2E-3D, MPC-3D-16XGE, and CHAS-MXxx Series MPCs. No other products or platforms are affected by this issue. This issue affects Juniper Networks Junos OS on MX Series, EX9200 Series: 17.3 versions prior to 17.3R3-S10; 17.4 versions prior to 17.4R3-S3; 18.2 versions prior to 18.2R3-S7; 18.3 versions prior to 18.3R3-S4; 18.4 versions prior to 18.4R3-S6; 19.2 versions prior to 19.2R3-S2; 19.3 versions prior to 19.3R3-S1; 19.4 versions prior to 19.4R2-S2, 19.4R3; 20.2 versions prior to 20.2R1-S3, 20.2R2; 20.3 versions prior to 20.3R1-S1,, 20.3R2. This issue does not affect Juniper Networks Junos OS: 17.3 versions prior to 17.3R3-S8; 17.4 versions prior to 17.4R3-S2; 18.1; 18.2 versions prior to 18.2R3-S4; 18.3 versions prior to 18.3R3-S2; 18.4 versions prior to 18.4R3-S1; 19.1; 19.2 versions prior to 19.2R2; 19.3 versions prior to 19.3R3; 19.4 versions prior to 19.4R2.\n\n- CVE-2021-1563: Multiple vulnerabilities in the implementation of the Cisco Discovery Protocol and Link Layer Discovery Protocol (LLDP) for Cisco Video Surveillance 7000 Series IP Cameras could allow an unauthenticated, adjacent attacker to cause a memory leak, which could lead to a denial of service (DoS) condition on an affected device. These vulnerabilities are due to incorrect processing of certain Cisco Discovery Protocol and LLDP packets at ingress time. An attacker could exploit these vulnerabilities by sending crafted Cisco Discovery Protocol or LLDP packets to an affected device. A successful exploit could allow the attacker to cause the affected device to continuously consume memory, which could cause the device to crash and reload, resulting in a DoS condition. Note: Cisco Discovery Protocol and LLDP are Layer 2 protocols. To exploit these vulnerabilities, an attacker must be in the same broadcast domain as the affected device (Layer 2 adjacent).\n\n- CVE-2021-1564: Multiple vulnerabilities in the implementation of the Cisco Discovery Protocol and Link Layer Discovery Protocol (LLDP) for Cisco Video Surveillance 7000 Series IP Cameras could allow an unauthenticated, adjacent attacker to cause a memory leak, which could lead to a denial of service (DoS) condition on an affected device. These vulnerabilities are due to incorrect processing of certain Cisco Discovery Protocol and LLDP packets at ingress time. An attacker could exploit these vulnerabilities by sending crafted Cisco Discovery Protocol or LLDP packets to an affected device. A successful exploit could allow the attacker to cause the affected device to continuously consume memory, which could cause the device to crash and reload, resulting in a DoS condition. Note: Cisco Discovery Protocol and LLDP are Layer 2 protocols. To exploit these vulnerabilities, an attacker must be in the same broadcast domain as the affected device (Layer 2 adjacent).\n\n- CVE-2021-20216: A flaw was found in Privoxy in versions before 3.0.31. A memory leak that occurs when decompression fails unexpectedly may lead to a denial of service. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-20234: An uncontrolled resource consumption (memory leak) flaw was found in the ZeroMQ client in versions before 4.3.3 in src/pipe.cpp. This issue causes a client that connects to multiple malicious or compromised servers to crash. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-20237: An uncontrolled resource consumption (memory leak) flaw was found in ZeroMQ's src/xpub.cpp in versions before 4.3.3. This flaw allows a remote unauthenticated attacker to send crafted PUB messages that consume excessive memory if the CURVE/ZAP authentication is disabled on the server, causing a denial of service. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-30002: An issue was discovered in the Linux kernel before 5.11.3 when a webcam device exists. video_usercopy in drivers/media/v4l2-core/v4l2-ioctl.c has a memory leak for large arguments, aka CID-fb18802a338b.\n\n- CVE-2021-30844: A logic issue was addressed with improved state management. This issue is fixed in Security Update 2021-005 Catalina, macOS Big Sur 11.6. A remote attacker may be able to leak memory.\n\n- CVE-2021-32032: In Trusted Firmware-M through 1.3.0, cleaning up the memory allocated for a multi-part cryptographic operation (in the event of a failure) can prevent the abort() operation in the associated cryptographic library from freeing internal resources, causing a memory leak.\n\n- CVE-2021-39282: Live555 through 1.08 has a memory leak in AC3AudioStreamParser for AC3 files.\n\n- CVE-2021-41229: BlueZ is a Bluetooth protocol stack for Linux. In affected versions a vulnerability exists in sdp_cstate_alloc_buf which allocates memory which will always be hung in the singly linked list of cstates and will not be freed. This will cause a memory leak over time. The data can be a very large object, which can be caused by an attacker continuously sending sdp packets and this may cause the service of the target device to crash.\n\n- CVE-2021-42340: The fix for bug 63362 present in Apache Tomcat 10.1.0-M1 to 10.1.0-M5, 10.0.0-M1 to 10.0.11, 9.0.40 to 9.0.53 and 8.5.60 to 8.5.71 introduced a memory leak. The object introduced to collect metrics for HTTP upgrade connections was not released for WebSocket connections once the connection was closed. This created a memory leak that, over time, could lead to a denial of service via an OutOfMemoryError.\n\n- CVE-2021-20265: A flaw was found in the way memory resources were freed in the unix_stream_recvmsg function in the Linux kernel when a signal was pending. This flaw allows an unprivileged local user to crash the system by exhausting available memory. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-34792: A vulnerability in the memory management of Cisco Adaptive Security Appliance (ASA) Software and Firepower Threat Defense (FTD) Software could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition on an affected device. This vulnerability is due to improper resource management when connection rates are high. An attacker could exploit this vulnerability by opening a significant number of connections on an affected device. A successful exploit could allow the attacker to cause the device to reload, resulting in a DoS condition.\n\n- CVE-2020-15254: Crossbeam is a set of tools for concurrent programming. In crossbeam-channel before version 0.4.4, the bounded channel incorrectly assumes that `Vec::from_iter` has allocated capacity that same as the number of iterator elements. `Vec::from_iter` does not actually guarantee that and may allocate extra memory. The destructor of the `bounded` channel reconstructs `Vec` from the raw pointer based on the incorrect assumes described above. This is unsound and causing deallocation with the incorrect capacity when `Vec::from_iter` has allocated different sizes with the number of iterator elements. This has been fixed in crossbeam-channel 0.4.4.\n\n- CVE-2020-27827: A flaw was found in multiple versions of OpenvSwitch. Specially crafted LLDP packets can cause memory to be lost when allocating data to handle specific optional TLVs, potentially causing a denial of service. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-28665: Stormshield SNS with versions before 3.7.18, 3.11.6 and 4.1.6 has a memory-management defect in the SNMP plugin that can lead to excessive consumption of memory and CPU resources, and possibly a denial of service.\n\n- CVE-2021-3181: rfc822.c in Mutt through 2.0.4 allows remote attackers to cause a denial of service (mailbox unavailability) by sending email messages with sequences of semicolon characters in RFC822 address fields (aka terminators of empty groups). A small email message from the attacker can cause large memory consumption, and the victim may then be unable to see email messages from other persons.\n\n- CVE-2021-41145: FreeSWITCH is a Software Defined Telecom Stack enabling the digital transformation from proprietary telecom switches to a software implementation that runs on any commodity hardware. FreeSWITCH prior to version 1.10.7 is susceptible to Denial of Service via SIP flooding. When flooding FreeSWITCH with SIP messages, it was observed that after a number of seconds the process was killed by the operating system due to memory exhaustion. By abusing this vulnerability, an attacker is able to crash any FreeSWITCH instance by flooding it with SIP messages, leading to Denial of Service. The attack does not require authentication and can be carried out over UDP, TCP or TLS. This issue was patched in version 1.10.7.\n\n- CVE-2021-31261: The gf_hinter_track_new function in GPAC 1.0.1 allows attackers to read memory via a crafted file in the MP4Box command.\n\n- CVE-2020-22844: A buffer overflow in Mikrotik RouterOS 6.47 allows unauthenticated attackers to cause a denial of service (DOS) via crafted SMB requests.\n\n- CVE-2021-40008: There is a memory leak vulnerability in CloudEngine 12800 V200R019C00SPC800, CloudEngine 5800 V200R019C00SPC800, CloudEngine 6800 V200R019C00SPC800 and CloudEngine 7800 V200R019C00SPC800. The software does not sufficiently track and release allocated memory while parse a series of crafted binary messages, which could consume remaining memory. Successful exploit could cause memory exhaust.\n\n- CVE-2022-20046: In Bluetooth, there is a possible memory corruption due to a logic error. This could lead to local denial of service with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS06142410; Issue ID: ALPS06142410.\n\n- CVE-2021-33437: An issue was discovered in mjs (mJS: Restricted JavaScript engine), ES6 (JavaScript version 6). There are memory leaks in frozen_cb() in mjs.c.\n\n- CVE-2021-42197: An issue was discovered in swftools through 20201222 through a memory leak in the swftools when swfdump is used. It allows an attacker to cause code execution.\n\n- CVE-2022-0854: A memory leak flaw was found in the Linux kernel\u2019s DMA subsystem, in the way a user calls DMA_FROM_DEVICE. This flaw allows a local user to read random memory from the kernel space.\n\n- CVE-2022-22155: An Uncontrolled Resource Consumption vulnerability in the handling of IPv6 neighbor state change events in Juniper Networks Junos OS allows an adjacent attacker to cause a memory leak in the Flexible PIC Concentrator (FPC) of an ACX5448 router. The continuous flapping of an IPv6 neighbor with specific timing will cause the FPC to run out of resources, leading to a Denial of Service (DoS) condition. Once the condition occurs, further packet processing will be impacted, creating a sustained Denial of Service (DoS) condition, requiring a manual PFE restart to restore service. The following error messages will be seen after the FPC resources have been exhausted: fpc0 DNX_NH::dnx_nh_tag_ipv4_hw_install(),3135: dnx_nh_tag_ipv4_hw_install: BCM L3 Egress create object failed for NH 602 (-14:No resources for operation), BCM NH Params: unit:0 Port:41, L3_INTF:0 Flags: 0x40 fpc0 DNX_NH::dnx_nh_tag_ipv4_hw_install(),3135: dnx_nh_tag_ipv4_hw_install: BCM L3 Egress create object failed for NH 602 (-14:No resources for operation), BCM NH Params: unit:0 Port:41, L3_INTF:0 Flags: 0x40 fpc0 DNX_NH::dnx_nh_tag_ipv4_hw_install(),3135: dnx_nh_tag_ipv4_hw_install: BCM L3 Egress create object failed for NH 602 (-14:No resources for operation), BCM NH Params: unit:0 Port:41, L3_INTF:0 Flags: 0x40 fpc0 DNX_NH::dnx_nh_tag_ipv4_hw_install(),3135: dnx_nh_tag_ipv4_hw_install: BCM L3 Egress create object failed for NH 602 (-14:No resources for operation), BCM NH Params: unit:0 Port:41, L3_INTF:0 Flags: 0x40 This issue only affects the ACX5448 router. No other products or platforms are affected by this vulnerability. This issue affects Juniper Networks Junos OS on ACX5448: 18.4 versions prior to 18.4R3-S10; 19.1 versions prior to 19.1R3-S5; 19.2 versions prior to 19.2R1-S8, 19.2R3-S2; 19.3 versions prior to 19.3R2-S6, 19.3R3-S2; 19.4 versions prior to 19.4R1-S3, 19.4R2-S2, 19.4R3; 20.1 versions prior to 20.1R2; 20.2 versions prior to 20.2R1-S1, 20.2R2.\n\n- CVE-2022-26878: drivers/bluetooth/virtio_bt.c in the Linux kernel before 5.16.3 has a memory leak (socket buffers have memory allocated but not freed).\n\n- CVE-2022-35110: SWFTools commit 772e55a2 was discovered to contain a memory leak via /lib/mem.c.\n\n- CVE-2022-36152: tifig v0.2.2 was discovered to contain a memory leak via operator new[](unsigned long) at /asan/asan_new_delete.cpp.\n\n- CVE-2022-38177: By spoofing the target resolver with responses that have a malformed ECDSA signature, an attacker can trigger a small memory leak. It is possible to gradually erode available memory to the point where named crashes for lack of resources.\n\n- CVE-2022-38178: By spoofing the target resolver with responses that have a malformed EdDSA signature, an attacker can trigger a small memory leak. It is possible to gradually erode available memory to the point where named crashes for lack of resources.\n\n- CVE-2022-23471: containerd is an open source container runtime. A bug was found in containerd's CRI implementation where a user can exhaust memory on the host. In the CRI stream server, a goroutine is launched to handle terminal resize events if a TTY is requested. If the user's process fails to launch due to, for example, a faulty command, the goroutine will be stuck waiting to send without a receiver, resulting in a memory leak. Kubernetes and crictl can both be configured to use containerd's CRI implementation and the stream server is used for handling container IO. This bug has been fixed in containerd 1.6.12 and 1.5.16. Users should update to these versions to resolve the issue. Users unable to upgrade should ensure that only trusted images and commands are used and that only trusted users have permissions to execute commands in running containers. \n\n- CVE-2021-42522: There is a Information Disclosure vulnerability in anjuta/plugins/document-manager/anjuta-bookmarks.c. This issue was caused by the incorrect use of libxml2 API. The vendor forgot to call 'g_free()' to release the return value of 'xmlGetProp()'.\n\n- CVE-2021-42523: There are two Information Disclosure vulnerabilities in colord, and they lie in colord/src/cd-device-db.c and colord/src/cd-profile-db.c separately. They exist because the 'err_msg' of 'sqlite3_exec' is not releasing after use, while libxml2 emphasizes that the caller needs to release it.\n\n- CVE-2022-26365: Linux disk/nic frontends data leaks T[his CNA information record relates to multiple CVEs; the text explains which aspects/vulnerabilities correspond to which CVE.] Linux Block and Network PV device frontends don't zero memory regions before sharing them with the backend (CVE-2022-26365, CVE-2022-33740). Additionally the granularity of the grant table doesn't allow sharing less than a 4K page, leading to unrelated data residing in the same 4K page as data shared with a backend being accessible by such backend (CVE-2022-33741, CVE-2022-33742).\n\n- CVE-2021-3690: A flaw was found in Undertow. A buffer leak on the incoming WebSocket PONG message may lead to memory exhaustion. This flaw allows an attacker to cause a denial of service. The highest threat from this vulnerability is availability.\n\n- CVE-2022-38371: A vulnerability has been identified in APOGEE MBC (PPC) (BACnet) (All versions), APOGEE MBC (PPC) (P2 Ethernet) (All versions), APOGEE MEC (PPC) (BACnet) (All versions), APOGEE MEC (PPC) (P2 Ethernet) (All versions), APOGEE PXC Compact (BACnet) (All versions < V3.5.7), APOGEE PXC Compact (P2 Ethernet) (All versions < V2.8.21), APOGEE PXC Modular (BACnet) (All versions < V3.5.7), APOGEE PXC Modular (P2 Ethernet) (All versions < V2.8.21), Desigo PXC00-E.D (All versions >= V2.3), Desigo PXC00-U (All versions >= V2.3), Desigo PXC001-E.D (All versions >= V2.3), Desigo PXC100-E.D (All versions >= V2.3), Desigo PXC12-E.D (All versions >= V2.3), Desigo PXC128-U (All versions >= V2.3), Desigo PXC200-E.D (All versions >= V2.3), Desigo PXC22-E.D (All versions >= V2.3), Desigo PXC22.1-E.D (All versions >= V2.3), Desigo PXC36.1-E.D (All versions >= V2.3), Desigo PXC50-E.D (All versions >= V2.3), Desigo PXC64-U (All versions >= V2.3), Desigo PXM20-E (All versions >= V2.3), Nucleus NET for Nucleus PLUS V1 (All versions < V5.2a), Nucleus NET for Nucleus PLUS V2 (All versions < V5.4), Nucleus ReadyStart V3 V2012 (All versions < V2012.08.1), Nucleus ReadyStart V3 V2017 (All versions < V2017.02.4), Nucleus Source Code (All versions including affected FTP server), TALON TC Compact (BACnet) (All versions < V3.5.7), TALON TC Modular (BACnet) (All versions < V3.5.7). The FTP server does not properly release memory resources that were reserved for incomplete connection attempts by FTP clients. This could allow a remote attacker to generate a denial of service condition on devices that incorporate a vulnerable version of the FTP server.\n\nRelated Weaknesses:\n\n- CWE-772 (ChildOf)\n\n- CWE-404 (ChildOf)\n\n- CWE-404 (ChildOf)",
          "type": "Variant",
          "search_source": "base_query",
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            }
          }
        },
        {
          "doc_id": "426",
          "text": "CWE-426: Untrusted Search Path",
          "score": 2.6104000000000003,
          "metadata": {
            "doc_id": "426",
            "name": "Untrusted Search Path",
            "type": "base",
            "original_content": "CWE-426: Untrusted Search Path",
            "relationships": [
              {
                "source_id": "426",
                "target_id": "428",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "426",
                "target_id": "427",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "426",
                "target_id": "673",
                "label": "CHILDOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "426",
                "target_id": "668",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "426",
                "target_id": "642",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "98",
                "target_id": "426",
                "label": "CANALSOBE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "673",
                "target_id": "426",
                "label": "PARENTOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "668",
                "target_id": "426",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "642",
                "target_id": "426",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "explicit_mention": 1.0,
              "relationship_chain": 0.42,
              "abstraction_path": 0.9
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "78",
                      "184",
                      "CANFOLLOW"
                    ],
                    [
                      "184",
                      "98",
                      "CANPRECEDE"
                    ],
                    [
                      "98",
                      "426",
                      "CANALSOBE"
                    ]
                  ],
                  "score": 0.42,
                  "type": "relationship_chain",
                  "source": "78"
                }
              }
            },
            "is_explicit": true,
            "abstraction_level": "base",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "sparse",
                "graph"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "sparse": 94.56104726448638,
                "graph": 2.6104000000000003
              }
            }
          },
          "similarity": 2.6104000000000003
        },
        {
          "doc_id": "98",
          "text": "CWE-98: Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')",
          "score": 2.2800000000000002,
          "metadata": {
            "doc_id": "98",
            "name": "Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')",
            "type": "variant",
            "original_content": "CWE-98: Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')",
            "relationships": [
              {
                "source_id": "98",
                "target_id": "73",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "98",
                "target_id": "473",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "98",
                "target_id": "456",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "98",
                "target_id": "425",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "98",
                "target_id": "184",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "98",
                "target_id": "426",
                "label": "CANALSOBE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "98",
                "target_id": "94",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "98",
                "target_id": "829",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "98",
                "target_id": "706",
                "label": "CHILDOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "94",
                "target_id": "98",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "829",
                "target_id": "98",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "73",
                "target_id": "98",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "706",
                "target_id": "98",
                "label": "PARENTOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "473",
                "target_id": "98",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "456",
                "target_id": "98",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "425",
                "target_id": "98",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "184",
                "target_id": "98",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.8,
              "sequence_path": 0.8,
              "peer_group": 0.9
            },
            "abstraction_factor": 1.2,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "vulnerability_sequence_forward",
                "peer_relationship"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "78",
                      "184",
                      "CANFOLLOW"
                    ],
                    [
                      "184",
                      "98",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 0.8,
                  "type": "relationship_chain",
                  "source": "78"
                },
                "vulnerability_sequence_forward": {
                  "path": [
                    [
                      "78",
                      "184",
                      "CANFOLLOW"
                    ],
                    [
                      "184",
                      "98",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 0.8,
                  "type": "vulnerability_sequence_forward",
                  "source": "78"
                },
                "peer_relationship": {
                  "path": [
                    [
                      "98",
                      "426",
                      "CANALSOBE"
                    ]
                  ],
                  "score": 0.9,
                  "type": "peer_relationship",
                  "source": "426"
                }
              }
            },
            "position": "after",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 2.2800000000000002
              }
            }
          },
          "similarity": 2.2800000000000002
        },
        {
          "doc_id": "88",
          "text": "CWE-88: Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
          "score": 2.1762,
          "metadata": {
            "doc_id": "88",
            "name": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
            "type": "base",
            "original_content": "CWE-88: Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
            "relationships": [
              {
                "source_id": "88",
                "target_id": "77",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1340"
                }
              },
              {
                "source_id": "88",
                "target_id": "77",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1305"
                }
              },
              {
                "source_id": "88",
                "target_id": "74",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "88",
                "target_id": "77",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "78",
                "target_id": "88",
                "label": "CANALSOBE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "77",
                "target_id": "88",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "74",
                "target_id": "88",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.7,
              "abstraction_path": 0.7200000000000001,
              "peer_group": 0.9
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "abstraction_path_down",
                "peer_relationship"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "78",
                      "88",
                      "CANALSOBE"
                    ]
                  ],
                  "score": 0.7,
                  "type": "relationship_chain",
                  "source": "78"
                },
                "abstraction_path_down": {
                  "path": [
                    [
                      "77",
                      "88",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.7200000000000001,
                  "type": "abstraction_path_down",
                  "source": "77"
                },
                "peer_relationship": {
                  "path": [
                    [
                      "78",
                      "88",
                      "CANALSOBE"
                    ]
                  ],
                  "score": 0.9,
                  "type": "peer_relationship",
                  "source": "78"
                }
              }
            },
            "abstraction_level": "base",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 2.1762
              }
            }
          },
          "similarity": 2.1762
        },
        {
          "doc_id": "79",
          "text": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
          "score": 1.7680000000000005,
          "metadata": {
            "doc_id": "79",
            "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
            "type": "base",
            "original_content": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
            "relationships": [
              {
                "source_id": "79",
                "target_id": "87",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "79",
                "target_id": "86",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "79",
                "target_id": "85",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "79",
                "target_id": "84",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "79",
                "target_id": "83",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "79",
                "target_id": "81",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "79",
                "target_id": "80",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "79",
                "target_id": "184",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "79",
                "target_id": "113",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "79",
                "target_id": "352",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "79",
                "target_id": "494",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "79",
                "target_id": "74",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "79",
                "target_id": "74",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "87",
                "target_id": "79",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "86",
                "target_id": "79",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "85",
                "target_id": "79",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "84",
                "target_id": "79",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "83",
                "target_id": "79",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "81",
                "target_id": "79",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "80",
                "target_id": "79",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "74",
                "target_id": "79",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "494",
                "target_id": "79",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "184",
                "target_id": "79",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "113",
                "target_id": "79",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.8,
              "sequence_path": 0.8
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "vulnerability_sequence_forward"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "78",
                      "184",
                      "CANFOLLOW"
                    ],
                    [
                      "184",
                      "79",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 0.8,
                  "type": "relationship_chain",
                  "source": "78"
                },
                "vulnerability_sequence_forward": {
                  "path": [
                    [
                      "78",
                      "184",
                      "CANFOLLOW"
                    ],
                    [
                      "184",
                      "79",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 0.8,
                  "type": "vulnerability_sequence_forward",
                  "source": "78"
                }
              }
            },
            "position": "after",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.7680000000000005
              }
            }
          },
          "similarity": 1.7680000000000005
        },
        {
          "doc_id": "434",
          "text": "CWE-434: Unrestricted Upload of File with Dangerous Type",
          "score": 1.7680000000000005,
          "metadata": {
            "doc_id": "434",
            "name": "Unrestricted Upload of File with Dangerous Type",
            "type": "base",
            "original_content": "CWE-434: Unrestricted Upload of File with Dangerous Type",
            "relationships": [
              {
                "source_id": "434",
                "target_id": "73",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "434",
                "target_id": "184",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "434",
                "target_id": "183",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "434",
                "target_id": "430",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "434",
                "target_id": "436",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "434",
                "target_id": "351",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "434",
                "target_id": "669",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "434",
                "target_id": "669",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "73",
                "target_id": "434",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "669",
                "target_id": "434",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "430",
                "target_id": "434",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "184",
                "target_id": "434",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "183",
                "target_id": "434",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.8,
              "sequence_path": 0.8
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "vulnerability_sequence_forward"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "78",
                      "184",
                      "CANFOLLOW"
                    ],
                    [
                      "184",
                      "434",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 0.8,
                  "type": "relationship_chain",
                  "source": "78"
                },
                "vulnerability_sequence_forward": {
                  "path": [
                    [
                      "78",
                      "184",
                      "CANFOLLOW"
                    ],
                    [
                      "184",
                      "434",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 0.8,
                  "type": "vulnerability_sequence_forward",
                  "source": "78"
                }
              }
            },
            "position": "after",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.7680000000000005
              }
            }
          },
          "similarity": 1.7680000000000005
        },
        {
          "doc_id": "472",
          "text": "CWE-472: External Control of Assumed-Immutable Web Parameter",
          "score": 1.7680000000000005,
          "metadata": {
            "doc_id": "472",
            "name": "External Control of Assumed-Immutable Web Parameter",
            "type": "base",
            "original_content": "CWE-472: External Control of Assumed-Immutable Web Parameter",
            "relationships": [
              {
                "source_id": "472",
                "target_id": "656",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "472",
                "target_id": "384",
                "label": "REQUIREDBY",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "472",
                "target_id": "471",
                "label": "CHILDOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "472",
                "target_id": "642",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "656",
                "target_id": "472",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "642",
                "target_id": "472",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "471",
                "target_id": "472",
                "label": "PARENTOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "384",
                "target_id": "472",
                "label": "REQUIRES",
                "properties": {
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.8,
              "sequence_path": 0.8
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "vulnerability_sequence_forward"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "259",
                      "656",
                      "CANFOLLOW"
                    ],
                    [
                      "656",
                      "472",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 0.8,
                  "type": "relationship_chain",
                  "source": "259"
                },
                "vulnerability_sequence_forward": {
                  "path": [
                    [
                      "259",
                      "656",
                      "CANFOLLOW"
                    ],
                    [
                      "656",
                      "472",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 0.8,
                  "type": "vulnerability_sequence_forward",
                  "source": "259"
                }
              }
            },
            "position": "after",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.7680000000000005
              }
            }
          },
          "similarity": 1.7680000000000005
        },
        {
          "doc_id": "78",
          "text": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
          "score": 0.6521784447037687,
          "metadata": {
            "doc_id": "78",
            "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
            "type": "Base",
            "extended_description": "\n\nThis weakness can lead to a vulnerability in environments in which the attacker does not have direct access to the operating system, such as in web applications. Alternately, if the weakness occurs in a privileged program, it could allow the attacker to specify commands that normally would not be accessible, or to call alternate commands with privileges that the attacker does not have. The problem is exacerbated if the compromised process does not follow the principle of least privilege, because the attacker-controlled commands may run with special system privileges that increases the amount of damage.\n\n\nThere are at least two subtypes of OS command injection:\n\n\n  - The application intends to execute a single, fixed program that is under its own control. It intends to use externally-supplied inputs as arguments to that program. For example, the program might use system(\"nslookup [HOSTNAME]\") to run nslookup and allow the user to supply a HOSTNAME, which is used as an argument. Attackers cannot prevent nslookup from executing. However, if the program does not remove command separators from the HOSTNAME argument, attackers could place the separators into the arguments, which allows them to execute their own program after nslookup has finished executing.\n\n  - The application accepts an input that it uses to fully select which program to run, as well as which commands to use. The application simply redirects this entire command to the operating system. For example, the program might use \"exec([COMMAND])\" to execute the [COMMAND] that was supplied by the user. If the COMMAND is under attacker control, then the attacker can execute arbitrary commands or programs. If the command is being executed using functions like exec() and CreateProcess(), the attacker might not be able to combine multiple commands together in the same line.\n\nFrom a weakness standpoint, these variants represent distinct programmer errors. In the first variant, the programmer clearly intends that input from untrusted parties will be part of the arguments in the command to be executed. In the second variant, the programmer does not intend for the command to be accessible to any untrusted party, but the programmer probably has not accounted for alternate ways in which malicious attackers can provide input.",
            "alternate_terms": [
              "Shell injection",
              "Shell metacharacters",
              "OS Command Injection"
            ],
            "original_content": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
            "relationships": [
              {
                "source_id": "78",
                "target_id": "184",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "78",
                "target_id": "88",
                "label": "CANALSOBE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "78",
                "target_id": "77",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1340"
                }
              },
              {
                "source_id": "78",
                "target_id": "77",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1305"
                }
              },
              {
                "source_id": "78",
                "target_id": "74",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "78",
                "target_id": "77",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "77",
                "target_id": "78",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "74",
                "target_id": "78",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "184",
                "target_id": "78",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              }
            ],
            "source": "graph",
            "sources": [
              "vector",
              "graph"
            ],
            "vector_score": 0.6521784447037687,
            "graph_score": 2.4699999999999998,
            "score_components": {
              "relationship_chain": 0.3,
              "explicit_mention": 1.0,
              "abstraction_path": 0.9
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "77",
                      "78",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.3,
                  "type": "relationship_chain",
                  "source": "77"
                }
              }
            },
            "is_explicit": true,
            "abstraction_level": "base",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse",
                "graph"
              ],
              "retriever_count": 3,
              "normalized_scores": {
                "dense": 0.6110023594431819,
                "sparse": 700.0,
                "graph": 1.7428713778815073
              }
            }
          },
          "similarity": 1.7428713778815073
        },
        {
          "doc_id": "184",
          "text": "The product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.",
          "score": 0.5423672873897002,
          "metadata": {
            "doc_id": "184",
            "name": "Incomplete List of Disallowed Inputs",
            "type": "Base",
            "extended_description": null,
            "alternate_terms": [
              "Denylist / Deny List",
              "Blocklist / Block List",
              "Blacklist / Black List"
            ],
            "original_content": "The product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.",
            "relationships": [
              {
                "source_id": "184",
                "target_id": "692",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "184",
                "target_id": "98",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "184",
                "target_id": "434",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "184",
                "target_id": "78",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "184",
                "target_id": "79",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "184",
                "target_id": "1023",
                "label": "CHILDOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "184",
                "target_id": "693",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "98",
                "target_id": "184",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "86",
                "target_id": "184",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "79",
                "target_id": "184",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "78",
                "target_id": "184",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "693",
                "target_id": "184",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "692",
                "target_id": "184",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "692",
                "target_id": "184",
                "label": "STARTSWITH",
                "properties": {
                  "view_id": "709"
                }
              },
              {
                "source_id": "625",
                "target_id": "184",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "434",
                "target_id": "184",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "186",
                "target_id": "184",
                "label": "CANALSOBE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "1023",
                "target_id": "184",
                "label": "PARENTOF",
                "properties": {
                  "view_id": "1000"
                }
              }
            ],
            "source": "graph",
            "sources": [
              "vector",
              "graph"
            ],
            "vector_score": 0.5423672873897002,
            "graph_score": 2.2100000000000004,
            "score_components": {
              "relationship_chain": 1.0,
              "sequence_path": 1.0
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "vulnerability_sequence_forward",
                "vulnerability_sequence_backward"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "78",
                      "184",
                      "CANFOLLOW"
                    ]
                  ],
                  "score": 1.0,
                  "type": "relationship_chain",
                  "source": "78"
                },
                "vulnerability_sequence_forward": {
                  "path": [
                    [
                      "78",
                      "184",
                      "CANFOLLOW"
                    ]
                  ],
                  "score": 0.9,
                  "type": "vulnerability_sequence_forward",
                  "source": "78"
                },
                "vulnerability_sequence_backward": {
                  "path": [
                    [
                      "184",
                      "78",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 1.0,
                  "type": "vulnerability_sequence_backward",
                  "source": "78"
                }
              }
            },
            "position": "before",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.5429469149558803
              }
            }
          },
          "similarity": 1.5429469149558803
        },
        {
          "doc_id": "73",
          "text": "CWE-73: External Control of File Name or Path",
          "score": 1.5350400000000004,
          "metadata": {
            "doc_id": "73",
            "name": "External Control of File Name or Path",
            "type": "base",
            "original_content": "CWE-73: External Control of File Name or Path",
            "relationships": [
              {
                "source_id": "73",
                "target_id": "114",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "73",
                "target_id": "59",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "73",
                "target_id": "434",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "73",
                "target_id": "98",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "73",
                "target_id": "41",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "73",
                "target_id": "22",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "73",
                "target_id": "20",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "700"
                }
              },
              {
                "source_id": "73",
                "target_id": "610",
                "label": "CHILDOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "73",
                "target_id": "642",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "99",
                "target_id": "73",
                "label": "CANALSOBE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "98",
                "target_id": "73",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "642",
                "target_id": "73",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "610",
                "target_id": "73",
                "label": "PARENTOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "59",
                "target_id": "73",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "434",
                "target_id": "73",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "41",
                "target_id": "73",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "22",
                "target_id": "73",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "20",
                "target_id": "73",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "700"
                }
              },
              {
                "source_id": "114",
                "target_id": "73",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.8,
              "sequence_path": 0.5760000000000002
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "vulnerability_sequence_forward"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "98",
                      "426",
                      "CANALSOBE"
                    ],
                    [
                      "98",
                      "73",
                      "CANFOLLOW"
                    ]
                  ],
                  "score": 0.8,
                  "type": "relationship_chain",
                  "source": "426"
                },
                "vulnerability_sequence_forward": {
                  "path": [
                    [
                      "78",
                      "184",
                      "CANFOLLOW"
                    ],
                    [
                      "184",
                      "98",
                      "CANPRECEDE"
                    ],
                    [
                      "98",
                      "73",
                      "CANFOLLOW"
                    ]
                  ],
                  "score": 0.5760000000000002,
                  "type": "vulnerability_sequence_forward",
                  "source": "78"
                }
              }
            },
            "position": "after",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.5350400000000004
              }
            }
          },
          "similarity": 1.5350400000000004
        },
        {
          "doc_id": "321",
          "text": "The use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered.",
          "score": 0.5610003246445943,
          "metadata": {
            "doc_id": "321",
            "name": "Use of Hard-coded Cryptographic Key",
            "type": "Variant",
            "extended_description": null,
            "alternate_terms": [],
            "original_content": "The use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered.",
            "relationships": [
              {
                "source_id": "321",
                "target_id": "656",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "321",
                "target_id": "798",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1340"
                }
              },
              {
                "source_id": "321",
                "target_id": "798",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1305"
                }
              },
              {
                "source_id": "321",
                "target_id": "798",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "798",
                "target_id": "321",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "656",
                "target_id": "321",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "259",
                "target_id": "321",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "1291",
                "target_id": "321",
                "label": "PEEROF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "source": "graph",
            "sources": [
              "vector",
              "graph"
            ],
            "vector_score": 0.5610003246445943,
            "graph_score": 2.172,
            "score_components": {
              "relationship_chain": 0.7,
              "sequence_path": 0.8,
              "peer_group": 0.9
            },
            "abstraction_factor": 1.2,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "vulnerability_sequence_forward",
                "peer_relationship"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "259",
                      "321",
                      "PEEROF"
                    ]
                  ],
                  "score": 0.7,
                  "type": "relationship_chain",
                  "source": "259"
                },
                "vulnerability_sequence_forward": {
                  "path": [
                    [
                      "259",
                      "656",
                      "CANFOLLOW"
                    ],
                    [
                      "656",
                      "321",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 0.8,
                  "type": "vulnerability_sequence_forward",
                  "source": "259"
                },
                "peer_relationship": {
                  "path": [
                    [
                      "259",
                      "321",
                      "PEEROF"
                    ]
                  ],
                  "score": 0.9,
                  "type": "peer_relationship",
                  "source": "259"
                }
              }
            },
            "position": "after",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "graph"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "dense": 0.4807996292781689,
                "graph": 1.5276001298578379
              }
            }
          },
          "similarity": 1.5276001298578379
        },
        {
          "doc_id": "428",
          "text": "CWE-428: Unquoted Search Path or Element",
          "score": 1.521,
          "metadata": {
            "doc_id": "428",
            "name": "Unquoted Search Path or Element",
            "type": "base",
            "original_content": "CWE-428: Unquoted Search Path or Element",
            "relationships": [
              {
                "source_id": "428",
                "target_id": "668",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "428",
                "target_id": "668",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "668",
                "target_id": "428",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "426",
                "target_id": "428",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.7,
              "peer_group": 0.9
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "peer_relationship"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "426",
                      "428",
                      "PEEROF"
                    ]
                  ],
                  "score": 0.7,
                  "type": "relationship_chain",
                  "source": "426"
                },
                "peer_relationship": {
                  "path": [
                    [
                      "426",
                      "428",
                      "PEEROF"
                    ]
                  ],
                  "score": 0.9,
                  "type": "peer_relationship",
                  "source": "426"
                }
              }
            },
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.521
              }
            }
          },
          "similarity": 1.521
        },
        {
          "doc_id": "427",
          "text": "CWE-427: Uncontrolled Search Path Element",
          "score": 1.521,
          "metadata": {
            "doc_id": "427",
            "name": "Uncontrolled Search Path Element",
            "type": "base",
            "original_content": "CWE-427: Uncontrolled Search Path Element",
            "relationships": [
              {
                "source_id": "427",
                "target_id": "668",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "427",
                "target_id": "668",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "668",
                "target_id": "427",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "426",
                "target_id": "427",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.7,
              "peer_group": 0.9
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "peer_relationship"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "426",
                      "427",
                      "PEEROF"
                    ]
                  ],
                  "score": 0.7,
                  "type": "relationship_chain",
                  "source": "426"
                },
                "peer_relationship": {
                  "path": [
                    [
                      "426",
                      "427",
                      "PEEROF"
                    ]
                  ],
                  "score": 0.9,
                  "type": "peer_relationship",
                  "source": "426"
                }
              }
            },
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.521
              }
            }
          },
          "similarity": 1.521
        },
        {
          "doc_id": "257",
          "text": "CWE-257: Storing Passwords in a Recoverable Format",
          "score": 1.521,
          "metadata": {
            "doc_id": "257",
            "name": "Storing Passwords in a Recoverable Format",
            "type": "base",
            "original_content": "CWE-257: Storing Passwords in a Recoverable Format",
            "relationships": [
              {
                "source_id": "257",
                "target_id": "259",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "257",
                "target_id": "522",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "798",
                "target_id": "257",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "522",
                "target_id": "257",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "259",
                "target_id": "257",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.7,
              "peer_group": 0.9
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "peer_relationship"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "259",
                      "257",
                      "PEEROF"
                    ]
                  ],
                  "score": 0.7,
                  "type": "relationship_chain",
                  "source": "259"
                },
                "peer_relationship": {
                  "path": [
                    [
                      "259",
                      "257",
                      "PEEROF"
                    ]
                  ],
                  "score": 0.9,
                  "type": "peer_relationship",
                  "source": "259"
                }
              }
            },
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.521
              }
            }
          },
          "similarity": 1.521
        },
        {
          "doc_id": "456",
          "text": "CWE-456: Missing Initialization of a Variable",
          "score": 1.4169600000000002,
          "metadata": {
            "doc_id": "456",
            "name": "Missing Initialization of a Variable",
            "type": "variant",
            "original_content": "CWE-456: Missing Initialization of a Variable",
            "relationships": [
              {
                "source_id": "456",
                "target_id": "457",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "456",
                "target_id": "98",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "456",
                "target_id": "120",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "456",
                "target_id": "89",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "456",
                "target_id": "665",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1340"
                }
              },
              {
                "source_id": "456",
                "target_id": "665",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1305"
                }
              },
              {
                "source_id": "456",
                "target_id": "909",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "98",
                "target_id": "456",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "909",
                "target_id": "456",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "89",
                "target_id": "456",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "665",
                "target_id": "456",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1305"
                }
              },
              {
                "source_id": "457",
                "target_id": "456",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "454",
                "target_id": "456",
                "label": "CANALSOBE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "120",
                "target_id": "456",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.8,
              "sequence_path": 0.5760000000000002
            },
            "abstraction_factor": 1.2,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "vulnerability_sequence_forward"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "98",
                      "426",
                      "CANALSOBE"
                    ],
                    [
                      "98",
                      "456",
                      "CANFOLLOW"
                    ]
                  ],
                  "score": 0.8,
                  "type": "relationship_chain",
                  "source": "426"
                },
                "vulnerability_sequence_forward": {
                  "path": [
                    [
                      "78",
                      "184",
                      "CANFOLLOW"
                    ],
                    [
                      "184",
                      "98",
                      "CANPRECEDE"
                    ],
                    [
                      "98",
                      "456",
                      "CANFOLLOW"
                    ]
                  ],
                  "score": 0.5760000000000002,
                  "type": "vulnerability_sequence_forward",
                  "source": "78"
                }
              }
            },
            "position": "after",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.4169600000000002
              }
            }
          },
          "similarity": 1.4169600000000002
        },
        {
          "doc_id": "473",
          "text": "CWE-473: PHP External Variable Modification",
          "score": 1.4169600000000002,
          "metadata": {
            "doc_id": "473",
            "name": "PHP External Variable Modification",
            "type": "variant",
            "original_content": "CWE-473: PHP External Variable Modification",
            "relationships": [
              {
                "source_id": "473",
                "target_id": "98",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "473",
                "target_id": "471",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "98",
                "target_id": "473",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "616",
                "target_id": "473",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "471",
                "target_id": "473",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.8,
              "sequence_path": 0.5760000000000002
            },
            "abstraction_factor": 1.2,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "vulnerability_sequence_forward"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "98",
                      "426",
                      "CANALSOBE"
                    ],
                    [
                      "98",
                      "473",
                      "CANFOLLOW"
                    ]
                  ],
                  "score": 0.8,
                  "type": "relationship_chain",
                  "source": "426"
                },
                "vulnerability_sequence_forward": {
                  "path": [
                    [
                      "78",
                      "184",
                      "CANFOLLOW"
                    ],
                    [
                      "184",
                      "98",
                      "CANPRECEDE"
                    ],
                    [
                      "98",
                      "473",
                      "CANFOLLOW"
                    ]
                  ],
                  "score": 0.5760000000000002,
                  "type": "vulnerability_sequence_forward",
                  "source": "78"
                }
              }
            },
            "position": "after",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.4169600000000002
              }
            }
          },
          "similarity": 1.4169600000000002
        },
        {
          "doc_id": "138",
          "text": "CWE-138: Improper Neutralization of Special Elements",
          "score": 1.4080000000000001,
          "metadata": {
            "doc_id": "138",
            "name": "Improper Neutralization of Special Elements",
            "type": "class",
            "original_content": "CWE-138: Improper Neutralization of Special Elements",
            "relationships": [
              {
                "source_id": "138",
                "target_id": "790",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "138",
                "target_id": "464",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "138",
                "target_id": "164",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "138",
                "target_id": "162",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "138",
                "target_id": "160",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "138",
                "target_id": "159",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "138",
                "target_id": "158",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "138",
                "target_id": "157",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "138",
                "target_id": "156",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "138",
                "target_id": "155",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "138",
                "target_id": "154",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "138",
                "target_id": "153",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "138",
                "target_id": "152",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "138",
                "target_id": "151",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "138",
                "target_id": "150",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "138",
                "target_id": "149",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "138",
                "target_id": "148",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "138",
                "target_id": "147",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "138",
                "target_id": "140",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "138",
                "target_id": "707",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "790",
                "target_id": "138",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "707",
                "target_id": "138",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "464",
                "target_id": "138",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "164",
                "target_id": "138",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "162",
                "target_id": "138",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "160",
                "target_id": "138",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "159",
                "target_id": "138",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "158",
                "target_id": "138",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "157",
                "target_id": "138",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "156",
                "target_id": "138",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "155",
                "target_id": "138",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "154",
                "target_id": "138",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "153",
                "target_id": "138",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "152",
                "target_id": "138",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "151",
                "target_id": "138",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "150",
                "target_id": "138",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "149",
                "target_id": "138",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "148",
                "target_id": "138",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "147",
                "target_id": "138",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "140",
                "target_id": "138",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "explicit_mention": 1.0,
              "relationship_chain": 0.3,
              "abstraction_path": 0.7
            },
            "abstraction_factor": 0.8,
            "graph_path_info": {
              "path_types": [
                "relationship_chain"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "790",
                      "138",
                      "CHILDOF"
                    ]
                  ],
                  "score": 0.3,
                  "type": "relationship_chain",
                  "source": "790"
                }
              }
            },
            "is_explicit": true,
            "abstraction_level": "class",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Discouraged",
              "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
              "comments": "Examine children of this entry to see if there is a better fit",
              "reasons": [
                "Abstraction"
              ]
            },
            "score_info": {
              "retrievers": [
                "sparse",
                "graph"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "sparse": 91.22587651898233,
                "graph": 1.4080000000000001
              }
            }
          },
          "similarity": 1.4080000000000001
        },
        {
          "doc_id": "494",
          "text": "CWE-494: Download of Code Without Integrity Check",
          "score": 1.3676000000000001,
          "metadata": {
            "doc_id": "494",
            "name": "Download of Code Without Integrity Check",
            "type": "base",
            "original_content": "CWE-494: Download of Code Without Integrity Check",
            "relationships": [
              {
                "source_id": "494",
                "target_id": "79",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "494",
                "target_id": "669",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "494",
                "target_id": "669",
                "label": "CHILDOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "494",
                "target_id": "345",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "79",
                "target_id": "494",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "669",
                "target_id": "494",
                "label": "PARENTOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "345",
                "target_id": "494",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.6,
              "sequence_path": 0.6400000000000001
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "vulnerability_sequence_forward"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "77",
                      "74",
                      "CHILDOF"
                    ],
                    [
                      "74",
                      "79",
                      "PARENTOF"
                    ],
                    [
                      "79",
                      "494",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 0.6,
                  "type": "relationship_chain",
                  "source": "77"
                },
                "vulnerability_sequence_forward": {
                  "path": [
                    [
                      "78",
                      "184",
                      "CANFOLLOW"
                    ],
                    [
                      "184",
                      "79",
                      "CANPRECEDE"
                    ],
                    [
                      "79",
                      "494",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 0.6400000000000001,
                  "type": "vulnerability_sequence_forward",
                  "source": "78"
                }
              }
            },
            "position": "after",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.3676000000000001
              }
            }
          },
          "similarity": 1.3676000000000001
        },
        {
          "doc_id": "656",
          "text": "CWE-656: Reliance on Security Through Obscurity",
          "score": 1.3600000000000003,
          "metadata": {
            "doc_id": "656",
            "name": "Reliance on Security Through Obscurity",
            "type": "class",
            "original_content": "CWE-656: Reliance on Security Through Obscurity",
            "relationships": [
              {
                "source_id": "656",
                "target_id": "472",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "656",
                "target_id": "321",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "656",
                "target_id": "259",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "656",
                "target_id": "693",
                "label": "CHILDOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "656",
                "target_id": "657",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "693",
                "target_id": "656",
                "label": "PARENTOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "657",
                "target_id": "656",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "603",
                "target_id": "656",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "472",
                "target_id": "656",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "321",
                "target_id": "656",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "259",
                "target_id": "656",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 1.0,
              "sequence_path": 1.0
            },
            "abstraction_factor": 0.8,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "vulnerability_sequence_forward",
                "vulnerability_sequence_backward"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "259",
                      "656",
                      "CANFOLLOW"
                    ]
                  ],
                  "score": 1.0,
                  "type": "relationship_chain",
                  "source": "259"
                },
                "vulnerability_sequence_forward": {
                  "path": [
                    [
                      "259",
                      "656",
                      "CANFOLLOW"
                    ]
                  ],
                  "score": 0.9,
                  "type": "vulnerability_sequence_forward",
                  "source": "259"
                },
                "vulnerability_sequence_backward": {
                  "path": [
                    [
                      "656",
                      "259",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 1.0,
                  "type": "vulnerability_sequence_backward",
                  "source": "259"
                }
              }
            },
            "position": "before",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed-with-Review",
              "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
              "comments": "Examine children of this entry to see if there is a better fit",
              "reasons": [
                "Abstraction"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.3600000000000003
              }
            }
          },
          "similarity": 1.3600000000000003
        },
        {
          "doc_id": "183",
          "text": "CWE-183: Permissive List of Allowed Inputs",
          "score": 1.3010400000000002,
          "metadata": {
            "doc_id": "183",
            "name": "Permissive List of Allowed Inputs",
            "type": "base",
            "original_content": "CWE-183: Permissive List of Allowed Inputs",
            "relationships": [
              {
                "source_id": "183",
                "target_id": "942",
                "label": "PARENTOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "183",
                "target_id": "434",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "183",
                "target_id": "697",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "942",
                "target_id": "183",
                "label": "CHILDOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "697",
                "target_id": "183",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "627",
                "target_id": "183",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "625",
                "target_id": "183",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "434",
                "target_id": "183",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "186",
                "target_id": "183",
                "label": "CANALSOBE",
                "properties": {
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.6,
              "sequence_path": 0.5760000000000002
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "vulnerability_sequence_forward"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "78",
                      "184",
                      "CANFOLLOW"
                    ],
                    [
                      "184",
                      "434",
                      "CANPRECEDE"
                    ],
                    [
                      "434",
                      "183",
                      "CANFOLLOW"
                    ]
                  ],
                  "score": 0.6,
                  "type": "relationship_chain",
                  "source": "78"
                },
                "vulnerability_sequence_forward": {
                  "path": [
                    [
                      "78",
                      "184",
                      "CANFOLLOW"
                    ],
                    [
                      "184",
                      "434",
                      "CANPRECEDE"
                    ],
                    [
                      "434",
                      "183",
                      "CANFOLLOW"
                    ]
                  ],
                  "score": 0.5760000000000002,
                  "type": "vulnerability_sequence_forward",
                  "source": "78"
                }
              }
            },
            "position": "after",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.3010400000000002
              }
            }
          },
          "similarity": 1.3010400000000002
        },
        {
          "doc_id": "94",
          "text": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
          "score": 0.5641792579592897,
          "metadata": {
            "doc_id": "94",
            "name": "Improper Control of Generation of Code ('Code Injection')",
            "type": "Base",
            "extended_description": "\n\nWhen a product allows a user's input to contain code syntax, it might be possible for an attacker to craft the code in such a way that it will alter the intended control flow of the product. Such an alteration could lead to arbitrary code execution.\n\n\nInjection problems encompass a wide variety of issues -- all mitigated in very different ways. For this reason, the most effective way to discuss these weaknesses is to note the distinct features which classify them as injection weaknesses. The most important issue to note is that all injection problems share one thing in common -- i.e., they allow for the injection of control plane data into the user-controlled data plane. This means that the execution of the process may be altered by sending code in through legitimate data channels, using no other mechanism. While buffer overflows, and many other flaws, involve the use of some further issue to gain execution, injection problems need only for the data to be parsed. The most classic instantiations of this category of weakness are SQL injection and format string vulnerabilities.\n",
            "alternate_terms": [],
            "original_content": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
            "relationships": [
              {
                "source_id": "94",
                "target_id": "98",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "94",
                "target_id": "96",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "94",
                "target_id": "95",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "94",
                "target_id": "1336",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "94",
                "target_id": "913",
                "label": "CHILDOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "94",
                "target_id": "74",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "94",
                "target_id": "74",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "98",
                "target_id": "94",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "96",
                "target_id": "94",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "95",
                "target_id": "94",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "913",
                "target_id": "94",
                "label": "PARENTOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "74",
                "target_id": "94",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "1336",
                "target_id": "94",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "source": "graph",
            "sources": [
              "vector",
              "graph"
            ],
            "vector_score": 0.5641792579592897,
            "graph_score": 1.6016000000000004,
            "score_components": {
              "relationship_chain": 0.8,
              "sequence_path": 0.6400000000000001
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "vulnerability_sequence_forward"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "98",
                      "426",
                      "CANALSOBE"
                    ],
                    [
                      "98",
                      "94",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 0.8,
                  "type": "relationship_chain",
                  "source": "426"
                },
                "vulnerability_sequence_forward": {
                  "path": [
                    [
                      "78",
                      "184",
                      "CANFOLLOW"
                    ],
                    [
                      "184",
                      "98",
                      "CANPRECEDE"
                    ],
                    [
                      "98",
                      "94",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 0.6400000000000001,
                  "type": "vulnerability_sequence_forward",
                  "source": "78"
                }
              }
            },
            "position": "after",
            "mapping_notes": {
              "usage": "Allowed-with-Review",
              "rationale": "This entry is frequently misused for vulnerabilities with a technical impact of \"code execution,\" which does not by itself indicate a root cause weakness, since dozens of weaknesses can enable code execution.",
              "comments": "This weakness only applies when the product's functionality intentionally constructs all or part of a code segment. It could be that executing code could be the result of other weaknesses that do not involve the construction of code segments.",
              "reasons": [
                "Frequent Misuse",
                "Frequent Misinterpretation"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "graph"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "dense": 0.5022731050833147,
                "graph": 1.186631703183716
              }
            }
          },
          "similarity": 1.186631703183716
        }
      ],
      "result_sources": {
        "CWE-78": [
          "dense",
          "sparse",
          "graph"
        ],
        "CWE-77": [
          "dense",
          "sparse"
        ],
        "CWE-121": [
          "dense",
          "sparse"
        ],
        "CWE-790": [
          "dense",
          "sparse"
        ],
        "CWE-259": [
          "dense",
          "sparse"
        ],
        "CWE-912": [
          "dense"
        ],
        "CWE-306": [
          "dense"
        ],
        "CWE-1188": [
          "dense",
          "sparse"
        ],
        "CWE-134": [
          "dense"
        ],
        "CWE-288": [
          "dense"
        ],
        "CWE-94": [
          "dense",
          "graph"
        ],
        "CWE-20": [
          "dense"
        ],
        "CWE-401": [
          "dense",
          "sparse"
        ],
        "CWE-425": [
          "dense"
        ],
        "CWE-321": [
          "dense",
          "graph"
        ],
        "CWE-93": [
          "dense"
        ],
        "CWE-601": [
          "dense"
        ],
        "CWE-400": [
          "dense"
        ],
        "CWE-22": [
          "dense"
        ],
        "CWE-291": [
          "dense"
        ],
        "CWE-426": [
          "sparse",
          "graph"
        ],
        "CWE-138": [
          "sparse",
          "graph"
        ],
        "CWE-89": [
          "sparse"
        ],
        "CWE-116": [
          "sparse"
        ],
        "CWE-74": [
          "sparse"
        ],
        "CWE-620": [
          "sparse"
        ],
        "CWE-1284": [
          "sparse"
        ],
        "CWE-98": [
          "graph"
        ],
        "CWE-88": [
          "graph"
        ],
        "CWE-79": [
          "graph"
        ],
        "CWE-434": [
          "graph"
        ],
        "CWE-472": [
          "graph"
        ],
        "CWE-184": [
          "graph"
        ],
        "CWE-73": [
          "graph"
        ],
        "CWE-428": [
          "graph"
        ],
        "CWE-427": [
          "graph"
        ],
        "CWE-257": [
          "graph"
        ],
        "CWE-456": [
          "graph"
        ],
        "CWE-473": [
          "graph"
        ],
        "CWE-494": [
          "graph"
        ],
        "CWE-656": [
          "graph"
        ],
        "CWE-183": [
          "graph"
        ]
      },
      "result_scores": {
        "CWE-78": {
          "dense": 0.6110023594431819,
          "sparse": 700.0,
          "graph": 1.7428713778815073
        },
        "CWE-77": {
          "dense": 0.5919752449753382,
          "sparse": 1000.0
        },
        "CWE-121": {
          "dense": 0.5552101544549111,
          "sparse": 109.23438345945085
        },
        "CWE-790": {
          "dense": 0.5421319818299566,
          "sparse": 85.21118989842024
        },
        "CWE-259": {
          "dense": 0.5416348097537143,
          "sparse": 87.74115526296906
        },
        "CWE-912": {
          "dense": 0.533127624833597
        },
        "CWE-306": {
          "dense": 0.511780591620396
        },
        "CWE-1188": {
          "dense": 0.5102088704911982,
          "sparse": 26.02621927023227
        },
        "CWE-134": {
          "dense": 0.508809193864759
        },
        "CWE-288": {
          "dense": 0.5073632765334025
        },
        "CWE-94": {
          "dense": 0.5022731050833147,
          "graph": 1.186631703183716
        },
        "CWE-20": {
          "dense": 0.4868820517493534
        },
        "CWE-401": {
          "dense": 0.4839039932245426,
          "sparse": 25.34208451259859
        },
        "CWE-425": {
          "dense": 0.4828631702038313
        },
        "CWE-321": {
          "dense": 0.4807996292781689,
          "graph": 1.5276001298578379
        },
        "CWE-93": {
          "dense": 0.47708765875651704
        },
        "CWE-601": {
          "dense": 0.47546222778872377
        },
        "CWE-400": {
          "dense": 0.47374860592759593
        },
        "CWE-22": {
          "dense": 0.4729037946031221
        },
        "CWE-291": {
          "dense": 0.4712697584344623
        },
        "CWE-426": {
          "sparse": 94.56104726448638,
          "graph": 2.6104000000000003
        },
        "CWE-138": {
          "sparse": 91.22587651898233,
          "graph": 1.4080000000000001
        },
        "CWE-89": {
          "sparse": 91.01956869206971
        },
        "CWE-116": {
          "sparse": 86.1787009146509
        },
        "CWE-74": {
          "sparse": 85.84432739015202
        },
        "CWE-620": {
          "sparse": 26.325134034464202
        },
        "CWE-1284": {
          "sparse": 25.51944036111138
        },
        "CWE-98": {
          "graph": 2.2800000000000002
        },
        "CWE-88": {
          "graph": 2.1762
        },
        "CWE-79": {
          "graph": 1.7680000000000005
        },
        "CWE-434": {
          "graph": 1.7680000000000005
        },
        "CWE-472": {
          "graph": 1.7680000000000005
        },
        "CWE-184": {
          "graph": 1.5429469149558803
        },
        "CWE-73": {
          "graph": 1.5350400000000004
        },
        "CWE-428": {
          "graph": 1.521
        },
        "CWE-427": {
          "graph": 1.521
        },
        "CWE-257": {
          "graph": 1.521
        },
        "CWE-456": {
          "graph": 1.4169600000000002
        },
        "CWE-473": {
          "graph": 1.4169600000000002
        },
        "CWE-494": {
          "graph": 1.3676000000000001
        },
        "CWE-656": {
          "graph": 1.3600000000000003
        },
        "CWE-183": {
          "graph": 1.3010400000000002
        }
      },
      "retriever_results": {
        "graph": [
          {
            "doc_id": "426",
            "text": "CWE-426: Untrusted Search Path",
            "score": 2.6104000000000003,
            "metadata": {
              "doc_id": "426",
              "name": "Untrusted Search Path",
              "type": "base",
              "original_content": "CWE-426: Untrusted Search Path",
              "relationships": [
                {
                  "source_id": "426",
                  "target_id": "428",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "426",
                  "target_id": "427",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "426",
                  "target_id": "673",
                  "label": "CHILDOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "426",
                  "target_id": "668",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "426",
                  "target_id": "642",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "98",
                  "target_id": "426",
                  "label": "CANALSOBE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "673",
                  "target_id": "426",
                  "label": "PARENTOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "668",
                  "target_id": "426",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "642",
                  "target_id": "426",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "explicit_mention": 1.0,
                "relationship_chain": 0.42,
                "abstraction_path": 0.9
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "78",
                        "184",
                        "CANFOLLOW"
                      ],
                      [
                        "184",
                        "98",
                        "CANPRECEDE"
                      ],
                      [
                        "98",
                        "426",
                        "CANALSOBE"
                      ]
                    ],
                    "score": 0.42,
                    "type": "relationship_chain",
                    "source": "78"
                  }
                }
              },
              "is_explicit": true,
              "abstraction_level": "base",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "sparse",
                  "graph"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "sparse": 94.56104726448638,
                  "graph": 2.6104000000000003
                }
              }
            },
            "similarity": 2.6104000000000003
          },
          {
            "doc_id": "98",
            "text": "CWE-98: Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')",
            "score": 2.2800000000000002,
            "metadata": {
              "doc_id": "98",
              "name": "Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')",
              "type": "variant",
              "original_content": "CWE-98: Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')",
              "relationships": [
                {
                  "source_id": "98",
                  "target_id": "73",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "98",
                  "target_id": "473",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "98",
                  "target_id": "456",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "98",
                  "target_id": "425",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "98",
                  "target_id": "184",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "98",
                  "target_id": "426",
                  "label": "CANALSOBE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "98",
                  "target_id": "94",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "98",
                  "target_id": "829",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "98",
                  "target_id": "706",
                  "label": "CHILDOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "94",
                  "target_id": "98",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "829",
                  "target_id": "98",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "73",
                  "target_id": "98",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "706",
                  "target_id": "98",
                  "label": "PARENTOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "473",
                  "target_id": "98",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "456",
                  "target_id": "98",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "425",
                  "target_id": "98",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "184",
                  "target_id": "98",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.8,
                "sequence_path": 0.8,
                "peer_group": 0.9
              },
              "abstraction_factor": 1.2,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "vulnerability_sequence_forward",
                  "peer_relationship"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "78",
                        "184",
                        "CANFOLLOW"
                      ],
                      [
                        "184",
                        "98",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 0.8,
                    "type": "relationship_chain",
                    "source": "78"
                  },
                  "vulnerability_sequence_forward": {
                    "path": [
                      [
                        "78",
                        "184",
                        "CANFOLLOW"
                      ],
                      [
                        "184",
                        "98",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 0.8,
                    "type": "vulnerability_sequence_forward",
                    "source": "78"
                  },
                  "peer_relationship": {
                    "path": [
                      [
                        "98",
                        "426",
                        "CANALSOBE"
                      ]
                    ],
                    "score": 0.9,
                    "type": "peer_relationship",
                    "source": "426"
                  }
                }
              },
              "position": "after",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 2.2800000000000002
                }
              }
            },
            "similarity": 2.2800000000000002
          },
          {
            "doc_id": "88",
            "text": "CWE-88: Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
            "score": 2.1762,
            "metadata": {
              "doc_id": "88",
              "name": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
              "type": "base",
              "original_content": "CWE-88: Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
              "relationships": [
                {
                  "source_id": "88",
                  "target_id": "77",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1340"
                  }
                },
                {
                  "source_id": "88",
                  "target_id": "77",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1305"
                  }
                },
                {
                  "source_id": "88",
                  "target_id": "74",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "88",
                  "target_id": "77",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "78",
                  "target_id": "88",
                  "label": "CANALSOBE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "77",
                  "target_id": "88",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "74",
                  "target_id": "88",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.7,
                "abstraction_path": 0.7200000000000001,
                "peer_group": 0.9
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "abstraction_path_down",
                  "peer_relationship"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "78",
                        "88",
                        "CANALSOBE"
                      ]
                    ],
                    "score": 0.7,
                    "type": "relationship_chain",
                    "source": "78"
                  },
                  "abstraction_path_down": {
                    "path": [
                      [
                        "77",
                        "88",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.7200000000000001,
                    "type": "abstraction_path_down",
                    "source": "77"
                  },
                  "peer_relationship": {
                    "path": [
                      [
                        "78",
                        "88",
                        "CANALSOBE"
                      ]
                    ],
                    "score": 0.9,
                    "type": "peer_relationship",
                    "source": "78"
                  }
                }
              },
              "abstraction_level": "base",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 2.1762
                }
              }
            },
            "similarity": 2.1762
          },
          {
            "doc_id": "79",
            "text": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
            "score": 1.7680000000000005,
            "metadata": {
              "doc_id": "79",
              "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
              "type": "base",
              "original_content": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
              "relationships": [
                {
                  "source_id": "79",
                  "target_id": "87",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "79",
                  "target_id": "86",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "79",
                  "target_id": "85",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "79",
                  "target_id": "84",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "79",
                  "target_id": "83",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "79",
                  "target_id": "81",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "79",
                  "target_id": "80",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "79",
                  "target_id": "184",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "79",
                  "target_id": "113",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "79",
                  "target_id": "352",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "79",
                  "target_id": "494",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "79",
                  "target_id": "74",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "79",
                  "target_id": "74",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "87",
                  "target_id": "79",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "86",
                  "target_id": "79",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "85",
                  "target_id": "79",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "84",
                  "target_id": "79",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "83",
                  "target_id": "79",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "81",
                  "target_id": "79",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "80",
                  "target_id": "79",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "74",
                  "target_id": "79",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "494",
                  "target_id": "79",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "184",
                  "target_id": "79",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "113",
                  "target_id": "79",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.8,
                "sequence_path": 0.8
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "vulnerability_sequence_forward"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "78",
                        "184",
                        "CANFOLLOW"
                      ],
                      [
                        "184",
                        "79",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 0.8,
                    "type": "relationship_chain",
                    "source": "78"
                  },
                  "vulnerability_sequence_forward": {
                    "path": [
                      [
                        "78",
                        "184",
                        "CANFOLLOW"
                      ],
                      [
                        "184",
                        "79",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 0.8,
                    "type": "vulnerability_sequence_forward",
                    "source": "78"
                  }
                }
              },
              "position": "after",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.7680000000000005
                }
              }
            },
            "similarity": 1.7680000000000005
          },
          {
            "doc_id": "434",
            "text": "CWE-434: Unrestricted Upload of File with Dangerous Type",
            "score": 1.7680000000000005,
            "metadata": {
              "doc_id": "434",
              "name": "Unrestricted Upload of File with Dangerous Type",
              "type": "base",
              "original_content": "CWE-434: Unrestricted Upload of File with Dangerous Type",
              "relationships": [
                {
                  "source_id": "434",
                  "target_id": "73",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "434",
                  "target_id": "184",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "434",
                  "target_id": "183",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "434",
                  "target_id": "430",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "434",
                  "target_id": "436",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "434",
                  "target_id": "351",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "434",
                  "target_id": "669",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "434",
                  "target_id": "669",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "73",
                  "target_id": "434",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "669",
                  "target_id": "434",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "430",
                  "target_id": "434",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "184",
                  "target_id": "434",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "183",
                  "target_id": "434",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.8,
                "sequence_path": 0.8
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "vulnerability_sequence_forward"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "78",
                        "184",
                        "CANFOLLOW"
                      ],
                      [
                        "184",
                        "434",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 0.8,
                    "type": "relationship_chain",
                    "source": "78"
                  },
                  "vulnerability_sequence_forward": {
                    "path": [
                      [
                        "78",
                        "184",
                        "CANFOLLOW"
                      ],
                      [
                        "184",
                        "434",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 0.8,
                    "type": "vulnerability_sequence_forward",
                    "source": "78"
                  }
                }
              },
              "position": "after",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.7680000000000005
                }
              }
            },
            "similarity": 1.7680000000000005
          },
          {
            "doc_id": "472",
            "text": "CWE-472: External Control of Assumed-Immutable Web Parameter",
            "score": 1.7680000000000005,
            "metadata": {
              "doc_id": "472",
              "name": "External Control of Assumed-Immutable Web Parameter",
              "type": "base",
              "original_content": "CWE-472: External Control of Assumed-Immutable Web Parameter",
              "relationships": [
                {
                  "source_id": "472",
                  "target_id": "656",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "472",
                  "target_id": "384",
                  "label": "REQUIREDBY",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "472",
                  "target_id": "471",
                  "label": "CHILDOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "472",
                  "target_id": "642",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "656",
                  "target_id": "472",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "642",
                  "target_id": "472",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "471",
                  "target_id": "472",
                  "label": "PARENTOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "384",
                  "target_id": "472",
                  "label": "REQUIRES",
                  "properties": {
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.8,
                "sequence_path": 0.8
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "vulnerability_sequence_forward"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "259",
                        "656",
                        "CANFOLLOW"
                      ],
                      [
                        "656",
                        "472",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 0.8,
                    "type": "relationship_chain",
                    "source": "259"
                  },
                  "vulnerability_sequence_forward": {
                    "path": [
                      [
                        "259",
                        "656",
                        "CANFOLLOW"
                      ],
                      [
                        "656",
                        "472",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 0.8,
                    "type": "vulnerability_sequence_forward",
                    "source": "259"
                  }
                }
              },
              "position": "after",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.7680000000000005
                }
              }
            },
            "similarity": 1.7680000000000005
          },
          {
            "doc_id": "78",
            "text": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
            "score": 0.6521784447037687,
            "metadata": {
              "doc_id": "78",
              "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
              "type": "Base",
              "extended_description": "\n\nThis weakness can lead to a vulnerability in environments in which the attacker does not have direct access to the operating system, such as in web applications. Alternately, if the weakness occurs in a privileged program, it could allow the attacker to specify commands that normally would not be accessible, or to call alternate commands with privileges that the attacker does not have. The problem is exacerbated if the compromised process does not follow the principle of least privilege, because the attacker-controlled commands may run with special system privileges that increases the amount of damage.\n\n\nThere are at least two subtypes of OS command injection:\n\n\n  - The application intends to execute a single, fixed program that is under its own control. It intends to use externally-supplied inputs as arguments to that program. For example, the program might use system(\"nslookup [HOSTNAME]\") to run nslookup and allow the user to supply a HOSTNAME, which is used as an argument. Attackers cannot prevent nslookup from executing. However, if the program does not remove command separators from the HOSTNAME argument, attackers could place the separators into the arguments, which allows them to execute their own program after nslookup has finished executing.\n\n  - The application accepts an input that it uses to fully select which program to run, as well as which commands to use. The application simply redirects this entire command to the operating system. For example, the program might use \"exec([COMMAND])\" to execute the [COMMAND] that was supplied by the user. If the COMMAND is under attacker control, then the attacker can execute arbitrary commands or programs. If the command is being executed using functions like exec() and CreateProcess(), the attacker might not be able to combine multiple commands together in the same line.\n\nFrom a weakness standpoint, these variants represent distinct programmer errors. In the first variant, the programmer clearly intends that input from untrusted parties will be part of the arguments in the command to be executed. In the second variant, the programmer does not intend for the command to be accessible to any untrusted party, but the programmer probably has not accounted for alternate ways in which malicious attackers can provide input.",
              "alternate_terms": [
                "Shell injection",
                "Shell metacharacters",
                "OS Command Injection"
              ],
              "original_content": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
              "relationships": [
                {
                  "source_id": "78",
                  "target_id": "184",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "78",
                  "target_id": "88",
                  "label": "CANALSOBE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "78",
                  "target_id": "77",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1340"
                  }
                },
                {
                  "source_id": "78",
                  "target_id": "77",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1305"
                  }
                },
                {
                  "source_id": "78",
                  "target_id": "74",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "78",
                  "target_id": "77",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "77",
                  "target_id": "78",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "74",
                  "target_id": "78",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "184",
                  "target_id": "78",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                }
              ],
              "source": "graph",
              "sources": [
                "vector",
                "graph"
              ],
              "vector_score": 0.6521784447037687,
              "graph_score": 2.4699999999999998,
              "score_components": {
                "relationship_chain": 0.3,
                "explicit_mention": 1.0,
                "abstraction_path": 0.9
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "77",
                        "78",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.3,
                    "type": "relationship_chain",
                    "source": "77"
                  }
                }
              },
              "is_explicit": true,
              "abstraction_level": "base",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse",
                  "graph"
                ],
                "retriever_count": 3,
                "normalized_scores": {
                  "dense": 0.6110023594431819,
                  "sparse": 700.0,
                  "graph": 1.7428713778815073
                }
              }
            },
            "similarity": 1.7428713778815073
          },
          {
            "doc_id": "184",
            "text": "The product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.",
            "score": 0.5423672873897002,
            "metadata": {
              "doc_id": "184",
              "name": "Incomplete List of Disallowed Inputs",
              "type": "Base",
              "extended_description": null,
              "alternate_terms": [
                "Denylist / Deny List",
                "Blocklist / Block List",
                "Blacklist / Black List"
              ],
              "original_content": "The product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.",
              "relationships": [
                {
                  "source_id": "184",
                  "target_id": "692",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "184",
                  "target_id": "98",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "184",
                  "target_id": "434",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "184",
                  "target_id": "78",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "184",
                  "target_id": "79",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "184",
                  "target_id": "1023",
                  "label": "CHILDOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "184",
                  "target_id": "693",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "98",
                  "target_id": "184",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "86",
                  "target_id": "184",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "79",
                  "target_id": "184",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "78",
                  "target_id": "184",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "693",
                  "target_id": "184",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "692",
                  "target_id": "184",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "692",
                  "target_id": "184",
                  "label": "STARTSWITH",
                  "properties": {
                    "view_id": "709"
                  }
                },
                {
                  "source_id": "625",
                  "target_id": "184",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "434",
                  "target_id": "184",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "186",
                  "target_id": "184",
                  "label": "CANALSOBE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "1023",
                  "target_id": "184",
                  "label": "PARENTOF",
                  "properties": {
                    "view_id": "1000"
                  }
                }
              ],
              "source": "graph",
              "sources": [
                "vector",
                "graph"
              ],
              "vector_score": 0.5423672873897002,
              "graph_score": 2.2100000000000004,
              "score_components": {
                "relationship_chain": 1.0,
                "sequence_path": 1.0
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "vulnerability_sequence_forward",
                  "vulnerability_sequence_backward"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "78",
                        "184",
                        "CANFOLLOW"
                      ]
                    ],
                    "score": 1.0,
                    "type": "relationship_chain",
                    "source": "78"
                  },
                  "vulnerability_sequence_forward": {
                    "path": [
                      [
                        "78",
                        "184",
                        "CANFOLLOW"
                      ]
                    ],
                    "score": 0.9,
                    "type": "vulnerability_sequence_forward",
                    "source": "78"
                  },
                  "vulnerability_sequence_backward": {
                    "path": [
                      [
                        "184",
                        "78",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 1.0,
                    "type": "vulnerability_sequence_backward",
                    "source": "78"
                  }
                }
              },
              "position": "before",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.5429469149558803
                }
              }
            },
            "similarity": 1.5429469149558803
          },
          {
            "doc_id": "73",
            "text": "CWE-73: External Control of File Name or Path",
            "score": 1.5350400000000004,
            "metadata": {
              "doc_id": "73",
              "name": "External Control of File Name or Path",
              "type": "base",
              "original_content": "CWE-73: External Control of File Name or Path",
              "relationships": [
                {
                  "source_id": "73",
                  "target_id": "114",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "73",
                  "target_id": "59",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "73",
                  "target_id": "434",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "73",
                  "target_id": "98",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "73",
                  "target_id": "41",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "73",
                  "target_id": "22",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "73",
                  "target_id": "20",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "700"
                  }
                },
                {
                  "source_id": "73",
                  "target_id": "610",
                  "label": "CHILDOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "73",
                  "target_id": "642",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "99",
                  "target_id": "73",
                  "label": "CANALSOBE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "98",
                  "target_id": "73",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "642",
                  "target_id": "73",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "610",
                  "target_id": "73",
                  "label": "PARENTOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "59",
                  "target_id": "73",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "434",
                  "target_id": "73",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "41",
                  "target_id": "73",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "22",
                  "target_id": "73",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "20",
                  "target_id": "73",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "700"
                  }
                },
                {
                  "source_id": "114",
                  "target_id": "73",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.8,
                "sequence_path": 0.5760000000000002
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "vulnerability_sequence_forward"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "98",
                        "426",
                        "CANALSOBE"
                      ],
                      [
                        "98",
                        "73",
                        "CANFOLLOW"
                      ]
                    ],
                    "score": 0.8,
                    "type": "relationship_chain",
                    "source": "426"
                  },
                  "vulnerability_sequence_forward": {
                    "path": [
                      [
                        "78",
                        "184",
                        "CANFOLLOW"
                      ],
                      [
                        "184",
                        "98",
                        "CANPRECEDE"
                      ],
                      [
                        "98",
                        "73",
                        "CANFOLLOW"
                      ]
                    ],
                    "score": 0.5760000000000002,
                    "type": "vulnerability_sequence_forward",
                    "source": "78"
                  }
                }
              },
              "position": "after",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.5350400000000004
                }
              }
            },
            "similarity": 1.5350400000000004
          },
          {
            "doc_id": "321",
            "text": "The use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered.",
            "score": 0.5610003246445943,
            "metadata": {
              "doc_id": "321",
              "name": "Use of Hard-coded Cryptographic Key",
              "type": "Variant",
              "extended_description": null,
              "alternate_terms": [],
              "original_content": "The use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered.",
              "relationships": [
                {
                  "source_id": "321",
                  "target_id": "656",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "321",
                  "target_id": "798",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1340"
                  }
                },
                {
                  "source_id": "321",
                  "target_id": "798",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1305"
                  }
                },
                {
                  "source_id": "321",
                  "target_id": "798",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "798",
                  "target_id": "321",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "656",
                  "target_id": "321",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "259",
                  "target_id": "321",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "1291",
                  "target_id": "321",
                  "label": "PEEROF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "source": "graph",
              "sources": [
                "vector",
                "graph"
              ],
              "vector_score": 0.5610003246445943,
              "graph_score": 2.172,
              "score_components": {
                "relationship_chain": 0.7,
                "sequence_path": 0.8,
                "peer_group": 0.9
              },
              "abstraction_factor": 1.2,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "vulnerability_sequence_forward",
                  "peer_relationship"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "259",
                        "321",
                        "PEEROF"
                      ]
                    ],
                    "score": 0.7,
                    "type": "relationship_chain",
                    "source": "259"
                  },
                  "vulnerability_sequence_forward": {
                    "path": [
                      [
                        "259",
                        "656",
                        "CANFOLLOW"
                      ],
                      [
                        "656",
                        "321",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 0.8,
                    "type": "vulnerability_sequence_forward",
                    "source": "259"
                  },
                  "peer_relationship": {
                    "path": [
                      [
                        "259",
                        "321",
                        "PEEROF"
                      ]
                    ],
                    "score": 0.9,
                    "type": "peer_relationship",
                    "source": "259"
                  }
                }
              },
              "position": "after",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "graph"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "dense": 0.4807996292781689,
                  "graph": 1.5276001298578379
                }
              }
            },
            "similarity": 1.5276001298578379
          },
          {
            "doc_id": "428",
            "text": "CWE-428: Unquoted Search Path or Element",
            "score": 1.521,
            "metadata": {
              "doc_id": "428",
              "name": "Unquoted Search Path or Element",
              "type": "base",
              "original_content": "CWE-428: Unquoted Search Path or Element",
              "relationships": [
                {
                  "source_id": "428",
                  "target_id": "668",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "428",
                  "target_id": "668",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "668",
                  "target_id": "428",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "426",
                  "target_id": "428",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.7,
                "peer_group": 0.9
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "peer_relationship"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "426",
                        "428",
                        "PEEROF"
                      ]
                    ],
                    "score": 0.7,
                    "type": "relationship_chain",
                    "source": "426"
                  },
                  "peer_relationship": {
                    "path": [
                      [
                        "426",
                        "428",
                        "PEEROF"
                      ]
                    ],
                    "score": 0.9,
                    "type": "peer_relationship",
                    "source": "426"
                  }
                }
              },
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.521
                }
              }
            },
            "similarity": 1.521
          },
          {
            "doc_id": "427",
            "text": "CWE-427: Uncontrolled Search Path Element",
            "score": 1.521,
            "metadata": {
              "doc_id": "427",
              "name": "Uncontrolled Search Path Element",
              "type": "base",
              "original_content": "CWE-427: Uncontrolled Search Path Element",
              "relationships": [
                {
                  "source_id": "427",
                  "target_id": "668",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "427",
                  "target_id": "668",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "668",
                  "target_id": "427",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "426",
                  "target_id": "427",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.7,
                "peer_group": 0.9
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "peer_relationship"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "426",
                        "427",
                        "PEEROF"
                      ]
                    ],
                    "score": 0.7,
                    "type": "relationship_chain",
                    "source": "426"
                  },
                  "peer_relationship": {
                    "path": [
                      [
                        "426",
                        "427",
                        "PEEROF"
                      ]
                    ],
                    "score": 0.9,
                    "type": "peer_relationship",
                    "source": "426"
                  }
                }
              },
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.521
                }
              }
            },
            "similarity": 1.521
          },
          {
            "doc_id": "257",
            "text": "CWE-257: Storing Passwords in a Recoverable Format",
            "score": 1.521,
            "metadata": {
              "doc_id": "257",
              "name": "Storing Passwords in a Recoverable Format",
              "type": "base",
              "original_content": "CWE-257: Storing Passwords in a Recoverable Format",
              "relationships": [
                {
                  "source_id": "257",
                  "target_id": "259",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "257",
                  "target_id": "522",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "798",
                  "target_id": "257",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "522",
                  "target_id": "257",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "259",
                  "target_id": "257",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.7,
                "peer_group": 0.9
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "peer_relationship"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "259",
                        "257",
                        "PEEROF"
                      ]
                    ],
                    "score": 0.7,
                    "type": "relationship_chain",
                    "source": "259"
                  },
                  "peer_relationship": {
                    "path": [
                      [
                        "259",
                        "257",
                        "PEEROF"
                      ]
                    ],
                    "score": 0.9,
                    "type": "peer_relationship",
                    "source": "259"
                  }
                }
              },
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.521
                }
              }
            },
            "similarity": 1.521
          },
          {
            "doc_id": "456",
            "text": "CWE-456: Missing Initialization of a Variable",
            "score": 1.4169600000000002,
            "metadata": {
              "doc_id": "456",
              "name": "Missing Initialization of a Variable",
              "type": "variant",
              "original_content": "CWE-456: Missing Initialization of a Variable",
              "relationships": [
                {
                  "source_id": "456",
                  "target_id": "457",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "456",
                  "target_id": "98",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "456",
                  "target_id": "120",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "456",
                  "target_id": "89",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "456",
                  "target_id": "665",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1340"
                  }
                },
                {
                  "source_id": "456",
                  "target_id": "665",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1305"
                  }
                },
                {
                  "source_id": "456",
                  "target_id": "909",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "98",
                  "target_id": "456",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "909",
                  "target_id": "456",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "89",
                  "target_id": "456",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "665",
                  "target_id": "456",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1305"
                  }
                },
                {
                  "source_id": "457",
                  "target_id": "456",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "454",
                  "target_id": "456",
                  "label": "CANALSOBE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "120",
                  "target_id": "456",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.8,
                "sequence_path": 0.5760000000000002
              },
              "abstraction_factor": 1.2,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "vulnerability_sequence_forward"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "98",
                        "426",
                        "CANALSOBE"
                      ],
                      [
                        "98",
                        "456",
                        "CANFOLLOW"
                      ]
                    ],
                    "score": 0.8,
                    "type": "relationship_chain",
                    "source": "426"
                  },
                  "vulnerability_sequence_forward": {
                    "path": [
                      [
                        "78",
                        "184",
                        "CANFOLLOW"
                      ],
                      [
                        "184",
                        "98",
                        "CANPRECEDE"
                      ],
                      [
                        "98",
                        "456",
                        "CANFOLLOW"
                      ]
                    ],
                    "score": 0.5760000000000002,
                    "type": "vulnerability_sequence_forward",
                    "source": "78"
                  }
                }
              },
              "position": "after",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.4169600000000002
                }
              }
            },
            "similarity": 1.4169600000000002
          },
          {
            "doc_id": "473",
            "text": "CWE-473: PHP External Variable Modification",
            "score": 1.4169600000000002,
            "metadata": {
              "doc_id": "473",
              "name": "PHP External Variable Modification",
              "type": "variant",
              "original_content": "CWE-473: PHP External Variable Modification",
              "relationships": [
                {
                  "source_id": "473",
                  "target_id": "98",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "473",
                  "target_id": "471",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "98",
                  "target_id": "473",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "616",
                  "target_id": "473",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "471",
                  "target_id": "473",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.8,
                "sequence_path": 0.5760000000000002
              },
              "abstraction_factor": 1.2,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "vulnerability_sequence_forward"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "98",
                        "426",
                        "CANALSOBE"
                      ],
                      [
                        "98",
                        "473",
                        "CANFOLLOW"
                      ]
                    ],
                    "score": 0.8,
                    "type": "relationship_chain",
                    "source": "426"
                  },
                  "vulnerability_sequence_forward": {
                    "path": [
                      [
                        "78",
                        "184",
                        "CANFOLLOW"
                      ],
                      [
                        "184",
                        "98",
                        "CANPRECEDE"
                      ],
                      [
                        "98",
                        "473",
                        "CANFOLLOW"
                      ]
                    ],
                    "score": 0.5760000000000002,
                    "type": "vulnerability_sequence_forward",
                    "source": "78"
                  }
                }
              },
              "position": "after",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.4169600000000002
                }
              }
            },
            "similarity": 1.4169600000000002
          },
          {
            "doc_id": "138",
            "text": "CWE-138: Improper Neutralization of Special Elements",
            "score": 1.4080000000000001,
            "metadata": {
              "doc_id": "138",
              "name": "Improper Neutralization of Special Elements",
              "type": "class",
              "original_content": "CWE-138: Improper Neutralization of Special Elements",
              "relationships": [
                {
                  "source_id": "138",
                  "target_id": "790",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "138",
                  "target_id": "464",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "138",
                  "target_id": "164",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "138",
                  "target_id": "162",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "138",
                  "target_id": "160",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "138",
                  "target_id": "159",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "138",
                  "target_id": "158",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "138",
                  "target_id": "157",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "138",
                  "target_id": "156",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "138",
                  "target_id": "155",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "138",
                  "target_id": "154",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "138",
                  "target_id": "153",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "138",
                  "target_id": "152",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "138",
                  "target_id": "151",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "138",
                  "target_id": "150",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "138",
                  "target_id": "149",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "138",
                  "target_id": "148",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "138",
                  "target_id": "147",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "138",
                  "target_id": "140",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "138",
                  "target_id": "707",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "790",
                  "target_id": "138",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "707",
                  "target_id": "138",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "464",
                  "target_id": "138",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "164",
                  "target_id": "138",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "162",
                  "target_id": "138",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "160",
                  "target_id": "138",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "159",
                  "target_id": "138",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "158",
                  "target_id": "138",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "157",
                  "target_id": "138",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "156",
                  "target_id": "138",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "155",
                  "target_id": "138",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "154",
                  "target_id": "138",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "153",
                  "target_id": "138",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "152",
                  "target_id": "138",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "151",
                  "target_id": "138",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "150",
                  "target_id": "138",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "149",
                  "target_id": "138",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "148",
                  "target_id": "138",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "147",
                  "target_id": "138",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "140",
                  "target_id": "138",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "explicit_mention": 1.0,
                "relationship_chain": 0.3,
                "abstraction_path": 0.7
              },
              "abstraction_factor": 0.8,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "790",
                        "138",
                        "CHILDOF"
                      ]
                    ],
                    "score": 0.3,
                    "type": "relationship_chain",
                    "source": "790"
                  }
                }
              },
              "is_explicit": true,
              "abstraction_level": "class",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_info": {
                "retrievers": [
                  "sparse",
                  "graph"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "sparse": 91.22587651898233,
                  "graph": 1.4080000000000001
                }
              }
            },
            "similarity": 1.4080000000000001
          },
          {
            "doc_id": "494",
            "text": "CWE-494: Download of Code Without Integrity Check",
            "score": 1.3676000000000001,
            "metadata": {
              "doc_id": "494",
              "name": "Download of Code Without Integrity Check",
              "type": "base",
              "original_content": "CWE-494: Download of Code Without Integrity Check",
              "relationships": [
                {
                  "source_id": "494",
                  "target_id": "79",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "494",
                  "target_id": "669",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "494",
                  "target_id": "669",
                  "label": "CHILDOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "494",
                  "target_id": "345",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "79",
                  "target_id": "494",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "669",
                  "target_id": "494",
                  "label": "PARENTOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "345",
                  "target_id": "494",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.6,
                "sequence_path": 0.6400000000000001
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "vulnerability_sequence_forward"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "77",
                        "74",
                        "CHILDOF"
                      ],
                      [
                        "74",
                        "79",
                        "PARENTOF"
                      ],
                      [
                        "79",
                        "494",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 0.6,
                    "type": "relationship_chain",
                    "source": "77"
                  },
                  "vulnerability_sequence_forward": {
                    "path": [
                      [
                        "78",
                        "184",
                        "CANFOLLOW"
                      ],
                      [
                        "184",
                        "79",
                        "CANPRECEDE"
                      ],
                      [
                        "79",
                        "494",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 0.6400000000000001,
                    "type": "vulnerability_sequence_forward",
                    "source": "78"
                  }
                }
              },
              "position": "after",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.3676000000000001
                }
              }
            },
            "similarity": 1.3676000000000001
          },
          {
            "doc_id": "656",
            "text": "CWE-656: Reliance on Security Through Obscurity",
            "score": 1.3600000000000003,
            "metadata": {
              "doc_id": "656",
              "name": "Reliance on Security Through Obscurity",
              "type": "class",
              "original_content": "CWE-656: Reliance on Security Through Obscurity",
              "relationships": [
                {
                  "source_id": "656",
                  "target_id": "472",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "656",
                  "target_id": "321",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "656",
                  "target_id": "259",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "656",
                  "target_id": "693",
                  "label": "CHILDOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "656",
                  "target_id": "657",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "693",
                  "target_id": "656",
                  "label": "PARENTOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "657",
                  "target_id": "656",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "603",
                  "target_id": "656",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "472",
                  "target_id": "656",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "321",
                  "target_id": "656",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "259",
                  "target_id": "656",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 1.0,
                "sequence_path": 1.0
              },
              "abstraction_factor": 0.8,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "vulnerability_sequence_forward",
                  "vulnerability_sequence_backward"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "259",
                        "656",
                        "CANFOLLOW"
                      ]
                    ],
                    "score": 1.0,
                    "type": "relationship_chain",
                    "source": "259"
                  },
                  "vulnerability_sequence_forward": {
                    "path": [
                      [
                        "259",
                        "656",
                        "CANFOLLOW"
                      ]
                    ],
                    "score": 0.9,
                    "type": "vulnerability_sequence_forward",
                    "source": "259"
                  },
                  "vulnerability_sequence_backward": {
                    "path": [
                      [
                        "656",
                        "259",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 1.0,
                    "type": "vulnerability_sequence_backward",
                    "source": "259"
                  }
                }
              },
              "position": "before",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.3600000000000003
                }
              }
            },
            "similarity": 1.3600000000000003
          },
          {
            "doc_id": "183",
            "text": "CWE-183: Permissive List of Allowed Inputs",
            "score": 1.3010400000000002,
            "metadata": {
              "doc_id": "183",
              "name": "Permissive List of Allowed Inputs",
              "type": "base",
              "original_content": "CWE-183: Permissive List of Allowed Inputs",
              "relationships": [
                {
                  "source_id": "183",
                  "target_id": "942",
                  "label": "PARENTOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "183",
                  "target_id": "434",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "183",
                  "target_id": "697",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "942",
                  "target_id": "183",
                  "label": "CHILDOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "697",
                  "target_id": "183",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "627",
                  "target_id": "183",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "625",
                  "target_id": "183",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "434",
                  "target_id": "183",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "186",
                  "target_id": "183",
                  "label": "CANALSOBE",
                  "properties": {
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.6,
                "sequence_path": 0.5760000000000002
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "vulnerability_sequence_forward"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "78",
                        "184",
                        "CANFOLLOW"
                      ],
                      [
                        "184",
                        "434",
                        "CANPRECEDE"
                      ],
                      [
                        "434",
                        "183",
                        "CANFOLLOW"
                      ]
                    ],
                    "score": 0.6,
                    "type": "relationship_chain",
                    "source": "78"
                  },
                  "vulnerability_sequence_forward": {
                    "path": [
                      [
                        "78",
                        "184",
                        "CANFOLLOW"
                      ],
                      [
                        "184",
                        "434",
                        "CANPRECEDE"
                      ],
                      [
                        "434",
                        "183",
                        "CANFOLLOW"
                      ]
                    ],
                    "score": 0.5760000000000002,
                    "type": "vulnerability_sequence_forward",
                    "source": "78"
                  }
                }
              },
              "position": "after",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.3010400000000002
                }
              }
            },
            "similarity": 1.3010400000000002
          },
          {
            "doc_id": "94",
            "text": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
            "score": 0.5641792579592897,
            "metadata": {
              "doc_id": "94",
              "name": "Improper Control of Generation of Code ('Code Injection')",
              "type": "Base",
              "extended_description": "\n\nWhen a product allows a user's input to contain code syntax, it might be possible for an attacker to craft the code in such a way that it will alter the intended control flow of the product. Such an alteration could lead to arbitrary code execution.\n\n\nInjection problems encompass a wide variety of issues -- all mitigated in very different ways. For this reason, the most effective way to discuss these weaknesses is to note the distinct features which classify them as injection weaknesses. The most important issue to note is that all injection problems share one thing in common -- i.e., they allow for the injection of control plane data into the user-controlled data plane. This means that the execution of the process may be altered by sending code in through legitimate data channels, using no other mechanism. While buffer overflows, and many other flaws, involve the use of some further issue to gain execution, injection problems need only for the data to be parsed. The most classic instantiations of this category of weakness are SQL injection and format string vulnerabilities.\n",
              "alternate_terms": [],
              "original_content": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
              "relationships": [
                {
                  "source_id": "94",
                  "target_id": "98",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "94",
                  "target_id": "96",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "94",
                  "target_id": "95",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "94",
                  "target_id": "1336",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "94",
                  "target_id": "913",
                  "label": "CHILDOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "94",
                  "target_id": "74",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "94",
                  "target_id": "74",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "98",
                  "target_id": "94",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "96",
                  "target_id": "94",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "95",
                  "target_id": "94",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "913",
                  "target_id": "94",
                  "label": "PARENTOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "74",
                  "target_id": "94",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "1336",
                  "target_id": "94",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "source": "graph",
              "sources": [
                "vector",
                "graph"
              ],
              "vector_score": 0.5641792579592897,
              "graph_score": 1.6016000000000004,
              "score_components": {
                "relationship_chain": 0.8,
                "sequence_path": 0.6400000000000001
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "vulnerability_sequence_forward"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "98",
                        "426",
                        "CANALSOBE"
                      ],
                      [
                        "98",
                        "94",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 0.8,
                    "type": "relationship_chain",
                    "source": "426"
                  },
                  "vulnerability_sequence_forward": {
                    "path": [
                      [
                        "78",
                        "184",
                        "CANFOLLOW"
                      ],
                      [
                        "184",
                        "98",
                        "CANPRECEDE"
                      ],
                      [
                        "98",
                        "94",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 0.6400000000000001,
                    "type": "vulnerability_sequence_forward",
                    "source": "78"
                  }
                }
              },
              "position": "after",
              "mapping_notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This entry is frequently misused for vulnerabilities with a technical impact of \"code execution,\" which does not by itself indicate a root cause weakness, since dozens of weaknesses can enable code execution.",
                "comments": "This weakness only applies when the product's functionality intentionally constructs all or part of a code segment. It could be that executing code could be the result of other weaknesses that do not involve the construction of code segments.",
                "reasons": [
                  "Frequent Misuse",
                  "Frequent Misinterpretation"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "graph"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "dense": 0.5022731050833147,
                  "graph": 1.186631703183716
                }
              }
            },
            "similarity": 1.186631703183716
          }
        ],
        "dense": [
          {
            "metadata": {
              "doc_id": "78",
              "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
              "type": "Base",
              "original_content": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
              "keyphrase_source": "weakness:command injection",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse",
                  "graph"
                ],
                "retriever_count": 3,
                "normalized_scores": {
                  "dense": 0.6110023594431819,
                  "sparse": 700.0,
                  "graph": 1.7428713778815073
                }
              }
            },
            "similarity": 0.6110023594431819
          },
          {
            "metadata": {
              "doc_id": "77",
              "name": "Improper Neutralization of Special Elements used in a Command ('Command Injection')",
              "type": "Class",
              "original_content": "The product constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component.",
              "keyphrase_source": "weakness:command injection",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed-with-Review",
                "rationale": "CWE-77 is often misused when OS command injection (CWE-78) was intended instead [REF-1287].",
                "comments": "Ensure that the analysis focuses on the root-cause error that allows the execution of commands, as there are many weaknesses that can lead to this consequence. See Terminology Notes. If the weakness involves a command language besides OS shell invocation, then CWE-77 could be used.",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "78",
                    "Comment": "OS Command Injection"
                  }
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "dense": 0.5919752449753382,
                  "sparse": 1000.0
                }
              }
            },
            "similarity": 0.5919752449753382
          },
          {
            "metadata": {
              "doc_id": "121",
              "name": "Stack-based Buffer Overflow",
              "type": "Variant",
              "original_content": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
              "keyphrase_source": "weakness:command injection",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "dense": 0.5552101544549111,
                  "sparse": 109.23438345945085
                }
              }
            },
            "similarity": 0.5552101544549111
          },
          {
            "metadata": {
              "doc_id": "790",
              "name": "Improper Filtering of Special Elements",
              "type": "Class",
              "original_content": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
              "keyphrase_source": "weakness:command injection",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "dense": 0.5421319818299566,
                  "sparse": 85.21118989842024
                }
              }
            },
            "similarity": 0.5421319818299566
          },
          {
            "metadata": {
              "doc_id": "259",
              "name": "Use of Hard-coded Password",
              "type": "Variant",
              "original_content": "The product contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.",
              "keyphrase_source": "weakness:command injection",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "dense": 0.5416348097537143,
                  "sparse": 87.74115526296906
                }
              }
            },
            "similarity": 0.5416348097537143
          },
          {
            "metadata": {
              "doc_id": "912",
              "name": "Hidden Functionality",
              "type": "Class",
              "original_content": "The product contains functionality that is not documented, not part of the specification, and not accessible through an interface or command sequence that is obvious to the product's users or administrators.",
              "keyphrase_source": "weakness:command injection",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.533127624833597
                }
              }
            },
            "similarity": 0.533127624833597
          },
          {
            "metadata": {
              "doc_id": "306",
              "name": "Missing Authentication for Critical Function",
              "type": "Base",
              "original_content": "The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.",
              "keyphrase_source": "weakness:command injection",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.511780591620396
                }
              }
            },
            "similarity": 0.511780591620396
          },
          {
            "metadata": {
              "doc_id": "1188",
              "name": "Initialization of a Resource with an Insecure Default",
              "type": "Base",
              "original_content": "The product initializes or sets a resource with a default that is intended to be changed by the administrator, but the default is not secure.",
              "keyphrase_source": "weakness:command injection",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "dense": 0.5102088704911982,
                  "sparse": 26.02621927023227
                }
              }
            },
            "similarity": 0.5102088704911982
          },
          {
            "metadata": {
              "doc_id": "134",
              "name": "Use of Externally-Controlled Format String",
              "type": "Base",
              "original_content": "The product uses a function that accepts a format string as an argument, but the format string originates from an external source.",
              "keyphrase_source": "weakness:command injection",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.508809193864759
                }
              }
            },
            "similarity": 0.508809193864759
          },
          {
            "metadata": {
              "doc_id": "288",
              "name": "Authentication Bypass Using an Alternate Path or Channel",
              "type": "Base",
              "original_content": "The product requires authentication, but the product has an alternate path or channel that does not require authentication.",
              "keyphrase_source": "weakness:command injection",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.5073632765334025
                }
              }
            },
            "similarity": 0.5073632765334025
          },
          {
            "metadata": {
              "doc_id": "94",
              "name": "Improper Control of Generation of Code ('Code Injection')",
              "type": "Base",
              "original_content": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This entry is frequently misused for vulnerabilities with a technical impact of \"code execution,\" which does not by itself indicate a root cause weakness, since dozens of weaknesses can enable code execution.",
                "comments": "This weakness only applies when the product's functionality intentionally constructs all or part of a code segment. It could be that executing code could be the result of other weaknesses that do not involve the construction of code segments.",
                "reasons": [
                  "Frequent Misuse",
                  "Frequent Misinterpretation"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "graph"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "dense": 0.5022731050833147,
                  "graph": 1.186631703183716
                }
              }
            },
            "similarity": 0.5022731050833147
          },
          {
            "metadata": {
              "doc_id": "20",
              "name": "Improper Input Validation",
              "type": "Class",
              "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Discouraged",
                "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "1284",
                    "Comment": "Specified Quantity"
                  },
                  {
                    "CweID": "1285",
                    "Comment": "Specified Index, Position, or Offset"
                  },
                  {
                    "CweID": "1286",
                    "Comment": "Syntactic Correctness"
                  },
                  {
                    "CweID": "1287",
                    "Comment": "Specified Type"
                  },
                  {
                    "CweID": "1288",
                    "Comment": "Consistency within Input"
                  },
                  {
                    "CweID": "1289",
                    "Comment": "Unsafe Equivalence"
                  },
                  {
                    "CweID": "116",
                    "Comment": "Improper Encoding or Escaping of Output"
                  }
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.4868820517493534
                }
              }
            },
            "similarity": 0.4868820517493534
          },
          {
            "metadata": {
              "doc_id": "401",
              "name": "Missing Release of Memory after Effective Lifetime",
              "type": "Variant",
              "original_content": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "dense": 0.4839039932245426,
                  "sparse": 25.34208451259859
                }
              }
            },
            "similarity": 0.4839039932245426
          },
          {
            "metadata": {
              "doc_id": "425",
              "name": "Direct Request ('Forced Browsing')",
              "type": "Base",
              "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.4828631702038313
                }
              }
            },
            "similarity": 0.4828631702038313
          },
          {
            "metadata": {
              "doc_id": "321",
              "name": "Use of Hard-coded Cryptographic Key",
              "type": "Variant",
              "original_content": "The use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "graph"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "dense": 0.4807996292781689,
                  "graph": 1.5276001298578379
                }
              }
            },
            "similarity": 0.4807996292781689
          },
          {
            "metadata": {
              "doc_id": "93",
              "name": "Improper Neutralization of CRLF Sequences ('CRLF Injection')",
              "type": "Base",
              "original_content": "The product uses CRLF (carriage return line feeds) as a special element, e.g. to separate lines or records, but it does not neutralize or incorrectly neutralizes CRLF sequences from inputs.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.47708765875651704
                }
              }
            },
            "similarity": 0.47708765875651704
          },
          {
            "metadata": {
              "doc_id": "601",
              "name": "URL Redirection to Untrusted Site ('Open Redirect')",
              "type": "Base",
              "original_content": "The web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a redirect.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.47546222778872377
                }
              }
            },
            "similarity": 0.47546222778872377
          },
          {
            "metadata": {
              "doc_id": "400",
              "name": "Uncontrolled Resource Consumption",
              "type": "Class",
              "original_content": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Discouraged",
                "rationale": "CWE-400 is intended for incorrect behaviors in which the product is expected to track and restrict how many resources it consumes, but CWE-400 is often misused because it is conflated with the \"technical impact\" of vulnerabilities in which resource consumption occurs. It is sometimes used for low-information vulnerability reports. It is a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Closely analyze the specific mistake that is causing resource consumption, and perform a CWE mapping for that mistake. Consider children/descendants such as CWE-770: Allocation of Resources Without Limits or Throttling, CWE-771: Missing Reference to Active Allocated Resource, CWE-410: Insufficient Resource Pool, CWE-772: Missing Release of Resource after Effective Lifetime, CWE-834: Excessive Iteration, CWE-405: Asymmetric Resource Consumption (Amplification), and others.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.47374860592759593
                }
              }
            },
            "similarity": 0.47374860592759593
          },
          {
            "metadata": {
              "doc_id": "22",
              "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
              "type": "Base",
              "original_content": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.4729037946031221
                }
              }
            },
            "similarity": 0.4729037946031221
          },
          {
            "metadata": {
              "doc_id": "291",
              "name": "Reliance on IP Address for Authentication",
              "type": "Variant",
              "original_content": "The product uses an IP address for authentication.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.4712697584344623
                }
              }
            },
            "similarity": 0.4712697584344623
          }
        ],
        "sparse": [
          {
            "cwe_id": "77",
            "name": "Improper Neutralization of Special Elements used in a Command ('Command Injection')",
            "description": "The product constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component.",
            "score": 1000.0,
            "matched_text": "AlternateTerms: Command injection",
            "matched_phrase": "command injection",
            "matched_term": "command injection",
            "type": "Class",
            "source": "sparse",
            "search_source": "alternate_term_match",
            "match_reason": "exact_match_whole_phrase",
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed-with-Review",
                "rationale": "CWE-77 is often misused when OS command injection (CWE-78) was intended instead [REF-1287].",
                "comments": "Ensure that the analysis focuses on the root-cause error that allows the execution of commands, as there are many weaknesses that can lead to this consequence. See Terminology Notes. If the weakness involves a command language besides OS shell invocation, then CWE-77 could be used.",
                "reasons": [
                  "Frequent Misuse"
                ],
                "suggestions": [
                  {
                    "CweID": "78",
                    "Comment": "OS Command Injection"
                  }
                ]
              }
            }
          },
          {
            "cwe_id": "78",
            "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
            "description": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
            "score": 700.0,
            "matched_text": "AlternateTerms: OS Command Injection",
            "matched_phrase": "command injection",
            "matched_term": "os command injection",
            "type": "Base",
            "source": "sparse",
            "search_source": "alternate_term_match",
            "match_reason": "phrase_in_term_whole_phrase",
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              }
            }
          },
          {
            "cwe_id": "121",
            "name": "Stack-based Buffer Overflow",
            "description": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
            "score": 109.23438345945085,
            "matched_text": "CWE-121: Stack-based Buffer Overflow\n\nType: Variant\n\nStatus: Draft\n\nAlternative Terms:\n\nStack Overflow - \"Stack Overflow\" is often used to mean the same thing as stack-based buffer overflow, however it is also used on occasion to mean stack exhaustion, usually a result from an excessively recursive function call. Due to the ambiguity of the term, use of stack overflow to describe either circumstance is discouraged.\n\nStack Overflow - \"Stack Overflow\" is often used to mean the same thing as stack-based buffer overflow, however it is also used on occasion to mean stack exhaustion, usually a result from an excessively recursive function call. Due to the ambiguity of the term, use of stack overflow to describe either circumstance is discouraged.\n\nStack Overflow - \"Stack Overflow\" is often used to mean the same thing as stack-based buffer overflow, however it is also used on occasion to mean stack exhaustion, usually a result from an excessively recursive function call. Due to the ambiguity of the term, use of stack overflow to describe either circumstance is discouraged.\n\nDescription:\n\nA stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).\n\nReal-World Examples:\n\n- CVE-2021-35395: Stack-based buffer overflows in SFK for wifi chipset used for IoT/embedded devices, as exploited in the wild per CISA KEV.\n\nTop 25 CWE Examples:\n\n- CVE-2020-11267: Stack out-of-bounds write occurs while setting up a cipher device if the provided IV length exceeds the max limit value in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Voice & Music, Snapdragon Wearables, Snapdragon Wired Infrastructure and Networking\n\n- CVE-2020-11633: The Zscaler Client Connector for Windows prior to 2.1.2.74 had a stack based buffer overflow when connecting to misconfigured TLS servers. An adversary would potentially have been able to execute arbitrary code with system privileges.\n\n- CVE-2020-12893: Stack Buffer Overflow in AMD Graphics Driver for Windows 10 in Escape 0x15002a may lead to escalation of privilege or denial of service.\n\n- CVE-2020-12898: Stack Buffer Overflow in AMD Graphics Driver for Windows 10 may lead to escalation of privilege or denial of service.\n\n- CVE-2020-13598: FS: Buffer Overflow when enabling Long File Names in FAT_FS and calling fs_stat. Zephyr versions >= v1.14.2, >= v2.3.0 contain Stack-based Buffer Overflow (CWE-121). For more information, see https://github.com/zephyrproject-rtos/zephyr/security/advisories/GHSA-7fhv-rgxr-x56h\n\n- CVE-2020-15744: Stack-based Buffer Overflow vulnerability in the ONVIF server component of Victure PC420 smart camera allows an attacker to execute remote code on the target device. This issue affects: Victure PC420 firmware version 1.2.2 and prior versions.\n\n- CVE-2020-17541: Libjpeg-turbo all version have a stack-based buffer overflow in the \"transform\" component. A remote attacker can send a malformed jpeg file to the service and cause arbitrary code execution or denial of service of the target service.\n\n- CVE-2020-18734: A stack buffer overflow in /ddsi/q_bitset.h of Eclipse IOT Cyclone DDS Project v0.1.0 causes the DDS subscriber server to crash.\n\n- CVE-2020-18971: Stack-based Buffer Overflow in PoDoFo v0.9.6 allows attackers to cause a denial of service via the component 'src/base/PdfDictionary.cpp:65'.\n\n- CVE-2020-20746: A stack-based buffer overflow in the httpd server on Tenda AC9 V15.03.06.60_EN allows remote attackers to execute arbitrary code or cause a denial of service (DoS) via a crafted POST request to /goform/SetStaticRouteCfg.\n\n- CVE-2020-21050: Libsixel prior to v1.8.3 contains a stack buffer overflow in the function gif_process_raster at fromgif.c.\n\n- CVE-2020-21529: fig2dev 3.2.7b contains a stack buffer overflow in the bezier_spline function in genepic.c.\n\n- CVE-2020-21533: fig2dev 3.2.7b contains a stack buffer overflow in the read_textobject function in read.c.\n\n- CVE-2020-21601: libde265 v1.0.4 contains a stack buffer overflow in the put_qpel_fallback function, which can be exploited via a crafted a file.\n\n- CVE-2020-21675: A stack-based buffer overflow in the genptk_text component in genptk.c of fig2dev 3.2.7b allows attackers to cause a denial of service (DOS) via converting a xfig file into ptk format.\n\n- CVE-2020-21676: A stack-based buffer overflow in the genpstrx_text() component in genpstricks.c of fig2dev 3.2.7b allows attackers to cause a denial of service (DOS) via converting a xfig file into pstricks format.\n\n- CVE-2020-21680: A stack-based buffer overflow in the put_arrow() component in genpict2e.c of fig2dev 3.2.7b allows attackers to cause a denial of service (DOS) via converting a xfig file into pict2e format.\n\n- CVE-2020-22079: Stack-based buffer overflow in Tenda AC-10U AC1200 Router US_AC10UV1.0RTL_V15.03.06.48_multi_TDE01 allows remote attackers to execute arbitrary code via the timeZone parameter to goform/SetSysTimeCfg.\n\n- CVE-2020-22907: Stack overflow vulnerability in function jsi_evalcode_sub in jsish before 3.0.18, allows remote attackers to cause a Denial of Service via a crafted value to the execute parameter.\n\n- CVE-2020-23060: Internet Download Manager 6.37.11.1 was discovered to contain a stack buffer overflow in the Export/Import function. This vulnerability allows attackers to escalate local process privileges via a crafted ef2 file.\n\n- CVE-2020-23851: A stack-based buffer overflow vulnerability exists in ffjpeg through 2020-07-02 in the jfif_decode(void *ctxt, BMP *pb) function at ffjpeg/src/jfif.c:513:28, which could cause a denial of service by submitting a malicious jpeg image.\n\n- CVE-2020-23877: pdf2xml v2.0 was discovered to contain a stack buffer overflow in the component getObjectStream.\n\n- CVE-2020-23878: pdf2json v0.71 was discovered to contain a stack buffer overflow in the component XRef::fetch.\n\n- CVE-2020-23904: A stack buffer overflow in speexenc.c of Speex v1.2 allows attackers to cause a denial of service (DoS) via a crafted WAV file. NOTE: the vendor states \"I cannot reproduce it\" and it \"is a demo program.\n\n- CVE-2020-24870: Libraw before 0.20.1 has a stack buffer overflow via LibRaw::identify_process_dng_fields in identify.cpp.\n\n- CVE-2020-27301: A stack buffer overflow in Realtek RTL8710 (and other Ameba-based devices) can lead to remote code execution via the \"AES_UnWRAP\" function, when an attacker in Wi-Fi range sends a crafted \"Encrypted GTK\" value as part of the WPA2 4-way-handshake.\n\n- CVE-2020-27302: A stack buffer overflow in Realtek RTL8710 (and other Ameba-based devices) can lead to remote code execution via the \"memcpy\" function, when an attacker in Wi-Fi range sends a crafted \"Encrypted GTK\" value as part of the WPA2 4-way-handshake.\n\n- CVE-2020-28198: The 'id' parameter of IBM Tivoli Storage Manager Version 5 Release 2 (Command Line Administrative Interface, dsmadmc.exe) is vulnerable to an exploitable stack buffer overflow. Note: the vulnerability can be exploited when it is used in \"interactive\" mode while, cause of a max number characters limitation, it cannot be exploited in batch or command line usage (e.g. dsmadmc.exe -id=username -password=pwd). NOTE: This vulnerability only affects products that are no longer supported by the maintainer\n\n- CVE-2020-28964: Internet Download Manager 6.37.11.1 was discovered to contain a stack buffer overflow in the Search function. This vulnerability allows attackers to escalate local process privileges via unspecified vectors.\n\n- CVE-2020-35452: Apache HTTP Server versions 2.4.0 to 2.4.46 A specially crafted Digest nonce can cause a stack overflow in mod_auth_digest. There is no report of this overflow being exploitable, nor the Apache HTTP Server team could create one, though some particular compiler and/or compilation option might make it possible, with limited consequences anyway due to the size (a single byte) and the value (zero byte) of the overflow\n\n- CVE-2020-36129: AOM v2.0.1 was discovered to contain a stack buffer overflow via the component src/aom_image.c.\n\n- CVE-2020-36131: AOM v2.0.1 was discovered to contain a stack buffer overflow via the component stats/rate_hist.c.\n\n- CVE-2020-36406: uWebSockets 18.11.0 and 18.12.0 has a stack-based buffer overflow in uWS::TopicTree::trimTree (called from uWS::TopicTree::unsubscribeAll). NOTE: the vendor's position is that this is \"a minor issue or not even an issue at all\" because the developer of an application (that uses uWebSockets) should not be allowing the large number of triggered topics to accumulate\n\n- CVE-2021-0276: A stack-based Buffer Overflow vulnerability in Juniper Networks SBR Carrier with EAP (Extensible Authentication Protocol) authentication configured, allows an attacker sending specific packets causing the radius daemon to crash resulting with a Denial of Service (DoS) or leading to remote code execution (RCE). By continuously sending this specific packets, an attacker can repeatedly crash the radius daemon, causing a sustained Denial of Service (DoS). This issue affects Juniper Networks SBR Carrier: 8.4.1 versions prior to 8.4.1R19; 8.5.0 versions prior to 8.5.0R10; 8.6.0 versions prior to 8.6.0R4.\n\n- CVE-2021-0362: In aee, there is a possible memory corruption due to a stack buffer overflow. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Product: Android; Versions: Android-11; Patch ID: ALPS05457070.\n\n- CVE-2021-0657: In apusys, there is a possible out of bounds write due to a stack-based buffer overflow. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS05672103; Issue ID: ALPS05672103.\n\n- CVE-2021-1099: NVIDIA vGPU software contains a vulnerability in the Virtual GPU Manager (vGPU plugin) that could allow an attacker to cause stack-based buffer overflow and put a customized ROP gadget on the stack. Such an attack may lead to information disclosure, data tampering, or denial of service. This affects vGPU version 12.x (prior to 12.3), version 11.x (prior to 11.5) and version 8.x (prior 8.8).\n\n- CVE-2021-1967: Possible stack buffer overflow due to lack of check on the maximum number of post NAN discovery attributes while processing a NAN Match event in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Voice & Music, Snapdragon Wearables\n\n- CVE-2021-20236: A flaw was found in the ZeroMQ server in versions before 4.3.3. This flaw allows a malicious client to cause a stack buffer overflow on the server by sending crafted topic subscription requests and then unsubscribing. The highest threat from this vulnerability is to confidentiality, integrity, as well as system availability.\n\n- CVE-2021-20294: A flaw was found in binutils readelf 2.35 program. An attacker who is able to convince a victim using readelf to read a crafted file could trigger a stack buffer overflow, out-of-bounds write of arbitrary data supplied by the attacker. The highest impact of this flaw is to confidentiality, integrity, and availability.\n\n- CVE-2021-20314: Stack buffer overflow in libspf2 versions below 1.2.11 when processing certain SPF macros can lead to Denial of service and potentially code execution via malicious crafted SPF explanation messages.\n\n- CVE-2021-20349: IBM Tivoli Workload Scheduler 9.4 and 9.5 is vulnerable to a stack-based buffer overflow, caused by improper bounds checking. A local attacker could overflow a buffer and gain lower level privileges. IBM X-Force ID: 194599.\n\n- CVE-2021-20491: IBM Spectrum Protect Server 7.1 and 8.1 is subject to a stack-based buffer overflow caused by improper bounds checking during the parsing of commands. By issuing such a command with an improper parameter, an authorized administrator could overflow a buffer and cause the server to crash. IBM X-Force ID: 197792.\n\n- CVE-2021-20515: IBM Informix Dynamic Server 14.10 is vulnerable to a stack based buffer overflow, caused by improper bounds checking. A local privileged user could overflow a buffer and execute arbitrary code on the system or cause a denial of service condition. IBM X-Force ID: 198366.\n\n- CVE-2021-20546: IBM Spectrum Protect Client 8.1.0.0 through 8.1.11.0 is vulnerable to a stack-based buffer overflow, caused by improper bounds checking. A local attacker could overflow a buffer and cause the application to crash. IBM X-Force ID: 198934\n\n- CVE-2021-20572: IBM Security Identity Manager Adapters 6.0 and 7.0 are vulnerable to a stack-based buffer overflow, caused by improper bounds checking. A remote authenticated attacker could overflow the and cause the server to crash. IBM X-Force ID: 199247.\n\n- CVE-2021-21149: Stack buffer overflow in Data Transfer in Google Chrome on Linux prior to 88.0.4324.182 allowed a remote attacker to perform out of bounds memory access via a crafted HTML page.\n\n- CVE-2021-21153: Stack buffer overflow in GPU Process in Google Chrome on Linux prior to 88.0.4324.182 allowed a remote attacker to potentially perform out of bounds memory access via a crafted HTML page.\n\n- CVE-2021-21540: Dell EMC iDRAC9 versions prior to 4.40.00.00 contain a stack-based overflow vulnerability. A remote authenticated attacker could potentially exploit this vulnerability to overwrite configuration information by injecting arbitrarily large payload.\n\n- CVE-2021-21554: Dell PowerEdge R640, R740, R740XD, R840, R940, R940xa, MX740c, MX840c, and, Dell Precision 7920 Rack Workstation BIOS contain a stack-based buffer overflow vulnerability in systems with Intel Optane DC Persistent Memory installed. A local malicious user with high privileges may potentially exploit this vulnerability, leading to a denial of Service, arbitrary code execution, or information disclosure in UEFI or BIOS Preboot Environment.\n\n- CVE-2021-21556: Dell PowerEdge R640, R740, R740XD, R840, R940, R940xa, MX740c, MX840c, and T640 Server BIOS contain a stack-based buffer overflow vulnerability in systems with NVDIMM-N installed. A local malicious user with high privileges may potentially exploit this vulnerability, leading to a denial of Service, arbitrary code execution, or information disclosure in UEFI or BIOS Preboot Environment.\n\n- CVE-2021-21748: ZTE MF971R product has two stack-based buffer overflow vulnerabilities. An attacker could exploit the vulnerabilities to execute arbitrary code.\n\n- CVE-2021-21749: ZTE MF971R product has two stack-based buffer overflow vulnerabilities. An attacker could exploit the vulnerabilities to execute arbitrary code.\n\n- CVE-2021-21812: A stack-based buffer overflow vulnerability exists in the command-line-parsing HandleFileArg functionality of AT&T Labs\u2019 Xmill 0.7. Within the function HandleFileArg the argument filepattern is under control of the user who passes it in from the command line. filepattern is passed directly to strcpy copying the path provided by the user into a static sized buffer without any length checks resulting in a stack-buffer overflow. An attacker can provide malicious input to trigger these vulnerabilities.\n\n- CVE-2021-21815: A stack-based buffer overflow vulnerability exists in the command-line-parsing HandleFileArg functionality of AT&T Labs' Xmill 0.7. Within the function HandleFileArg the argument filepattern is under control of the user who passes it in from the command line. filepattern is passed directly to strcpy copying the path provided by the user into a staticly sized buffer without any length checks resulting in a stack-buffer overflow. An attacker can provide malicious input to trigger this vulnerability.\n\n- CVE-2021-21821: A stack-based buffer overflow vulnerability exists in the PDF process_fontname functionality of Accusoft ImageGear 19.9. A specially crafted malformed file can lead to code execution. An attacker can provide a malicious file to trigger this vulnerability.\n\n- CVE-2021-22130: A stack-based buffer overflow vulnerability in FortiProxy physical appliance CLI 2.0.0 to 2.0.1, 1.2.0 to 1.2.9, 1.1.0 to 1.1.6, 1.0.0 to 1.0.7 may allow an authenticated, remote attacker to perform a Denial of Service attack by running the `diagnose sys cpuset` with a large cpuset mask value. Fortinet is not aware of any successful exploitation of this vulnerability that would lead to code execution.\n\n- CVE-2021-22637: Multiple stack-based buffer overflow issues have been identified in the way the application processes project files, allowing an attacker to craft a special project file that may allow arbitrary code execution on the Tellus Lite V-Simulator and V-Server Lite (versions prior to 4.0.10.0).\n\n- CVE-2021-22666: Fatek FvDesigner Version 1.5.76 and prior is vulnerable to a stack-based buffer overflow while project files are being processed, allowing an attacker to craft a special project file that may permit arbitrary code execution.\n\n- CVE-2021-22673: The affected product is vulnerable to stack-based buffer overflow while processing over-the-air firmware updates from the CDN server, which may allow an attacker to remotely execute code on the SimpleLink Wi-Fi (MSP432E4 SDK: v4.20.00.12 and prior, CC32XX SDK v4.30.00.06 and prior, CC13X0 SDK versions prior to v4.10.03, CC13X2 and CC26XX SDK versions prior to v4.40.00, CC3200 SDK v1.5.0 and prior, CC3100 SDK v1.3.0 and prior).\n\n- CVE-2021-25139: A potential security vulnerability has been identified in the HPE Moonshot Provisioning Manager v1.20. The HPE Moonshot Provisioning Manager is an application that is installed in a VMWare or Microsoft Hyper-V environment that is used to setup and configure an HPE Moonshot 1500 chassis. This vulnerability could be remotely exploited by an unauthenticated user to cause a stack based buffer overflow using user supplied input to the `khuploadfile.cgi` CGI ELF. The stack based buffer overflow could lead to Remote Code Execution, Denial of Service, and/or compromise system integrity. **Note:** HPE recommends that customers discontinue the use of the HPE Moonshot Provisioning Manager. The HPE Moonshot Provisioning Manager application is discontinued, no longer supported, is not available to download from the HPE Support Center, and no patch is available.\n\n- CVE-2021-25178: An issue was discovered in Open Design Alliance Drawings SDK before 2021.11. A stack-based buffer overflow vulnerability exists when the recover operation is run with malformed .DXF and .DWG files. This can allow attackers to cause a crash potentially enabling a denial of service attack (Crash, Exit, or Restart) or possible code execution.\n\n- CVE-2021-25461: An improper length check in APAService prior to SMR Sep-2021 Release 1 results in stack based Buffer Overflow.\n\n- CVE-2021-25469: A possible stack-based buffer overflow vulnerability in Widevine trustlet prior to SMR Oct-2021 Release 1 allows arbitrary code execution.\n\n- CVE-2021-25478: A possible stack-based buffer overflow vulnerability in Exynos CP Chipset prior to SMR Oct-2021 Release 1 allows arbitrary memory write and code execution.\n\n- CVE-2021-26236: FastStone Image Viewer v.<= 7.5 is affected by a Stack-based Buffer Overflow at 0x005BDF49, affecting the CUR file parsing functionality (BITMAPINFOHEADER Structure, 'BitCount' file format field), that will end up corrupting the Structure Exception Handler (SEH). Attackers could exploit this issue to achieve code execution when a user opens or views a malformed/specially crafted CUR file.\n\n- CVE-2021-26561: Stack-based buffer overflow vulnerability in synoagentregisterd in Synology DiskStation Manager (DSM) before 6.2.3-25426-3 allows man-in-the-middle attackers to execute arbitrary code via syno_finder_site HTTP header.\n\n- CVE-2021-26675: A stack-based buffer overflow in dnsproxy in ConnMan before 1.39 could be used by network adjacent attackers to execute code.\n\n- CVE-2021-26709: D-Link DSL-320B-D1 devices through EU_1.25 are prone to multiple Stack-Based Buffer Overflows that allow unauthenticated remote attackers to take over a device via the login.xgi user and pass parameters. NOTE: This vulnerability only affects products that are no longer supported by the maintainer\n\n- CVE-2021-26713: A stack-based buffer overflow in res_rtp_asterisk.c in Sangoma Asterisk before 16.16.1, 17.x before 17.9.2, and 18.x before 18.2.1 and Certified Asterisk before 16.8-cert6 allows an authenticated WebRTC client to cause an Asterisk crash by sending multiple hold/unhold requests in quick succession. This is caused by a signedness comparison mismatch.\n\n- CVE-2021-26826: A stack overflow issue exists in Godot Engine up to v3.2 and is caused by improper boundary checks when loading .TGA image files. Depending on the context of the application, attack vector can be local or remote, and can lead to code execution and/or system crash.\n\n- CVE-2021-27114: An issue was discovered in D-Link DIR-816 A2 1.10 B05 devices. Within the handler function of the /goform/addassignment route, a very long text entry for the\"'s_ip\" and \"s_mac\" fields could lead to a Stack-Based Buffer Overflow and overwrite the return address.\n\n- CVE-2021-27232: The RTSPLive555.dll ActiveX control in Pelco Digital Sentry Server 7.18.72.11464 has a SetCameraConnectionParameter stack-based buffer overflow. This can be exploited by a remote attacker to potentially execute arbitrary attacker-supplied code. The victim would have to visit a malicious webpage using Internet Explorer where the exploit could be triggered.\n\n- CVE-2021-27413: Omron CX-One Versions 4.60 and prior, including CX-Server Versions 5.0.29.0 and prior, are vulnerable to a stack-based buffer overflow, which may allow an attacker to execute arbitrary code.\n\n- CVE-2021-27790: The command ipfilter in Brocade Fabric OS before Brocade Fabric OS v.9.0.1a, v8.2.3, and v8.2.0_CBN4, and v7.4.2h uses unsafe string function to process user input. Authenticated attackers can abuse this vulnerability to exploit stack-based buffer overflows, allowing execution of arbitrary code as the root user account.\n\n- CVE-2021-27799: ean_leading_zeroes in backend/upcean.c in Zint Barcode Generator 2.9.1 has a stack-based buffer overflow that is reachable from the C API through an application that includes the Zint Barcode Generator library code.\n\n- CVE-2021-28606: Adobe After Effects version 18.2 (and earlier) is affected by a Stack-based Buffer Overflow vulnerability when parsing a specially crafted file. An unauthenticated attacker could leverage this vulnerability to achieve arbitrary code execution in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file.\n\n- CVE-2021-28686: AsIO2_64.sys and AsIO2_32.sys in ASUS GPUTweak II before 2.3.0.3 allow low-privileged users to trigger a stack-based buffer overflow. This could enable low-privileged users to achieve Denial of Service via a DeviceIoControl.\n\n- CVE-2021-28797: A stack-based buffer overflow vulnerability has been reported to affect QNAP NAS devices running Surveillance Station. If exploited, this vulnerability allows attackers to execute arbitrary code. QNAP have already fixed this vulnerability in the following versions: Surveillance Station 5.1.5.4.3 (and later) for ARM CPU NAS (64bit OS) and x86 CPU NAS (64bit OS) Surveillance Station 5.1.5.3.3 (and later) for ARM CPU NAS (32bit OS) and x86 CPU NAS (32bit OS)\n\n- CVE-2021-28816: A stack buffer overflow vulnerability has been reported to affect QNAP device running QTS, QuTScloud, QuTS hero. If exploited, this vulnerability allows attackers to execute arbitrary code. We have already fixed this vulnerability in the following versions of QTS, QuTScloud, QuTS hero: QTS 4.5.4.1715 build 20210630 and later QTS 5.0.0.1716 build 20210701 and later QTS 4.3.3.1693 build 20210624 and later QTS 4.3.6.1750 build 20210730 and later QuTScloud c4.5.6.1755 and later QuTS hero h4.5.4.1771 build 20210825 and later\n\n- CVE-2021-29073: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects R8000P before 1.4.1.66, MK62 before 1.0.6.110, MR60 before 1.0.6.110, MS60 before 1.0.6.110, R7960P before 1.4.1.66, R7900P before 1.4.1.66, RAX15 before 1.0.2.82, RAX20 before 1.0.2.82, RAX45 before 1.0.2.72, RAX50 before 1.0.2.72, RAX75 before 1.0.3.106, RAX80 before 1.0.3.106, and RAX200 before 1.0.3.106.\n\n- CVE-2021-29074: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects RBW30 before 2.6.2.2, RBK852 before 3.2.17.12, RBK853 before 3.2.17.12, RBK854 before 3.2.17.12, RBR850 before 3.2.17.12, RBS850 before 3.2.17.12, RBK752 before 3.2.17.12, RBK753 before 3.2.17.12, RBK753S before 3.2.17.12, RBK754 before 3.2.17.12, RBR750 before 3.2.17.12, and RBS750 before 3.2.17.12.\n\n- CVE-2021-29075: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects RBW30 before 2.6.2.2, RBK852 before 3.2.17.12, RBK852 before 3.2.17.12, RBK852 before 3.2.17.12, RBR850 before 3.2.17.12, RBS850 before 3.2.17.12, RBK752 before 3.2.17.12, RBK753 before 3.2.17.12, RBK753S before 3.2.17.12, RBK754 before 3.2.17.12, RBR750 before 3.2.17.12, and RBS750 before 3.2.17.12.\n\n- CVE-2021-29081: Certain NETGEAR devices are affected by a stack-based buffer overflow by an unauthenticated attacker. This affects RBW30 before 2.6.2.2, RBK852 before 3.2.17.12, RBK853 before 3.2.17.12, RBK854 before 3.2.17.12, RBR850 before 3.2.17.12, RBS850 before 3.2.17.12, RBK752 before 3.2.17.12, RBK753 before 3.2.17.12, RBK753S before 3.2.17.12, RBK754 before 3.2.17.12, RBR750 before 3.2.17.12, and RBS750 before 3.2.17.12.\n\n- CVE-2021-29665: IBM Security Verify Access 20.07 is vulnerable to a stack based buffer overflow, caused by improper bounds checking which could allow a local attacker to execute arbitrary code on the system with elevated privileges.\n\n- CVE-2021-29672: IBM Spectrum Protect Client 8.1.0.0-8 through 1.11.0 is vulnerable to a stack-based buffer overflow, caused by improper bounds checking when processing the current locale settings. A local attacker could overflow a buffer and execute arbitrary code on the system with elevated privileges or cause the application to crash. IBM X-Force ID: 199479\n\n- CVE-2021-29999: An issue was discovered in Wind River VxWorks through 6.8. There is a possible stack overflow in dhcp server.\n\n- CVE-2021-30072: An issue was discovered in prog.cgi on D-Link DIR-878 1.30B08 devices. Because strcat is misused, there is a stack-based buffer overflow that does not require authentication.\n\n- CVE-2021-30188: CODESYS V2 runtime system SP before 2.4.7.55 has a Stack-based Buffer Overflow.\n\n- CVE-2021-30189: CODESYS V2 Web-Server before 1.1.9.20 has a Stack-based Buffer Overflow.\n\n- CVE-2021-30566: Stack buffer overflow in Printing in Google Chrome prior to 92.0.4515.107 allowed a remote attacker who had compromised the renderer process to potentially exploit stack corruption via a crafted HTML page.\n\n- CVE-2021-3057: A stack-based buffer overflow vulnerability exists in the Palo Alto Networks GlobalProtect app that enables a man-in-the-middle attacker to disrupt system processes and potentially execute arbitrary code with SYSTEM privileges. This issue impacts: GlobalProtect app 5.1 versions earlier than GlobalProtect app 5.1.9 on Windows; GlobalProtect app 5.2 versions earlier than GlobalProtect app 5.2.8 on Windows; GlobalProtect app 5.2 versions earlier than GlobalProtect app 5.2.8 on the Universal Windows Platform; GlobalProtect app 5.3 versions earlier than GlobalProtect app 5.3.1 on Linux.\n\n- CVE-2021-30628: Stack buffer overflow in ANGLE in Google Chrome prior to 93.0.4577.82 allowed a remote attacker to potentially exploit stack corruption via a crafted HTML page.\n\n- CVE-2021-31315: Telegram Android <7.1.0 (2090), Telegram iOS <7.1, and Telegram macOS <7.1 are affected by a Stack Based Overflow in the blit function of their custom fork of the rlottie library. A remote attacker might be able to access Telegram's stack memory out-of-bounds on a victim device via a malicious animated sticker.\n\n- CVE-2021-31321: Telegram Android <7.1.0 (2090), Telegram iOS <7.1, and Telegram macOS <7.1 are affected by a Stack Based Overflow in the gray_split_cubic function of their custom fork of the rlottie library. A remote attacker might be able to overwrite Telegram's stack memory out-of-bounds on a victim device via a malicious animated sticker.\n\n- CVE-2021-31383: In Point to MultiPoint (P2MP) scenarios within established sessions between network or adjacent neighbors the improper use of a source to destination copy write operation combined with a Stack-based Buffer Overflow on certain specific packets processed by the routing protocol daemon (RPD) of Juniper Networks Junos OS and Junos OS Evolved sent by a remote unauthenticated network attacker causes the RPD to crash causing a Denial of Service (DoS). Continued receipt and processing of these packets will create a sustained Denial of Service (DoS) condition. This issue affects: Juniper Networks Junos OS 19.2 versions prior to 19.2R3-S2; 19.3 versions prior to 19.3R2-S6, 19.3R3-S2; 19.4 versions prior to 19.4R1-S4, 19.4R2-S4, 19.4R3-S3; 20.1 versions prior to 20.1R2-S2, 20.1R3; 20.2 versions prior to 20.2R2-S3, 20.2R3; 20.3 versions prior to 20.3R2. This issue does not affect Juniper Networks Junos OS versions prior to 19.2R1. Juniper Networks Junos OS Evolved 20.1 versions prior to 20.1R3-EVO; 20.2 versions prior to 20.2R3-EVO; 20.3 versions prior to 20.3R2-EVO.\n\n- CVE-2021-31616: Insufficient length checks in the ShapeShift KeepKey hardware wallet firmware before 7.1.0 allow a stack buffer overflow via crafted messages. The overflow in ethereum_extractThorchainSwapData() in ethereum.c can circumvent stack protections and lead to code execution. The vulnerable interface is reachable remotely over WebUSB.\n\n- CVE-2021-31755: An issue was discovered on Tenda AC11 devices with firmware through 02.03.01.104_CN. A stack buffer overflow vulnerability in /goform/setmac allows attackers to execute arbitrary code on the system via a crafted post request.\n\n- CVE-2021-31756: An issue was discovered on Tenda AC11 devices with firmware through 02.03.01.104_CN. A stack buffer overflow vulnerability in /gofrom/setwanType allows attackers to execute arbitrary code on the system via a crafted post request. This occurs when input vector controlled by malicious attack get copied to the stack variable.\n\n- CVE-2021-31757: An issue was discovered on Tenda AC11 devices with firmware through 02.03.01.104_CN. A stack buffer overflow vulnerability in /goform/setVLAN allows attackers to execute arbitrary code on the system via a crafted post request.\n\n- CVE-2021-31758: An issue was discovered on Tenda AC11 devices with firmware through 02.03.01.104_CN. A stack buffer overflow vulnerability in /goform/setportList allows attackers to execute arbitrary code on the system via a crafted post request.\n\n- CVE-2021-3185: A flaw was found in the gstreamer h264 component of gst-plugins-bad before v1.18.1 where when parsing a h264 header, an attacker could cause the stack to be smashed, memory corruption and possibly code execution.\n\n- CVE-2021-31886: A vulnerability has been identified in APOGEE MBC (PPC) (BACnet) (All versions), APOGEE MBC (PPC) (P2 Ethernet) (All versions), APOGEE MEC (PPC) (BACnet) (All versions), APOGEE MEC (PPC) (P2 Ethernet) (All versions), APOGEE PXC Compact (BACnet) (All versions < V3.5.4), APOGEE PXC Compact (P2 Ethernet) (All versions < V2.8.19), APOGEE PXC Modular (BACnet) (All versions < V3.5.4), APOGEE PXC Modular (P2 Ethernet) (All versions < V2.8.19), Desigo PXC00-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC00-U (All versions >= V2.3 and < V6.30.016), Desigo PXC001-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC100-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC12-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC128-U (All versions >= V2.3 and < V6.30.016), Desigo PXC200-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC22-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC22.1-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC36.1-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC50-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC64-U (All versions >= V2.3 and < V6.30.016), Desigo PXM20-E (All versions >= V2.3 and < V6.30.016), Nucleus NET (All versions), Nucleus ReadyStart V3 (All versions < V2017.02.4), Nucleus Source Code (All versions), TALON TC Compact (BACnet) (All versions < V3.5.4), TALON TC Modular (BACnet) (All versions < V3.5.4). FTP server does not properly validate the length of the \u201cUSER\u201d command, leading to stack-based buffer overflows. This may result in Denial-of-Service conditions and Remote Code Execution. (FSMD-2021-0010)\n\n- CVE-2021-31887: A vulnerability has been identified in APOGEE MBC (PPC) (BACnet) (All versions), APOGEE MBC (PPC) (P2 Ethernet) (All versions), APOGEE MEC (PPC) (BACnet) (All versions), APOGEE MEC (PPC) (P2 Ethernet) (All versions), APOGEE PXC Compact (BACnet) (All versions < V3.5.4), APOGEE PXC Compact (P2 Ethernet) (All versions < V2.8.19), APOGEE PXC Modular (BACnet) (All versions < V3.5.4), APOGEE PXC Modular (P2 Ethernet) (All versions < V2.8.19), Desigo PXC00-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC00-U (All versions >= V2.3 and < V6.30.016), Desigo PXC001-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC100-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC12-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC128-U (All versions >= V2.3 and < V6.30.016), Desigo PXC200-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC22-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC22.1-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC36.1-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC50-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC64-U (All versions >= V2.3 and < V6.30.016), Desigo PXM20-E (All versions >= V2.3 and < V6.30.016), Nucleus NET (All versions), Nucleus ReadyStart V3 (All versions < V2017.02.4), Nucleus Source Code (All versions), TALON TC Compact (BACnet) (All versions < V3.5.4), TALON TC Modular (BACnet) (All versions < V3.5.4). FTP server does not properly validate the length of the \u201cPWD/XPWD\u201d command, leading to stack-based buffer overflows. This may result in Denial-of-Service conditions and Remote Code Execution. (FSMD-2021-0016)\n\n- CVE-2021-31888: A vulnerability has been identified in APOGEE MBC (PPC) (BACnet) (All versions), APOGEE MBC (PPC) (P2 Ethernet) (All versions), APOGEE MEC (PPC) (BACnet) (All versions), APOGEE MEC (PPC) (P2 Ethernet) (All versions), APOGEE PXC Compact (BACnet) (All versions < V3.5.4), APOGEE PXC Compact (P2 Ethernet) (All versions < V2.8.19), APOGEE PXC Modular (BACnet) (All versions < V3.5.4), APOGEE PXC Modular (P2 Ethernet) (All versions < V2.8.19), Desigo PXC00-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC00-U (All versions >= V2.3 and < V6.30.016), Desigo PXC001-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC100-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC12-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC128-U (All versions >= V2.3 and < V6.30.016), Desigo PXC200-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC22-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC22.1-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC36.1-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC50-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC64-U (All versions >= V2.3 and < V6.30.016), Desigo PXM20-E (All versions >= V2.3 and < V6.30.016), Nucleus NET (All versions), Nucleus ReadyStart V3 (All versions < V2017.02.4), Nucleus Source Code (All versions), TALON TC Compact (BACnet) (All versions < V3.5.4), TALON TC Modular (BACnet) (All versions < V3.5.4). FTP server does not properly validate the length of the \u201cMKD/XMKD\u201d command, leading to stack-based buffer overflows. This may result in Denial-of-Service conditions and Remote Code Execution. (FSMD-2021-0018)\n\n- CVE-2021-32238: Epic Games / Psyonix Rocket League <=1.95 is affected by Buffer Overflow. Stack-based buffer overflow occurs when Rocket League handles UPK object files that can result in code execution and denial of service scenario.\n\n- CVE-2021-32457: Trend Micro Home Network Security version 6.6.604 and earlier is vulnerable to an iotcl stack-based buffer overflow vulnerability which could allow an attacker to issue a specially crafted iotcl to escalate privileges on affected devices. An attacker must first obtain the ability to execute low-privileged code on the target device in order to exploit this vulnerability.\n\n- CVE-2021-32458: Trend Micro Home Network Security version 6.6.604 and earlier is vulnerable to an iotcl stack-based buffer overflow vulnerability which could allow an attacker to issue a specially crafted iotcl which could lead to code execution on affected devices. An attacker must first obtain the ability to execute low-privileged code on the target device in order to exploit this vulnerability.\n\n- CVE-2021-32943: The affected product is vulnerable to a stack-based buffer overflow, which may allow an attacker to remotely execute arbitrary code on the WebAccess/SCADA (WebAccess/SCADA versions prior to 8.4.5, WebAccess/SCADA versions prior to 9.0.1).\n\n- CVE-2021-33186: SerenityOS in test-crypto.cpp contains a stack buffer overflow which could allow attackers to obtain sensitive information.\n\n- CVE-2021-33265: D-Link DIR-809 devices with firmware through DIR-809Ax_FW1.12WWB03_20190410 were discovered to contain a stack buffer overflow vulnerability in the function FUN_80046eb4 in /formSetPortTr. This vulnerability is triggered via a crafted POST request.\n\n- CVE-2021-33266: D-Link DIR-809 devices with firmware through DIR-809Ax_FW1.12WWB03_20190410 were discovered to contain a stack buffer overflow vulnerability in the function FUN_8004776c in /formVirtualApp. This vulnerability is triggered via a crafted POST request.\n\n- CVE-2021-33267: D-Link DIR-809 devices with firmware through DIR-809Ax_FW1.12WWB03_20190410 were discovered to contain a stack buffer overflow vulnerability in the function FUN_80034d60 in /formStaticDHCP. This vulnerability is triggered via a crafted POST request.\n\n- CVE-2021-33268: D-Link DIR-809 devices with firmware through DIR-809Ax_FW1.12WWB03_20190410 were discovered to contain a stack buffer overflow vulnerability in the function sub_8003183C in /fromLogin. This vulnerability is triggered via a crafted POST request.\n\n- CVE-2021-33269: D-Link DIR-809 devices with firmware through DIR-809Ax_FW1.12WWB03_20190410 were discovered to contain a stack buffer overflow vulnerability in the function FUN_8004776c in /formVirtualServ. This vulnerability is triggered via a crafted POST request.\n\n- CVE-2021-33270: D-Link DIR-809 devices with firmware through DIR-809Ax_FW1.12WWB03_20190410 were discovered to contain a stack buffer overflow vulnerability in the function FUN_800462c4 in /formAdvFirewall. This vulnerability is triggered via a crafted POST request.\n\n- CVE-2021-33271: D-Link DIR-809 devices with firmware through DIR-809Ax_FW1.12WWB03_20190410 were discovered to contain a stack buffer overflow vulnerability in the function sub_80046EB4 in /formSetPortTr. This vulnerability is triggered via a crafted POST request.\n\n- CVE-2021-33274: D-Link DIR-809 devices with firmware through DIR-809Ax_FW1.12WWB03_20190410 were discovered to contain a stack buffer overflow vulnerability in the function FUN_80040af8 in /formWlanSetup. This vulnerability is triggered via a crafted POST request.\n\n- CVE-2021-33362: Stack buffer overflow in the hevc_parse_vps_extension function in MP4Box in GPAC 1.0.1 allows attackers to cause a denial of service or execute arbitrary code via a crafted file.\n\n- CVE-2021-33479: A stack-based buffer overflow vulnerability was discovered in gocr through 0.53-20200802 in measure_pitch() in pgm2asc.c.\n\n- CVE-2021-33481: A stack-based buffer overflow vulnerability was discovered in gocr through 0.53-20200802 in try_to_divide_boxes() in pgm2asc.c.\n\n- CVE-2021-3382: Stack buffer overflow vulnerability in gitea 1.9.0 through 1.13.1 allows remote attackers to cause a denial of service (crash) via vectors related to a file path.\n\n- CVE-2021-33833: ConnMan (aka Connection Manager) 1.30 through 1.39 has a stack-based buffer overflow in uncompress in dnsproxy.c via NAME, RDATA, or RDLENGTH (for A or AAAA).\n\n- CVE-2021-33889: OpenThread wpantund through 2021-07-02 has a stack-based Buffer Overflow because of an inconsistency in the integer data type for metric_len.\n\n- CVE-2021-34343: A stack buffer overflow vulnerability has been reported to affect QNAP device running QTS, QuTScloud, QuTS hero. If exploited, this vulnerability allows attackers to execute arbitrary code. We have already fixed this vulnerability in the following versions of QTS, QuTScloud, QuTS hero: QTS 4.5.4.1715 build 20210630 and later QTS 5.0.0.1716 build 20210701 and later QuTScloud c4.5.6.1755 and later QuTS hero h4.5.4.1771 build 20210825 and later\n\n- CVE-2021-34344: A stack buffer overflow vulnerability has been reported to affect QNAP device running QUSBCam2. If exploited, this vulnerability allows attackers to execute arbitrary code. We have already fixed this vulnerability in the following versions of QUSBCam2: QTS 4.5.4: QUSBCam2 1.1.4 ( 2021/07/30 ) and later QTS 5.0: QUSBCam2 2.0.1 ( 2021/08/03 ) and later QTS 4.3.6: QUSBCam2 1.1.4 ( 2021/07/30 ) and later QTS 4.3.3: QUSBCam2 1.1.4 ( 2021/08/06 ) and later QuTS hero 4.5.3: QUSBCam2 1.1.4 ( 2021/07/30 ) and later\n\n- CVE-2021-34345: A stack buffer overflow vulnerability has been reported to affect QNAP device running NVR Storage Expansion. If exploited, this vulnerability allows attackers to execute arbitrary code. We have already fixed this vulnerability in the following versions of NVR Storage Expansion: NVR Storage Expansion 1.0.6 ( 2021/08/03 ) and later\n\n- CVE-2021-34346: A stack buffer overflow vulnerability has been reported to affect QNAP device running NVR Storage Expansion. If exploited, this vulnerability allows attackers to execute arbitrary code. We have already fixed this vulnerability in the following versions of NVR Storage Expansion: NVR Storage Expansion 1.0.6 ( 2021/08/03 ) and later\n\n- CVE-2021-34813: Matrix libolm before 3.2.3 allows a malicious Matrix homeserver to crash a client (while it is attempting to retrieve an Olm encrypted room key backup from the homeserver) because olm_pk_decrypt has a stack-based buffer overflow. Remote code execution might be possible for some nonstandard build configurations.\n\n- CVE-2021-3500: A flaw was found in djvulibre-3.5.28 and earlier. A Stack overflow in function DJVU::DjVuDocument::get_djvu_file() via crafted djvu file may lead to application crash and other consequences.\n\n- CVE-2021-35267: NTFS-3G versions < 2021.8.22, a stack buffer overflow can occur when correcting differences in the MFT and MFTMirror allowing for code execution or escalation of privileges when setuid-root.\n\n- CVE-2021-35325: A stack overflow in the checkLoginUser function of TOTOLINK A720R A720R_Firmware v4.1.5cu.470_B20200911 allows attackers to cause a denial of service (DOS).\n\n- CVE-2021-35393: Realtek Jungle SDK version v2.x up to v3.4.14B provides a 'WiFi Simple Config' server that implements both UPnP and SSDP protocols. The binary is usually named wscd or mini_upnpd and is the successor to miniigd. The server is vulnerable to a stack buffer overflow vulnerability that is present due to unsafe parsing of the UPnP SUBSCRIBE/UNSUBSCRIBE Callback header. Successful exploitation of this vulnerability allows remote unauthenticated attackers to gain arbitrary code execution on the affected device.\n\n- CVE-2021-35395: Realtek Jungle SDK version v2.x up to v3.4.14B provides an HTTP web server exposing a management interface that can be used to configure the access point. Two versions of this management interface exists: one based on Go-Ahead named webs and another based on Boa named boa. Both of them are affected by these vulnerabilities. Specifically, these binaries are vulnerable to the following issues: - stack buffer overflow in formRebootCheck due to unsafe copy of submit-url parameter - stack buffer overflow in formWsc due to unsafe copy of submit-url parameter - stack buffer overflow in formWlanMultipleAP due to unsafe copy of submit-url parameter - stack buffer overflow in formWlSiteSurvey due to unsafe copy of ifname parameter - stack buffer overflow in formStaticDHCP due to unsafe copy of hostname parameter - stack buffer overflow in formWsc due to unsafe copy of 'peerPin' parameter - arbitrary command execution in formSysCmd via the sysCmd parameter - arbitrary command injection in formWsc via the 'peerPin' parameter Exploitability of identified issues will differ based on what the end vendor/manufacturer did with the Realtek SDK webserver. Some vendors use it as-is, others add their own authentication implementation, some kept all the features from the server, some remove some of them, some inserted their own set of features. However, given that Realtek SDK implementation is full of insecure calls and that developers tends to re-use those examples in their custom code, any binary based on Realtek SDK webserver will probably contains its own set of issues on top of the Realtek ones (if kept). Successful exploitation of these issues allows remote attackers to gain arbitrary code execution on the device.\n\n- CVE-2021-35474: Stack-based Buffer Overflow vulnerability in cachekey plugin of Apache Traffic Server. This issue affects Apache Traffic Server 7.0.0 to 7.1.12, 8.0.0 to 8.1.1, 9.0.0 to 9.0.1.\n\n- CVE-2021-3569: A stack corruption bug was found in libtpms in versions before 0.7.2 and before 0.8.0 while decrypting data using RSA. This flaw could result in a SIGBUS (bad memory access) and termination of swtpm. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-36082: ntop nDPI 3.4 has a stack-based buffer overflow in processClientServerHello.\n\n- CVE-2021-36083: KDE KImageFormats 5.70.0 through 5.81.0 has a stack-based buffer overflow in XCFImageFormat::loadTileRLE.\n\n- CVE-2021-36179: A stack-based buffer overflow in Fortinet FortiWeb version 6.3.14 and below, 6.2.4 and below allows attacker to execute unauthorized code or commands via crafted parameters in CLI command execution\n\n- CVE-2021-36186: A stack-based buffer overflow in Fortinet FortiWeb version 6.4.0, version 6.3.15 and below, 6.2.5 and below allows attacker to execute unauthorized code or commands via crafted HTTP requests\n\n- CVE-2021-36301: Dell iDRAC 9 prior to version 4.40.40.00 and iDRAC 8 prior to version 2.80.80.80 contain a Stack Buffer Overflow in Racadm. An authenticated remote attacker may potentially exploit this vulnerability to control process execution and gain access to the underlying operating system.\n\n- CVE-2021-37232: A stack overflow vulnerability occurs in Atomicparsley 20210124.204813.840499f through APar_read64() in src/util.cpp due to the lack of buffer size of uint32_buffer while reading more bytes in APar_read64.\n\n- CVE-2021-38389: Advantech WebAccess versions 9.02 and prior are vulnerable to a stack-based buffer overflow, which may allow an attacker to remotely execute code.\n\n- CVE-2021-38473: The affected product\u2019s code base doesn\u2019t properly control arguments for specific functions, which could lead to a stack overflow.\n\n- CVE-2021-38522: NETGEAR R6400 devices before 1.0.1.52 are affected by a stack-based buffer overflow by an authenticated user.\n\n- CVE-2021-38523: NETGEAR R6400 devices before 1.0.1.70 are affected by a stack-based buffer overflow by an authenticated user.\n\n- CVE-2021-38524: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects MK62 before 1.0.6.110, MR60 before 1.0.6.110, MS60 before 1.0.6.110, RAX15 before 1.0.2.82, RAX20 before 1.0.2.82, RAX200 before 1.0.3.106, RAX45 before 1.0.2.32, RAX50 before 1.0.2.32, RAX75 before 1.0.3.106, RAX80 before 1.0.3.106, RBK752 before 3.2.16.6, RBR750 before 3.2.16.6, and RBS750 before 3.2.16.6.\n\n- CVE-2021-38525: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects D3600 before 1.0.0.76, D6000 before 1.0.0.76, D6200 before 1.1.00.36, D7000 before 1.0.1.70, EX6200v2 before 1.0.1.78, EX7000 before 1.0.1.78, EX8000 before 1.0.1.186, JR6150 before 1.0.1.18, PR2000 before 1.0.0.28, R6020 before 1.0.0.42, R6050 before 1.0.1.18, R6080 before 1.0.0.42, R6120 before 1.0.0.46, R6220 before 1.1.0.80, R6260 before 1.1.0.64, R6300v2 before 1.0.4.34, R6700 before 1.0.2.6, R6700v2 before 1.2.0.36, R6800 before 1.2.0.36, R6900 before 1.0.2.4, R6900P before 1.3.1.64, R6900v2 before 1.2.0.36, R7000 before 1.0.9.42, R7000P before 1.3.1.64, R7800 before 1.0.2.60, R8900 before 1.0.4.12, R9000 before 1.0.4.12, and XR500 before 2.3.2.40.\n\n- CVE-2021-38684: A stack buffer overflow vulnerability has been reported to affect QNAP NAS running Multimedia Console. If exploited, this vulnerability allows attackers to execute arbitrary code. We have already fixed this vulnerability in the following versions of Multimedia Console: Multimedia Console 1.4.3 ( 2021/10/05 ) and later Multimedia Console 1.5.3 ( 2021/10/05 ) and later\n\n- CVE-2021-3928: vim is vulnerable to Use of Uninitialized Variable\n\n- CVE-2021-39531: An issue was discovered in libslax through v0.22.1. slaxLexer() in slaxlexer.c has a stack-based buffer overflow.\n\n- CVE-2021-39845: Acrobat Reader DC versions 2021.005.20060 (and earlier), 2020.004.30006 (and earlier) and 2017.011.30199 (and earlier) are affected by a stack overflow vulnerability due to insecure handling of a crafted PDF file, potentially resulting in memory corruption in the context of the current user. Exploitation requires user interaction in that a victim must open a crafted PDF file in Acrobat Reader.\n\n- CVE-2021-39846: Acrobat Reader DC versions 2021.005.20060 (and earlier), 2020.004.30006 (and earlier) and 2017.011.30199 (and earlier) are affected by a stack overflow vulnerability due to insecure handling of a crafted PDF file, potentially resulting in memory corruption in the context of the current user. Exploitation requires user interaction in that a victim must open a crafted PDF file in Acrobat Reader.\n\n- CVE-2021-41456: There is a stack buffer overflow in MP4Box v1.0.1 at src/filters/dmx_nhml.c:1004 in the nhmldmx_send_sample() function szXmlTo parameter which leads to a denial of service vulnerability.\n\n- CVE-2021-41457: There is a stack buffer overflow in MP4Box 1.1.0 at src/filters/dmx_nhml.c in nhmldmx_init_parsing which leads to a denial of service vulnerability.\n\n- CVE-2021-41459: There is a stack buffer overflow in MP4Box v1.0.1 at src/filters/dmx_nhml.c:1008 in the nhmldmx_send_sample() function szXmlFrom parameter which leads to a denial of service vulnerability.\n\n- CVE-2021-42012: A stack-based buffer overflow vulnerability in Trend Micro Apex One, Apex One as a Service and Worry-Free Business Security 10.0 SP1 could allow a local attacker to escalate privileges on affected installations. Please note: an attacker must first obtain the ability to execute low-privileged code on the target system in order to exploit this vulnerability.\n\n- CVE-2021-44352: A Stack-based Buffer Overflow vulnerability exists in the Tenda AC15 V15.03.05.18_multi device via the list parameter in a post request in goform/SetIpMacBind.\n\n- CVE-2020-35492: A flaw was found in cairo's image-compositor.c in all versions prior to 1.17.4. This flaw allows an attacker who can provide a crafted input file to cairo's image-compositor (for example, by convincing a user to open a file in an application using cairo, or if an application uses cairo on untrusted input) to cause a stack buffer overflow -> out-of-bounds WRITE. The highest impact from this vulnerability is to confidentiality, integrity, as well as system availability.\n\n- CVE-2021-25217: In ISC DHCP 4.1-ESV-R1 -> 4.1-ESV-R16, ISC DHCP 4.4.0 -> 4.4.2 (Other branches of ISC DHCP (i.e., releases in the 4.0.x series or lower and releases in the 4.3.x series) are beyond their End-of-Life (EOL) and no longer supported by ISC. From inspection it is clear that the defect is also present in releases from those series, but they have not been officially tested for the vulnerability), The outcome of encountering the defect while reading a lease that will trigger it varies, according to: the component being affected (i.e., dhclient or dhcpd) whether the package was built as a 32-bit or 64-bit binary whether the compiler flag -fstack-protection-strong was used when compiling In dhclient, ISC has not successfully reproduced the error on a 64-bit system. However, on a 32-bit system it is possible to cause dhclient to crash when reading an improper lease, which could cause network connectivity problems for an affected system due to the absence of a running DHCP client process. In dhcpd, when run in DHCPv4 or DHCPv6 mode: if the dhcpd server binary was built for a 32-bit architecture AND the -fstack-protection-strong flag was specified to the compiler, dhcpd may exit while parsing a lease file containing an objectionable lease, resulting in lack of service to clients. Additionally, the offending lease and the lease immediately following it in the lease database may be improperly deleted. if the dhcpd server binary was built for a 64-bit architecture OR if the -fstack-protection-strong compiler flag was NOT specified, the crash will not occur, but it is possible for the offending lease and the lease which immediately followed it to be improperly deleted.\n\n- CVE-2020-14107: A stack overflow in the HTTP server of Cast can be exploited to make the app crash in LAN.\n\n- CVE-2021-38427: RTI Connext DDS Professional and Connext DDS Secure Versions 4.2.x to 6.1.0 are vulnerable to a stack-based buffer overflow, which may allow a local attacker to execute arbitrary code.\n\n- CVE-2021-42529: XMP Toolkit SDK version 2021.07 (and earlier) is affected by a stack-based buffer overflow vulnerability potentially resulting in arbitrary code execution in the context of the current user. Exploitation requires user interaction in that a victim must open a crafted file.\n\n- CVE-2021-42530: XMP Toolkit SDK version 2021.07 (and earlier) is affected by a stack-based buffer overflow vulnerability potentially resulting in arbitrary code execution in the context of the current user. Exploitation requires user interaction in that a victim must open a crafted file.\n\n- CVE-2021-42531: XMP Toolkit SDK version 2021.07 (and earlier) is affected by a stack-based buffer overflow vulnerability potentially resulting in arbitrary code execution in the context of the current user. Exploitation requires user interaction in that a victim must open a crafted file.\n\n- CVE-2020-0938: A remote code execution vulnerability exists in Microsoft Windows when the Windows Adobe Type Manager Library improperly handles a specially-crafted multi-master font - Adobe Type 1 PostScript format.For all systems except Windows 10, an attacker who successfully exploited the vulnerability could execute code remotely, aka 'Adobe Font Manager Library Remote Code Execution Vulnerability'. This CVE ID is unique from CVE-2020-1020.\n\n- CVE-2020-14871: Vulnerability in the Oracle Solaris product of Oracle Systems (component: Pluggable authentication module). Supported versions that are affected are 10 and 11. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Solaris. While the vulnerability is in Oracle Solaris, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Oracle Solaris. Note: This CVE is not exploitable for Solaris 11.1 and later releases, and ZFSSA 8.7 and later releases, thus the CVSS Base Score is 0.0. CVSS 3.1 Base Score 10.0 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H).\n\n- CVE-2020-5735: Amcrest cameras and NVR are vulnerable to a stack-based buffer overflow over port 37777. An authenticated remote attacker can abuse this issue to crash the device and possibly execute arbitrary code.\n\n- CVE-2020-1020: A remote code execution vulnerability exists in Microsoft Windows when the Windows Adobe Type Manager Library improperly handles a specially-crafted multi-master font - Adobe Type 1 PostScript format.For all systems except Windows 10, an attacker who successfully exploited the vulnerability could execute code remotely, aka 'Adobe Font Manager Library Remote Code Execution Vulnerability'. This CVE ID is unique from CVE-2020-0938.\n\n- CVE-2021-20038: A Stack-based buffer overflow vulnerability in SMA100 Apache httpd server's mod_cgi module environment variables allows a remote unauthenticated attacker to potentially execute code as a 'nobody' user in the appliance. This vulnerability affected SMA 200, 210, 400, 410 and 500v appliances firmware 10.2.0.8-37sv, 10.2.1.1-19sv, 10.2.1.2-24sv and earlier versions.\n\n- CVE-2021-20046: A Stack-based buffer overflow in the SonicOS HTTP Content-Length response header allows a remote authenticated attacker to cause Denial of Service (DoS) and potentially results in code execution in the firewall. This vulnerability affected SonicOS Gen 5, Gen 6 and Gen 7 firmware versions.\n\n- CVE-2021-20048: A Stack-based buffer overflow in the SonicOS SessionID HTTP response header allows a remote authenticated attacker to cause Denial of Service (DoS) and potentially results in code execution in the firewall. This vulnerability affected SonicOS Gen 5, Gen 6 and Gen 7 firmware versions.\n\n- CVE-2021-21887: A stack-based buffer overflow vulnerability exists in the Web Manager SslGenerateCSR functionality of Lantronix PremierWave 2050 8.9.0.0R4 (in QEMU). A specially crafted HTTP request can lead to remote code execution. An attacker can make an authenticated HTTP request to trigger this vulnerability.\n\n- CVE-2021-21889: A stack-based buffer overflow vulnerability exists in the Web Manager Ping functionality of Lantronix PremierWave 2050 8.9.0.0R4 (in QEMU). A specially crafted HTTP request can lead to remote code execution. An attacker can make an authenticated HTTP request to trigger this vulnerability.\n\n- CVE-2021-21890: A stack-based buffer overflow vulnerability exists in the Web Manager FsBrowseClean functionality of Lantronix PremierWave 2050 8.9.0.0R4 (in QEMU). A specially crafted HTTP request can lead to remote code execution in the vulnerable portion of the branch (deletedir). An attacker can make an authenticated HTTP request to trigger this vulnerability.\n\n- CVE-2021-21901: A stack-based buffer overflow vulnerability exists in the CMA check_udp_crc function of Garrett Metal Detectors\u2019 iC Module CMA Version 5.0. A specially-crafted packet can lead to a stack-based buffer overflow during a call to memcpy. An attacker can send a malicious packet to trigger this vulnerability.\n\n- CVE-2021-21961: A stack-based buffer overflow vulnerability exists in the NBNS functionality of Sealevel Systems, Inc. SeaConnect 370W v1.3.34. A specially-crafted network packet can lead to remote code execution. An attacker can send a malicious packet to trigger this vulnerability.\n\n- CVE-2021-23206: A flaw was found in htmldoc in v1.9.12 and prior. A stack buffer overflow in parse_table() in ps-pdf.cxx may lead to execute arbitrary code and denial of service.\n\n- CVE-2021-26112: Multiple stack-based buffer overflow vulnerabilities [CWE-121] both in network daemons and in the command line interpreter of FortiWAN before 4.5.9 may allow an unauthenticated attacker to potentially corrupt control data in memory and execute arbitrary code via specifically crafted requests.\n\n- CVE-2021-26567: Stack-based buffer overflow vulnerability in frontend/main.c in faad2 before 2.2.7.1 allow local attackers to execute arbitrary code via filename and pathname options.\n\n- CVE-2021-26727: Multiple command injections and stack-based buffer overflows vulnerabilities in the SubNet_handler_func function of spx_restservice allow an attacker to execute arbitrary code with the same privileges as the server user (root). This issue affects: Lanner Inc IAC-AST2500A standard firmware version 1.10.0.\n\n- CVE-2021-26728: Command injection and stack-based buffer overflow vulnerabilities in the KillDupUsr_func function of spx_restservice allow an attacker to execute arbitrary code with the same privileges as the server user (root). This issue affects: Lanner Inc IAC-AST2500A standard firmware version 1.10.0.\n\n- CVE-2021-26729: Command injection and multiple stack-based buffer overflows vulnerabilities in the Login_handler_func function of spx_restservice allow an attacker to execute arbitrary code with the same privileges as the server user (root). This issue affects: Lanner Inc IAC-AST2500A standard firmware version 1.10.0.\n\n- CVE-2021-26730: A stack-based buffer overflow vulnerability in a subfunction of the Login_handler_func function of spx_restservice allows an attacker to execute arbitrary code with the same privileges as the server user (root). This issue affects: Lanner Inc IAC-AST2500A standard firmware version 1.10.0.\n\n- CVE-2021-26731: Command injection and multiple stack-based buffer overflows vulnerabilities in the modifyUserb_func function of spx_restservice allow an attacker to execute arbitrary code with the same privileges as the server user (root). This issue affects: Lanner Inc IAC-AST2500A standard firmware version 1.10.0.\n\n- CVE-2021-31578: In Boa, there is a possible escalation of privilege due to a stack buffer overflow. This could lead to remote escalation of privilege from a proximal attacker with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: A20210008; Issue ID: OSBNB00123241.\n\n- CVE-2021-32435: Stack-based buffer overflow in the function get_key in parse.c of abcm2ps v8.14.11 allows remote attackers to cause a Denial of Service (DoS) via unspecified vectors.\n\n- CVE-2021-32941: Annke N48PBB (Network Video Recorder) products of version 3.4.106 build 200422 and prior are vulnerable to a stack-based buffer overflow, which allows an unauthorized remote attacker to execute arbitrary code with the same privileges as the server user (root).\n\n- CVE-2021-33019: A stack-based buffer overflow vulnerability in Delta Electronics DOPSoft Version 4.00.11 and prior may be exploited by processing a specially crafted project file, which may allow an attacker to execute arbitrary code.\n\n- CVE-2021-33438: An issue was discovered in mjs (mJS: Restricted JavaScript engine), ES6 (JavaScript version 6). There is stack buffer overflow in json_parse_array() in mjs.c.\n\n- CVE-2021-33443: An issue was discovered in mjs (mJS: Restricted JavaScript engine), ES6 (JavaScript version 6). There is stack buffer overflow in mjs_execute() in mjs.c.\n\n- CVE-2021-33448: An issue was discovered in mjs(mJS: Restricted JavaScript engine), ES6 (JavaScript version 6). There is stack buffer overflow at 0x7fffe9049390.\n\n- CVE-2021-33545: Multiple camera devices by UDP Technology, Geutebr\u00fcck and other vendors are vulnerable to a stack-based buffer overflow condition in the counter parameter which may allow an attacker to remotely execute arbitrary code.\n\n- CVE-2021-33945: RICOH Printer series SP products 320DN, SP 325DNw, SP 320SN, SP 320SFN, SP 325SNw, SP 325SFNw, SP 330SN, Aficio SP 3500SF, SP 221S, SP 220SNw, SP 221SNw, SP 221SF, SP 220SFNw, SP 221SFNw v1.06 were discovered to contain a stack buffer overflow in the file /etc/wpa_supplicant.conf. This vulnerability allows attackers to cause a Denial of Service (DoS) via crafted overflow data.\n\n- CVE-2021-3434: Stack based buffer overflow in le_ecred_conn_req(). Zephyr versions >= v2.5.0 Stack-based Buffer Overflow (CWE-121). For more information, see https://github.com/zephyrproject-rtos/zephyr/security/advisories/GHSA-8w87-6rfp-cfrm\n\n- CVE-2021-3611: A stack overflow vulnerability was found in the Intel HD Audio device (intel-hda) of QEMU. A malicious guest could use this flaw to crash the QEMU process on the host, resulting in a denial of service condition. The highest threat from this vulnerability is to system availability. This flaw affects QEMU versions prior to 7.0.0.\n\n- CVE-2021-36193: Multiple stack-based buffer overflows in the command line interpreter of FortiWeb before 6.4.2 may allow an authenticated attacker to achieve arbitrary code execution via specially crafted commands.\n\n- CVE-2021-36194: Multiple stack-based buffer overflows in the API controllers of FortiWeb 6.4.1, 6.4.0, and 6.3.0 through 6.3.15 may allow an authenticated attacker to achieve arbitrary code execution via specially crafted requests.\n\n- CVE-2021-36347: iDRAC9 versions prior to 5.00.20.00 and iDRAC8 versions prior to 2.82.82.82 contain a stack-based buffer overflow vulnerability. An authenticated remote attacker with high privileges could potentially exploit this vulnerability to control process execution and gain access to the iDRAC operating system.\n\n- CVE-2021-37014: There is a Stack-based Buffer Overflow vulnerability in Huawei Smartphone.Successful exploitation of this vulnerability may lead to device cannot be used properly.\n\n- CVE-2021-37020: There is a Stack-based Buffer Overflow vulnerability in Huawei Smartphone.Successful exploitation of this vulnerability may lead to Out-of-bounds read.\n\n- CVE-2021-37021: There is a Stack-based Buffer Overflow vulnerability in Huawei Smartphone.Successful exploitation of this vulnerability may lead to Out-of-bounds read.\n\n- CVE-2021-3826: Heap/stack buffer overflow in the dlang_lname function in d-demangle.c in libiberty allows attackers to potentially cause a denial of service (segmentation fault and crash) via a crafted mangled symbol.\n\n- CVE-2021-38682: A stack buffer overflow vulnerability has been reported to affect QNAP device running QVR Elite, QVR Pro, QVR Guard. If exploited, this vulnerability allows attackers to execute arbitrary code. We have already fixed this vulnerability in the following versions of QVR Elite, QVR Pro, QVR Guard: QuTS hero h5.0.0: QVR Elite 2.1.4.0 (2021/12/06) and later QuTS hero h4.5.4: QVR Elite 2.1.4.0 (2021/12/06) and later QTS 5.0.0: QVR Elite 2.1.4.0 (2021/12/06) and later QTS 4.5.4: QVR Elite 2.1.4.0 (2021/12/06) and later QTS 4.5.4: QVR Pro 2.1.3.0 (2021/12/06) and later QTS 5.0.0: QVR Pro 2.1.3.0 (2021/12/06) and later QTS 4.5.4: QVR Guard 2.1.3.0 and later QTS 5.0.0: QVR Guard 2.1.3.0 and later\n\n- CVE-2021-38690: A stack buffer overflow vulnerability has been reported to affect QNAP device running QVR Elite, QVR Pro, QVR Guard. If exploited, this vulnerability allows attackers to execute arbitrary code. We have already fixed this vulnerability in the following versions of QVR Elite, QVR Pro, QVR Guard: QuTS hero h5.0.0: QVR Elite 2.1.4.0 (2021/12/06) and later QuTS hero h4.5.4: QVR Elite 2.1.4.0 (2021/12/06) and later QTS 5.0.0: QVR Elite 2.1.4.0 (2021/12/06) and later QTS 4.5.4: QVR Elite 2.1.4.0 (2021/12/06) and later QTS 4.5.4: QVR Pro 2.1.3.0 (2021/12/06) and later QTS 5.0.0: QVR Pro 2.1.3.0 (2021/12/06) and later QTS 4.5.4: QVR Guard 2.1.3.0 (2021/12/06) and later QTS 5.0.0: QVR Guard 2.1.3.0 (2021/12/06) and later\n\n- CVE-2021-39048: IBM Spectrum Protect Client 7.1 and 8.1 is vulnerable to a stack based buffer overflow, caused by improper bounds checking. A local attacker could exploit this vulnerability and cause a denial of service. IBM X-Force ID: 214438.\n\n- CVE-2021-39049: IBM i2 Analyst's Notebook 9.2.0, 9.2.1, and 9.2.2 is vulnerable to a stack-based buffer overflow, caused by improper bounds checking. A local attacker could overflow a buffer and gain lower level privileges. IBM X-Force ID: 214439.\n\n- CVE-2021-39050: IBM i2 Analyst's Notebook 9.2.0, 9.2.1, and 9.2.2 is vulnerable to a stack-based buffer overflow, caused by improper bounds checking. A local attacker could overflow a buffer and gain lower level privileges. IBM X-Force ID: 214440.\n\n- CVE-2021-39306: A stack buffer overflow was discovered on Realtek RTL8195AM device before 2.0.10, it exists in the client code when an attacker sends a big size Authentication challenge text in WEP security.\n\n- CVE-2021-39990: The screen lock module has a Stack-based Buffer Overflow vulnerability.Successful exploitation of this vulnerability may affect user experience.\n\n- CVE-2021-40057: There is a heap-based and stack-based buffer overflow vulnerability in the video framework. Successful exploitation of this vulnerability may affect availability.\n\n- CVE-2021-40556: A stack overflow vulnerability exists in the httpd service in ASUS RT-AX56U Router Version 3.0.0.4.386.44266. This vulnerability is caused by the strcat function called by \"caupload\" input handle function allowing the user to enter 0xFFFF bytes into the stack. This vulnerability allows an attacker to execute commands remotely. The vulnerability requires authentication.\n\n- CVE-2021-41027: A stack-based buffer overflow in Fortinet FortiWeb version 6.4.1 and 6.4.0, allows an authenticated attacker to execute unauthorized code or commands via crafted certificates loaded into the device.\n\n- CVE-2021-41458: In GPAC MP4Box v1.1.0, there is a stack buffer overflow at src/utils/error.c:1769 which leads to a denial of service vulnerability.\n\n- CVE-2021-42059: An issue was discovered in Insyde InsydeH2O Kernel 5.0 before 05.08.41, Kernel 5.1 before 05.16.41, Kernel 5.2 before 05.26.41, Kernel 5.3 before 05.35.41, and Kernel 5.4 before 05.42.20. A stack-based buffer overflow leads toarbitrary code execution in UEFI DisplayTypeDxe DXE driver.\n\n- CVE-2021-42756: Multiple stack-based buffer overflow vulnerabilities [CWE-121] in the proxy daemon of FortiWeb 5.x all versions, 6.0.7 and below, 6.1.2 and below, 6.2.6 and below, 6.3.16 and below, 6.4 all versions may allow an unauthenticated remote attacker to achieve arbitrary code execution via specifically crafted HTTP requests.\n\n- CVE-2021-42757: A buffer overflow [CWE-121] in the TFTP client library of FortiOS before 6.4.7 and FortiOS 7.0.0 through 7.0.2, may allow an authenticated local attacker to achieve arbitrary code execution via specially crafted command line arguments.\n\n- CVE-2021-42782: Stack buffer overflow issues were found in Opensc before version 0.22.0 in various places that could potentially crash programs using the library.\n\n- CVE-2021-43299: Stack overflow in PJSUA API when calling pjsua_player_create. An attacker-controlled 'filename' argument may cause a buffer overflow since it is copied to a fixed-size stack buffer without any size validation.\n\n- CVE-2021-43300: Stack overflow in PJSUA API when calling pjsua_recorder_create. An attacker-controlled 'filename' argument may cause a buffer overflow since it is copied to a fixed-size stack buffer without any size validation.\n\n- CVE-2021-43301: Stack overflow in PJSUA API when calling pjsua_playlist_create. An attacker-controlled 'file_names' argument may cause a buffer overflow since it is copied to a fixed-size stack buffer without any size validation.\n\n- CVE-2021-43556: FATEK WinProladder Versions 3.30_24518 and prior are vulnerable to a stack-based buffer overflow while processing project files, which may allow an attacker to execute arbitrary code.\n\n- CVE-2021-43579: A stack-based buffer overflow in image_load_bmp() in HTMLDOC <= 1.9.13 results in remote code execution if the victim converts an HTML document linking to a crafted BMP file.\n\n- CVE-2021-43983: WECON LeviStudioU Versions 2019-09-21 and prior are vulnerable to multiple stack-based buffer overflow instances while parsing project files, which may allow an attacker to execute arbitrary code.\n\n- CVE-2021-44170: A stack-based buffer overflow vulnerability [CWE-121] in the command line interpreter of FortiOS before 7.0.4 and FortiProxy before 2.0.8 may allow an authenticated attacker to execute unauthorized code or commands via specially crafted command line arguments.\n\n- CVE-2021-44435: A vulnerability has been identified in JT Utilities (All versions < V13.1.1.0), JTTK (All versions < V11.1.1.0). JTTK library in affected products is vulnerable to stack based buffer overflow while parsing specially crafted JT files. An attacker could leverage this vulnerability to execute code in the context of the current process. (ZDI-CAN-14903)\n\n- CVE-2021-44703: Acrobat Reader DC version 21.007.20099 (and earlier), 20.004.30017 (and earlier) and 17.011.30204 (and earlier) are affected by a stack buffer overflow vulnerability due to insecure handling of a crafted file, potentially resulting in arbitrary code execution in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file.\n\n- CVE-2021-45258: A stack overflow vulnerability exists in gpac 1.1.0 via the gf_bifs_dec_proto_list function, which causes a segmentation fault and application crash.\n\n- CVE-2021-45573: Certain NETGEAR devices are affected by a stack-based buffer overflow by an unauthenticated attacker. This affects R6260 before 1.1.0.76, R6800 before 1.2.0.62, R6700v2 before 1.2.0.62, R6900v2 before 1.2.0.62, R7450 before 1.2.0.62, AC2100 before 1.2.0.62, AC2400 before 1.2.0.62, and AC2600 before 1.2.0.62.\n\n- CVE-2021-45604: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects CBR750 before 3.2.18.2, D6220 before 1.0.0.68, D6400 before 1.0.0.102, D8500 before 1.0.3.60, LAX20 before 1.1.6.28, MK62 before 1.0.6.116, MR60 before 1.0.6.116, MS60 before 1.0.6.116, R6300v2 before 1.0.4.50, R6400 before 1.0.1.68, R6400v2 before 1.0.4.118, R6700v3 before 1.0.4.118, R6900P before 1.3.3.140, R7000 before 1.0.11.116, R7000P before 1.3.3.140, R7850 before 1.0.5.68, R7900 before 1.0.4.38, R7900P before 1.4.2.84, R7960P before 1.4.2.84, R8000 before 1.0.4.68, R8000P before 1.4.2.84, RAX15 before 1.0.3.96, RAX20 before 1.0.3.96, RAX200 before 1.0.4.120, RAX35v2 before 1.0.3.96, RAX40v2 before 1.0.3.96, RAX43 before 1.0.3.96, RAX45 before 1.0.3.96, RAX50 before 1.0.3.96, RAX75 before 1.0.4.120, RAX80 before 1.0.4.120, RBK752 before 3.2.17.12, RBK852 before 3.2.17.12, RBR750 before 3.2.17.12, RBR850 before 3.2.17.12, RBS750 before 3.2.17.12, RBS850 before 3.2.17.12, RS400 before 1.5.1.80, and XR1000 before 1.0.0.58.\n\n- CVE-2021-45605: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects R6400 before 1.0.1.68, R7000 before 1.0.11.116, R6900P before 1.3.3.140, R7000P before 1.3.3.140, R7900 before 1.0.4.38, RAX75 before 1.0.3.102, RAX80 before 1.0.3.102, and XR300 before 1.0.3.50.\n\n- CVE-2021-45606: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects R6400 before 1.0.1.70, R7000 before 1.0.11.126, R7900 before 1.0.4.46, R7900P before 1.4.2.84, R7960P before 1.4.2.84, R8000 before 1.0.4.74, R8000P before 1.4.2.84, RAX200 before 1.0.4.120, RS400 before 1.5.1.80, R6400v2 before 1.0.4.118, R7000P before 1.3.3.140, RAX80 before 1.0.4.120, R6700v3 before 1.0.4.118, R6900P before 1.3.3.140, and RAX75 before 1.0.4.120.\n\n- CVE-2021-45607: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects R6400v2 before 1.0.4.118, R6700v3 before 1.0.4.118, R6900P before 1.3.3.140, R7000 before 1.0.11.126, R7000P before 1.3.3.140, RAX200 before 1.0.5.126, RAX75 before 1.0.5.126, and RAX80 before 1.0.5.126.\n\n- CVE-2021-45636: NETGEAR D7000 devices before 1.0.1.82 are affected by a stack-based buffer overflow by an unauthenticated attacker.\n\n- CVE-2021-45637: Certain NETGEAR devices are affected by a stack-based buffer overflow by an unauthenticated attacker. This affects R6260 before 1.1.0.76, R6800 before 1.2.0.62, R6700v2 before 1.2.0.62, R6900v2 before 1.2.0.62, R7450 before 1.2.0.62, AC2100 before 1.2.0.62, AC2400 before 1.2.0.62, and AC2600 before 1.2.0.62.\n\n- CVE-2021-45638: Certain NETGEAR devices are affected by a stack-based buffer overflow by an unauthenticated attacker. This affects D6220 before 1.0.0.68, D6400 before 1.0.0.102, D7000v2 before 1.0.0.74, D8500 before 1.0.3.60, DC112A before 1.0.0.56, R6300v2 before 1.0.4.50, R6400 before 1.0.1.68, R7000 before 1.0.11.116, R7100LG before 1.0.0.70, RBS40V before 2.6.2.8, RBW30 before 2.6.2.2, RS400 before 1.5.1.80, R7000P before 1.3.2.132, and R6900P before 1.3.2.132.\n\n- CVE-2021-45833: A Stack-based Buffer Overflow Vulnerability exists in HDF5 1.13.1-1 via the H5D__create_chunk_file_map_hyper function in /hdf5/src/H5Dchunk.c, which causes a Denial of Service (context-dependent).\n\n- CVE-2021-45907: An issue was discovered in gif2apng 1.9. There is a stack-based buffer overflow involving a for loop. An attacker has little influence over the data written to the stack, making it unlikely that the flow of control can be subverted.\n\n- CVE-2021-45908: An issue was discovered in gif2apng 1.9. There is a stack-based buffer overflow involving a while loop. An attacker has little influence over the data written to the stack, making it unlikely that the flow of control can be subverted.\n\n- CVE-2021-45926: MDB Tools (aka mdbtools) 0.9.2 has a stack-based buffer overflow (at 0x7ffd0c689be0) in mdb_numeric_to_string (called from mdb_xfer_bound_data and _mdb_attempt_bind).\n\n- CVE-2021-45927: MDB Tools (aka mdbtools) 0.9.2 has a stack-based buffer overflow (at 0x7ffd6e029ee0) in mdb_numeric_to_string (called from mdb_xfer_bound_data and _mdb_attempt_bind).\n\n- CVE-2021-45958: UltraJSON (aka ujson) through 5.1.0 has a stack-based buffer overflow in Buffer_AppendIndentUnchecked (called from encode). Exploitation can, for example, use a large amount of indentation.\n\n- CVE-2021-45988: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function formAddDnsForward. This vulnerability allows attackers to cause a Denial of Service (DoS) via the DnsForwardRule parameter.\n\n- CVE-2021-45989: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function guestWifiRuleRefresh. This vulnerability allows attackers to cause a Denial of Service (DoS) via the qosGuestUpstream and qosGuestDownstream parameters.\n\n- CVE-2021-45991: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function formAddVpnUsers. This vulnerability allows attackers to cause a Denial of Service (DoS) via the vpnUsers parameter.\n\n- CVE-2021-45992: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function formSetQvlanList. This vulnerability allows attackers to cause a Denial of Service (DoS) via the qvlanName parameter.\n\n- CVE-2021-45993: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function formIPMacBindModify. This vulnerability allows attackers to cause a Denial of Service (DoS) via the IPMacBindRuleIP and IPMacBindRuleMac parameters.\n\n- CVE-2021-45994: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function formDelDhcpRule. This vulnerability allows attackers to cause a Denial of Service (DoS) via the delDhcpIndex parameter.\n\n- CVE-2021-45995: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function formSetStaticRoute. This vulnerability allows attackers to cause a Denial of Service (DoS) via the staticRouteNet, staticRouteMask, and staticRouteGateway parameters.\n\n- CVE-2021-45996: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function formSetPortMapping. This vulnerability allows attackers to cause a Denial of Service (DoS) via the portMappingServer, portMappingProtocol, portMappingWan, porMappingtInternal, and portMappingExternal parameters.\n\n- CVE-2021-45997: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function formSetPortMapping. This vulnerability allows attackers to cause a Denial of Service (DoS) via the portMappingServer, portMappingProtocol, portMappingWan, porMappingtInternal, and portMappingExternal parameters.\n\n- CVE-2021-46238: GPAC v1.1.0 was discovered to contain a stack overflow via the function gf_node_get_name () at scenegraph/base_scenegraph.c. This vulnerability can lead to a program crash, causing a Denial of Service (DoS).\n\n- CVE-2021-46262: Tenda AC Series Router AC11_V02.03.01.104_CN was discovered to contain a stack buffer overflow in the PPPoE module. This vulnerability allows attackers to cause a Denial of Service (DoS) via crafted overflow data.\n\n- CVE-2021-46263: Tenda AC Series Router AC11_V02.03.01.104_CN was discovered to contain a stack buffer overflow in the wifiTime module. This vulnerability allows attackers to cause a Denial of Service (DoS) via crafted overflow data.\n\n- CVE-2021-46264: Tenda AC Series Router AC11_V02.03.01.104_CN was discovered to contain a stack buffer overflow in the onlineList module. This vulnerability allows attackers to cause a Denial of Service (DoS) via crafted overflow data.\n\n- CVE-2021-46265: Tenda AC Series Router AC11_V02.03.01.104_CN was discovered to contain a stack buffer overflow in the wanBasicCfg module. This vulnerability allows attackers to cause a Denial of Service (DoS) via crafted overflow data.\n\n- CVE-2021-46321: Tenda AC Series Router AC11_V02.03.01.104_CN was discovered to contain a stack buffer overflow in the wifiBasicCfg module. This vulnerability allows attackers to cause a Denial of Service (DoS) via crafted overflow data.\n\n- CVE-2021-46324: Espruino 2v11.251 was discovered to contain a stack buffer overflow via src/jsvar.c in jsvNewFromString.\n\n- CVE-2021-46325: Espruino 2v10.246 was discovered to contain a stack buffer overflow via src/jsutils.c in vcbprintf.\n\n- CVE-2021-46334: Moddable SDK v11.5.0 was discovered to contain a stack buffer overflow via the component __interceptor_strcat.\n\n- CVE-2021-46393: There is a stack buffer overflow vulnerability in the formSetPPTPServer function of Tenda-AX3 router V16.03.12.10_CN. The v10 variable is directly retrieved from the http request parameter startIp. Then v10 will be splice to stack by function sscanf without any security check,which causes stack overflow. By POSTing the page /goform/SetPptpServerCfg with proper startIp, the attacker can easily perform remote code execution with carefully crafted overflow data.\n\n- CVE-2021-46394: There is a stack buffer overflow vulnerability in the formSetPPTPServer function of Tenda-AX3 router V16.03.12.10_CN. The v13 variable is directly retrieved from the http request parameter startIp. Then v13 will be splice to stack by function sscanf without any security check, which causes stack overflow. By POSTing the page /goform/SetPptpServerCfg with proper startIp, the attacker can easily perform remote code execution with carefully crafted overflow data.\n\n- CVE-2021-46408: Tenda AX12 v22.03.01.21 was discovered to contain a stack buffer overflow in the function sub_422CE4. This vulnerability allows attackers to cause a Denial of Service (DoS) via the strcpy parameter.\n\n- CVE-2021-46699: A vulnerability has been identified in Simcenter Femap (All versions < V2022.1.1). Affected application contains a stack based buffer overflow vulnerability while parsing specially crafted BDF files. This could allow an attacker to execute code in the context of the current process. (ZDI-CAN-15061)\n\n- CVE-2022-0435: A stack overflow flaw was found in the Linux kernel's TIPC protocol functionality in the way a user sends a packet with malicious content where the number of domain member nodes is higher than the 64 allowed. This flaw allows a remote user to crash the system or possibly escalate their privileges if they have access to the TIPC network.\n\n- CVE-2022-0903: A call stack overflow bug in the SAML login feature in Mattermost server in versions up to and including 6.3.2 allows an attacker to crash the server via submitting a maliciously crafted POST body.\n\n- CVE-2022-0904: A stack overflow bug in the document extractor in Mattermost Server in versions up to and including 6.3.2 allows an attacker to crash the server via submitting a maliciously crafted Apple Pages document.\n\n- CVE-2022-1068: Modbus Tools Modbus Slave (versions 7.4.2 and prior) is vulnerable to a stack-based buffer overflow in the registration field. This may cause the program to crash when a long character string is used.\n\n- CVE-2022-1211: A vulnerability classified as critical has been found in tildearrow Furnace dev73. This affects the FUR to VGM converter in console mode which causes stack-based overflows and crashes. It is possible to initiate the attack remotely but it requires user-interaction. A POC has been disclosed to the public and may be used.\n\n- CVE-2022-1888: Alpha7 PC Loader (All versions) is vulnerable to a stack-based buffer overflow while processing a specifically crafted project file, which may allow an attacker to execute arbitrary code.\n\n- CVE-2022-20030: In vow driver, there is a possible out of bounds write due to a stack-based buffer overflow. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS05837793; Issue ID: ALPS05837793.\n\n- CVE-2022-20040: In power_hal_manager_service, there is a possible permission bypass due to a stack-based buffer overflow. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS06219150; Issue ID: ALPS06219150.\n\n- CVE-2022-20105: In MM service, there is a possible out of bounds write due to a stack-based buffer overflow. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: DTV03330460; Issue ID: DTV03330460.\n\n- CVE-2022-20108: In voice service, there is a possible out of bounds write due to a stack-based buffer overflow. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: DTV03330702; Issue ID: DTV03330702.\n\n- CVE-2022-25308: A stack-based buffer overflow flaw was found in the Fribidi package. This flaw allows an attacker to pass a specially crafted file to the Fribidi application, which leads to a possible memory leak or a denial of service.\n\n- CVE-2022-25427: Tenda AC9 v15.03.2.21 was discovered to contain a stack overflow via the schedendtime parameter in the openSchedWifi function.\n\n- CVE-2022-25428: Tenda AC9 v15.03.2.21 was discovered to contain a stack overflow via the deviceId parameter in the saveparentcontrolinfo function.\n\n- CVE-2022-25429: Tenda AC9 v15.03.2.21 was discovered to contain a buffer overflow via the time parameter in the saveparentcontrolinfo function.\n\n- CVE-2022-25431: Tenda AC9 v15.03.2.21 was discovered to contain multiple stack overflows via the NPTR, V12, V10 and V11 parameter in the Formsetqosband function.\n\n- CVE-2022-25433: Tenda AC9 v15.03.2.21 was discovered to contain a stack overflow via the urls parameter in the saveparentcontrolinfo function.\n\n- CVE-2022-25434: Tenda AC9 v15.03.2.21 was discovered to contain a stack overflow via the firewallen parameter in the SetFirewallCfg function.\n\n- CVE-2022-25435: Tenda AC9 v15.03.2.21 was discovered to contain a stack overflow via the list parameter in the SetStaticRoutecfg function.\n\n- CVE-2022-25437: Tenda AC9 v15.03.2.21 was discovered to contain a stack overflow via the list parameter in the SetVirtualServerCfg function.\n\n- CVE-2022-25439: Tenda AC9 v15.03.2.21 was discovered to contain a stack overflow via the list parameter in the SetIpMacBind function.\n\n- CVE-2022-25440: Tenda AC9 v15.03.2.21 was discovered to contain a stack overflow via the ntpserver parameter in the SetSysTimeCfg function.\n\n- CVE-2022-28556: Tenda AC15 US_AC15V1.0BR_V15.03.05.20_multi_TDE01.bin is vulnerable to Buffer Overflow. The stack overflow vulnerability lies in the /goform/setpptpservercfg interface of the web. The sent post data startip and endip are copied to the stack using the sanf function, resulting in stack overflow. Similarly, this vulnerability can be used together with CVE-2021-44971\n\n- CVE-2022-29395: TOTOLINK N600R V4.3.0cu.7647_B20210106 was discovered to contain a stack overflow via the apcliKey parameter in the function FUN_0041bac4.\n\n- CVE-2022-29396: TOTOLINK N600R V4.3.0cu.7647_B20210106 was discovered to contain a stack overflow via the comment parameter in the function FUN_00418f10.\n\n- CVE-2022-29397: TOTOLINK N600R V4.3.0cu.7647_B20210106 was discovered to contain a stack overflow via the comment parameter in the function FUN_004196c8.\n\n- CVE-2022-29398: TOTOLINK N600R V4.3.0cu.7647_B20210106 was discovered to contain a stack overflow via the File parameter in the function FUN_0041309c.\n\n- CVE-2022-29399: TOTOLINK N600R V4.3.0cu.7647_B20210106 was discovered to contain a stack overflow via the url parameter in the function FUN_00415bf0.\n\n- CVE-2022-29496: A stack-based buffer overflow vulnerability exists in the BlynkConsole.h runCommand functionality of Blynk -Library v1.0.1. A specially-crafted network request can lead to command execution. An attacker can send a network request to trigger this vulnerability.\n\n- CVE-2022-29638: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a stack overflow via the comment parameter in the function setIpQosRules. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted POST request.\n\n- CVE-2022-29640: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a stack overflow via the comment parameter in the function setPortForwardRules. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted POST request.\n\n- CVE-2022-29641: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a stack overflow via the startTime and endTime parameters in the function setParentalRules. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted POST request.\n\n- CVE-2022-29642: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a stack overflow via the url parameter in the function setUrlFilterRules. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted POST request.\n\n- CVE-2022-29643: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a stack overflow via the macAddress parameter in the function setMacQos. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted POST request.\n\n- CVE-2022-2972: MZ Automation's libIEC61850 (versions 1.4 and prior; version 1.5 prior to commit a3b04b7bc4872a5a39e5de3fdc5fbde52c09e10e) is vulnerable to a stack-based buffer overflow, which could allow an attacker to crash the device or remotely execute arbitrary code.\n\n- CVE-2022-29776: Onlyoffice Document Server v6.0.0 and below and Core 6.1.0.26 and below were discovered to contain a stack overflow via the component DesktopEditor/common/File.cpp.\n\n- CVE-2022-30040: Tenda AX1803 v1.0.0.1_2890 is vulnerable to Buffer Overflow. The vulnerability lies in rootfs_ In / goform / setsystimecfg of / bin / tdhttpd in ubif file system, attackers can access http://ip/goform/SetSysTimeCfg, and by setting the ntpserve parameter, the stack buffer overflow can be caused to achieve the effect of router denial of service.\n\n- CVE-2022-30306: A stack-based buffer overflow vulnerability [CWE-121] in the CA sign functionality of FortiWeb version 7.0.1 and below, 6.4 all versions, version 6.3.19 and below may allow an authenticated attacker to achieve arbitrary code execution via specifically crafted password.\n\n- CVE-2022-30426: There is a stack buffer overflow vulnerability, which could lead to arbitrary code execution in UEFI DXE driver on some Acer products. An attack could exploit this vulnerability to escalate privilege from ring 3 to ring 0, and hijack control flow during UEFI DXE execution. This affects Altos T110 F3 firmware version <= P13 (latest) and AP130 F2 firmware version <= P04 (latest) and Aspire 1600X firmware version <= P11.A3L (latest) and Aspire 1602M firmware version <= P11.A3L (latest) and Aspire 7600U firmware version <= P11.A4 (latest) and Aspire MC605 firmware version <= P11.A4L (latest) and Aspire TC-105 firmware version <= P12.B0L (latest) and Aspire TC-120 firmware version <= P11-A4 (latest) and Aspire U5-620 firmware version <= P11.A1 (latest) and Aspire X1935 firmware version <= P11.A3L (latest) and Aspire X3475 firmware version <= P11.A3L (latest) and Aspire X3995 firmware version <= P11.A3L (latest) and Aspire XC100 firmware version <= P11.B3 (latest) and Aspire XC600 firmware version <= P11.A4 (latest) and Aspire Z3-615 firmware version <= P11.A2L (latest) and Veriton E430G firmware version <= P21.A1 (latest) and Veriton B630_49 firmware version <= AAP02SR (latest) and Veriton E430 firmware version <= P11.A4 (latest) and Veriton M2110G firmware version <= P21.A3 (latest) and Veriton M2120G fir.\n\n- CVE-2022-30472: Tenda AC Seris Router AC18_V15.03.05.19(6318) has a stack-based buffer overflow vulnerability in function fromAddressNat\n\n- CVE-2022-30473: Tenda AC Series Router AC18_V15.03.05.19(6318) has a stack-based buffer overflow vulnerability in function form_fast_setting_wifi_set\n\n- CVE-2022-30475: Tenda AC Series Router AC18_V15.03.05.19(6318) was discovered to contain a stack-based buffer overflow in the httpd module when handling /goform/WifiExtraSet request.\n\n- CVE-2022-30476: Tenda AC Series Router AC18_V15.03.05.19(6318) was discovered to contain a stack-based buffer overflow in the httpd module when handling /goform/SetFirewallCfg request.\n\n- CVE-2022-31031: PJSIP is a free and open source multimedia communication library written in C language implementing standard based protocols such as SIP, SDP, RTP, STUN, TURN, and ICE. In versions prior to and including 2.12.1 a stack buffer overflow vulnerability affects PJSIP users that use STUN in their applications, either by: setting a STUN server in their account/media config in PJSUA/PJSUA2 level, or directly using `pjlib-util/stun_simple` API. A patch is available in commit 450baca which should be included in the next release. There are no known workarounds for this issue.\n\n- CVE-2022-32030: Tenda AX1806 v1.0.0.1 was discovered to contain a stack overflow via the list parameter in the function formSetQosBand.\n\n- CVE-2022-32031: Tenda AX1806 v1.0.0.1 was discovered to contain a stack overflow via the list parameter in the function fromSetRouteStatic.\n\n- CVE-2022-32037: Tenda M3 V1.0.0.12 was discovered to contain a stack overflow via the function formSetAPCfg.\n\n- CVE-2022-32039: Tenda M3 V1.0.0.12 was discovered to contain a stack overflow via the listN parameter in the function fromDhcpListClient.\n\n- CVE-2022-32040: Tenda M3 V1.0.0.12 was discovered to contain a stack overflow via the function formSetCfm.\n\n- CVE-2022-32041: Tenda M3 V1.0.0.12 was discovered to contain a stack overflow via the function formGetPassengerAnalyseData.\n\n- CVE-2022-32043: Tenda M3 V1.0.0.12 was discovered to contain a stack overflow via the function formSetAccessCodeInfo.\n\n- CVE-2022-32044: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the password parameter in the function FUN_00413f80.\n\n- CVE-2022-32045: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the desc parameter in the function FUN_00413be4.\n\n- CVE-2022-32046: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the desc parameter in the function FUN_0041880c.\n\n- CVE-2022-32047: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the desc parameter in the function FUN_00412ef4.\n\n- CVE-2022-32048: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the command parameter in the function FUN_0041cc88.\n\n- CVE-2022-32049: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the url parameter in the function FUN_00418540.\n\n- CVE-2022-32050: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the cloneMac parameter in the function FUN_0041af40.\n\n- CVE-2022-32051: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the desc, week, sTime, eTime parameters in the function FUN_004133c4.\n\n- CVE-2022-32052: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the desc parameter in the function FUN_004137a4.\n\n- CVE-2022-32053: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the cloneMac parameter in the function FUN_0041621c.\n\n- CVE-2022-33183: A vulnerability in Brocade Fabric OS CLI before Brocade Fabric OS v9.1.0, 9.0.1e, 8.2.3c, 8.2.0cbn5, 7.4.2.j could allow a remote authenticated attacker to perform stack buffer overflow using in \u201cfirmwaredownload\u201d and \u201cdiagshow\u201d commands.\n\n- CVE-2022-34287: A vulnerability has been identified in PADS Standard/Plus Viewer (All versions). The affected application contains a stack corruption vulnerability while parsing PCB files. An attacker could leverage this vulnerability to leak information in the context of the current process. (FG-VD-22-052, FG-VD-22-056)\n\n- CVE-2022-34290: A vulnerability has been identified in PADS Standard/Plus Viewer (All versions). The affected application contains a stack corruption vulnerability while parsing PCB files. An attacker could leverage this vulnerability to leak information in the context of the current process. (FG-VD-22-055)\n\n- CVE-2022-34291: A vulnerability has been identified in PADS Standard/Plus Viewer (All versions). The affected application contains a stack corruption vulnerability while parsing PCB files. An attacker could leverage this vulnerability to leak information in the context of the current process. (FG-VD-22-057, FG-VD-22-058, FG-VD-22-060)\n\n- CVE-2022-35407: An issue was discovered in Insyde InsydeH2O with kernel 5.0 through 5.5. A stack buffer overflow leads to arbitrary code execution in the SetupUtility driver on Intel platforms. An attacker can change the values of certain UEFI variables. If the size of the second variable exceeds the size of the first, then the buffer will be overwritten. This issue affects the SetupUtility driver of InsydeH2O.\n\n- CVE-2022-35690: Adobe ColdFusion versions Update 14 (and earlier) and Update 4 (and earlier) are affected by a Stack-based Buffer Overflow vulnerability that could result in arbitrary code execution in the context of the current user. Exploitation of this issue does not require user interaction, the vulnerability is triggered when a crafted network packet is sent to the server.\n\n- CVE-2022-35710: Adobe ColdFusion versions Update 14 (and earlier) and Update 4 (and earlier) are affected by a Stack-based Buffer Overflow vulnerability that could result in arbitrary code execution in the context of the current user. Exploitation of this issue does not require user interaction, the vulnerability is triggered when a crafted network packet is sent to the server.\n\n- CVE-2022-3602: A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed the malicious certificate or for the application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address to overflow four attacker-controlled bytes on the stack. This buffer overflow could result in a crash (causing a denial of service) or potentially remote code execution. Many platforms implement stack overflow protections which would mitigate against the risk of remote code execution. The risk may be further mitigated based on stack layout for any given platform/compiler. Pre-announcements of CVE-2022-3602 described this issue as CRITICAL. Further analysis based on some of the mitigating factors described above have led this to be downgraded to HIGH. Users are still encouraged to upgrade to a new version as soon as possible. In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects. Fixed in OpenSSL 3.0.7 (Affected 3.0.0,3.0.1,3.0.2,3.0.3,3.0.4,3.0.5,3.0.6).\n\n- CVE-2022-37415: The Uniwill SparkIO.sys driver 1.0 is vulnerable to a stack-based buffer overflow via IOCTL 0x40002008.\n\n- CVE-2022-39803: Due to lack of proper memory management, when a victim opens a manipulated ACIS Part and Assembly (.sat, CoreCadTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-39804: Due to lack of proper memory management, when a victim opens a manipulated SolidWorks Part (.sldprt, CoreCadTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-39805: Due to lack of proper memory management, when a victim opens a manipulated Computer Graphics Metafile (.cgm, CgmTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-39806: Due to lack of proper memory management, when a victim opens a manipulated SolidWorks Drawing (.slddrw, CoreCadTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-39808: Due to lack of proper memory management, when a victim opens a manipulated Wavefront Object (.obj, ObjTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41167: Due to lack of proper memory management, when a victim opens a manipulated AutoCAD (.dwg, TeighaTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41168: Due to lack of proper memory management, when a victim opens a manipulated CATIA5 Part (.catpart, CatiaTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41170: Due to lack of proper memory management, when a victim opens a manipulated CATIA4 Part (.model, CatiaTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41172: Due to lack of proper memory management, when a victim opens a manipulated AutoCAD (.dxf, TeighaTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41175: Due to lack of proper memory management, when a victim opens a manipulated Enhanced Metafile (.emf, emf.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41177: Due to lack of proper memory management, when a victim opens a manipulated Iges Part and Assembly (.igs, .iges, CoreCadTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41179: Due to lack of proper memory management, when a victim opens a manipulated Jupiter Tesselation (.jt, JtTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41180: Due to lack of proper memory management, when a victim opens a manipulated Portable Document Format (.pdf, PDFPublishing.dll) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41184: Due to lack of proper memory management, when a victim opens a manipulated Windows Cursor File (.cur, ico.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41185: Due to lack of proper memory management, when a victim opens a manipulated Visual Design Stream (.vds, MataiPersistence.dll) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41186: Due to lack of proper memory management, when a victim opens manipulated Computer Graphics Metafile (.cgm, CgmCore.dll) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, a Remote Code Execution can be triggered when payload forces a stack-based overflow and or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41187: Due to lack of proper memory management, when a victim opens a manipulated Wavefront Object (.obj, ObjTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41189: Due to lack of proper memory management, when a victim opens a manipulated AutoCAD (.dwg, TeighaTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41190: Due to lack of proper memory management, when a victim opens a manipulated AutoCAD (.dxf, TeighaTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41191: Due to lack of proper memory management, when a victim opens a manipulated Jupiter Tesselation (.jt, JTReader.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41193: Due to lack of proper memory management, when a victim opens a manipulated Encapsulated Post Script (.eps, ai.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41195: Due to lack of proper memory management, when a victim opens a manipulated EAAmiga Interchange File Format (.iff, 2d.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41196: Due to lack of proper memory management, when a victim opens a manipulated VRML Worlds (.wrl, vrml.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41198: Due to lack of proper memory management, when a victim opens a manipulated SketchUp (.skp, SketchUp.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41199: Due to lack of proper memory management, when a victim opens a manipulated Open Inventor File (.iv, vrml.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41200: Due to lack of proper memory management, when a victim opens a manipulated Scalable Vector Graphic (.svg, svg.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41201: Due to lack of proper memory management, when a victim opens a manipulated Right Hemisphere Binary (.rh, rh.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41202: Due to lack of proper memory management, when a victim opens a manipulated Visual Design Stream (.vds, vds.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41211: Due to lack of proper memory management, when a victim opens manipulated file received from untrusted sources in SAP 3D Visual Enterprise Author and SAP 3D Visual Enterprise Viewer, Arbitrary Code Execution can be triggered when payload forces:Re-use of dangling pointer which refers to overwritten space in memory. The accessed memory must be filled with code to execute the attack. Therefore, repeated success is unlikely.Stack-based buffer overflow. Since the memory overwritten is random, based on access rights of the memory, repeated success is not assured. \n\n- CVE-2022-41415: Acer Altos W2000h-W570h F4 R01.03.0018 was discovered to contain a stack overflow in the RevserveMem component. This vulnerability allows attackers to cause a Denial of Service (DoS) via injecting crafted shellcode into the NVRAM variable.\n\n- CVE-2022-41420: nasm v2.16 was discovered to contain a stack overflow in the Ndisasm component\n\n- CVE-2022-41517: TOTOLINK NR1800X V9.1.0u.6279_B20210910 was discovered to contain a stack overflow in the lang parameter in the setLanguageCfg function\n\n- CVE-2022-41520: TOTOLINK NR1800X V9.1.0u.6279_B20210910 was discovered to contain an authenticated stack overflow via the File parameter in the UploadCustomModule function.\n\n- CVE-2022-41521: TOTOLINK NR1800X V9.1.0u.6279_B20210910 was discovered to contain an authenticated stack overflow via the sPort/ePort parameter in the setIpPortFilterRules function.\n\n- CVE-2022-41522: TOTOLINK NR1800X V9.1.0u.6279_B20210910 was discovered to contain an unauthenticated stack overflow via the \"main\" function.\n\n- CVE-2022-41523: TOTOLINK NR1800X V9.1.0u.6279_B20210910 was discovered to contain an authenticated stack overflow via the command parameter in the setTracerouteCfg function.\n\n- CVE-2022-41524: TOTOLINK NR1800X V9.1.0u.6279_B20210910 was discovered to contain an authenticated stack overflow via the week, sTime, and eTime parameters in the setParentalRules function.\n\n- CVE-2022-35506: TripleCross v0.1.0 was discovered to contain a stack overflow which occurs because there is no limit to the length of program parameters.\n\n- CVE-2022-35558: A stack overflow vulnerability exists in /goform/WifiMacFilterGet in Tenda W6 V1.0.0.9(4122) version, which can be exploited by attackers to cause a denial of service (DoS) via the index parameter.\n\n- CVE-2022-35559: A stack overflow vulnerability exists in /goform/setAutoPing in Tenda W6 V1.0.0.9(4122), which allows an attacker to construct ping1 parameters and ping2 parameters for a stack overflow attack. An attacker can use this vulnerability to execute arbitrary code execution.\n\n- CVE-2022-35560: A stack overflow vulnerability exists in /goform/wifiSSIDset in Tenda W6 V1.0.0.9(4122) version, which can be exploited by attackers to cause a denial of service (DoS) via the index parameter.\n\n- CVE-2022-35561: A stack overflow vulnerability exists in /goform/WifiMacFilterSet in Tenda W6 V1.0.0.9(4122) version, which can be exploited by attackers to cause a denial of service (DoS) via the index parameter.\n\n- CVE-2022-39173: In wolfSSL before 5.5.1, malicious clients can cause a buffer overflow during a TLS 1.3 handshake. This occurs when an attacker supposedly resumes a previous TLS session. During the resumption Client Hello a Hello Retry Request must be triggered. Both Client Hellos are required to contain a list of duplicate cipher suites to trigger the buffer overflow. In total, two Client Hellos have to be sent: one in the resumed session, and a second one as a response to a Hello Retry Request message.\n\n- CVE-2022-37078: TOTOLINK A7000R V9.1.0u.6115_B20201022 was discovered to contain a command injection vulnerability via the lang parameter at /setting/setLanguageCfg.\n\n- CVE-2022-1185: A denial of service vulnerability when rendering RDoc files in GitLab CE/EE versions 10 to 14.7.7, 14.8.0 to 14.8.5, and 14.9.0 to 14.9.2 allows an attacker to crash the GitLab web application with a maliciously crafted RDoc file\n\n- CVE-2022-22899: Core FTP / SFTP Server v2 Build 725 was discovered to allow unauthenticated attackers to cause a Denial of Service (DoS) via a crafted packet through the SSH service.\n\n- CVE-2022-41842: An issue was discovered in Xpdf 4.04. There is a crash in gfseek(_IO_FILE*, long, int) in goo/gfile.cc.\n\n- CVE-2022-41844: An issue was discovered in Xpdf 4.04. There is a crash in XRef::fetch(int, int, Object*, int) in xpdf/XRef.cc, a different vulnerability than CVE-2018-16369 and CVE-2019-16088.\n\nRelated Weaknesses:\n\n- CWE-788 (ChildOf)\n\n- CWE-787 (ChildOf)",
            "type": "Variant",
            "source": "sparse",
            "search_source": "weakness:command injection",
            "sources": [
              "base",
              "weakness"
            ],
            "boost_factor": 2.8,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              }
            }
          },
          {
            "cwe_id": "426",
            "name": "Untrusted Search Path",
            "description": "The product searches for critical resources using an externally-supplied search path that can point to resources that are not under the product's direct control.",
            "score": 94.56104726448638,
            "matched_text": "CWE-426: Untrusted Search Path\n\nType: Base\n\nStatus: Stable\n\nAlternative Terms:\n\nUntrusted Path\n\nUntrusted Path\n\nUntrusted Path\n\nDescription:\n\nThe product searches for critical resources using an externally-supplied search path that can point to resources that are not under the product's direct control.\n\nExtended Details:\n\n\n\nThis might allow attackers to execute their own programs, access unauthorized data files, or modify configuration in unexpected ways. If the product uses a search path to locate critical resources such as programs, then an attacker could modify that search path to point to a malicious program, which the targeted product would then execute. The problem extends to any type of critical resource that the product trusts.\n\n\nSome of the most common variants of untrusted search path are:\n\n\n  - In various UNIX and Linux-based systems, the PATH environment variable may be consulted to locate executable programs, and LD_PRELOAD may be used to locate a separate library.\n\n  - In various Microsoft-based systems, the PATH environment variable is consulted to locate a DLL, if the DLL is not found in other paths that appear earlier in the search order.\n\n\n\nReal-World Examples:\n\n- CVE-1999-1120: Application relies on its PATH environment variable to find and execute program.\n\n- CVE-2008-1810: Database application relies on its PATH environment variable to find and execute program.\n\n- CVE-2007-2027: Chain: untrusted search path enabling resultant format string by loading malicious internationalization messages.\n\n- CVE-2008-3485: Untrusted search path using malicious .EXE in Windows environment.\n\n- CVE-2008-2613: setuid program allows compromise using path that finds and loads a malicious library.\n\n- CVE-2008-1319: Server allows client to specify the search path, which can be modified to point to a program that the client has uploaded.\n\nTop 25 CWE Examples:\n\n- CVE-2021-41387: seatd-launch in seatd 0.6.x before 0.6.2 allows privilege escalation because it uses execlp and may be installed setuid root.\n\n- CVE-2021-28249: CA eHealth Performance Manager through 6.3.2.12 is affected by Privilege Escalation via a Dynamically Linked Shared Object Library. To exploit the vulnerability, the ehealth user must create a malicious library in the writable RPATH, to be dynamically linked when the FtpCollector executable is run. The code in the library will be executed as the root user. NOTE: This vulnerability only affects products that are no longer supported by the maintainer\n\n- CVE-2022-22047: Windows Client Server Run-time Subsystem (CSRSS) Elevation of Privilege Vulnerability\n\n- CVE-2021-3305: Beijing Feishu Technology Co., Ltd Feishu v3.40.3 was discovered to contain an untrusted search path vulnerability.\n\n- CVE-2022-36403: Untrusted search path vulnerability in the installer of Device Software Manager prior to Ver.2.20.3.0 allows an attacker to gain privileges via a Trojan horse DLL in an unspecified directory.\n\n- CVE-2021-36666: An issue was discovered in Druva 6.9.0 for MacOS, allows attackers to gain escalated local privileges via the inSyncDecommission.\n\n- CVE-2022-38060: A privilege escalation vulnerability exists in the sudo functionality of OpenStack Kolla git master 05194e7618. A misconfiguration in /etc/sudoers within a container can lead to increased privileges.\n\n- CVE-2022-25366: Cryptomator through 1.6.5 allows DYLIB injection because, although it has the flag 0x1000 for Hardened Runtime, it has the com.apple.security.cs.disable-library-validation and com.apple.security.cs.allow-dyld-environment-variables entitlements. An attacker can exploit this by creating a malicious .dylib file that can be executed via the DYLD_INSERT_LIBRARIES environment variable.\n\n- CVE-2022-39245: Mist is the command-line interface for the makedeb Package Repository. Prior to version 0.9.5, a user-provided `sudo` binary via the `PATH` variable can allow a local user to run arbitrary commands on the user's system with root permissions. Versions 0.9.5 and later contain a patch. No known workarounds exist.\n\n- CVE-2021-21817: An information disclosure vulnerability exists in the Zebra IP Routing Manager functionality of D-LINK DIR-3040 1.13B03. A specially crafted network request can lead to the disclosure of sensitive information. An attacker can send a sequence of requests to trigger this vulnerability.\n\nRelated Weaknesses:\n\n- CWE-642 (ChildOf)\n\n- CWE-668 (ChildOf)\n\n- CWE-673 (ChildOf)\n\n- CWE-427 (PeerOf)\n\n- CWE-428 (PeerOf)",
            "type": "Base",
            "source": "sparse",
            "search_source": "weakness:command injection",
            "sources": [
              "base",
              "weakness"
            ],
            "boost_factor": 2.8,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              }
            }
          },
          {
            "cwe_id": "138",
            "name": "Improper Neutralization of Special Elements",
            "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.",
            "score": 91.22587651898233,
            "matched_text": "CWE-138: Improper Neutralization of Special Elements\n\nType: Class\n\nStatus: Draft\n\nDescription:\n\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n\nExtended Details:\n\nMost languages and protocols have their own special elements such as characters and reserved words. These special elements can carry control implications. If product does not prevent external control or influence over the inclusion of such special elements, the control flow of the program may be altered from what was intended. For example, both Unix and Windows interpret the symbol < (\"less than\") as meaning \"read input from a file\".\n\nReal-World Examples:\n\n- CVE-2001-0677: Read arbitrary files from mail client by providing a special MIME header that is internally used to store pathnames for attachments.\n\n- CVE-2000-0703: Setuid program does not cleanse special escape sequence before sending data to a mail program, causing the mail program to process those sequences.\n\n- CVE-2003-0020: Multi-channel issue. Terminal escape sequences not filtered from log files.\n\n- CVE-2003-0083: Multi-channel issue. Terminal escape sequences not filtered from log files.\n\nTop 25 CWE Examples:\n\n- CVE-2021-33592: NAVER Toolbar before 4.0.30.323 allows remote attackers to execute arbitrary code via a crafted upgrade.xml file. Special characters in filename parameter can be the cause of bypassing code signing check function.\n\n- CVE-2022-0661: The Ad Injection WordPress plugin through 1.2.0.19 does not properly sanitize the body of the adverts injected into the pages, allowing a high privileged user (Admin+) to inject arbitrary HTML or javascript even with unfiltered_html disallowed, leading to a stored cross-site scripting (XSS) vulnerability. Further it is also possible to inject PHP code, leading to a Remote Code execution (RCE) vulnerability, even if the DISALLOW_FILE_EDIT and DISALLOW_FILE_MOD constants are both set.\n\n- CVE-2022-35651: A stored XSS and blind SSRF vulnerability was found in Moodle, occurs due to insufficient sanitization of user-supplied data in the SCORM track details. A remote attacker can trick the victim to follow a specially crafted link and execute arbitrary HTML and script code in user's browser in context of vulnerable website to steal potentially sensitive information, change appearance of the web page, can perform phishing and drive-by-download attacks.\n\n- CVE-2022-36325: Affected devices do not properly sanitize data introduced by an user when rendering the web interface. This could allow an authenticated remote attacker with administrative privileges to inject code and lead to a DOM-based XSS.\n\n- CVE-2022-4029: The Simple:Press plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the 'sforum_[md5 hash of the WordPress URL]' cookie value in versions up to, and including, 6.8 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link. This would be highly complex to exploit as it would require the attacker to set the cookie a cookie for the targeted user.\n\n- CVE-2022-24720: image_processing is an image processing wrapper for libvips and ImageMagick/GraphicsMagick. Prior to version 1.12.2, using the `#apply` method from image_processing to apply a series of operations that are coming from unsanitized user input allows the attacker to execute shell commands. This method is called internally by Active Storage variants, so Active Storage is vulnerable as well. The vulnerability has been fixed in version 1.12.2 of image_processing. As a workaround, users who process based on user input should always sanitize the user input by allowing only a constrained set of operations.\n\n- CVE-2021-25296: Nagios XI version xi-5.7.5 is affected by OS command injection. The vulnerability exists in the file /usr/local/nagiosxi/html/includes/configwizards/windowswmi/windowswmi.inc.php due to improper sanitization of authenticated user-controlled input by a single HTTP request, which can lead to OS command injection on the Nagios XI server.\n\n- CVE-2021-25297: Nagios XI version xi-5.7.5 is affected by OS command injection. The vulnerability exists in the file /usr/local/nagiosxi/html/includes/configwizards/switch/switch.inc.php due to improper sanitization of authenticated user-controlled input by a single HTTP request, which can lead to OS command injection on the Nagios XI server.\n\n- CVE-2021-25298: Nagios XI version xi-5.7.5 is affected by OS command injection. The vulnerability exists in the file /usr/local/nagiosxi/html/includes/configwizards/cloud-vm/cloud-vm.inc.php due to improper sanitization of authenticated user-controlled input by a single HTTP request, which can lead to OS command injection on the Nagios XI server.\n\n- CVE-2021-27101: Accellion FTA 9_12_370 and earlier is affected by SQL injection via a crafted Host header in a request to document_root.html. The fixed version is FTA_9_12_380 and later.\n\n- CVE-2021-35394: Realtek Jungle SDK version v2.x up to v3.4.14B provides a diagnostic tool called 'MP Daemon' that is usually compiled as 'UDPServer' binary. The binary is affected by multiple memory corruption vulnerabilities and an arbitrary command injection vulnerability that can be exploited by remote unauthenticated attackers.\n\n- CVE-2022-26352: An issue was discovered in the ContentResource API in dotCMS 3.0 through 22.02. Attackers can craft a multipart form request to post a file whose filename is not initially sanitized. This allows directory traversal, in which the file is saved outside of the intended storage location. If anonymous content creation is enabled, this allows an unauthenticated attacker to upload an executable file, such as a .jsp file, that can lead to remote code execution.\n\n- CVE-2022-27926: A reflected cross-site scripting (XSS) vulnerability in the /public/launchNewWindow.jsp component of Zimbra Collaboration (aka ZCS) 9.0 allows unauthenticated attackers to execute arbitrary web script or HTML via request parameters.\n\n- CVE-2022-22221: An Improper Neutralization of Special Elements vulnerability in the download manager of Juniper Networks Junos OS on SRX Series and EX Series allows a locally authenticated attacker with low privileges to take full control over the device. One aspect of this vulnerability is that the attacker needs to be able to execute any of the \"request ...\" or \"show system download ...\" commands. This issue affects Juniper Networks Junos OS on SRX Series and EX Series: All versions prior to 19.2R1-S9, 19.2R3-S5; 19.3 versions prior to 19.3R3-S6; 19.4 versions prior to 19.4R3-S8; 20.1 versions prior to 20.1R3-S4; 20.2 versions prior to 20.2R3-S4; 20.3 versions prior to 20.3R3-S3; 20.4 versions prior to 20.4R3-S2, 20.4R3-S3; 21.1 versions prior to 21.1R3-S1; 21.2 versions prior to 21.2R2-S2, 21.2R3; 21.3 versions prior to 21.3R2, 21.3R3; 21.4 versions prior to 21.4R1-S1, 21.4R2.\n\n- CVE-2022-3047: Insufficient policy enforcement in Extensions API in Google Chrome prior to 105.0.5195.52 allowed an attacker who convinced a user to install a malicious extension to bypass downloads policy via a crafted HTML page.\n\n- CVE-2022-21705: Octobercms is a self-hosted CMS platform based on the Laravel PHP Framework. In affected versions user input was not properly sanitized before rendering. An authenticated user with the permissions to create, modify and delete website pages can exploit this vulnerability to bypass `cms.safe_mode` / `cms.enableSafeMode` in order to execute arbitrary code. This issue only affects admin panels that rely on safe mode and restricted permissions. To exploit this vulnerability, an attacker must first have access to the backend area. The issue has been patched in Build 474 (v1.0.474) and v1.1.10. Users unable to upgrade should apply https://github.com/octobercms/library/commit/c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe to your installation manually.\n\n- CVE-2022-24039: A vulnerability has been identified in Desigo PXC4 (All versions < V02.20.142.10-10884), Desigo PXC5 (All versions < V02.20.142.10-10884). The \u201caddCell\u201d JavaScript function fails to properly sanitize user-controllable input before including it into the generated XML body of the XLS report document, such that it is possible to inject arbitrary content (e.g., XML tags) into the generated file. An attacker with restricted privileges, by poisoning any of the content used to generate XLS reports, could be able to leverage the application to deliver malicious files against higher-privileged users and obtain Remote Code Execution (RCE) against the administrator\u2019s workstation.\n\n- CVE-2022-35948: undici is an HTTP/1.1 client, written from scratch for Node.js.`=< undici@5.8.0` users are vulnerable to _CRLF Injection_ on headers when using unsanitized input as request headers, more specifically, inside the `content-type` header. Example: ``` import { request } from 'undici' const unsanitizedContentTypeInput = 'application/json\\\\r\\\\n\\\\r\\\\nGET /foo2 HTTP/1.1' await request('http://localhost:3000, { method: 'GET', headers: { 'content-type': unsanitizedContentTypeInput }, }) ``` The above snippet will perform two requests in a single `request` API call: 1) `http://localhost:3000/` 2) `http://localhost:3000/foo2` This issue was patched in Undici v5.8.1. Sanitize input when sending content-type headers using user input as a workaround.\n\n- CVE-2021-24942: The Menu Item Visibility Control WordPress plugin through 0.5 doesn't sanitize and validate the \"Visibility logic\" option for WordPress menu items, which could allow highly privileged users to execute arbitrary PHP code even in a hardened environment.\n\n- CVE-2022-0819: Code Injection in GitHub repository dolibarr/dolibarr prior to 15.0.1.\n\n- CVE-2022-25644: All versions of package @pendo324/get-process-by-name are vulnerable to Arbitrary Code Execution due to improper sanitization of getProcessByName function.\n\n- CVE-2022-46161: pdfmake is an open source client/server side PDF printing in pure JavaScript. In versions up to and including 0.2.5 pdfmake contains an unsafe evaluation of user controlled input. Users of pdfmake are thus subject to arbitrary code execution in the context of the process running the pdfmake code. There are no known fixes for this issue. Users are advised to restrict access to trusted user input.\n\n- CVE-2022-46836: PHP code injection in watolib auth.php and hosttags.php in Tribe29's Checkmk <= 2.1.0p10, Checkmk <= 2.0.0p27, and Checkmk <= 1.6.0p29 allows an attacker to inject and execute PHP code which will be executed upon request of the vulnerable component.\n\n- CVE-2021-33360: An issue found in Stoqey gnuplot v.0.0.3 and earlier allows attackers to execute arbitrary code via the src/index.ts, plotCallack, child_process, and/or filePath parameter(s).\n\n- CVE-2022-0764: Arbitrary Command Injection in GitHub repository strapi/strapi prior to 4.1.0.\n\n- CVE-2022-21129: Versions of the package nemo-appium before 0.0.9 are vulnerable to Command Injection due to improper input sanitization in the 'module.exports.setup' function. **Note:** In order to exploit this vulnerability appium-running 0.1.3 has to be installed as one of nemo-appium dependencies. \n\n- CVE-2022-21165: All versions of package font-converter are vulnerable to Arbitrary Command Injection due to missing sanitization of input that potentially flows into the child_process.exec() function.\n\n- CVE-2022-21186: The package @acrontum/filesystem-template before 0.0.2 are vulnerable to Arbitrary Command Injection due to the fetchRepo API missing sanitization of the href field of external input.\n\n- CVE-2022-21191: Versions of the package global-modules-path before 3.0.0 are vulnerable to Command Injection due to missing input sanitization or other checks and sandboxes being employed to the getPath function. \n\n- CVE-2022-2143: The affected product is vulnerable to two instances of command injection, which may allow an attacker to remotely execute arbitrary code.\n\n- CVE-2022-21810: All versions of the package smartctl are vulnerable to Command Injection via the info method due to improper input sanitization. \n\n- CVE-2022-25350: All versions of the package puppet-facter are vulnerable to Command Injection via the getFact function due to improper input sanitization. \n\n- CVE-2022-25853: All versions of the package semver-tags are vulnerable to Command Injection via the getGitTagsRemote function due to improper input sanitization. \n\n- CVE-2022-25855: All versions of the package create-choo-app3 are vulnerable to Command Injection via the devInstall function due to improper user-input sanitization. \n\n- CVE-2022-25890: All versions of the package wifey are vulnerable to Command Injection via the connect() function due to improper input sanitization. \n\n- CVE-2022-25908: All versions of the package create-choo-electron are vulnerable to Command Injection via the devInstall function due to improper user-input sanitization. \n\n- CVE-2022-25916: Versions of the package mt7688-wiscan before 0.8.3 are vulnerable to Command Injection due to improper input sanitization in the 'wiscan.scan' function. \n\n- CVE-2022-25923: Versions of the package exec-local-bin before 1.2.0 are vulnerable to Command Injection via the theProcess() functionality due to improper user-input sanitization. \n\n- CVE-2022-25926: Versions of the package window-control before 1.4.5 are vulnerable to Command Injection via the sendKeys function, due to improper input sanitization. \n\n- CVE-2022-25962: All versions of the package vagrant.js are vulnerable to Command Injection via the boxAdd function due to improper input sanitization. \n\n- CVE-2022-3275: Command injection is possible in the puppetlabs-apt module prior to version 9.0.0. A malicious actor is able to exploit this vulnerability only if they are able to provide unsanitized input to the module. This condition is rare in most deployments of Puppet and Puppet Enterprise.\n\n- CVE-2022-3276: Command injection is possible in the puppetlabs-mysql module prior to version 13.0.0. A malicious actor is able to exploit this vulnerability only if they are able to provide unsanitized input to the module. This condition is rare in most deployments of Puppet and Puppet Enterprise.\n\n- CVE-2022-36267: In Airspan AirSpot 5410 version 0.3.4.1-4 and under there exists a Unauthenticated remote command injection vulnerability. The ping functionality can be called without user authentication when crafting a malicious http request by injecting code in one of the parameters allowing for remote code execution. This vulnerability is exploited via the binary file /home/www/cgi-bin/diagnostics.cgi that accepts unauthenticated requests and unsanitized data. As a result, a malicious actor can craft a specific request and interact remotely with the device.\n\n- CVE-2022-40282: The web server of Hirschmann BAT-C2 before 09.13.01.00R04 allows authenticated command injection. This allows an authenticated attacker to pass commands to the shell of the system because the dir parameter of the FsCreateDir Ajax function is not sufficiently sanitized. The vendor's ID is BSECV-2022-21.\n\n- CVE-2022-40785: Unsanitized input when setting a locale file leads to shell injection in mIPC camera firmware 5.3.1.2003161406. This allows an attacker to gain remote code execution on cameras running the firmware when a victim logs into a specially crafted mobile app.\n\n- CVE-2022-48338: An issue was discovered in GNU Emacs through 28.2. In ruby-mode.el, the ruby-find-library-file function has a local command injection vulnerability. The ruby-find-library-file function is an interactive function, and bound to C-c C-f. Inside the function, the external command gem is called through shell-command-to-string, but the feature-name parameters are not escaped. Thus, malicious Ruby source files may cause commands to be executed.\n\n- CVE-2022-36323: Affected devices do not properly sanitize an input field. This could allow an authenticated remote attacker with administrative privileges to inject code or spawn a system root shell.\n\n- CVE-2022-25921: All versions of package morgan-json are vulnerable to Arbitrary Code Execution due to missing sanitization of input passed to the Function constructor.\n\n- CVE-2021-35254: SolarWinds received a report of a vulnerability related to an input that was not sanitized in WebHelpDesk. SolarWinds has removed this input field to prevent the misuse of this input in the future.\n\n- CVE-2021-38450: The affected controllers do not properly sanitize the input containing code syntax. As a result, an attacker could craft code to alter the intended controller flow of the software.\n\n- CVE-2021-43404: An issue was discovered in FusionPBX before 4.5.30. The FAX file name may have risky characters.\n\n- CVE-2021-43405: An issue was discovered in FusionPBX before 4.5.30. The fax_extension may have risky characters (it is not constrained to be numeric).\n\n- CVE-2021-43861: Mermaid is a Javascript based diagramming and charting tool that uses Markdown-inspired text definitions and a renderer to create and modify complex diagrams. Prior to version 8.13.8, malicious diagrams can run javascript code at diagram readers' machines. Users should upgrade to version 8.13.8 to receive a patch. There are no known workarounds aside from upgrading.\n\n- CVE-2022-1414: 3scale API Management 2 does not perform adequate sanitation for user input in multiple fields. An authenticated user could use this flaw to inject scripts and possibly gain access to sensitive information or conduct further attacks.\n\n- CVE-2022-1867: Insufficient validation of untrusted input in Data Transfer in Google Chrome prior to 102.0.5005.61 allowed a remote attacker to bypass same origin policy via a crafted clipboard content.\n\n- CVE-2022-22589: A validation issue was addressed with improved input sanitization. This issue is fixed in iOS 15.3 and iPadOS 15.3, watchOS 8.4, tvOS 15.3, Safari 15.3, macOS Monterey 12.2. Processing a maliciously crafted mail message may lead to running arbitrary javascript.\n\n- CVE-2022-28054: Improper sanitization of trigger action scripts in VanDyke Software VShell for Windows v4.6.2 allows attackers to execute arbitrary code via a crafted value.\n\n- CVE-2022-32229: A information disclosure vulnerability exists in Rockert.Chat <v5 due to /api/v1/chat.getThreadsList lack of sanitization of user inputs and can therefore leak private thread messages to unauthorized users via Mongo DB injection.\n\n- CVE-2022-34885: An improper input sanitization vulnerability in the Motorola MR2600 router could allow a local user with elevated permissions to execute arbitrary code.\n\n- CVE-2022-20664: A vulnerability in the web management interface of Cisco Secure Email and Web Manager, formerly Cisco Security Management Appliance (SMA), and Cisco Email Security Appliance (ESA) could allow an authenticated, remote attacker to retrieve sensitive information from a Lightweight Directory Access Protocol (LDAP) external authentication server connected to an affected device. This vulnerability is due to a lack of proper input sanitization while querying the external authentication server. An attacker could exploit this vulnerability by sending a crafted query through an external authentication web page. A successful exploit could allow the attacker to gain access to sensitive information, including user credentials from the external authentication server. To exploit this vulnerability, an attacker would need valid operator-level (or higher) credentials.\n\n- CVE-2021-38703: Wireless devices running certain Arcadyan-derived firmware (such as KPN Experia WiFi 1.00.15) do not properly sanitise user input to the syslog configuration form. An authenticated remote attacker could leverage this to alter the device configuration and achieve remote code execution. This can be exploited in conjunction with CVE-2021-20090.\n\nRelated Weaknesses:\n\n- CWE-707 (ChildOf)",
            "type": "Class",
            "source": "sparse",
            "search_source": "weakness:command injection",
            "sources": [
              "base",
              "weakness"
            ],
            "boost_factor": 2.8,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              }
            }
          },
          {
            "cwe_id": "89",
            "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
            "description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
            "score": 91.01956869206971,
            "matched_text": "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\n\nType: Base\n\nStatus: Stable\n\nAlternative Terms:\n\nSQL injection - a common attack-oriented phrase\nSQLi - a common abbreviation for \"SQL injection\"\n\nSQL injection - a common attack-oriented phrase\nSQLi - a common abbreviation for \"SQL injection\"\n\nSQL injection - a common attack-oriented phrase\nSQLi - a common abbreviation for \"SQL injection\"\n\nDescription:\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.\n\nReal-World Examples:\n\n- CVE-2023-32530: SQL injection in security product dashboard using crafted certificate fields\n\n- CVE-2021-42258: SQL injection in time and billing software, as exploited in the wild per CISA KEV.\n\n- CVE-2021-27101: SQL injection in file-transfer system via a crafted Host header, as exploited in the wild per CISA KEV.\n\n- CVE-2020-12271: SQL injection in firewall product's admin interface or user portal, as exploited in the wild per CISA KEV.\n\n- CVE-2019-3792: An automation system written in Go contains an API that is vulnerable to SQL injection allowing the attacker to read privileged data.\n\n- CVE-2004-0366: chain: SQL injection in library intended for database authentication allows SQL injection and authentication bypass.\n\n- CVE-2008-2790: SQL injection through an ID that was supposed to be numeric.\n\n- CVE-2008-2223: SQL injection through an ID that was supposed to be numeric.\n\n- CVE-2007-6602: SQL injection via user name.\n\n- CVE-2008-5817: SQL injection via user name or password fields.\n\n- CVE-2003-0377: SQL injection in security product, using a crafted group name.\n\n- CVE-2008-2380: SQL injection in authentication library.\n\n- CVE-2017-11508: SQL injection in vulnerability management and reporting tool, using a crafted password.\n\nTop 25 CWE Examples:\n\n- CVE-2020-13587: An exploitable SQL injection vulnerability exists in the \"forms_fields_rules/rules\" page of the Rukovoditel Project Management App 2.7.2. A specially crafted HTTP request can lead to SQL injection. An attacker can make an authenticated HTTP request to trigger this vulnerability, this can be done either with administrator credentials or through cross-site request forgery.\n\n- CVE-2020-13588: An exploitable SQL injection vulnerability exists in the \u2018entities/fields\u2019 page of the Rukovoditel Project Management App 2.7.2. The heading_field_id parameter in \u2018\u2018entities/fields\u2019 page is vulnerable to authenticated SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability, this can be done either with administrator credentials or through cross-site request forgery.\n\n- CVE-2020-13589: An exploitable SQL injection vulnerability exists in the \u2018entities/fields\u2019 page of the Rukovoditel Project Management App 2.7.2. The entities_id parameter in the 'entities/fields page (mulitple_edit or copy_selected or export function) is vulnerable to authenticated SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability, this can be done either with administrator credentials or through cross-site request forgery.\n\n- CVE-2020-13591: An exploitable SQL injection vulnerability exists in the \"access_rules/rules_form\" page of the Rukovoditel Project Management App 2.7.2. A specially crafted HTTP request can lead to SQL injection. An attacker can make an authenticated HTTP request to trigger this vulnerability, this can be done either with administrator credentials or through cross-site request forgery.\n\n- CVE-2020-13592: An exploitable SQL injection vulnerability exists in \"global_lists/choices\" page of the Rukovoditel Project Management App 2.7.2. A specially crafted HTTP request can lead to SQL injection. An attacker can make an authenticated HTTP request to trigger this vulnerability, this can be done either with administrator credentials or through cross-site request forgery.\n\n- CVE-2020-27240: An exploitable SQL injection vulnerability exists in \u2018getAssets.jsp\u2019 page of OpenClinic GA 5.173.3. The componentStatus parameter in the getAssets.jsp page is vulnerable to unauthenticated SQL injection An attacker can make an authenticated HTTP request to trigger this vulnerability.\n\n- CVE-2020-27241: An exploitable SQL injection vulnerability exists in \u2018getAssets.jsp\u2019 page of OpenClinic GA 5.173.3. The serialnumber parameter in the getAssets.jsp page is vulnerable to unauthenticated SQL injection. An attacker can make an authenticated HTTP request to trigger this vulnerability.\n\n- CVE-2021-24465: The Meow Gallery WordPress plugin before 4.1.9 does not sanitise, validate or escape the ids attribute of its gallery shortcode (available for users as low as Contributor) before using it in an SQL statement, leading to an authenticated SQL Injection issue. The injection also allows the returned values to be manipulated in a way that could lead to data disclosure and arbitrary objects to be deserialized.\n\n- CVE-2021-24555: The daac_delete_booking_callback function, hooked to the daac_delete_booking AJAX action, takes the id POST parameter which is passed into the SQL statement without proper sanitisation, validation or escaping, leading to a SQL Injection issue. Furthermore, the ajax action is lacking any CSRF and capability check, making it available to any authenticated user.\n\n- CVE-2021-24626: The Chameleon CSS WordPress plugin through 1.2 does not have any CSRF and capability checks in all its AJAX calls, allowing any authenticated user, such as subscriber to call them and perform unauthorised actions. One of AJAX call, remove_css, also does not sanitise or escape the css_id POST parameter before using it in a SQL statement, leading to a SQL Injection\n\n- CVE-2021-24651: The Poll Maker WordPress plugin before 3.4.2 allows unauthenticated users to perform SQL injection via the ays_finish_poll AJAX action. While the result is not disclosed in the response, it is possible to use a timing attack to exfiltrate data such as password hash.\n\n- CVE-2021-24728: The Membership & Content Restriction \u2013 Paid Member Subscriptions WordPress plugin before 2.4.2 did not sanitise, validate or escape its order and orderby parameters before using them in SQL statement, leading to Authenticated SQL Injections in the Members and Payments pages.\n\n- CVE-2021-25874: AVideo/YouPHPTube AVideo/YouPHPTube 10.0 and prior is affected by a SQL Injection SQL injection in the catName parameter which allows a remote unauthenticated attacker to retrieve databases information such as application passwords hashes.\n\n- CVE-2021-26201: The Login Panel of CASAP Automated Enrollment System 1.0 is vulnerable to SQL injection authentication bypass. An attacker can obtain access to the admin panel by injecting a SQL query in the username field of the login page.\n\n- CVE-2021-26685: A remote authenticated SQL Injection vulnerabilitiy was discovered in Aruba ClearPass Policy Manager version(s): Prior to 6.9.5, 6.8.8-HF1, 6.7.14-HF1. A vulnerability in the web-based management interface API of ClearPass could allow an authenticated remote attacker to conduct SQL injection attacks against the ClearPass instance. An attacker could exploit this vulnerability to obtain and modify sensitive information in the underlying database.\n\n- CVE-2021-27130: Online Reviewer System 1.0 contains a SQL injection vulnerability through authentication bypass, which may lead to a reverse shell upload.\n\n- CVE-2021-28242: SQL Injection in the \"evoadm.php\" component of b2evolution v7.2.2-stable allows remote attackers to obtain sensitive database information by injecting SQL commands into the \"cf_name\" parameter when creating a new filter under the \"Collections\" tab.\n\n- CVE-2021-31632: b2evolution CMS v7.2.3 was discovered to contain a SQL injection vulnerability via the parameter cfqueryparam in the User login section. This vulnerability allows attackers to execute arbitrary code via a crafted input.\n\n- CVE-2021-3278: Local Service Search Engine Management System 1.0 has a vulnerability through authentication bypass using SQL injection . Using this vulnerability, an attacker can bypass the login page.\n\n- CVE-2021-34166: A SQL INJECTION vulnerability in Sourcecodester Simple Food Website 1.0 allows a remote attacker to Bypass Authentication and become Admin.\n\n- CVE-2021-36621: Sourcecodester Online Covid Vaccination Scheduler System 1.0 is vulnerable to SQL Injection. The username parameter is vulnerable to time-based SQL injection. Upon successful dumping the admin password hash, an attacker can decrypt and obtain the plain-text password. Hence, the attacker could authenticate as Administrator.\n\n- CVE-2021-36624: Sourcecodester Phone Shop Sales Managements System version 1.0 suffers from a remote SQL injection vulnerability that allows for authentication bypass.\n\n- CVE-2021-40313: Piwigo v11.5 was discovered to contain a SQL injection vulnerability via the parameter pwg_token in /admin/batch_manager_global.php.\n\n- CVE-2021-42580: Sourcecodester Online Learning System 2.0 is vunlerable to sql injection authentication bypass in admin login file (/admin/login.php) and authenticated file upload in (Master.php) file , we can craft these two vunlerablities to get unauthenticated remote command execution.\n\n- CVE-2021-36300: iDRAC9 versions prior to 5.00.00.00 contain an improper input validation vulnerability. An unauthenticated remote attacker may potentially exploit this vulnerability by sending a specially crafted malicious request to crash the webserver or cause information disclosure.\n\n- CVE-2021-24007: Multiple improper neutralization of special elements of SQL commands vulnerabilities in FortiMail before 6.4.4 may allow a non-authenticated attacker to execute unauthorized code or commands via specifically crafted HTTP requests.\n\n- CVE-2021-29089: Improper neutralization of special elements used in an SQL command ('SQL Injection') vulnerability in thumbnail component in Synology Photo Station before 6.8.14-3500 allows remote attackers users to execute arbitrary SQL commands via unspecified vectors.\n\n- CVE-2021-29090: Improper neutralization of special elements used in an SQL command ('SQL Injection') vulnerability in PHP component in Synology Photo Station before 6.8.14-3500 allows remote authenticated users to execute arbitrary SQL command via unspecified vectors.\n\n- CVE-2021-32590: Multiple improper neutralization of special elements used in an SQL command vulnerabilities in FortiPortal 6.0.0 through 6.0.4, 5.3.0 through 5.3.5, 5.2.0 through 5.2.5, and 4.2.2 and earlier may allow an attacker with regular user's privileges to execute arbitrary commands on the underlying SQL database via specifically crafted HTTP requests.\n\n- CVE-2021-33180: Improper neutralization of special elements used in an SQL command ('SQL Injection') vulnerability in cgi component in Synology Media Server before 1.8.1-2876 allows remote attackers to execute arbitrary SQL commands via unspecified vectors.\n\n- CVE-2021-36184: A improper neutralization of Special Elements used in an SQL Command ('SQL Injection') in Fortinet FortiWLM version 8.6.1 and below allows attacker to disclosure device, users and database information via crafted HTTP requests.\n\n- CVE-2021-39165: Cachet is an open source status page. With Cachet prior to and including 2.3.18, there is a SQL injection which is in the `SearchableTrait#scopeSearch()`. Attackers without authentication can utilize this vulnerability to exfiltrate sensitive data from the database such as administrator's password and session. The original repository of Cachet <https://github.com/CachetHQ/Cachet> is not active, the stable version 2.3.18 and it's developing 2.4 branch is affected.\n\n- CVE-2021-21263: Laravel is a web application framework. Versions of Laravel before 6.20.11, 7.30.2 and 8.22.1 contain a query binding exploitation. This same exploit applies to the illuminate/database package which is used by Laravel. If a request is crafted where a field that is normally a non-array value is an array, and that input is not validated or cast to its expected type before being passed to the query builder, an unexpected number of query bindings can be added to the query. In some situations, this will simply lead to no results being returned by the query builder; however, it is possible certain queries could be affected in a way that causes the query to return unexpected results.\n\n- CVE-2021-43038: An issue was discovered in Kaseya Unitrends Backup Appliance before 10.5.5. The wguest account could execute commands by injecting into PostgreSQL trigger functions. This allowed privilege escalation from the wguest user to the postgres user.\n\n- CVE-2021-36348: iDRAC9 versions prior to 5.00.20.00 contain an input injection vulnerability. A remote authenticated malicious user with low privileges may potentially exploit this vulnerability to cause information disclosure or denial of service by supplying specially crafted input data to iDRAC.\n\n- CVE-2020-13590: Multiple exploitable SQL injection vulnerabilities exist in the 'entities/fields' page of the Rukovoditel Project Management App 2.7.2. A specially crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger these vulnerabilities, this can be done either with administrator credentials or through cross-site request forgery.\n\n- CVE-2020-18081: The checkuser function of SEMCMS 3.8 was discovered to contain a vulnerability which allows attackers to obtain the password in plaintext through a SQL query.\n\n- CVE-2020-5722: The HTTP interface of the Grandstream UCM6200 series is vulnerable to an unauthenticated remote SQL injection via crafted HTTP request. An attacker can use this vulnerability to execute shell commands as root on versions before 1.0.19.20 or inject HTML in password recovery emails in versions before 1.0.20.17.\n\n- CVE-2021-21915: An exploitable SQL injection vulnerability exist in the \u2018group_list\u2019 page of the Advantech R-SeeNet 2.4.15 (30.07.2021). A specially-crafted HTTP request at \u2018company_filter\u2019 parameter. An attacker can make authenticated HTTP requests to trigger this vulnerability. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21916: An exploitable SQL injection vulnerability exist in the \u2018group_list\u2019 page of the Advantech R-SeeNet 2.4.15 (30.07.2021). A specially-crafted HTTP request at 'description_filter\u2019 parameter. An attacker can make authenticated HTTP requests to trigger this vulnerability. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21917: An exploitable SQL injection vulnerability exist in the \u2018group_list\u2019 page of the Advantech R-SeeNet 2.4.15 (30.07.2021). A specially-crafted HTTP request at '\u2018ord\u2019 parameter. An attacker can make authenticated HTTP requests to trigger this vulnerability. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21918: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at \u2018name_filter\u2019 parameter. However, the high privilege super-administrator account needs to be used to achieve exploitation without cross-site request forgery attack.\n\n- CVE-2021-21919: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at ord\u2019 parameter. However, the high privilege super-administrator account needs to be used to achieve exploitation without cross-site request forgery attack.\n\n- CVE-2021-21920: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at \u2018surname_filter\u2019 parameter with the administrative account or through cross-site request forgery.\n\n- CVE-2021-21921: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at \u2018name_filter\u2019 parameter with the administrative account or through cross-site request forgery.\n\n- CVE-2021-21922: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at \u2018username_filter\u2019 parameter with the administrative account or through cross-site request forgery.\n\n- CVE-2021-21923: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at \u2018company_filter\u2019 parameter with the administrative account or through cross-site request forgery.\n\n- CVE-2021-21924: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger these vulnerabilities. This can be done as any authenticated user or through cross-site request forgery at \u2018desc_filter\u2019 parameter.\n\n- CVE-2021-21925: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger these vulnerabilities. This can be done as any authenticated user or through cross-site request forgery at \u2018firm_filter\u2019 parameter.\n\n- CVE-2021-21926: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger these vulnerabilities. This can be done as any authenticated user or through cross-site request forgery at \u2018health_filter\u2019 parameter.\n\n- CVE-2021-21927: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger these vulnerabilities. This can be done as any authenticated user or through cross-site request forgery at \u2018loc_filter\u2019 parameter.\n\n- CVE-2021-21928: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests at \u2018mac_filter\u2019 parameter to trigger this vulnerability. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21929: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests at \u2018prod_filter\u2019 parameter to trigger this vulnerability. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21930: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests at \u2018sn_filter\u2019 parameter to trigger this vulnerability. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21931: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests at\u2018 stat_filter\u2019 parameter to trigger this vulnerability. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21932: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this at \u2018name_filter\u2019 parameter. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21933: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this at \u2018esn_filter\u2019 parameter. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21934: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this at \u2018imei_filter\u2019 parameter. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21935: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at \u2018host_alt_filter2\u2019 parameter. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21936: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at \u2018health_alt_filter\u2019 parameter. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21937: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at \u2018host_alt_filter\u2019 parameter. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-23214: When the server is configured to use trust authentication with a clientcert requirement or to use cert authentication, a man-in-the-middle attacker can inject arbitrary SQL queries when a connection is first established, despite the use of SSL certificate verification and encryption.\n\n- CVE-2021-24928: The Rearrange Woocommerce Products WordPress plugin before 3.0.8 does not have proper access controls in the save_all_order AJAX action, nor validation and escaping when inserting user data in SQL statement, leading to an SQL injection, and allowing any authenticated user, such as subscriber, to modify arbitrary post content (for example with an XSS payload), as well as exfiltrate any data by copying it to another post.\n\n- CVE-2021-25037: The All in One SEO WordPress plugin before 4.1.5.3 is affected by an authenticated SQL injection issue, which was discovered during an internal audit by the Jetpack Scan team, and could grant attackers access to privileged information from the affected site\u2019s database (e.g., usernames and hashed passwords).\n\n- CVE-2021-25069: The Download Manager WordPress plugin before 3.2.34 does not sanitise and escape the package_ids parameter before using it in a SQL statement, leading to a SQL injection, which can also be exploited to cause a Reflected Cross-Site Scripting issue\n\n- CVE-2021-25076: The WP User Frontend WordPress plugin before 3.5.26 does not validate and escape the status parameter before using it in a SQL statement in the Subscribers dashboard, leading to an SQL injection. Due to the lack of sanitisation and escaping, this could also lead to Reflected Cross-Site Scripting\n\n- CVE-2021-25109: The Futurio Extra WordPress plugin before 1.6.3 is affected by a SQL Injection vulnerability that could be used by high privilege users to extract data from the database as well as used to perform Cross-Site Scripting (XSS) against logged in admins by making send open a malicious link.\n\n- CVE-2021-36722: Emuse - eServices / eNvoice SQL injection can be used in various ways ranging from bypassing login authentication or dumping the whole database to full RCE on the affected endpoints. The SQLi caused by CWE-209: Generation of Error Message Containig Sensetive Information, showing parts of the aspx code and the webroot location , information an attacker can leverage to further compromise the host.\n\n- CVE-2021-41942: The Magic CMS MSVOD v10 video system has a SQL injection vulnerability. Attackers can use vulnerabilities to obtain sensitive information in the database.\n\n- CVE-2021-44653: Online Magazine Management System 1.0 contains a SQL injection authentication bypass vulnerability. The Admin panel authentication can be bypassed due to SQL injection vulnerability in the login form allowing attacker to gain access as admin to the application.\n\n- CVE-2021-44655: Online Pre-owned/Used Car Showroom Management System 1.0 contains a SQL injection authentication bypass vulnerability. Admin panel authentication can be bypassed due to SQL injection vulnerability in the login form allowing attacker to get admin access on the application.\n\n- CVE-2021-45406: In SalonERP 3.0.1, a SQL injection vulnerability allows an attacker to inject payload using 'sql' parameter in SQL query while generating a report. Upon successfully discovering the login admin password hash, it can be decrypted to obtain the plain-text password.\n\n- CVE-2020-12271: A SQL injection issue was found in SFOS 17.0, 17.1, 17.5, and 18.0 before 2020-04-25 on Sophos XG Firewall devices, as exploited in the wild in April 2020. This affected devices configured with either the administration (HTTPS) service or the User Portal exposed on the WAN zone. A successful attack may have caused remote code execution that exfiltrated usernames and hashed passwords for the local device admin(s), portal admins, and user accounts used for remote access (but not external Active Directory or LDAP passwords)\n\n- CVE-2020-17463: FUEL CMS 1.4.7 allows SQL Injection via the col parameter to /pages/items, /permissions/items, or /navigation/items.\n\n- CVE-2021-20016: A SQL-Injection vulnerability in the SonicWall SSLVPN SMA100 product allows a remote unauthenticated attacker to perform SQL query to access username password and other session related information. This vulnerability impacts SMA100 build version 10.x.\n\n- CVE-2021-20028: Improper neutralization of a SQL Command leading to SQL Injection vulnerability impacting end-of-life Secure Remote Access (SRA) products, specifically the SRA appliances running all 8.x firmware and 9.0.0.9-26sv or earlier\n\n- CVE-2021-27101: Accellion FTA 9_12_370 and earlier is affected by SQL injection via a crafted Host header in a request to document_root.html. The fixed version is FTA_9_12_380 and later.\n\n- CVE-2021-42258: BQE BillQuick Web Suite 2018 through 2021 before 22.0.9.1 allows SQL injection for unauthenticated remote code execution, as exploited in the wild in October 2021 for ransomware installation. SQL injection can, for example, use the txtID (aka username) parameter. Successful exploitation can include the ability to execute arbitrary code as MSSQLSERVER$ via xp_cmdshell.\n\n- CVE-2021-26634: SQL injection and file upload attacks are possible due to insufficient validation of input values in some parameters and variables of files compromising Maxboard, which may lead to arbitrary code execution or privilege escalation. Attackers can use these vulnerabilities to perform attacks such as stealing server management rights using a web shell.\n\n- CVE-2021-41433: SQL Injection vulnerability exists in version 1.0 of the Resumes Management and Job Application Website application login form by EGavilan Media that allows authentication bypass through login.php.\n\n- CVE-2022-0366: An authenticated and authorized agent user could potentially gain administrative access via an SQLi vulnerability to Capsule8 Console between versions 4.6.0 and 4.9.1.\n\n- CVE-2022-0439: The Email Subscribers & Newsletters WordPress plugin before 5.3.2 does not correctly escape the `order` and `orderby` parameters to the `ajax_fetch_report_list` action, making it vulnerable to blind SQL injection attacks by users with roles as low as Subscriber. Further, it does not have any CSRF protection in place for the action, allowing an attacker to trick any logged in user to perform the action by clicking a link.\n\n- CVE-2022-23857: model/criteria/criteria.go in Navidrome before 0.47.5 is vulnerable to SQL injection attacks when processing crafted Smart Playlists. An authenticated user could abuse this to extract arbitrary data from the database, including the user table (which contains sensitive information such as the users' encrypted passwords).\n\n- CVE-2022-24690: An issue was discovered in DSK DSKNet 2.16.136.0 and 2.17.136.5. A PresAbs.php SQL Injection vulnerability allows unauthenticated users to taint database data and extract sensitive information via crafted HTTP requests. The type of SQL Injection is blind boolean based. (An unauthenticated attacker can discover the endpoint by abusing a Broken Access Control issue with further SQL injection attacks to gather all user's badge numbers and PIN codes.)\n\n- CVE-2022-29603: A SQL Injection vulnerability exists in UniverSIS UniverSIS-API through 1.2.1 via the $select parameter to multiple API endpoints. A remote authenticated attacker could send crafted SQL statements to a vulnerable endpoint (such as /api/students/me/messages/) to, for example, retrieve personal information or change grades.\n\n- CVE-2022-29652: Online Sports Complex Booking System 1.0 is vulnerable to SQL Injection via /scbs/classes/Users.php?f=save_client.\n\n- CVE-2022-30335: Bonanza Wealth Management System (BWM) 7.3.2 allows SQL injection via the login form. Users who supply the application with a SQL injection payload in the User Name textbox could collect all passwords in encrypted format from the Microsoft SQL Server component.\n\n- CVE-2022-36669: Hospital Information System version 1.0 suffers from a remote SQL injection vulnerability that allows for authentication bypass.\n\n- CVE-2021-35226: An entity in Network Configuration Manager product is misconfigured and exposing password field to Solarwinds Information Service (SWIS). Exposed credentials are encrypted and require authenticated access with an NCM role. \n\n- CVE-2022-46163: Travel support program is a rails app to support the travel support program of openSUSE (TSP). Sensitive user data (bank account details, password Hash) can be extracted via Ransack query injection. Every deployment of travel-support-program below the patched version is affected. The travel-support-program uses the Ransack library to implement search functionality. In its default configuration, Ransack will allow for query conditions based on properties of associated database objects [1]. The `*_start`, `*_end` or `*_cont` search matchers [2] can then be abused to exfiltrate sensitive string values of associated database objects via character-by-character brute-force (A match is indicated by the returned JSON not being empty). A single bank account number can be extracted with <200 requests, a password hash can be extracted with ~1200 requests, all within a few minutes. The problem has been patched in commit d22916275c51500b4004933ff1b0a69bc807b2b7. In order to work around this issue, you can also cherry pick that patch, however it will not work without the Rails 5.0 migration that was done in #150, which in turn had quite a few pull requests it depended on.\n\n- CVE-2021-3958: Improper Handling of Parameters vulnerability in Ipack Automation Systems Ipack SCADA Software allows : Blind SQL Injection.This issue affects Ipack SCADA Software: from unspecified before 1.1.0. \n\n- CVE-2021-42760: A improper neutralization of special elements used in an sql command ('sql injection') in Fortinet FortiWLM version 8.6.1 and below allows attacker to disclose sensitive information from DB tables via crafted requests.\n\n- CVE-2021-43077: A improper neutralization of special elements used in an sql command ('sql injection') in Fortinet FortiWLM version 8.6.2 and below, version 8.5.2 and below, version 8.4.2 and below, version 8.3.2 and below allows attacker to execute unauthorized code or commands via crafted HTTP requests to the AP monitor handlers.\n\n- CVE-2021-43925: Improper neutralization of special elements used in an SQL command ('SQL Injection') vulnerability in Log Management functionality in Synology DiskStation Manager (DSM) before 7.0.1-42218-2 allows remote attackers to inject SQL commands via unspecified vectors.\n\n- CVE-2021-43926: Improper neutralization of special elements used in an SQL command ('SQL Injection') vulnerability in Log Management functionality in Synology DiskStation Manager (DSM) before 7.0.1-42218-2 allows remote attackers to inject SQL commands via unspecified vectors.\n\n- CVE-2021-43927: Improper neutralization of special elements used in an SQL command ('SQL Injection') vulnerability in Security Management functionality in Synology DiskStation Manager (DSM) before 7.0.1-42218-2 allows remote attackers to inject SQL commands via unspecified vectors.\n\n- CVE-2022-0224: dolibarr is vulnerable to Improper Neutralization of Special Elements used in an SQL Command\n\n- CVE-2022-0258: pimcore is vulnerable to Improper Neutralization of Special Elements used in an SQL Command\n\n- CVE-2022-1358: The affected On-Premise is vulnerable to data exfiltration through improper neutralization of special elements used in an SQL command. This could allow an attacker to exfiltrate and dump all data held in the cnMaestro database.\n\n- CVE-2022-1361: The affected On-Premise cnMaestro is vulnerable to a pre-auth data exfiltration through improper neutralization of special elements used in an SQL command. This could allow an attacker to exfiltrate data about other user\u2019s accounts and devices.\n\n- CVE-2022-22280: Improper Neutralization of Special Elements used in an SQL Command leading to Unauthenticated SQL Injection vulnerability, impacting SonicWall GMS 9.3.1-SP2-Hotfix1, Analytics On-Prem 2.5.0.3-2520 and earlier versions.\n\n- CVE-2022-3332: A vulnerability classified as critical has been found in SourceCodester Food Ordering Management System. This affects an unknown part of the file router.php of the component POST Parameter Handler. The manipulation of the argument username leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-209583.\n\n- CVE-2022-3414: A vulnerability was found in SourceCodester Web-Based Student Clearance System. It has been classified as critical. Affected is an unknown function of the file /Admin/login.php of the component POST Parameter Handler. The manipulation of the argument txtusername leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-210246 is the identifier assigned to this vulnerability.\n\n- CVE-2022-3467: A vulnerability classified as critical was found in Jiusi OA. Affected by this vulnerability is an unknown functionality of the file /jsoa/hntdCustomDesktopActionContent. The manipulation of the argument inforid leads to sql injection. The exploit has been disclosed to the public and may be used. The identifier VDB-210709 was assigned to this vulnerability.\n\n- CVE-2022-3470: A vulnerability was found in SourceCodester Human Resource Management System. It has been classified as critical. Affected is an unknown function of the file getstatecity.php. The manipulation of the argument sc leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-210714 is the identifier assigned to this vulnerability.\n\n- CVE-2022-3825: A vulnerability was found in Huaxia ERP 2.3 and classified as critical. Affected by this issue is some unknown functionality of the component User Management. The manipulation of the argument login leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-212792.\n\n- CVE-2022-3827: A vulnerability was found in centreon. It has been declared as critical. This vulnerability affects unknown code of the file formContactGroup.php of the component Contact Groups Form. The manipulation of the argument cg_id leads to sql injection. The attack can be initiated remotely. The name of the patch is 293b10628f7d9f83c6c82c78cf637cbe9b907369. It is recommended to apply a patch to fix this issue. VDB-212794 is the identifier assigned to this vulnerability.\n\n- CVE-2022-3868: A vulnerability classified as critical has been found in SourceCodester Sanitization Management System. Affected is an unknown function of the file /php-sms/classes/Master.php?f=save_quote. The manipulation of the argument id leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-213012.\n\n- CVE-2022-3971: A vulnerability was found in matrix-appservice-irc up to 0.35.1. It has been declared as critical. This vulnerability affects unknown code of the file src/datastore/postgres/PgDataStore.ts. The manipulation of the argument roomIds leads to sql injection. Upgrading to version 0.36.0 is able to address this issue. The name of the patch is 179313a37f06b298150edba3e2b0e5a73c1415e7. It is recommended to upgrade the affected component. VDB-213550 is the identifier assigned to this vulnerability.\n\n- CVE-2022-3972: A vulnerability was found in Pingkon HMS-PHP. It has been rated as critical. This issue affects some unknown processing of the file admin/adminlogin.php. The manipulation of the argument uname/pass leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-213551.\n\n- CVE-2022-3973: A vulnerability classified as critical has been found in Pingkon HMS-PHP. Affected is an unknown function of the file /admin/admin.php of the component Data Pump Metadata. The manipulation of the argument uname/pass leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-213552.\n\n- CVE-2022-3997: A vulnerability, which was classified as critical, has been found in MonikaBrzica scm. Affected by this issue is some unknown functionality of the file upis_u_bazu.php. The manipulation of the argument email/lozinka/ime/id leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. VDB-213698 is the identifier assigned to this vulnerability.\n\n- CVE-2022-3998: A vulnerability, which was classified as critical, was found in MonikaBrzica scm. This affects an unknown part of the file uredi_korisnika.php. The manipulation of the argument id leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-213699.\n\n- CVE-2022-4015: A vulnerability, which was classified as critical, was found in Sports Club Management System 119. This affects an unknown part of the file admin/make_payments.php. The manipulation of the argument m_id/plan leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-213789 was assigned to this vulnerability.\n\n- CVE-2022-4247: A vulnerability classified as critical was found in Movie Ticket Booking System. This vulnerability affects unknown code of the file booking.php. The manipulation of the argument id leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-214624.\n\n- CVE-2022-4248: A vulnerability, which was classified as critical, has been found in Movie Ticket Booking System. This issue affects some unknown processing of the file editBooking.php. The manipulation of the argument id leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-214625 was assigned to this vulnerability.\n\n- CVE-2022-3471: A vulnerability was found in SourceCodester Human Resource Management System. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file city.php. The manipulation of the argument searccity leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-210715.\n\n- CVE-2022-3472: A vulnerability was found in SourceCodester Human Resource Management System. It has been rated as critical. Affected by this issue is some unknown functionality of the file city.php. The manipulation of the argument cityedit leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-210716.\n\n- CVE-2022-3473: A vulnerability classified as critical has been found in SourceCodester Human Resource Management System. This affects an unknown part of the file getstatecity.php. The manipulation of the argument ci leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-210717 was assigned to this vulnerability.\n\n- CVE-2022-3579: A vulnerability classified as critical was found in SourceCodester Cashier Queuing System 1.0. This vulnerability affects unknown code of the file /queuing/login.php of the component Login Page. The manipulation of the argument username/password leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-211186 is the identifier assigned to this vulnerability.\n\n- CVE-2022-3584: A vulnerability was found in SourceCodester Canteen Management System 1.0. It has been rated as critical. This issue affects some unknown processing of the file edituser.php. The manipulation of the argument id leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-211193 was assigned to this vulnerability.\n\n- CVE-2022-3671: A vulnerability classified as critical was found in SourceCodester eLearning System 1.0. This vulnerability affects unknown code of the file /admin/students/manage.php. The manipulation of the argument id leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-212014 is the identifier assigned to this vulnerability.\n\n- CVE-2022-3714: A vulnerability classified as critical has been found in SourceCodester Online Medicine Ordering System 1.0. Affected is an unknown function of the file admin/?page=orders/view_order. The manipulation of the argument id leads to sql injection. It is possible to launch the attack remotely. VDB-212346 is the identifier assigned to this vulnerability.\n\n- CVE-2022-3729: A vulnerability, which was classified as critical, has been found in seccome Ehoney. This issue affects some unknown processing of the file /api/v1/attack. The manipulation of the argument AttackIP leads to sql injection. The attack may be initiated remotely. The associated identifier of this vulnerability is VDB-212411.\n\n- CVE-2022-3730: A vulnerability, which was classified as critical, was found in seccome Ehoney. Affected is an unknown function of the file /api/v1/attack/falco. The manipulation of the argument Payload leads to sql injection. It is possible to launch the attack remotely. The identifier of this vulnerability is VDB-212412.\n\n- CVE-2022-3731: A vulnerability has been found in seccome Ehoney and classified as critical. Affected by this vulnerability is an unknown functionality of the file /api/v1/attack/token. The manipulation of the argument Payload leads to sql injection. The attack can be launched remotely. The identifier VDB-212413 was assigned to this vulnerability.\n\n- CVE-2022-3733: A vulnerability was found in SourceCodester Web-Based Student Clearance System. It has been classified as critical. This affects an unknown part of the file Admin/edit-admin.php. The manipulation of the argument id leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-212415.\n\nRelated Weaknesses:\n\n- CWE-943 (ChildOf)\n\n- CWE-74 (ChildOf)",
            "type": "Base",
            "source": "sparse",
            "search_source": "weakness:command injection",
            "sources": [
              "base",
              "weakness"
            ],
            "boost_factor": 2.8,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              }
            }
          },
          {
            "cwe_id": "259",
            "name": "Use of Hard-coded Password",
            "description": "The product contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.",
            "score": 87.74115526296906,
            "matched_text": "CWE-259: Use of Hard-coded Password\n\nType: Variant\n\nStatus: Draft\n\nDescription:\n\nThe product contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.\n\nExtended Details:\n\n\n\nA hard-coded password typically leads to a significant authentication failure that can be difficult for the system administrator to detect. Once detected, it can be difficult to fix, so the administrator may be forced into disabling the product entirely. There are two main variations:\n\n```\n\t\tInbound: the product contains an authentication mechanism that checks for a hard-coded password.\n\t\tOutbound: the product connects to another system or component, and it contains hard-coded password for connecting to that component.\n```\nIn the Inbound variant, a default administration account is created, and a simple password is hard-coded into the product and associated with that account. This hard-coded password is the same for each installation of the product, and it usually cannot be changed or disabled by system administrators without manually modifying the program, or otherwise patching the product. If the password is ever discovered or published (a common occurrence on the Internet), then anybody with knowledge of this password can access the product. Finally, since all installations of the product will have the same password, even across different organizations, this enables massive attacks such as worms to take place.\n\nThe Outbound variant applies to front-end systems that authenticate with a back-end service. The back-end service may require a fixed password which can be easily discovered. The programmer may simply hard-code those back-end credentials into the front-end product. Any user of that program may be able to extract the password. Client-side systems with hard-coded passwords pose even more of a threat, since the extraction of a password from a binary is usually very simple.\n\n\nReal-World Examples:\n\n- CVE-2022-29964: Distributed Control System (DCS) has hard-coded passwords for local shell access\n\n- CVE-2021-37555: Telnet service for IoT feeder for dogs and cats has hard-coded password [REF-1288]\n\n- CVE-2021-35033: Firmware for a WiFi router uses a hard-coded password for a BusyBox shell, allowing bypass of authentication through the UART port\n\nTop 25 CWE Examples:\n\n- CVE-2021-27438: The software contains a hard-coded password it uses for its own inbound authentication or for outbound communication to external components on the Reason DR60 (all firmware versions prior to 02A04.1).\n\n- CVE-2021-34757: Multiple vulnerabilities in Cisco Business 220 Series Smart Switches firmware could allow an attacker with Administrator privileges to access sensitive login credentials or reconfigure the passwords on the user account. For more information about these vulnerabilities, see the Details section of this advisory.\n\n- CVE-2020-1716: A flaw was found in the ceph-ansible playbook where it contained hardcoded passwords that were being used as default passwords while deploying Ceph services. Any authenticated attacker can abuse this flaw to brute-force Ceph deployments, and gain administrator access to Ceph clusters via the Ceph dashboard to initiate read, write, and delete Ceph clusters and also modify Ceph cluster configurations. Versions before ceph-ansible 6.0.0alpha1 are affected.\n\n- CVE-2021-21818: A hard-coded password vulnerability exists in the Zebra IP Routing Manager functionality of D-LINK DIR-3040 1.13B03. A specially crafted network request can lead to a denial of service. An attacker can send a sequence of requests to trigger this vulnerability.\n\n- CVE-2021-21820: A hard-coded password vulnerability exists in the Libcli Test Environment functionality of D-LINK DIR-3040 1.13B03. A specially crafted network request can lead to code execution. An attacker can send a sequence of requests to trigger this vulnerability.\n\n- CVE-2021-27440: The software contains a hard-coded password it uses for its own inbound authentication or for outbound communication to external components on the Reason DR60 (all firmware versions prior to 02A04.1).\n\n- CVE-2021-27452: The software contains a hard-coded password that could allow an attacker to take control of the merging unit using these hard-coded credentials on the MU320E (all firmware versions prior to v04A00.1).\n\n- CVE-2021-32454: SITEL CAP/PRX firmware version 5.2.01 makes use of a hardcoded password. An attacker with access to the device could modify these credentials, leaving the administrators of the device without access.\n\n- CVE-2021-32459: Trend Micro Home Network Security version 6.6.604 and earlier contains a hard-coded password vulnerability in the log collection server which could allow an attacker to use a specially crafted network request to lead to arbitrary authentication. An attacker must first obtain the ability to execute high-privileged code on the target device in order to exploit this vulnerability.\n\n- CVE-2021-36799: KNX ETS5 through 5.7.6 uses the hard-coded password ETS5Password, with a salt value of Ivan Medvedev, allowing local users to read project information. NOTE: This vulnerability only affects products that are no longer supported by the maintainer\n\n- CVE-2021-38456: A use of hard-coded password vulnerability in the Moxa MXview Network Management software Versions 3.x to 3.2.2 may allow an attacker to gain access through accounts using default passwords\n\n- CVE-2021-43575: KNX ETS6 through 6.0.0 uses the hard-coded password ETS5Password, with a salt value of Ivan Medvedev, allowing local users to read project information, a similar issue to CVE-2021-36799. NOTE: The vendor disputes this because it is not the responsibility of the ETS to securely store cryptographic key material when it is not being exported\n\n- CVE-2020-25752: An issue was discovered on Enphase Envoy R3.x and D4.x devices. There are hardcoded web-panel login passwords for the installer and Enphase accounts. The passwords for these accounts are hardcoded values derived from the MD5 hash of the username and serial number mixed with some static strings. The serial number can be retrieved by an unauthenticated user at /info.xml. These passwords can be easily calculated by an attacker; users are unable to change these passwords.\n\n- CVE-2020-29321: The D-Link router DIR-868L 3.01 is vulnerable to credentials disclosure in telnet service through decompilation of firmware, that allows an unauthenticated attacker to gain access to the firmware and to extract sensitive data.\n\n- CVE-2020-29322: The D-Link router DIR-880L 1.07 is vulnerable to credentials disclosure in telnet service through decompilation of firmware, that allows an unauthenticated attacker to gain access to the firmware and to extract sensitive data.\n\n- CVE-2020-29323: The D-link router DIR-885L-MFC 1.15b02, v1.21b05 is vulnerable to credentials disclosure in telnet service through decompilation of firmware, that allows an unauthenticated attacker to gain access to the firmware and to extract sensitive data.\n\n- CVE-2021-45520: Certain NETGEAR devices are affected by a hardcoded password. This affects RBK352 before 4.4.0.10, RBR350 before 4.4.0.10, and RBS350 before 4.4.0.10.\n\n- CVE-2021-45521: Certain NETGEAR devices are affected by a hardcoded password. This affects RBK352 before 4.4.0.10, RBR350 before 4.4.0.10, and RBS350 before 4.4.0.10.\n\n- CVE-2021-45522: NETGEAR XR1000 devices before 1.0.0.58 are affected by a hardcoded password.\n\n- CVE-2022-26138: The Atlassian Questions For Confluence app for Confluence Server and Data Center creates a Confluence user account in the confluence-users group with the username disabledsystemuser and a hardcoded password. A remote, unauthenticated attacker with knowledge of the hardcoded password could exploit this to log into Confluence and access all content accessible to users in the confluence-users group. This user account is created when installing versions 2.7.34, 2.7.35, and 3.0.2 of the app.\n\n- CVE-2021-31477: This vulnerability allows remote attackers to execute arbitrary code on affected installations of GE Reason RPV311 14A03. Authentication is not required to exploit this vulnerability. The specific flaw exists within the firmware and filesystem of the device. The firmware and filesystem contain hard-coded default credentials. An attacker can leverage this vulnerability to execute code in the context of the download user. Was ZDI-CAN-11852.\n\n- CVE-2022-1162: A hardcoded password was set for accounts registered using an OmniAuth provider (e.g. OAuth, LDAP, SAML) in GitLab CE/EE versions 14.7 prior to 14.7.7, 14.8 prior to 14.8.5, and 14.9 prior to 14.9.2 allowing attackers to potentially take over accounts\n\n- CVE-2022-22144: A hard-coded password vulnerability exists in the libcommonprod.so prod_change_root_passwd functionality of TCL LinkHub Mesh Wi-Fi MS1G_00_01.00_14. During system startup this functionality is always called, leading to a known root password. An attacker does not have to do anything to trigger this vulnerability.\n\n- CVE-2022-25577: ALF-BanCO v8.2.5 and below was discovered to use a hardcoded password to encrypt the SQLite database containing the user's data. Attackers who are able to gain remote or local access to the system are able to read and modify the data.\n\n- CVE-2022-26119: A improper authentication vulnerability in Fortinet FortiSIEM before 6.5.0 allows a local attacker with CLI access to perform operations on the Glassfish server directly via a hardcoded password.\n\n- CVE-2022-27172: A hard-coded password vulnerability exists in the console infactory functionality of InHand Networks InRouter302 V3.5.37. A specially-crafted network request can lead to privileged operation execution. An attacker can send a sequence of requests to trigger this vulnerability.\n\n- CVE-2022-29644: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a hard coded password for the telnet service stored in the component /web_cste/cgi-bin/product.ini.\n\n- CVE-2022-29645: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a hard coded password for root stored in the component /etc/shadow.sample.\n\n- CVE-2022-29825: Use of Hard-coded Password vulnerability in Mitsubishi Electric GX Works3 versions from 1.000A to 1.090U and GT Designer3 Version1 (GOT2000) versions from 1.122C to 1.290C allows an unauthenticated attacker to disclose sensitive information. As a result, unauthenticated users may view programs and project files or execute programs illegally.\n\n- CVE-2022-29831: Use of Hard-coded Password vulnerability in Mitsubishi Electric Corporation GX Works3 versions from 1.015R to 1.095Z allows a remote unauthenticated attacker to obtain information about the project file for MELSEC safety CPU modules.\n\n- CVE-2022-29889: A hard-coded password vulnerability exists in the telnet functionality of Abode Systems, Inc. iota All-In-One Security Kit 6.9Z. Use of a hard-coded root password can lead to arbitrary command execution. An attacker can authenticate with hard-coded credentials to trigger this vulnerability.\n\n- CVE-2022-32967: RTL8111EP-CG/RTL8111FP-CG DASH function has hard-coded password. An unauthenticated physical attacker can use the hard-coded default password during system reboot triggered by other user, to acquire partial system information such as serial number and server information.\n\n- CVE-2022-34005: An issue was discovered in TitanFTP (aka Titan FTP) NextGen before 1.2.1050. There is Remote Code Execution due to a hardcoded password for the sa account on the Microsoft SQL Express 2019 instance installed by default during TitanFTP NextGen installation, aka NX-I674 (sub-issue 1). NOTE: as of 2022-06-21, the 1.2.1050 release corrects this vulnerability in a new installation, but not in an upgrade installation.\n\n- CVE-2022-34462:  Dell EMC SCG Policy Manager, versions from 5.10 to 5.12, contain(s) a Hard-coded Password Vulnerability. An attacker, with the knowledge of the hard-coded credentials, could potentially exploit this vulnerability to login to the system to gain admin privileges. \n\n- CVE-2022-35491: TOTOLINK A3002RU V3.0.0-B20220304.1804 has a hardcoded password for root in /etc/shadow.sample.\n\n- CVE-2022-35866: This vulnerability allows remote attackers to bypass authentication on affected installations of Vinchin Backup and Recovery 6.5.0.17561. Authentication is not required to exploit this vulnerability. The specific flaw exists within the configuration of the MySQL server. The server uses a hard-coded password for the administrator user. An attacker can leverage this vulnerability to bypass authentication on the system. Was ZDI-CAN-17139.\n\n- CVE-2022-36610: TOTOLINK A720R V4.1.5cu.532_B20210610 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36611: TOTOLINK A800R V4.1.2cu.5137_B20200730 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36612: TOTOLINK A950RG V4.1.2cu.5204_B20210112 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36613: TOTOLINK N600R V4.3.0cu.7647_B20210106 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36614: TOTOLINK A860R V4.1.2cu.5182_B20201027 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36615: TOTOLINK A3000RU V4.1.2cu.5185_B20201128 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36616: TOTOLINK A810R V4.1.2cu.5182_B20201026 and V5.9c.4050_B20190424 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-37841: In TOTOLINK A860R V4.1.2cu.5182_B20201027 there is a hard coded password for root in /etc/shadow.sample.\n\n- CVE-2022-37857: bilde2910 Hauk v1.6.1 requires a hardcoded password which by default is blank. This hardcoded password is hashed but stored within the config.php file server-side as well as in clear-text on the android client device by default.\n\n- CVE-2022-38823: In TOTOLINK T6 V4.1.5cu.709_B20210518, there is a hard coded password for root in /etc/shadow.sample.\n\n- CVE-2022-45444: Sewio\u2019s Real-Time Location System (RTLS) Studio version 2.0.0 up to and including version 2.6.2 contains hard-coded passwords for select users in the application\u2019s database. This could allow a remote attacker to login to the database with unrestricted access. \n\n- CVE-2022-36159: Contec FXA3200 version 1.13 and under were discovered to contain a hard coded hash password for root stored in the component /etc/shadow. As the password strength is weak, it can be cracked in few minutes. Through this credential, a malicious actor can access the Wireless LAN Manager interface and open the telnet port then sniff the traffic or inject any malware.\n\n- CVE-2022-41653: Daikin SVMPC1 version 2.1.22 and prior and SVMPC2 version 1.2.3 and prior are vulnerable to an attacker obtaining user login credentials and control the system.\n\n- CVE-2022-48067: An information disclosure vulnerability in Totolink A830R V4.1.2cu.5182 allows attackers to obtain the root password via a brute-force attack.\n\nRelated Weaknesses:\n\n- CWE-798 (ChildOf)\n\n- CWE-798 (ChildOf)\n\n- CWE-798 (ChildOf)\n\n- CWE-321 (PeerOf)\n\n- CWE-257 (PeerOf)",
            "type": "Variant",
            "source": "sparse",
            "search_source": "weakness:command injection",
            "sources": [
              "base",
              "weakness"
            ],
            "boost_factor": 2.8,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              }
            }
          },
          {
            "cwe_id": "116",
            "name": "Improper Encoding or Escaping of Output",
            "description": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
            "score": 86.1787009146509,
            "matched_text": "CWE-116: Improper Encoding or Escaping of Output\n\nType: Class\n\nStatus: Draft\n\nAlternative Terms:\n\nOutput Sanitization\nOutput Validation\nOutput Encoding\n\nOutput Sanitization\nOutput Validation\nOutput Encoding\n\nOutput Sanitization\nOutput Validation\nOutput Encoding\n\nDescription:\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\nExtended Details:\n\n\n\nImproper encoding or escaping can allow attackers to change the commands that are sent to another component, inserting malicious commands instead.\n\n\nMost products follow a certain protocol that uses structured messages for communication between components, such as queries or commands. These structured messages can contain raw data interspersed with metadata or control information. For example, \"GET /index.html HTTP/1.1\" is a structured message containing a command (\"GET\") with a single argument (\"/index.html\") and metadata about which protocol version is being used (\"HTTP/1.1\").\n\n\nIf an application uses attacker-supplied inputs to construct a structured message without properly encoding or escaping, then the attacker could insert special characters that will cause the data to be interpreted as control information or metadata. Consequently, the component that receives the output will perform the wrong operations, or otherwise interpret the data incorrectly.\n\n\nReal-World Examples:\n\n- CVE-2021-41232: Chain: authentication routine in Go-based agile development product does not escape user name (CWE-116), allowing LDAP injection (CWE-90)\n\n- CVE-2008-4636: OS command injection in backup software using shell metacharacters in a filename; correct behavior would require that this filename could not be changed.\n\n- CVE-2008-0769: Web application does not set the charset when sending a page to a browser, allowing for XSS exploitation when a browser chooses an unexpected encoding.\n\n- CVE-2008-0005: Program does not set the charset when sending a page to a browser, allowing for XSS exploitation when a browser chooses an unexpected encoding.\n\n- CVE-2008-5573: SQL injection via password parameter; a strong password might contain \"&\"\n\n- CVE-2008-3773: Cross-site scripting in chat application via a message subject, which normally might contain \"&\" and other XSS-related characters.\n\n- CVE-2008-0757: Cross-site scripting in chat application via a message, which normally might be allowed to contain arbitrary content.\n\nTop 25 CWE Examples:\n\n- CVE-2021-20195: A flaw was found in keycloak in versions before 13.0.0. A Self Stored XSS attack vector escalating to a complete account takeover is possible due to user-supplied data fields not being properly encoded and Javascript code being used to process the data. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.\n\n- CVE-2021-21684: Jenkins Git Plugin 4.8.2 and earlier does not escape the Git SHA-1 checksum parameters provided to commit notifications when displaying them in a build cause, resulting in a stored cross-site scripting (XSS) vulnerability.\n\n- CVE-2021-3148: An issue was discovered in SaltStack Salt before 3002.5. Sending crafted web requests to the Salt API can result in salt.utils.thin.gen_thin() command injection because of different handling of single versus double quotes. This is related to salt/utils/thin.py.\n\n- CVE-2021-32796: xmldom is an open source pure JavaScript W3C standard-based (XML DOM Level 2 Core) DOMParser and XMLSerializer module. xmldom versions 0.6.0 and older do not correctly escape special characters when serializing elements removed from their ancestor. This may lead to unexpected syntactic changes during XML processing in some downstream applications. This issue has been resolved in version 0.7.0. As a workaround downstream applications can validate the input and reject the maliciously crafted documents.\n\n- CVE-2021-30640: A vulnerability in the JNDI Realm of Apache Tomcat allows an attacker to authenticate using variations of a valid user name and/or to bypass some of the protection provided by the LockOut Realm. This issue affects Apache Tomcat 10.0.0-M1 to 10.0.5; 9.0.0.M1 to 9.0.45; 8.5.0 to 8.5.65.\n\n- CVE-2020-27958: The Job Composer app in Ohio Supercomputer Center Open OnDemand before 1.7.19 and 1.8.x before 1.8.18 allows remote authenticated users to provide crafted input in a job template.\n\n- CVE-2021-44042: An issue was discovered in UiPath Assistant 21.4.4. User-controlled data supplied to the --process-start argument of the URI handler for uipath-assistant:// is not correctly encoded, resulting in attacker-controlled content being injected into the error message displayed (when the injected content does not match an existing process). A determined attacker could leverage this to execute JavaScript in the context of the Electron application.\n\n- CVE-2022-0210: The Random Banner WordPress plugin is vulnerable to Stored Cross-Site Scripting due to insufficient escaping via the category parameter found in the ~/include/models/model.php file which allowed attackers with administrative user access to inject arbitrary web scripts, in versions up to and including 4.1.4. This affects multi-site installations where unfiltered_html is disabled for administrators, and sites where unfiltered_html is disabled.\n\n- CVE-2022-0220: The check_privacy_settings AJAX action of the WordPress GDPR WordPress plugin before 1.9.27, available to both unauthenticated and authenticated users, responds with JSON data without an \"application/json\" content-type. Since an HTML payload isn't properly escaped, it may be interpreted by a web browser led to this endpoint. Javascript code may be executed on a victim's browser. Due to v1.9.26 adding a CSRF check, the XSS is only exploitable against unauthenticated users (as they all share the same nonce)\n\n- CVE-2022-0479: The Popup Builder WordPress plugin before 4.1.1 does not sanitise and escape the sgpb-subscription-popup-id parameter before using it in a SQL statement in the All Subscribers admin dashboard, leading to a SQL injection, which could also be used to perform Reflected Cross-Site Scripting attack against a logged in admin opening a malicious link\n\n- CVE-2022-1407: The VikBooking Hotel Booking Engine & PMS WordPress plugin before 1.5.8 does not have CSRF check in place when adding a tracking campaign, and does not escape the campaign fields when outputting them In attributes. As a result, attackers could make a logged in admin add tracking campaign with XSS payloads in them via a CSRF attack\n\n- CVE-2022-2099: The WooCommerce WordPress plugin before 6.6.0 is vulnerable to stored HTML injection due to lack of escaping and sanitizing in the payment gateway titles\n\n- CVE-2022-2241: The Featured Image from URL (FIFU) WordPress plugin before 4.0.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack. Furthermore, due to the lack of validation, sanitisation and escaping in some of them, it could also lead to Stored XSS issues\n\n- CVE-2022-22734: The Simple Quotation WordPress plugin through 1.3.2 does not have CSRF check when creating or editing a quote and does not sanitise and escape Quotes. As a result, attacker could make a logged in admin create or edit arbitrary quote, and put Cross-Site Scripting payloads in them\n\n- CVE-2022-23603: iTunesRPC-Remastered is a discord rich presence application for use with iTunes & Apple Music. In code before commit 24f43aa user input is not properly sanitized and code injection is possible. Users are advised to upgrade as soon as is possible. There are no known workarounds for this issue.\n\n- CVE-2022-23620: XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. In affected versions AbstractSxExportURLFactoryActionHandler#processSx does not escape anything from SSX document references when serializing it on filesystem, it is possible to for the HTML export process to contain reference elements containing filesystem syntax like \"../\", \"./\". or \"/\" in general. The referenced elements are not properly escaped. This issue has been resolved in version 13.6-rc-1. This issue can be worked around by limiting or disabling document export.\n\n- CVE-2022-30966: Jenkins Random String Parameter Plugin 1.0 and earlier does not escape the name and description of Random String parameters on views displaying parameters, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.\n\n- CVE-2022-48339: An issue was discovered in GNU Emacs through 28.2. htmlfontify.el has a command injection vulnerability. In the hfy-istext-command function, the parameter file and parameter srcdir come from external input, and parameters are not escaped. If a file name or directory name contains shell metacharacters, code may be executed.\n\n- CVE-2022-24682: An issue was discovered in the Calendar feature in Zimbra Collaboration Suite 8.8.x before 8.8.15 patch 30 (update 1), as exploited in the wild starting in December 2021. An attacker could place HTML containing executable JavaScript inside element attributes. This markup becomes unescaped, causing arbitrary markup to be injected into the document.\n\n- CVE-2022-42948: Cobalt Strike 4.7.1 fails to properly escape HTML tags when they are displayed on Swing components. By injecting crafted HTML code, it is possible to remotely execute code in the Cobalt Strike UI.\n\n- CVE-2021-39027: IBM Guardium Data Encryption (GDE) 4.0.0 and 5.0.0 prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved. IBM X-Force ID: 213865.\n\n- CVE-2022-41934: XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. Any user with view rights on commonly accessible documents including the menu macro can execute arbitrary Groovy, Python or Velocity code in XWiki leading to full access to the XWiki installation due to improper escaping of the macro content and parameters of the menu macro. The problem has been patched in XWiki 14.6RC1, 13.10.8 and 14.4.3. The patch (commit `2fc20891`) for the document `Menu.MenuMacro` can be manually applied or a XAR archive of a patched version can be imported. The menu macro was basically unchanged since XWiki 11.6 so on XWiki 11.6 or later the patch for version of 13.10.8 (commit `59ccca24a`) can most likely be applied, on XWiki version 14.0 and later the versions in XWiki 14.6 and 14.4.3 should be appropriate.\n\n- CVE-2022-45143: The JsonErrorReportValve in Apache Tomcat 8.5.83, 9.0.40 to 9.0.68 and 10.1.0-M1 to 10.1.1 did not escape the type, message or description values. In some circumstances these are constructed from user provided data and it was therefore possible for users to supply values that invalidated or manipulated the JSON output.\n\n- CVE-2022-28960: A PHP injection vulnerability in Spip before v3.2.8 allows attackers to execute arbitrary PHP code via the _oups parameter at /ecrire.\n\n- CVE-2022-36099: XWiki Platform Wiki UI Main Wiki is software for managing subwikis on XWiki Platform, a generic wiki platform. Starting with version 5.3-milestone-2 and prior to versions 13.10.6 and 14.4, it's possible to inject arbitrary wiki syntax including Groovy, Python and Velocity script macros via the request (URL parameter) using the `XWikiServerClassSheet` if the user has view access to this sheet and another page that has been saved with programming rights, a standard condition on a public read-only XWiki installation or a private XWiki installation where the user has an account. This allows arbitrary Groovy/Python/Velocity code execution which allows bypassing all rights checks and thus both modification and disclosure of all content stored in the XWiki installation. Also, this could be used to impact the availability of the wiki. This has been patched in versions 13.10.6 and 14.4. As a workaround, edit the affected document `XWiki.XWikiServerClassSheet` or `WikiManager.XWikiServerClassSheet` and manually perform the changes from the patch fixing the issue. On XWiki versions 12.0 and later, it is also possible to import the document `XWiki.XWikiServerClassSheet` from the xwiki-platform-wiki-ui-mainwiki package version 14.4 using the import feature of the administration application as there have been no other changes to this document since XWiki 12.0.\n\n- CVE-2022-36100: XWiki Platform Applications Tag and XWiki Platform Tag UI are tag applications for XWiki, a generic wiki platform. Starting with version 1.7 in XWiki Platform Applications Tag and prior to 13.10.6 and 14.4 in XWiki Platform Tag UI, the tags document `Main.Tags` in XWiki didn't sanitize user inputs properly. This allowed users with view rights on the document (default in a public wiki or for authenticated users on private wikis) to execute arbitrary Groovy, Python and Velocity code with programming rights. This also allowed bypassing all rights checks and thus both modification and disclosure of all content stored in the XWiki installation. The vulnerability could be used to impact the availability of the wiki. On XWiki versions before 13.10.4 and 14.2, this can be combined with CVE-2022-36092, meaning that no rights are required to perform the attack. The vulnerability has been patched in versions 13.10.6 and 14.4. As a workaround, the patch that fixes the issue can be manually applied to the document `Main.Tags` or the updated version of that document can be imported from version 14.4 of xwiki-platform-tag-ui using the import feature in the administration UI on XWiki 10.9 and later.\n\n- CVE-2022-22744: The constructed curl command from the \"Copy as curl\" feature in DevTools was not properly escaped for PowerShell. This could have lead to command injection if pasted into a Powershell prompt.<br>*This bug only affects Thunderbird for Windows. Other operating systems are unaffected.*. This vulnerability affects Firefox ESR < 91.5, Firefox < 96, and Thunderbird < 91.5.\n\n- CVE-2022-22992: A command injection remote code execution vulnerability was discovered on Western Digital My Cloud Devices that could allow an attacker to execute arbitrary system commands on the device. The vulnerability was addressed by escaping individual arguments to shell functions coming from user input.\n\n- CVE-2022-34820: A vulnerability has been identified in SIMATIC CP 1242-7 V2 (All versions < V3.3.46), SIMATIC CP 1243-1 (All versions < V3.3.46), SIMATIC CP 1243-7 LTE EU (All versions < V3.3.46), SIMATIC CP 1243-7 LTE US (All versions < V3.3.46), SIMATIC CP 1243-8 IRC (All versions < V3.3.46), SIMATIC CP 1542SP-1 IRC (All versions >= V2.0 < V2.2.28), SIMATIC CP 1543-1 (All versions < V3.0.22), SIMATIC CP 1543SP-1 (All versions >= V2.0 < V2.2.28), SIPLUS ET 200SP CP 1542SP-1 IRC TX RAIL (All versions >= V2.0 < V2.2.28), SIPLUS ET 200SP CP 1543SP-1 ISEC (All versions >= V2.0 < V2.2.28), SIPLUS ET 200SP CP 1543SP-1 ISEC TX RAIL (All versions >= V2.0 < V2.2.28), SIPLUS NET CP 1242-7 V2 (All versions < V3.3.46), SIPLUS NET CP 1543-1 (All versions < V3.0.22), SIPLUS S7-1200 CP 1243-1 (All versions < V3.3.46), SIPLUS S7-1200 CP 1243-1 RAIL (All versions < V3.3.46). The application does not correctly escape some user provided fields during the authentication process. This could allow an attacker to inject custom commands and execute arbitrary code with elevated privileges.\n\n- CVE-2022-35153: FusionPBX 5.0.1 was discovered to contain a command injection vulnerability via /fax/fax_send.php.\n\n- CVE-2022-29599: In Apache Maven maven-shared-utils prior to version 3.3.3, the Commandline class can emit double-quoted strings without proper escaping, allowing shell injection attacks.\n\n- CVE-2022-26174: A remote code execution (RCE) vulnerability in Beekeeper Studio v3.2.0 allows attackers to execute arbitrary code via a crafted payload injected into the display fields.\n\n- CVE-2021-30589: Insufficient validation of untrusted input in Sharing in Google Chrome prior to 92.0.4515.107 allowed a remote attacker to bypass navigation restrictions via a crafted click-to-call link.\n\n- CVE-2022-0124: An issue has been discovered affecting GitLab versions prior to 14.4.5, between 14.5.0 and 14.5.3, and between 14.6.0 and 14.6.1. Gitlab's Slack integration is incorrectly validating user input and allows to craft malicious URLs that are sent to slack.\n\n- CVE-2022-0741: Improper input validation in all versions of GitLab CE/EE using sendmail to send emails allowed an attacker to steal environment variables via specially crafted email addresses.\n\n- CVE-2022-20230: In choosePrivateKeyAlias of KeyChain.java, there is a possible access to the user's certificate due to improper input validation. This could lead to local information disclosure with no additional execution privileges needed. User interaction is needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12LAndroid ID: A-221859869\n\n- CVE-2022-2619: Insufficient validation of untrusted input in Settings in Google Chrome prior to 104.0.5112.79 allowed an attacker who convinced a user to install a malicious extension to inject scripts or HTML into a privileged page via a crafted HTML page.\n\n- CVE-2021-4068: Insufficient data validation in new tab page in Google Chrome prior to 96.0.4664.93 allowed a remote attacker to leak cross-origin data via a crafted HTML page.\n\nRelated Weaknesses:\n\n- CWE-707 (ChildOf)\n\n- CWE-74 (CanPrecede)",
            "type": "Class",
            "source": "sparse",
            "search_source": "weakness:command injection",
            "sources": [
              "base",
              "weakness"
            ],
            "boost_factor": 2.8,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              }
            }
          },
          {
            "cwe_id": "74",
            "name": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
            "description": "The product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.",
            "score": 85.84432739015202,
            "matched_text": "CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n\nType: Class\n\nStatus: Incomplete\n\nDescription:\n\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\nExtended Details:\n\nSoftware or other automated logic has certain assumptions about what constitutes data and control respectively. It is the lack of verification of these assumptions for user-controlled input that leads to injection problems. Injection problems encompass a wide variety of issues -- all mitigated in very different ways and usually attempted in order to alter the control flow of the process. For this reason, the most effective way to discuss these weaknesses is to note the distinct features that classify them as injection weaknesses. The most important issue to note is that all injection problems share one thing in common -- i.e., they allow for the injection of control plane data into the user-controlled data plane. This means that the execution of the process may be altered by sending code in through legitimate data channels, using no other mechanism. While buffer overflows, and many other flaws, involve the use of some further issue to gain execution, injection problems need only for the data to be parsed.\n\nReal-World Examples:\n\n- CVE-2024-5184: API service using a large generative AI model allows direct prompt injection to leak hard-coded system prompts or execute other prompts.\n\n- CVE-2022-36069: Python-based dependency management tool avoids OS command injection when generating Git commands but allows injection of optional arguments with input beginning with a dash (CWE-88), potentially allowing for code execution.\n\n- CVE-1999-0067: Canonical example of OS command injection. CGI program does not neutralize \"|\" metacharacter when invoking a phonebook program.\n\n- CVE-2022-1509: injection of sed script syntax (\"sed injection\")\n\n- CVE-2020-9054: Chain: improper input validation (CWE-20) in username parameter, leading to OS command injection (CWE-78), as exploited in the wild per CISA KEV.\n\n- CVE-2021-44228: Product does not neutralize ${xyz} style expressions, allowing remote code execution. (log4shell vulnerability)\n\nTop 25 CWE Examples:\n\n- CVE-2021-29676: IBM Security Verify (IBM Security Verify Privilege Vault 10.9.66) is vulnerable to link injection. By persuading a victim to click on a specially-crafted URL link, a remote attacker could exploit this vulnerability to conduct various attacks against the vulnerable system, including cross-site scripting, cache poisoning or session hijacking\n\n- CVE-2021-38458: A path traversal vulnerability in the Moxa MXview Network Management software Versions 3.x to 3.2.2 may allow an attacker to create or overwrite critical files used to execute code, such as programs or libraries.\n\n- CVE-2021-21137: Inappropriate implementation in DevTools in Google Chrome prior to 88.0.4324.96 allowed a remote attacker to obtain potentially sensitive information from disk via a crafted HTML page.\n\n- CVE-2021-27614: SAP Business One Hana Chef Cookbook, versions - 8.82, 9.0, 9.1, 9.2, 9.3, 10.0, used to install SAP Business One on SAP HANA, allows an attacker to inject code that can be executed by the application. An attacker could thereby control the behaviour of the application thereby highly impacting the integrity and availability of the application.\n\n- CVE-2021-3154: An issue was discovered in SolarWinds Serv-U before 15.2.2. Unauthenticated attackers can retrieve cleartext passwords via macro Injection. NOTE: this had a distinct fix relative to CVE-2020-35481.\n\n- CVE-2021-29084: Improper neutralization of special elements in output used by a downstream component ('Injection') vulnerability in Security Advisor report management component in Synology DiskStation Manager (DSM) before 6.2.3-25426-3 allows remote attackers to read arbitrary files via unspecified vectors.\n\n- CVE-2021-29085: Improper neutralization of special elements in output used by a downstream component ('Injection') vulnerability in file sharing management component in Synology DiskStation Manager (DSM) before 6.2.3-25426-3 allows remote attackers to read arbitrary files via unspecified vectors.\n\n- CVE-2021-27908: In all versions prior to Mautic 3.3.2, secret parameters such as database credentials could be exposed publicly by an authorized admin user through leveraging Symfony parameter syntax in any of the free text fields in Mautic\u2019s configuration that are used in publicly facing parts of the application.\n\n- CVE-2020-5323: Dell EMC OpenManage Enterprise (OME) versions prior to 3.2 and OpenManage Enterprise-Modular (OME-M) versions prior to 1.10.00 contain an injection vulnerability. A remote authenticated malicious user with low privileges could potentially exploit this vulnerability to gain access to sensitive information or cause denial-of-service.\n\n- CVE-2021-20101: Machform prior to version 16 is vulnerable to HTTP host header injection due to improperly validated host headers. This could cause a victim to receive malformed content.\n\n- CVE-2021-20644: ELECOM WRC-1467GHBK-A allows arbitrary scripts to be executed on the user's web browser by displaying a specially crafted SSID on the web setup page.\n\n- CVE-2021-20802: HTTP header injection vulnerability in Cybozu Remote Service 3.1.8 to 3.1.9 allows a remote attacker to alter the information stored in the product.\n\n- CVE-2021-21510: Dell iDRAC8 versions prior to 2.75.100.75 contain a host header injection vulnerability. A remote unauthenticated attacker may potentially exploit this vulnerability by injecting arbitrary \u2018Host\u2019 header values to poison a web-cache or trigger redirections.\n\n- CVE-2021-21580: Dell EMC iDRAC8 versions prior to 2.80.80.80 & Dell EMC iDRAC9 versions prior to 5.00.00.00 contain a Content spoofing / Text injection, where a malicious URL can inject text to present a customized message on the application that can phish users into believing that the message is legitimate.\n\n- CVE-2021-23400: The package nodemailer before 6.6.1 are vulnerable to HTTP Header Injection if unsanitized user input that may contain newlines and carriage returns is passed into an address object.\n\n- CVE-2021-25980: In Talkyard, versions v0.04.01 through v0.6.74-WIP-63220cb, v0.2020.22-WIP-b2e97fe0e through v0.2021.02-WIP-879ef3fe1 and tyse-v0.2021.02-879ef3fe1-regular through tyse-v0.2021.28-af66b6905-regular, are vulnerable to Host Header Injection. By luring a victim application-user to click on a link, an unauthenticated attacker can use the \u201cforgot password\u201d functionality to reset the victim\u2019s password and successfully take over their account.\n\n- CVE-2021-26084: In affected versions of Confluence Server and Data Center, an OGNL injection vulnerability exists that would allow an unauthenticated attacker to execute arbitrary code on a Confluence Server or Data Center instance. The affected versions are before version 6.13.23, from version 6.14.0 before 7.4.11, from version 7.5.0 before 7.11.6, and from version 7.12.0 before 7.12.5.\n\n- CVE-2021-28963: Shibboleth Service Provider before 3.2.1 allows content injection because template generation uses attacker-controlled parameters.\n\n- CVE-2021-36322: Dell Networking X-Series firmware versions prior to 3.0.1.8 contain a host header injection vulnerability. A remote unauthenticated attacker may potentially exploit this vulnerability by injecting arbitrary host header values to poison the web-cache or trigger redirections.\n\n- CVE-2021-36381: In Edifecs Transaction Management through 2021-07-12, an unauthenticated user can inject arbitrary text into a user's browser via logon.jsp?logon_error= on the login screen of the Web application.\n\n- CVE-2021-37033: There is an Injection attack vulnerability in Huawei Smartphone.Successful exploitation of this vulnerability may affect service availability.\n\n- CVE-2021-38290: A host header attack vulnerability exists in FUEL CMS 1.5.0 through fuel/modules/fuel/config/fuel_constants.php and fuel/modules/fuel/libraries/Asset.php. An attacker can use a man in the middle attack such as phishing.\n\n- CVE-2021-38371: The STARTTLS feature in Exim through 4.94.2 allows response injection (buffering) during MTA SMTP sending.\n\n- CVE-2021-39213: GLPI is a free Asset and IT management software package. Starting in version 9.1 and prior to version 9.5.6, GLPI with API Rest enabled is vulnerable to API bypass with custom header injection. This issue is fixed in version 9.5.6. One may disable API Rest as a workaround.\n\n- CVE-2021-40143: Sonatype Nexus Repository 3.x through 3.33.1-01 is vulnerable to an HTTP header injection. By sending a crafted HTTP request, a remote attacker may disclose sensitive information or request external resources from a vulnerable instance.\n\n- CVE-2021-43185: JetBrains YouTrack before 2021.3.23639 is vulnerable to Host header injection.\n\n- CVE-2021-25994: In Userfrosting, versions v0.3.1 to v4.6.2 are vulnerable to Host Header Injection. By luring a victim application user to click on a link, an unauthenticated attacker can use the \u201cforgot password\u201d functionality to reset the victim\u2019s password and successfully take over their account.\n\n- CVE-2021-37262: JFinal_cms 5.1.0 is vulnerable to regex injection that may lead to Denial of Service.\n\n- CVE-2021-43437: In sourcecodetester Engineers Online Portal as of 10-21-21, an attacker can manipulate the Host header as seen by the web application and cause the application to behave in unexpected ways. Very often multiple websites are hosted on the same IP address. This is where the Host Header comes in. This header specifies which website should process the HTTP request. The web server uses the value of this header to dispatch the request to the specified website. Each website hosted on the same IP address is called a virtual host. And It's possible to send requests with arbitrary Host Headers to the first virtual host.\n\n- CVE-2021-44530: An injection vulnerability exists in a third-party library used in UniFi Network Version 6.5.53 and earlier (Log4J CVE-2021-44228) allows a malicious actor to control the application.\n\n- CVE-2021-44537: ownCloud owncloud/client before 2.9.2 allows Resource Injection by a server into the desktop client via a URL, leading to remote code execution.\n\n- CVE-2021-45658: Certain NETGEAR devices are affected by server-side injection. This affects D7800 before 1.0.1.58, DM200 before 1.0.0.66, EX2700 before 1.0.1.56, EX6150v2 before 1.0.1.86, EX6100v2 before 1.0.1.86, EX6200v2 before 1.0.1.78, EX6250 before 1.0.0.110, EX6410 before 1.0.0.110, EX6420 before 1.0.0.110, EX6400v2 before 1.0.0.110, EX7300 before 1.0.2.144, EX6400 before 1.0.2.144, EX7320 before 1.0.0.110, EX7300v2 before 1.0.0.110, R7500v2 before 1.0.3.48, R7800 before 1.0.2.68, R8900 before 1.0.5.2, R9000 before 1.0.5.2, RAX120 before 1.0.1.90, RBK40 before 2.5.1.16, RBK20 before 2.5.1.16, RBR20 before 2.5.1.16, RBS20 before 2.5.1.16, RBK50 before 2.5.1.16, RBR50 before 2.5.1.16, RBS50 before 2.5.1.16, RBS50Y before 2.6.1.40, WN3000RPv2 before 1.0.0.78, WN3000RPv3 before 1.0.2.80, WNR2000v5 before 1.0.0.72, XR500 before 2.3.2.56, and XR700 before 1.0.1.20.\n\n- CVE-2021-45655: NETGEAR R6400 devices before 1.0.1.70 are affected by server-side injection.\n\n- CVE-2021-45656: Certain NETGEAR devices are affected by server-side injection. This affects D6200 before 1.1.00.38, D7000 before 1.0.1.78, R6020 before 1.0.0.48, R6080 before 1.0.0.48, R6050 before 1.0.1.26, JR6150 before 1.0.1.26, R6120 before 1.0.0.66, R6220 before 1.1.0.100, R6230 before 1.1.0.100, R6260 before 1.1.0.78, R6800 before 1.2.0.76, R6900v2 before 1.2.0.76, R6700v2 before 1.2.0.76, R7450 before 1.2.0.76, AC2100 before 1.2.0.76, AC2400 before 1.2.0.76, AC2600 before 1.2.0.76, RBK40 before 2.5.1.16, RBR40 before 2.5.1.16, RBS40 before 2.5.1.16, RBK20 before 2.5.1.16, RBR20 before 2.5.1.16, RBS20 before 2.5.1.16, RBK50 before 2.5.1.16, RBR50 before 2.5.1.16, RBS50 before 2.5.1.16, and RBS50Y before 2.6.1.40.\n\n- CVE-2021-45657: Certain NETGEAR devices are affected by server-side injection. This affects D6200 before 1.1.00.38, D7000 before 1.0.1.78, R6020 before 1.0.0.48, R6080 before 1.0.0.48, R6050 before 1.0.1.26, JR6150 before 1.0.1.26, R6120 before 1.0.0.66, R6220 before 1.1.0.100, R6230 before 1.1.0.100, R6260 before 1.1.0.78, R6800 before 1.2.0.76, R6900v2 before 1.2.0.76, R6700v2 before 1.2.0.76, R7450 before 1.2.0.76, AC2100 before 1.2.0.76, AC2400 before 1.2.0.76, AC2600 before 1.2.0.76, RBK40 before 2.5.1.16, RBR40 before 2.5.1.16, RBS40 before 2.5.1.16, RBK20 before 2.5.1.16, RBR20 before 2.5.1.16, RBS20 before 2.5.1.16, RBK50 before 2.5.1.16, RBR50 before 2.5.1.16, RBS50 before 2.5.1.16, RBS50Y before 2.6.1.40, and WNR2020 before 1.1.0.62.\n\n- CVE-2021-45659: Certain NETGEAR devices are affected by server-side injection. This affects RBK40 before 2.5.1.16, RBR40 before 2.5.1.16, RBS40 before 2.5.1.16, RBK20 before 2.5.1.16, RBR20 before 2.5.1.16, RBS20 before 2.5.1.16, RBK50 before 2.5.1.16, RBR50 before 2.5.1.16, RBS50 before 2.5.1.16, and RBS50Y before 2.6.1.40.\n\n- CVE-2021-45660: Certain NETGEAR devices are affected by server-side injection. This affects RBK40 before 2.5.1.16, RBR40 before 2.5.1.16, RBS40 before 2.5.1.16, RBK20 before 2.5.1.16, RBR20 before 2.5.1.16, RBS20 before 2.5.1.16, RBK50 before 2.5.1.16, RBR50 before 2.5.1.16, RBS50 before 2.5.1.16, and RBS50Y before 2.6.1.40.\n\n- CVE-2021-45661: Certain NETGEAR devices are affected by server-side injection. This affects RBK40 before 2.5.1.16, RBR40 before 2.5.1.16, RBS40 before 2.5.1.16, RBK20 before 2.5.1.16, RBR20 before 2.5.1.16, RBS20 before 2.5.1.16, RBK50 before 2.5.1.16, RBR50 before 2.5.1.16, RBS50 before 2.5.1.16, and RBS50Y before 2.6.1.40.\n\n- CVE-2021-32499: SICK SOPAS ET before version 4.8.0 allows attackers to manipulate the command line arguments to pass in any value to the Emulator executable.\n\n- CVE-2021-29872: IBM Cloud Pak for Automation 21.0.1 and 21.0.2 - Business Automation Studio Component is vulnerable to HTTP header injection, caused by improper validation of input by the HOST headers. By sending a specially crafted HTTP request, a remote attacker could exploit this vulnerability to inject HTTP HOST header, which will allow the attacker to conduct various attacks against the vulnerable system, including cross-site scripting, cache poisoning or session hijacking. IBM X-Force ID: 206228.\n\n- CVE-2021-41282: diag_routes.php in pfSense 2.5.2 allows sed data injection. Authenticated users are intended to be able to view data about the routes set in the firewall. The data is retrieved by executing the netstat utility, and then its output is parsed via the sed utility. Although the common protection mechanisms against command injection (i.e., the usage of the escapeshellarg function for the arguments) are used, it is still possible to inject sed-specific code and write an arbitrary file in an arbitrary location.\n\n- CVE-2022-31777: A stored cross-site scripting (XSS) vulnerability in Apache Spark 3.2.1 and earlier, and 3.3.0, allows remote attackers to execute arbitrary JavaScript in the web browser of a user, by including a malicious payload into the logs which would be returned in logs rendered in the UI.\n\n- CVE-2022-28345: The Signal app before 5.34 for iOS allows URI spoofing via RTLO injection. It incorrectly renders RTLO encoded URLs beginning with a non-breaking space, when there is a hash character in the URL. This technique allows a remote unauthenticated attacker to send legitimate looking links, appearing to be any website URL, by abusing the non-http/non-https automatic rendering of URLs. An attacker can spoof, for example, example.com, and masquerade any URL with a malicious destination. An attacker requires a subdomain such as gepj, txt, fdp, or xcod, which would appear backwards as jpeg, txt, pdf, and docx respectively.\n\n- CVE-2022-3941: A vulnerability has been found in Activity Log Plugin and classified as critical. This vulnerability affects unknown code of the component HTTP Header Handler. The manipulation of the argument X-Forwarded-For leads to improper output neutralization for logs. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-213448.\n\n- CVE-2021-36668: URL injection in Driva inSync 6.9.0 for MacOS, allows attackers to force a visit to an arbitrary url via the port parameter to the Electron App.\n\n- CVE-2022-23064: In Snipe-IT, versions v3.0-alpha to v5.3.7 are vulnerable to Host Header Injection. By sending a specially crafted host header in the reset password request, it is possible to send password reset links to users which once clicked lead to an attacker controlled server and thus leading to password reset token leak. This leads to account take over.\n\n- CVE-2022-23701: A potential remote host header injection security vulnerability has been identified in HPE Integrated Lights-Out 4 (iLO 4) firmware version(s): Prior to 2.60. This vulnerability could be remotely exploited to allow an attacker to supply invalid input to the iLO 4 webserver, causing it to respond with a redirect to an attacker-controlled domain. HPE has provided a firmware update to resolve this vulnerability in HPE Integrated Lights-Out 4 (iLO 4).\n\n- CVE-2022-25337: Ibexa DXP ezsystems/ezpublish-kernel 7.5.x before 7.5.26 and 1.3.x before 1.3.12 allows injection attacks via image filenames.\n\n- CVE-2022-31593: SAP Business One client - version 10.0 allows an attacker with low privileges, to inject code that can be executed by the application. An attacker could thereby control the behavior of the application.\n\n- CVE-2022-31658: VMware Workspace ONE Access, Identity Manager and vRealize Automation contain a remote code execution vulnerability. A malicious actor with administrator and network access can trigger a remote code execution.\n\n- CVE-2022-31665: VMware Workspace ONE Access, Identity Manager and vRealize Automation contain a remote code execution vulnerability. A malicious actor with administrator and network access can trigger a remote code execution.\n\n- CVE-2022-34773: Tabit - HTTP Method manipulation. https://bridge.tabit.cloud/configuration/addresses-query - can be POST-ed to add addresses to the DB. This is an example of OWASP:API8 \u2013 Injection.\n\n- CVE-2022-35735: In BIG-IP Versions 16.1.x before 16.1.3.1, 15.1.x before 15.1.6.1, 14.1.x before 14.1.5.1, and all versions of 13.1.x, an authenticated attacker with Resource Administrator or Manager privileges can create or modify existing monitor objects in the Configuration utility in an undisclosed manner leading to a privilege escalation. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-35954: The GitHub Actions ToolKit provides a set of packages to make creating actions easier. The `core.exportVariable` function uses a well known delimiter that attackers can use to break out of that specific variable and assign values to other arbitrary variables. Workflows that write untrusted values to the `GITHUB_ENV` file may cause the path or other environment variables to be modified without the intention of the workflow or action author. Users should upgrade to `@actions/core v1.9.1`. If you are unable to upgrade the `@actions/core` package, you can modify your action to ensure that any user input does not contain the delimiter `_GitHubActionsFileCommandDelimeter_` before calling `core.exportVariable`.\n\n- CVE-2022-46265: A vulnerability has been identified in Polarion ALM (All versions < V2304.0). The affected application contains a Host header injection vulnerability that could allow an attacker to spoof a Host header information and redirect users to malicious websites.\n\n- CVE-2022-26205: Marky commit 3686565726c65756e was discovered to contain a remote code execution (RCE) vulnerability via the Display text fields. This vulnerability allows attackers to execute arbitrary code via injection of a crafted payload.\n\n- CVE-2022-37933: A potential security vulnerability has been identified in HPE Superdome Flex and Superdome Flex 280 servers. The vulnerability could be exploited to allow local unauthorized data injection. HPE has made the following software updates to resolve the vulnerability in HPE Superdome Flex firmware 3.60.50 and below and Superdome Flex 280 servers firmware 1.40.60 and below. \n\n- CVE-2022-38796: A Host Header Injection vulnerability in Feehi CMS 2.1.1 may allow an attacker to spoof a particular header. This can be exploited by abusing password reset emails.\n\n- CVE-2022-33011: Known v1.3.1+2020120201 was discovered to allow attackers to perform an account takeover via a host header injection attack.\n\n- CVE-2022-33012: Microweber v1.2.15 was discovered to allow attackers to perform an account takeover via a host header injection attack.\n\n- CVE-2022-37108: An injection vulnerability in the syslog-ng configuration wizard in Securonix Snypr 6.4 allows an application user with the \"Manage Ingesters\" permission to execute arbitrary code on remote ingesters by appending arbitrary text to text files that are executed by the system, such as users' crontab files. The patch for this was present in SNYPR version 6.4 Jun 2022 R3_[06170871], but may have been introduced sooner.\n\nRelated Weaknesses:\n\n- CWE-707 (ChildOf)",
            "type": "Class",
            "source": "sparse",
            "search_source": "weakness:command injection",
            "sources": [
              "base",
              "weakness"
            ],
            "boost_factor": 2.8,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Discouraged",
                "rationale": "CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.",
                "comments": "Examine the children and descendants of this entry to find a more precise mapping.",
                "reasons": [
                  "Frequent Misuse",
                  "Abstraction"
                ]
              }
            }
          },
          {
            "cwe_id": "790",
            "name": "Improper Filtering of Special Elements",
            "description": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
            "score": 85.21118989842024,
            "matched_text": "CWE-790: Improper Filtering of Special Elements\n\nType: Class\n\nStatus: Incomplete\n\nDescription:\n\nThe product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.\n\nTop 25 CWE Examples:\n\n- CVE-2021-26029: An issue was discovered in Joomla! 1.6.0 through 3.9.24. Inadequate filtering of form contents could allow to overwrite the author field.\n\n- CVE-2021-0931: In getAlias of BluetoothDevice.java, there is a possible way to create misleading permission dialogs due to missing data filtering. This could lead to local information disclosure with User execution privileges needed. User interaction is needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-9Android ID: A-180747689\n\n- CVE-2022-0895: Static Code Injection in GitHub repository microweber/microweber prior to 1.3.\n\n- CVE-2022-40145: This vulnerable is about a potential code injection when an attacker has control of the target LDAP server using in the JDBC JNDI URL. The function jaas.modules.src.main.java.porg.apache.karaf.jass.modules.jdbc.JDBCUtils#doCreateDatasource use InitialContext.lookup(jndiName) without filtering. An user can modify `options.put(JDBCUtils.DATASOURCE, \"osgi:\" + DataSource.class.getName());` to `options.put(JDBCUtils.DATASOURCE,\"jndi:rmi://x.x.x.x:xxxx/Command\");` in JdbcLoginModuleTest#setup. This is vulnerable to a remote code execution (RCE) attack when a configuration uses a JNDI LDAP data source URI when an attacker has control of the target LDAP server.This issue affects all versions of Apache Karaf up to 4.4.1 and 4.3.7. We encourage the users to upgrade to Apache Karaf at least 4.4.2 or 4.3.8\n\n- CVE-2022-40740: Realtek GPON router has insufficient filtering for special characters. A remote attacker authenticated as an administrator can exploit this vulnerability to perform command injection attacks, to execute arbitrary system command, manipulate system or disrupt service.\n\n- CVE-2021-35587: Vulnerability in the Oracle Access Manager product of Oracle Fusion Middleware (component: OpenSSO Agent). Supported versions that are affected are 11.1.2.3.0, 12.2.1.3.0 and 12.2.1.4.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Oracle Access Manager. Successful attacks of this vulnerability can result in takeover of Oracle Access Manager. CVSS 3.1 Base Score 9.8 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H).\n\n- CVE-2022-24300: Minetest before 5.4.0 allows attackers to add or modify arbitrary meta fields of the same item stack as saved user input, aka ItemStack meta injection.\n\n- CVE-2022-24888: Nextcloud Server is the file server software for Nextcloud, a self-hosted productivity platform. Prior to versions 20.0.14.4, 21.0.8, 22.2.4, and 23.0.1, it is possible to create files and folders that have leading and trailing \\\\n, \\\\r, \\\\t, and \\\\v characters. The server rejects files and folders that have these characters in the middle of their names, so this might be an opportunity for injection. This issue is fixed in versions 20.0.14.4, 21.0.8, 22.2.4, and 23.0.1. There are currently no known workarounds.\n\n- CVE-2022-0578: Code Injection in GitHub repository publify/publify prior to 9.2.8.\n\n- CVE-2022-22985: The absence of filters when loading some sections in the web application of the vulnerable device allows attackers to inject malicious code that will be interpreted when a legitimate user accesses the specific web section where the information is displayed. Injection can be done on specific parameters. The injected code is executed when a legitimate user attempts to review history.\n\n- CVE-2022-24915: The absence of filters when loading some sections in the web application of the vulnerable device allows attackers to inject malicious code that will be interpreted when a legitimate user accesses the web section where the information is displayed. Injection can be done on specific parameters. The injected code is executed when a legitimate user attempts to upload, copy, download, or delete an existing configuration (Administrative Services).\n\n- CVE-2022-26198: Notable v1.8.4 does not filter text editing, allowing attackers to execute arbitrary code via a crafted payload injected into the Title text field.\n\n- CVE-2022-26272: A remote code execution (RCE) vulnerability in Ionize v1.0.8.1 allows attackers to execute arbitrary code via a crafted string written to the file application/config/config.php.\n\n- CVE-2022-28096: Skycaiji v2.4 was discovered to contain a remote code execution (RCE) vulnerability via /SkycaijiApp/admin/controller/Develop.php.\n\n- CVE-2022-3383: The Ultimate Member plugin for WordPress is vulnerable to Remote Code Execution in versions up to, and including, 2.5.0 via the get_option_value_from_callback function that accepts user supplied input and passes it through call_user_func(). This makes it possible for authenticated attackers, with administrative capabilities, to execute code on the server.\n\n- CVE-2022-3384: The Ultimate Member plugin for WordPress is vulnerable to Remote Code Execution in versions up to, and including, 2.5.0 via the populate_dropdown_options function that accepts user supplied input and passes it through call_user_func(). This is restricted to non-parameter PHP functions like phpinfo(); since user supplied parameters are not passed through the function. This makes it possible for authenticated attackers, with administrative privileges, to execute code on the server.\n\n- CVE-2022-36215: DedeBIZ v6 was discovered to contain a remote code execution vulnerability in sys_info.php.\n\n- CVE-2022-41945: super-xray is a vulnerability scanner (xray) GUI launcher. In version 0.1-beta, the URL is not filtered and directly spliced ??into the command, resulting in a possible RCE vulnerability. Users should upgrade to super-xray 0.2-beta.\n\n- CVE-2022-23881: ZZZCMS zzzphp v2.1.0 was discovered to contain a remote command execution (RCE) vulnerability via danger_key() at zzz_template.php.\n\n- CVE-2022-27411: TOTOLINK N600R v5.3c.5507_B20171031 was discovered to contain a command injection vulnerability via the QUERY_STRING parameter in the \"Main\" function.\n\n- CVE-2022-35517: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 adm.cgi has no filtering on parameters: web_pskValue, wl_Method, wlan_ssid, EncrypType, rwan_ip, rwan_mask, rwan_gateway, ppp_username, ppp_passwd and ppp_setver, which leads to command injection in page /wizard_router_mesh.shtml.\n\n- CVE-2022-35518: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 nas.cgi has no filtering on parameters: User1Passwd and User1, which leads to command injection in page /nas_disk.shtml.\n\n- CVE-2022-35519: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 firewall.cgi has no filtering on parameter add_mac, which leads to command injection in page /cli_black_list.shtml.\n\n- CVE-2022-35520: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 api.cgi has no filtering on parameter ufconf, and this is a hidden parameter which doesn't appear in POST body, but exist in cgi binary. This leads to command injection in page /ledonoff.shtml.\n\n- CVE-2022-35521: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 firewall.cgi has no filtering on parameters: remoteManagementEnabled, blockPortScanEnabled, pingFrmWANFilterEnabled and blockSynFloodEnabled, which leads to command injection in page /man_security.shtml.\n\n- CVE-2022-35522: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 adm.cgi has no filtering on parameters: ppp_username, ppp_passwd, rwan_gateway, rwan_mask and rwan_ip, which leads to command injection in page /wan.shtml.\n\n- CVE-2022-35523: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 firewall.cgi has no filtering on parameter del_mac and parameter flag, which leads to command injection in page /cli_black_list.shtml.\n\n- CVE-2022-35524: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 adm.cgi has no filtering on parameters: wlan_signal, web_pskValue, sel_EncrypTyp, sel_Automode, wlan_bssid, wlan_ssid and wlan_channel, which leads to command injection in page /wizard_rep.shtml.\n\n- CVE-2022-35525: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 adm.cgi has no filtering on parameter led_switch, which leads to command injection in page /ledonoff.shtml.\n\n- CVE-2022-35526: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 login.cgi has no filtering on parameter key, which leads to command injection in page /login.shtml.\n\n- CVE-2022-35533: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 qos.cgi has no filtering on parameters: cli_list and cli_num, which leads to command injection in page /qos.shtml.\n\n- CVE-2022-35534: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 wireless.cgi has no filtering on parameter hiddenSSID32g and SSID2G2, which leads to command injection in page /wifi_multi_ssid.shtml.\n\n- CVE-2022-35535: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 wireless.cgi has no filtering on parameter macAddr, which leads to command injection in page /wifi_mesh.shtml.\n\n- CVE-2022-35536: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 qos.cgi has no filtering on parameters: qos_bandwith and qos_dat, which leads to command injection in page /qos.shtml.\n\n- CVE-2022-35537: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 wireless.cgi has no filtering on parameters: mac_5g and Newname, which leads to command injection in page /wifi_mesh.shtml.\n\n- CVE-2022-35538: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 wireless.cgi has no filtering on parameters: delete_list, delete_al_mac, b_delete_list and b_delete_al_mac, which leads to command injection in page /wifi_mesh.shtml.\n\n- CVE-2022-37843: In TOTOLINK A860R V4.1.2cu.5182_B20201027 in cstecgi.cgi, the acquired parameters are directly put into the system for execution without filtering, resulting in a command injection vulnerability.\n\n- CVE-2022-29639: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a command injection vulnerability via the magicid parameter in the function uci_cloudupdate_config.\n\n- CVE-2022-32228: An information disclosure vulnerability exists in Rocket.Chat <v5, <v4.8.2 and <v4.7.5 since the getReadReceipts Meteor server method does not properly filter user inputs that are passed to MongoDB queries, allowing $regex queries to enumerate arbitrary Message IDs.\n\nRelated Weaknesses:\n\n- CWE-138 (ChildOf)",
            "type": "Class",
            "source": "sparse",
            "search_source": "weakness:command injection",
            "sources": [
              "weakness"
            ],
            "boost_factor": 2.8,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              }
            }
          },
          {
            "cwe_id": "620",
            "name": "Unverified Password Change",
            "description": "When setting a new password for a user, the product does not require knowledge of the original password, or using another form of authentication.",
            "score": 26.325134034464202,
            "matched_text": "CWE-620: Unverified Password Change\n\nType: Base\n\nStatus: Draft\n\nDescription:\n\nWhen setting a new password for a user, the product does not require knowledge of the original password, or using another form of authentication.\n\nExtended Details:\n\nThis could be used by an attacker to change passwords for another user, thus gaining the privileges associated with that user.\n\nReal-World Examples:\n\n- CVE-2007-0681: Web app allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions.\n\n- CVE-2000-0944: Web application password change utility doesn't check the original password.\n\nTop 25 CWE Examples:\n\n- CVE-2021-24359: The Plus Addons for Elementor Page Builder WordPress plugin before 4.1.11 did not properly check that a user requesting a password reset was the legitimate user, allowing an attacker to send an arbitrary reset password email to a registered user on behalf of the WordPress site. Such issue could be chained with an open redirect (CVE-2021-24358) in version below 4.1.10, to include a crafted password reset link in the email, which would lead to an account takeover.\n\n- CVE-2021-34785: Multiple vulnerabilities in Cisco BroadWorks CommPilot Application Software could allow an authenticated, remote attacker to delete arbitrary user accounts or gain elevated privileges on an affected system.\n\n- CVE-2021-34786: Multiple vulnerabilities in Cisco BroadWorks CommPilot Application Software could allow an authenticated, remote attacker to delete arbitrary user accounts or gain elevated privileges on an affected system.\n\n- CVE-2020-16839: On Crestron DM-NVX-DIR, DM-NVX-DIR80, and DM-NVX-ENT devices before the DM-XIO/1-0-3-802 patch, the password can be changed by sending an unauthenticated WebSocket request.\n\n- CVE-2021-40101: An issue was discovered in Concrete CMS before 8.5.7. The Dashboard allows a user's password to be changed without a prompt for the current password.\n\n- CVE-2020-20466: White Shark System (WSS) 1.3.2 is vulnerable to unauthorized access via user_edit_password.php, remote attackers can modify the password of any user.\n\n- CVE-2021-34977: This vulnerability allows network-adjacent attackers to bypass authentication on affected installations of NETGEAR R7000 1.0.11.116_10.2.100 routers. Authentication is not required to exploit this vulnerability. The specific flaw exists within the processing of SOAP requests. The issue results from the lack of proper authentication verification before performing a password reset. An attacker can leverage this vulnerability to reset the admin password. Was ZDI-CAN-13483.\n\n- CVE-2021-44152: An issue was discovered in Reprise RLM 14.2. Because /goform/change_password_process does not verify authentication or authorization, an unauthenticated user can change the password of any existing user. This allows an attacker to change the password of any known user, thereby preventing valid users from accessing the system and granting the attacker full access to that user's account.\n\n- CVE-2021-29394: Account Hijacking in /northstar/Admin/changePassword.jsp in Northstar Technologies Inc NorthStar Club Management 6.3 allows remote authenticated users to change the password of any targeted user accounts via lack of proper authorization in the user-controlled \"userID\" parameter of the HTTP POST request.\n\n- CVE-2022-21935: A vulnerability in Metasys ADS/ADX/OAS 10 versions prior to 10.1.5 and Metasys ADS/ADX/OAS 11 versions prior to 11.0.2 allows unverified password change.\n\n- CVE-2022-27484: A unverified password change in Fortinet FortiADC version 6.2.0 through 6.2.3, 6.1.x, 6.0.x, 5.x.x allows an authenticated attacker to bypass the Old Password check in the password change form via a crafted HTTP request.\n\n- CVE-2022-3152: Unverified Password Change in GitHub repository phpfusion/phpfusion prior to 9.10.20.\n\n- CVE-2022-21934: Under certain circumstances an authenticated user could lock other users out of the system or take over their accounts in Metasys ADS/ADX/OAS server 10 versions prior to 10.1.5 and Metasys ADS/ADX/OAS server 11 versions prior to 11.0.2.\n\n- CVE-2022-24551: A flaw was found in StarWind Stack. The endpoint for setting a new password doesn\u2019t check the current username and old password. An attacker could reset any local user password (including system/administrator user) using any available user This affects StarWind SAN and NAS v0.2 build 1633.\n\n- CVE-2022-0862: A lack of password change protection vulnerability in a depreciated API of McAfee Enterprise ePolicy Orchestrator (ePO) prior to 5.10 Update 13 allows a remote attacker to change the password of a compromised session without knowing the existing user's password. This functionality was removed from the User Interface in ePO 10 and the API has now been disabled. Other protection is in place to reduce the likelihood of this being successful through sending a link to a logged in user.\n\nRelated Weaknesses:\n\n- CWE-1390 (ChildOf)",
            "type": "Base",
            "search_source": "base_query",
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              }
            }
          },
          {
            "cwe_id": "1188",
            "name": "Initialization of a Resource with an Insecure Default",
            "description": "The product initializes or sets a resource with a default that is intended to be changed by the administrator, but the default is not secure.",
            "score": 26.02621927023227,
            "matched_text": "CWE-1188: Initialization of a Resource with an Insecure Default\n\nType: Base\n\nStatus: Incomplete\n\nDescription:\n\nThe product initializes or sets a resource with a default that is intended to be changed by the administrator, but the default is not secure.\n\nExtended Details:\n\n\n\nDevelopers often choose default values that leave the product as open and easy to use as possible out-of-the-box, under the assumption that the administrator can (or should) change the default value. However, this ease-of-use comes at a cost when the default is insecure and the administrator does not change it.\n\n\nReal-World Examples:\n\n- CVE-2022-36349: insecure default variable initialization in BIOS firmware for a hardware board allows DoS\n\n- CVE-2022-42467: A generic database browser interface has a default mode that exposes a web server to the network, allowing queries to the database.\n\nTop 25 CWE Examples:\n\n- CVE-2021-34795: Multiple vulnerabilities in the web-based management interface of the Cisco Catalyst Passive Optical Network (PON) Series Switches Optical Network Terminal (ONT) could allow an unauthenticated, remote attacker to perform the following actions: Log in with a default credential if the Telnet protocol is enabled Perform command injection Modify the configuration For more information about these vulnerabilities, see the Details section of this advisory.\n\n- CVE-2020-10279: MiR robot controllers (central computation unit) makes use of Ubuntu 16.04.2 an operating system, Thought for desktop uses, this operating system presents insecure defaults for robots. These insecurities include a way for users to escalate their access beyond what they were granted via file creation, access race conditions, insecure home directory configurations and defaults that facilitate Denial of Service (DoS) attacks.\n\n- CVE-2021-28123: Undocumented Default Cryptographic Key Vulnerability in Cohesity DataPlatform version 6.3 prior 6.3.1g, 6.4 up to 6.4.1c and 6.5.1 through 6.5.1b. The ssh key can provide an attacker access to the linux system in the affected version.\n\n- CVE-2021-40825: nLight ECLYPSE (nECY) system Controllers running software prior to 1.17.21245.754 contain a default key vulnerability. The nECY does not force a change to the key upon the initial configuration of an affected device. nECY system controllers utilize an encrypted channel to secure SensorViewTM configuration and monitoring software and nECY to nECY communications. Impacted devices are at risk of exploitation. A remote attacker with IP access to an impacted device could submit lighting control commands to the nECY by leveraging the default key. A successful attack may result in the attacker gaining the ability to modify lighting conditions or gain the ability to update the software on lighting devices. The impacted key is referred to as the SensorView Password in the nECY nLight Explorer Interface and the Gateway Password in the SensorView application. An attacker cannot authenticate to or modify the configuration or software of the nECY system controller.\n\n- CVE-2021-35965: The Orca HCM digital learning platform uses a weak factory default administrator password, which is hard-coded in the source code of the webpage in plain text, thus remote attackers can obtain administrator\u2019s privilege without logging in.\n\n- CVE-2020-12732: DEPSTECH WiFi Digital Microscope 3 has a default SSID of Jetion_xxxxxxxx with a password of 12345678.\n\n- CVE-2021-34203: D-Link DIR-2640-US 1.01B04 is vulnerable to Incorrect Access Control. Router ac2600 (dir-2640-us), when setting PPPoE, will start quagga process in the way of whole network monitoring, and this function uses the original default password and port. An attacker can easily use telnet to log in, modify routing information, monitor the traffic of all devices under the router, hijack DNS and phishing attacks. In addition, this interface is likely to be questioned by customers as a backdoor, because the interface should not be exposed.\n\n- CVE-2021-35336: Tieline IP Audio Gateway 2.6.4.8 and below is affected by Incorrect Access Control. A vulnerability in the Tieline Web Administrative Interface could allow an unauthenticated user to access a sensitive part of the system with a high privileged account.\n\n- CVE-2021-42109: VITEC Exterity IPTV products through 2021-04-30 allow privilege escalation to root.\n\n- CVE-2021-0468: In LK, there is a possible escalation of privilege due to an insecure default value. This could lead to local escalation of privilege for an attacker who has physical access to the device with no additional execution privileges needed. User interaction is needed for exploitation.Product: AndroidVersions: Android SoCAndroid ID: A-180427272\n\n- CVE-2021-38759: Raspberry Pi OS through 5.10 has the raspberry default password for the pi account. If not changed, attackers can gain administrator privileges.\n\n- CVE-2020-13927: The previous default setting for Airflow's Experimental API was to allow all API requests without authentication, but this poses security risks to users who miss this fact. From Airflow 1.10.11 the default has been changed to deny all requests by default and is documented at https://airflow.apache.org/docs/1.10.11/security.html#api-authentication. Note this change fixes it for new installs but existing users need to change their config to default `[api]auth_backend = airflow.api.auth.backend.deny_all` as mentioned in the Updating Guide: https://github.com/apache/airflow/blob/1.10.11/UPDATING.md#experimental-api-will-deny-all-request-by-default\n\n- CVE-2022-24706: In Apache CouchDB prior to 3.2.2, an attacker can access an improperly secured default installation without authenticating and gain admin privileges. The CouchDB documentation has always made recommendations for properly securing an installation, including recommending using a firewall in front of all CouchDB installations.\n\n- CVE-2022-42467: When running in prototype mode, the h2 webconsole module (accessible from the Prototype menu) is automatically made available with the ability to directly query the database. It was felt that it is safer to require the developer to explicitly enable this capability. As of 2.0.0-M8, this can now be done using the 'isis.prototyping.h2-console.web-allow-remote-access' configuration property; the web console will be unavailable without setting this configuration. As an additional safeguard, the new 'isis.prototyping.h2-console.generate-random-web-admin-password' configuration parameter (enabled by default) requires that the administrator use a randomly generated password to use the console. The password is printed to the log, as \"webAdminPass: xxx\" (where \"xxx\") is the password. To revert to the original behaviour, the administrator would therefore need to set these configuration parameter: isis.prototyping.h2-console.web-allow-remote-access=true isis.prototyping.h2-console.generate-random-web-admin-password=false Note also that the h2 webconsole is never available in production mode, so these safeguards are only to ensure that the webconsole is secured by default also in prototype mode.\n\n- CVE-2022-25568: MotionEye v0.42.1 and below allows attackers to access sensitive information via a GET request to /config/list. To exploit this vulnerability, a regular user password must be unconfigured.\n\nRelated Weaknesses:\n\n- CWE-1419 (ChildOf)\n\n- CWE-665 (ChildOf)",
            "type": "Base",
            "search_source": "base_query",
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              }
            }
          },
          {
            "cwe_id": "1284",
            "name": "Improper Validation of Specified Quantity in Input",
            "description": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
            "score": 25.51944036111138,
            "matched_text": "CWE-1284: Improper Validation of Specified Quantity in Input\n\nType: Base\n\nStatus: Incomplete\n\nDescription:\n\nThe product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.\n\nExtended Details:\n\n\n\nSpecified quantities include size, length, frequency, price, rate, number of operations, time, and others. Code may rely on specified quantities to allocate resources, perform calculations, control iteration, etc. When the quantity is not properly validated, then attackers can specify malicious quantities to cause excessive resource allocation, trigger unexpected failures, enable buffer overflows, etc.\n\n\nReal-World Examples:\n\n- CVE-2022-21668: Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190).\n\n- CVE-2008-1440: lack of validation of length field leads to infinite loop\n\n- CVE-2008-2374: lack of validation of string length fields allows memory consumption or buffer over-read\n\nTop 25 CWE Examples:\n\n- CVE-2021-31401: An issue was discovered in tcp_rcv() in nptcp.c in HCC embedded InterNiche 4.0.1. The TCP header processing code doesn't sanitize the value of the IP total length field (header length + data length). With a crafted IP packet, an integer overflow occurs whenever the value of the IP data length is calculated by subtracting the length of the header from the total length of the IP packet.\n\n- CVE-2021-31802: NETGEAR R7000 1.0.11.116 devices have a heap-based Buffer Overflow that is exploitable from the local network without authentication. The vulnerability exists within the handling of an HTTP request. An attacker can leverage this to execute code as root. The problem is that a user-provided length value is trusted during a backup.cgi file upload. The attacker must add a \\\\n before the Content-Length header.\n\n- CVE-2021-37663: TensorFlow is an end-to-end open source platform for machine learning. In affected versions due to incomplete validation in `tf.raw_ops.QuantizeV2`, an attacker can trigger undefined behavior via binding a reference to a null pointer or can access data outside the bounds of heap allocated arrays. The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/quantize_op.cc#L59) has some validation but does not check that `min_range` and `max_range` both have the same non-zero number of elements. If `axis` is provided (i.e., not `-1`), then validation should check that it is a value in range for the rank of `input` tensor and then the lengths of `min_range` and `max_range` inputs match the `axis` dimension of the `input` tensor. We have patched the issue in GitHub commit 6da6620efad397c85493b8f8667b821403516708. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n- CVE-2021-37665: TensorFlow is an end-to-end open source platform for machine learning. In affected versions due to incomplete validation in MKL implementation of requantization, an attacker can trigger undefined behavior via binding a reference to a null pointer or can access data outside the bounds of heap allocated arrays. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc) does not validate the dimensions of the `input` tensor. A similar issue occurs in `MklRequantizePerChannelOp`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/mkl/mkl_requantize_per_channel_op.cc) does not perform full validation for all the input arguments. We have patched the issue in GitHub commit 9e62869465573cb2d9b5053f1fa02a81fce21d69 and in the Github commit 203214568f5bc237603dbab6e1fd389f1572f5c9. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n- CVE-2021-3655: A vulnerability was found in the Linux kernel in versions prior to v5.14-rc1. Missing size validations on inbound SCTP packets may allow the kernel to read uninitialized memory.\n\n- CVE-2021-21404: Syncthing is a continuous file synchronization program. In Syncthing before version 1.15.0, the relay server `strelaysrv` can be caused to crash and exit by sending a relay message with a negative length field. Similarly, Syncthing itself can crash for the same reason if given a malformed message from a malicious relay server when attempting to join the relay. Relay joins are essentially random (from a subset of low latency relays) and Syncthing will by default restart when crashing, at which point it's likely to pick another non-malicious relay. This flaw is fixed in version 1.15.0.\n\n- CVE-2021-1903: Possible denial of service scenario can occur due to lack of length check on Channel Switch Announcement IE in beacon or probe response frame in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer Electronics Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Voice & Music, Snapdragon Wired Infrastructure and Networking\n\n- CVE-2021-23906: An issue was discovered in the Headunit NTG6 in the MBUX Infotainment System on Mercedes-Benz vehicles through 2021. A Message Length is not checked in the HiQnet Protocol, leading to remote code execution.\n\n- CVE-2021-31555: An issue was discovered in the Oauth extension for MediaWiki through 1.35.2. It did not validate the oarc_version (aka oauth_registered_consumer.oarc_version) parameter's length.\n\n- CVE-2021-33196: In archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic.\n\n- CVE-2021-33609: Missing check in DataCommunicator class in com.vaadin:vaadin-server versions 8.0.0 through 8.14.0 (Vaadin 8.0.0 through 8.14.0) allows authenticated network attacker to cause heap exhaustion by requesting too many rows of data.\n\n- CVE-2021-35041: The blockchain node in FISCO-BCOS V2.7.2 may have a bug when dealing with unformatted packet and lead to a crash. A malicious node can send a packet continuously. The packet is in an incorrect format and cannot be decoded by the node correctly. As a result, the node may consume the memory sustainably and crash. More details are shown at: https://github.com/FISCO-BCOS/FISCO-BCOS/issues/1951\n\n- CVE-2020-7459: In FreeBSD 12.1-STABLE before r362166, 12.1-RELEASE before p8, 11.4-STABLE before r362167, 11.4-RELEASE before p2, and 11.3-RELEASE before p12, missing length validation code common to mulitple USB network drivers allows a malicious USB device to write beyond the end of an allocated network packet buffer.\n\n- CVE-2021-1084: NVIDIA vGPU driver contains a vulnerability in the guest kernel mode driver and Virtual GPU Manager (vGPU plugin), in which an input length is not validated, which may lead to information disclosure, tampering of data or denial of service. This affects vGPU version 12.x (prior to 12.2) and version 11.x (prior to 11.4).\n\n- CVE-2021-1097: NVIDIA vGPU software contains a vulnerability in the Virtual GPU Manager (vGPU plugin), where it improperly validates the length field in a request from a guest. This flaw allows a malicious guest to send a length field that is inconsistent with the actual length of the input, which may lead to information disclosure, data tampering, or denial of service. This affects vGPU version 12.x (prior to 12.3), version 11.x (prior to 11.5) and version 8.x (prior 8.8).\n\n- CVE-2021-20252: A flaw was found in Red Hat 3scale API Management Platform 2. The 3scale backend does not perform preventive handling on user-requested date ranges in certain queries allowing a malicious authenticated user to submit a request with a sufficiently large date range to eventually yield an internal server error resulting in denial of service. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-29629: In FreeBSD 13.0-STABLE before n245765-bec0d2c9c841, 12.2-STABLE before r369859, 11.4-STABLE before r369866, 13.0-RELEASE before p1, 12.2-RELEASE before p7, and 11.4-RELEASE before p10, missing message validation in libradius(3) could allow malicious clients or servers to trigger denial of service in vulnerable servers or clients respectively.\n\n- CVE-2021-37594: In FreeRDP before 2.4.0 on Windows, wf_cliprdr_server_file_contents_request in client/Windows/wf_cliprdr.c has missing input checks for a FILECONTENTS_SIZE File Contents Request PDU.\n\n- CVE-2021-37595: In FreeRDP before 2.4.0 on Windows, wf_cliprdr_server_file_contents_request in client/Windows/wf_cliprdr.c has missing input checks for a FILECONTENTS_RANGE File Contents Request PDU.\n\n- CVE-2021-24894: The Reviews Plus WordPress plugin before 1.2.14 does not validate the submitted rating, allowing submission of long integer, causing a Denial of Service in the review section when an authenticated user submit such rating and the reviews are set to be displayed on the post/page\n\n- CVE-2021-27921: Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for a BLP container, and thus an attempted memory allocation can be very large.\n\n- CVE-2021-27922: Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for an ICNS container, and thus an attempted memory allocation can be very large.\n\n- CVE-2021-27923: Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for an ICO container, and thus an attempted memory allocation can be very large.\n\n- CVE-2021-0485: In getMinimalSize of PipBoundsAlgorithm.java, there is a possible bypass of restrictions on background processes due to a permissions bypass. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-11Android ID: A-174302616\n\n- CVE-2020-25713: A malformed input file can lead to a segfault due to an out of bounds array access in raptor_xml_writer_start_element_common.\n\n- CVE-2021-0651: In loadLabel of PackageItemInfo.java, there is a possible way to DoS a device by having a long label in an app due to incorrect input validation. This could lead to local denial of service with no additional execution privileges needed. User interaction is needed for exploitation.Product: AndroidVersions: Android-11 Android-9 Android-10Android ID: A-67013844\n\n- CVE-2020-0206: In the settings app, there is a possible app crash due to improper input validation. This could lead to local denial of service of the Settings app with User execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10Android ID: A-136005061\n\n- CVE-2021-24893: The Stars Rating WordPress plugin before 3.5.1 does not validate the submitted rating, allowing submission of long integer, causing a Denial of Service in the comments section, or pending comment dashboard depending if the user sent it as unauthenticated or authenticated.\n\n- CVE-2021-4111: yetiforcecrm is vulnerable to Business Logic Errors\n\n- CVE-2021-4117: yetiforcecrm is vulnerable to Business Logic Errors\n\n- CVE-2021-26631: Improper input validation vulnerability in Mangboard commerce package could lead to occur for abnormal request. A remote attacker can exploit this vulnerability to manipulate the total order amount into a negative number and then pay for the order.\n\n- CVE-2021-21939: A heap-based buffer overflow vulnerability exists in the XWD parser functionality of Accusoft ImageGear 19.10. A specially-crafted file can lead to code execution. An attacker can provide a malicious file to trigger this vulnerability.\n\n- CVE-2021-21943: A heap-based buffer overflow vulnerability exists in the XWD parser functionality of Accusoft ImageGear 19.10. A specially-crafted file can lead to code execution. An attacker can provide a malicious file to trigger this vulnerability.\n\n- CVE-2021-21950: An out-of-bounds write vulnerability exists in the CMD_DEVICE_GET_SERVER_LIST_REQUEST functionality of the home_security binary of Anker Eufy Homebase 2 2.1.6.9h in function recv_server_device_response_msg_process. A specially-crafted network packet can lead to code execution.\n\n- CVE-2021-21951: An out-of-bounds write vulnerability exists in the CMD_DEVICE_GET_SERVER_LIST_REQUEST functionality of the home_security binary of Anker Eufy Homebase 2 2.1.6.9h in function read_udp_push_config_file. A specially-crafted network packet can lead to code execution.\n\n- CVE-2021-21960: A stack-based buffer overflow vulnerability exists in both the LLMNR functionality of Sealevel Systems, Inc. SeaConnect 370W v1.3.34. A specially-crafted network packet can lead to remote code execution. An attacker can send a malicious packet to trigger this vulnerability.\n\n- CVE-2021-26347: Failure to validate the integer operand in ASP (AMD Secure Processor) bootloader may allow an attacker to introduce an integer overflow in the L2 directory table in SPI flash resulting in a potential denial of service.\n\n- CVE-2021-30350: Lack of MBN header size verification against input buffer can lead to memory corruption in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Wearables\n\n- CVE-2021-35132: Out of bound write in DSP service due to improper bound check for response buffer size in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Wearables\n\n- CVE-2021-44158: ASUS RT-AX56U Wi-Fi Router is vulnerable to stack-based buffer overflow due to improper validation for httpd parameter length. An authenticated local area network attacker can launch arbitrary code execution to control the system or disrupt service.\n\n- CVE-2021-45918: NHI\u2019s health insurance web service component has insufficient validation for input string length, which can result in heap-based buffer overflow attack. A remote attacker can exploit this vulnerability to flood the memory space reserved for the program, in order to terminate service without authentication, which requires a system restart to recover service.\n\n- CVE-2021-45972: The giftrans function in giftrans 1.12.2 contains a stack-based buffer overflow because a value inside the input file determines the amount of data to write. This allows an attacker to overwrite up to 250 bytes outside of the allocated buffer with arbitrary data.\n\n- CVE-2021-46154: A vulnerability has been identified in Simcenter Femap V2020.2 (All versions), Simcenter Femap V2021.1 (All versions). Affected application contains a stack based buffer overflow vulnerability while parsing NEU files. This could allow an attacker to execute code in the context of the current process. (ZDI-CAN-14646, ZDI-CAN-14679, ZDI-CAN-15084, ZDI-CAN-15304)\n\n- CVE-2021-46155: A vulnerability has been identified in Simcenter Femap V2020.2 (All versions), Simcenter Femap V2021.1 (All versions). Affected application contains a stack based buffer overflow vulnerability while parsing NEU files. This could allow an attacker to execute code in the context of the current process. (ZDI-CAN-14683, ZDI-CAN-15283, ZDI-CAN-15303, ZDI-CAN-15593)\n\n- CVE-2021-46158: A vulnerability has been identified in Simcenter Femap V2020.2 (All versions), Simcenter Femap V2021.1 (All versions). Affected application contains a stack based buffer overflow vulnerability while parsing NEU files. This could allow an attacker to execute code in the context of the current process. (ZDI-CAN-15085, ZDI-CAN-15289, ZDI-CAN-15602)\n\n- CVE-2022-20689: Multiple vulnerabilities in the Cisco Discovery Protocol functionality of Cisco ATA 190 Series Analog Telephone Adapter firmware could allow an unauthenticated, adjacent attacker to cause Cisco Discovery Protocol memory corruption on an affected device. These vulnerabilities are due to missing length validation checks when processing Cisco Discovery Protocol messages. An attacker could exploit these vulnerabilities by sending a malicious Cisco Discovery Protocol packet to an affected device. A successful exploit could allow the attacker to cause an out-of-bounds read of the valid Cisco Discovery Protocol packet data, which could allow the attacker to cause corruption in the internal Cisco Discovery Protocol database of the affected device.\n\n- CVE-2022-20690: Multiple vulnerabilities in the Cisco Discovery Protocol functionality of Cisco ATA 190 Series Analog Telephone Adapter firmware could allow an unauthenticated, adjacent attacker to cause Cisco Discovery Protocol memory corruption on an affected device. These vulnerabilities are due to missing length validation checks when processing Cisco Discovery Protocol messages. An attacker could exploit these vulnerabilities by sending a malicious Cisco Discovery Protocol packet to an affected device. A successful exploit could allow the attacker to cause an out-of-bounds read of the valid Cisco Discovery Protocol packet data, which could allow the attacker to cause corruption in the internal Cisco Discovery Protocol database of the affected device.\n\n- CVE-2022-22072: Buffer overflow can occur due to improper validation of NDP application information length in Snapdragon Auto, Snapdragon Compute, Snapdragon Consumer Electronics Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Voice & Music\n\n- CVE-2022-24903: Rsyslog is a rocket-fast system for log processing. Modules for TCP syslog reception have a potential heap buffer overflow when octet-counted framing is used. This can result in a segfault or some other malfunction. As of our understanding, this vulnerability can not be used for remote code execution. But there may still be a slight chance for experts to do that. The bug occurs when the octet count is read. While there is a check for the maximum number of octets, digits are written to a heap buffer even when the octet count is over the maximum, This can be used to overrun the memory buffer. However, once the sequence of digits stop, no additional characters can be added to the buffer. In our opinion, this makes remote exploits impossible or at least highly complex. Octet-counted framing is one of two potential framing modes. It is relatively uncommon, but enabled by default on receivers. Modules `imtcp`, `imptcp`, `imgssapi`, and `imhttp` are used for regular syslog message reception. It is best practice not to directly expose them to the public. When this practice is followed, the risk is considerably lower. Module `imdiag` is a diagnostics module primarily intended for testbench runs. We do not expect it to be present on any production installation. Octet-counted framing is not very common. Usually, it needs to be specifically enabled at senders. If users do not need it, they can turn it off for the most important modules. This will mitigate the vulnerability.\n\n- CVE-2022-25727: Memory Corruption in modem due to improper length check while copying into memory in Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Voice & Music\n\n- CVE-2022-25793: A Stack-based Buffer Overflow Vulnerability in Autodesk 3ds Max 2022, 2021, and 2020 may lead to code execution through the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length stack-based buffer when parsing ActionScript Byte Code files. This vulnerability may allow arbitrary code execution on affected installations of Autodesk 3ds Max.\n\n- CVE-2022-2845: Improper Validation of Specified Quantity in Input in GitHub repository vim/vim prior to 9.0.0218. \n\n- CVE-2022-35928: AES Crypt is a file encryption software for multiple platforms. AES Crypt for Linux built using the source on GitHub and having the version number 3.11 has a vulnerability with respect to reading user-provided passwords and confirmations via command-line prompts. Passwords lengths were not checked before being read. This vulnerability may lead to buffer overruns. This does _not_ affect source code found on aescrypt.com, nor is the vulnerability present when providing a password or a key via the `-p` or `-k` command-line options. The problem was fixed via in commit 68761851b and will be included in release 3.16. Users are advised to upgrade. Users unable to upgrade should us the `-p` or `-k` options to provide a password or key.\n\n- CVE-2022-36063: Azure RTOS USBx is a USB host, device, and on-the-go (OTG) embedded stack, fully integrated with Azure RTOS ThreadX and available for all Azure RTOS ThreadX\u2013supported processors. Azure RTOS USBX implementation of host support for USB CDC ECM includes an integer underflow and a buffer overflow in the `_ux_host_class_cdc_ecm_mac_address_get` function which may be potentially exploited to achieve remote code execution or denial of service. Setting mac address string descriptor length to a `0` or `1` allows an attacker to introduce an integer underflow followed (string_length) by a buffer overflow of the `cdc_ecm -> ux_host_class_cdc_ecm_node_id` array. This may allow one to redirect the code execution flow or introduce a denial of service. The fix has been included in USBX release [6.1.12](https://github.com/azure-rtos/usbx/releases/tag/v6.1.12_rel). Improved mac address string descriptor length validation to check for unexpectedly small values may be used as a workaround.\n\n- CVE-2022-36620: D-link DIR-816 A2_v1.10CNB04, DIR-878 DIR_878_FW1.30B08.img is vulnerable to Buffer Overflow via /goform/addRouting.\n\n- CVE-2022-37134: D-link DIR-816 A2_v1.10CNB04.img is vulnerable to Buffer Overflow via /goform/form2Wan.cgi. When wantype is 3, l2tp_usrname will be decrypted by base64, and the result will be stored in v94, which does not check the size of l2tp_usrname, resulting in stack overflow.\n\n- CVE-2022-41877: FreeRDP is a free remote desktop protocol library and clients. Affected versions of FreeRDP are missing input length validation in `drive` channel. A malicious server can trick a FreeRDP based client to read out of bound data and send it back to the server. This issue has been addressed in version 2.9.0 and all users are advised to upgrade. Users unable to upgrade should not use the drive redirection channel - command line options `/drive`, `+drives` or `+home-drive`.\n\n- CVE-2022-4904: A flaw was found in the c-ares package. The ares_set_sortlist is missing checks about the validity of the input string, which allows a possible arbitrary length stack overflow. This issue may cause a denial of service or a limited impact on confidentiality and integrity.\n\n- CVE-2022-20699: Multiple vulnerabilities in Cisco Small Business RV160, RV260, RV340, and RV345 Series Routers could allow an attacker to do any of the following: Execute arbitrary code Elevate privileges Execute arbitrary commands Bypass authentication and authorization protections Fetch and run unsigned software Cause denial of service (DoS) For more information about these vulnerabilities, see the Details section of this advisory.\n\n- CVE-2022-24754: PJSIP is a free and open source multimedia communication library written in C language. In versions prior to and including 2.12 PJSIP there is a stack-buffer overflow vulnerability which only impacts PJSIP users who accept hashed digest credentials (credentials with data_type `PJSIP_CRED_DATA_DIGEST`). This issue has been patched in the master branch of the PJSIP repository and will be included with the next release. Users unable to upgrade need to check that the hashed digest data length must be equal to `PJSIP_MD5STRLEN` before passing to PJSIP.\n\n- CVE-2021-3581: Buffer Access with Incorrect Length Value in zephyr. Zephyr versions >= >=2.5.0 contain Buffer Access with Incorrect Length Value (CWE-805). For more information, see https://github.com/zephyrproject-rtos/zephyr/security/advisories/GHSA-8q65-5gqf-fmw5\n\n- CVE-2022-0414: Improper Validation of Specified Quantity in Input in Packagist dolibarr/dolibarr prior to 16.0.\n\n- CVE-2022-0596: Improper Validation of Specified Quantity in Input in Packagist microweber/microweber prior to 1.2.11.\n\n- CVE-2022-20445: In process_service_search_rsp of sdp_discovery.cc, there is a possible out of bounds read due to improper input validation. This could lead to remote information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-225876506\n\n- CVE-2022-22166: An Improper Validation of Specified Quantity in Input vulnerability in the routing protocol daemon (rpd) of Juniper Networks Junos OS allows an unauthenticated networked attacker to cause an rdp crash and thereby a Denial of Service (DoS). If a BGP update message is received over an established BGP session where a BGP SR-TE policy tunnel attribute is malformed and BGP update tracing flag is enabled, the rpd will core. This issue can happen with any BGP session as long as the previous conditions are met. This issue can not propagate as the crash occurs as soon as the malformed update is received. This issue affects Juniper Networks Junos OS: 20.4 versions prior to 20.4R3-S1; 21.1 versions prior to 21.1R2-S2, 21.1R3. This issue does not affect Juniper Networks Junos OS versions prior to 20.4R1.\n\n- CVE-2022-4171: The demon image annotation plugin for WordPress is vulnerable to improper input validation in versions up to, and including 5.0. This is due to the plugin improperly validating the number of characters supplied during an annotation despite there being a setting to limit the number characters input. This means that unauthenticated attackers can bypass the length restrictions and input more characters than allowed via the settings.\n\n- CVE-2022-25375: An issue was discovered in drivers/usb/gadget/function/rndis.c in the Linux kernel before 5.16.10. The RNDIS USB gadget lacks validation of the size of the RNDIS_MSG_SET command. Attackers can obtain sensitive information from kernel memory.\n\n- CVE-2022-23635: Istio is an open platform to connect, manage, and secure microservices. In affected versions the Istio control plane, `istiod`, is vulnerable to a request processing error, allowing a malicious attacker that sends a specially crafted message which results in the control plane crashing. This endpoint is served over TLS port 15012, but does not require any authentication from the attacker. For simple installations, Istiod is typically only reachable from within the cluster, limiting the blast radius. However, for some deployments, especially [multicluster](https://istio.io/latest/docs/setup/install/multicluster/primary-remote/) topologies, this port is exposed over the public internet. There are no effective workarounds, beyond upgrading. Limiting network access to Istiod to the minimal set of clients can help lessen the scope of the vulnerability to some extent.\n\n- CVE-2021-31556: An issue was discovered in the Oauth extension for MediaWiki through 1.35.2. MWOAuthConsumerSubmitControl.php does not ensure that the length of an RSA key will fit in a MySQL blob.\n\n- CVE-2022-20686: Multiple vulnerabilities in the Link Layer Discovery Protocol (LLDP) functionality of Cisco ATA 190 Series Analog Telephone Adapter firmware could allow an unauthenticated, remote attacker to execute arbitrary code on an affected device and cause the LLDP service to restart. These vulnerabilities are due to missing length validation of certain LLDP packet header fields. An attacker could exploit these vulnerabilities by sending a malicious LLDP packet to an affected device. A successful exploit could allow the attacker to execute code on the affected device and cause LLDP to restart unexpectedly, resulting in a denial of service (DoS) condition.\n\n- CVE-2022-20385: a function called 'nla_parse', do not check the len of para, it will check nla_type (which can be controlled by userspace) with 'maxtype' (in this case, it is GSCAN_MAX), then it access polciy array 'policy[type]', which OOB access happens.Product: AndroidVersions: Android SoCAndroid ID: A-238379819\n\n- CVE-2022-26125: Buffer overflow vulnerabilities exist in FRRouting through 8.1.0 due to wrong checks on the input packet length in isisd/isis_tlvs.c.\n\n- CVE-2022-26127: A buffer overflow vulnerability exists in FRRouting through 8.1.0 due to missing a check on the input packet length in the babel_packet_examin function in babeld/message.c.\n\n- CVE-2022-26128: A buffer overflow vulnerability exists in FRRouting through 8.1.0 due to a wrong check on the input packet length in the babel_packet_examin function in babeld/message.c.\n\n- CVE-2022-36086: linked_list_allocator is an allocator usable for no_std systems. Prior to version 0.10.2, the heap initialization methods were missing a minimum size check for the given heap size argument. This could lead to out-of-bound writes when a heap was initialized with a size smaller than `3 * size_of::<usize>` because of metadata write operations. This vulnerability impacts all the initialization functions on the `Heap` and `LockedHeap` types, including `Heap::new`, `Heap::init`, `Heap::init_from_slice`, and `LockedHeap::new`. It also affects multiple uses of the `Heap::extend` method. Version 0.10.2 contains a patch for the issue. As a workaround, ensure that the heap is only initialized with a size larger than `3 * size_of::<usize>` and that the `Heap::extend` method is only called with sizes larger than `2 * size_of::<usize>()`. Also, ensure that the total heap size is (and stays) a multiple of `2 * size_of::<usize>()`.\n\n- CVE-2022-36938: DexLoader function get_stringidx_fromdex() in Redex prior to commit 3b44c64 can load an out of bound address when loading the string index table, potentially allowing remote code execution during processing of a 3rd party Android APK file.\n\n- CVE-2021-1058: NVIDIA vGPU software contains a vulnerability in the guest kernel mode driver and vGPU plugin, in which an input data size is not validated, which may lead to tampering of data or denial of service. This affects vGPU version 8.x (prior to 8.6) and version 11.0 (prior to 11.3).\n\n- CVE-2021-1062: NVIDIA vGPU manager contains a vulnerability in the vGPU plugin, in which an input data length is not validated, which may lead to tampering of data or denial of service. This affects vGPU version 8.x (prior to 8.6) and version 11.0 (prior to 11.3).\n\n- CVE-2021-1081: NVIDIA vGPU software contains a vulnerability in the guest kernel mode driver and Virtual GPU manager (vGPU plugin), in which an input length is not validated, which may lead to information disclosure, tampering of data, or denial of service. This affects vGPU version 12.x (prior to 12.2), version 11.x (prior to 11.4) and version 8.x (prior 8.7).\n\n- CVE-2021-1082: NVIDIA vGPU software contains a vulnerability in the Virtual GPU Manager (vGPU plugin), in which an input length is not validated, which may lead to information disclosure, tampering of data, or denial of service. vGPU version 12.x (prior to 12.2), version 11.x (prior to 11.4) and version 8.x (prior to 8.7)\n\n- CVE-2021-1083: NVIDIA vGPU software contains a vulnerability in the guest kernel mode driver and Virtual GPU Manager (vGPU plugin), in which an input length is not validated, which may lead to information disclosure, tampering of data, or denial of service. This affects vGPU version 12.x (prior to 12.2) and version 11.x (prior to 11.4).\n\n- CVE-2021-37674: TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can trigger a denial of service via a segmentation fault in `tf.raw_ops.MaxPoolGrad` caused by missing validation. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/maxpooling_op.cc) misses some validation for the `orig_input` and `orig_output` tensors. The fixes for CVE-2021-29579 were incomplete. We have patched the issue in GitHub commit 136b51f10903e044308cf77117c0ed9871350475. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n- CVE-2021-37677: TensorFlow is an end-to-end open source platform for machine learning. In affected versions the shape inference code for `tf.raw_ops.Dequantize` has a vulnerability that could trigger a denial of service via a segfault if an attacker provides invalid arguments. The shape inference [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/ops/array_ops.cc#L2999-L3014) uses `axis` to select between two different values for `minmax_rank` which is then used to retrieve tensor dimensions. However, code assumes that `axis` can be either `-1` or a value greater than `-1`, with no validation for the other values. We have patched the issue in GitHub commit da857cfa0fde8f79ad0afdbc94e88b5d4bbec764. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n- CVE-2021-39193: Frontier is Substrate's Ethereum compatibility layer. Prior to commit number 0b962f218f0cdd796dadfe26c3f09e68f7861b26, a bug in `pallet-ethereum` can cause invalid transactions to be included in the Ethereum block state in `pallet-ethereum` due to not validating the input data size. Any invalid transactions included this way have no possibility to alter the internal Ethereum or Substrate state. The transaction will appear to have be included, but is of no effect as it is rejected by the EVM engine. The impact is further limited by Substrate extrinsic size constraints. A patch is available in commit number 0b962f218f0cdd796dadfe26c3f09e68f7861b26. There are no workarounds aside from applying the patch.\n\n- CVE-2021-39690: In setDisplayPadding of WallpaperManagerService.java, there is a possible way to cause a persistent DoS due to improper input validation. This could lead to local denial of service with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-12Android ID: A-204316511\n\n- CVE-2021-43267: An issue was discovered in net/tipc/crypto.c in the Linux kernel before 5.14.16. The Transparent Inter-Process Communication (TIPC) functionality allows remote attackers to exploit insufficient validation of user-supplied sizes for the MSG_CRYPTO message type.\n\n- CVE-2021-45462: In Open5GS 2.4.0, a crafted packet from UE can crash SGW-U/UPF.\n\n- CVE-2022-0174: Improper Validation of Specified Quantity in Input vulnerability in dolibarr dolibarr/dolibarr.\n\n- CVE-2022-20493: In Condition of Condition.java, there is a possible way to grant notification access due to improper input validation. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-242846316\n\n- CVE-2022-20543: In multiple locations, there is a possible display crash loop due to improper input validation. This could lead to local denial of service with system execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-13Android ID: A-238178261\n\n- CVE-2022-20687: Multiple vulnerabilities in the Link Layer Discovery Protocol (LLDP) functionality of Cisco ATA 190 Series Analog Telephone Adapter firmware could allow an unauthenticated, remote attacker to execute arbitrary code on an affected device and cause the LLDP service to restart. These vulnerabilities are due to missing length validation of certain LLDP packet header fields. An attacker could exploit these vulnerabilities by sending a malicious LLDP packet to an affected device. A successful exploit could allow the attacker to execute code on the affected device and cause LLDP to restart unexpectedly, resulting in a denial of service (DoS) condition.\n\n- CVE-2022-20688: A vulnerability in the Cisco Discovery Protocol functionality of Cisco ATA 190 Series Analog Telephone Adapter firmware could allow an unauthenticated, remote attacker to execute arbitrary code on an affected device and cause Cisco Discovery Protocol service to restart. This vulnerability is due to missing length validation of certain Cisco Discovery Protocol packet header fields. An attacker could exploit these vulnerabilities by sending a malicious Cisco Discovery Protocol packet to an affected device. A successful exploit could allow the attacker to execute code on the affected device and cause Cisco Discovery Protocol to restart unexpectedly, resulting in a DoS condition.\n\n- CVE-2022-2277: Improper Input Validation vulnerability exists in the Hitachi Energy MicroSCADA X SYS600's ICCP stack during the ICCP communication establishment causes a denial-of-service when ICCP of SYS600 is request to forward any data item updates with timestamps too distant in the future to any remote ICCP system. By default, ICCP is not configured and not enabled. This issue affects: Hitachi Energy MicroSCADA X SYS600 version 10.2 to version 10.3.1. cpe:2.3:a:hitachienergy:microscada_x_sys600:10.2:*:*:*:*:*:*:* cpe:2.3:a:hitachienergy:microscada_x_sys600:10.2.1:*:*:*:*:*:*:* cpe:2.3:a:hitachienergy:microscada_x_sys600:10.3:*:*:*:*:*:*:* cpe:2.3:a:hitachienergy:microscada_x_sys600:10.3.1:*:*:*:*:*:*:*\n\n- CVE-2022-2592: A lack of length validation in Snippet descriptions in GitLab CE/EE affecting all versions prior to 15.1.6, 15.2 prior to 15.2.4 and 15.3 prior to 15.3.2 allows an authenticated attacker to create a maliciously large Snippet which when requested with or without authentication places excessive load on the server, potential leading to Denial of Service.\n\n- CVE-2022-28613: A vulnerability in the HCI Modbus TCP COMPONENT of Hitachi Energy RTU500 series CMU Firmware that is caused by the validation error in the length information carried in MBAP header allows an ATTACKER to reboot the device by sending a special crafted message. This issue affects: Hitachi Energy RTU500 series CMU Firmware 12.0.*; 12.2.*; 12.4.*; 12.6.*; 12.7.*; 13.2.*.\n\n- CVE-2022-2868: libtiff's tiffcrop utility has a improper input validation flaw that can lead to out of bounds read and ultimately cause a crash if an attacker is able to supply a crafted file to tiffcrop.\n\n- CVE-2022-3411: A lack of length validation in GitLab CE/EE affecting all versions from 12.4 before 15.6.7, 15.7 before 15.7.6, and 15.8 before 15.8.1 allows an authenticated attacker to create a large Issue description via GraphQL which, when repeatedly requested, saturates CPU usage.\n\n- CVE-2022-39272: Flux is an open and extensible continuous delivery solution for Kubernetes. Versions prior to 0.35.0 are subject to a Denial of Service. Users that have permissions to change Flux\u2019s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields `.spec.interval` or `.spec.timeout` (and structured variations of these fields), causing the entire object type to stop being processed. This issue is patched in version 0.35.0. As a workaround, Admission controllers can be employed to restrict the values that can be used for fields `.spec.interval` and `.spec.timeout`, however upgrading to the latest versions is still the recommended mitigation.\n\n- CVE-2022-39313: Parse Server is an open source backend that can be deployed to any infrastructure that can run Node.js. Versions prior to 4.10.17, and prior to 5.2.8 on the 5.x branch, crash when a file download request is received with an invalid byte range, resulting in a Denial of Service. This issue has been patched in versions 4.10.17, and 5.2.8. There are no known workarounds.\n\n- CVE-2022-40761: The function tee_obj_free in Samsung mTower through 0.3.0 allows a trusted application to trigger a Denial of Service (DoS) by invoking the function TEE_AllocateOperation with a disturbed heap layout, related to utee_cryp_obj_alloc.\n\n- CVE-2022-41896: TensorFlow is an open source platform for machine learning. If `ThreadUnsafeUnigramCandidateSampler` is given input `filterbank_channel_count` greater than the allowed max size, TensorFlow will crash. We have patched the issue in GitHub commit 39ec7eaf1428e90c37787e5b3fbd68ebd3c48860. The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.\n\n- CVE-2022-48297: The geofencing kernel code has a vulnerability of not verifying the length of the input data. Successful exploitation of this vulnerability may cause out-of-bounds memory access.\n\n- CVE-2022-48298: The geofencing kernel code does not verify the length of the input data. Successful exploitation of this vulnerability may cause out-of-bounds memory access.\n\n- CVE-2021-0934: In findAllDeAccounts of AccountsDb.java, there is a possible denial of service due to resource exhaustion. This could lead to local denial of service with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-169762606\n\n- CVE-2021-28510: For certain systems running EOS, a Precision Time Protocol (PTP) packet of a management/signaling message with an invalid Type-Length-Value (TLV) causes the PTP agent to restart. Repeated restarts of the service will make the service unavailable.\n\n- CVE-2022-0214: The Custom Popup Builder WordPress plugin before 1.3.1 autoload data from its popup on every pages, as such data can be sent by unauthenticated user, and is not validated in length, this could cause a denial of service on the blog\n\n- CVE-2022-1174: A potential DoS vulnerability was discovered in Gitlab CE/EE versions 13.7 before 14.7.7, all versions starting from 14.8 before 14.8.5, all versions starting from 14.9 before 14.9.2 allowed an attacker to trigger high CPU usage via a special crafted input added in Issues, Merge requests, Milestones, Snippets, Wiki pages, etc.\n\n- CVE-2022-23319: A segmentation fault during PCF file parsing in pcf2bdf versions >=1.05 allows an attacker to trigger a program crash via a specially crafted PCF font file. This crash affects the availability of the software and dependent downstream components.\n\n- CVE-2022-23580: Tensorflow is an Open Source Machine Learning Framework. During shape inference, TensorFlow can allocate a large vector based on a value from a tensor controlled by the user. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n- CVE-2022-29202: TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, the implementation of `tf.ragged.constant` does not fully validate the input arguments. This results in a denial of service by consuming all available memory. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue.\n\n- CVE-2022-36078: Binary provides encoding/decoding in Borsh and other formats. The vulnerability is a memory allocation vulnerability that can be exploited to allocate slices in memory with (arbitrary) excessive size value, which can either exhaust available memory or crash the whole program. When using `github.com/gagliardetto/binary` to parse unchecked (or wrong type of) data from untrusted sources of input (e.g. the blockchain) into slices, it's possible to allocate memory with excessive size. When `dec.Decode(&val)` method is used to parse data into a structure that is or contains slices of values, the length of the slice was previously read directly from the data itself without any checks on the size of it, and then a slice was allocated. This could lead to an overflow and an allocation of memory with excessive size value. Users should upgrade to `v0.7.1` or higher. A workaround is not to rely on the `dec.Decode(&val)` function to parse the data, but to use a custom `UnmarshalWithDecoder()` method that reads and checks the length of any slice.\n\n- CVE-2022-37311: OX App Suite through 7.10.6 has Uncontrolled Resource Consumption via a large location request parameter to the redirect servlet.\n\n- CVE-2022-37312: OX App Suite through 7.10.6 has Uncontrolled Resource Consumption via a large request body containing a redirect URL to the deferrer servlet.\n\n- CVE-2022-39294: conduit-hyper integrates a conduit application with the hyper server. Prior to version 0.4.2, `conduit-hyper` did not check any limit on a request's length before calling [`hyper::body::to_bytes`](https://docs.rs/hyper/latest/hyper/body/fn.to_bytes.html). An attacker could send a malicious request with an abnormally large `Content-Length`, which could lead to a panic if memory allocation failed for that request. In version 0.4.2, `conduit-hyper` sets an internal limit of 128 MiB per request, otherwise returning status 400 (\"Bad Request\"). This crate is part of the implementation of Rust's [crates.io](https://crates.io/), but that service is not affected due to its existing cloud infrastructure, which already drops such malicious requests. Even with the new limit in place, `conduit-hyper` is not recommended for production use, nor to directly serve the public Internet.\n\n- CVE-2022-4111: Unrestricted file size limit can lead to DoS in tooljet/tooljet <1.27 by allowing a logged in attacker to upload profile pictures over 2MB. \n\n- CVE-2022-41968: Nextcloud Server is an open source personal cloud server. Prior to versions 23.0.10 and 24.0.5, calendar name lengths are not validated before writing to a database. As a result, an attacker can send unnecessary amounts of data against the database. Version 23.0.10 and 24.0.5 contain patches for the issue. No known workarounds are available.\n\n- CVE-2022-20488: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-242703217\n\n- CVE-2022-20491: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-242703556\n\n- CVE-2022-20691: A vulnerability in the Cisco Discovery Protocol functionality of Cisco ATA 190 Series Adaptive Telephone Adapter firmware could allow an unauthenticated, adjacent attacker to cause a DoS condition of an affected device. This vulnerability is due to missing length validation of certain Cisco Discovery Protocol packet header fields. An attacker could exploit this vulnerability by sending crafted Cisco Discovery Protocol packets to an affected device. A successful exploit could allow the attacker to cause the device to exhaust available memory and cause the service to restart. Cisco has released firmware updates that address this vulnerability. \n\n- CVE-2022-21208: The package node-opcua before 2.74.0 are vulnerable to Denial of Service (DoS) due to a missing limitation on the number of received chunks - per single session or in total for all concurrent sessions. An attacker can exploit this vulnerability by sending an unlimited number of huge chunks (e.g. 2GB each) without sending the Final closing chunk.\n\n- CVE-2022-29212: TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, certain TFLite models that were created using TFLite model converter would crash when loaded in the TFLite interpreter. The culprit is that during quantization the scale of values could be greater than 1 but code was always assuming sub-unit scaling. Thus, since code was calling `QuantizeMultiplierSmallerThanOneExp`, the `TFLITE_CHECK_LT` assertion would trigger and abort the process. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue.\n\n- CVE-2022-29196: TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, the implementation of `tf.raw_ops.Conv3DBackpropFilterV2` does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack. The code does not validate that the `filter_sizes` argument is a vector. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue.\n\n- CVE-2022-29200: TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, the implementation of `tf.raw_ops.LSTMBlockCell` does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack. The code does not validate the ranks of any of the arguments to this API call. This results in `CHECK`-failures when the elements of the tensor are accessed. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue.\n\nRelated Weaknesses:\n\n- CWE-20 (ChildOf)\n\n- CWE-20 (ChildOf)\n\n- CWE-789 (CanPrecede)",
            "type": "Base",
            "search_source": "base_query",
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              }
            }
          },
          {
            "cwe_id": "401",
            "name": "Missing Release of Memory after Effective Lifetime",
            "description": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.",
            "score": 25.34208451259859,
            "matched_text": "CWE-401: Missing Release of Memory after Effective Lifetime\n\nType: Variant\n\nStatus: Draft\n\nAlternative Terms:\n\nMemory Leak\n\nMemory Leak\n\nMemory Leak\n\nDescription:\n\nThe product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.\n\nExtended Details:\n\nThis is often triggered by improper handling of malformed data or unexpectedly interrupted sessions. In some languages, developers are responsible for tracking memory allocation and releasing the memory. If there are no more pointers or references to the memory, then it can no longer be tracked and identified for release.\n\nReal-World Examples:\n\n- CVE-2005-3119: Memory leak because function does not free() an element of a data structure.\n\n- CVE-2004-0427: Memory leak when counter variable is not decremented.\n\n- CVE-2002-0574: chain: reference count is not decremented, leading to memory leak in OS by sending ICMP packets.\n\n- CVE-2005-3181: Kernel uses wrong function to release a data structure, preventing data from being properly tracked by other code.\n\n- CVE-2004-0222: Memory leak via unknown manipulations as part of protocol test suite.\n\n- CVE-2001-0136: Memory leak via a series of the same command.\n\nTop 25 CWE Examples:\n\n- CVE-2021-31256: Memory leak in the stbl_GetSampleInfos function in MP4Box in GPAC 1.0.1 allows attackers to read memory via a crafted file.\n\n- CVE-2021-33361: Memory leak in the afra_box_read function in MP4Box in GPAC 1.0.1 allows attackers to read memory via a crafted file.\n\n- CVE-2021-33363: Memory leak in the infe_box_read function in MP4Box in GPAC 1.0.1 allows attackers to read memory via a crafted file.\n\n- CVE-2021-33365: Memory leak in the gf_isom_get_root_od function in MP4Box in GPAC 1.0.1 allows attackers to read memory via a crafted file.\n\n- CVE-2021-36993: There is a Memory leaks vulnerability in Huawei Smartphone.Successful exploitation of this vulnerability may affect service availability.\n\n- CVE-2021-1313: Multiple vulnerabilities in the ingress packet processing function of Cisco IOS XR Software could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition on an affected device. For more information about these vulnerabilities, see the Details section of this advisory.\n\n- CVE-2020-20665: rudp v0.6 was discovered to contain a memory leak in the component main.c.\n\n- CVE-2020-21839: An issue was discovered in GNU LibreDWG 0.10. Crafted input will lead to an memory leak in dwg_decode_eed ../../src/decode.c:3638.\n\n- CVE-2021-0202: On Juniper Networks MX Series and EX9200 Series platforms with Trio-based MPC (Modular Port Concentrator) where Integrated Routing and Bridging (IRB) interface is configured and it is mapped to a VPLS instance or a Bridge-Domain, certain network events at Customer Edge (CE) device may cause memory leak in the MPC which can cause an out of memory and MPC restarts. When this issue occurs, there will be temporary traffic interruption until the MPC is restored. An administrator can use the following CLI command to monitor the status of memory usage level of the MPC: user@device> show system resource-monitor fpc FPC Resource Usage Summary Free Heap Mem Watermark : 20 % Free NH Mem Watermark : 20 % Free Filter Mem Watermark : 20 % * - Watermark reached Slot # % Heap Free RTT Average RTT 1 87 PFE # % ENCAP mem Free % NH mem Free % FW mem Free 0 NA 88 99 1 NA 89 99 When the issue is occurring, the value of \u201c% NH mem Free\u201d will go down until the MPC restarts. This issue affects MX Series and EX9200 Series with Trio-based PFEs (Packet Forwarding Engines). Please refer to https://kb.juniper.net/KB25385 for the list of Trio-based PFEs. This issue affects Juniper Networks Junos OS on MX Series, EX9200 Series: 17.3R3-S8; 17.4R3-S2; 18.2R3-S4, 18.2R3-S5; 18.3R3-S2, 18.3R3-S3; 18.4 versions starting from 18.4R3-S1 and later versions prior to 18.4R3-S6; 19.2 versions starting from 19.2R2 and later versions prior to 19.2R3-S1; 19.4 versions starting from 19.4R2 and later versions prior to 19.4R2-S3, 19.4R3; 20.2 versions starting from 20.2R1 and later versions prior to 20.2R1-S3, 20.2R2. This issue does not affect Juniper Networks Junos OS: 18.1, 19.1, 19.3, 20.1.\n\n- CVE-2021-0215: On Juniper Networks Junos EX series, QFX Series, MX Series and SRX branch series devices, a memory leak occurs every time the 802.1X authenticator port interface flaps which can lead to other processes, such as the pfex process, responsible for packet forwarding, to crash and restart. An administrator can use the following CLI command to monitor the status of memory consumption: user@device> show task memory detail Please refer to https://kb.juniper.net/KB31522 for details. This issue affects Juniper Networks Junos OS: 14.1X53 versions prior to 14.1X53-D54; 15.1X49 versions prior to 15.1X49-D240 ; 15.1X53 versions prior to 15.1X53-D593; 16.1 versions prior to 16.1R7-S8; 17.2 versions prior to 17.2R3-S4; 17.3 versions prior to 17.3R3-S8; 17.4 versions prior to 17.4R2-S11, 17.4R3-S2; 18.1 versions prior to 18.1R3-S10 ; 18.2 versions prior to 18.2R2-S7, 18.2R3-S3; 18.3 versions prior to 18.3R2-S4, 18.3R3-S2; 18.4 versions prior to 18.4R1-S7, 18.4R2-S4, 18.4R3-S2; 19.1 versions prior to 19.1R1-S5, 19.1R2-S2, 19.1R3; 19.2 versions prior to 19.2R1-S5, 19.2R2; 19.3 versions prior to 19.3R2-S3, 19.3R3; 19.4 versions prior to 19.4R1-S2, 19.4R2. This issue does not affect Juniper Networks Junos OS 12.3, 15.1.\n\n- CVE-2021-0230: On Juniper Networks SRX Series devices with link aggregation (lag) configured, executing any operation that fetches Aggregated Ethernet (AE) interface statistics, including but not limited to SNMP GET requests, causes a slow kernel memory leak. If all the available memory is consumed, the traffic will be impacted and a reboot might be required. The following log can be seen if this issue happens. /kernel: rt_pfe_veto: Memory over consumed. Op 1 err 12, rtsm_id 0:-1, msg type 72 /kernel: rt_pfe_veto: free kmem_map memory = (20770816) curproc = kmd An administrator can use the following CLI command to monitor the status of memory consumption (ifstat bucket): user@device > show system virtual-memory no-forwarding | match ifstat Type InUse MemUse HighUse Limit Requests Limit Limit Size(s) ifstat 2588977 162708K - 19633958 <<<< user@device > show system virtual-memory no-forwarding | match ifstat Type InUse MemUse HighUse Limit Requests Limit Limit Size(s) ifstat 3021629 189749K - 22914415 <<<< This issue affects Juniper Networks Junos OS on SRX Series: 17.1 versions 17.1R3 and above prior to 17.3R3-S11; 17.4 versions prior to 17.4R3-S5; 18.2 versions prior to 18.2R3-S7, 18.2R3-S8; 18.3 versions prior to 18.3R3-S4; 18.4 versions prior to 18.4R2-S7, 18.4R3-S6; 19.1 versions prior to 19.1R3-S4; 19.2 versions prior to 19.2R1-S6; 19.3 versions prior to 19.3R3-S1; 19.4 versions prior to 19.4R3-S1; 20.1 versions prior to 20.1R2, 20.1R3; 20.2 versions prior to 20.2R2-S2, 20.2R3; 20.3 versions prior to 20.3R1-S2, 20.3R2. This issue does not affect Juniper Networks Junos OS prior to 17.1R3.\n\n- CVE-2021-0257: On Juniper Networks MX Series and EX9200 Series platforms with Trio-based MPCs (Modular Port Concentrators) where Integrated Routing and Bridging (IRB) interfaces are configured and mapped to a VPLS instance or a Bridge-Domain, certain Layer 2 network events at Customer Edge (CE) devices may cause memory leaks in the MPC of Provider Edge (PE) devices which can cause an out of memory condition and MPC restart. When this issue occurs, there will be temporary traffic interruption until the MPC is restored. An administrator can use the following CLI command to monitor the status of memory usage level of the MPC: user@device> show system resource-monitor fpc FPC Resource Usage Summary Free Heap Mem Watermark : 20 % Free NH Mem Watermark : 20 % Free Filter Mem Watermark : 20 % * - Watermark reached Slot # % Heap Free RTT Average RTT 1 87 PFE # % ENCAP mem Free % NH mem Free % FW mem Free 0 NA 88 99 1 NA 89 99 When the issue is occurring, the value of \u201c% NH mem Free\u201d will go down until the MPC restarts. This issue affects MX Series and EX9200 Series with Trio-based PFEs (Packet Forwarding Engines), including MX-MPC1-3D, MX-MPC1E-3D, MX-MPC2-3D, MX-MPC2E-3D, MPC-3D-16XGE, and CHAS-MXxx Series MPCs. No other products or platforms are affected by this issue. This issue affects Juniper Networks Junos OS on MX Series, EX9200 Series: 17.3 versions prior to 17.3R3-S10; 17.4 versions prior to 17.4R3-S3; 18.2 versions prior to 18.2R3-S7; 18.3 versions prior to 18.3R3-S4; 18.4 versions prior to 18.4R3-S6; 19.2 versions prior to 19.2R3-S2; 19.3 versions prior to 19.3R3-S1; 19.4 versions prior to 19.4R2-S2, 19.4R3; 20.2 versions prior to 20.2R1-S3, 20.2R2; 20.3 versions prior to 20.3R1-S1,, 20.3R2. This issue does not affect Juniper Networks Junos OS: 17.3 versions prior to 17.3R3-S8; 17.4 versions prior to 17.4R3-S2; 18.1; 18.2 versions prior to 18.2R3-S4; 18.3 versions prior to 18.3R3-S2; 18.4 versions prior to 18.4R3-S1; 19.1; 19.2 versions prior to 19.2R2; 19.3 versions prior to 19.3R3; 19.4 versions prior to 19.4R2.\n\n- CVE-2021-1563: Multiple vulnerabilities in the implementation of the Cisco Discovery Protocol and Link Layer Discovery Protocol (LLDP) for Cisco Video Surveillance 7000 Series IP Cameras could allow an unauthenticated, adjacent attacker to cause a memory leak, which could lead to a denial of service (DoS) condition on an affected device. These vulnerabilities are due to incorrect processing of certain Cisco Discovery Protocol and LLDP packets at ingress time. An attacker could exploit these vulnerabilities by sending crafted Cisco Discovery Protocol or LLDP packets to an affected device. A successful exploit could allow the attacker to cause the affected device to continuously consume memory, which could cause the device to crash and reload, resulting in a DoS condition. Note: Cisco Discovery Protocol and LLDP are Layer 2 protocols. To exploit these vulnerabilities, an attacker must be in the same broadcast domain as the affected device (Layer 2 adjacent).\n\n- CVE-2021-1564: Multiple vulnerabilities in the implementation of the Cisco Discovery Protocol and Link Layer Discovery Protocol (LLDP) for Cisco Video Surveillance 7000 Series IP Cameras could allow an unauthenticated, adjacent attacker to cause a memory leak, which could lead to a denial of service (DoS) condition on an affected device. These vulnerabilities are due to incorrect processing of certain Cisco Discovery Protocol and LLDP packets at ingress time. An attacker could exploit these vulnerabilities by sending crafted Cisco Discovery Protocol or LLDP packets to an affected device. A successful exploit could allow the attacker to cause the affected device to continuously consume memory, which could cause the device to crash and reload, resulting in a DoS condition. Note: Cisco Discovery Protocol and LLDP are Layer 2 protocols. To exploit these vulnerabilities, an attacker must be in the same broadcast domain as the affected device (Layer 2 adjacent).\n\n- CVE-2021-20216: A flaw was found in Privoxy in versions before 3.0.31. A memory leak that occurs when decompression fails unexpectedly may lead to a denial of service. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-20234: An uncontrolled resource consumption (memory leak) flaw was found in the ZeroMQ client in versions before 4.3.3 in src/pipe.cpp. This issue causes a client that connects to multiple malicious or compromised servers to crash. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-20237: An uncontrolled resource consumption (memory leak) flaw was found in ZeroMQ's src/xpub.cpp in versions before 4.3.3. This flaw allows a remote unauthenticated attacker to send crafted PUB messages that consume excessive memory if the CURVE/ZAP authentication is disabled on the server, causing a denial of service. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-30002: An issue was discovered in the Linux kernel before 5.11.3 when a webcam device exists. video_usercopy in drivers/media/v4l2-core/v4l2-ioctl.c has a memory leak for large arguments, aka CID-fb18802a338b.\n\n- CVE-2021-30844: A logic issue was addressed with improved state management. This issue is fixed in Security Update 2021-005 Catalina, macOS Big Sur 11.6. A remote attacker may be able to leak memory.\n\n- CVE-2021-32032: In Trusted Firmware-M through 1.3.0, cleaning up the memory allocated for a multi-part cryptographic operation (in the event of a failure) can prevent the abort() operation in the associated cryptographic library from freeing internal resources, causing a memory leak.\n\n- CVE-2021-39282: Live555 through 1.08 has a memory leak in AC3AudioStreamParser for AC3 files.\n\n- CVE-2021-41229: BlueZ is a Bluetooth protocol stack for Linux. In affected versions a vulnerability exists in sdp_cstate_alloc_buf which allocates memory which will always be hung in the singly linked list of cstates and will not be freed. This will cause a memory leak over time. The data can be a very large object, which can be caused by an attacker continuously sending sdp packets and this may cause the service of the target device to crash.\n\n- CVE-2021-42340: The fix for bug 63362 present in Apache Tomcat 10.1.0-M1 to 10.1.0-M5, 10.0.0-M1 to 10.0.11, 9.0.40 to 9.0.53 and 8.5.60 to 8.5.71 introduced a memory leak. The object introduced to collect metrics for HTTP upgrade connections was not released for WebSocket connections once the connection was closed. This created a memory leak that, over time, could lead to a denial of service via an OutOfMemoryError.\n\n- CVE-2021-20265: A flaw was found in the way memory resources were freed in the unix_stream_recvmsg function in the Linux kernel when a signal was pending. This flaw allows an unprivileged local user to crash the system by exhausting available memory. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-34792: A vulnerability in the memory management of Cisco Adaptive Security Appliance (ASA) Software and Firepower Threat Defense (FTD) Software could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition on an affected device. This vulnerability is due to improper resource management when connection rates are high. An attacker could exploit this vulnerability by opening a significant number of connections on an affected device. A successful exploit could allow the attacker to cause the device to reload, resulting in a DoS condition.\n\n- CVE-2020-15254: Crossbeam is a set of tools for concurrent programming. In crossbeam-channel before version 0.4.4, the bounded channel incorrectly assumes that `Vec::from_iter` has allocated capacity that same as the number of iterator elements. `Vec::from_iter` does not actually guarantee that and may allocate extra memory. The destructor of the `bounded` channel reconstructs `Vec` from the raw pointer based on the incorrect assumes described above. This is unsound and causing deallocation with the incorrect capacity when `Vec::from_iter` has allocated different sizes with the number of iterator elements. This has been fixed in crossbeam-channel 0.4.4.\n\n- CVE-2020-27827: A flaw was found in multiple versions of OpenvSwitch. Specially crafted LLDP packets can cause memory to be lost when allocating data to handle specific optional TLVs, potentially causing a denial of service. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-28665: Stormshield SNS with versions before 3.7.18, 3.11.6 and 4.1.6 has a memory-management defect in the SNMP plugin that can lead to excessive consumption of memory and CPU resources, and possibly a denial of service.\n\n- CVE-2021-3181: rfc822.c in Mutt through 2.0.4 allows remote attackers to cause a denial of service (mailbox unavailability) by sending email messages with sequences of semicolon characters in RFC822 address fields (aka terminators of empty groups). A small email message from the attacker can cause large memory consumption, and the victim may then be unable to see email messages from other persons.\n\n- CVE-2021-41145: FreeSWITCH is a Software Defined Telecom Stack enabling the digital transformation from proprietary telecom switches to a software implementation that runs on any commodity hardware. FreeSWITCH prior to version 1.10.7 is susceptible to Denial of Service via SIP flooding. When flooding FreeSWITCH with SIP messages, it was observed that after a number of seconds the process was killed by the operating system due to memory exhaustion. By abusing this vulnerability, an attacker is able to crash any FreeSWITCH instance by flooding it with SIP messages, leading to Denial of Service. The attack does not require authentication and can be carried out over UDP, TCP or TLS. This issue was patched in version 1.10.7.\n\n- CVE-2021-31261: The gf_hinter_track_new function in GPAC 1.0.1 allows attackers to read memory via a crafted file in the MP4Box command.\n\n- CVE-2020-22844: A buffer overflow in Mikrotik RouterOS 6.47 allows unauthenticated attackers to cause a denial of service (DOS) via crafted SMB requests.\n\n- CVE-2021-40008: There is a memory leak vulnerability in CloudEngine 12800 V200R019C00SPC800, CloudEngine 5800 V200R019C00SPC800, CloudEngine 6800 V200R019C00SPC800 and CloudEngine 7800 V200R019C00SPC800. The software does not sufficiently track and release allocated memory while parse a series of crafted binary messages, which could consume remaining memory. Successful exploit could cause memory exhaust.\n\n- CVE-2022-20046: In Bluetooth, there is a possible memory corruption due to a logic error. This could lead to local denial of service with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS06142410; Issue ID: ALPS06142410.\n\n- CVE-2021-33437: An issue was discovered in mjs (mJS: Restricted JavaScript engine), ES6 (JavaScript version 6). There are memory leaks in frozen_cb() in mjs.c.\n\n- CVE-2021-42197: An issue was discovered in swftools through 20201222 through a memory leak in the swftools when swfdump is used. It allows an attacker to cause code execution.\n\n- CVE-2022-0854: A memory leak flaw was found in the Linux kernel\u2019s DMA subsystem, in the way a user calls DMA_FROM_DEVICE. This flaw allows a local user to read random memory from the kernel space.\n\n- CVE-2022-22155: An Uncontrolled Resource Consumption vulnerability in the handling of IPv6 neighbor state change events in Juniper Networks Junos OS allows an adjacent attacker to cause a memory leak in the Flexible PIC Concentrator (FPC) of an ACX5448 router. The continuous flapping of an IPv6 neighbor with specific timing will cause the FPC to run out of resources, leading to a Denial of Service (DoS) condition. Once the condition occurs, further packet processing will be impacted, creating a sustained Denial of Service (DoS) condition, requiring a manual PFE restart to restore service. The following error messages will be seen after the FPC resources have been exhausted: fpc0 DNX_NH::dnx_nh_tag_ipv4_hw_install(),3135: dnx_nh_tag_ipv4_hw_install: BCM L3 Egress create object failed for NH 602 (-14:No resources for operation), BCM NH Params: unit:0 Port:41, L3_INTF:0 Flags: 0x40 fpc0 DNX_NH::dnx_nh_tag_ipv4_hw_install(),3135: dnx_nh_tag_ipv4_hw_install: BCM L3 Egress create object failed for NH 602 (-14:No resources for operation), BCM NH Params: unit:0 Port:41, L3_INTF:0 Flags: 0x40 fpc0 DNX_NH::dnx_nh_tag_ipv4_hw_install(),3135: dnx_nh_tag_ipv4_hw_install: BCM L3 Egress create object failed for NH 602 (-14:No resources for operation), BCM NH Params: unit:0 Port:41, L3_INTF:0 Flags: 0x40 fpc0 DNX_NH::dnx_nh_tag_ipv4_hw_install(),3135: dnx_nh_tag_ipv4_hw_install: BCM L3 Egress create object failed for NH 602 (-14:No resources for operation), BCM NH Params: unit:0 Port:41, L3_INTF:0 Flags: 0x40 This issue only affects the ACX5448 router. No other products or platforms are affected by this vulnerability. This issue affects Juniper Networks Junos OS on ACX5448: 18.4 versions prior to 18.4R3-S10; 19.1 versions prior to 19.1R3-S5; 19.2 versions prior to 19.2R1-S8, 19.2R3-S2; 19.3 versions prior to 19.3R2-S6, 19.3R3-S2; 19.4 versions prior to 19.4R1-S3, 19.4R2-S2, 19.4R3; 20.1 versions prior to 20.1R2; 20.2 versions prior to 20.2R1-S1, 20.2R2.\n\n- CVE-2022-26878: drivers/bluetooth/virtio_bt.c in the Linux kernel before 5.16.3 has a memory leak (socket buffers have memory allocated but not freed).\n\n- CVE-2022-35110: SWFTools commit 772e55a2 was discovered to contain a memory leak via /lib/mem.c.\n\n- CVE-2022-36152: tifig v0.2.2 was discovered to contain a memory leak via operator new[](unsigned long) at /asan/asan_new_delete.cpp.\n\n- CVE-2022-38177: By spoofing the target resolver with responses that have a malformed ECDSA signature, an attacker can trigger a small memory leak. It is possible to gradually erode available memory to the point where named crashes for lack of resources.\n\n- CVE-2022-38178: By spoofing the target resolver with responses that have a malformed EdDSA signature, an attacker can trigger a small memory leak. It is possible to gradually erode available memory to the point where named crashes for lack of resources.\n\n- CVE-2022-23471: containerd is an open source container runtime. A bug was found in containerd's CRI implementation where a user can exhaust memory on the host. In the CRI stream server, a goroutine is launched to handle terminal resize events if a TTY is requested. If the user's process fails to launch due to, for example, a faulty command, the goroutine will be stuck waiting to send without a receiver, resulting in a memory leak. Kubernetes and crictl can both be configured to use containerd's CRI implementation and the stream server is used for handling container IO. This bug has been fixed in containerd 1.6.12 and 1.5.16. Users should update to these versions to resolve the issue. Users unable to upgrade should ensure that only trusted images and commands are used and that only trusted users have permissions to execute commands in running containers. \n\n- CVE-2021-42522: There is a Information Disclosure vulnerability in anjuta/plugins/document-manager/anjuta-bookmarks.c. This issue was caused by the incorrect use of libxml2 API. The vendor forgot to call 'g_free()' to release the return value of 'xmlGetProp()'.\n\n- CVE-2021-42523: There are two Information Disclosure vulnerabilities in colord, and they lie in colord/src/cd-device-db.c and colord/src/cd-profile-db.c separately. They exist because the 'err_msg' of 'sqlite3_exec' is not releasing after use, while libxml2 emphasizes that the caller needs to release it.\n\n- CVE-2022-26365: Linux disk/nic frontends data leaks T[his CNA information record relates to multiple CVEs; the text explains which aspects/vulnerabilities correspond to which CVE.] Linux Block and Network PV device frontends don't zero memory regions before sharing them with the backend (CVE-2022-26365, CVE-2022-33740). Additionally the granularity of the grant table doesn't allow sharing less than a 4K page, leading to unrelated data residing in the same 4K page as data shared with a backend being accessible by such backend (CVE-2022-33741, CVE-2022-33742).\n\n- CVE-2021-3690: A flaw was found in Undertow. A buffer leak on the incoming WebSocket PONG message may lead to memory exhaustion. This flaw allows an attacker to cause a denial of service. The highest threat from this vulnerability is availability.\n\n- CVE-2022-38371: A vulnerability has been identified in APOGEE MBC (PPC) (BACnet) (All versions), APOGEE MBC (PPC) (P2 Ethernet) (All versions), APOGEE MEC (PPC) (BACnet) (All versions), APOGEE MEC (PPC) (P2 Ethernet) (All versions), APOGEE PXC Compact (BACnet) (All versions < V3.5.7), APOGEE PXC Compact (P2 Ethernet) (All versions < V2.8.21), APOGEE PXC Modular (BACnet) (All versions < V3.5.7), APOGEE PXC Modular (P2 Ethernet) (All versions < V2.8.21), Desigo PXC00-E.D (All versions >= V2.3), Desigo PXC00-U (All versions >= V2.3), Desigo PXC001-E.D (All versions >= V2.3), Desigo PXC100-E.D (All versions >= V2.3), Desigo PXC12-E.D (All versions >= V2.3), Desigo PXC128-U (All versions >= V2.3), Desigo PXC200-E.D (All versions >= V2.3), Desigo PXC22-E.D (All versions >= V2.3), Desigo PXC22.1-E.D (All versions >= V2.3), Desigo PXC36.1-E.D (All versions >= V2.3), Desigo PXC50-E.D (All versions >= V2.3), Desigo PXC64-U (All versions >= V2.3), Desigo PXM20-E (All versions >= V2.3), Nucleus NET for Nucleus PLUS V1 (All versions < V5.2a), Nucleus NET for Nucleus PLUS V2 (All versions < V5.4), Nucleus ReadyStart V3 V2012 (All versions < V2012.08.1), Nucleus ReadyStart V3 V2017 (All versions < V2017.02.4), Nucleus Source Code (All versions including affected FTP server), TALON TC Compact (BACnet) (All versions < V3.5.7), TALON TC Modular (BACnet) (All versions < V3.5.7). The FTP server does not properly release memory resources that were reserved for incomplete connection attempts by FTP clients. This could allow a remote attacker to generate a denial of service condition on devices that incorporate a vulnerable version of the FTP server.\n\nRelated Weaknesses:\n\n- CWE-772 (ChildOf)\n\n- CWE-404 (ChildOf)\n\n- CWE-404 (ChildOf)",
            "type": "Variant",
            "search_source": "base_query",
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              }
            }
          }
        ]
      },
      "search_metadata": {
        "query": "D-Link DIR-816 A2V1.1.0B05 was found to contain a command injection in /goform/delRouting.",
        "keyphrases": {
          "weakness": [
            "command injection"
          ]
        },
        "cve_id": "CVE-2025-29743",
        "retrievers_used": {
          "graph": true,
          "dense": true,
          "sparse": true
        },
        "search_time": 1752317892.8384688,
        "retriever_counts": {
          "graph": 20,
          "dense": 20,
          "sparse": 14
        }
      }
    },
    "relevant_cwes": [
      {
        "metadata": {
          "doc_id": "77",
          "name": "Improper Neutralization of Special Elements used in a Command ('Command Injection')",
          "source": "alternate_terms",
          "original_match": "AlternateTerms: Command injection",
          "match_reason": "exact_match_whole_phrase"
        },
        "similarity": 1000.0,
        "alternate_term_match": true
      },
      {
        "metadata": {
          "doc_id": "78",
          "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
          "source": "alternate_terms",
          "original_match": "AlternateTerms: OS Command Injection",
          "match_reason": "phrase_in_term_whole_phrase"
        },
        "similarity": 700.0,
        "alternate_term_match": true
      },
      {
        "metadata": {
          "doc_id": "121",
          "name": "Stack-based Buffer Overflow",
          "source": "sparse"
        },
        "similarity": 109.23438345945085
      },
      {
        "metadata": {
          "doc_id": "426",
          "name": "Untrusted Search Path",
          "source": "sparse"
        },
        "similarity": 94.56104726448638
      },
      {
        "metadata": {
          "doc_id": "138",
          "name": "Improper Neutralization of Special Elements",
          "source": "sparse"
        },
        "similarity": 91.22587651898233
      },
      {
        "metadata": {
          "doc_id": "790",
          "name": "Improper Filtering of Special Elements",
          "type": "Class",
          "original_content": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
          "keyphrase_source": "weakness:command injection",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed-with-Review",
            "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
            "comments": "Examine children of this entry to see if there is a better fit",
            "reasons": [
              "Abstraction"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "dense": 0.5421319818299566,
              "sparse": 85.21118989842024
            }
          }
        },
        "similarity": 0.5421319818299566
      },
      {
        "doc_id": "98",
        "text": "CWE-98: Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')",
        "score": 2.2800000000000002,
        "metadata": {
          "doc_id": "98",
          "name": "Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')",
          "type": "variant",
          "original_content": "CWE-98: Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')",
          "relationships": [
            {
              "source_id": "98",
              "target_id": "73",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "98",
              "target_id": "473",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "98",
              "target_id": "456",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "98",
              "target_id": "425",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "98",
              "target_id": "184",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "98",
              "target_id": "426",
              "label": "CANALSOBE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "98",
              "target_id": "94",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "98",
              "target_id": "829",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "98",
              "target_id": "706",
              "label": "CHILDOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "94",
              "target_id": "98",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "829",
              "target_id": "98",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "73",
              "target_id": "98",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "706",
              "target_id": "98",
              "label": "PARENTOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "473",
              "target_id": "98",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "456",
              "target_id": "98",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "425",
              "target_id": "98",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "184",
              "target_id": "98",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.8,
            "sequence_path": 0.8,
            "peer_group": 0.9
          },
          "abstraction_factor": 1.2,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "vulnerability_sequence_forward",
              "peer_relationship"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "78",
                    "184",
                    "CANFOLLOW"
                  ],
                  [
                    "184",
                    "98",
                    "CANPRECEDE"
                  ]
                ],
                "score": 0.8,
                "type": "relationship_chain",
                "source": "78"
              },
              "vulnerability_sequence_forward": {
                "path": [
                  [
                    "78",
                    "184",
                    "CANFOLLOW"
                  ],
                  [
                    "184",
                    "98",
                    "CANPRECEDE"
                  ]
                ],
                "score": 0.8,
                "type": "vulnerability_sequence_forward",
                "source": "78"
              },
              "peer_relationship": {
                "path": [
                  [
                    "98",
                    "426",
                    "CANALSOBE"
                  ]
                ],
                "score": 0.9,
                "type": "peer_relationship",
                "source": "426"
              }
            }
          },
          "position": "after",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 2.2800000000000002
            }
          }
        },
        "similarity": 2.2800000000000002
      },
      {
        "metadata": {
          "doc_id": "89",
          "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
          "source": "sparse"
        },
        "similarity": 91.01956869206971
      },
      {
        "metadata": {
          "doc_id": "259",
          "name": "Use of Hard-coded Password",
          "source": "sparse"
        },
        "similarity": 87.74115526296906
      },
      {
        "metadata": {
          "doc_id": "116",
          "name": "Improper Encoding or Escaping of Output",
          "source": "sparse"
        },
        "similarity": 86.1787009146509
      }
    ],
    "enhanced_query": "## Vulnerability Description\nD-Link DIR-816 A2V1.1.0B05 was found to contain a **command injection** in /goform/delRouting.\n\n### Vulnerability Description Key Phrases\n- **weakness:** **command injection**\n- **product:** D-Link DIR-816\n- **version:** A2V1.1.0B05\n- **component:** /goform/delRouting\n\n## CVE Reference Links Content Summary\nUNRELATED\n\n## Retriever Results\n\n### Top Combined Results\n\n| Rank | CWE ID | Name | Abstraction | Usage  | Retrievers | Individual Scores |\n|------|--------|------|-------------|-------|------------|-------------------|\n| 1 | 77 | Improper Neutralization of Special Elements used in a Command ('Command Injection') | Class | Allowed-with-Review | alternate_terms | 1.000 |\n| 2 | 78 | Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') | Base | Allowed | alternate_terms | 0.700 |\n| 3 | 121 | Stack-based Buffer Overflow | Variant | Allowed | sparse | 0.109 |\n| 4 | 426 | Untrusted Search Path | Base | Allowed | sparse | 0.095 |\n| 5 | 138 | Improper Neutralization of Special Elements | Class | Discouraged | sparse | 0.091 |\n| 6 | 790 | Improper Filtering of Special Elements | Class | Allowed-with-Review | dense | 0.542 |\n| 7 | 98 | Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion') | Variant | Allowed | graph | 0.002 |\n| 8 | 89 | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | Base | Allowed | sparse | 0.091 |\n| 9 | 259 | Use of Hard-coded Password | Variant | Allowed | sparse | 0.088 |\n| 10 | 116 | Improper Encoding or Escaping of Output | Class | Allowed-with-Review | sparse | 0.086 |\n\n\n\n# Complete CWE Specifications\n\n\n## CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection')\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component.\n\n### Extended Description\n\n\nMany protocols and products have their own custom command language. While OS or shell command strings are frequently discovered and targeted, developers may not realize that these other command languages might also be vulnerable to attacks.\n\n\n### Alternative Terms\nCommand injection: an attack-oriented phrase for this weakness. Note: often used when \"OS command injection\" (CWE-78) was intended.\n\n### Relationships\nChildOf -> CWE-74\nChildOf -> CWE-74\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** CWE-77 is often misused when OS command injection (CWE-78) was intended instead [REF-1287].\n**Comments:** Ensure that the analysis focuses on the root-cause error that allows the execution of commands, as there are many weaknesses that can lead to this consequence. See Terminology Notes. If the weakness involves a command language besides OS shell invocation, then CWE-77 could be used.\n**Reasons:**\n- Frequent Misuse\n**Suggested Alternatives:**\n- CWE-78: OS Command Injection\n\n\n### Additional Notes\n**[Terminology]** \n\nThe \"command injection\" phrase carries different meanings, either as an attack or as a technical impact. The most common usage of \"command injection\" refers to the more-accurate OS command injection (CWE-78), but there are many command languages.\n\n\nIn vulnerability-focused analysis, the phrase may refer to any situation in which the adversary can execute commands of their own choosing, i.e., the focus is on the risk and/or technical impact of exploitation. Many proof-of-concept exploits focus on the ability to execute commands and may emphasize \"command injection.\" However, there are dozens of weaknesses that can allow execution of commands. That is, the ability to execute commands could be resultant from another weakness.\n\n\nTo some, \"command injection\" can include cases in which the functionality intentionally allows the user to specify an entire command, which is then executed. In this case, the root cause weakness might be related to missing or incorrect authorization, since an adversary should not be able to specify arbitrary commands, but some users or admins are allowed.\n\n\nCWE-77 and its descendants are specifically focused on behaviors in which the product is intentionally building a command to execute, and the adversary can inject separators into the command or otherwise change the command being executed.\n\n\n**[Other]** \n\nCommand injection is a common problem with wrapper programs.\n\n\n\n\n### Observed Examples\n- **CVE-2022-1509:** injection of sed script syntax (\"sed injection\")\n- **CVE-2024-5184:** API service using a large generative AI model allows direct prompt injection to leak hard-coded system prompts or execute other prompts.\n- **CVE-2020-11698:** anti-spam product allows injection of SNMP commands into confiuration file\n\n\n\n\n## CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')\n**Abstraction:** Base\n**Status:** Stable\n\n### Description\nThe product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.\n\n### Extended Description\n\n\nThis weakness can lead to a vulnerability in environments in which the attacker does not have direct access to the operating system, such as in web applications. Alternately, if the weakness occurs in a privileged program, it could allow the attacker to specify commands that normally would not be accessible, or to call alternate commands with privileges that the attacker does not have. The problem is exacerbated if the compromised process does not follow the principle of least privilege, because the attacker-controlled commands may run with special system privileges that increases the amount of damage.\n\n\nThere are at least two subtypes of OS command injection:\n\n\n  - The application intends to execute a single, fixed program that is under its own control. It intends to use externally-supplied inputs as arguments to that program. For example, the program might use system(\"nslookup [HOSTNAME]\") to run nslookup and allow the user to supply a HOSTNAME, which is used as an argument. Attackers cannot prevent nslookup from executing. However, if the program does not remove command separators from the HOSTNAME argument, attackers could place the separators into the arguments, which allows them to execute their own program after nslookup has finished executing.\n\n  - The application accepts an input that it uses to fully select which program to run, as well as which commands to use. The application simply redirects this entire command to the operating system. For example, the program might use \"exec([COMMAND])\" to execute the [COMMAND] that was supplied by the user. If the COMMAND is under attacker control, then the attacker can execute arbitrary commands or programs. If the command is being executed using functions like exec() and CreateProcess(), the attacker might not be able to combine multiple commands together in the same line.\n\nFrom a weakness standpoint, these variants represent distinct programmer errors. In the first variant, the programmer clearly intends that input from untrusted parties will be part of the arguments in the command to be executed. In the second variant, the programmer does not intend for the command to be accessible to any untrusted party, but the programmer probably has not accounted for alternate ways in which malicious attackers can provide input.\n\n### Alternative Terms\nShell injection\nShell metacharacters\nOS Command Injection\n\n### Relationships\nChildOf -> CWE-77\nChildOf -> CWE-74\nChildOf -> CWE-77\nChildOf -> CWE-77\nCanAlsoBe -> CWE-88\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Terminology]** The \"OS command injection\" phrase carries different meanings to different people. For some people, it only refers to cases in which the attacker injects command separators into arguments for an application-controlled program that is being invoked. For some people, it refers to any type of attack that can allow the attacker to execute OS commands of their own choosing. This usage could include untrusted search path weaknesses (CWE-426) that cause the application to find and execute an attacker-controlled program. Further complicating the issue is the case when argument injection (CWE-88) allows alternate command-line switches or options to be inserted into the command line, such as an \"-exec\" switch whose purpose may be to execute the subsequent argument as a command (this -exec switch exists in the UNIX \"find\" command, for example). In this latter case, however, CWE-88 could be regarded as the primary weakness in a chain with CWE-78.\n\n**[Research Gap]** More investigation is needed into the distinction between the OS command injection variants, including the role with argument injection (CWE-88). Equivalent distinctions may exist in other injection-related problems such as SQL injection.\n\n\n\n### Observed Examples\n- **CVE-2020-10987:** OS command injection in Wi-Fi router, as exploited in the wild per CISA KEV.\n- **CVE-2020-10221:** Template functionality in network configuration management tool allows OS command injection, as exploited in the wild per CISA KEV.\n- **CVE-2020-9054:** Chain: improper input validation (CWE-20) in username parameter, leading to OS command injection (CWE-78), as exploited in the wild per CISA KEV.\n\n\n\n\n## CWE-121: Stack-based Buffer Overflow\n**Abstraction:** Variant\n**Status:** Draft\n\n### Description\nA stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nStack Overflow: \"Stack Overflow\" is often used to mean the same thing as stack-based buffer overflow, however it is also used on occasion to mean stack exhaustion, usually a result from an excessively recursive function call. Due to the ambiguity of the term, use of stack overflow to describe either circumstance is discouraged.\n\n### Relationships\nChildOf -> CWE-788\nChildOf -> CWE-787\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Other]** Stack-based buffer overflows can instantiate in return address overwrites, stack pointer overwrites or frame pointer overwrites. They can also be considered function pointer overwrites, array indexer overwrites or write-what-where condition, etc.\n\n\n\n### Observed Examples\n- **CVE-2021-35395:** Stack-based buffer overflows in SFK for wifi chipset used for IoT/embedded devices, as exploited in the wild per CISA KEV.\n\n\n\n\n## CWE-426: Untrusted Search Path\n**Abstraction:** Base\n**Status:** Stable\n\n### Description\nThe product searches for critical resources using an externally-supplied search path that can point to resources that are not under the product's direct control.\n\n### Extended Description\n\n\nThis might allow attackers to execute their own programs, access unauthorized data files, or modify configuration in unexpected ways. If the product uses a search path to locate critical resources such as programs, then an attacker could modify that search path to point to a malicious program, which the targeted product would then execute. The problem extends to any type of critical resource that the product trusts.\n\n\nSome of the most common variants of untrusted search path are:\n\n\n  - In various UNIX and Linux-based systems, the PATH environment variable may be consulted to locate executable programs, and LD_PRELOAD may be used to locate a separate library.\n\n  - In various Microsoft-based systems, the PATH environment variable is consulted to locate a DLL, if the DLL is not found in other paths that appear earlier in the search order.\n\n\n\n### Alternative Terms\nUntrusted Path\n\n### Relationships\nChildOf -> CWE-642\nChildOf -> CWE-668\nChildOf -> CWE-673\nPeerOf -> CWE-427\nPeerOf -> CWE-428\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-1999-1120:** Application relies on its PATH environment variable to find and execute program.\n- **CVE-2008-1810:** Database application relies on its PATH environment variable to find and execute program.\n- **CVE-2007-2027:** Chain: untrusted search path enabling resultant format string by loading malicious internationalization messages.\n\n\n\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n\n### Extended Description\nMost languages and protocols have their own special elements such as characters and reserved words. These special elements can carry control implications. If product does not prevent external control or influence over the inclusion of such special elements, the control flow of the program may be altered from what was intended. For example, both Unix and Windows interpret the symbol < (\"less than\") as meaning \"read input from a file\".\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-707\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n### Additional Notes\n**[Relationship]** This weakness can be related to interpretation conflicts or interaction errors in intermediaries (such as proxies or application firewalls) when the intermediary's model of an endpoint does not account for protocol-specific special elements.\n\n**[Relationship]** See this entry's children for different types of special elements that have been observed at one point or another. However, it can be difficult to find suitable CVE examples. In an attempt to be complete, CWE includes some types that do not have any associated observed example.\n\n**[Research Gap]** This weakness is probably under-studied for proprietary or custom formats. It is likely that these issues are fairly common in applications that use their own custom format for configuration files, logs, meta-data, messaging, etc. They would only be found by accident or with a focused effort based on an understanding of the format.\n\n\n\n### Observed Examples\n- **CVE-2001-0677:** Read arbitrary files from mail client by providing a special MIME header that is internally used to store pathnames for attachments.\n- **CVE-2000-0703:** Setuid program does not cleanse special escape sequence before sending data to a mail program, causing the mail program to process those sequences.\n- **CVE-2003-0020:** Multi-channel issue. Terminal escape sequences not filtered from log files.\n\n\n\n\n## CWE-790: Improper Filtering of Special Elements\n**Abstraction:** Class\n**Status:** Incomplete\n\n### Description\nThe product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-138\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n\n\n\n\n## CWE-98: Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')\n**Abstraction:** Variant\n**Status:** Draft\n\n### Description\nThe PHP application receives input from an upstream component, but it does not restrict or incorrectly restricts the input before its usage in \"require,\" \"include,\" or similar functions.\n\n### Extended Description\nIn certain versions and configurations of PHP, this can allow an attacker to specify a URL to a remote location from which the product will obtain the code to execute. In other cases in association with path traversal, the attacker can specify a local file that may contain executable statements that can be parsed by PHP.\n\n### Alternative Terms\nRemote file include\nRFI: The Remote File Inclusion (RFI) acronym is often used by vulnerability researchers.\nLocal file inclusion: This term is frequently used in cases in which remote download is disabled, or when the first part of the filename is not under the attacker's control, which forces use of relative path traversal (CWE-23) attack techniques to access files that may contain previously-injected PHP code, such as web access logs.\n\n### Relationships\nChildOf -> CWE-706\nChildOf -> CWE-829\nCanPrecede -> CWE-94\nCanAlsoBe -> CWE-426\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Relationship]** \n\nThis is frequently a functional consequence of other weaknesses. It is usually multi-factor with other factors (e.g. MAID), although not all inclusion bugs involve assumed-immutable data. Direct request weaknesses frequently play a role.\n\n\nCan overlap directory traversal in local inclusion problems.\n\n\n\n\n### Observed Examples\n- **CVE-2004-0285:** Modification of assumed-immutable configuration variable in include file allows file inclusion via direct request.\n- **CVE-2004-0030:** Modification of assumed-immutable configuration variable in include file allows file inclusion via direct request.\n- **CVE-2004-0068:** Modification of assumed-immutable configuration variable in include file allows file inclusion via direct request.\n\n\n\n\n## CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\n**Abstraction:** Base\n**Status:** Stable\n\n### Description\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nSQL injection: a common attack-oriented phrase\nSQLi: a common abbreviation for \"SQL injection\"\n\n### Relationships\nChildOf -> CWE-943\nChildOf -> CWE-74\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Relationship]** SQL injection can be resultant from special character mismanagement, MAID, or denylist/allowlist problems. It can be primary to authentication errors.\n\n\n\n### Observed Examples\n- **CVE-2023-32530:** SQL injection in security product dashboard using crafted certificate fields\n- **CVE-2021-42258:** SQL injection in time and billing software, as exploited in the wild per CISA KEV.\n- **CVE-2021-27101:** SQL injection in file-transfer system via a crafted Host header, as exploited in the wild per CISA KEV.\n\n\n\n\n## CWE-259: Use of Hard-coded Password\n**Abstraction:** Variant\n**Status:** Draft\n\n### Description\nThe product contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.\n\n### Extended Description\n\n\nA hard-coded password typically leads to a significant authentication failure that can be difficult for the system administrator to detect. Once detected, it can be difficult to fix, so the administrator may be forced into disabling the product entirely. There are two main variations:\n\n```\n\t\tInbound: the product contains an authentication mechanism that checks for a hard-coded password.\n\t\tOutbound: the product connects to another system or component, and it contains hard-coded password for connecting to that component.\n```\nIn the Inbound variant, a default administration account is created, and a simple password is hard-coded into the product and associated with that account. This hard-coded password is the same for each installation of the product, and it usually cannot be changed or disabled by system administrators without manually modifying the program, or otherwise patching the product. If the password is ever discovered or published (a common occurrence on the Internet), then anybody with knowledge of this password can access the product. Finally, since all installations of the product will have the same password, even across different organizations, this enables massive attacks such as worms to take place.\n\nThe Outbound variant applies to front-end systems that authenticate with a back-end service. The back-end service may require a fixed password which can be easily discovered. The programmer may simply hard-code those back-end credentials into the front-end product. Any user of that program may be able to extract the password. Client-side systems with hard-coded passwords pose even more of a threat, since the extraction of a password from a binary is usually very simple.\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-798\nChildOf -> CWE-798\nChildOf -> CWE-798\nPeerOf -> CWE-321\nPeerOf -> CWE-257\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Maintenance]** This entry could be split into multiple variants: an inbound variant (as seen in the second demonstrative example) and an outbound variant (as seen in the first demonstrative example). These variants are likely to have different consequences, detectability, etc. More importantly, from a vulnerability theory perspective, they could be characterized as different behaviors.\n\n\n\n### Observed Examples\n- **CVE-2022-29964:** Distributed Control System (DCS) has hard-coded passwords for local shell access\n- **CVE-2021-37555:** Telnet service for IoT feeder for dogs and cats has hard-coded password [REF-1288]\n- **CVE-2021-35033:** Firmware for a WiFi router uses a hard-coded password for a BusyBox shell, allowing bypass of authentication through the UART port\n\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n### Extended Description\n\n\nImproper encoding or escaping can allow attackers to change the commands that are sent to another component, inserting malicious commands instead.\n\n\nMost products follow a certain protocol that uses structured messages for communication between components, such as queries or commands. These structured messages can contain raw data interspersed with metadata or control information. For example, \"GET /index.html HTTP/1.1\" is a structured message containing a command (\"GET\") with a single argument (\"/index.html\") and metadata about which protocol version is being used (\"HTTP/1.1\").\n\n\nIf an application uses attacker-supplied inputs to construct a structured message without properly encoding or escaping, then the attacker could insert special characters that will cause the data to be interpreted as control information or metadata. Consequently, the component that receives the output will perform the wrong operations, or otherwise interpret the data incorrectly.\n\n\n### Alternative Terms\nOutput Sanitization\nOutput Validation\nOutput Encoding\n\n### Relationships\nChildOf -> CWE-707\nCanPrecede -> CWE-74\n\n### Mapping Guidance\n**Usage:** Allowed-with-Review\n**Rationale:** This CWE entry is a Class and might have Base-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n### Additional Notes\n**[Relationship]** This weakness is primary to all weaknesses related to injection (CWE-74) since the inherent nature of injection involves the violation of structured messages.\n\n**[Relationship]** \n\nCWE-116 and CWE-20 have a close association because, depending on the nature of the structured message, proper input validation can indirectly prevent special characters from changing the meaning of a structured message. For example, by validating that a numeric ID field should only contain the 0-9 characters, the programmer effectively prevents injection attacks.\n\n\nHowever, input validation is not always sufficient, especially when less stringent data types must be supported, such as free-form text. Consider a SQL injection scenario in which a last name is inserted into a query. The name \"O'Reilly\" would likely pass the validation step since it is a common last name in the English language. However, it cannot be directly inserted into the database because it contains the \"'\" apostrophe character, which would need to be escaped or otherwise neutralized. In this case, stripping the apostrophe might reduce the risk of SQL injection, but it would produce incorrect behavior because the wrong name would be recorded.\n\n\n**[Terminology]** The usage of the \"encoding\" and \"escaping\" terms varies widely. For example, in some programming languages, the terms are used interchangeably, while other languages provide APIs that use both terms for different tasks. This overlapping usage extends to the Web, such as the \"escape\" JavaScript function whose purpose is stated to be encoding. The concepts of encoding and escaping predate the Web by decades. Given such a context, it is difficult for CWE to adopt a consistent vocabulary that will not be misinterpreted by some constituency.\n\n**[Theoretical]** This is a data/directive boundary error in which data boundaries are not sufficiently enforced before it is sent to a different control sphere.\n\n**[Research Gap]** While many published vulnerabilities are related to insufficient output encoding, there is such an emphasis on input validation as a protection mechanism that the underlying causes are rarely described. Within CVE, the focus is primarily on well-understood issues like cross-site scripting and SQL injection. It is likely that this weakness frequently occurs in custom protocols that support multiple encodings, which are not necessarily detectable with automated techniques.\n\n\n\n### Observed Examples\n- **CVE-2021-41232:** Chain: authentication routine in Go-based agile development product does not escape user name (CWE-116), allowing LDAP injection (CWE-90)\n- **CVE-2008-4636:** OS command injection in backup software using shell metacharacters in a filename; correct behavior would require that this filename could not be changed.\n- **CVE-2008-0769:** Web application does not set the charset when sending a page to a browser, allowing for XSS exploitation when a browser chooses an unexpected encoding.\n\n",
    "dense_results": [
      {
        "metadata": {
          "doc_id": "78",
          "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
          "type": "Base",
          "original_content": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
          "keyphrase_source": "weakness:command injection",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse",
              "graph"
            ],
            "retriever_count": 3,
            "normalized_scores": {
              "dense": 0.6110023594431819,
              "sparse": 700.0,
              "graph": 1.7428713778815073
            }
          }
        },
        "similarity": 0.6110023594431819
      },
      {
        "metadata": {
          "doc_id": "77",
          "name": "Improper Neutralization of Special Elements used in a Command ('Command Injection')",
          "type": "Class",
          "original_content": "The product constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component.",
          "keyphrase_source": "weakness:command injection",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed-with-Review",
            "rationale": "CWE-77 is often misused when OS command injection (CWE-78) was intended instead [REF-1287].",
            "comments": "Ensure that the analysis focuses on the root-cause error that allows the execution of commands, as there are many weaknesses that can lead to this consequence. See Terminology Notes. If the weakness involves a command language besides OS shell invocation, then CWE-77 could be used.",
            "reasons": [
              "Frequent Misuse"
            ],
            "suggestions": [
              {
                "CweID": "78",
                "Comment": "OS Command Injection"
              }
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "dense": 0.5919752449753382,
              "sparse": 1000.0
            }
          }
        },
        "similarity": 0.5919752449753382
      },
      {
        "metadata": {
          "doc_id": "121",
          "name": "Stack-based Buffer Overflow",
          "type": "Variant",
          "original_content": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
          "keyphrase_source": "weakness:command injection",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "dense": 0.5552101544549111,
              "sparse": 109.23438345945085
            }
          }
        },
        "similarity": 0.5552101544549111
      },
      {
        "metadata": {
          "doc_id": "790",
          "name": "Improper Filtering of Special Elements",
          "type": "Class",
          "original_content": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
          "keyphrase_source": "weakness:command injection",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed-with-Review",
            "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
            "comments": "Examine children of this entry to see if there is a better fit",
            "reasons": [
              "Abstraction"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "dense": 0.5421319818299566,
              "sparse": 85.21118989842024
            }
          }
        },
        "similarity": 0.5421319818299566
      },
      {
        "metadata": {
          "doc_id": "259",
          "name": "Use of Hard-coded Password",
          "type": "Variant",
          "original_content": "The product contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.",
          "keyphrase_source": "weakness:command injection",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "dense": 0.5416348097537143,
              "sparse": 87.74115526296906
            }
          }
        },
        "similarity": 0.5416348097537143
      },
      {
        "metadata": {
          "doc_id": "912",
          "name": "Hidden Functionality",
          "type": "Class",
          "original_content": "The product contains functionality that is not documented, not part of the specification, and not accessible through an interface or command sequence that is obvious to the product's users or administrators.",
          "keyphrase_source": "weakness:command injection",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed-with-Review",
            "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
            "comments": "Examine children of this entry to see if there is a better fit",
            "reasons": [
              "Abstraction"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.533127624833597
            }
          }
        },
        "similarity": 0.533127624833597
      },
      {
        "metadata": {
          "doc_id": "306",
          "name": "Missing Authentication for Critical Function",
          "type": "Base",
          "original_content": "The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.",
          "keyphrase_source": "weakness:command injection",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.511780591620396
            }
          }
        },
        "similarity": 0.511780591620396
      },
      {
        "metadata": {
          "doc_id": "1188",
          "name": "Initialization of a Resource with an Insecure Default",
          "type": "Base",
          "original_content": "The product initializes or sets a resource with a default that is intended to be changed by the administrator, but the default is not secure.",
          "keyphrase_source": "weakness:command injection",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "dense": 0.5102088704911982,
              "sparse": 26.02621927023227
            }
          }
        },
        "similarity": 0.5102088704911982
      },
      {
        "metadata": {
          "doc_id": "134",
          "name": "Use of Externally-Controlled Format String",
          "type": "Base",
          "original_content": "The product uses a function that accepts a format string as an argument, but the format string originates from an external source.",
          "keyphrase_source": "weakness:command injection",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.508809193864759
            }
          }
        },
        "similarity": 0.508809193864759
      },
      {
        "metadata": {
          "doc_id": "288",
          "name": "Authentication Bypass Using an Alternate Path or Channel",
          "type": "Base",
          "original_content": "The product requires authentication, but the product has an alternate path or channel that does not require authentication.",
          "keyphrase_source": "weakness:command injection",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.5073632765334025
            }
          }
        },
        "similarity": 0.5073632765334025
      },
      {
        "metadata": {
          "doc_id": "94",
          "name": "Improper Control of Generation of Code ('Code Injection')",
          "type": "Base",
          "original_content": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed-with-Review",
            "rationale": "This entry is frequently misused for vulnerabilities with a technical impact of \"code execution,\" which does not by itself indicate a root cause weakness, since dozens of weaknesses can enable code execution.",
            "comments": "This weakness only applies when the product's functionality intentionally constructs all or part of a code segment. It could be that executing code could be the result of other weaknesses that do not involve the construction of code segments.",
            "reasons": [
              "Frequent Misuse",
              "Frequent Misinterpretation"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "graph"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "dense": 0.5022731050833147,
              "graph": 1.186631703183716
            }
          }
        },
        "similarity": 0.5022731050833147
      },
      {
        "metadata": {
          "doc_id": "20",
          "name": "Improper Input Validation",
          "type": "Class",
          "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Discouraged",
            "rationale": "CWE-20 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available [REF-1287]. It is not useful for trend analysis. It is also a level-1 Class (i.e., a child of a Pillar).",
            "comments": "Consider lower-level children such as Improper Use of Validation Framework (CWE-1173) or improper validation involving specific types or properties of input such as Specified Quantity (CWE-1284); Specified Index, Position, or Offset (CWE-1285); Syntactic Correctness (CWE-1286); Specified Type (CWE-1287); Consistency within Input (CWE-1288); or Unsafe Equivalence (CWE-1289).",
            "reasons": [
              "Frequent Misuse"
            ],
            "suggestions": [
              {
                "CweID": "1284",
                "Comment": "Specified Quantity"
              },
              {
                "CweID": "1285",
                "Comment": "Specified Index, Position, or Offset"
              },
              {
                "CweID": "1286",
                "Comment": "Syntactic Correctness"
              },
              {
                "CweID": "1287",
                "Comment": "Specified Type"
              },
              {
                "CweID": "1288",
                "Comment": "Consistency within Input"
              },
              {
                "CweID": "1289",
                "Comment": "Unsafe Equivalence"
              },
              {
                "CweID": "116",
                "Comment": "Improper Encoding or Escaping of Output"
              }
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.4868820517493534
            }
          }
        },
        "similarity": 0.4868820517493534
      },
      {
        "metadata": {
          "doc_id": "401",
          "name": "Missing Release of Memory after Effective Lifetime",
          "type": "Variant",
          "original_content": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "dense": 0.4839039932245426,
              "sparse": 25.34208451259859
            }
          }
        },
        "similarity": 0.4839039932245426
      },
      {
        "metadata": {
          "doc_id": "425",
          "name": "Direct Request ('Forced Browsing')",
          "type": "Base",
          "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.4828631702038313
            }
          }
        },
        "similarity": 0.4828631702038313
      },
      {
        "metadata": {
          "doc_id": "321",
          "name": "Use of Hard-coded Cryptographic Key",
          "type": "Variant",
          "original_content": "The use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "graph"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "dense": 0.4807996292781689,
              "graph": 1.5276001298578379
            }
          }
        },
        "similarity": 0.4807996292781689
      },
      {
        "metadata": {
          "doc_id": "93",
          "name": "Improper Neutralization of CRLF Sequences ('CRLF Injection')",
          "type": "Base",
          "original_content": "The product uses CRLF (carriage return line feeds) as a special element, e.g. to separate lines or records, but it does not neutralize or incorrectly neutralizes CRLF sequences from inputs.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.47708765875651704
            }
          }
        },
        "similarity": 0.47708765875651704
      },
      {
        "metadata": {
          "doc_id": "601",
          "name": "URL Redirection to Untrusted Site ('Open Redirect')",
          "type": "Base",
          "original_content": "The web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a redirect.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.47546222778872377
            }
          }
        },
        "similarity": 0.47546222778872377
      },
      {
        "metadata": {
          "doc_id": "400",
          "name": "Uncontrolled Resource Consumption",
          "type": "Class",
          "original_content": "The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Discouraged",
            "rationale": "CWE-400 is intended for incorrect behaviors in which the product is expected to track and restrict how many resources it consumes, but CWE-400 is often misused because it is conflated with the \"technical impact\" of vulnerabilities in which resource consumption occurs. It is sometimes used for low-information vulnerability reports. It is a level-1 Class (i.e., a child of a Pillar).",
            "comments": "Closely analyze the specific mistake that is causing resource consumption, and perform a CWE mapping for that mistake. Consider children/descendants such as CWE-770: Allocation of Resources Without Limits or Throttling, CWE-771: Missing Reference to Active Allocated Resource, CWE-410: Insufficient Resource Pool, CWE-772: Missing Release of Resource after Effective Lifetime, CWE-834: Excessive Iteration, CWE-405: Asymmetric Resource Consumption (Amplification), and others.",
            "reasons": [
              "Frequent Misuse"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.47374860592759593
            }
          }
        },
        "similarity": 0.47374860592759593
      },
      {
        "metadata": {
          "doc_id": "22",
          "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
          "type": "Base",
          "original_content": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.4729037946031221
            }
          }
        },
        "similarity": 0.4729037946031221
      },
      {
        "metadata": {
          "doc_id": "291",
          "name": "Reliance on IP Address for Authentication",
          "type": "Variant",
          "original_content": "The product uses an IP address for authentication.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.4712697584344623
            }
          }
        },
        "similarity": 0.4712697584344623
      }
    ],
    "sparse_results": [
      {
        "cwe_id": "77",
        "name": "Improper Neutralization of Special Elements used in a Command ('Command Injection')",
        "description": "The product constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component.",
        "score": 1000.0,
        "matched_text": "AlternateTerms: Command injection",
        "matched_phrase": "command injection",
        "matched_term": "command injection",
        "type": "Class",
        "source": "sparse",
        "search_source": "alternate_term_match",
        "match_reason": "exact_match_whole_phrase",
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed-with-Review",
            "rationale": "CWE-77 is often misused when OS command injection (CWE-78) was intended instead [REF-1287].",
            "comments": "Ensure that the analysis focuses on the root-cause error that allows the execution of commands, as there are many weaknesses that can lead to this consequence. See Terminology Notes. If the weakness involves a command language besides OS shell invocation, then CWE-77 could be used.",
            "reasons": [
              "Frequent Misuse"
            ],
            "suggestions": [
              {
                "CweID": "78",
                "Comment": "OS Command Injection"
              }
            ]
          }
        }
      },
      {
        "cwe_id": "78",
        "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "description": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
        "score": 700.0,
        "matched_text": "AlternateTerms: OS Command Injection",
        "matched_phrase": "command injection",
        "matched_term": "os command injection",
        "type": "Base",
        "source": "sparse",
        "search_source": "alternate_term_match",
        "match_reason": "phrase_in_term_whole_phrase",
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          }
        }
      },
      {
        "cwe_id": "121",
        "name": "Stack-based Buffer Overflow",
        "description": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
        "score": 109.23438345945085,
        "matched_text": "CWE-121: Stack-based Buffer Overflow\n\nType: Variant\n\nStatus: Draft\n\nAlternative Terms:\n\nStack Overflow - \"Stack Overflow\" is often used to mean the same thing as stack-based buffer overflow, however it is also used on occasion to mean stack exhaustion, usually a result from an excessively recursive function call. Due to the ambiguity of the term, use of stack overflow to describe either circumstance is discouraged.\n\nStack Overflow - \"Stack Overflow\" is often used to mean the same thing as stack-based buffer overflow, however it is also used on occasion to mean stack exhaustion, usually a result from an excessively recursive function call. Due to the ambiguity of the term, use of stack overflow to describe either circumstance is discouraged.\n\nStack Overflow - \"Stack Overflow\" is often used to mean the same thing as stack-based buffer overflow, however it is also used on occasion to mean stack exhaustion, usually a result from an excessively recursive function call. Due to the ambiguity of the term, use of stack overflow to describe either circumstance is discouraged.\n\nDescription:\n\nA stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).\n\nReal-World Examples:\n\n- CVE-2021-35395: Stack-based buffer overflows in SFK for wifi chipset used for IoT/embedded devices, as exploited in the wild per CISA KEV.\n\nTop 25 CWE Examples:\n\n- CVE-2020-11267: Stack out-of-bounds write occurs while setting up a cipher device if the provided IV length exceeds the max limit value in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Voice & Music, Snapdragon Wearables, Snapdragon Wired Infrastructure and Networking\n\n- CVE-2020-11633: The Zscaler Client Connector for Windows prior to 2.1.2.74 had a stack based buffer overflow when connecting to misconfigured TLS servers. An adversary would potentially have been able to execute arbitrary code with system privileges.\n\n- CVE-2020-12893: Stack Buffer Overflow in AMD Graphics Driver for Windows 10 in Escape 0x15002a may lead to escalation of privilege or denial of service.\n\n- CVE-2020-12898: Stack Buffer Overflow in AMD Graphics Driver for Windows 10 may lead to escalation of privilege or denial of service.\n\n- CVE-2020-13598: FS: Buffer Overflow when enabling Long File Names in FAT_FS and calling fs_stat. Zephyr versions >= v1.14.2, >= v2.3.0 contain Stack-based Buffer Overflow (CWE-121). For more information, see https://github.com/zephyrproject-rtos/zephyr/security/advisories/GHSA-7fhv-rgxr-x56h\n\n- CVE-2020-15744: Stack-based Buffer Overflow vulnerability in the ONVIF server component of Victure PC420 smart camera allows an attacker to execute remote code on the target device. This issue affects: Victure PC420 firmware version 1.2.2 and prior versions.\n\n- CVE-2020-17541: Libjpeg-turbo all version have a stack-based buffer overflow in the \"transform\" component. A remote attacker can send a malformed jpeg file to the service and cause arbitrary code execution or denial of service of the target service.\n\n- CVE-2020-18734: A stack buffer overflow in /ddsi/q_bitset.h of Eclipse IOT Cyclone DDS Project v0.1.0 causes the DDS subscriber server to crash.\n\n- CVE-2020-18971: Stack-based Buffer Overflow in PoDoFo v0.9.6 allows attackers to cause a denial of service via the component 'src/base/PdfDictionary.cpp:65'.\n\n- CVE-2020-20746: A stack-based buffer overflow in the httpd server on Tenda AC9 V15.03.06.60_EN allows remote attackers to execute arbitrary code or cause a denial of service (DoS) via a crafted POST request to /goform/SetStaticRouteCfg.\n\n- CVE-2020-21050: Libsixel prior to v1.8.3 contains a stack buffer overflow in the function gif_process_raster at fromgif.c.\n\n- CVE-2020-21529: fig2dev 3.2.7b contains a stack buffer overflow in the bezier_spline function in genepic.c.\n\n- CVE-2020-21533: fig2dev 3.2.7b contains a stack buffer overflow in the read_textobject function in read.c.\n\n- CVE-2020-21601: libde265 v1.0.4 contains a stack buffer overflow in the put_qpel_fallback function, which can be exploited via a crafted a file.\n\n- CVE-2020-21675: A stack-based buffer overflow in the genptk_text component in genptk.c of fig2dev 3.2.7b allows attackers to cause a denial of service (DOS) via converting a xfig file into ptk format.\n\n- CVE-2020-21676: A stack-based buffer overflow in the genpstrx_text() component in genpstricks.c of fig2dev 3.2.7b allows attackers to cause a denial of service (DOS) via converting a xfig file into pstricks format.\n\n- CVE-2020-21680: A stack-based buffer overflow in the put_arrow() component in genpict2e.c of fig2dev 3.2.7b allows attackers to cause a denial of service (DOS) via converting a xfig file into pict2e format.\n\n- CVE-2020-22079: Stack-based buffer overflow in Tenda AC-10U AC1200 Router US_AC10UV1.0RTL_V15.03.06.48_multi_TDE01 allows remote attackers to execute arbitrary code via the timeZone parameter to goform/SetSysTimeCfg.\n\n- CVE-2020-22907: Stack overflow vulnerability in function jsi_evalcode_sub in jsish before 3.0.18, allows remote attackers to cause a Denial of Service via a crafted value to the execute parameter.\n\n- CVE-2020-23060: Internet Download Manager 6.37.11.1 was discovered to contain a stack buffer overflow in the Export/Import function. This vulnerability allows attackers to escalate local process privileges via a crafted ef2 file.\n\n- CVE-2020-23851: A stack-based buffer overflow vulnerability exists in ffjpeg through 2020-07-02 in the jfif_decode(void *ctxt, BMP *pb) function at ffjpeg/src/jfif.c:513:28, which could cause a denial of service by submitting a malicious jpeg image.\n\n- CVE-2020-23877: pdf2xml v2.0 was discovered to contain a stack buffer overflow in the component getObjectStream.\n\n- CVE-2020-23878: pdf2json v0.71 was discovered to contain a stack buffer overflow in the component XRef::fetch.\n\n- CVE-2020-23904: A stack buffer overflow in speexenc.c of Speex v1.2 allows attackers to cause a denial of service (DoS) via a crafted WAV file. NOTE: the vendor states \"I cannot reproduce it\" and it \"is a demo program.\n\n- CVE-2020-24870: Libraw before 0.20.1 has a stack buffer overflow via LibRaw::identify_process_dng_fields in identify.cpp.\n\n- CVE-2020-27301: A stack buffer overflow in Realtek RTL8710 (and other Ameba-based devices) can lead to remote code execution via the \"AES_UnWRAP\" function, when an attacker in Wi-Fi range sends a crafted \"Encrypted GTK\" value as part of the WPA2 4-way-handshake.\n\n- CVE-2020-27302: A stack buffer overflow in Realtek RTL8710 (and other Ameba-based devices) can lead to remote code execution via the \"memcpy\" function, when an attacker in Wi-Fi range sends a crafted \"Encrypted GTK\" value as part of the WPA2 4-way-handshake.\n\n- CVE-2020-28198: The 'id' parameter of IBM Tivoli Storage Manager Version 5 Release 2 (Command Line Administrative Interface, dsmadmc.exe) is vulnerable to an exploitable stack buffer overflow. Note: the vulnerability can be exploited when it is used in \"interactive\" mode while, cause of a max number characters limitation, it cannot be exploited in batch or command line usage (e.g. dsmadmc.exe -id=username -password=pwd). NOTE: This vulnerability only affects products that are no longer supported by the maintainer\n\n- CVE-2020-28964: Internet Download Manager 6.37.11.1 was discovered to contain a stack buffer overflow in the Search function. This vulnerability allows attackers to escalate local process privileges via unspecified vectors.\n\n- CVE-2020-35452: Apache HTTP Server versions 2.4.0 to 2.4.46 A specially crafted Digest nonce can cause a stack overflow in mod_auth_digest. There is no report of this overflow being exploitable, nor the Apache HTTP Server team could create one, though some particular compiler and/or compilation option might make it possible, with limited consequences anyway due to the size (a single byte) and the value (zero byte) of the overflow\n\n- CVE-2020-36129: AOM v2.0.1 was discovered to contain a stack buffer overflow via the component src/aom_image.c.\n\n- CVE-2020-36131: AOM v2.0.1 was discovered to contain a stack buffer overflow via the component stats/rate_hist.c.\n\n- CVE-2020-36406: uWebSockets 18.11.0 and 18.12.0 has a stack-based buffer overflow in uWS::TopicTree::trimTree (called from uWS::TopicTree::unsubscribeAll). NOTE: the vendor's position is that this is \"a minor issue or not even an issue at all\" because the developer of an application (that uses uWebSockets) should not be allowing the large number of triggered topics to accumulate\n\n- CVE-2021-0276: A stack-based Buffer Overflow vulnerability in Juniper Networks SBR Carrier with EAP (Extensible Authentication Protocol) authentication configured, allows an attacker sending specific packets causing the radius daemon to crash resulting with a Denial of Service (DoS) or leading to remote code execution (RCE). By continuously sending this specific packets, an attacker can repeatedly crash the radius daemon, causing a sustained Denial of Service (DoS). This issue affects Juniper Networks SBR Carrier: 8.4.1 versions prior to 8.4.1R19; 8.5.0 versions prior to 8.5.0R10; 8.6.0 versions prior to 8.6.0R4.\n\n- CVE-2021-0362: In aee, there is a possible memory corruption due to a stack buffer overflow. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Product: Android; Versions: Android-11; Patch ID: ALPS05457070.\n\n- CVE-2021-0657: In apusys, there is a possible out of bounds write due to a stack-based buffer overflow. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS05672103; Issue ID: ALPS05672103.\n\n- CVE-2021-1099: NVIDIA vGPU software contains a vulnerability in the Virtual GPU Manager (vGPU plugin) that could allow an attacker to cause stack-based buffer overflow and put a customized ROP gadget on the stack. Such an attack may lead to information disclosure, data tampering, or denial of service. This affects vGPU version 12.x (prior to 12.3), version 11.x (prior to 11.5) and version 8.x (prior 8.8).\n\n- CVE-2021-1967: Possible stack buffer overflow due to lack of check on the maximum number of post NAN discovery attributes while processing a NAN Match event in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Voice & Music, Snapdragon Wearables\n\n- CVE-2021-20236: A flaw was found in the ZeroMQ server in versions before 4.3.3. This flaw allows a malicious client to cause a stack buffer overflow on the server by sending crafted topic subscription requests and then unsubscribing. The highest threat from this vulnerability is to confidentiality, integrity, as well as system availability.\n\n- CVE-2021-20294: A flaw was found in binutils readelf 2.35 program. An attacker who is able to convince a victim using readelf to read a crafted file could trigger a stack buffer overflow, out-of-bounds write of arbitrary data supplied by the attacker. The highest impact of this flaw is to confidentiality, integrity, and availability.\n\n- CVE-2021-20314: Stack buffer overflow in libspf2 versions below 1.2.11 when processing certain SPF macros can lead to Denial of service and potentially code execution via malicious crafted SPF explanation messages.\n\n- CVE-2021-20349: IBM Tivoli Workload Scheduler 9.4 and 9.5 is vulnerable to a stack-based buffer overflow, caused by improper bounds checking. A local attacker could overflow a buffer and gain lower level privileges. IBM X-Force ID: 194599.\n\n- CVE-2021-20491: IBM Spectrum Protect Server 7.1 and 8.1 is subject to a stack-based buffer overflow caused by improper bounds checking during the parsing of commands. By issuing such a command with an improper parameter, an authorized administrator could overflow a buffer and cause the server to crash. IBM X-Force ID: 197792.\n\n- CVE-2021-20515: IBM Informix Dynamic Server 14.10 is vulnerable to a stack based buffer overflow, caused by improper bounds checking. A local privileged user could overflow a buffer and execute arbitrary code on the system or cause a denial of service condition. IBM X-Force ID: 198366.\n\n- CVE-2021-20546: IBM Spectrum Protect Client 8.1.0.0 through 8.1.11.0 is vulnerable to a stack-based buffer overflow, caused by improper bounds checking. A local attacker could overflow a buffer and cause the application to crash. IBM X-Force ID: 198934\n\n- CVE-2021-20572: IBM Security Identity Manager Adapters 6.0 and 7.0 are vulnerable to a stack-based buffer overflow, caused by improper bounds checking. A remote authenticated attacker could overflow the and cause the server to crash. IBM X-Force ID: 199247.\n\n- CVE-2021-21149: Stack buffer overflow in Data Transfer in Google Chrome on Linux prior to 88.0.4324.182 allowed a remote attacker to perform out of bounds memory access via a crafted HTML page.\n\n- CVE-2021-21153: Stack buffer overflow in GPU Process in Google Chrome on Linux prior to 88.0.4324.182 allowed a remote attacker to potentially perform out of bounds memory access via a crafted HTML page.\n\n- CVE-2021-21540: Dell EMC iDRAC9 versions prior to 4.40.00.00 contain a stack-based overflow vulnerability. A remote authenticated attacker could potentially exploit this vulnerability to overwrite configuration information by injecting arbitrarily large payload.\n\n- CVE-2021-21554: Dell PowerEdge R640, R740, R740XD, R840, R940, R940xa, MX740c, MX840c, and, Dell Precision 7920 Rack Workstation BIOS contain a stack-based buffer overflow vulnerability in systems with Intel Optane DC Persistent Memory installed. A local malicious user with high privileges may potentially exploit this vulnerability, leading to a denial of Service, arbitrary code execution, or information disclosure in UEFI or BIOS Preboot Environment.\n\n- CVE-2021-21556: Dell PowerEdge R640, R740, R740XD, R840, R940, R940xa, MX740c, MX840c, and T640 Server BIOS contain a stack-based buffer overflow vulnerability in systems with NVDIMM-N installed. A local malicious user with high privileges may potentially exploit this vulnerability, leading to a denial of Service, arbitrary code execution, or information disclosure in UEFI or BIOS Preboot Environment.\n\n- CVE-2021-21748: ZTE MF971R product has two stack-based buffer overflow vulnerabilities. An attacker could exploit the vulnerabilities to execute arbitrary code.\n\n- CVE-2021-21749: ZTE MF971R product has two stack-based buffer overflow vulnerabilities. An attacker could exploit the vulnerabilities to execute arbitrary code.\n\n- CVE-2021-21812: A stack-based buffer overflow vulnerability exists in the command-line-parsing HandleFileArg functionality of AT&T Labs\u2019 Xmill 0.7. Within the function HandleFileArg the argument filepattern is under control of the user who passes it in from the command line. filepattern is passed directly to strcpy copying the path provided by the user into a static sized buffer without any length checks resulting in a stack-buffer overflow. An attacker can provide malicious input to trigger these vulnerabilities.\n\n- CVE-2021-21815: A stack-based buffer overflow vulnerability exists in the command-line-parsing HandleFileArg functionality of AT&T Labs' Xmill 0.7. Within the function HandleFileArg the argument filepattern is under control of the user who passes it in from the command line. filepattern is passed directly to strcpy copying the path provided by the user into a staticly sized buffer without any length checks resulting in a stack-buffer overflow. An attacker can provide malicious input to trigger this vulnerability.\n\n- CVE-2021-21821: A stack-based buffer overflow vulnerability exists in the PDF process_fontname functionality of Accusoft ImageGear 19.9. A specially crafted malformed file can lead to code execution. An attacker can provide a malicious file to trigger this vulnerability.\n\n- CVE-2021-22130: A stack-based buffer overflow vulnerability in FortiProxy physical appliance CLI 2.0.0 to 2.0.1, 1.2.0 to 1.2.9, 1.1.0 to 1.1.6, 1.0.0 to 1.0.7 may allow an authenticated, remote attacker to perform a Denial of Service attack by running the `diagnose sys cpuset` with a large cpuset mask value. Fortinet is not aware of any successful exploitation of this vulnerability that would lead to code execution.\n\n- CVE-2021-22637: Multiple stack-based buffer overflow issues have been identified in the way the application processes project files, allowing an attacker to craft a special project file that may allow arbitrary code execution on the Tellus Lite V-Simulator and V-Server Lite (versions prior to 4.0.10.0).\n\n- CVE-2021-22666: Fatek FvDesigner Version 1.5.76 and prior is vulnerable to a stack-based buffer overflow while project files are being processed, allowing an attacker to craft a special project file that may permit arbitrary code execution.\n\n- CVE-2021-22673: The affected product is vulnerable to stack-based buffer overflow while processing over-the-air firmware updates from the CDN server, which may allow an attacker to remotely execute code on the SimpleLink Wi-Fi (MSP432E4 SDK: v4.20.00.12 and prior, CC32XX SDK v4.30.00.06 and prior, CC13X0 SDK versions prior to v4.10.03, CC13X2 and CC26XX SDK versions prior to v4.40.00, CC3200 SDK v1.5.0 and prior, CC3100 SDK v1.3.0 and prior).\n\n- CVE-2021-25139: A potential security vulnerability has been identified in the HPE Moonshot Provisioning Manager v1.20. The HPE Moonshot Provisioning Manager is an application that is installed in a VMWare or Microsoft Hyper-V environment that is used to setup and configure an HPE Moonshot 1500 chassis. This vulnerability could be remotely exploited by an unauthenticated user to cause a stack based buffer overflow using user supplied input to the `khuploadfile.cgi` CGI ELF. The stack based buffer overflow could lead to Remote Code Execution, Denial of Service, and/or compromise system integrity. **Note:** HPE recommends that customers discontinue the use of the HPE Moonshot Provisioning Manager. The HPE Moonshot Provisioning Manager application is discontinued, no longer supported, is not available to download from the HPE Support Center, and no patch is available.\n\n- CVE-2021-25178: An issue was discovered in Open Design Alliance Drawings SDK before 2021.11. A stack-based buffer overflow vulnerability exists when the recover operation is run with malformed .DXF and .DWG files. This can allow attackers to cause a crash potentially enabling a denial of service attack (Crash, Exit, or Restart) or possible code execution.\n\n- CVE-2021-25461: An improper length check in APAService prior to SMR Sep-2021 Release 1 results in stack based Buffer Overflow.\n\n- CVE-2021-25469: A possible stack-based buffer overflow vulnerability in Widevine trustlet prior to SMR Oct-2021 Release 1 allows arbitrary code execution.\n\n- CVE-2021-25478: A possible stack-based buffer overflow vulnerability in Exynos CP Chipset prior to SMR Oct-2021 Release 1 allows arbitrary memory write and code execution.\n\n- CVE-2021-26236: FastStone Image Viewer v.<= 7.5 is affected by a Stack-based Buffer Overflow at 0x005BDF49, affecting the CUR file parsing functionality (BITMAPINFOHEADER Structure, 'BitCount' file format field), that will end up corrupting the Structure Exception Handler (SEH). Attackers could exploit this issue to achieve code execution when a user opens or views a malformed/specially crafted CUR file.\n\n- CVE-2021-26561: Stack-based buffer overflow vulnerability in synoagentregisterd in Synology DiskStation Manager (DSM) before 6.2.3-25426-3 allows man-in-the-middle attackers to execute arbitrary code via syno_finder_site HTTP header.\n\n- CVE-2021-26675: A stack-based buffer overflow in dnsproxy in ConnMan before 1.39 could be used by network adjacent attackers to execute code.\n\n- CVE-2021-26709: D-Link DSL-320B-D1 devices through EU_1.25 are prone to multiple Stack-Based Buffer Overflows that allow unauthenticated remote attackers to take over a device via the login.xgi user and pass parameters. NOTE: This vulnerability only affects products that are no longer supported by the maintainer\n\n- CVE-2021-26713: A stack-based buffer overflow in res_rtp_asterisk.c in Sangoma Asterisk before 16.16.1, 17.x before 17.9.2, and 18.x before 18.2.1 and Certified Asterisk before 16.8-cert6 allows an authenticated WebRTC client to cause an Asterisk crash by sending multiple hold/unhold requests in quick succession. This is caused by a signedness comparison mismatch.\n\n- CVE-2021-26826: A stack overflow issue exists in Godot Engine up to v3.2 and is caused by improper boundary checks when loading .TGA image files. Depending on the context of the application, attack vector can be local or remote, and can lead to code execution and/or system crash.\n\n- CVE-2021-27114: An issue was discovered in D-Link DIR-816 A2 1.10 B05 devices. Within the handler function of the /goform/addassignment route, a very long text entry for the\"'s_ip\" and \"s_mac\" fields could lead to a Stack-Based Buffer Overflow and overwrite the return address.\n\n- CVE-2021-27232: The RTSPLive555.dll ActiveX control in Pelco Digital Sentry Server 7.18.72.11464 has a SetCameraConnectionParameter stack-based buffer overflow. This can be exploited by a remote attacker to potentially execute arbitrary attacker-supplied code. The victim would have to visit a malicious webpage using Internet Explorer where the exploit could be triggered.\n\n- CVE-2021-27413: Omron CX-One Versions 4.60 and prior, including CX-Server Versions 5.0.29.0 and prior, are vulnerable to a stack-based buffer overflow, which may allow an attacker to execute arbitrary code.\n\n- CVE-2021-27790: The command ipfilter in Brocade Fabric OS before Brocade Fabric OS v.9.0.1a, v8.2.3, and v8.2.0_CBN4, and v7.4.2h uses unsafe string function to process user input. Authenticated attackers can abuse this vulnerability to exploit stack-based buffer overflows, allowing execution of arbitrary code as the root user account.\n\n- CVE-2021-27799: ean_leading_zeroes in backend/upcean.c in Zint Barcode Generator 2.9.1 has a stack-based buffer overflow that is reachable from the C API through an application that includes the Zint Barcode Generator library code.\n\n- CVE-2021-28606: Adobe After Effects version 18.2 (and earlier) is affected by a Stack-based Buffer Overflow vulnerability when parsing a specially crafted file. An unauthenticated attacker could leverage this vulnerability to achieve arbitrary code execution in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file.\n\n- CVE-2021-28686: AsIO2_64.sys and AsIO2_32.sys in ASUS GPUTweak II before 2.3.0.3 allow low-privileged users to trigger a stack-based buffer overflow. This could enable low-privileged users to achieve Denial of Service via a DeviceIoControl.\n\n- CVE-2021-28797: A stack-based buffer overflow vulnerability has been reported to affect QNAP NAS devices running Surveillance Station. If exploited, this vulnerability allows attackers to execute arbitrary code. QNAP have already fixed this vulnerability in the following versions: Surveillance Station 5.1.5.4.3 (and later) for ARM CPU NAS (64bit OS) and x86 CPU NAS (64bit OS) Surveillance Station 5.1.5.3.3 (and later) for ARM CPU NAS (32bit OS) and x86 CPU NAS (32bit OS)\n\n- CVE-2021-28816: A stack buffer overflow vulnerability has been reported to affect QNAP device running QTS, QuTScloud, QuTS hero. If exploited, this vulnerability allows attackers to execute arbitrary code. We have already fixed this vulnerability in the following versions of QTS, QuTScloud, QuTS hero: QTS 4.5.4.1715 build 20210630 and later QTS 5.0.0.1716 build 20210701 and later QTS 4.3.3.1693 build 20210624 and later QTS 4.3.6.1750 build 20210730 and later QuTScloud c4.5.6.1755 and later QuTS hero h4.5.4.1771 build 20210825 and later\n\n- CVE-2021-29073: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects R8000P before 1.4.1.66, MK62 before 1.0.6.110, MR60 before 1.0.6.110, MS60 before 1.0.6.110, R7960P before 1.4.1.66, R7900P before 1.4.1.66, RAX15 before 1.0.2.82, RAX20 before 1.0.2.82, RAX45 before 1.0.2.72, RAX50 before 1.0.2.72, RAX75 before 1.0.3.106, RAX80 before 1.0.3.106, and RAX200 before 1.0.3.106.\n\n- CVE-2021-29074: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects RBW30 before 2.6.2.2, RBK852 before 3.2.17.12, RBK853 before 3.2.17.12, RBK854 before 3.2.17.12, RBR850 before 3.2.17.12, RBS850 before 3.2.17.12, RBK752 before 3.2.17.12, RBK753 before 3.2.17.12, RBK753S before 3.2.17.12, RBK754 before 3.2.17.12, RBR750 before 3.2.17.12, and RBS750 before 3.2.17.12.\n\n- CVE-2021-29075: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects RBW30 before 2.6.2.2, RBK852 before 3.2.17.12, RBK852 before 3.2.17.12, RBK852 before 3.2.17.12, RBR850 before 3.2.17.12, RBS850 before 3.2.17.12, RBK752 before 3.2.17.12, RBK753 before 3.2.17.12, RBK753S before 3.2.17.12, RBK754 before 3.2.17.12, RBR750 before 3.2.17.12, and RBS750 before 3.2.17.12.\n\n- CVE-2021-29081: Certain NETGEAR devices are affected by a stack-based buffer overflow by an unauthenticated attacker. This affects RBW30 before 2.6.2.2, RBK852 before 3.2.17.12, RBK853 before 3.2.17.12, RBK854 before 3.2.17.12, RBR850 before 3.2.17.12, RBS850 before 3.2.17.12, RBK752 before 3.2.17.12, RBK753 before 3.2.17.12, RBK753S before 3.2.17.12, RBK754 before 3.2.17.12, RBR750 before 3.2.17.12, and RBS750 before 3.2.17.12.\n\n- CVE-2021-29665: IBM Security Verify Access 20.07 is vulnerable to a stack based buffer overflow, caused by improper bounds checking which could allow a local attacker to execute arbitrary code on the system with elevated privileges.\n\n- CVE-2021-29672: IBM Spectrum Protect Client 8.1.0.0-8 through 1.11.0 is vulnerable to a stack-based buffer overflow, caused by improper bounds checking when processing the current locale settings. A local attacker could overflow a buffer and execute arbitrary code on the system with elevated privileges or cause the application to crash. IBM X-Force ID: 199479\n\n- CVE-2021-29999: An issue was discovered in Wind River VxWorks through 6.8. There is a possible stack overflow in dhcp server.\n\n- CVE-2021-30072: An issue was discovered in prog.cgi on D-Link DIR-878 1.30B08 devices. Because strcat is misused, there is a stack-based buffer overflow that does not require authentication.\n\n- CVE-2021-30188: CODESYS V2 runtime system SP before 2.4.7.55 has a Stack-based Buffer Overflow.\n\n- CVE-2021-30189: CODESYS V2 Web-Server before 1.1.9.20 has a Stack-based Buffer Overflow.\n\n- CVE-2021-30566: Stack buffer overflow in Printing in Google Chrome prior to 92.0.4515.107 allowed a remote attacker who had compromised the renderer process to potentially exploit stack corruption via a crafted HTML page.\n\n- CVE-2021-3057: A stack-based buffer overflow vulnerability exists in the Palo Alto Networks GlobalProtect app that enables a man-in-the-middle attacker to disrupt system processes and potentially execute arbitrary code with SYSTEM privileges. This issue impacts: GlobalProtect app 5.1 versions earlier than GlobalProtect app 5.1.9 on Windows; GlobalProtect app 5.2 versions earlier than GlobalProtect app 5.2.8 on Windows; GlobalProtect app 5.2 versions earlier than GlobalProtect app 5.2.8 on the Universal Windows Platform; GlobalProtect app 5.3 versions earlier than GlobalProtect app 5.3.1 on Linux.\n\n- CVE-2021-30628: Stack buffer overflow in ANGLE in Google Chrome prior to 93.0.4577.82 allowed a remote attacker to potentially exploit stack corruption via a crafted HTML page.\n\n- CVE-2021-31315: Telegram Android <7.1.0 (2090), Telegram iOS <7.1, and Telegram macOS <7.1 are affected by a Stack Based Overflow in the blit function of their custom fork of the rlottie library. A remote attacker might be able to access Telegram's stack memory out-of-bounds on a victim device via a malicious animated sticker.\n\n- CVE-2021-31321: Telegram Android <7.1.0 (2090), Telegram iOS <7.1, and Telegram macOS <7.1 are affected by a Stack Based Overflow in the gray_split_cubic function of their custom fork of the rlottie library. A remote attacker might be able to overwrite Telegram's stack memory out-of-bounds on a victim device via a malicious animated sticker.\n\n- CVE-2021-31383: In Point to MultiPoint (P2MP) scenarios within established sessions between network or adjacent neighbors the improper use of a source to destination copy write operation combined with a Stack-based Buffer Overflow on certain specific packets processed by the routing protocol daemon (RPD) of Juniper Networks Junos OS and Junos OS Evolved sent by a remote unauthenticated network attacker causes the RPD to crash causing a Denial of Service (DoS). Continued receipt and processing of these packets will create a sustained Denial of Service (DoS) condition. This issue affects: Juniper Networks Junos OS 19.2 versions prior to 19.2R3-S2; 19.3 versions prior to 19.3R2-S6, 19.3R3-S2; 19.4 versions prior to 19.4R1-S4, 19.4R2-S4, 19.4R3-S3; 20.1 versions prior to 20.1R2-S2, 20.1R3; 20.2 versions prior to 20.2R2-S3, 20.2R3; 20.3 versions prior to 20.3R2. This issue does not affect Juniper Networks Junos OS versions prior to 19.2R1. Juniper Networks Junos OS Evolved 20.1 versions prior to 20.1R3-EVO; 20.2 versions prior to 20.2R3-EVO; 20.3 versions prior to 20.3R2-EVO.\n\n- CVE-2021-31616: Insufficient length checks in the ShapeShift KeepKey hardware wallet firmware before 7.1.0 allow a stack buffer overflow via crafted messages. The overflow in ethereum_extractThorchainSwapData() in ethereum.c can circumvent stack protections and lead to code execution. The vulnerable interface is reachable remotely over WebUSB.\n\n- CVE-2021-31755: An issue was discovered on Tenda AC11 devices with firmware through 02.03.01.104_CN. A stack buffer overflow vulnerability in /goform/setmac allows attackers to execute arbitrary code on the system via a crafted post request.\n\n- CVE-2021-31756: An issue was discovered on Tenda AC11 devices with firmware through 02.03.01.104_CN. A stack buffer overflow vulnerability in /gofrom/setwanType allows attackers to execute arbitrary code on the system via a crafted post request. This occurs when input vector controlled by malicious attack get copied to the stack variable.\n\n- CVE-2021-31757: An issue was discovered on Tenda AC11 devices with firmware through 02.03.01.104_CN. A stack buffer overflow vulnerability in /goform/setVLAN allows attackers to execute arbitrary code on the system via a crafted post request.\n\n- CVE-2021-31758: An issue was discovered on Tenda AC11 devices with firmware through 02.03.01.104_CN. A stack buffer overflow vulnerability in /goform/setportList allows attackers to execute arbitrary code on the system via a crafted post request.\n\n- CVE-2021-3185: A flaw was found in the gstreamer h264 component of gst-plugins-bad before v1.18.1 where when parsing a h264 header, an attacker could cause the stack to be smashed, memory corruption and possibly code execution.\n\n- CVE-2021-31886: A vulnerability has been identified in APOGEE MBC (PPC) (BACnet) (All versions), APOGEE MBC (PPC) (P2 Ethernet) (All versions), APOGEE MEC (PPC) (BACnet) (All versions), APOGEE MEC (PPC) (P2 Ethernet) (All versions), APOGEE PXC Compact (BACnet) (All versions < V3.5.4), APOGEE PXC Compact (P2 Ethernet) (All versions < V2.8.19), APOGEE PXC Modular (BACnet) (All versions < V3.5.4), APOGEE PXC Modular (P2 Ethernet) (All versions < V2.8.19), Desigo PXC00-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC00-U (All versions >= V2.3 and < V6.30.016), Desigo PXC001-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC100-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC12-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC128-U (All versions >= V2.3 and < V6.30.016), Desigo PXC200-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC22-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC22.1-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC36.1-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC50-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC64-U (All versions >= V2.3 and < V6.30.016), Desigo PXM20-E (All versions >= V2.3 and < V6.30.016), Nucleus NET (All versions), Nucleus ReadyStart V3 (All versions < V2017.02.4), Nucleus Source Code (All versions), TALON TC Compact (BACnet) (All versions < V3.5.4), TALON TC Modular (BACnet) (All versions < V3.5.4). FTP server does not properly validate the length of the \u201cUSER\u201d command, leading to stack-based buffer overflows. This may result in Denial-of-Service conditions and Remote Code Execution. (FSMD-2021-0010)\n\n- CVE-2021-31887: A vulnerability has been identified in APOGEE MBC (PPC) (BACnet) (All versions), APOGEE MBC (PPC) (P2 Ethernet) (All versions), APOGEE MEC (PPC) (BACnet) (All versions), APOGEE MEC (PPC) (P2 Ethernet) (All versions), APOGEE PXC Compact (BACnet) (All versions < V3.5.4), APOGEE PXC Compact (P2 Ethernet) (All versions < V2.8.19), APOGEE PXC Modular (BACnet) (All versions < V3.5.4), APOGEE PXC Modular (P2 Ethernet) (All versions < V2.8.19), Desigo PXC00-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC00-U (All versions >= V2.3 and < V6.30.016), Desigo PXC001-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC100-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC12-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC128-U (All versions >= V2.3 and < V6.30.016), Desigo PXC200-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC22-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC22.1-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC36.1-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC50-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC64-U (All versions >= V2.3 and < V6.30.016), Desigo PXM20-E (All versions >= V2.3 and < V6.30.016), Nucleus NET (All versions), Nucleus ReadyStart V3 (All versions < V2017.02.4), Nucleus Source Code (All versions), TALON TC Compact (BACnet) (All versions < V3.5.4), TALON TC Modular (BACnet) (All versions < V3.5.4). FTP server does not properly validate the length of the \u201cPWD/XPWD\u201d command, leading to stack-based buffer overflows. This may result in Denial-of-Service conditions and Remote Code Execution. (FSMD-2021-0016)\n\n- CVE-2021-31888: A vulnerability has been identified in APOGEE MBC (PPC) (BACnet) (All versions), APOGEE MBC (PPC) (P2 Ethernet) (All versions), APOGEE MEC (PPC) (BACnet) (All versions), APOGEE MEC (PPC) (P2 Ethernet) (All versions), APOGEE PXC Compact (BACnet) (All versions < V3.5.4), APOGEE PXC Compact (P2 Ethernet) (All versions < V2.8.19), APOGEE PXC Modular (BACnet) (All versions < V3.5.4), APOGEE PXC Modular (P2 Ethernet) (All versions < V2.8.19), Desigo PXC00-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC00-U (All versions >= V2.3 and < V6.30.016), Desigo PXC001-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC100-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC12-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC128-U (All versions >= V2.3 and < V6.30.016), Desigo PXC200-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC22-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC22.1-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC36.1-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC50-E.D (All versions >= V2.3 and < V6.30.016), Desigo PXC64-U (All versions >= V2.3 and < V6.30.016), Desigo PXM20-E (All versions >= V2.3 and < V6.30.016), Nucleus NET (All versions), Nucleus ReadyStart V3 (All versions < V2017.02.4), Nucleus Source Code (All versions), TALON TC Compact (BACnet) (All versions < V3.5.4), TALON TC Modular (BACnet) (All versions < V3.5.4). FTP server does not properly validate the length of the \u201cMKD/XMKD\u201d command, leading to stack-based buffer overflows. This may result in Denial-of-Service conditions and Remote Code Execution. (FSMD-2021-0018)\n\n- CVE-2021-32238: Epic Games / Psyonix Rocket League <=1.95 is affected by Buffer Overflow. Stack-based buffer overflow occurs when Rocket League handles UPK object files that can result in code execution and denial of service scenario.\n\n- CVE-2021-32457: Trend Micro Home Network Security version 6.6.604 and earlier is vulnerable to an iotcl stack-based buffer overflow vulnerability which could allow an attacker to issue a specially crafted iotcl to escalate privileges on affected devices. An attacker must first obtain the ability to execute low-privileged code on the target device in order to exploit this vulnerability.\n\n- CVE-2021-32458: Trend Micro Home Network Security version 6.6.604 and earlier is vulnerable to an iotcl stack-based buffer overflow vulnerability which could allow an attacker to issue a specially crafted iotcl which could lead to code execution on affected devices. An attacker must first obtain the ability to execute low-privileged code on the target device in order to exploit this vulnerability.\n\n- CVE-2021-32943: The affected product is vulnerable to a stack-based buffer overflow, which may allow an attacker to remotely execute arbitrary code on the WebAccess/SCADA (WebAccess/SCADA versions prior to 8.4.5, WebAccess/SCADA versions prior to 9.0.1).\n\n- CVE-2021-33186: SerenityOS in test-crypto.cpp contains a stack buffer overflow which could allow attackers to obtain sensitive information.\n\n- CVE-2021-33265: D-Link DIR-809 devices with firmware through DIR-809Ax_FW1.12WWB03_20190410 were discovered to contain a stack buffer overflow vulnerability in the function FUN_80046eb4 in /formSetPortTr. This vulnerability is triggered via a crafted POST request.\n\n- CVE-2021-33266: D-Link DIR-809 devices with firmware through DIR-809Ax_FW1.12WWB03_20190410 were discovered to contain a stack buffer overflow vulnerability in the function FUN_8004776c in /formVirtualApp. This vulnerability is triggered via a crafted POST request.\n\n- CVE-2021-33267: D-Link DIR-809 devices with firmware through DIR-809Ax_FW1.12WWB03_20190410 were discovered to contain a stack buffer overflow vulnerability in the function FUN_80034d60 in /formStaticDHCP. This vulnerability is triggered via a crafted POST request.\n\n- CVE-2021-33268: D-Link DIR-809 devices with firmware through DIR-809Ax_FW1.12WWB03_20190410 were discovered to contain a stack buffer overflow vulnerability in the function sub_8003183C in /fromLogin. This vulnerability is triggered via a crafted POST request.\n\n- CVE-2021-33269: D-Link DIR-809 devices with firmware through DIR-809Ax_FW1.12WWB03_20190410 were discovered to contain a stack buffer overflow vulnerability in the function FUN_8004776c in /formVirtualServ. This vulnerability is triggered via a crafted POST request.\n\n- CVE-2021-33270: D-Link DIR-809 devices with firmware through DIR-809Ax_FW1.12WWB03_20190410 were discovered to contain a stack buffer overflow vulnerability in the function FUN_800462c4 in /formAdvFirewall. This vulnerability is triggered via a crafted POST request.\n\n- CVE-2021-33271: D-Link DIR-809 devices with firmware through DIR-809Ax_FW1.12WWB03_20190410 were discovered to contain a stack buffer overflow vulnerability in the function sub_80046EB4 in /formSetPortTr. This vulnerability is triggered via a crafted POST request.\n\n- CVE-2021-33274: D-Link DIR-809 devices with firmware through DIR-809Ax_FW1.12WWB03_20190410 were discovered to contain a stack buffer overflow vulnerability in the function FUN_80040af8 in /formWlanSetup. This vulnerability is triggered via a crafted POST request.\n\n- CVE-2021-33362: Stack buffer overflow in the hevc_parse_vps_extension function in MP4Box in GPAC 1.0.1 allows attackers to cause a denial of service or execute arbitrary code via a crafted file.\n\n- CVE-2021-33479: A stack-based buffer overflow vulnerability was discovered in gocr through 0.53-20200802 in measure_pitch() in pgm2asc.c.\n\n- CVE-2021-33481: A stack-based buffer overflow vulnerability was discovered in gocr through 0.53-20200802 in try_to_divide_boxes() in pgm2asc.c.\n\n- CVE-2021-3382: Stack buffer overflow vulnerability in gitea 1.9.0 through 1.13.1 allows remote attackers to cause a denial of service (crash) via vectors related to a file path.\n\n- CVE-2021-33833: ConnMan (aka Connection Manager) 1.30 through 1.39 has a stack-based buffer overflow in uncompress in dnsproxy.c via NAME, RDATA, or RDLENGTH (for A or AAAA).\n\n- CVE-2021-33889: OpenThread wpantund through 2021-07-02 has a stack-based Buffer Overflow because of an inconsistency in the integer data type for metric_len.\n\n- CVE-2021-34343: A stack buffer overflow vulnerability has been reported to affect QNAP device running QTS, QuTScloud, QuTS hero. If exploited, this vulnerability allows attackers to execute arbitrary code. We have already fixed this vulnerability in the following versions of QTS, QuTScloud, QuTS hero: QTS 4.5.4.1715 build 20210630 and later QTS 5.0.0.1716 build 20210701 and later QuTScloud c4.5.6.1755 and later QuTS hero h4.5.4.1771 build 20210825 and later\n\n- CVE-2021-34344: A stack buffer overflow vulnerability has been reported to affect QNAP device running QUSBCam2. If exploited, this vulnerability allows attackers to execute arbitrary code. We have already fixed this vulnerability in the following versions of QUSBCam2: QTS 4.5.4: QUSBCam2 1.1.4 ( 2021/07/30 ) and later QTS 5.0: QUSBCam2 2.0.1 ( 2021/08/03 ) and later QTS 4.3.6: QUSBCam2 1.1.4 ( 2021/07/30 ) and later QTS 4.3.3: QUSBCam2 1.1.4 ( 2021/08/06 ) and later QuTS hero 4.5.3: QUSBCam2 1.1.4 ( 2021/07/30 ) and later\n\n- CVE-2021-34345: A stack buffer overflow vulnerability has been reported to affect QNAP device running NVR Storage Expansion. If exploited, this vulnerability allows attackers to execute arbitrary code. We have already fixed this vulnerability in the following versions of NVR Storage Expansion: NVR Storage Expansion 1.0.6 ( 2021/08/03 ) and later\n\n- CVE-2021-34346: A stack buffer overflow vulnerability has been reported to affect QNAP device running NVR Storage Expansion. If exploited, this vulnerability allows attackers to execute arbitrary code. We have already fixed this vulnerability in the following versions of NVR Storage Expansion: NVR Storage Expansion 1.0.6 ( 2021/08/03 ) and later\n\n- CVE-2021-34813: Matrix libolm before 3.2.3 allows a malicious Matrix homeserver to crash a client (while it is attempting to retrieve an Olm encrypted room key backup from the homeserver) because olm_pk_decrypt has a stack-based buffer overflow. Remote code execution might be possible for some nonstandard build configurations.\n\n- CVE-2021-3500: A flaw was found in djvulibre-3.5.28 and earlier. A Stack overflow in function DJVU::DjVuDocument::get_djvu_file() via crafted djvu file may lead to application crash and other consequences.\n\n- CVE-2021-35267: NTFS-3G versions < 2021.8.22, a stack buffer overflow can occur when correcting differences in the MFT and MFTMirror allowing for code execution or escalation of privileges when setuid-root.\n\n- CVE-2021-35325: A stack overflow in the checkLoginUser function of TOTOLINK A720R A720R_Firmware v4.1.5cu.470_B20200911 allows attackers to cause a denial of service (DOS).\n\n- CVE-2021-35393: Realtek Jungle SDK version v2.x up to v3.4.14B provides a 'WiFi Simple Config' server that implements both UPnP and SSDP protocols. The binary is usually named wscd or mini_upnpd and is the successor to miniigd. The server is vulnerable to a stack buffer overflow vulnerability that is present due to unsafe parsing of the UPnP SUBSCRIBE/UNSUBSCRIBE Callback header. Successful exploitation of this vulnerability allows remote unauthenticated attackers to gain arbitrary code execution on the affected device.\n\n- CVE-2021-35395: Realtek Jungle SDK version v2.x up to v3.4.14B provides an HTTP web server exposing a management interface that can be used to configure the access point. Two versions of this management interface exists: one based on Go-Ahead named webs and another based on Boa named boa. Both of them are affected by these vulnerabilities. Specifically, these binaries are vulnerable to the following issues: - stack buffer overflow in formRebootCheck due to unsafe copy of submit-url parameter - stack buffer overflow in formWsc due to unsafe copy of submit-url parameter - stack buffer overflow in formWlanMultipleAP due to unsafe copy of submit-url parameter - stack buffer overflow in formWlSiteSurvey due to unsafe copy of ifname parameter - stack buffer overflow in formStaticDHCP due to unsafe copy of hostname parameter - stack buffer overflow in formWsc due to unsafe copy of 'peerPin' parameter - arbitrary command execution in formSysCmd via the sysCmd parameter - arbitrary command injection in formWsc via the 'peerPin' parameter Exploitability of identified issues will differ based on what the end vendor/manufacturer did with the Realtek SDK webserver. Some vendors use it as-is, others add their own authentication implementation, some kept all the features from the server, some remove some of them, some inserted their own set of features. However, given that Realtek SDK implementation is full of insecure calls and that developers tends to re-use those examples in their custom code, any binary based on Realtek SDK webserver will probably contains its own set of issues on top of the Realtek ones (if kept). Successful exploitation of these issues allows remote attackers to gain arbitrary code execution on the device.\n\n- CVE-2021-35474: Stack-based Buffer Overflow vulnerability in cachekey plugin of Apache Traffic Server. This issue affects Apache Traffic Server 7.0.0 to 7.1.12, 8.0.0 to 8.1.1, 9.0.0 to 9.0.1.\n\n- CVE-2021-3569: A stack corruption bug was found in libtpms in versions before 0.7.2 and before 0.8.0 while decrypting data using RSA. This flaw could result in a SIGBUS (bad memory access) and termination of swtpm. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-36082: ntop nDPI 3.4 has a stack-based buffer overflow in processClientServerHello.\n\n- CVE-2021-36083: KDE KImageFormats 5.70.0 through 5.81.0 has a stack-based buffer overflow in XCFImageFormat::loadTileRLE.\n\n- CVE-2021-36179: A stack-based buffer overflow in Fortinet FortiWeb version 6.3.14 and below, 6.2.4 and below allows attacker to execute unauthorized code or commands via crafted parameters in CLI command execution\n\n- CVE-2021-36186: A stack-based buffer overflow in Fortinet FortiWeb version 6.4.0, version 6.3.15 and below, 6.2.5 and below allows attacker to execute unauthorized code or commands via crafted HTTP requests\n\n- CVE-2021-36301: Dell iDRAC 9 prior to version 4.40.40.00 and iDRAC 8 prior to version 2.80.80.80 contain a Stack Buffer Overflow in Racadm. An authenticated remote attacker may potentially exploit this vulnerability to control process execution and gain access to the underlying operating system.\n\n- CVE-2021-37232: A stack overflow vulnerability occurs in Atomicparsley 20210124.204813.840499f through APar_read64() in src/util.cpp due to the lack of buffer size of uint32_buffer while reading more bytes in APar_read64.\n\n- CVE-2021-38389: Advantech WebAccess versions 9.02 and prior are vulnerable to a stack-based buffer overflow, which may allow an attacker to remotely execute code.\n\n- CVE-2021-38473: The affected product\u2019s code base doesn\u2019t properly control arguments for specific functions, which could lead to a stack overflow.\n\n- CVE-2021-38522: NETGEAR R6400 devices before 1.0.1.52 are affected by a stack-based buffer overflow by an authenticated user.\n\n- CVE-2021-38523: NETGEAR R6400 devices before 1.0.1.70 are affected by a stack-based buffer overflow by an authenticated user.\n\n- CVE-2021-38524: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects MK62 before 1.0.6.110, MR60 before 1.0.6.110, MS60 before 1.0.6.110, RAX15 before 1.0.2.82, RAX20 before 1.0.2.82, RAX200 before 1.0.3.106, RAX45 before 1.0.2.32, RAX50 before 1.0.2.32, RAX75 before 1.0.3.106, RAX80 before 1.0.3.106, RBK752 before 3.2.16.6, RBR750 before 3.2.16.6, and RBS750 before 3.2.16.6.\n\n- CVE-2021-38525: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects D3600 before 1.0.0.76, D6000 before 1.0.0.76, D6200 before 1.1.00.36, D7000 before 1.0.1.70, EX6200v2 before 1.0.1.78, EX7000 before 1.0.1.78, EX8000 before 1.0.1.186, JR6150 before 1.0.1.18, PR2000 before 1.0.0.28, R6020 before 1.0.0.42, R6050 before 1.0.1.18, R6080 before 1.0.0.42, R6120 before 1.0.0.46, R6220 before 1.1.0.80, R6260 before 1.1.0.64, R6300v2 before 1.0.4.34, R6700 before 1.0.2.6, R6700v2 before 1.2.0.36, R6800 before 1.2.0.36, R6900 before 1.0.2.4, R6900P before 1.3.1.64, R6900v2 before 1.2.0.36, R7000 before 1.0.9.42, R7000P before 1.3.1.64, R7800 before 1.0.2.60, R8900 before 1.0.4.12, R9000 before 1.0.4.12, and XR500 before 2.3.2.40.\n\n- CVE-2021-38684: A stack buffer overflow vulnerability has been reported to affect QNAP NAS running Multimedia Console. If exploited, this vulnerability allows attackers to execute arbitrary code. We have already fixed this vulnerability in the following versions of Multimedia Console: Multimedia Console 1.4.3 ( 2021/10/05 ) and later Multimedia Console 1.5.3 ( 2021/10/05 ) and later\n\n- CVE-2021-3928: vim is vulnerable to Use of Uninitialized Variable\n\n- CVE-2021-39531: An issue was discovered in libslax through v0.22.1. slaxLexer() in slaxlexer.c has a stack-based buffer overflow.\n\n- CVE-2021-39845: Acrobat Reader DC versions 2021.005.20060 (and earlier), 2020.004.30006 (and earlier) and 2017.011.30199 (and earlier) are affected by a stack overflow vulnerability due to insecure handling of a crafted PDF file, potentially resulting in memory corruption in the context of the current user. Exploitation requires user interaction in that a victim must open a crafted PDF file in Acrobat Reader.\n\n- CVE-2021-39846: Acrobat Reader DC versions 2021.005.20060 (and earlier), 2020.004.30006 (and earlier) and 2017.011.30199 (and earlier) are affected by a stack overflow vulnerability due to insecure handling of a crafted PDF file, potentially resulting in memory corruption in the context of the current user. Exploitation requires user interaction in that a victim must open a crafted PDF file in Acrobat Reader.\n\n- CVE-2021-41456: There is a stack buffer overflow in MP4Box v1.0.1 at src/filters/dmx_nhml.c:1004 in the nhmldmx_send_sample() function szXmlTo parameter which leads to a denial of service vulnerability.\n\n- CVE-2021-41457: There is a stack buffer overflow in MP4Box 1.1.0 at src/filters/dmx_nhml.c in nhmldmx_init_parsing which leads to a denial of service vulnerability.\n\n- CVE-2021-41459: There is a stack buffer overflow in MP4Box v1.0.1 at src/filters/dmx_nhml.c:1008 in the nhmldmx_send_sample() function szXmlFrom parameter which leads to a denial of service vulnerability.\n\n- CVE-2021-42012: A stack-based buffer overflow vulnerability in Trend Micro Apex One, Apex One as a Service and Worry-Free Business Security 10.0 SP1 could allow a local attacker to escalate privileges on affected installations. Please note: an attacker must first obtain the ability to execute low-privileged code on the target system in order to exploit this vulnerability.\n\n- CVE-2021-44352: A Stack-based Buffer Overflow vulnerability exists in the Tenda AC15 V15.03.05.18_multi device via the list parameter in a post request in goform/SetIpMacBind.\n\n- CVE-2020-35492: A flaw was found in cairo's image-compositor.c in all versions prior to 1.17.4. This flaw allows an attacker who can provide a crafted input file to cairo's image-compositor (for example, by convincing a user to open a file in an application using cairo, or if an application uses cairo on untrusted input) to cause a stack buffer overflow -> out-of-bounds WRITE. The highest impact from this vulnerability is to confidentiality, integrity, as well as system availability.\n\n- CVE-2021-25217: In ISC DHCP 4.1-ESV-R1 -> 4.1-ESV-R16, ISC DHCP 4.4.0 -> 4.4.2 (Other branches of ISC DHCP (i.e., releases in the 4.0.x series or lower and releases in the 4.3.x series) are beyond their End-of-Life (EOL) and no longer supported by ISC. From inspection it is clear that the defect is also present in releases from those series, but they have not been officially tested for the vulnerability), The outcome of encountering the defect while reading a lease that will trigger it varies, according to: the component being affected (i.e., dhclient or dhcpd) whether the package was built as a 32-bit or 64-bit binary whether the compiler flag -fstack-protection-strong was used when compiling In dhclient, ISC has not successfully reproduced the error on a 64-bit system. However, on a 32-bit system it is possible to cause dhclient to crash when reading an improper lease, which could cause network connectivity problems for an affected system due to the absence of a running DHCP client process. In dhcpd, when run in DHCPv4 or DHCPv6 mode: if the dhcpd server binary was built for a 32-bit architecture AND the -fstack-protection-strong flag was specified to the compiler, dhcpd may exit while parsing a lease file containing an objectionable lease, resulting in lack of service to clients. Additionally, the offending lease and the lease immediately following it in the lease database may be improperly deleted. if the dhcpd server binary was built for a 64-bit architecture OR if the -fstack-protection-strong compiler flag was NOT specified, the crash will not occur, but it is possible for the offending lease and the lease which immediately followed it to be improperly deleted.\n\n- CVE-2020-14107: A stack overflow in the HTTP server of Cast can be exploited to make the app crash in LAN.\n\n- CVE-2021-38427: RTI Connext DDS Professional and Connext DDS Secure Versions 4.2.x to 6.1.0 are vulnerable to a stack-based buffer overflow, which may allow a local attacker to execute arbitrary code.\n\n- CVE-2021-42529: XMP Toolkit SDK version 2021.07 (and earlier) is affected by a stack-based buffer overflow vulnerability potentially resulting in arbitrary code execution in the context of the current user. Exploitation requires user interaction in that a victim must open a crafted file.\n\n- CVE-2021-42530: XMP Toolkit SDK version 2021.07 (and earlier) is affected by a stack-based buffer overflow vulnerability potentially resulting in arbitrary code execution in the context of the current user. Exploitation requires user interaction in that a victim must open a crafted file.\n\n- CVE-2021-42531: XMP Toolkit SDK version 2021.07 (and earlier) is affected by a stack-based buffer overflow vulnerability potentially resulting in arbitrary code execution in the context of the current user. Exploitation requires user interaction in that a victim must open a crafted file.\n\n- CVE-2020-0938: A remote code execution vulnerability exists in Microsoft Windows when the Windows Adobe Type Manager Library improperly handles a specially-crafted multi-master font - Adobe Type 1 PostScript format.For all systems except Windows 10, an attacker who successfully exploited the vulnerability could execute code remotely, aka 'Adobe Font Manager Library Remote Code Execution Vulnerability'. This CVE ID is unique from CVE-2020-1020.\n\n- CVE-2020-14871: Vulnerability in the Oracle Solaris product of Oracle Systems (component: Pluggable authentication module). Supported versions that are affected are 10 and 11. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Solaris. While the vulnerability is in Oracle Solaris, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Oracle Solaris. Note: This CVE is not exploitable for Solaris 11.1 and later releases, and ZFSSA 8.7 and later releases, thus the CVSS Base Score is 0.0. CVSS 3.1 Base Score 10.0 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H).\n\n- CVE-2020-5735: Amcrest cameras and NVR are vulnerable to a stack-based buffer overflow over port 37777. An authenticated remote attacker can abuse this issue to crash the device and possibly execute arbitrary code.\n\n- CVE-2020-1020: A remote code execution vulnerability exists in Microsoft Windows when the Windows Adobe Type Manager Library improperly handles a specially-crafted multi-master font - Adobe Type 1 PostScript format.For all systems except Windows 10, an attacker who successfully exploited the vulnerability could execute code remotely, aka 'Adobe Font Manager Library Remote Code Execution Vulnerability'. This CVE ID is unique from CVE-2020-0938.\n\n- CVE-2021-20038: A Stack-based buffer overflow vulnerability in SMA100 Apache httpd server's mod_cgi module environment variables allows a remote unauthenticated attacker to potentially execute code as a 'nobody' user in the appliance. This vulnerability affected SMA 200, 210, 400, 410 and 500v appliances firmware 10.2.0.8-37sv, 10.2.1.1-19sv, 10.2.1.2-24sv and earlier versions.\n\n- CVE-2021-20046: A Stack-based buffer overflow in the SonicOS HTTP Content-Length response header allows a remote authenticated attacker to cause Denial of Service (DoS) and potentially results in code execution in the firewall. This vulnerability affected SonicOS Gen 5, Gen 6 and Gen 7 firmware versions.\n\n- CVE-2021-20048: A Stack-based buffer overflow in the SonicOS SessionID HTTP response header allows a remote authenticated attacker to cause Denial of Service (DoS) and potentially results in code execution in the firewall. This vulnerability affected SonicOS Gen 5, Gen 6 and Gen 7 firmware versions.\n\n- CVE-2021-21887: A stack-based buffer overflow vulnerability exists in the Web Manager SslGenerateCSR functionality of Lantronix PremierWave 2050 8.9.0.0R4 (in QEMU). A specially crafted HTTP request can lead to remote code execution. An attacker can make an authenticated HTTP request to trigger this vulnerability.\n\n- CVE-2021-21889: A stack-based buffer overflow vulnerability exists in the Web Manager Ping functionality of Lantronix PremierWave 2050 8.9.0.0R4 (in QEMU). A specially crafted HTTP request can lead to remote code execution. An attacker can make an authenticated HTTP request to trigger this vulnerability.\n\n- CVE-2021-21890: A stack-based buffer overflow vulnerability exists in the Web Manager FsBrowseClean functionality of Lantronix PremierWave 2050 8.9.0.0R4 (in QEMU). A specially crafted HTTP request can lead to remote code execution in the vulnerable portion of the branch (deletedir). An attacker can make an authenticated HTTP request to trigger this vulnerability.\n\n- CVE-2021-21901: A stack-based buffer overflow vulnerability exists in the CMA check_udp_crc function of Garrett Metal Detectors\u2019 iC Module CMA Version 5.0. A specially-crafted packet can lead to a stack-based buffer overflow during a call to memcpy. An attacker can send a malicious packet to trigger this vulnerability.\n\n- CVE-2021-21961: A stack-based buffer overflow vulnerability exists in the NBNS functionality of Sealevel Systems, Inc. SeaConnect 370W v1.3.34. A specially-crafted network packet can lead to remote code execution. An attacker can send a malicious packet to trigger this vulnerability.\n\n- CVE-2021-23206: A flaw was found in htmldoc in v1.9.12 and prior. A stack buffer overflow in parse_table() in ps-pdf.cxx may lead to execute arbitrary code and denial of service.\n\n- CVE-2021-26112: Multiple stack-based buffer overflow vulnerabilities [CWE-121] both in network daemons and in the command line interpreter of FortiWAN before 4.5.9 may allow an unauthenticated attacker to potentially corrupt control data in memory and execute arbitrary code via specifically crafted requests.\n\n- CVE-2021-26567: Stack-based buffer overflow vulnerability in frontend/main.c in faad2 before 2.2.7.1 allow local attackers to execute arbitrary code via filename and pathname options.\n\n- CVE-2021-26727: Multiple command injections and stack-based buffer overflows vulnerabilities in the SubNet_handler_func function of spx_restservice allow an attacker to execute arbitrary code with the same privileges as the server user (root). This issue affects: Lanner Inc IAC-AST2500A standard firmware version 1.10.0.\n\n- CVE-2021-26728: Command injection and stack-based buffer overflow vulnerabilities in the KillDupUsr_func function of spx_restservice allow an attacker to execute arbitrary code with the same privileges as the server user (root). This issue affects: Lanner Inc IAC-AST2500A standard firmware version 1.10.0.\n\n- CVE-2021-26729: Command injection and multiple stack-based buffer overflows vulnerabilities in the Login_handler_func function of spx_restservice allow an attacker to execute arbitrary code with the same privileges as the server user (root). This issue affects: Lanner Inc IAC-AST2500A standard firmware version 1.10.0.\n\n- CVE-2021-26730: A stack-based buffer overflow vulnerability in a subfunction of the Login_handler_func function of spx_restservice allows an attacker to execute arbitrary code with the same privileges as the server user (root). This issue affects: Lanner Inc IAC-AST2500A standard firmware version 1.10.0.\n\n- CVE-2021-26731: Command injection and multiple stack-based buffer overflows vulnerabilities in the modifyUserb_func function of spx_restservice allow an attacker to execute arbitrary code with the same privileges as the server user (root). This issue affects: Lanner Inc IAC-AST2500A standard firmware version 1.10.0.\n\n- CVE-2021-31578: In Boa, there is a possible escalation of privilege due to a stack buffer overflow. This could lead to remote escalation of privilege from a proximal attacker with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: A20210008; Issue ID: OSBNB00123241.\n\n- CVE-2021-32435: Stack-based buffer overflow in the function get_key in parse.c of abcm2ps v8.14.11 allows remote attackers to cause a Denial of Service (DoS) via unspecified vectors.\n\n- CVE-2021-32941: Annke N48PBB (Network Video Recorder) products of version 3.4.106 build 200422 and prior are vulnerable to a stack-based buffer overflow, which allows an unauthorized remote attacker to execute arbitrary code with the same privileges as the server user (root).\n\n- CVE-2021-33019: A stack-based buffer overflow vulnerability in Delta Electronics DOPSoft Version 4.00.11 and prior may be exploited by processing a specially crafted project file, which may allow an attacker to execute arbitrary code.\n\n- CVE-2021-33438: An issue was discovered in mjs (mJS: Restricted JavaScript engine), ES6 (JavaScript version 6). There is stack buffer overflow in json_parse_array() in mjs.c.\n\n- CVE-2021-33443: An issue was discovered in mjs (mJS: Restricted JavaScript engine), ES6 (JavaScript version 6). There is stack buffer overflow in mjs_execute() in mjs.c.\n\n- CVE-2021-33448: An issue was discovered in mjs(mJS: Restricted JavaScript engine), ES6 (JavaScript version 6). There is stack buffer overflow at 0x7fffe9049390.\n\n- CVE-2021-33545: Multiple camera devices by UDP Technology, Geutebr\u00fcck and other vendors are vulnerable to a stack-based buffer overflow condition in the counter parameter which may allow an attacker to remotely execute arbitrary code.\n\n- CVE-2021-33945: RICOH Printer series SP products 320DN, SP 325DNw, SP 320SN, SP 320SFN, SP 325SNw, SP 325SFNw, SP 330SN, Aficio SP 3500SF, SP 221S, SP 220SNw, SP 221SNw, SP 221SF, SP 220SFNw, SP 221SFNw v1.06 were discovered to contain a stack buffer overflow in the file /etc/wpa_supplicant.conf. This vulnerability allows attackers to cause a Denial of Service (DoS) via crafted overflow data.\n\n- CVE-2021-3434: Stack based buffer overflow in le_ecred_conn_req(). Zephyr versions >= v2.5.0 Stack-based Buffer Overflow (CWE-121). For more information, see https://github.com/zephyrproject-rtos/zephyr/security/advisories/GHSA-8w87-6rfp-cfrm\n\n- CVE-2021-3611: A stack overflow vulnerability was found in the Intel HD Audio device (intel-hda) of QEMU. A malicious guest could use this flaw to crash the QEMU process on the host, resulting in a denial of service condition. The highest threat from this vulnerability is to system availability. This flaw affects QEMU versions prior to 7.0.0.\n\n- CVE-2021-36193: Multiple stack-based buffer overflows in the command line interpreter of FortiWeb before 6.4.2 may allow an authenticated attacker to achieve arbitrary code execution via specially crafted commands.\n\n- CVE-2021-36194: Multiple stack-based buffer overflows in the API controllers of FortiWeb 6.4.1, 6.4.0, and 6.3.0 through 6.3.15 may allow an authenticated attacker to achieve arbitrary code execution via specially crafted requests.\n\n- CVE-2021-36347: iDRAC9 versions prior to 5.00.20.00 and iDRAC8 versions prior to 2.82.82.82 contain a stack-based buffer overflow vulnerability. An authenticated remote attacker with high privileges could potentially exploit this vulnerability to control process execution and gain access to the iDRAC operating system.\n\n- CVE-2021-37014: There is a Stack-based Buffer Overflow vulnerability in Huawei Smartphone.Successful exploitation of this vulnerability may lead to device cannot be used properly.\n\n- CVE-2021-37020: There is a Stack-based Buffer Overflow vulnerability in Huawei Smartphone.Successful exploitation of this vulnerability may lead to Out-of-bounds read.\n\n- CVE-2021-37021: There is a Stack-based Buffer Overflow vulnerability in Huawei Smartphone.Successful exploitation of this vulnerability may lead to Out-of-bounds read.\n\n- CVE-2021-3826: Heap/stack buffer overflow in the dlang_lname function in d-demangle.c in libiberty allows attackers to potentially cause a denial of service (segmentation fault and crash) via a crafted mangled symbol.\n\n- CVE-2021-38682: A stack buffer overflow vulnerability has been reported to affect QNAP device running QVR Elite, QVR Pro, QVR Guard. If exploited, this vulnerability allows attackers to execute arbitrary code. We have already fixed this vulnerability in the following versions of QVR Elite, QVR Pro, QVR Guard: QuTS hero h5.0.0: QVR Elite 2.1.4.0 (2021/12/06) and later QuTS hero h4.5.4: QVR Elite 2.1.4.0 (2021/12/06) and later QTS 5.0.0: QVR Elite 2.1.4.0 (2021/12/06) and later QTS 4.5.4: QVR Elite 2.1.4.0 (2021/12/06) and later QTS 4.5.4: QVR Pro 2.1.3.0 (2021/12/06) and later QTS 5.0.0: QVR Pro 2.1.3.0 (2021/12/06) and later QTS 4.5.4: QVR Guard 2.1.3.0 and later QTS 5.0.0: QVR Guard 2.1.3.0 and later\n\n- CVE-2021-38690: A stack buffer overflow vulnerability has been reported to affect QNAP device running QVR Elite, QVR Pro, QVR Guard. If exploited, this vulnerability allows attackers to execute arbitrary code. We have already fixed this vulnerability in the following versions of QVR Elite, QVR Pro, QVR Guard: QuTS hero h5.0.0: QVR Elite 2.1.4.0 (2021/12/06) and later QuTS hero h4.5.4: QVR Elite 2.1.4.0 (2021/12/06) and later QTS 5.0.0: QVR Elite 2.1.4.0 (2021/12/06) and later QTS 4.5.4: QVR Elite 2.1.4.0 (2021/12/06) and later QTS 4.5.4: QVR Pro 2.1.3.0 (2021/12/06) and later QTS 5.0.0: QVR Pro 2.1.3.0 (2021/12/06) and later QTS 4.5.4: QVR Guard 2.1.3.0 (2021/12/06) and later QTS 5.0.0: QVR Guard 2.1.3.0 (2021/12/06) and later\n\n- CVE-2021-39048: IBM Spectrum Protect Client 7.1 and 8.1 is vulnerable to a stack based buffer overflow, caused by improper bounds checking. A local attacker could exploit this vulnerability and cause a denial of service. IBM X-Force ID: 214438.\n\n- CVE-2021-39049: IBM i2 Analyst's Notebook 9.2.0, 9.2.1, and 9.2.2 is vulnerable to a stack-based buffer overflow, caused by improper bounds checking. A local attacker could overflow a buffer and gain lower level privileges. IBM X-Force ID: 214439.\n\n- CVE-2021-39050: IBM i2 Analyst's Notebook 9.2.0, 9.2.1, and 9.2.2 is vulnerable to a stack-based buffer overflow, caused by improper bounds checking. A local attacker could overflow a buffer and gain lower level privileges. IBM X-Force ID: 214440.\n\n- CVE-2021-39306: A stack buffer overflow was discovered on Realtek RTL8195AM device before 2.0.10, it exists in the client code when an attacker sends a big size Authentication challenge text in WEP security.\n\n- CVE-2021-39990: The screen lock module has a Stack-based Buffer Overflow vulnerability.Successful exploitation of this vulnerability may affect user experience.\n\n- CVE-2021-40057: There is a heap-based and stack-based buffer overflow vulnerability in the video framework. Successful exploitation of this vulnerability may affect availability.\n\n- CVE-2021-40556: A stack overflow vulnerability exists in the httpd service in ASUS RT-AX56U Router Version 3.0.0.4.386.44266. This vulnerability is caused by the strcat function called by \"caupload\" input handle function allowing the user to enter 0xFFFF bytes into the stack. This vulnerability allows an attacker to execute commands remotely. The vulnerability requires authentication.\n\n- CVE-2021-41027: A stack-based buffer overflow in Fortinet FortiWeb version 6.4.1 and 6.4.0, allows an authenticated attacker to execute unauthorized code or commands via crafted certificates loaded into the device.\n\n- CVE-2021-41458: In GPAC MP4Box v1.1.0, there is a stack buffer overflow at src/utils/error.c:1769 which leads to a denial of service vulnerability.\n\n- CVE-2021-42059: An issue was discovered in Insyde InsydeH2O Kernel 5.0 before 05.08.41, Kernel 5.1 before 05.16.41, Kernel 5.2 before 05.26.41, Kernel 5.3 before 05.35.41, and Kernel 5.4 before 05.42.20. A stack-based buffer overflow leads toarbitrary code execution in UEFI DisplayTypeDxe DXE driver.\n\n- CVE-2021-42756: Multiple stack-based buffer overflow vulnerabilities [CWE-121] in the proxy daemon of FortiWeb 5.x all versions, 6.0.7 and below, 6.1.2 and below, 6.2.6 and below, 6.3.16 and below, 6.4 all versions may allow an unauthenticated remote attacker to achieve arbitrary code execution via specifically crafted HTTP requests.\n\n- CVE-2021-42757: A buffer overflow [CWE-121] in the TFTP client library of FortiOS before 6.4.7 and FortiOS 7.0.0 through 7.0.2, may allow an authenticated local attacker to achieve arbitrary code execution via specially crafted command line arguments.\n\n- CVE-2021-42782: Stack buffer overflow issues were found in Opensc before version 0.22.0 in various places that could potentially crash programs using the library.\n\n- CVE-2021-43299: Stack overflow in PJSUA API when calling pjsua_player_create. An attacker-controlled 'filename' argument may cause a buffer overflow since it is copied to a fixed-size stack buffer without any size validation.\n\n- CVE-2021-43300: Stack overflow in PJSUA API when calling pjsua_recorder_create. An attacker-controlled 'filename' argument may cause a buffer overflow since it is copied to a fixed-size stack buffer without any size validation.\n\n- CVE-2021-43301: Stack overflow in PJSUA API when calling pjsua_playlist_create. An attacker-controlled 'file_names' argument may cause a buffer overflow since it is copied to a fixed-size stack buffer without any size validation.\n\n- CVE-2021-43556: FATEK WinProladder Versions 3.30_24518 and prior are vulnerable to a stack-based buffer overflow while processing project files, which may allow an attacker to execute arbitrary code.\n\n- CVE-2021-43579: A stack-based buffer overflow in image_load_bmp() in HTMLDOC <= 1.9.13 results in remote code execution if the victim converts an HTML document linking to a crafted BMP file.\n\n- CVE-2021-43983: WECON LeviStudioU Versions 2019-09-21 and prior are vulnerable to multiple stack-based buffer overflow instances while parsing project files, which may allow an attacker to execute arbitrary code.\n\n- CVE-2021-44170: A stack-based buffer overflow vulnerability [CWE-121] in the command line interpreter of FortiOS before 7.0.4 and FortiProxy before 2.0.8 may allow an authenticated attacker to execute unauthorized code or commands via specially crafted command line arguments.\n\n- CVE-2021-44435: A vulnerability has been identified in JT Utilities (All versions < V13.1.1.0), JTTK (All versions < V11.1.1.0). JTTK library in affected products is vulnerable to stack based buffer overflow while parsing specially crafted JT files. An attacker could leverage this vulnerability to execute code in the context of the current process. (ZDI-CAN-14903)\n\n- CVE-2021-44703: Acrobat Reader DC version 21.007.20099 (and earlier), 20.004.30017 (and earlier) and 17.011.30204 (and earlier) are affected by a stack buffer overflow vulnerability due to insecure handling of a crafted file, potentially resulting in arbitrary code execution in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file.\n\n- CVE-2021-45258: A stack overflow vulnerability exists in gpac 1.1.0 via the gf_bifs_dec_proto_list function, which causes a segmentation fault and application crash.\n\n- CVE-2021-45573: Certain NETGEAR devices are affected by a stack-based buffer overflow by an unauthenticated attacker. This affects R6260 before 1.1.0.76, R6800 before 1.2.0.62, R6700v2 before 1.2.0.62, R6900v2 before 1.2.0.62, R7450 before 1.2.0.62, AC2100 before 1.2.0.62, AC2400 before 1.2.0.62, and AC2600 before 1.2.0.62.\n\n- CVE-2021-45604: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects CBR750 before 3.2.18.2, D6220 before 1.0.0.68, D6400 before 1.0.0.102, D8500 before 1.0.3.60, LAX20 before 1.1.6.28, MK62 before 1.0.6.116, MR60 before 1.0.6.116, MS60 before 1.0.6.116, R6300v2 before 1.0.4.50, R6400 before 1.0.1.68, R6400v2 before 1.0.4.118, R6700v3 before 1.0.4.118, R6900P before 1.3.3.140, R7000 before 1.0.11.116, R7000P before 1.3.3.140, R7850 before 1.0.5.68, R7900 before 1.0.4.38, R7900P before 1.4.2.84, R7960P before 1.4.2.84, R8000 before 1.0.4.68, R8000P before 1.4.2.84, RAX15 before 1.0.3.96, RAX20 before 1.0.3.96, RAX200 before 1.0.4.120, RAX35v2 before 1.0.3.96, RAX40v2 before 1.0.3.96, RAX43 before 1.0.3.96, RAX45 before 1.0.3.96, RAX50 before 1.0.3.96, RAX75 before 1.0.4.120, RAX80 before 1.0.4.120, RBK752 before 3.2.17.12, RBK852 before 3.2.17.12, RBR750 before 3.2.17.12, RBR850 before 3.2.17.12, RBS750 before 3.2.17.12, RBS850 before 3.2.17.12, RS400 before 1.5.1.80, and XR1000 before 1.0.0.58.\n\n- CVE-2021-45605: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects R6400 before 1.0.1.68, R7000 before 1.0.11.116, R6900P before 1.3.3.140, R7000P before 1.3.3.140, R7900 before 1.0.4.38, RAX75 before 1.0.3.102, RAX80 before 1.0.3.102, and XR300 before 1.0.3.50.\n\n- CVE-2021-45606: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects R6400 before 1.0.1.70, R7000 before 1.0.11.126, R7900 before 1.0.4.46, R7900P before 1.4.2.84, R7960P before 1.4.2.84, R8000 before 1.0.4.74, R8000P before 1.4.2.84, RAX200 before 1.0.4.120, RS400 before 1.5.1.80, R6400v2 before 1.0.4.118, R7000P before 1.3.3.140, RAX80 before 1.0.4.120, R6700v3 before 1.0.4.118, R6900P before 1.3.3.140, and RAX75 before 1.0.4.120.\n\n- CVE-2021-45607: Certain NETGEAR devices are affected by a stack-based buffer overflow by an authenticated user. This affects R6400v2 before 1.0.4.118, R6700v3 before 1.0.4.118, R6900P before 1.3.3.140, R7000 before 1.0.11.126, R7000P before 1.3.3.140, RAX200 before 1.0.5.126, RAX75 before 1.0.5.126, and RAX80 before 1.0.5.126.\n\n- CVE-2021-45636: NETGEAR D7000 devices before 1.0.1.82 are affected by a stack-based buffer overflow by an unauthenticated attacker.\n\n- CVE-2021-45637: Certain NETGEAR devices are affected by a stack-based buffer overflow by an unauthenticated attacker. This affects R6260 before 1.1.0.76, R6800 before 1.2.0.62, R6700v2 before 1.2.0.62, R6900v2 before 1.2.0.62, R7450 before 1.2.0.62, AC2100 before 1.2.0.62, AC2400 before 1.2.0.62, and AC2600 before 1.2.0.62.\n\n- CVE-2021-45638: Certain NETGEAR devices are affected by a stack-based buffer overflow by an unauthenticated attacker. This affects D6220 before 1.0.0.68, D6400 before 1.0.0.102, D7000v2 before 1.0.0.74, D8500 before 1.0.3.60, DC112A before 1.0.0.56, R6300v2 before 1.0.4.50, R6400 before 1.0.1.68, R7000 before 1.0.11.116, R7100LG before 1.0.0.70, RBS40V before 2.6.2.8, RBW30 before 2.6.2.2, RS400 before 1.5.1.80, R7000P before 1.3.2.132, and R6900P before 1.3.2.132.\n\n- CVE-2021-45833: A Stack-based Buffer Overflow Vulnerability exists in HDF5 1.13.1-1 via the H5D__create_chunk_file_map_hyper function in /hdf5/src/H5Dchunk.c, which causes a Denial of Service (context-dependent).\n\n- CVE-2021-45907: An issue was discovered in gif2apng 1.9. There is a stack-based buffer overflow involving a for loop. An attacker has little influence over the data written to the stack, making it unlikely that the flow of control can be subverted.\n\n- CVE-2021-45908: An issue was discovered in gif2apng 1.9. There is a stack-based buffer overflow involving a while loop. An attacker has little influence over the data written to the stack, making it unlikely that the flow of control can be subverted.\n\n- CVE-2021-45926: MDB Tools (aka mdbtools) 0.9.2 has a stack-based buffer overflow (at 0x7ffd0c689be0) in mdb_numeric_to_string (called from mdb_xfer_bound_data and _mdb_attempt_bind).\n\n- CVE-2021-45927: MDB Tools (aka mdbtools) 0.9.2 has a stack-based buffer overflow (at 0x7ffd6e029ee0) in mdb_numeric_to_string (called from mdb_xfer_bound_data and _mdb_attempt_bind).\n\n- CVE-2021-45958: UltraJSON (aka ujson) through 5.1.0 has a stack-based buffer overflow in Buffer_AppendIndentUnchecked (called from encode). Exploitation can, for example, use a large amount of indentation.\n\n- CVE-2021-45988: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function formAddDnsForward. This vulnerability allows attackers to cause a Denial of Service (DoS) via the DnsForwardRule parameter.\n\n- CVE-2021-45989: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function guestWifiRuleRefresh. This vulnerability allows attackers to cause a Denial of Service (DoS) via the qosGuestUpstream and qosGuestDownstream parameters.\n\n- CVE-2021-45991: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function formAddVpnUsers. This vulnerability allows attackers to cause a Denial of Service (DoS) via the vpnUsers parameter.\n\n- CVE-2021-45992: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function formSetQvlanList. This vulnerability allows attackers to cause a Denial of Service (DoS) via the qvlanName parameter.\n\n- CVE-2021-45993: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function formIPMacBindModify. This vulnerability allows attackers to cause a Denial of Service (DoS) via the IPMacBindRuleIP and IPMacBindRuleMac parameters.\n\n- CVE-2021-45994: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function formDelDhcpRule. This vulnerability allows attackers to cause a Denial of Service (DoS) via the delDhcpIndex parameter.\n\n- CVE-2021-45995: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function formSetStaticRoute. This vulnerability allows attackers to cause a Denial of Service (DoS) via the staticRouteNet, staticRouteMask, and staticRouteGateway parameters.\n\n- CVE-2021-45996: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function formSetPortMapping. This vulnerability allows attackers to cause a Denial of Service (DoS) via the portMappingServer, portMappingProtocol, portMappingWan, porMappingtInternal, and portMappingExternal parameters.\n\n- CVE-2021-45997: Tenda routers G1 and G3 v15.11.0.17(9502)_CN were discovered to contain a stack overflow in the function formSetPortMapping. This vulnerability allows attackers to cause a Denial of Service (DoS) via the portMappingServer, portMappingProtocol, portMappingWan, porMappingtInternal, and portMappingExternal parameters.\n\n- CVE-2021-46238: GPAC v1.1.0 was discovered to contain a stack overflow via the function gf_node_get_name () at scenegraph/base_scenegraph.c. This vulnerability can lead to a program crash, causing a Denial of Service (DoS).\n\n- CVE-2021-46262: Tenda AC Series Router AC11_V02.03.01.104_CN was discovered to contain a stack buffer overflow in the PPPoE module. This vulnerability allows attackers to cause a Denial of Service (DoS) via crafted overflow data.\n\n- CVE-2021-46263: Tenda AC Series Router AC11_V02.03.01.104_CN was discovered to contain a stack buffer overflow in the wifiTime module. This vulnerability allows attackers to cause a Denial of Service (DoS) via crafted overflow data.\n\n- CVE-2021-46264: Tenda AC Series Router AC11_V02.03.01.104_CN was discovered to contain a stack buffer overflow in the onlineList module. This vulnerability allows attackers to cause a Denial of Service (DoS) via crafted overflow data.\n\n- CVE-2021-46265: Tenda AC Series Router AC11_V02.03.01.104_CN was discovered to contain a stack buffer overflow in the wanBasicCfg module. This vulnerability allows attackers to cause a Denial of Service (DoS) via crafted overflow data.\n\n- CVE-2021-46321: Tenda AC Series Router AC11_V02.03.01.104_CN was discovered to contain a stack buffer overflow in the wifiBasicCfg module. This vulnerability allows attackers to cause a Denial of Service (DoS) via crafted overflow data.\n\n- CVE-2021-46324: Espruino 2v11.251 was discovered to contain a stack buffer overflow via src/jsvar.c in jsvNewFromString.\n\n- CVE-2021-46325: Espruino 2v10.246 was discovered to contain a stack buffer overflow via src/jsutils.c in vcbprintf.\n\n- CVE-2021-46334: Moddable SDK v11.5.0 was discovered to contain a stack buffer overflow via the component __interceptor_strcat.\n\n- CVE-2021-46393: There is a stack buffer overflow vulnerability in the formSetPPTPServer function of Tenda-AX3 router V16.03.12.10_CN. The v10 variable is directly retrieved from the http request parameter startIp. Then v10 will be splice to stack by function sscanf without any security check,which causes stack overflow. By POSTing the page /goform/SetPptpServerCfg with proper startIp, the attacker can easily perform remote code execution with carefully crafted overflow data.\n\n- CVE-2021-46394: There is a stack buffer overflow vulnerability in the formSetPPTPServer function of Tenda-AX3 router V16.03.12.10_CN. The v13 variable is directly retrieved from the http request parameter startIp. Then v13 will be splice to stack by function sscanf without any security check, which causes stack overflow. By POSTing the page /goform/SetPptpServerCfg with proper startIp, the attacker can easily perform remote code execution with carefully crafted overflow data.\n\n- CVE-2021-46408: Tenda AX12 v22.03.01.21 was discovered to contain a stack buffer overflow in the function sub_422CE4. This vulnerability allows attackers to cause a Denial of Service (DoS) via the strcpy parameter.\n\n- CVE-2021-46699: A vulnerability has been identified in Simcenter Femap (All versions < V2022.1.1). Affected application contains a stack based buffer overflow vulnerability while parsing specially crafted BDF files. This could allow an attacker to execute code in the context of the current process. (ZDI-CAN-15061)\n\n- CVE-2022-0435: A stack overflow flaw was found in the Linux kernel's TIPC protocol functionality in the way a user sends a packet with malicious content where the number of domain member nodes is higher than the 64 allowed. This flaw allows a remote user to crash the system or possibly escalate their privileges if they have access to the TIPC network.\n\n- CVE-2022-0903: A call stack overflow bug in the SAML login feature in Mattermost server in versions up to and including 6.3.2 allows an attacker to crash the server via submitting a maliciously crafted POST body.\n\n- CVE-2022-0904: A stack overflow bug in the document extractor in Mattermost Server in versions up to and including 6.3.2 allows an attacker to crash the server via submitting a maliciously crafted Apple Pages document.\n\n- CVE-2022-1068: Modbus Tools Modbus Slave (versions 7.4.2 and prior) is vulnerable to a stack-based buffer overflow in the registration field. This may cause the program to crash when a long character string is used.\n\n- CVE-2022-1211: A vulnerability classified as critical has been found in tildearrow Furnace dev73. This affects the FUR to VGM converter in console mode which causes stack-based overflows and crashes. It is possible to initiate the attack remotely but it requires user-interaction. A POC has been disclosed to the public and may be used.\n\n- CVE-2022-1888: Alpha7 PC Loader (All versions) is vulnerable to a stack-based buffer overflow while processing a specifically crafted project file, which may allow an attacker to execute arbitrary code.\n\n- CVE-2022-20030: In vow driver, there is a possible out of bounds write due to a stack-based buffer overflow. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS05837793; Issue ID: ALPS05837793.\n\n- CVE-2022-20040: In power_hal_manager_service, there is a possible permission bypass due to a stack-based buffer overflow. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS06219150; Issue ID: ALPS06219150.\n\n- CVE-2022-20105: In MM service, there is a possible out of bounds write due to a stack-based buffer overflow. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: DTV03330460; Issue ID: DTV03330460.\n\n- CVE-2022-20108: In voice service, there is a possible out of bounds write due to a stack-based buffer overflow. This could lead to local escalation of privilege with System execution privileges needed. User interaction is not needed for exploitation. Patch ID: DTV03330702; Issue ID: DTV03330702.\n\n- CVE-2022-25308: A stack-based buffer overflow flaw was found in the Fribidi package. This flaw allows an attacker to pass a specially crafted file to the Fribidi application, which leads to a possible memory leak or a denial of service.\n\n- CVE-2022-25427: Tenda AC9 v15.03.2.21 was discovered to contain a stack overflow via the schedendtime parameter in the openSchedWifi function.\n\n- CVE-2022-25428: Tenda AC9 v15.03.2.21 was discovered to contain a stack overflow via the deviceId parameter in the saveparentcontrolinfo function.\n\n- CVE-2022-25429: Tenda AC9 v15.03.2.21 was discovered to contain a buffer overflow via the time parameter in the saveparentcontrolinfo function.\n\n- CVE-2022-25431: Tenda AC9 v15.03.2.21 was discovered to contain multiple stack overflows via the NPTR, V12, V10 and V11 parameter in the Formsetqosband function.\n\n- CVE-2022-25433: Tenda AC9 v15.03.2.21 was discovered to contain a stack overflow via the urls parameter in the saveparentcontrolinfo function.\n\n- CVE-2022-25434: Tenda AC9 v15.03.2.21 was discovered to contain a stack overflow via the firewallen parameter in the SetFirewallCfg function.\n\n- CVE-2022-25435: Tenda AC9 v15.03.2.21 was discovered to contain a stack overflow via the list parameter in the SetStaticRoutecfg function.\n\n- CVE-2022-25437: Tenda AC9 v15.03.2.21 was discovered to contain a stack overflow via the list parameter in the SetVirtualServerCfg function.\n\n- CVE-2022-25439: Tenda AC9 v15.03.2.21 was discovered to contain a stack overflow via the list parameter in the SetIpMacBind function.\n\n- CVE-2022-25440: Tenda AC9 v15.03.2.21 was discovered to contain a stack overflow via the ntpserver parameter in the SetSysTimeCfg function.\n\n- CVE-2022-28556: Tenda AC15 US_AC15V1.0BR_V15.03.05.20_multi_TDE01.bin is vulnerable to Buffer Overflow. The stack overflow vulnerability lies in the /goform/setpptpservercfg interface of the web. The sent post data startip and endip are copied to the stack using the sanf function, resulting in stack overflow. Similarly, this vulnerability can be used together with CVE-2021-44971\n\n- CVE-2022-29395: TOTOLINK N600R V4.3.0cu.7647_B20210106 was discovered to contain a stack overflow via the apcliKey parameter in the function FUN_0041bac4.\n\n- CVE-2022-29396: TOTOLINK N600R V4.3.0cu.7647_B20210106 was discovered to contain a stack overflow via the comment parameter in the function FUN_00418f10.\n\n- CVE-2022-29397: TOTOLINK N600R V4.3.0cu.7647_B20210106 was discovered to contain a stack overflow via the comment parameter in the function FUN_004196c8.\n\n- CVE-2022-29398: TOTOLINK N600R V4.3.0cu.7647_B20210106 was discovered to contain a stack overflow via the File parameter in the function FUN_0041309c.\n\n- CVE-2022-29399: TOTOLINK N600R V4.3.0cu.7647_B20210106 was discovered to contain a stack overflow via the url parameter in the function FUN_00415bf0.\n\n- CVE-2022-29496: A stack-based buffer overflow vulnerability exists in the BlynkConsole.h runCommand functionality of Blynk -Library v1.0.1. A specially-crafted network request can lead to command execution. An attacker can send a network request to trigger this vulnerability.\n\n- CVE-2022-29638: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a stack overflow via the comment parameter in the function setIpQosRules. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted POST request.\n\n- CVE-2022-29640: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a stack overflow via the comment parameter in the function setPortForwardRules. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted POST request.\n\n- CVE-2022-29641: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a stack overflow via the startTime and endTime parameters in the function setParentalRules. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted POST request.\n\n- CVE-2022-29642: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a stack overflow via the url parameter in the function setUrlFilterRules. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted POST request.\n\n- CVE-2022-29643: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a stack overflow via the macAddress parameter in the function setMacQos. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted POST request.\n\n- CVE-2022-2972: MZ Automation's libIEC61850 (versions 1.4 and prior; version 1.5 prior to commit a3b04b7bc4872a5a39e5de3fdc5fbde52c09e10e) is vulnerable to a stack-based buffer overflow, which could allow an attacker to crash the device or remotely execute arbitrary code.\n\n- CVE-2022-29776: Onlyoffice Document Server v6.0.0 and below and Core 6.1.0.26 and below were discovered to contain a stack overflow via the component DesktopEditor/common/File.cpp.\n\n- CVE-2022-30040: Tenda AX1803 v1.0.0.1_2890 is vulnerable to Buffer Overflow. The vulnerability lies in rootfs_ In / goform / setsystimecfg of / bin / tdhttpd in ubif file system, attackers can access http://ip/goform/SetSysTimeCfg, and by setting the ntpserve parameter, the stack buffer overflow can be caused to achieve the effect of router denial of service.\n\n- CVE-2022-30306: A stack-based buffer overflow vulnerability [CWE-121] in the CA sign functionality of FortiWeb version 7.0.1 and below, 6.4 all versions, version 6.3.19 and below may allow an authenticated attacker to achieve arbitrary code execution via specifically crafted password.\n\n- CVE-2022-30426: There is a stack buffer overflow vulnerability, which could lead to arbitrary code execution in UEFI DXE driver on some Acer products. An attack could exploit this vulnerability to escalate privilege from ring 3 to ring 0, and hijack control flow during UEFI DXE execution. This affects Altos T110 F3 firmware version <= P13 (latest) and AP130 F2 firmware version <= P04 (latest) and Aspire 1600X firmware version <= P11.A3L (latest) and Aspire 1602M firmware version <= P11.A3L (latest) and Aspire 7600U firmware version <= P11.A4 (latest) and Aspire MC605 firmware version <= P11.A4L (latest) and Aspire TC-105 firmware version <= P12.B0L (latest) and Aspire TC-120 firmware version <= P11-A4 (latest) and Aspire U5-620 firmware version <= P11.A1 (latest) and Aspire X1935 firmware version <= P11.A3L (latest) and Aspire X3475 firmware version <= P11.A3L (latest) and Aspire X3995 firmware version <= P11.A3L (latest) and Aspire XC100 firmware version <= P11.B3 (latest) and Aspire XC600 firmware version <= P11.A4 (latest) and Aspire Z3-615 firmware version <= P11.A2L (latest) and Veriton E430G firmware version <= P21.A1 (latest) and Veriton B630_49 firmware version <= AAP02SR (latest) and Veriton E430 firmware version <= P11.A4 (latest) and Veriton M2110G firmware version <= P21.A3 (latest) and Veriton M2120G fir.\n\n- CVE-2022-30472: Tenda AC Seris Router AC18_V15.03.05.19(6318) has a stack-based buffer overflow vulnerability in function fromAddressNat\n\n- CVE-2022-30473: Tenda AC Series Router AC18_V15.03.05.19(6318) has a stack-based buffer overflow vulnerability in function form_fast_setting_wifi_set\n\n- CVE-2022-30475: Tenda AC Series Router AC18_V15.03.05.19(6318) was discovered to contain a stack-based buffer overflow in the httpd module when handling /goform/WifiExtraSet request.\n\n- CVE-2022-30476: Tenda AC Series Router AC18_V15.03.05.19(6318) was discovered to contain a stack-based buffer overflow in the httpd module when handling /goform/SetFirewallCfg request.\n\n- CVE-2022-31031: PJSIP is a free and open source multimedia communication library written in C language implementing standard based protocols such as SIP, SDP, RTP, STUN, TURN, and ICE. In versions prior to and including 2.12.1 a stack buffer overflow vulnerability affects PJSIP users that use STUN in their applications, either by: setting a STUN server in their account/media config in PJSUA/PJSUA2 level, or directly using `pjlib-util/stun_simple` API. A patch is available in commit 450baca which should be included in the next release. There are no known workarounds for this issue.\n\n- CVE-2022-32030: Tenda AX1806 v1.0.0.1 was discovered to contain a stack overflow via the list parameter in the function formSetQosBand.\n\n- CVE-2022-32031: Tenda AX1806 v1.0.0.1 was discovered to contain a stack overflow via the list parameter in the function fromSetRouteStatic.\n\n- CVE-2022-32037: Tenda M3 V1.0.0.12 was discovered to contain a stack overflow via the function formSetAPCfg.\n\n- CVE-2022-32039: Tenda M3 V1.0.0.12 was discovered to contain a stack overflow via the listN parameter in the function fromDhcpListClient.\n\n- CVE-2022-32040: Tenda M3 V1.0.0.12 was discovered to contain a stack overflow via the function formSetCfm.\n\n- CVE-2022-32041: Tenda M3 V1.0.0.12 was discovered to contain a stack overflow via the function formGetPassengerAnalyseData.\n\n- CVE-2022-32043: Tenda M3 V1.0.0.12 was discovered to contain a stack overflow via the function formSetAccessCodeInfo.\n\n- CVE-2022-32044: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the password parameter in the function FUN_00413f80.\n\n- CVE-2022-32045: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the desc parameter in the function FUN_00413be4.\n\n- CVE-2022-32046: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the desc parameter in the function FUN_0041880c.\n\n- CVE-2022-32047: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the desc parameter in the function FUN_00412ef4.\n\n- CVE-2022-32048: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the command parameter in the function FUN_0041cc88.\n\n- CVE-2022-32049: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the url parameter in the function FUN_00418540.\n\n- CVE-2022-32050: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the cloneMac parameter in the function FUN_0041af40.\n\n- CVE-2022-32051: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the desc, week, sTime, eTime parameters in the function FUN_004133c4.\n\n- CVE-2022-32052: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the desc parameter in the function FUN_004137a4.\n\n- CVE-2022-32053: TOTOLINK T6 V4.1.9cu.5179_B20201015 was discovered to contain a stack overflow via the cloneMac parameter in the function FUN_0041621c.\n\n- CVE-2022-33183: A vulnerability in Brocade Fabric OS CLI before Brocade Fabric OS v9.1.0, 9.0.1e, 8.2.3c, 8.2.0cbn5, 7.4.2.j could allow a remote authenticated attacker to perform stack buffer overflow using in \u201cfirmwaredownload\u201d and \u201cdiagshow\u201d commands.\n\n- CVE-2022-34287: A vulnerability has been identified in PADS Standard/Plus Viewer (All versions). The affected application contains a stack corruption vulnerability while parsing PCB files. An attacker could leverage this vulnerability to leak information in the context of the current process. (FG-VD-22-052, FG-VD-22-056)\n\n- CVE-2022-34290: A vulnerability has been identified in PADS Standard/Plus Viewer (All versions). The affected application contains a stack corruption vulnerability while parsing PCB files. An attacker could leverage this vulnerability to leak information in the context of the current process. (FG-VD-22-055)\n\n- CVE-2022-34291: A vulnerability has been identified in PADS Standard/Plus Viewer (All versions). The affected application contains a stack corruption vulnerability while parsing PCB files. An attacker could leverage this vulnerability to leak information in the context of the current process. (FG-VD-22-057, FG-VD-22-058, FG-VD-22-060)\n\n- CVE-2022-35407: An issue was discovered in Insyde InsydeH2O with kernel 5.0 through 5.5. A stack buffer overflow leads to arbitrary code execution in the SetupUtility driver on Intel platforms. An attacker can change the values of certain UEFI variables. If the size of the second variable exceeds the size of the first, then the buffer will be overwritten. This issue affects the SetupUtility driver of InsydeH2O.\n\n- CVE-2022-35690: Adobe ColdFusion versions Update 14 (and earlier) and Update 4 (and earlier) are affected by a Stack-based Buffer Overflow vulnerability that could result in arbitrary code execution in the context of the current user. Exploitation of this issue does not require user interaction, the vulnerability is triggered when a crafted network packet is sent to the server.\n\n- CVE-2022-35710: Adobe ColdFusion versions Update 14 (and earlier) and Update 4 (and earlier) are affected by a Stack-based Buffer Overflow vulnerability that could result in arbitrary code execution in the context of the current user. Exploitation of this issue does not require user interaction, the vulnerability is triggered when a crafted network packet is sent to the server.\n\n- CVE-2022-3602: A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed the malicious certificate or for the application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address to overflow four attacker-controlled bytes on the stack. This buffer overflow could result in a crash (causing a denial of service) or potentially remote code execution. Many platforms implement stack overflow protections which would mitigate against the risk of remote code execution. The risk may be further mitigated based on stack layout for any given platform/compiler. Pre-announcements of CVE-2022-3602 described this issue as CRITICAL. Further analysis based on some of the mitigating factors described above have led this to be downgraded to HIGH. Users are still encouraged to upgrade to a new version as soon as possible. In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects. Fixed in OpenSSL 3.0.7 (Affected 3.0.0,3.0.1,3.0.2,3.0.3,3.0.4,3.0.5,3.0.6).\n\n- CVE-2022-37415: The Uniwill SparkIO.sys driver 1.0 is vulnerable to a stack-based buffer overflow via IOCTL 0x40002008.\n\n- CVE-2022-39803: Due to lack of proper memory management, when a victim opens a manipulated ACIS Part and Assembly (.sat, CoreCadTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-39804: Due to lack of proper memory management, when a victim opens a manipulated SolidWorks Part (.sldprt, CoreCadTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-39805: Due to lack of proper memory management, when a victim opens a manipulated Computer Graphics Metafile (.cgm, CgmTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-39806: Due to lack of proper memory management, when a victim opens a manipulated SolidWorks Drawing (.slddrw, CoreCadTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-39808: Due to lack of proper memory management, when a victim opens a manipulated Wavefront Object (.obj, ObjTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41167: Due to lack of proper memory management, when a victim opens a manipulated AutoCAD (.dwg, TeighaTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41168: Due to lack of proper memory management, when a victim opens a manipulated CATIA5 Part (.catpart, CatiaTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41170: Due to lack of proper memory management, when a victim opens a manipulated CATIA4 Part (.model, CatiaTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41172: Due to lack of proper memory management, when a victim opens a manipulated AutoCAD (.dxf, TeighaTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41175: Due to lack of proper memory management, when a victim opens a manipulated Enhanced Metafile (.emf, emf.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41177: Due to lack of proper memory management, when a victim opens a manipulated Iges Part and Assembly (.igs, .iges, CoreCadTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41179: Due to lack of proper memory management, when a victim opens a manipulated Jupiter Tesselation (.jt, JtTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41180: Due to lack of proper memory management, when a victim opens a manipulated Portable Document Format (.pdf, PDFPublishing.dll) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41184: Due to lack of proper memory management, when a victim opens a manipulated Windows Cursor File (.cur, ico.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41185: Due to lack of proper memory management, when a victim opens a manipulated Visual Design Stream (.vds, MataiPersistence.dll) file received from untrusted sources in SAP 3D Visual Enterprise Author - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41186: Due to lack of proper memory management, when a victim opens manipulated Computer Graphics Metafile (.cgm, CgmCore.dll) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, a Remote Code Execution can be triggered when payload forces a stack-based overflow and or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41187: Due to lack of proper memory management, when a victim opens a manipulated Wavefront Object (.obj, ObjTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41189: Due to lack of proper memory management, when a victim opens a manipulated AutoCAD (.dwg, TeighaTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41190: Due to lack of proper memory management, when a victim opens a manipulated AutoCAD (.dxf, TeighaTranslator.exe) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41191: Due to lack of proper memory management, when a victim opens a manipulated Jupiter Tesselation (.jt, JTReader.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41193: Due to lack of proper memory management, when a victim opens a manipulated Encapsulated Post Script (.eps, ai.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41195: Due to lack of proper memory management, when a victim opens a manipulated EAAmiga Interchange File Format (.iff, 2d.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41196: Due to lack of proper memory management, when a victim opens a manipulated VRML Worlds (.wrl, vrml.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41198: Due to lack of proper memory management, when a victim opens a manipulated SketchUp (.skp, SketchUp.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41199: Due to lack of proper memory management, when a victim opens a manipulated Open Inventor File (.iv, vrml.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41200: Due to lack of proper memory management, when a victim opens a manipulated Scalable Vector Graphic (.svg, svg.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41201: Due to lack of proper memory management, when a victim opens a manipulated Right Hemisphere Binary (.rh, rh.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41202: Due to lack of proper memory management, when a victim opens a manipulated Visual Design Stream (.vds, vds.x3d) file received from untrusted sources in SAP 3D Visual Enterprise Viewer - version 9, it is possible that a Remote Code Execution can be triggered when payload forces a stack-based overflow or a re-use of dangling pointer which refers to overwritten space in memory. \n\n- CVE-2022-41211: Due to lack of proper memory management, when a victim opens manipulated file received from untrusted sources in SAP 3D Visual Enterprise Author and SAP 3D Visual Enterprise Viewer, Arbitrary Code Execution can be triggered when payload forces:Re-use of dangling pointer which refers to overwritten space in memory. The accessed memory must be filled with code to execute the attack. Therefore, repeated success is unlikely.Stack-based buffer overflow. Since the memory overwritten is random, based on access rights of the memory, repeated success is not assured. \n\n- CVE-2022-41415: Acer Altos W2000h-W570h F4 R01.03.0018 was discovered to contain a stack overflow in the RevserveMem component. This vulnerability allows attackers to cause a Denial of Service (DoS) via injecting crafted shellcode into the NVRAM variable.\n\n- CVE-2022-41420: nasm v2.16 was discovered to contain a stack overflow in the Ndisasm component\n\n- CVE-2022-41517: TOTOLINK NR1800X V9.1.0u.6279_B20210910 was discovered to contain a stack overflow in the lang parameter in the setLanguageCfg function\n\n- CVE-2022-41520: TOTOLINK NR1800X V9.1.0u.6279_B20210910 was discovered to contain an authenticated stack overflow via the File parameter in the UploadCustomModule function.\n\n- CVE-2022-41521: TOTOLINK NR1800X V9.1.0u.6279_B20210910 was discovered to contain an authenticated stack overflow via the sPort/ePort parameter in the setIpPortFilterRules function.\n\n- CVE-2022-41522: TOTOLINK NR1800X V9.1.0u.6279_B20210910 was discovered to contain an unauthenticated stack overflow via the \"main\" function.\n\n- CVE-2022-41523: TOTOLINK NR1800X V9.1.0u.6279_B20210910 was discovered to contain an authenticated stack overflow via the command parameter in the setTracerouteCfg function.\n\n- CVE-2022-41524: TOTOLINK NR1800X V9.1.0u.6279_B20210910 was discovered to contain an authenticated stack overflow via the week, sTime, and eTime parameters in the setParentalRules function.\n\n- CVE-2022-35506: TripleCross v0.1.0 was discovered to contain a stack overflow which occurs because there is no limit to the length of program parameters.\n\n- CVE-2022-35558: A stack overflow vulnerability exists in /goform/WifiMacFilterGet in Tenda W6 V1.0.0.9(4122) version, which can be exploited by attackers to cause a denial of service (DoS) via the index parameter.\n\n- CVE-2022-35559: A stack overflow vulnerability exists in /goform/setAutoPing in Tenda W6 V1.0.0.9(4122), which allows an attacker to construct ping1 parameters and ping2 parameters for a stack overflow attack. An attacker can use this vulnerability to execute arbitrary code execution.\n\n- CVE-2022-35560: A stack overflow vulnerability exists in /goform/wifiSSIDset in Tenda W6 V1.0.0.9(4122) version, which can be exploited by attackers to cause a denial of service (DoS) via the index parameter.\n\n- CVE-2022-35561: A stack overflow vulnerability exists in /goform/WifiMacFilterSet in Tenda W6 V1.0.0.9(4122) version, which can be exploited by attackers to cause a denial of service (DoS) via the index parameter.\n\n- CVE-2022-39173: In wolfSSL before 5.5.1, malicious clients can cause a buffer overflow during a TLS 1.3 handshake. This occurs when an attacker supposedly resumes a previous TLS session. During the resumption Client Hello a Hello Retry Request must be triggered. Both Client Hellos are required to contain a list of duplicate cipher suites to trigger the buffer overflow. In total, two Client Hellos have to be sent: one in the resumed session, and a second one as a response to a Hello Retry Request message.\n\n- CVE-2022-37078: TOTOLINK A7000R V9.1.0u.6115_B20201022 was discovered to contain a command injection vulnerability via the lang parameter at /setting/setLanguageCfg.\n\n- CVE-2022-1185: A denial of service vulnerability when rendering RDoc files in GitLab CE/EE versions 10 to 14.7.7, 14.8.0 to 14.8.5, and 14.9.0 to 14.9.2 allows an attacker to crash the GitLab web application with a maliciously crafted RDoc file\n\n- CVE-2022-22899: Core FTP / SFTP Server v2 Build 725 was discovered to allow unauthenticated attackers to cause a Denial of Service (DoS) via a crafted packet through the SSH service.\n\n- CVE-2022-41842: An issue was discovered in Xpdf 4.04. There is a crash in gfseek(_IO_FILE*, long, int) in goo/gfile.cc.\n\n- CVE-2022-41844: An issue was discovered in Xpdf 4.04. There is a crash in XRef::fetch(int, int, Object*, int) in xpdf/XRef.cc, a different vulnerability than CVE-2018-16369 and CVE-2019-16088.\n\nRelated Weaknesses:\n\n- CWE-788 (ChildOf)\n\n- CWE-787 (ChildOf)",
        "type": "Variant",
        "source": "sparse",
        "search_source": "weakness:command injection",
        "sources": [
          "base",
          "weakness"
        ],
        "boost_factor": 2.8,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          }
        }
      },
      {
        "cwe_id": "426",
        "name": "Untrusted Search Path",
        "description": "The product searches for critical resources using an externally-supplied search path that can point to resources that are not under the product's direct control.",
        "score": 94.56104726448638,
        "matched_text": "CWE-426: Untrusted Search Path\n\nType: Base\n\nStatus: Stable\n\nAlternative Terms:\n\nUntrusted Path\n\nUntrusted Path\n\nUntrusted Path\n\nDescription:\n\nThe product searches for critical resources using an externally-supplied search path that can point to resources that are not under the product's direct control.\n\nExtended Details:\n\n\n\nThis might allow attackers to execute their own programs, access unauthorized data files, or modify configuration in unexpected ways. If the product uses a search path to locate critical resources such as programs, then an attacker could modify that search path to point to a malicious program, which the targeted product would then execute. The problem extends to any type of critical resource that the product trusts.\n\n\nSome of the most common variants of untrusted search path are:\n\n\n  - In various UNIX and Linux-based systems, the PATH environment variable may be consulted to locate executable programs, and LD_PRELOAD may be used to locate a separate library.\n\n  - In various Microsoft-based systems, the PATH environment variable is consulted to locate a DLL, if the DLL is not found in other paths that appear earlier in the search order.\n\n\n\nReal-World Examples:\n\n- CVE-1999-1120: Application relies on its PATH environment variable to find and execute program.\n\n- CVE-2008-1810: Database application relies on its PATH environment variable to find and execute program.\n\n- CVE-2007-2027: Chain: untrusted search path enabling resultant format string by loading malicious internationalization messages.\n\n- CVE-2008-3485: Untrusted search path using malicious .EXE in Windows environment.\n\n- CVE-2008-2613: setuid program allows compromise using path that finds and loads a malicious library.\n\n- CVE-2008-1319: Server allows client to specify the search path, which can be modified to point to a program that the client has uploaded.\n\nTop 25 CWE Examples:\n\n- CVE-2021-41387: seatd-launch in seatd 0.6.x before 0.6.2 allows privilege escalation because it uses execlp and may be installed setuid root.\n\n- CVE-2021-28249: CA eHealth Performance Manager through 6.3.2.12 is affected by Privilege Escalation via a Dynamically Linked Shared Object Library. To exploit the vulnerability, the ehealth user must create a malicious library in the writable RPATH, to be dynamically linked when the FtpCollector executable is run. The code in the library will be executed as the root user. NOTE: This vulnerability only affects products that are no longer supported by the maintainer\n\n- CVE-2022-22047: Windows Client Server Run-time Subsystem (CSRSS) Elevation of Privilege Vulnerability\n\n- CVE-2021-3305: Beijing Feishu Technology Co., Ltd Feishu v3.40.3 was discovered to contain an untrusted search path vulnerability.\n\n- CVE-2022-36403: Untrusted search path vulnerability in the installer of Device Software Manager prior to Ver.2.20.3.0 allows an attacker to gain privileges via a Trojan horse DLL in an unspecified directory.\n\n- CVE-2021-36666: An issue was discovered in Druva 6.9.0 for MacOS, allows attackers to gain escalated local privileges via the inSyncDecommission.\n\n- CVE-2022-38060: A privilege escalation vulnerability exists in the sudo functionality of OpenStack Kolla git master 05194e7618. A misconfiguration in /etc/sudoers within a container can lead to increased privileges.\n\n- CVE-2022-25366: Cryptomator through 1.6.5 allows DYLIB injection because, although it has the flag 0x1000 for Hardened Runtime, it has the com.apple.security.cs.disable-library-validation and com.apple.security.cs.allow-dyld-environment-variables entitlements. An attacker can exploit this by creating a malicious .dylib file that can be executed via the DYLD_INSERT_LIBRARIES environment variable.\n\n- CVE-2022-39245: Mist is the command-line interface for the makedeb Package Repository. Prior to version 0.9.5, a user-provided `sudo` binary via the `PATH` variable can allow a local user to run arbitrary commands on the user's system with root permissions. Versions 0.9.5 and later contain a patch. No known workarounds exist.\n\n- CVE-2021-21817: An information disclosure vulnerability exists in the Zebra IP Routing Manager functionality of D-LINK DIR-3040 1.13B03. A specially crafted network request can lead to the disclosure of sensitive information. An attacker can send a sequence of requests to trigger this vulnerability.\n\nRelated Weaknesses:\n\n- CWE-642 (ChildOf)\n\n- CWE-668 (ChildOf)\n\n- CWE-673 (ChildOf)\n\n- CWE-427 (PeerOf)\n\n- CWE-428 (PeerOf)",
        "type": "Base",
        "source": "sparse",
        "search_source": "weakness:command injection",
        "sources": [
          "base",
          "weakness"
        ],
        "boost_factor": 2.8,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          }
        }
      },
      {
        "cwe_id": "138",
        "name": "Improper Neutralization of Special Elements",
        "description": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.",
        "score": 91.22587651898233,
        "matched_text": "CWE-138: Improper Neutralization of Special Elements\n\nType: Class\n\nStatus: Draft\n\nDescription:\n\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n\nExtended Details:\n\nMost languages and protocols have their own special elements such as characters and reserved words. These special elements can carry control implications. If product does not prevent external control or influence over the inclusion of such special elements, the control flow of the program may be altered from what was intended. For example, both Unix and Windows interpret the symbol < (\"less than\") as meaning \"read input from a file\".\n\nReal-World Examples:\n\n- CVE-2001-0677: Read arbitrary files from mail client by providing a special MIME header that is internally used to store pathnames for attachments.\n\n- CVE-2000-0703: Setuid program does not cleanse special escape sequence before sending data to a mail program, causing the mail program to process those sequences.\n\n- CVE-2003-0020: Multi-channel issue. Terminal escape sequences not filtered from log files.\n\n- CVE-2003-0083: Multi-channel issue. Terminal escape sequences not filtered from log files.\n\nTop 25 CWE Examples:\n\n- CVE-2021-33592: NAVER Toolbar before 4.0.30.323 allows remote attackers to execute arbitrary code via a crafted upgrade.xml file. Special characters in filename parameter can be the cause of bypassing code signing check function.\n\n- CVE-2022-0661: The Ad Injection WordPress plugin through 1.2.0.19 does not properly sanitize the body of the adverts injected into the pages, allowing a high privileged user (Admin+) to inject arbitrary HTML or javascript even with unfiltered_html disallowed, leading to a stored cross-site scripting (XSS) vulnerability. Further it is also possible to inject PHP code, leading to a Remote Code execution (RCE) vulnerability, even if the DISALLOW_FILE_EDIT and DISALLOW_FILE_MOD constants are both set.\n\n- CVE-2022-35651: A stored XSS and blind SSRF vulnerability was found in Moodle, occurs due to insufficient sanitization of user-supplied data in the SCORM track details. A remote attacker can trick the victim to follow a specially crafted link and execute arbitrary HTML and script code in user's browser in context of vulnerable website to steal potentially sensitive information, change appearance of the web page, can perform phishing and drive-by-download attacks.\n\n- CVE-2022-36325: Affected devices do not properly sanitize data introduced by an user when rendering the web interface. This could allow an authenticated remote attacker with administrative privileges to inject code and lead to a DOM-based XSS.\n\n- CVE-2022-4029: The Simple:Press plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the 'sforum_[md5 hash of the WordPress URL]' cookie value in versions up to, and including, 6.8 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link. This would be highly complex to exploit as it would require the attacker to set the cookie a cookie for the targeted user.\n\n- CVE-2022-24720: image_processing is an image processing wrapper for libvips and ImageMagick/GraphicsMagick. Prior to version 1.12.2, using the `#apply` method from image_processing to apply a series of operations that are coming from unsanitized user input allows the attacker to execute shell commands. This method is called internally by Active Storage variants, so Active Storage is vulnerable as well. The vulnerability has been fixed in version 1.12.2 of image_processing. As a workaround, users who process based on user input should always sanitize the user input by allowing only a constrained set of operations.\n\n- CVE-2021-25296: Nagios XI version xi-5.7.5 is affected by OS command injection. The vulnerability exists in the file /usr/local/nagiosxi/html/includes/configwizards/windowswmi/windowswmi.inc.php due to improper sanitization of authenticated user-controlled input by a single HTTP request, which can lead to OS command injection on the Nagios XI server.\n\n- CVE-2021-25297: Nagios XI version xi-5.7.5 is affected by OS command injection. The vulnerability exists in the file /usr/local/nagiosxi/html/includes/configwizards/switch/switch.inc.php due to improper sanitization of authenticated user-controlled input by a single HTTP request, which can lead to OS command injection on the Nagios XI server.\n\n- CVE-2021-25298: Nagios XI version xi-5.7.5 is affected by OS command injection. The vulnerability exists in the file /usr/local/nagiosxi/html/includes/configwizards/cloud-vm/cloud-vm.inc.php due to improper sanitization of authenticated user-controlled input by a single HTTP request, which can lead to OS command injection on the Nagios XI server.\n\n- CVE-2021-27101: Accellion FTA 9_12_370 and earlier is affected by SQL injection via a crafted Host header in a request to document_root.html. The fixed version is FTA_9_12_380 and later.\n\n- CVE-2021-35394: Realtek Jungle SDK version v2.x up to v3.4.14B provides a diagnostic tool called 'MP Daemon' that is usually compiled as 'UDPServer' binary. The binary is affected by multiple memory corruption vulnerabilities and an arbitrary command injection vulnerability that can be exploited by remote unauthenticated attackers.\n\n- CVE-2022-26352: An issue was discovered in the ContentResource API in dotCMS 3.0 through 22.02. Attackers can craft a multipart form request to post a file whose filename is not initially sanitized. This allows directory traversal, in which the file is saved outside of the intended storage location. If anonymous content creation is enabled, this allows an unauthenticated attacker to upload an executable file, such as a .jsp file, that can lead to remote code execution.\n\n- CVE-2022-27926: A reflected cross-site scripting (XSS) vulnerability in the /public/launchNewWindow.jsp component of Zimbra Collaboration (aka ZCS) 9.0 allows unauthenticated attackers to execute arbitrary web script or HTML via request parameters.\n\n- CVE-2022-22221: An Improper Neutralization of Special Elements vulnerability in the download manager of Juniper Networks Junos OS on SRX Series and EX Series allows a locally authenticated attacker with low privileges to take full control over the device. One aspect of this vulnerability is that the attacker needs to be able to execute any of the \"request ...\" or \"show system download ...\" commands. This issue affects Juniper Networks Junos OS on SRX Series and EX Series: All versions prior to 19.2R1-S9, 19.2R3-S5; 19.3 versions prior to 19.3R3-S6; 19.4 versions prior to 19.4R3-S8; 20.1 versions prior to 20.1R3-S4; 20.2 versions prior to 20.2R3-S4; 20.3 versions prior to 20.3R3-S3; 20.4 versions prior to 20.4R3-S2, 20.4R3-S3; 21.1 versions prior to 21.1R3-S1; 21.2 versions prior to 21.2R2-S2, 21.2R3; 21.3 versions prior to 21.3R2, 21.3R3; 21.4 versions prior to 21.4R1-S1, 21.4R2.\n\n- CVE-2022-3047: Insufficient policy enforcement in Extensions API in Google Chrome prior to 105.0.5195.52 allowed an attacker who convinced a user to install a malicious extension to bypass downloads policy via a crafted HTML page.\n\n- CVE-2022-21705: Octobercms is a self-hosted CMS platform based on the Laravel PHP Framework. In affected versions user input was not properly sanitized before rendering. An authenticated user with the permissions to create, modify and delete website pages can exploit this vulnerability to bypass `cms.safe_mode` / `cms.enableSafeMode` in order to execute arbitrary code. This issue only affects admin panels that rely on safe mode and restricted permissions. To exploit this vulnerability, an attacker must first have access to the backend area. The issue has been patched in Build 474 (v1.0.474) and v1.1.10. Users unable to upgrade should apply https://github.com/octobercms/library/commit/c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe to your installation manually.\n\n- CVE-2022-24039: A vulnerability has been identified in Desigo PXC4 (All versions < V02.20.142.10-10884), Desigo PXC5 (All versions < V02.20.142.10-10884). The \u201caddCell\u201d JavaScript function fails to properly sanitize user-controllable input before including it into the generated XML body of the XLS report document, such that it is possible to inject arbitrary content (e.g., XML tags) into the generated file. An attacker with restricted privileges, by poisoning any of the content used to generate XLS reports, could be able to leverage the application to deliver malicious files against higher-privileged users and obtain Remote Code Execution (RCE) against the administrator\u2019s workstation.\n\n- CVE-2022-35948: undici is an HTTP/1.1 client, written from scratch for Node.js.`=< undici@5.8.0` users are vulnerable to _CRLF Injection_ on headers when using unsanitized input as request headers, more specifically, inside the `content-type` header. Example: ``` import { request } from 'undici' const unsanitizedContentTypeInput = 'application/json\\\\r\\\\n\\\\r\\\\nGET /foo2 HTTP/1.1' await request('http://localhost:3000, { method: 'GET', headers: { 'content-type': unsanitizedContentTypeInput }, }) ``` The above snippet will perform two requests in a single `request` API call: 1) `http://localhost:3000/` 2) `http://localhost:3000/foo2` This issue was patched in Undici v5.8.1. Sanitize input when sending content-type headers using user input as a workaround.\n\n- CVE-2021-24942: The Menu Item Visibility Control WordPress plugin through 0.5 doesn't sanitize and validate the \"Visibility logic\" option for WordPress menu items, which could allow highly privileged users to execute arbitrary PHP code even in a hardened environment.\n\n- CVE-2022-0819: Code Injection in GitHub repository dolibarr/dolibarr prior to 15.0.1.\n\n- CVE-2022-25644: All versions of package @pendo324/get-process-by-name are vulnerable to Arbitrary Code Execution due to improper sanitization of getProcessByName function.\n\n- CVE-2022-46161: pdfmake is an open source client/server side PDF printing in pure JavaScript. In versions up to and including 0.2.5 pdfmake contains an unsafe evaluation of user controlled input. Users of pdfmake are thus subject to arbitrary code execution in the context of the process running the pdfmake code. There are no known fixes for this issue. Users are advised to restrict access to trusted user input.\n\n- CVE-2022-46836: PHP code injection in watolib auth.php and hosttags.php in Tribe29's Checkmk <= 2.1.0p10, Checkmk <= 2.0.0p27, and Checkmk <= 1.6.0p29 allows an attacker to inject and execute PHP code which will be executed upon request of the vulnerable component.\n\n- CVE-2021-33360: An issue found in Stoqey gnuplot v.0.0.3 and earlier allows attackers to execute arbitrary code via the src/index.ts, plotCallack, child_process, and/or filePath parameter(s).\n\n- CVE-2022-0764: Arbitrary Command Injection in GitHub repository strapi/strapi prior to 4.1.0.\n\n- CVE-2022-21129: Versions of the package nemo-appium before 0.0.9 are vulnerable to Command Injection due to improper input sanitization in the 'module.exports.setup' function. **Note:** In order to exploit this vulnerability appium-running 0.1.3 has to be installed as one of nemo-appium dependencies. \n\n- CVE-2022-21165: All versions of package font-converter are vulnerable to Arbitrary Command Injection due to missing sanitization of input that potentially flows into the child_process.exec() function.\n\n- CVE-2022-21186: The package @acrontum/filesystem-template before 0.0.2 are vulnerable to Arbitrary Command Injection due to the fetchRepo API missing sanitization of the href field of external input.\n\n- CVE-2022-21191: Versions of the package global-modules-path before 3.0.0 are vulnerable to Command Injection due to missing input sanitization or other checks and sandboxes being employed to the getPath function. \n\n- CVE-2022-2143: The affected product is vulnerable to two instances of command injection, which may allow an attacker to remotely execute arbitrary code.\n\n- CVE-2022-21810: All versions of the package smartctl are vulnerable to Command Injection via the info method due to improper input sanitization. \n\n- CVE-2022-25350: All versions of the package puppet-facter are vulnerable to Command Injection via the getFact function due to improper input sanitization. \n\n- CVE-2022-25853: All versions of the package semver-tags are vulnerable to Command Injection via the getGitTagsRemote function due to improper input sanitization. \n\n- CVE-2022-25855: All versions of the package create-choo-app3 are vulnerable to Command Injection via the devInstall function due to improper user-input sanitization. \n\n- CVE-2022-25890: All versions of the package wifey are vulnerable to Command Injection via the connect() function due to improper input sanitization. \n\n- CVE-2022-25908: All versions of the package create-choo-electron are vulnerable to Command Injection via the devInstall function due to improper user-input sanitization. \n\n- CVE-2022-25916: Versions of the package mt7688-wiscan before 0.8.3 are vulnerable to Command Injection due to improper input sanitization in the 'wiscan.scan' function. \n\n- CVE-2022-25923: Versions of the package exec-local-bin before 1.2.0 are vulnerable to Command Injection via the theProcess() functionality due to improper user-input sanitization. \n\n- CVE-2022-25926: Versions of the package window-control before 1.4.5 are vulnerable to Command Injection via the sendKeys function, due to improper input sanitization. \n\n- CVE-2022-25962: All versions of the package vagrant.js are vulnerable to Command Injection via the boxAdd function due to improper input sanitization. \n\n- CVE-2022-3275: Command injection is possible in the puppetlabs-apt module prior to version 9.0.0. A malicious actor is able to exploit this vulnerability only if they are able to provide unsanitized input to the module. This condition is rare in most deployments of Puppet and Puppet Enterprise.\n\n- CVE-2022-3276: Command injection is possible in the puppetlabs-mysql module prior to version 13.0.0. A malicious actor is able to exploit this vulnerability only if they are able to provide unsanitized input to the module. This condition is rare in most deployments of Puppet and Puppet Enterprise.\n\n- CVE-2022-36267: In Airspan AirSpot 5410 version 0.3.4.1-4 and under there exists a Unauthenticated remote command injection vulnerability. The ping functionality can be called without user authentication when crafting a malicious http request by injecting code in one of the parameters allowing for remote code execution. This vulnerability is exploited via the binary file /home/www/cgi-bin/diagnostics.cgi that accepts unauthenticated requests and unsanitized data. As a result, a malicious actor can craft a specific request and interact remotely with the device.\n\n- CVE-2022-40282: The web server of Hirschmann BAT-C2 before 09.13.01.00R04 allows authenticated command injection. This allows an authenticated attacker to pass commands to the shell of the system because the dir parameter of the FsCreateDir Ajax function is not sufficiently sanitized. The vendor's ID is BSECV-2022-21.\n\n- CVE-2022-40785: Unsanitized input when setting a locale file leads to shell injection in mIPC camera firmware 5.3.1.2003161406. This allows an attacker to gain remote code execution on cameras running the firmware when a victim logs into a specially crafted mobile app.\n\n- CVE-2022-48338: An issue was discovered in GNU Emacs through 28.2. In ruby-mode.el, the ruby-find-library-file function has a local command injection vulnerability. The ruby-find-library-file function is an interactive function, and bound to C-c C-f. Inside the function, the external command gem is called through shell-command-to-string, but the feature-name parameters are not escaped. Thus, malicious Ruby source files may cause commands to be executed.\n\n- CVE-2022-36323: Affected devices do not properly sanitize an input field. This could allow an authenticated remote attacker with administrative privileges to inject code or spawn a system root shell.\n\n- CVE-2022-25921: All versions of package morgan-json are vulnerable to Arbitrary Code Execution due to missing sanitization of input passed to the Function constructor.\n\n- CVE-2021-35254: SolarWinds received a report of a vulnerability related to an input that was not sanitized in WebHelpDesk. SolarWinds has removed this input field to prevent the misuse of this input in the future.\n\n- CVE-2021-38450: The affected controllers do not properly sanitize the input containing code syntax. As a result, an attacker could craft code to alter the intended controller flow of the software.\n\n- CVE-2021-43404: An issue was discovered in FusionPBX before 4.5.30. The FAX file name may have risky characters.\n\n- CVE-2021-43405: An issue was discovered in FusionPBX before 4.5.30. The fax_extension may have risky characters (it is not constrained to be numeric).\n\n- CVE-2021-43861: Mermaid is a Javascript based diagramming and charting tool that uses Markdown-inspired text definitions and a renderer to create and modify complex diagrams. Prior to version 8.13.8, malicious diagrams can run javascript code at diagram readers' machines. Users should upgrade to version 8.13.8 to receive a patch. There are no known workarounds aside from upgrading.\n\n- CVE-2022-1414: 3scale API Management 2 does not perform adequate sanitation for user input in multiple fields. An authenticated user could use this flaw to inject scripts and possibly gain access to sensitive information or conduct further attacks.\n\n- CVE-2022-1867: Insufficient validation of untrusted input in Data Transfer in Google Chrome prior to 102.0.5005.61 allowed a remote attacker to bypass same origin policy via a crafted clipboard content.\n\n- CVE-2022-22589: A validation issue was addressed with improved input sanitization. This issue is fixed in iOS 15.3 and iPadOS 15.3, watchOS 8.4, tvOS 15.3, Safari 15.3, macOS Monterey 12.2. Processing a maliciously crafted mail message may lead to running arbitrary javascript.\n\n- CVE-2022-28054: Improper sanitization of trigger action scripts in VanDyke Software VShell for Windows v4.6.2 allows attackers to execute arbitrary code via a crafted value.\n\n- CVE-2022-32229: A information disclosure vulnerability exists in Rockert.Chat <v5 due to /api/v1/chat.getThreadsList lack of sanitization of user inputs and can therefore leak private thread messages to unauthorized users via Mongo DB injection.\n\n- CVE-2022-34885: An improper input sanitization vulnerability in the Motorola MR2600 router could allow a local user with elevated permissions to execute arbitrary code.\n\n- CVE-2022-20664: A vulnerability in the web management interface of Cisco Secure Email and Web Manager, formerly Cisco Security Management Appliance (SMA), and Cisco Email Security Appliance (ESA) could allow an authenticated, remote attacker to retrieve sensitive information from a Lightweight Directory Access Protocol (LDAP) external authentication server connected to an affected device. This vulnerability is due to a lack of proper input sanitization while querying the external authentication server. An attacker could exploit this vulnerability by sending a crafted query through an external authentication web page. A successful exploit could allow the attacker to gain access to sensitive information, including user credentials from the external authentication server. To exploit this vulnerability, an attacker would need valid operator-level (or higher) credentials.\n\n- CVE-2021-38703: Wireless devices running certain Arcadyan-derived firmware (such as KPN Experia WiFi 1.00.15) do not properly sanitise user input to the syslog configuration form. An authenticated remote attacker could leverage this to alter the device configuration and achieve remote code execution. This can be exploited in conjunction with CVE-2021-20090.\n\nRelated Weaknesses:\n\n- CWE-707 (ChildOf)",
        "type": "Class",
        "source": "sparse",
        "search_source": "weakness:command injection",
        "sources": [
          "base",
          "weakness"
        ],
        "boost_factor": 2.8,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Discouraged",
            "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
            "comments": "Examine children of this entry to see if there is a better fit",
            "reasons": [
              "Abstraction"
            ]
          }
        }
      },
      {
        "cwe_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "description": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "score": 91.01956869206971,
        "matched_text": "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\n\nType: Base\n\nStatus: Stable\n\nAlternative Terms:\n\nSQL injection - a common attack-oriented phrase\nSQLi - a common abbreviation for \"SQL injection\"\n\nSQL injection - a common attack-oriented phrase\nSQLi - a common abbreviation for \"SQL injection\"\n\nSQL injection - a common attack-oriented phrase\nSQLi - a common abbreviation for \"SQL injection\"\n\nDescription:\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.\n\nReal-World Examples:\n\n- CVE-2023-32530: SQL injection in security product dashboard using crafted certificate fields\n\n- CVE-2021-42258: SQL injection in time and billing software, as exploited in the wild per CISA KEV.\n\n- CVE-2021-27101: SQL injection in file-transfer system via a crafted Host header, as exploited in the wild per CISA KEV.\n\n- CVE-2020-12271: SQL injection in firewall product's admin interface or user portal, as exploited in the wild per CISA KEV.\n\n- CVE-2019-3792: An automation system written in Go contains an API that is vulnerable to SQL injection allowing the attacker to read privileged data.\n\n- CVE-2004-0366: chain: SQL injection in library intended for database authentication allows SQL injection and authentication bypass.\n\n- CVE-2008-2790: SQL injection through an ID that was supposed to be numeric.\n\n- CVE-2008-2223: SQL injection through an ID that was supposed to be numeric.\n\n- CVE-2007-6602: SQL injection via user name.\n\n- CVE-2008-5817: SQL injection via user name or password fields.\n\n- CVE-2003-0377: SQL injection in security product, using a crafted group name.\n\n- CVE-2008-2380: SQL injection in authentication library.\n\n- CVE-2017-11508: SQL injection in vulnerability management and reporting tool, using a crafted password.\n\nTop 25 CWE Examples:\n\n- CVE-2020-13587: An exploitable SQL injection vulnerability exists in the \"forms_fields_rules/rules\" page of the Rukovoditel Project Management App 2.7.2. A specially crafted HTTP request can lead to SQL injection. An attacker can make an authenticated HTTP request to trigger this vulnerability, this can be done either with administrator credentials or through cross-site request forgery.\n\n- CVE-2020-13588: An exploitable SQL injection vulnerability exists in the \u2018entities/fields\u2019 page of the Rukovoditel Project Management App 2.7.2. The heading_field_id parameter in \u2018\u2018entities/fields\u2019 page is vulnerable to authenticated SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability, this can be done either with administrator credentials or through cross-site request forgery.\n\n- CVE-2020-13589: An exploitable SQL injection vulnerability exists in the \u2018entities/fields\u2019 page of the Rukovoditel Project Management App 2.7.2. The entities_id parameter in the 'entities/fields page (mulitple_edit or copy_selected or export function) is vulnerable to authenticated SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability, this can be done either with administrator credentials or through cross-site request forgery.\n\n- CVE-2020-13591: An exploitable SQL injection vulnerability exists in the \"access_rules/rules_form\" page of the Rukovoditel Project Management App 2.7.2. A specially crafted HTTP request can lead to SQL injection. An attacker can make an authenticated HTTP request to trigger this vulnerability, this can be done either with administrator credentials or through cross-site request forgery.\n\n- CVE-2020-13592: An exploitable SQL injection vulnerability exists in \"global_lists/choices\" page of the Rukovoditel Project Management App 2.7.2. A specially crafted HTTP request can lead to SQL injection. An attacker can make an authenticated HTTP request to trigger this vulnerability, this can be done either with administrator credentials or through cross-site request forgery.\n\n- CVE-2020-27240: An exploitable SQL injection vulnerability exists in \u2018getAssets.jsp\u2019 page of OpenClinic GA 5.173.3. The componentStatus parameter in the getAssets.jsp page is vulnerable to unauthenticated SQL injection An attacker can make an authenticated HTTP request to trigger this vulnerability.\n\n- CVE-2020-27241: An exploitable SQL injection vulnerability exists in \u2018getAssets.jsp\u2019 page of OpenClinic GA 5.173.3. The serialnumber parameter in the getAssets.jsp page is vulnerable to unauthenticated SQL injection. An attacker can make an authenticated HTTP request to trigger this vulnerability.\n\n- CVE-2021-24465: The Meow Gallery WordPress plugin before 4.1.9 does not sanitise, validate or escape the ids attribute of its gallery shortcode (available for users as low as Contributor) before using it in an SQL statement, leading to an authenticated SQL Injection issue. The injection also allows the returned values to be manipulated in a way that could lead to data disclosure and arbitrary objects to be deserialized.\n\n- CVE-2021-24555: The daac_delete_booking_callback function, hooked to the daac_delete_booking AJAX action, takes the id POST parameter which is passed into the SQL statement without proper sanitisation, validation or escaping, leading to a SQL Injection issue. Furthermore, the ajax action is lacking any CSRF and capability check, making it available to any authenticated user.\n\n- CVE-2021-24626: The Chameleon CSS WordPress plugin through 1.2 does not have any CSRF and capability checks in all its AJAX calls, allowing any authenticated user, such as subscriber to call them and perform unauthorised actions. One of AJAX call, remove_css, also does not sanitise or escape the css_id POST parameter before using it in a SQL statement, leading to a SQL Injection\n\n- CVE-2021-24651: The Poll Maker WordPress plugin before 3.4.2 allows unauthenticated users to perform SQL injection via the ays_finish_poll AJAX action. While the result is not disclosed in the response, it is possible to use a timing attack to exfiltrate data such as password hash.\n\n- CVE-2021-24728: The Membership & Content Restriction \u2013 Paid Member Subscriptions WordPress plugin before 2.4.2 did not sanitise, validate or escape its order and orderby parameters before using them in SQL statement, leading to Authenticated SQL Injections in the Members and Payments pages.\n\n- CVE-2021-25874: AVideo/YouPHPTube AVideo/YouPHPTube 10.0 and prior is affected by a SQL Injection SQL injection in the catName parameter which allows a remote unauthenticated attacker to retrieve databases information such as application passwords hashes.\n\n- CVE-2021-26201: The Login Panel of CASAP Automated Enrollment System 1.0 is vulnerable to SQL injection authentication bypass. An attacker can obtain access to the admin panel by injecting a SQL query in the username field of the login page.\n\n- CVE-2021-26685: A remote authenticated SQL Injection vulnerabilitiy was discovered in Aruba ClearPass Policy Manager version(s): Prior to 6.9.5, 6.8.8-HF1, 6.7.14-HF1. A vulnerability in the web-based management interface API of ClearPass could allow an authenticated remote attacker to conduct SQL injection attacks against the ClearPass instance. An attacker could exploit this vulnerability to obtain and modify sensitive information in the underlying database.\n\n- CVE-2021-27130: Online Reviewer System 1.0 contains a SQL injection vulnerability through authentication bypass, which may lead to a reverse shell upload.\n\n- CVE-2021-28242: SQL Injection in the \"evoadm.php\" component of b2evolution v7.2.2-stable allows remote attackers to obtain sensitive database information by injecting SQL commands into the \"cf_name\" parameter when creating a new filter under the \"Collections\" tab.\n\n- CVE-2021-31632: b2evolution CMS v7.2.3 was discovered to contain a SQL injection vulnerability via the parameter cfqueryparam in the User login section. This vulnerability allows attackers to execute arbitrary code via a crafted input.\n\n- CVE-2021-3278: Local Service Search Engine Management System 1.0 has a vulnerability through authentication bypass using SQL injection . Using this vulnerability, an attacker can bypass the login page.\n\n- CVE-2021-34166: A SQL INJECTION vulnerability in Sourcecodester Simple Food Website 1.0 allows a remote attacker to Bypass Authentication and become Admin.\n\n- CVE-2021-36621: Sourcecodester Online Covid Vaccination Scheduler System 1.0 is vulnerable to SQL Injection. The username parameter is vulnerable to time-based SQL injection. Upon successful dumping the admin password hash, an attacker can decrypt and obtain the plain-text password. Hence, the attacker could authenticate as Administrator.\n\n- CVE-2021-36624: Sourcecodester Phone Shop Sales Managements System version 1.0 suffers from a remote SQL injection vulnerability that allows for authentication bypass.\n\n- CVE-2021-40313: Piwigo v11.5 was discovered to contain a SQL injection vulnerability via the parameter pwg_token in /admin/batch_manager_global.php.\n\n- CVE-2021-42580: Sourcecodester Online Learning System 2.0 is vunlerable to sql injection authentication bypass in admin login file (/admin/login.php) and authenticated file upload in (Master.php) file , we can craft these two vunlerablities to get unauthenticated remote command execution.\n\n- CVE-2021-36300: iDRAC9 versions prior to 5.00.00.00 contain an improper input validation vulnerability. An unauthenticated remote attacker may potentially exploit this vulnerability by sending a specially crafted malicious request to crash the webserver or cause information disclosure.\n\n- CVE-2021-24007: Multiple improper neutralization of special elements of SQL commands vulnerabilities in FortiMail before 6.4.4 may allow a non-authenticated attacker to execute unauthorized code or commands via specifically crafted HTTP requests.\n\n- CVE-2021-29089: Improper neutralization of special elements used in an SQL command ('SQL Injection') vulnerability in thumbnail component in Synology Photo Station before 6.8.14-3500 allows remote attackers users to execute arbitrary SQL commands via unspecified vectors.\n\n- CVE-2021-29090: Improper neutralization of special elements used in an SQL command ('SQL Injection') vulnerability in PHP component in Synology Photo Station before 6.8.14-3500 allows remote authenticated users to execute arbitrary SQL command via unspecified vectors.\n\n- CVE-2021-32590: Multiple improper neutralization of special elements used in an SQL command vulnerabilities in FortiPortal 6.0.0 through 6.0.4, 5.3.0 through 5.3.5, 5.2.0 through 5.2.5, and 4.2.2 and earlier may allow an attacker with regular user's privileges to execute arbitrary commands on the underlying SQL database via specifically crafted HTTP requests.\n\n- CVE-2021-33180: Improper neutralization of special elements used in an SQL command ('SQL Injection') vulnerability in cgi component in Synology Media Server before 1.8.1-2876 allows remote attackers to execute arbitrary SQL commands via unspecified vectors.\n\n- CVE-2021-36184: A improper neutralization of Special Elements used in an SQL Command ('SQL Injection') in Fortinet FortiWLM version 8.6.1 and below allows attacker to disclosure device, users and database information via crafted HTTP requests.\n\n- CVE-2021-39165: Cachet is an open source status page. With Cachet prior to and including 2.3.18, there is a SQL injection which is in the `SearchableTrait#scopeSearch()`. Attackers without authentication can utilize this vulnerability to exfiltrate sensitive data from the database such as administrator's password and session. The original repository of Cachet <https://github.com/CachetHQ/Cachet> is not active, the stable version 2.3.18 and it's developing 2.4 branch is affected.\n\n- CVE-2021-21263: Laravel is a web application framework. Versions of Laravel before 6.20.11, 7.30.2 and 8.22.1 contain a query binding exploitation. This same exploit applies to the illuminate/database package which is used by Laravel. If a request is crafted where a field that is normally a non-array value is an array, and that input is not validated or cast to its expected type before being passed to the query builder, an unexpected number of query bindings can be added to the query. In some situations, this will simply lead to no results being returned by the query builder; however, it is possible certain queries could be affected in a way that causes the query to return unexpected results.\n\n- CVE-2021-43038: An issue was discovered in Kaseya Unitrends Backup Appliance before 10.5.5. The wguest account could execute commands by injecting into PostgreSQL trigger functions. This allowed privilege escalation from the wguest user to the postgres user.\n\n- CVE-2021-36348: iDRAC9 versions prior to 5.00.20.00 contain an input injection vulnerability. A remote authenticated malicious user with low privileges may potentially exploit this vulnerability to cause information disclosure or denial of service by supplying specially crafted input data to iDRAC.\n\n- CVE-2020-13590: Multiple exploitable SQL injection vulnerabilities exist in the 'entities/fields' page of the Rukovoditel Project Management App 2.7.2. A specially crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger these vulnerabilities, this can be done either with administrator credentials or through cross-site request forgery.\n\n- CVE-2020-18081: The checkuser function of SEMCMS 3.8 was discovered to contain a vulnerability which allows attackers to obtain the password in plaintext through a SQL query.\n\n- CVE-2020-5722: The HTTP interface of the Grandstream UCM6200 series is vulnerable to an unauthenticated remote SQL injection via crafted HTTP request. An attacker can use this vulnerability to execute shell commands as root on versions before 1.0.19.20 or inject HTML in password recovery emails in versions before 1.0.20.17.\n\n- CVE-2021-21915: An exploitable SQL injection vulnerability exist in the \u2018group_list\u2019 page of the Advantech R-SeeNet 2.4.15 (30.07.2021). A specially-crafted HTTP request at \u2018company_filter\u2019 parameter. An attacker can make authenticated HTTP requests to trigger this vulnerability. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21916: An exploitable SQL injection vulnerability exist in the \u2018group_list\u2019 page of the Advantech R-SeeNet 2.4.15 (30.07.2021). A specially-crafted HTTP request at 'description_filter\u2019 parameter. An attacker can make authenticated HTTP requests to trigger this vulnerability. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21917: An exploitable SQL injection vulnerability exist in the \u2018group_list\u2019 page of the Advantech R-SeeNet 2.4.15 (30.07.2021). A specially-crafted HTTP request at '\u2018ord\u2019 parameter. An attacker can make authenticated HTTP requests to trigger this vulnerability. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21918: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at \u2018name_filter\u2019 parameter. However, the high privilege super-administrator account needs to be used to achieve exploitation without cross-site request forgery attack.\n\n- CVE-2021-21919: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at ord\u2019 parameter. However, the high privilege super-administrator account needs to be used to achieve exploitation without cross-site request forgery attack.\n\n- CVE-2021-21920: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at \u2018surname_filter\u2019 parameter with the administrative account or through cross-site request forgery.\n\n- CVE-2021-21921: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at \u2018name_filter\u2019 parameter with the administrative account or through cross-site request forgery.\n\n- CVE-2021-21922: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at \u2018username_filter\u2019 parameter with the administrative account or through cross-site request forgery.\n\n- CVE-2021-21923: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at \u2018company_filter\u2019 parameter with the administrative account or through cross-site request forgery.\n\n- CVE-2021-21924: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger these vulnerabilities. This can be done as any authenticated user or through cross-site request forgery at \u2018desc_filter\u2019 parameter.\n\n- CVE-2021-21925: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger these vulnerabilities. This can be done as any authenticated user or through cross-site request forgery at \u2018firm_filter\u2019 parameter.\n\n- CVE-2021-21926: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger these vulnerabilities. This can be done as any authenticated user or through cross-site request forgery at \u2018health_filter\u2019 parameter.\n\n- CVE-2021-21927: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger these vulnerabilities. This can be done as any authenticated user or through cross-site request forgery at \u2018loc_filter\u2019 parameter.\n\n- CVE-2021-21928: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests at \u2018mac_filter\u2019 parameter to trigger this vulnerability. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21929: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests at \u2018prod_filter\u2019 parameter to trigger this vulnerability. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21930: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests at \u2018sn_filter\u2019 parameter to trigger this vulnerability. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21931: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests at\u2018 stat_filter\u2019 parameter to trigger this vulnerability. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21932: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this at \u2018name_filter\u2019 parameter. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21933: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this at \u2018esn_filter\u2019 parameter. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21934: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this at \u2018imei_filter\u2019 parameter. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21935: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at \u2018host_alt_filter2\u2019 parameter. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21936: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at \u2018health_alt_filter\u2019 parameter. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-21937: A specially-crafted HTTP request can lead to SQL injection. An attacker can make authenticated HTTP requests to trigger this vulnerability at \u2018host_alt_filter\u2019 parameter. This can be done as any authenticated user or through cross-site request forgery.\n\n- CVE-2021-23214: When the server is configured to use trust authentication with a clientcert requirement or to use cert authentication, a man-in-the-middle attacker can inject arbitrary SQL queries when a connection is first established, despite the use of SSL certificate verification and encryption.\n\n- CVE-2021-24928: The Rearrange Woocommerce Products WordPress plugin before 3.0.8 does not have proper access controls in the save_all_order AJAX action, nor validation and escaping when inserting user data in SQL statement, leading to an SQL injection, and allowing any authenticated user, such as subscriber, to modify arbitrary post content (for example with an XSS payload), as well as exfiltrate any data by copying it to another post.\n\n- CVE-2021-25037: The All in One SEO WordPress plugin before 4.1.5.3 is affected by an authenticated SQL injection issue, which was discovered during an internal audit by the Jetpack Scan team, and could grant attackers access to privileged information from the affected site\u2019s database (e.g., usernames and hashed passwords).\n\n- CVE-2021-25069: The Download Manager WordPress plugin before 3.2.34 does not sanitise and escape the package_ids parameter before using it in a SQL statement, leading to a SQL injection, which can also be exploited to cause a Reflected Cross-Site Scripting issue\n\n- CVE-2021-25076: The WP User Frontend WordPress plugin before 3.5.26 does not validate and escape the status parameter before using it in a SQL statement in the Subscribers dashboard, leading to an SQL injection. Due to the lack of sanitisation and escaping, this could also lead to Reflected Cross-Site Scripting\n\n- CVE-2021-25109: The Futurio Extra WordPress plugin before 1.6.3 is affected by a SQL Injection vulnerability that could be used by high privilege users to extract data from the database as well as used to perform Cross-Site Scripting (XSS) against logged in admins by making send open a malicious link.\n\n- CVE-2021-36722: Emuse - eServices / eNvoice SQL injection can be used in various ways ranging from bypassing login authentication or dumping the whole database to full RCE on the affected endpoints. The SQLi caused by CWE-209: Generation of Error Message Containig Sensetive Information, showing parts of the aspx code and the webroot location , information an attacker can leverage to further compromise the host.\n\n- CVE-2021-41942: The Magic CMS MSVOD v10 video system has a SQL injection vulnerability. Attackers can use vulnerabilities to obtain sensitive information in the database.\n\n- CVE-2021-44653: Online Magazine Management System 1.0 contains a SQL injection authentication bypass vulnerability. The Admin panel authentication can be bypassed due to SQL injection vulnerability in the login form allowing attacker to gain access as admin to the application.\n\n- CVE-2021-44655: Online Pre-owned/Used Car Showroom Management System 1.0 contains a SQL injection authentication bypass vulnerability. Admin panel authentication can be bypassed due to SQL injection vulnerability in the login form allowing attacker to get admin access on the application.\n\n- CVE-2021-45406: In SalonERP 3.0.1, a SQL injection vulnerability allows an attacker to inject payload using 'sql' parameter in SQL query while generating a report. Upon successfully discovering the login admin password hash, it can be decrypted to obtain the plain-text password.\n\n- CVE-2020-12271: A SQL injection issue was found in SFOS 17.0, 17.1, 17.5, and 18.0 before 2020-04-25 on Sophos XG Firewall devices, as exploited in the wild in April 2020. This affected devices configured with either the administration (HTTPS) service or the User Portal exposed on the WAN zone. A successful attack may have caused remote code execution that exfiltrated usernames and hashed passwords for the local device admin(s), portal admins, and user accounts used for remote access (but not external Active Directory or LDAP passwords)\n\n- CVE-2020-17463: FUEL CMS 1.4.7 allows SQL Injection via the col parameter to /pages/items, /permissions/items, or /navigation/items.\n\n- CVE-2021-20016: A SQL-Injection vulnerability in the SonicWall SSLVPN SMA100 product allows a remote unauthenticated attacker to perform SQL query to access username password and other session related information. This vulnerability impacts SMA100 build version 10.x.\n\n- CVE-2021-20028: Improper neutralization of a SQL Command leading to SQL Injection vulnerability impacting end-of-life Secure Remote Access (SRA) products, specifically the SRA appliances running all 8.x firmware and 9.0.0.9-26sv or earlier\n\n- CVE-2021-27101: Accellion FTA 9_12_370 and earlier is affected by SQL injection via a crafted Host header in a request to document_root.html. The fixed version is FTA_9_12_380 and later.\n\n- CVE-2021-42258: BQE BillQuick Web Suite 2018 through 2021 before 22.0.9.1 allows SQL injection for unauthenticated remote code execution, as exploited in the wild in October 2021 for ransomware installation. SQL injection can, for example, use the txtID (aka username) parameter. Successful exploitation can include the ability to execute arbitrary code as MSSQLSERVER$ via xp_cmdshell.\n\n- CVE-2021-26634: SQL injection and file upload attacks are possible due to insufficient validation of input values in some parameters and variables of files compromising Maxboard, which may lead to arbitrary code execution or privilege escalation. Attackers can use these vulnerabilities to perform attacks such as stealing server management rights using a web shell.\n\n- CVE-2021-41433: SQL Injection vulnerability exists in version 1.0 of the Resumes Management and Job Application Website application login form by EGavilan Media that allows authentication bypass through login.php.\n\n- CVE-2022-0366: An authenticated and authorized agent user could potentially gain administrative access via an SQLi vulnerability to Capsule8 Console between versions 4.6.0 and 4.9.1.\n\n- CVE-2022-0439: The Email Subscribers & Newsletters WordPress plugin before 5.3.2 does not correctly escape the `order` and `orderby` parameters to the `ajax_fetch_report_list` action, making it vulnerable to blind SQL injection attacks by users with roles as low as Subscriber. Further, it does not have any CSRF protection in place for the action, allowing an attacker to trick any logged in user to perform the action by clicking a link.\n\n- CVE-2022-23857: model/criteria/criteria.go in Navidrome before 0.47.5 is vulnerable to SQL injection attacks when processing crafted Smart Playlists. An authenticated user could abuse this to extract arbitrary data from the database, including the user table (which contains sensitive information such as the users' encrypted passwords).\n\n- CVE-2022-24690: An issue was discovered in DSK DSKNet 2.16.136.0 and 2.17.136.5. A PresAbs.php SQL Injection vulnerability allows unauthenticated users to taint database data and extract sensitive information via crafted HTTP requests. The type of SQL Injection is blind boolean based. (An unauthenticated attacker can discover the endpoint by abusing a Broken Access Control issue with further SQL injection attacks to gather all user's badge numbers and PIN codes.)\n\n- CVE-2022-29603: A SQL Injection vulnerability exists in UniverSIS UniverSIS-API through 1.2.1 via the $select parameter to multiple API endpoints. A remote authenticated attacker could send crafted SQL statements to a vulnerable endpoint (such as /api/students/me/messages/) to, for example, retrieve personal information or change grades.\n\n- CVE-2022-29652: Online Sports Complex Booking System 1.0 is vulnerable to SQL Injection via /scbs/classes/Users.php?f=save_client.\n\n- CVE-2022-30335: Bonanza Wealth Management System (BWM) 7.3.2 allows SQL injection via the login form. Users who supply the application with a SQL injection payload in the User Name textbox could collect all passwords in encrypted format from the Microsoft SQL Server component.\n\n- CVE-2022-36669: Hospital Information System version 1.0 suffers from a remote SQL injection vulnerability that allows for authentication bypass.\n\n- CVE-2021-35226: An entity in Network Configuration Manager product is misconfigured and exposing password field to Solarwinds Information Service (SWIS). Exposed credentials are encrypted and require authenticated access with an NCM role. \n\n- CVE-2022-46163: Travel support program is a rails app to support the travel support program of openSUSE (TSP). Sensitive user data (bank account details, password Hash) can be extracted via Ransack query injection. Every deployment of travel-support-program below the patched version is affected. The travel-support-program uses the Ransack library to implement search functionality. In its default configuration, Ransack will allow for query conditions based on properties of associated database objects [1]. The `*_start`, `*_end` or `*_cont` search matchers [2] can then be abused to exfiltrate sensitive string values of associated database objects via character-by-character brute-force (A match is indicated by the returned JSON not being empty). A single bank account number can be extracted with <200 requests, a password hash can be extracted with ~1200 requests, all within a few minutes. The problem has been patched in commit d22916275c51500b4004933ff1b0a69bc807b2b7. In order to work around this issue, you can also cherry pick that patch, however it will not work without the Rails 5.0 migration that was done in #150, which in turn had quite a few pull requests it depended on.\n\n- CVE-2021-3958: Improper Handling of Parameters vulnerability in Ipack Automation Systems Ipack SCADA Software allows : Blind SQL Injection.This issue affects Ipack SCADA Software: from unspecified before 1.1.0. \n\n- CVE-2021-42760: A improper neutralization of special elements used in an sql command ('sql injection') in Fortinet FortiWLM version 8.6.1 and below allows attacker to disclose sensitive information from DB tables via crafted requests.\n\n- CVE-2021-43077: A improper neutralization of special elements used in an sql command ('sql injection') in Fortinet FortiWLM version 8.6.2 and below, version 8.5.2 and below, version 8.4.2 and below, version 8.3.2 and below allows attacker to execute unauthorized code or commands via crafted HTTP requests to the AP monitor handlers.\n\n- CVE-2021-43925: Improper neutralization of special elements used in an SQL command ('SQL Injection') vulnerability in Log Management functionality in Synology DiskStation Manager (DSM) before 7.0.1-42218-2 allows remote attackers to inject SQL commands via unspecified vectors.\n\n- CVE-2021-43926: Improper neutralization of special elements used in an SQL command ('SQL Injection') vulnerability in Log Management functionality in Synology DiskStation Manager (DSM) before 7.0.1-42218-2 allows remote attackers to inject SQL commands via unspecified vectors.\n\n- CVE-2021-43927: Improper neutralization of special elements used in an SQL command ('SQL Injection') vulnerability in Security Management functionality in Synology DiskStation Manager (DSM) before 7.0.1-42218-2 allows remote attackers to inject SQL commands via unspecified vectors.\n\n- CVE-2022-0224: dolibarr is vulnerable to Improper Neutralization of Special Elements used in an SQL Command\n\n- CVE-2022-0258: pimcore is vulnerable to Improper Neutralization of Special Elements used in an SQL Command\n\n- CVE-2022-1358: The affected On-Premise is vulnerable to data exfiltration through improper neutralization of special elements used in an SQL command. This could allow an attacker to exfiltrate and dump all data held in the cnMaestro database.\n\n- CVE-2022-1361: The affected On-Premise cnMaestro is vulnerable to a pre-auth data exfiltration through improper neutralization of special elements used in an SQL command. This could allow an attacker to exfiltrate data about other user\u2019s accounts and devices.\n\n- CVE-2022-22280: Improper Neutralization of Special Elements used in an SQL Command leading to Unauthenticated SQL Injection vulnerability, impacting SonicWall GMS 9.3.1-SP2-Hotfix1, Analytics On-Prem 2.5.0.3-2520 and earlier versions.\n\n- CVE-2022-3332: A vulnerability classified as critical has been found in SourceCodester Food Ordering Management System. This affects an unknown part of the file router.php of the component POST Parameter Handler. The manipulation of the argument username leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-209583.\n\n- CVE-2022-3414: A vulnerability was found in SourceCodester Web-Based Student Clearance System. It has been classified as critical. Affected is an unknown function of the file /Admin/login.php of the component POST Parameter Handler. The manipulation of the argument txtusername leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-210246 is the identifier assigned to this vulnerability.\n\n- CVE-2022-3467: A vulnerability classified as critical was found in Jiusi OA. Affected by this vulnerability is an unknown functionality of the file /jsoa/hntdCustomDesktopActionContent. The manipulation of the argument inforid leads to sql injection. The exploit has been disclosed to the public and may be used. The identifier VDB-210709 was assigned to this vulnerability.\n\n- CVE-2022-3470: A vulnerability was found in SourceCodester Human Resource Management System. It has been classified as critical. Affected is an unknown function of the file getstatecity.php. The manipulation of the argument sc leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-210714 is the identifier assigned to this vulnerability.\n\n- CVE-2022-3825: A vulnerability was found in Huaxia ERP 2.3 and classified as critical. Affected by this issue is some unknown functionality of the component User Management. The manipulation of the argument login leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-212792.\n\n- CVE-2022-3827: A vulnerability was found in centreon. It has been declared as critical. This vulnerability affects unknown code of the file formContactGroup.php of the component Contact Groups Form. The manipulation of the argument cg_id leads to sql injection. The attack can be initiated remotely. The name of the patch is 293b10628f7d9f83c6c82c78cf637cbe9b907369. It is recommended to apply a patch to fix this issue. VDB-212794 is the identifier assigned to this vulnerability.\n\n- CVE-2022-3868: A vulnerability classified as critical has been found in SourceCodester Sanitization Management System. Affected is an unknown function of the file /php-sms/classes/Master.php?f=save_quote. The manipulation of the argument id leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-213012.\n\n- CVE-2022-3971: A vulnerability was found in matrix-appservice-irc up to 0.35.1. It has been declared as critical. This vulnerability affects unknown code of the file src/datastore/postgres/PgDataStore.ts. The manipulation of the argument roomIds leads to sql injection. Upgrading to version 0.36.0 is able to address this issue. The name of the patch is 179313a37f06b298150edba3e2b0e5a73c1415e7. It is recommended to upgrade the affected component. VDB-213550 is the identifier assigned to this vulnerability.\n\n- CVE-2022-3972: A vulnerability was found in Pingkon HMS-PHP. It has been rated as critical. This issue affects some unknown processing of the file admin/adminlogin.php. The manipulation of the argument uname/pass leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-213551.\n\n- CVE-2022-3973: A vulnerability classified as critical has been found in Pingkon HMS-PHP. Affected is an unknown function of the file /admin/admin.php of the component Data Pump Metadata. The manipulation of the argument uname/pass leads to sql injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-213552.\n\n- CVE-2022-3997: A vulnerability, which was classified as critical, has been found in MonikaBrzica scm. Affected by this issue is some unknown functionality of the file upis_u_bazu.php. The manipulation of the argument email/lozinka/ime/id leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. VDB-213698 is the identifier assigned to this vulnerability.\n\n- CVE-2022-3998: A vulnerability, which was classified as critical, was found in MonikaBrzica scm. This affects an unknown part of the file uredi_korisnika.php. The manipulation of the argument id leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-213699.\n\n- CVE-2022-4015: A vulnerability, which was classified as critical, was found in Sports Club Management System 119. This affects an unknown part of the file admin/make_payments.php. The manipulation of the argument m_id/plan leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-213789 was assigned to this vulnerability.\n\n- CVE-2022-4247: A vulnerability classified as critical was found in Movie Ticket Booking System. This vulnerability affects unknown code of the file booking.php. The manipulation of the argument id leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-214624.\n\n- CVE-2022-4248: A vulnerability, which was classified as critical, has been found in Movie Ticket Booking System. This issue affects some unknown processing of the file editBooking.php. The manipulation of the argument id leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-214625 was assigned to this vulnerability.\n\n- CVE-2022-3471: A vulnerability was found in SourceCodester Human Resource Management System. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file city.php. The manipulation of the argument searccity leads to sql injection. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-210715.\n\n- CVE-2022-3472: A vulnerability was found in SourceCodester Human Resource Management System. It has been rated as critical. Affected by this issue is some unknown functionality of the file city.php. The manipulation of the argument cityedit leads to sql injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-210716.\n\n- CVE-2022-3473: A vulnerability classified as critical has been found in SourceCodester Human Resource Management System. This affects an unknown part of the file getstatecity.php. The manipulation of the argument ci leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-210717 was assigned to this vulnerability.\n\n- CVE-2022-3579: A vulnerability classified as critical was found in SourceCodester Cashier Queuing System 1.0. This vulnerability affects unknown code of the file /queuing/login.php of the component Login Page. The manipulation of the argument username/password leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-211186 is the identifier assigned to this vulnerability.\n\n- CVE-2022-3584: A vulnerability was found in SourceCodester Canteen Management System 1.0. It has been rated as critical. This issue affects some unknown processing of the file edituser.php. The manipulation of the argument id leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-211193 was assigned to this vulnerability.\n\n- CVE-2022-3671: A vulnerability classified as critical was found in SourceCodester eLearning System 1.0. This vulnerability affects unknown code of the file /admin/students/manage.php. The manipulation of the argument id leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-212014 is the identifier assigned to this vulnerability.\n\n- CVE-2022-3714: A vulnerability classified as critical has been found in SourceCodester Online Medicine Ordering System 1.0. Affected is an unknown function of the file admin/?page=orders/view_order. The manipulation of the argument id leads to sql injection. It is possible to launch the attack remotely. VDB-212346 is the identifier assigned to this vulnerability.\n\n- CVE-2022-3729: A vulnerability, which was classified as critical, has been found in seccome Ehoney. This issue affects some unknown processing of the file /api/v1/attack. The manipulation of the argument AttackIP leads to sql injection. The attack may be initiated remotely. The associated identifier of this vulnerability is VDB-212411.\n\n- CVE-2022-3730: A vulnerability, which was classified as critical, was found in seccome Ehoney. Affected is an unknown function of the file /api/v1/attack/falco. The manipulation of the argument Payload leads to sql injection. It is possible to launch the attack remotely. The identifier of this vulnerability is VDB-212412.\n\n- CVE-2022-3731: A vulnerability has been found in seccome Ehoney and classified as critical. Affected by this vulnerability is an unknown functionality of the file /api/v1/attack/token. The manipulation of the argument Payload leads to sql injection. The attack can be launched remotely. The identifier VDB-212413 was assigned to this vulnerability.\n\n- CVE-2022-3733: A vulnerability was found in SourceCodester Web-Based Student Clearance System. It has been classified as critical. This affects an unknown part of the file Admin/edit-admin.php. The manipulation of the argument id leads to sql injection. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-212415.\n\nRelated Weaknesses:\n\n- CWE-943 (ChildOf)\n\n- CWE-74 (ChildOf)",
        "type": "Base",
        "source": "sparse",
        "search_source": "weakness:command injection",
        "sources": [
          "base",
          "weakness"
        ],
        "boost_factor": 2.8,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          }
        }
      },
      {
        "cwe_id": "259",
        "name": "Use of Hard-coded Password",
        "description": "The product contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.",
        "score": 87.74115526296906,
        "matched_text": "CWE-259: Use of Hard-coded Password\n\nType: Variant\n\nStatus: Draft\n\nDescription:\n\nThe product contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.\n\nExtended Details:\n\n\n\nA hard-coded password typically leads to a significant authentication failure that can be difficult for the system administrator to detect. Once detected, it can be difficult to fix, so the administrator may be forced into disabling the product entirely. There are two main variations:\n\n```\n\t\tInbound: the product contains an authentication mechanism that checks for a hard-coded password.\n\t\tOutbound: the product connects to another system or component, and it contains hard-coded password for connecting to that component.\n```\nIn the Inbound variant, a default administration account is created, and a simple password is hard-coded into the product and associated with that account. This hard-coded password is the same for each installation of the product, and it usually cannot be changed or disabled by system administrators without manually modifying the program, or otherwise patching the product. If the password is ever discovered or published (a common occurrence on the Internet), then anybody with knowledge of this password can access the product. Finally, since all installations of the product will have the same password, even across different organizations, this enables massive attacks such as worms to take place.\n\nThe Outbound variant applies to front-end systems that authenticate with a back-end service. The back-end service may require a fixed password which can be easily discovered. The programmer may simply hard-code those back-end credentials into the front-end product. Any user of that program may be able to extract the password. Client-side systems with hard-coded passwords pose even more of a threat, since the extraction of a password from a binary is usually very simple.\n\n\nReal-World Examples:\n\n- CVE-2022-29964: Distributed Control System (DCS) has hard-coded passwords for local shell access\n\n- CVE-2021-37555: Telnet service for IoT feeder for dogs and cats has hard-coded password [REF-1288]\n\n- CVE-2021-35033: Firmware for a WiFi router uses a hard-coded password for a BusyBox shell, allowing bypass of authentication through the UART port\n\nTop 25 CWE Examples:\n\n- CVE-2021-27438: The software contains a hard-coded password it uses for its own inbound authentication or for outbound communication to external components on the Reason DR60 (all firmware versions prior to 02A04.1).\n\n- CVE-2021-34757: Multiple vulnerabilities in Cisco Business 220 Series Smart Switches firmware could allow an attacker with Administrator privileges to access sensitive login credentials or reconfigure the passwords on the user account. For more information about these vulnerabilities, see the Details section of this advisory.\n\n- CVE-2020-1716: A flaw was found in the ceph-ansible playbook where it contained hardcoded passwords that were being used as default passwords while deploying Ceph services. Any authenticated attacker can abuse this flaw to brute-force Ceph deployments, and gain administrator access to Ceph clusters via the Ceph dashboard to initiate read, write, and delete Ceph clusters and also modify Ceph cluster configurations. Versions before ceph-ansible 6.0.0alpha1 are affected.\n\n- CVE-2021-21818: A hard-coded password vulnerability exists in the Zebra IP Routing Manager functionality of D-LINK DIR-3040 1.13B03. A specially crafted network request can lead to a denial of service. An attacker can send a sequence of requests to trigger this vulnerability.\n\n- CVE-2021-21820: A hard-coded password vulnerability exists in the Libcli Test Environment functionality of D-LINK DIR-3040 1.13B03. A specially crafted network request can lead to code execution. An attacker can send a sequence of requests to trigger this vulnerability.\n\n- CVE-2021-27440: The software contains a hard-coded password it uses for its own inbound authentication or for outbound communication to external components on the Reason DR60 (all firmware versions prior to 02A04.1).\n\n- CVE-2021-27452: The software contains a hard-coded password that could allow an attacker to take control of the merging unit using these hard-coded credentials on the MU320E (all firmware versions prior to v04A00.1).\n\n- CVE-2021-32454: SITEL CAP/PRX firmware version 5.2.01 makes use of a hardcoded password. An attacker with access to the device could modify these credentials, leaving the administrators of the device without access.\n\n- CVE-2021-32459: Trend Micro Home Network Security version 6.6.604 and earlier contains a hard-coded password vulnerability in the log collection server which could allow an attacker to use a specially crafted network request to lead to arbitrary authentication. An attacker must first obtain the ability to execute high-privileged code on the target device in order to exploit this vulnerability.\n\n- CVE-2021-36799: KNX ETS5 through 5.7.6 uses the hard-coded password ETS5Password, with a salt value of Ivan Medvedev, allowing local users to read project information. NOTE: This vulnerability only affects products that are no longer supported by the maintainer\n\n- CVE-2021-38456: A use of hard-coded password vulnerability in the Moxa MXview Network Management software Versions 3.x to 3.2.2 may allow an attacker to gain access through accounts using default passwords\n\n- CVE-2021-43575: KNX ETS6 through 6.0.0 uses the hard-coded password ETS5Password, with a salt value of Ivan Medvedev, allowing local users to read project information, a similar issue to CVE-2021-36799. NOTE: The vendor disputes this because it is not the responsibility of the ETS to securely store cryptographic key material when it is not being exported\n\n- CVE-2020-25752: An issue was discovered on Enphase Envoy R3.x and D4.x devices. There are hardcoded web-panel login passwords for the installer and Enphase accounts. The passwords for these accounts are hardcoded values derived from the MD5 hash of the username and serial number mixed with some static strings. The serial number can be retrieved by an unauthenticated user at /info.xml. These passwords can be easily calculated by an attacker; users are unable to change these passwords.\n\n- CVE-2020-29321: The D-Link router DIR-868L 3.01 is vulnerable to credentials disclosure in telnet service through decompilation of firmware, that allows an unauthenticated attacker to gain access to the firmware and to extract sensitive data.\n\n- CVE-2020-29322: The D-Link router DIR-880L 1.07 is vulnerable to credentials disclosure in telnet service through decompilation of firmware, that allows an unauthenticated attacker to gain access to the firmware and to extract sensitive data.\n\n- CVE-2020-29323: The D-link router DIR-885L-MFC 1.15b02, v1.21b05 is vulnerable to credentials disclosure in telnet service through decompilation of firmware, that allows an unauthenticated attacker to gain access to the firmware and to extract sensitive data.\n\n- CVE-2021-45520: Certain NETGEAR devices are affected by a hardcoded password. This affects RBK352 before 4.4.0.10, RBR350 before 4.4.0.10, and RBS350 before 4.4.0.10.\n\n- CVE-2021-45521: Certain NETGEAR devices are affected by a hardcoded password. This affects RBK352 before 4.4.0.10, RBR350 before 4.4.0.10, and RBS350 before 4.4.0.10.\n\n- CVE-2021-45522: NETGEAR XR1000 devices before 1.0.0.58 are affected by a hardcoded password.\n\n- CVE-2022-26138: The Atlassian Questions For Confluence app for Confluence Server and Data Center creates a Confluence user account in the confluence-users group with the username disabledsystemuser and a hardcoded password. A remote, unauthenticated attacker with knowledge of the hardcoded password could exploit this to log into Confluence and access all content accessible to users in the confluence-users group. This user account is created when installing versions 2.7.34, 2.7.35, and 3.0.2 of the app.\n\n- CVE-2021-31477: This vulnerability allows remote attackers to execute arbitrary code on affected installations of GE Reason RPV311 14A03. Authentication is not required to exploit this vulnerability. The specific flaw exists within the firmware and filesystem of the device. The firmware and filesystem contain hard-coded default credentials. An attacker can leverage this vulnerability to execute code in the context of the download user. Was ZDI-CAN-11852.\n\n- CVE-2022-1162: A hardcoded password was set for accounts registered using an OmniAuth provider (e.g. OAuth, LDAP, SAML) in GitLab CE/EE versions 14.7 prior to 14.7.7, 14.8 prior to 14.8.5, and 14.9 prior to 14.9.2 allowing attackers to potentially take over accounts\n\n- CVE-2022-22144: A hard-coded password vulnerability exists in the libcommonprod.so prod_change_root_passwd functionality of TCL LinkHub Mesh Wi-Fi MS1G_00_01.00_14. During system startup this functionality is always called, leading to a known root password. An attacker does not have to do anything to trigger this vulnerability.\n\n- CVE-2022-25577: ALF-BanCO v8.2.5 and below was discovered to use a hardcoded password to encrypt the SQLite database containing the user's data. Attackers who are able to gain remote or local access to the system are able to read and modify the data.\n\n- CVE-2022-26119: A improper authentication vulnerability in Fortinet FortiSIEM before 6.5.0 allows a local attacker with CLI access to perform operations on the Glassfish server directly via a hardcoded password.\n\n- CVE-2022-27172: A hard-coded password vulnerability exists in the console infactory functionality of InHand Networks InRouter302 V3.5.37. A specially-crafted network request can lead to privileged operation execution. An attacker can send a sequence of requests to trigger this vulnerability.\n\n- CVE-2022-29644: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a hard coded password for the telnet service stored in the component /web_cste/cgi-bin/product.ini.\n\n- CVE-2022-29645: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a hard coded password for root stored in the component /etc/shadow.sample.\n\n- CVE-2022-29825: Use of Hard-coded Password vulnerability in Mitsubishi Electric GX Works3 versions from 1.000A to 1.090U and GT Designer3 Version1 (GOT2000) versions from 1.122C to 1.290C allows an unauthenticated attacker to disclose sensitive information. As a result, unauthenticated users may view programs and project files or execute programs illegally.\n\n- CVE-2022-29831: Use of Hard-coded Password vulnerability in Mitsubishi Electric Corporation GX Works3 versions from 1.015R to 1.095Z allows a remote unauthenticated attacker to obtain information about the project file for MELSEC safety CPU modules.\n\n- CVE-2022-29889: A hard-coded password vulnerability exists in the telnet functionality of Abode Systems, Inc. iota All-In-One Security Kit 6.9Z. Use of a hard-coded root password can lead to arbitrary command execution. An attacker can authenticate with hard-coded credentials to trigger this vulnerability.\n\n- CVE-2022-32967: RTL8111EP-CG/RTL8111FP-CG DASH function has hard-coded password. An unauthenticated physical attacker can use the hard-coded default password during system reboot triggered by other user, to acquire partial system information such as serial number and server information.\n\n- CVE-2022-34005: An issue was discovered in TitanFTP (aka Titan FTP) NextGen before 1.2.1050. There is Remote Code Execution due to a hardcoded password for the sa account on the Microsoft SQL Express 2019 instance installed by default during TitanFTP NextGen installation, aka NX-I674 (sub-issue 1). NOTE: as of 2022-06-21, the 1.2.1050 release corrects this vulnerability in a new installation, but not in an upgrade installation.\n\n- CVE-2022-34462:  Dell EMC SCG Policy Manager, versions from 5.10 to 5.12, contain(s) a Hard-coded Password Vulnerability. An attacker, with the knowledge of the hard-coded credentials, could potentially exploit this vulnerability to login to the system to gain admin privileges. \n\n- CVE-2022-35491: TOTOLINK A3002RU V3.0.0-B20220304.1804 has a hardcoded password for root in /etc/shadow.sample.\n\n- CVE-2022-35866: This vulnerability allows remote attackers to bypass authentication on affected installations of Vinchin Backup and Recovery 6.5.0.17561. Authentication is not required to exploit this vulnerability. The specific flaw exists within the configuration of the MySQL server. The server uses a hard-coded password for the administrator user. An attacker can leverage this vulnerability to bypass authentication on the system. Was ZDI-CAN-17139.\n\n- CVE-2022-36610: TOTOLINK A720R V4.1.5cu.532_B20210610 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36611: TOTOLINK A800R V4.1.2cu.5137_B20200730 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36612: TOTOLINK A950RG V4.1.2cu.5204_B20210112 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36613: TOTOLINK N600R V4.3.0cu.7647_B20210106 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36614: TOTOLINK A860R V4.1.2cu.5182_B20201027 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36615: TOTOLINK A3000RU V4.1.2cu.5185_B20201128 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36616: TOTOLINK A810R V4.1.2cu.5182_B20201026 and V5.9c.4050_B20190424 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-37841: In TOTOLINK A860R V4.1.2cu.5182_B20201027 there is a hard coded password for root in /etc/shadow.sample.\n\n- CVE-2022-37857: bilde2910 Hauk v1.6.1 requires a hardcoded password which by default is blank. This hardcoded password is hashed but stored within the config.php file server-side as well as in clear-text on the android client device by default.\n\n- CVE-2022-38823: In TOTOLINK T6 V4.1.5cu.709_B20210518, there is a hard coded password for root in /etc/shadow.sample.\n\n- CVE-2022-45444: Sewio\u2019s Real-Time Location System (RTLS) Studio version 2.0.0 up to and including version 2.6.2 contains hard-coded passwords for select users in the application\u2019s database. This could allow a remote attacker to login to the database with unrestricted access. \n\n- CVE-2022-36159: Contec FXA3200 version 1.13 and under were discovered to contain a hard coded hash password for root stored in the component /etc/shadow. As the password strength is weak, it can be cracked in few minutes. Through this credential, a malicious actor can access the Wireless LAN Manager interface and open the telnet port then sniff the traffic or inject any malware.\n\n- CVE-2022-41653: Daikin SVMPC1 version 2.1.22 and prior and SVMPC2 version 1.2.3 and prior are vulnerable to an attacker obtaining user login credentials and control the system.\n\n- CVE-2022-48067: An information disclosure vulnerability in Totolink A830R V4.1.2cu.5182 allows attackers to obtain the root password via a brute-force attack.\n\nRelated Weaknesses:\n\n- CWE-798 (ChildOf)\n\n- CWE-798 (ChildOf)\n\n- CWE-798 (ChildOf)\n\n- CWE-321 (PeerOf)\n\n- CWE-257 (PeerOf)",
        "type": "Variant",
        "source": "sparse",
        "search_source": "weakness:command injection",
        "sources": [
          "base",
          "weakness"
        ],
        "boost_factor": 2.8,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          }
        }
      },
      {
        "cwe_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "description": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "score": 86.1787009146509,
        "matched_text": "CWE-116: Improper Encoding or Escaping of Output\n\nType: Class\n\nStatus: Draft\n\nAlternative Terms:\n\nOutput Sanitization\nOutput Validation\nOutput Encoding\n\nOutput Sanitization\nOutput Validation\nOutput Encoding\n\nOutput Sanitization\nOutput Validation\nOutput Encoding\n\nDescription:\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\nExtended Details:\n\n\n\nImproper encoding or escaping can allow attackers to change the commands that are sent to another component, inserting malicious commands instead.\n\n\nMost products follow a certain protocol that uses structured messages for communication between components, such as queries or commands. These structured messages can contain raw data interspersed with metadata or control information. For example, \"GET /index.html HTTP/1.1\" is a structured message containing a command (\"GET\") with a single argument (\"/index.html\") and metadata about which protocol version is being used (\"HTTP/1.1\").\n\n\nIf an application uses attacker-supplied inputs to construct a structured message without properly encoding or escaping, then the attacker could insert special characters that will cause the data to be interpreted as control information or metadata. Consequently, the component that receives the output will perform the wrong operations, or otherwise interpret the data incorrectly.\n\n\nReal-World Examples:\n\n- CVE-2021-41232: Chain: authentication routine in Go-based agile development product does not escape user name (CWE-116), allowing LDAP injection (CWE-90)\n\n- CVE-2008-4636: OS command injection in backup software using shell metacharacters in a filename; correct behavior would require that this filename could not be changed.\n\n- CVE-2008-0769: Web application does not set the charset when sending a page to a browser, allowing for XSS exploitation when a browser chooses an unexpected encoding.\n\n- CVE-2008-0005: Program does not set the charset when sending a page to a browser, allowing for XSS exploitation when a browser chooses an unexpected encoding.\n\n- CVE-2008-5573: SQL injection via password parameter; a strong password might contain \"&\"\n\n- CVE-2008-3773: Cross-site scripting in chat application via a message subject, which normally might contain \"&\" and other XSS-related characters.\n\n- CVE-2008-0757: Cross-site scripting in chat application via a message, which normally might be allowed to contain arbitrary content.\n\nTop 25 CWE Examples:\n\n- CVE-2021-20195: A flaw was found in keycloak in versions before 13.0.0. A Self Stored XSS attack vector escalating to a complete account takeover is possible due to user-supplied data fields not being properly encoded and Javascript code being used to process the data. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.\n\n- CVE-2021-21684: Jenkins Git Plugin 4.8.2 and earlier does not escape the Git SHA-1 checksum parameters provided to commit notifications when displaying them in a build cause, resulting in a stored cross-site scripting (XSS) vulnerability.\n\n- CVE-2021-3148: An issue was discovered in SaltStack Salt before 3002.5. Sending crafted web requests to the Salt API can result in salt.utils.thin.gen_thin() command injection because of different handling of single versus double quotes. This is related to salt/utils/thin.py.\n\n- CVE-2021-32796: xmldom is an open source pure JavaScript W3C standard-based (XML DOM Level 2 Core) DOMParser and XMLSerializer module. xmldom versions 0.6.0 and older do not correctly escape special characters when serializing elements removed from their ancestor. This may lead to unexpected syntactic changes during XML processing in some downstream applications. This issue has been resolved in version 0.7.0. As a workaround downstream applications can validate the input and reject the maliciously crafted documents.\n\n- CVE-2021-30640: A vulnerability in the JNDI Realm of Apache Tomcat allows an attacker to authenticate using variations of a valid user name and/or to bypass some of the protection provided by the LockOut Realm. This issue affects Apache Tomcat 10.0.0-M1 to 10.0.5; 9.0.0.M1 to 9.0.45; 8.5.0 to 8.5.65.\n\n- CVE-2020-27958: The Job Composer app in Ohio Supercomputer Center Open OnDemand before 1.7.19 and 1.8.x before 1.8.18 allows remote authenticated users to provide crafted input in a job template.\n\n- CVE-2021-44042: An issue was discovered in UiPath Assistant 21.4.4. User-controlled data supplied to the --process-start argument of the URI handler for uipath-assistant:// is not correctly encoded, resulting in attacker-controlled content being injected into the error message displayed (when the injected content does not match an existing process). A determined attacker could leverage this to execute JavaScript in the context of the Electron application.\n\n- CVE-2022-0210: The Random Banner WordPress plugin is vulnerable to Stored Cross-Site Scripting due to insufficient escaping via the category parameter found in the ~/include/models/model.php file which allowed attackers with administrative user access to inject arbitrary web scripts, in versions up to and including 4.1.4. This affects multi-site installations where unfiltered_html is disabled for administrators, and sites where unfiltered_html is disabled.\n\n- CVE-2022-0220: The check_privacy_settings AJAX action of the WordPress GDPR WordPress plugin before 1.9.27, available to both unauthenticated and authenticated users, responds with JSON data without an \"application/json\" content-type. Since an HTML payload isn't properly escaped, it may be interpreted by a web browser led to this endpoint. Javascript code may be executed on a victim's browser. Due to v1.9.26 adding a CSRF check, the XSS is only exploitable against unauthenticated users (as they all share the same nonce)\n\n- CVE-2022-0479: The Popup Builder WordPress plugin before 4.1.1 does not sanitise and escape the sgpb-subscription-popup-id parameter before using it in a SQL statement in the All Subscribers admin dashboard, leading to a SQL injection, which could also be used to perform Reflected Cross-Site Scripting attack against a logged in admin opening a malicious link\n\n- CVE-2022-1407: The VikBooking Hotel Booking Engine & PMS WordPress plugin before 1.5.8 does not have CSRF check in place when adding a tracking campaign, and does not escape the campaign fields when outputting them In attributes. As a result, attackers could make a logged in admin add tracking campaign with XSS payloads in them via a CSRF attack\n\n- CVE-2022-2099: The WooCommerce WordPress plugin before 6.6.0 is vulnerable to stored HTML injection due to lack of escaping and sanitizing in the payment gateway titles\n\n- CVE-2022-2241: The Featured Image from URL (FIFU) WordPress plugin before 4.0.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack. Furthermore, due to the lack of validation, sanitisation and escaping in some of them, it could also lead to Stored XSS issues\n\n- CVE-2022-22734: The Simple Quotation WordPress plugin through 1.3.2 does not have CSRF check when creating or editing a quote and does not sanitise and escape Quotes. As a result, attacker could make a logged in admin create or edit arbitrary quote, and put Cross-Site Scripting payloads in them\n\n- CVE-2022-23603: iTunesRPC-Remastered is a discord rich presence application for use with iTunes & Apple Music. In code before commit 24f43aa user input is not properly sanitized and code injection is possible. Users are advised to upgrade as soon as is possible. There are no known workarounds for this issue.\n\n- CVE-2022-23620: XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. In affected versions AbstractSxExportURLFactoryActionHandler#processSx does not escape anything from SSX document references when serializing it on filesystem, it is possible to for the HTML export process to contain reference elements containing filesystem syntax like \"../\", \"./\". or \"/\" in general. The referenced elements are not properly escaped. This issue has been resolved in version 13.6-rc-1. This issue can be worked around by limiting or disabling document export.\n\n- CVE-2022-30966: Jenkins Random String Parameter Plugin 1.0 and earlier does not escape the name and description of Random String parameters on views displaying parameters, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.\n\n- CVE-2022-48339: An issue was discovered in GNU Emacs through 28.2. htmlfontify.el has a command injection vulnerability. In the hfy-istext-command function, the parameter file and parameter srcdir come from external input, and parameters are not escaped. If a file name or directory name contains shell metacharacters, code may be executed.\n\n- CVE-2022-24682: An issue was discovered in the Calendar feature in Zimbra Collaboration Suite 8.8.x before 8.8.15 patch 30 (update 1), as exploited in the wild starting in December 2021. An attacker could place HTML containing executable JavaScript inside element attributes. This markup becomes unescaped, causing arbitrary markup to be injected into the document.\n\n- CVE-2022-42948: Cobalt Strike 4.7.1 fails to properly escape HTML tags when they are displayed on Swing components. By injecting crafted HTML code, it is possible to remotely execute code in the Cobalt Strike UI.\n\n- CVE-2021-39027: IBM Guardium Data Encryption (GDE) 4.0.0 and 5.0.0 prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved. IBM X-Force ID: 213865.\n\n- CVE-2022-41934: XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. Any user with view rights on commonly accessible documents including the menu macro can execute arbitrary Groovy, Python or Velocity code in XWiki leading to full access to the XWiki installation due to improper escaping of the macro content and parameters of the menu macro. The problem has been patched in XWiki 14.6RC1, 13.10.8 and 14.4.3. The patch (commit `2fc20891`) for the document `Menu.MenuMacro` can be manually applied or a XAR archive of a patched version can be imported. The menu macro was basically unchanged since XWiki 11.6 so on XWiki 11.6 or later the patch for version of 13.10.8 (commit `59ccca24a`) can most likely be applied, on XWiki version 14.0 and later the versions in XWiki 14.6 and 14.4.3 should be appropriate.\n\n- CVE-2022-45143: The JsonErrorReportValve in Apache Tomcat 8.5.83, 9.0.40 to 9.0.68 and 10.1.0-M1 to 10.1.1 did not escape the type, message or description values. In some circumstances these are constructed from user provided data and it was therefore possible for users to supply values that invalidated or manipulated the JSON output.\n\n- CVE-2022-28960: A PHP injection vulnerability in Spip before v3.2.8 allows attackers to execute arbitrary PHP code via the _oups parameter at /ecrire.\n\n- CVE-2022-36099: XWiki Platform Wiki UI Main Wiki is software for managing subwikis on XWiki Platform, a generic wiki platform. Starting with version 5.3-milestone-2 and prior to versions 13.10.6 and 14.4, it's possible to inject arbitrary wiki syntax including Groovy, Python and Velocity script macros via the request (URL parameter) using the `XWikiServerClassSheet` if the user has view access to this sheet and another page that has been saved with programming rights, a standard condition on a public read-only XWiki installation or a private XWiki installation where the user has an account. This allows arbitrary Groovy/Python/Velocity code execution which allows bypassing all rights checks and thus both modification and disclosure of all content stored in the XWiki installation. Also, this could be used to impact the availability of the wiki. This has been patched in versions 13.10.6 and 14.4. As a workaround, edit the affected document `XWiki.XWikiServerClassSheet` or `WikiManager.XWikiServerClassSheet` and manually perform the changes from the patch fixing the issue. On XWiki versions 12.0 and later, it is also possible to import the document `XWiki.XWikiServerClassSheet` from the xwiki-platform-wiki-ui-mainwiki package version 14.4 using the import feature of the administration application as there have been no other changes to this document since XWiki 12.0.\n\n- CVE-2022-36100: XWiki Platform Applications Tag and XWiki Platform Tag UI are tag applications for XWiki, a generic wiki platform. Starting with version 1.7 in XWiki Platform Applications Tag and prior to 13.10.6 and 14.4 in XWiki Platform Tag UI, the tags document `Main.Tags` in XWiki didn't sanitize user inputs properly. This allowed users with view rights on the document (default in a public wiki or for authenticated users on private wikis) to execute arbitrary Groovy, Python and Velocity code with programming rights. This also allowed bypassing all rights checks and thus both modification and disclosure of all content stored in the XWiki installation. The vulnerability could be used to impact the availability of the wiki. On XWiki versions before 13.10.4 and 14.2, this can be combined with CVE-2022-36092, meaning that no rights are required to perform the attack. The vulnerability has been patched in versions 13.10.6 and 14.4. As a workaround, the patch that fixes the issue can be manually applied to the document `Main.Tags` or the updated version of that document can be imported from version 14.4 of xwiki-platform-tag-ui using the import feature in the administration UI on XWiki 10.9 and later.\n\n- CVE-2022-22744: The constructed curl command from the \"Copy as curl\" feature in DevTools was not properly escaped for PowerShell. This could have lead to command injection if pasted into a Powershell prompt.<br>*This bug only affects Thunderbird for Windows. Other operating systems are unaffected.*. This vulnerability affects Firefox ESR < 91.5, Firefox < 96, and Thunderbird < 91.5.\n\n- CVE-2022-22992: A command injection remote code execution vulnerability was discovered on Western Digital My Cloud Devices that could allow an attacker to execute arbitrary system commands on the device. The vulnerability was addressed by escaping individual arguments to shell functions coming from user input.\n\n- CVE-2022-34820: A vulnerability has been identified in SIMATIC CP 1242-7 V2 (All versions < V3.3.46), SIMATIC CP 1243-1 (All versions < V3.3.46), SIMATIC CP 1243-7 LTE EU (All versions < V3.3.46), SIMATIC CP 1243-7 LTE US (All versions < V3.3.46), SIMATIC CP 1243-8 IRC (All versions < V3.3.46), SIMATIC CP 1542SP-1 IRC (All versions >= V2.0 < V2.2.28), SIMATIC CP 1543-1 (All versions < V3.0.22), SIMATIC CP 1543SP-1 (All versions >= V2.0 < V2.2.28), SIPLUS ET 200SP CP 1542SP-1 IRC TX RAIL (All versions >= V2.0 < V2.2.28), SIPLUS ET 200SP CP 1543SP-1 ISEC (All versions >= V2.0 < V2.2.28), SIPLUS ET 200SP CP 1543SP-1 ISEC TX RAIL (All versions >= V2.0 < V2.2.28), SIPLUS NET CP 1242-7 V2 (All versions < V3.3.46), SIPLUS NET CP 1543-1 (All versions < V3.0.22), SIPLUS S7-1200 CP 1243-1 (All versions < V3.3.46), SIPLUS S7-1200 CP 1243-1 RAIL (All versions < V3.3.46). The application does not correctly escape some user provided fields during the authentication process. This could allow an attacker to inject custom commands and execute arbitrary code with elevated privileges.\n\n- CVE-2022-35153: FusionPBX 5.0.1 was discovered to contain a command injection vulnerability via /fax/fax_send.php.\n\n- CVE-2022-29599: In Apache Maven maven-shared-utils prior to version 3.3.3, the Commandline class can emit double-quoted strings without proper escaping, allowing shell injection attacks.\n\n- CVE-2022-26174: A remote code execution (RCE) vulnerability in Beekeeper Studio v3.2.0 allows attackers to execute arbitrary code via a crafted payload injected into the display fields.\n\n- CVE-2021-30589: Insufficient validation of untrusted input in Sharing in Google Chrome prior to 92.0.4515.107 allowed a remote attacker to bypass navigation restrictions via a crafted click-to-call link.\n\n- CVE-2022-0124: An issue has been discovered affecting GitLab versions prior to 14.4.5, between 14.5.0 and 14.5.3, and between 14.6.0 and 14.6.1. Gitlab's Slack integration is incorrectly validating user input and allows to craft malicious URLs that are sent to slack.\n\n- CVE-2022-0741: Improper input validation in all versions of GitLab CE/EE using sendmail to send emails allowed an attacker to steal environment variables via specially crafted email addresses.\n\n- CVE-2022-20230: In choosePrivateKeyAlias of KeyChain.java, there is a possible access to the user's certificate due to improper input validation. This could lead to local information disclosure with no additional execution privileges needed. User interaction is needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12LAndroid ID: A-221859869\n\n- CVE-2022-2619: Insufficient validation of untrusted input in Settings in Google Chrome prior to 104.0.5112.79 allowed an attacker who convinced a user to install a malicious extension to inject scripts or HTML into a privileged page via a crafted HTML page.\n\n- CVE-2021-4068: Insufficient data validation in new tab page in Google Chrome prior to 96.0.4664.93 allowed a remote attacker to leak cross-origin data via a crafted HTML page.\n\nRelated Weaknesses:\n\n- CWE-707 (ChildOf)\n\n- CWE-74 (CanPrecede)",
        "type": "Class",
        "source": "sparse",
        "search_source": "weakness:command injection",
        "sources": [
          "base",
          "weakness"
        ],
        "boost_factor": 2.8,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed-with-Review",
            "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
            "comments": "Examine children of this entry to see if there is a better fit",
            "reasons": [
              "Abstraction"
            ]
          }
        }
      },
      {
        "cwe_id": "74",
        "name": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
        "description": "The product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.",
        "score": 85.84432739015202,
        "matched_text": "CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n\nType: Class\n\nStatus: Incomplete\n\nDescription:\n\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\nExtended Details:\n\nSoftware or other automated logic has certain assumptions about what constitutes data and control respectively. It is the lack of verification of these assumptions for user-controlled input that leads to injection problems. Injection problems encompass a wide variety of issues -- all mitigated in very different ways and usually attempted in order to alter the control flow of the process. For this reason, the most effective way to discuss these weaknesses is to note the distinct features that classify them as injection weaknesses. The most important issue to note is that all injection problems share one thing in common -- i.e., they allow for the injection of control plane data into the user-controlled data plane. This means that the execution of the process may be altered by sending code in through legitimate data channels, using no other mechanism. While buffer overflows, and many other flaws, involve the use of some further issue to gain execution, injection problems need only for the data to be parsed.\n\nReal-World Examples:\n\n- CVE-2024-5184: API service using a large generative AI model allows direct prompt injection to leak hard-coded system prompts or execute other prompts.\n\n- CVE-2022-36069: Python-based dependency management tool avoids OS command injection when generating Git commands but allows injection of optional arguments with input beginning with a dash (CWE-88), potentially allowing for code execution.\n\n- CVE-1999-0067: Canonical example of OS command injection. CGI program does not neutralize \"|\" metacharacter when invoking a phonebook program.\n\n- CVE-2022-1509: injection of sed script syntax (\"sed injection\")\n\n- CVE-2020-9054: Chain: improper input validation (CWE-20) in username parameter, leading to OS command injection (CWE-78), as exploited in the wild per CISA KEV.\n\n- CVE-2021-44228: Product does not neutralize ${xyz} style expressions, allowing remote code execution. (log4shell vulnerability)\n\nTop 25 CWE Examples:\n\n- CVE-2021-29676: IBM Security Verify (IBM Security Verify Privilege Vault 10.9.66) is vulnerable to link injection. By persuading a victim to click on a specially-crafted URL link, a remote attacker could exploit this vulnerability to conduct various attacks against the vulnerable system, including cross-site scripting, cache poisoning or session hijacking\n\n- CVE-2021-38458: A path traversal vulnerability in the Moxa MXview Network Management software Versions 3.x to 3.2.2 may allow an attacker to create or overwrite critical files used to execute code, such as programs or libraries.\n\n- CVE-2021-21137: Inappropriate implementation in DevTools in Google Chrome prior to 88.0.4324.96 allowed a remote attacker to obtain potentially sensitive information from disk via a crafted HTML page.\n\n- CVE-2021-27614: SAP Business One Hana Chef Cookbook, versions - 8.82, 9.0, 9.1, 9.2, 9.3, 10.0, used to install SAP Business One on SAP HANA, allows an attacker to inject code that can be executed by the application. An attacker could thereby control the behaviour of the application thereby highly impacting the integrity and availability of the application.\n\n- CVE-2021-3154: An issue was discovered in SolarWinds Serv-U before 15.2.2. Unauthenticated attackers can retrieve cleartext passwords via macro Injection. NOTE: this had a distinct fix relative to CVE-2020-35481.\n\n- CVE-2021-29084: Improper neutralization of special elements in output used by a downstream component ('Injection') vulnerability in Security Advisor report management component in Synology DiskStation Manager (DSM) before 6.2.3-25426-3 allows remote attackers to read arbitrary files via unspecified vectors.\n\n- CVE-2021-29085: Improper neutralization of special elements in output used by a downstream component ('Injection') vulnerability in file sharing management component in Synology DiskStation Manager (DSM) before 6.2.3-25426-3 allows remote attackers to read arbitrary files via unspecified vectors.\n\n- CVE-2021-27908: In all versions prior to Mautic 3.3.2, secret parameters such as database credentials could be exposed publicly by an authorized admin user through leveraging Symfony parameter syntax in any of the free text fields in Mautic\u2019s configuration that are used in publicly facing parts of the application.\n\n- CVE-2020-5323: Dell EMC OpenManage Enterprise (OME) versions prior to 3.2 and OpenManage Enterprise-Modular (OME-M) versions prior to 1.10.00 contain an injection vulnerability. A remote authenticated malicious user with low privileges could potentially exploit this vulnerability to gain access to sensitive information or cause denial-of-service.\n\n- CVE-2021-20101: Machform prior to version 16 is vulnerable to HTTP host header injection due to improperly validated host headers. This could cause a victim to receive malformed content.\n\n- CVE-2021-20644: ELECOM WRC-1467GHBK-A allows arbitrary scripts to be executed on the user's web browser by displaying a specially crafted SSID on the web setup page.\n\n- CVE-2021-20802: HTTP header injection vulnerability in Cybozu Remote Service 3.1.8 to 3.1.9 allows a remote attacker to alter the information stored in the product.\n\n- CVE-2021-21510: Dell iDRAC8 versions prior to 2.75.100.75 contain a host header injection vulnerability. A remote unauthenticated attacker may potentially exploit this vulnerability by injecting arbitrary \u2018Host\u2019 header values to poison a web-cache or trigger redirections.\n\n- CVE-2021-21580: Dell EMC iDRAC8 versions prior to 2.80.80.80 & Dell EMC iDRAC9 versions prior to 5.00.00.00 contain a Content spoofing / Text injection, where a malicious URL can inject text to present a customized message on the application that can phish users into believing that the message is legitimate.\n\n- CVE-2021-23400: The package nodemailer before 6.6.1 are vulnerable to HTTP Header Injection if unsanitized user input that may contain newlines and carriage returns is passed into an address object.\n\n- CVE-2021-25980: In Talkyard, versions v0.04.01 through v0.6.74-WIP-63220cb, v0.2020.22-WIP-b2e97fe0e through v0.2021.02-WIP-879ef3fe1 and tyse-v0.2021.02-879ef3fe1-regular through tyse-v0.2021.28-af66b6905-regular, are vulnerable to Host Header Injection. By luring a victim application-user to click on a link, an unauthenticated attacker can use the \u201cforgot password\u201d functionality to reset the victim\u2019s password and successfully take over their account.\n\n- CVE-2021-26084: In affected versions of Confluence Server and Data Center, an OGNL injection vulnerability exists that would allow an unauthenticated attacker to execute arbitrary code on a Confluence Server or Data Center instance. The affected versions are before version 6.13.23, from version 6.14.0 before 7.4.11, from version 7.5.0 before 7.11.6, and from version 7.12.0 before 7.12.5.\n\n- CVE-2021-28963: Shibboleth Service Provider before 3.2.1 allows content injection because template generation uses attacker-controlled parameters.\n\n- CVE-2021-36322: Dell Networking X-Series firmware versions prior to 3.0.1.8 contain a host header injection vulnerability. A remote unauthenticated attacker may potentially exploit this vulnerability by injecting arbitrary host header values to poison the web-cache or trigger redirections.\n\n- CVE-2021-36381: In Edifecs Transaction Management through 2021-07-12, an unauthenticated user can inject arbitrary text into a user's browser via logon.jsp?logon_error= on the login screen of the Web application.\n\n- CVE-2021-37033: There is an Injection attack vulnerability in Huawei Smartphone.Successful exploitation of this vulnerability may affect service availability.\n\n- CVE-2021-38290: A host header attack vulnerability exists in FUEL CMS 1.5.0 through fuel/modules/fuel/config/fuel_constants.php and fuel/modules/fuel/libraries/Asset.php. An attacker can use a man in the middle attack such as phishing.\n\n- CVE-2021-38371: The STARTTLS feature in Exim through 4.94.2 allows response injection (buffering) during MTA SMTP sending.\n\n- CVE-2021-39213: GLPI is a free Asset and IT management software package. Starting in version 9.1 and prior to version 9.5.6, GLPI with API Rest enabled is vulnerable to API bypass with custom header injection. This issue is fixed in version 9.5.6. One may disable API Rest as a workaround.\n\n- CVE-2021-40143: Sonatype Nexus Repository 3.x through 3.33.1-01 is vulnerable to an HTTP header injection. By sending a crafted HTTP request, a remote attacker may disclose sensitive information or request external resources from a vulnerable instance.\n\n- CVE-2021-43185: JetBrains YouTrack before 2021.3.23639 is vulnerable to Host header injection.\n\n- CVE-2021-25994: In Userfrosting, versions v0.3.1 to v4.6.2 are vulnerable to Host Header Injection. By luring a victim application user to click on a link, an unauthenticated attacker can use the \u201cforgot password\u201d functionality to reset the victim\u2019s password and successfully take over their account.\n\n- CVE-2021-37262: JFinal_cms 5.1.0 is vulnerable to regex injection that may lead to Denial of Service.\n\n- CVE-2021-43437: In sourcecodetester Engineers Online Portal as of 10-21-21, an attacker can manipulate the Host header as seen by the web application and cause the application to behave in unexpected ways. Very often multiple websites are hosted on the same IP address. This is where the Host Header comes in. This header specifies which website should process the HTTP request. The web server uses the value of this header to dispatch the request to the specified website. Each website hosted on the same IP address is called a virtual host. And It's possible to send requests with arbitrary Host Headers to the first virtual host.\n\n- CVE-2021-44530: An injection vulnerability exists in a third-party library used in UniFi Network Version 6.5.53 and earlier (Log4J CVE-2021-44228) allows a malicious actor to control the application.\n\n- CVE-2021-44537: ownCloud owncloud/client before 2.9.2 allows Resource Injection by a server into the desktop client via a URL, leading to remote code execution.\n\n- CVE-2021-45658: Certain NETGEAR devices are affected by server-side injection. This affects D7800 before 1.0.1.58, DM200 before 1.0.0.66, EX2700 before 1.0.1.56, EX6150v2 before 1.0.1.86, EX6100v2 before 1.0.1.86, EX6200v2 before 1.0.1.78, EX6250 before 1.0.0.110, EX6410 before 1.0.0.110, EX6420 before 1.0.0.110, EX6400v2 before 1.0.0.110, EX7300 before 1.0.2.144, EX6400 before 1.0.2.144, EX7320 before 1.0.0.110, EX7300v2 before 1.0.0.110, R7500v2 before 1.0.3.48, R7800 before 1.0.2.68, R8900 before 1.0.5.2, R9000 before 1.0.5.2, RAX120 before 1.0.1.90, RBK40 before 2.5.1.16, RBK20 before 2.5.1.16, RBR20 before 2.5.1.16, RBS20 before 2.5.1.16, RBK50 before 2.5.1.16, RBR50 before 2.5.1.16, RBS50 before 2.5.1.16, RBS50Y before 2.6.1.40, WN3000RPv2 before 1.0.0.78, WN3000RPv3 before 1.0.2.80, WNR2000v5 before 1.0.0.72, XR500 before 2.3.2.56, and XR700 before 1.0.1.20.\n\n- CVE-2021-45655: NETGEAR R6400 devices before 1.0.1.70 are affected by server-side injection.\n\n- CVE-2021-45656: Certain NETGEAR devices are affected by server-side injection. This affects D6200 before 1.1.00.38, D7000 before 1.0.1.78, R6020 before 1.0.0.48, R6080 before 1.0.0.48, R6050 before 1.0.1.26, JR6150 before 1.0.1.26, R6120 before 1.0.0.66, R6220 before 1.1.0.100, R6230 before 1.1.0.100, R6260 before 1.1.0.78, R6800 before 1.2.0.76, R6900v2 before 1.2.0.76, R6700v2 before 1.2.0.76, R7450 before 1.2.0.76, AC2100 before 1.2.0.76, AC2400 before 1.2.0.76, AC2600 before 1.2.0.76, RBK40 before 2.5.1.16, RBR40 before 2.5.1.16, RBS40 before 2.5.1.16, RBK20 before 2.5.1.16, RBR20 before 2.5.1.16, RBS20 before 2.5.1.16, RBK50 before 2.5.1.16, RBR50 before 2.5.1.16, RBS50 before 2.5.1.16, and RBS50Y before 2.6.1.40.\n\n- CVE-2021-45657: Certain NETGEAR devices are affected by server-side injection. This affects D6200 before 1.1.00.38, D7000 before 1.0.1.78, R6020 before 1.0.0.48, R6080 before 1.0.0.48, R6050 before 1.0.1.26, JR6150 before 1.0.1.26, R6120 before 1.0.0.66, R6220 before 1.1.0.100, R6230 before 1.1.0.100, R6260 before 1.1.0.78, R6800 before 1.2.0.76, R6900v2 before 1.2.0.76, R6700v2 before 1.2.0.76, R7450 before 1.2.0.76, AC2100 before 1.2.0.76, AC2400 before 1.2.0.76, AC2600 before 1.2.0.76, RBK40 before 2.5.1.16, RBR40 before 2.5.1.16, RBS40 before 2.5.1.16, RBK20 before 2.5.1.16, RBR20 before 2.5.1.16, RBS20 before 2.5.1.16, RBK50 before 2.5.1.16, RBR50 before 2.5.1.16, RBS50 before 2.5.1.16, RBS50Y before 2.6.1.40, and WNR2020 before 1.1.0.62.\n\n- CVE-2021-45659: Certain NETGEAR devices are affected by server-side injection. This affects RBK40 before 2.5.1.16, RBR40 before 2.5.1.16, RBS40 before 2.5.1.16, RBK20 before 2.5.1.16, RBR20 before 2.5.1.16, RBS20 before 2.5.1.16, RBK50 before 2.5.1.16, RBR50 before 2.5.1.16, RBS50 before 2.5.1.16, and RBS50Y before 2.6.1.40.\n\n- CVE-2021-45660: Certain NETGEAR devices are affected by server-side injection. This affects RBK40 before 2.5.1.16, RBR40 before 2.5.1.16, RBS40 before 2.5.1.16, RBK20 before 2.5.1.16, RBR20 before 2.5.1.16, RBS20 before 2.5.1.16, RBK50 before 2.5.1.16, RBR50 before 2.5.1.16, RBS50 before 2.5.1.16, and RBS50Y before 2.6.1.40.\n\n- CVE-2021-45661: Certain NETGEAR devices are affected by server-side injection. This affects RBK40 before 2.5.1.16, RBR40 before 2.5.1.16, RBS40 before 2.5.1.16, RBK20 before 2.5.1.16, RBR20 before 2.5.1.16, RBS20 before 2.5.1.16, RBK50 before 2.5.1.16, RBR50 before 2.5.1.16, RBS50 before 2.5.1.16, and RBS50Y before 2.6.1.40.\n\n- CVE-2021-32499: SICK SOPAS ET before version 4.8.0 allows attackers to manipulate the command line arguments to pass in any value to the Emulator executable.\n\n- CVE-2021-29872: IBM Cloud Pak for Automation 21.0.1 and 21.0.2 - Business Automation Studio Component is vulnerable to HTTP header injection, caused by improper validation of input by the HOST headers. By sending a specially crafted HTTP request, a remote attacker could exploit this vulnerability to inject HTTP HOST header, which will allow the attacker to conduct various attacks against the vulnerable system, including cross-site scripting, cache poisoning or session hijacking. IBM X-Force ID: 206228.\n\n- CVE-2021-41282: diag_routes.php in pfSense 2.5.2 allows sed data injection. Authenticated users are intended to be able to view data about the routes set in the firewall. The data is retrieved by executing the netstat utility, and then its output is parsed via the sed utility. Although the common protection mechanisms against command injection (i.e., the usage of the escapeshellarg function for the arguments) are used, it is still possible to inject sed-specific code and write an arbitrary file in an arbitrary location.\n\n- CVE-2022-31777: A stored cross-site scripting (XSS) vulnerability in Apache Spark 3.2.1 and earlier, and 3.3.0, allows remote attackers to execute arbitrary JavaScript in the web browser of a user, by including a malicious payload into the logs which would be returned in logs rendered in the UI.\n\n- CVE-2022-28345: The Signal app before 5.34 for iOS allows URI spoofing via RTLO injection. It incorrectly renders RTLO encoded URLs beginning with a non-breaking space, when there is a hash character in the URL. This technique allows a remote unauthenticated attacker to send legitimate looking links, appearing to be any website URL, by abusing the non-http/non-https automatic rendering of URLs. An attacker can spoof, for example, example.com, and masquerade any URL with a malicious destination. An attacker requires a subdomain such as gepj, txt, fdp, or xcod, which would appear backwards as jpeg, txt, pdf, and docx respectively.\n\n- CVE-2022-3941: A vulnerability has been found in Activity Log Plugin and classified as critical. This vulnerability affects unknown code of the component HTTP Header Handler. The manipulation of the argument X-Forwarded-For leads to improper output neutralization for logs. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-213448.\n\n- CVE-2021-36668: URL injection in Driva inSync 6.9.0 for MacOS, allows attackers to force a visit to an arbitrary url via the port parameter to the Electron App.\n\n- CVE-2022-23064: In Snipe-IT, versions v3.0-alpha to v5.3.7 are vulnerable to Host Header Injection. By sending a specially crafted host header in the reset password request, it is possible to send password reset links to users which once clicked lead to an attacker controlled server and thus leading to password reset token leak. This leads to account take over.\n\n- CVE-2022-23701: A potential remote host header injection security vulnerability has been identified in HPE Integrated Lights-Out 4 (iLO 4) firmware version(s): Prior to 2.60. This vulnerability could be remotely exploited to allow an attacker to supply invalid input to the iLO 4 webserver, causing it to respond with a redirect to an attacker-controlled domain. HPE has provided a firmware update to resolve this vulnerability in HPE Integrated Lights-Out 4 (iLO 4).\n\n- CVE-2022-25337: Ibexa DXP ezsystems/ezpublish-kernel 7.5.x before 7.5.26 and 1.3.x before 1.3.12 allows injection attacks via image filenames.\n\n- CVE-2022-31593: SAP Business One client - version 10.0 allows an attacker with low privileges, to inject code that can be executed by the application. An attacker could thereby control the behavior of the application.\n\n- CVE-2022-31658: VMware Workspace ONE Access, Identity Manager and vRealize Automation contain a remote code execution vulnerability. A malicious actor with administrator and network access can trigger a remote code execution.\n\n- CVE-2022-31665: VMware Workspace ONE Access, Identity Manager and vRealize Automation contain a remote code execution vulnerability. A malicious actor with administrator and network access can trigger a remote code execution.\n\n- CVE-2022-34773: Tabit - HTTP Method manipulation. https://bridge.tabit.cloud/configuration/addresses-query - can be POST-ed to add addresses to the DB. This is an example of OWASP:API8 \u2013 Injection.\n\n- CVE-2022-35735: In BIG-IP Versions 16.1.x before 16.1.3.1, 15.1.x before 15.1.6.1, 14.1.x before 14.1.5.1, and all versions of 13.1.x, an authenticated attacker with Resource Administrator or Manager privileges can create or modify existing monitor objects in the Configuration utility in an undisclosed manner leading to a privilege escalation. Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.\n\n- CVE-2022-35954: The GitHub Actions ToolKit provides a set of packages to make creating actions easier. The `core.exportVariable` function uses a well known delimiter that attackers can use to break out of that specific variable and assign values to other arbitrary variables. Workflows that write untrusted values to the `GITHUB_ENV` file may cause the path or other environment variables to be modified without the intention of the workflow or action author. Users should upgrade to `@actions/core v1.9.1`. If you are unable to upgrade the `@actions/core` package, you can modify your action to ensure that any user input does not contain the delimiter `_GitHubActionsFileCommandDelimeter_` before calling `core.exportVariable`.\n\n- CVE-2022-46265: A vulnerability has been identified in Polarion ALM (All versions < V2304.0). The affected application contains a Host header injection vulnerability that could allow an attacker to spoof a Host header information and redirect users to malicious websites.\n\n- CVE-2022-26205: Marky commit 3686565726c65756e was discovered to contain a remote code execution (RCE) vulnerability via the Display text fields. This vulnerability allows attackers to execute arbitrary code via injection of a crafted payload.\n\n- CVE-2022-37933: A potential security vulnerability has been identified in HPE Superdome Flex and Superdome Flex 280 servers. The vulnerability could be exploited to allow local unauthorized data injection. HPE has made the following software updates to resolve the vulnerability in HPE Superdome Flex firmware 3.60.50 and below and Superdome Flex 280 servers firmware 1.40.60 and below. \n\n- CVE-2022-38796: A Host Header Injection vulnerability in Feehi CMS 2.1.1 may allow an attacker to spoof a particular header. This can be exploited by abusing password reset emails.\n\n- CVE-2022-33011: Known v1.3.1+2020120201 was discovered to allow attackers to perform an account takeover via a host header injection attack.\n\n- CVE-2022-33012: Microweber v1.2.15 was discovered to allow attackers to perform an account takeover via a host header injection attack.\n\n- CVE-2022-37108: An injection vulnerability in the syslog-ng configuration wizard in Securonix Snypr 6.4 allows an application user with the \"Manage Ingesters\" permission to execute arbitrary code on remote ingesters by appending arbitrary text to text files that are executed by the system, such as users' crontab files. The patch for this was present in SNYPR version 6.4 Jun 2022 R3_[06170871], but may have been introduced sooner.\n\nRelated Weaknesses:\n\n- CWE-707 (ChildOf)",
        "type": "Class",
        "source": "sparse",
        "search_source": "weakness:command injection",
        "sources": [
          "base",
          "weakness"
        ],
        "boost_factor": 2.8,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Discouraged",
            "rationale": "CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.",
            "comments": "Examine the children and descendants of this entry to find a more precise mapping.",
            "reasons": [
              "Frequent Misuse",
              "Abstraction"
            ]
          }
        }
      },
      {
        "cwe_id": "790",
        "name": "Improper Filtering of Special Elements",
        "description": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
        "score": 85.21118989842024,
        "matched_text": "CWE-790: Improper Filtering of Special Elements\n\nType: Class\n\nStatus: Incomplete\n\nDescription:\n\nThe product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.\n\nTop 25 CWE Examples:\n\n- CVE-2021-26029: An issue was discovered in Joomla! 1.6.0 through 3.9.24. Inadequate filtering of form contents could allow to overwrite the author field.\n\n- CVE-2021-0931: In getAlias of BluetoothDevice.java, there is a possible way to create misleading permission dialogs due to missing data filtering. This could lead to local information disclosure with User execution privileges needed. User interaction is needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-9Android ID: A-180747689\n\n- CVE-2022-0895: Static Code Injection in GitHub repository microweber/microweber prior to 1.3.\n\n- CVE-2022-40145: This vulnerable is about a potential code injection when an attacker has control of the target LDAP server using in the JDBC JNDI URL. The function jaas.modules.src.main.java.porg.apache.karaf.jass.modules.jdbc.JDBCUtils#doCreateDatasource use InitialContext.lookup(jndiName) without filtering. An user can modify `options.put(JDBCUtils.DATASOURCE, \"osgi:\" + DataSource.class.getName());` to `options.put(JDBCUtils.DATASOURCE,\"jndi:rmi://x.x.x.x:xxxx/Command\");` in JdbcLoginModuleTest#setup. This is vulnerable to a remote code execution (RCE) attack when a configuration uses a JNDI LDAP data source URI when an attacker has control of the target LDAP server.This issue affects all versions of Apache Karaf up to 4.4.1 and 4.3.7. We encourage the users to upgrade to Apache Karaf at least 4.4.2 or 4.3.8\n\n- CVE-2022-40740: Realtek GPON router has insufficient filtering for special characters. A remote attacker authenticated as an administrator can exploit this vulnerability to perform command injection attacks, to execute arbitrary system command, manipulate system or disrupt service.\n\n- CVE-2021-35587: Vulnerability in the Oracle Access Manager product of Oracle Fusion Middleware (component: OpenSSO Agent). Supported versions that are affected are 11.1.2.3.0, 12.2.1.3.0 and 12.2.1.4.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Oracle Access Manager. Successful attacks of this vulnerability can result in takeover of Oracle Access Manager. CVSS 3.1 Base Score 9.8 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H).\n\n- CVE-2022-24300: Minetest before 5.4.0 allows attackers to add or modify arbitrary meta fields of the same item stack as saved user input, aka ItemStack meta injection.\n\n- CVE-2022-24888: Nextcloud Server is the file server software for Nextcloud, a self-hosted productivity platform. Prior to versions 20.0.14.4, 21.0.8, 22.2.4, and 23.0.1, it is possible to create files and folders that have leading and trailing \\\\n, \\\\r, \\\\t, and \\\\v characters. The server rejects files and folders that have these characters in the middle of their names, so this might be an opportunity for injection. This issue is fixed in versions 20.0.14.4, 21.0.8, 22.2.4, and 23.0.1. There are currently no known workarounds.\n\n- CVE-2022-0578: Code Injection in GitHub repository publify/publify prior to 9.2.8.\n\n- CVE-2022-22985: The absence of filters when loading some sections in the web application of the vulnerable device allows attackers to inject malicious code that will be interpreted when a legitimate user accesses the specific web section where the information is displayed. Injection can be done on specific parameters. The injected code is executed when a legitimate user attempts to review history.\n\n- CVE-2022-24915: The absence of filters when loading some sections in the web application of the vulnerable device allows attackers to inject malicious code that will be interpreted when a legitimate user accesses the web section where the information is displayed. Injection can be done on specific parameters. The injected code is executed when a legitimate user attempts to upload, copy, download, or delete an existing configuration (Administrative Services).\n\n- CVE-2022-26198: Notable v1.8.4 does not filter text editing, allowing attackers to execute arbitrary code via a crafted payload injected into the Title text field.\n\n- CVE-2022-26272: A remote code execution (RCE) vulnerability in Ionize v1.0.8.1 allows attackers to execute arbitrary code via a crafted string written to the file application/config/config.php.\n\n- CVE-2022-28096: Skycaiji v2.4 was discovered to contain a remote code execution (RCE) vulnerability via /SkycaijiApp/admin/controller/Develop.php.\n\n- CVE-2022-3383: The Ultimate Member plugin for WordPress is vulnerable to Remote Code Execution in versions up to, and including, 2.5.0 via the get_option_value_from_callback function that accepts user supplied input and passes it through call_user_func(). This makes it possible for authenticated attackers, with administrative capabilities, to execute code on the server.\n\n- CVE-2022-3384: The Ultimate Member plugin for WordPress is vulnerable to Remote Code Execution in versions up to, and including, 2.5.0 via the populate_dropdown_options function that accepts user supplied input and passes it through call_user_func(). This is restricted to non-parameter PHP functions like phpinfo(); since user supplied parameters are not passed through the function. This makes it possible for authenticated attackers, with administrative privileges, to execute code on the server.\n\n- CVE-2022-36215: DedeBIZ v6 was discovered to contain a remote code execution vulnerability in sys_info.php.\n\n- CVE-2022-41945: super-xray is a vulnerability scanner (xray) GUI launcher. In version 0.1-beta, the URL is not filtered and directly spliced ??into the command, resulting in a possible RCE vulnerability. Users should upgrade to super-xray 0.2-beta.\n\n- CVE-2022-23881: ZZZCMS zzzphp v2.1.0 was discovered to contain a remote command execution (RCE) vulnerability via danger_key() at zzz_template.php.\n\n- CVE-2022-27411: TOTOLINK N600R v5.3c.5507_B20171031 was discovered to contain a command injection vulnerability via the QUERY_STRING parameter in the \"Main\" function.\n\n- CVE-2022-35517: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 adm.cgi has no filtering on parameters: web_pskValue, wl_Method, wlan_ssid, EncrypType, rwan_ip, rwan_mask, rwan_gateway, ppp_username, ppp_passwd and ppp_setver, which leads to command injection in page /wizard_router_mesh.shtml.\n\n- CVE-2022-35518: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 nas.cgi has no filtering on parameters: User1Passwd and User1, which leads to command injection in page /nas_disk.shtml.\n\n- CVE-2022-35519: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 firewall.cgi has no filtering on parameter add_mac, which leads to command injection in page /cli_black_list.shtml.\n\n- CVE-2022-35520: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 api.cgi has no filtering on parameter ufconf, and this is a hidden parameter which doesn't appear in POST body, but exist in cgi binary. This leads to command injection in page /ledonoff.shtml.\n\n- CVE-2022-35521: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 firewall.cgi has no filtering on parameters: remoteManagementEnabled, blockPortScanEnabled, pingFrmWANFilterEnabled and blockSynFloodEnabled, which leads to command injection in page /man_security.shtml.\n\n- CVE-2022-35522: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 adm.cgi has no filtering on parameters: ppp_username, ppp_passwd, rwan_gateway, rwan_mask and rwan_ip, which leads to command injection in page /wan.shtml.\n\n- CVE-2022-35523: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 firewall.cgi has no filtering on parameter del_mac and parameter flag, which leads to command injection in page /cli_black_list.shtml.\n\n- CVE-2022-35524: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 adm.cgi has no filtering on parameters: wlan_signal, web_pskValue, sel_EncrypTyp, sel_Automode, wlan_bssid, wlan_ssid and wlan_channel, which leads to command injection in page /wizard_rep.shtml.\n\n- CVE-2022-35525: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 adm.cgi has no filtering on parameter led_switch, which leads to command injection in page /ledonoff.shtml.\n\n- CVE-2022-35526: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 login.cgi has no filtering on parameter key, which leads to command injection in page /login.shtml.\n\n- CVE-2022-35533: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 qos.cgi has no filtering on parameters: cli_list and cli_num, which leads to command injection in page /qos.shtml.\n\n- CVE-2022-35534: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 wireless.cgi has no filtering on parameter hiddenSSID32g and SSID2G2, which leads to command injection in page /wifi_multi_ssid.shtml.\n\n- CVE-2022-35535: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 wireless.cgi has no filtering on parameter macAddr, which leads to command injection in page /wifi_mesh.shtml.\n\n- CVE-2022-35536: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 qos.cgi has no filtering on parameters: qos_bandwith and qos_dat, which leads to command injection in page /qos.shtml.\n\n- CVE-2022-35537: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 wireless.cgi has no filtering on parameters: mac_5g and Newname, which leads to command injection in page /wifi_mesh.shtml.\n\n- CVE-2022-35538: WAVLINK WN572HP3, WN533A8, WN530H4, WN535G3, WN531P3 wireless.cgi has no filtering on parameters: delete_list, delete_al_mac, b_delete_list and b_delete_al_mac, which leads to command injection in page /wifi_mesh.shtml.\n\n- CVE-2022-37843: In TOTOLINK A860R V4.1.2cu.5182_B20201027 in cstecgi.cgi, the acquired parameters are directly put into the system for execution without filtering, resulting in a command injection vulnerability.\n\n- CVE-2022-29639: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a command injection vulnerability via the magicid parameter in the function uci_cloudupdate_config.\n\n- CVE-2022-32228: An information disclosure vulnerability exists in Rocket.Chat <v5, <v4.8.2 and <v4.7.5 since the getReadReceipts Meteor server method does not properly filter user inputs that are passed to MongoDB queries, allowing $regex queries to enumerate arbitrary Message IDs.\n\nRelated Weaknesses:\n\n- CWE-138 (ChildOf)",
        "type": "Class",
        "source": "sparse",
        "search_source": "weakness:command injection",
        "sources": [
          "weakness"
        ],
        "boost_factor": 2.8,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed-with-Review",
            "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
            "comments": "Examine children of this entry to see if there is a better fit",
            "reasons": [
              "Abstraction"
            ]
          }
        }
      },
      {
        "cwe_id": "620",
        "name": "Unverified Password Change",
        "description": "When setting a new password for a user, the product does not require knowledge of the original password, or using another form of authentication.",
        "score": 26.325134034464202,
        "matched_text": "CWE-620: Unverified Password Change\n\nType: Base\n\nStatus: Draft\n\nDescription:\n\nWhen setting a new password for a user, the product does not require knowledge of the original password, or using another form of authentication.\n\nExtended Details:\n\nThis could be used by an attacker to change passwords for another user, thus gaining the privileges associated with that user.\n\nReal-World Examples:\n\n- CVE-2007-0681: Web app allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions.\n\n- CVE-2000-0944: Web application password change utility doesn't check the original password.\n\nTop 25 CWE Examples:\n\n- CVE-2021-24359: The Plus Addons for Elementor Page Builder WordPress plugin before 4.1.11 did not properly check that a user requesting a password reset was the legitimate user, allowing an attacker to send an arbitrary reset password email to a registered user on behalf of the WordPress site. Such issue could be chained with an open redirect (CVE-2021-24358) in version below 4.1.10, to include a crafted password reset link in the email, which would lead to an account takeover.\n\n- CVE-2021-34785: Multiple vulnerabilities in Cisco BroadWorks CommPilot Application Software could allow an authenticated, remote attacker to delete arbitrary user accounts or gain elevated privileges on an affected system.\n\n- CVE-2021-34786: Multiple vulnerabilities in Cisco BroadWorks CommPilot Application Software could allow an authenticated, remote attacker to delete arbitrary user accounts or gain elevated privileges on an affected system.\n\n- CVE-2020-16839: On Crestron DM-NVX-DIR, DM-NVX-DIR80, and DM-NVX-ENT devices before the DM-XIO/1-0-3-802 patch, the password can be changed by sending an unauthenticated WebSocket request.\n\n- CVE-2021-40101: An issue was discovered in Concrete CMS before 8.5.7. The Dashboard allows a user's password to be changed without a prompt for the current password.\n\n- CVE-2020-20466: White Shark System (WSS) 1.3.2 is vulnerable to unauthorized access via user_edit_password.php, remote attackers can modify the password of any user.\n\n- CVE-2021-34977: This vulnerability allows network-adjacent attackers to bypass authentication on affected installations of NETGEAR R7000 1.0.11.116_10.2.100 routers. Authentication is not required to exploit this vulnerability. The specific flaw exists within the processing of SOAP requests. The issue results from the lack of proper authentication verification before performing a password reset. An attacker can leverage this vulnerability to reset the admin password. Was ZDI-CAN-13483.\n\n- CVE-2021-44152: An issue was discovered in Reprise RLM 14.2. Because /goform/change_password_process does not verify authentication or authorization, an unauthenticated user can change the password of any existing user. This allows an attacker to change the password of any known user, thereby preventing valid users from accessing the system and granting the attacker full access to that user's account.\n\n- CVE-2021-29394: Account Hijacking in /northstar/Admin/changePassword.jsp in Northstar Technologies Inc NorthStar Club Management 6.3 allows remote authenticated users to change the password of any targeted user accounts via lack of proper authorization in the user-controlled \"userID\" parameter of the HTTP POST request.\n\n- CVE-2022-21935: A vulnerability in Metasys ADS/ADX/OAS 10 versions prior to 10.1.5 and Metasys ADS/ADX/OAS 11 versions prior to 11.0.2 allows unverified password change.\n\n- CVE-2022-27484: A unverified password change in Fortinet FortiADC version 6.2.0 through 6.2.3, 6.1.x, 6.0.x, 5.x.x allows an authenticated attacker to bypass the Old Password check in the password change form via a crafted HTTP request.\n\n- CVE-2022-3152: Unverified Password Change in GitHub repository phpfusion/phpfusion prior to 9.10.20.\n\n- CVE-2022-21934: Under certain circumstances an authenticated user could lock other users out of the system or take over their accounts in Metasys ADS/ADX/OAS server 10 versions prior to 10.1.5 and Metasys ADS/ADX/OAS server 11 versions prior to 11.0.2.\n\n- CVE-2022-24551: A flaw was found in StarWind Stack. The endpoint for setting a new password doesn\u2019t check the current username and old password. An attacker could reset any local user password (including system/administrator user) using any available user This affects StarWind SAN and NAS v0.2 build 1633.\n\n- CVE-2022-0862: A lack of password change protection vulnerability in a depreciated API of McAfee Enterprise ePolicy Orchestrator (ePO) prior to 5.10 Update 13 allows a remote attacker to change the password of a compromised session without knowing the existing user's password. This functionality was removed from the User Interface in ePO 10 and the API has now been disabled. Other protection is in place to reduce the likelihood of this being successful through sending a link to a logged in user.\n\nRelated Weaknesses:\n\n- CWE-1390 (ChildOf)",
        "type": "Base",
        "search_source": "base_query",
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          }
        }
      },
      {
        "cwe_id": "1188",
        "name": "Initialization of a Resource with an Insecure Default",
        "description": "The product initializes or sets a resource with a default that is intended to be changed by the administrator, but the default is not secure.",
        "score": 26.02621927023227,
        "matched_text": "CWE-1188: Initialization of a Resource with an Insecure Default\n\nType: Base\n\nStatus: Incomplete\n\nDescription:\n\nThe product initializes or sets a resource with a default that is intended to be changed by the administrator, but the default is not secure.\n\nExtended Details:\n\n\n\nDevelopers often choose default values that leave the product as open and easy to use as possible out-of-the-box, under the assumption that the administrator can (or should) change the default value. However, this ease-of-use comes at a cost when the default is insecure and the administrator does not change it.\n\n\nReal-World Examples:\n\n- CVE-2022-36349: insecure default variable initialization in BIOS firmware for a hardware board allows DoS\n\n- CVE-2022-42467: A generic database browser interface has a default mode that exposes a web server to the network, allowing queries to the database.\n\nTop 25 CWE Examples:\n\n- CVE-2021-34795: Multiple vulnerabilities in the web-based management interface of the Cisco Catalyst Passive Optical Network (PON) Series Switches Optical Network Terminal (ONT) could allow an unauthenticated, remote attacker to perform the following actions: Log in with a default credential if the Telnet protocol is enabled Perform command injection Modify the configuration For more information about these vulnerabilities, see the Details section of this advisory.\n\n- CVE-2020-10279: MiR robot controllers (central computation unit) makes use of Ubuntu 16.04.2 an operating system, Thought for desktop uses, this operating system presents insecure defaults for robots. These insecurities include a way for users to escalate their access beyond what they were granted via file creation, access race conditions, insecure home directory configurations and defaults that facilitate Denial of Service (DoS) attacks.\n\n- CVE-2021-28123: Undocumented Default Cryptographic Key Vulnerability in Cohesity DataPlatform version 6.3 prior 6.3.1g, 6.4 up to 6.4.1c and 6.5.1 through 6.5.1b. The ssh key can provide an attacker access to the linux system in the affected version.\n\n- CVE-2021-40825: nLight ECLYPSE (nECY) system Controllers running software prior to 1.17.21245.754 contain a default key vulnerability. The nECY does not force a change to the key upon the initial configuration of an affected device. nECY system controllers utilize an encrypted channel to secure SensorViewTM configuration and monitoring software and nECY to nECY communications. Impacted devices are at risk of exploitation. A remote attacker with IP access to an impacted device could submit lighting control commands to the nECY by leveraging the default key. A successful attack may result in the attacker gaining the ability to modify lighting conditions or gain the ability to update the software on lighting devices. The impacted key is referred to as the SensorView Password in the nECY nLight Explorer Interface and the Gateway Password in the SensorView application. An attacker cannot authenticate to or modify the configuration or software of the nECY system controller.\n\n- CVE-2021-35965: The Orca HCM digital learning platform uses a weak factory default administrator password, which is hard-coded in the source code of the webpage in plain text, thus remote attackers can obtain administrator\u2019s privilege without logging in.\n\n- CVE-2020-12732: DEPSTECH WiFi Digital Microscope 3 has a default SSID of Jetion_xxxxxxxx with a password of 12345678.\n\n- CVE-2021-34203: D-Link DIR-2640-US 1.01B04 is vulnerable to Incorrect Access Control. Router ac2600 (dir-2640-us), when setting PPPoE, will start quagga process in the way of whole network monitoring, and this function uses the original default password and port. An attacker can easily use telnet to log in, modify routing information, monitor the traffic of all devices under the router, hijack DNS and phishing attacks. In addition, this interface is likely to be questioned by customers as a backdoor, because the interface should not be exposed.\n\n- CVE-2021-35336: Tieline IP Audio Gateway 2.6.4.8 and below is affected by Incorrect Access Control. A vulnerability in the Tieline Web Administrative Interface could allow an unauthenticated user to access a sensitive part of the system with a high privileged account.\n\n- CVE-2021-42109: VITEC Exterity IPTV products through 2021-04-30 allow privilege escalation to root.\n\n- CVE-2021-0468: In LK, there is a possible escalation of privilege due to an insecure default value. This could lead to local escalation of privilege for an attacker who has physical access to the device with no additional execution privileges needed. User interaction is needed for exploitation.Product: AndroidVersions: Android SoCAndroid ID: A-180427272\n\n- CVE-2021-38759: Raspberry Pi OS through 5.10 has the raspberry default password for the pi account. If not changed, attackers can gain administrator privileges.\n\n- CVE-2020-13927: The previous default setting for Airflow's Experimental API was to allow all API requests without authentication, but this poses security risks to users who miss this fact. From Airflow 1.10.11 the default has been changed to deny all requests by default and is documented at https://airflow.apache.org/docs/1.10.11/security.html#api-authentication. Note this change fixes it for new installs but existing users need to change their config to default `[api]auth_backend = airflow.api.auth.backend.deny_all` as mentioned in the Updating Guide: https://github.com/apache/airflow/blob/1.10.11/UPDATING.md#experimental-api-will-deny-all-request-by-default\n\n- CVE-2022-24706: In Apache CouchDB prior to 3.2.2, an attacker can access an improperly secured default installation without authenticating and gain admin privileges. The CouchDB documentation has always made recommendations for properly securing an installation, including recommending using a firewall in front of all CouchDB installations.\n\n- CVE-2022-42467: When running in prototype mode, the h2 webconsole module (accessible from the Prototype menu) is automatically made available with the ability to directly query the database. It was felt that it is safer to require the developer to explicitly enable this capability. As of 2.0.0-M8, this can now be done using the 'isis.prototyping.h2-console.web-allow-remote-access' configuration property; the web console will be unavailable without setting this configuration. As an additional safeguard, the new 'isis.prototyping.h2-console.generate-random-web-admin-password' configuration parameter (enabled by default) requires that the administrator use a randomly generated password to use the console. The password is printed to the log, as \"webAdminPass: xxx\" (where \"xxx\") is the password. To revert to the original behaviour, the administrator would therefore need to set these configuration parameter: isis.prototyping.h2-console.web-allow-remote-access=true isis.prototyping.h2-console.generate-random-web-admin-password=false Note also that the h2 webconsole is never available in production mode, so these safeguards are only to ensure that the webconsole is secured by default also in prototype mode.\n\n- CVE-2022-25568: MotionEye v0.42.1 and below allows attackers to access sensitive information via a GET request to /config/list. To exploit this vulnerability, a regular user password must be unconfigured.\n\nRelated Weaknesses:\n\n- CWE-1419 (ChildOf)\n\n- CWE-665 (ChildOf)",
        "type": "Base",
        "search_source": "base_query",
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          }
        }
      },
      {
        "cwe_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "description": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "score": 25.51944036111138,
        "matched_text": "CWE-1284: Improper Validation of Specified Quantity in Input\n\nType: Base\n\nStatus: Incomplete\n\nDescription:\n\nThe product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.\n\nExtended Details:\n\n\n\nSpecified quantities include size, length, frequency, price, rate, number of operations, time, and others. Code may rely on specified quantities to allocate resources, perform calculations, control iteration, etc. When the quantity is not properly validated, then attackers can specify malicious quantities to cause excessive resource allocation, trigger unexpected failures, enable buffer overflows, etc.\n\n\nReal-World Examples:\n\n- CVE-2022-21668: Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190).\n\n- CVE-2008-1440: lack of validation of length field leads to infinite loop\n\n- CVE-2008-2374: lack of validation of string length fields allows memory consumption or buffer over-read\n\nTop 25 CWE Examples:\n\n- CVE-2021-31401: An issue was discovered in tcp_rcv() in nptcp.c in HCC embedded InterNiche 4.0.1. The TCP header processing code doesn't sanitize the value of the IP total length field (header length + data length). With a crafted IP packet, an integer overflow occurs whenever the value of the IP data length is calculated by subtracting the length of the header from the total length of the IP packet.\n\n- CVE-2021-31802: NETGEAR R7000 1.0.11.116 devices have a heap-based Buffer Overflow that is exploitable from the local network without authentication. The vulnerability exists within the handling of an HTTP request. An attacker can leverage this to execute code as root. The problem is that a user-provided length value is trusted during a backup.cgi file upload. The attacker must add a \\\\n before the Content-Length header.\n\n- CVE-2021-37663: TensorFlow is an end-to-end open source platform for machine learning. In affected versions due to incomplete validation in `tf.raw_ops.QuantizeV2`, an attacker can trigger undefined behavior via binding a reference to a null pointer or can access data outside the bounds of heap allocated arrays. The [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/quantize_op.cc#L59) has some validation but does not check that `min_range` and `max_range` both have the same non-zero number of elements. If `axis` is provided (i.e., not `-1`), then validation should check that it is a value in range for the rank of `input` tensor and then the lengths of `min_range` and `max_range` inputs match the `axis` dimension of the `input` tensor. We have patched the issue in GitHub commit 6da6620efad397c85493b8f8667b821403516708. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n- CVE-2021-37665: TensorFlow is an end-to-end open source platform for machine learning. In affected versions due to incomplete validation in MKL implementation of requantization, an attacker can trigger undefined behavior via binding a reference to a null pointer or can access data outside the bounds of heap allocated arrays. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/mkl/mkl_requantization_range_per_channel_op.cc) does not validate the dimensions of the `input` tensor. A similar issue occurs in `MklRequantizePerChannelOp`. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/mkl/mkl_requantize_per_channel_op.cc) does not perform full validation for all the input arguments. We have patched the issue in GitHub commit 9e62869465573cb2d9b5053f1fa02a81fce21d69 and in the Github commit 203214568f5bc237603dbab6e1fd389f1572f5c9. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n- CVE-2021-3655: A vulnerability was found in the Linux kernel in versions prior to v5.14-rc1. Missing size validations on inbound SCTP packets may allow the kernel to read uninitialized memory.\n\n- CVE-2021-21404: Syncthing is a continuous file synchronization program. In Syncthing before version 1.15.0, the relay server `strelaysrv` can be caused to crash and exit by sending a relay message with a negative length field. Similarly, Syncthing itself can crash for the same reason if given a malformed message from a malicious relay server when attempting to join the relay. Relay joins are essentially random (from a subset of low latency relays) and Syncthing will by default restart when crashing, at which point it's likely to pick another non-malicious relay. This flaw is fixed in version 1.15.0.\n\n- CVE-2021-1903: Possible denial of service scenario can occur due to lack of length check on Channel Switch Announcement IE in beacon or probe response frame in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer Electronics Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Voice & Music, Snapdragon Wired Infrastructure and Networking\n\n- CVE-2021-23906: An issue was discovered in the Headunit NTG6 in the MBUX Infotainment System on Mercedes-Benz vehicles through 2021. A Message Length is not checked in the HiQnet Protocol, leading to remote code execution.\n\n- CVE-2021-31555: An issue was discovered in the Oauth extension for MediaWiki through 1.35.2. It did not validate the oarc_version (aka oauth_registered_consumer.oarc_version) parameter's length.\n\n- CVE-2021-33196: In archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic.\n\n- CVE-2021-33609: Missing check in DataCommunicator class in com.vaadin:vaadin-server versions 8.0.0 through 8.14.0 (Vaadin 8.0.0 through 8.14.0) allows authenticated network attacker to cause heap exhaustion by requesting too many rows of data.\n\n- CVE-2021-35041: The blockchain node in FISCO-BCOS V2.7.2 may have a bug when dealing with unformatted packet and lead to a crash. A malicious node can send a packet continuously. The packet is in an incorrect format and cannot be decoded by the node correctly. As a result, the node may consume the memory sustainably and crash. More details are shown at: https://github.com/FISCO-BCOS/FISCO-BCOS/issues/1951\n\n- CVE-2020-7459: In FreeBSD 12.1-STABLE before r362166, 12.1-RELEASE before p8, 11.4-STABLE before r362167, 11.4-RELEASE before p2, and 11.3-RELEASE before p12, missing length validation code common to mulitple USB network drivers allows a malicious USB device to write beyond the end of an allocated network packet buffer.\n\n- CVE-2021-1084: NVIDIA vGPU driver contains a vulnerability in the guest kernel mode driver and Virtual GPU Manager (vGPU plugin), in which an input length is not validated, which may lead to information disclosure, tampering of data or denial of service. This affects vGPU version 12.x (prior to 12.2) and version 11.x (prior to 11.4).\n\n- CVE-2021-1097: NVIDIA vGPU software contains a vulnerability in the Virtual GPU Manager (vGPU plugin), where it improperly validates the length field in a request from a guest. This flaw allows a malicious guest to send a length field that is inconsistent with the actual length of the input, which may lead to information disclosure, data tampering, or denial of service. This affects vGPU version 12.x (prior to 12.3), version 11.x (prior to 11.5) and version 8.x (prior 8.8).\n\n- CVE-2021-20252: A flaw was found in Red Hat 3scale API Management Platform 2. The 3scale backend does not perform preventive handling on user-requested date ranges in certain queries allowing a malicious authenticated user to submit a request with a sufficiently large date range to eventually yield an internal server error resulting in denial of service. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-29629: In FreeBSD 13.0-STABLE before n245765-bec0d2c9c841, 12.2-STABLE before r369859, 11.4-STABLE before r369866, 13.0-RELEASE before p1, 12.2-RELEASE before p7, and 11.4-RELEASE before p10, missing message validation in libradius(3) could allow malicious clients or servers to trigger denial of service in vulnerable servers or clients respectively.\n\n- CVE-2021-37594: In FreeRDP before 2.4.0 on Windows, wf_cliprdr_server_file_contents_request in client/Windows/wf_cliprdr.c has missing input checks for a FILECONTENTS_SIZE File Contents Request PDU.\n\n- CVE-2021-37595: In FreeRDP before 2.4.0 on Windows, wf_cliprdr_server_file_contents_request in client/Windows/wf_cliprdr.c has missing input checks for a FILECONTENTS_RANGE File Contents Request PDU.\n\n- CVE-2021-24894: The Reviews Plus WordPress plugin before 1.2.14 does not validate the submitted rating, allowing submission of long integer, causing a Denial of Service in the review section when an authenticated user submit such rating and the reviews are set to be displayed on the post/page\n\n- CVE-2021-27921: Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for a BLP container, and thus an attempted memory allocation can be very large.\n\n- CVE-2021-27922: Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for an ICNS container, and thus an attempted memory allocation can be very large.\n\n- CVE-2021-27923: Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for an ICO container, and thus an attempted memory allocation can be very large.\n\n- CVE-2021-0485: In getMinimalSize of PipBoundsAlgorithm.java, there is a possible bypass of restrictions on background processes due to a permissions bypass. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-11Android ID: A-174302616\n\n- CVE-2020-25713: A malformed input file can lead to a segfault due to an out of bounds array access in raptor_xml_writer_start_element_common.\n\n- CVE-2021-0651: In loadLabel of PackageItemInfo.java, there is a possible way to DoS a device by having a long label in an app due to incorrect input validation. This could lead to local denial of service with no additional execution privileges needed. User interaction is needed for exploitation.Product: AndroidVersions: Android-11 Android-9 Android-10Android ID: A-67013844\n\n- CVE-2020-0206: In the settings app, there is a possible app crash due to improper input validation. This could lead to local denial of service of the Settings app with User execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10Android ID: A-136005061\n\n- CVE-2021-24893: The Stars Rating WordPress plugin before 3.5.1 does not validate the submitted rating, allowing submission of long integer, causing a Denial of Service in the comments section, or pending comment dashboard depending if the user sent it as unauthenticated or authenticated.\n\n- CVE-2021-4111: yetiforcecrm is vulnerable to Business Logic Errors\n\n- CVE-2021-4117: yetiforcecrm is vulnerable to Business Logic Errors\n\n- CVE-2021-26631: Improper input validation vulnerability in Mangboard commerce package could lead to occur for abnormal request. A remote attacker can exploit this vulnerability to manipulate the total order amount into a negative number and then pay for the order.\n\n- CVE-2021-21939: A heap-based buffer overflow vulnerability exists in the XWD parser functionality of Accusoft ImageGear 19.10. A specially-crafted file can lead to code execution. An attacker can provide a malicious file to trigger this vulnerability.\n\n- CVE-2021-21943: A heap-based buffer overflow vulnerability exists in the XWD parser functionality of Accusoft ImageGear 19.10. A specially-crafted file can lead to code execution. An attacker can provide a malicious file to trigger this vulnerability.\n\n- CVE-2021-21950: An out-of-bounds write vulnerability exists in the CMD_DEVICE_GET_SERVER_LIST_REQUEST functionality of the home_security binary of Anker Eufy Homebase 2 2.1.6.9h in function recv_server_device_response_msg_process. A specially-crafted network packet can lead to code execution.\n\n- CVE-2021-21951: An out-of-bounds write vulnerability exists in the CMD_DEVICE_GET_SERVER_LIST_REQUEST functionality of the home_security binary of Anker Eufy Homebase 2 2.1.6.9h in function read_udp_push_config_file. A specially-crafted network packet can lead to code execution.\n\n- CVE-2021-21960: A stack-based buffer overflow vulnerability exists in both the LLMNR functionality of Sealevel Systems, Inc. SeaConnect 370W v1.3.34. A specially-crafted network packet can lead to remote code execution. An attacker can send a malicious packet to trigger this vulnerability.\n\n- CVE-2021-26347: Failure to validate the integer operand in ASP (AMD Secure Processor) bootloader may allow an attacker to introduce an integer overflow in the L2 directory table in SPI flash resulting in a potential denial of service.\n\n- CVE-2021-30350: Lack of MBN header size verification against input buffer can lead to memory corruption in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Wearables\n\n- CVE-2021-35132: Out of bound write in DSP service due to improper bound check for response buffer size in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Wearables\n\n- CVE-2021-44158: ASUS RT-AX56U Wi-Fi Router is vulnerable to stack-based buffer overflow due to improper validation for httpd parameter length. An authenticated local area network attacker can launch arbitrary code execution to control the system or disrupt service.\n\n- CVE-2021-45918: NHI\u2019s health insurance web service component has insufficient validation for input string length, which can result in heap-based buffer overflow attack. A remote attacker can exploit this vulnerability to flood the memory space reserved for the program, in order to terminate service without authentication, which requires a system restart to recover service.\n\n- CVE-2021-45972: The giftrans function in giftrans 1.12.2 contains a stack-based buffer overflow because a value inside the input file determines the amount of data to write. This allows an attacker to overwrite up to 250 bytes outside of the allocated buffer with arbitrary data.\n\n- CVE-2021-46154: A vulnerability has been identified in Simcenter Femap V2020.2 (All versions), Simcenter Femap V2021.1 (All versions). Affected application contains a stack based buffer overflow vulnerability while parsing NEU files. This could allow an attacker to execute code in the context of the current process. (ZDI-CAN-14646, ZDI-CAN-14679, ZDI-CAN-15084, ZDI-CAN-15304)\n\n- CVE-2021-46155: A vulnerability has been identified in Simcenter Femap V2020.2 (All versions), Simcenter Femap V2021.1 (All versions). Affected application contains a stack based buffer overflow vulnerability while parsing NEU files. This could allow an attacker to execute code in the context of the current process. (ZDI-CAN-14683, ZDI-CAN-15283, ZDI-CAN-15303, ZDI-CAN-15593)\n\n- CVE-2021-46158: A vulnerability has been identified in Simcenter Femap V2020.2 (All versions), Simcenter Femap V2021.1 (All versions). Affected application contains a stack based buffer overflow vulnerability while parsing NEU files. This could allow an attacker to execute code in the context of the current process. (ZDI-CAN-15085, ZDI-CAN-15289, ZDI-CAN-15602)\n\n- CVE-2022-20689: Multiple vulnerabilities in the Cisco Discovery Protocol functionality of Cisco ATA 190 Series Analog Telephone Adapter firmware could allow an unauthenticated, adjacent attacker to cause Cisco Discovery Protocol memory corruption on an affected device. These vulnerabilities are due to missing length validation checks when processing Cisco Discovery Protocol messages. An attacker could exploit these vulnerabilities by sending a malicious Cisco Discovery Protocol packet to an affected device. A successful exploit could allow the attacker to cause an out-of-bounds read of the valid Cisco Discovery Protocol packet data, which could allow the attacker to cause corruption in the internal Cisco Discovery Protocol database of the affected device.\n\n- CVE-2022-20690: Multiple vulnerabilities in the Cisco Discovery Protocol functionality of Cisco ATA 190 Series Analog Telephone Adapter firmware could allow an unauthenticated, adjacent attacker to cause Cisco Discovery Protocol memory corruption on an affected device. These vulnerabilities are due to missing length validation checks when processing Cisco Discovery Protocol messages. An attacker could exploit these vulnerabilities by sending a malicious Cisco Discovery Protocol packet to an affected device. A successful exploit could allow the attacker to cause an out-of-bounds read of the valid Cisco Discovery Protocol packet data, which could allow the attacker to cause corruption in the internal Cisco Discovery Protocol database of the affected device.\n\n- CVE-2022-22072: Buffer overflow can occur due to improper validation of NDP application information length in Snapdragon Auto, Snapdragon Compute, Snapdragon Consumer Electronics Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Voice & Music\n\n- CVE-2022-24903: Rsyslog is a rocket-fast system for log processing. Modules for TCP syslog reception have a potential heap buffer overflow when octet-counted framing is used. This can result in a segfault or some other malfunction. As of our understanding, this vulnerability can not be used for remote code execution. But there may still be a slight chance for experts to do that. The bug occurs when the octet count is read. While there is a check for the maximum number of octets, digits are written to a heap buffer even when the octet count is over the maximum, This can be used to overrun the memory buffer. However, once the sequence of digits stop, no additional characters can be added to the buffer. In our opinion, this makes remote exploits impossible or at least highly complex. Octet-counted framing is one of two potential framing modes. It is relatively uncommon, but enabled by default on receivers. Modules `imtcp`, `imptcp`, `imgssapi`, and `imhttp` are used for regular syslog message reception. It is best practice not to directly expose them to the public. When this practice is followed, the risk is considerably lower. Module `imdiag` is a diagnostics module primarily intended for testbench runs. We do not expect it to be present on any production installation. Octet-counted framing is not very common. Usually, it needs to be specifically enabled at senders. If users do not need it, they can turn it off for the most important modules. This will mitigate the vulnerability.\n\n- CVE-2022-25727: Memory Corruption in modem due to improper length check while copying into memory in Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Voice & Music\n\n- CVE-2022-25793: A Stack-based Buffer Overflow Vulnerability in Autodesk 3ds Max 2022, 2021, and 2020 may lead to code execution through the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length stack-based buffer when parsing ActionScript Byte Code files. This vulnerability may allow arbitrary code execution on affected installations of Autodesk 3ds Max.\n\n- CVE-2022-2845: Improper Validation of Specified Quantity in Input in GitHub repository vim/vim prior to 9.0.0218. \n\n- CVE-2022-35928: AES Crypt is a file encryption software for multiple platforms. AES Crypt for Linux built using the source on GitHub and having the version number 3.11 has a vulnerability with respect to reading user-provided passwords and confirmations via command-line prompts. Passwords lengths were not checked before being read. This vulnerability may lead to buffer overruns. This does _not_ affect source code found on aescrypt.com, nor is the vulnerability present when providing a password or a key via the `-p` or `-k` command-line options. The problem was fixed via in commit 68761851b and will be included in release 3.16. Users are advised to upgrade. Users unable to upgrade should us the `-p` or `-k` options to provide a password or key.\n\n- CVE-2022-36063: Azure RTOS USBx is a USB host, device, and on-the-go (OTG) embedded stack, fully integrated with Azure RTOS ThreadX and available for all Azure RTOS ThreadX\u2013supported processors. Azure RTOS USBX implementation of host support for USB CDC ECM includes an integer underflow and a buffer overflow in the `_ux_host_class_cdc_ecm_mac_address_get` function which may be potentially exploited to achieve remote code execution or denial of service. Setting mac address string descriptor length to a `0` or `1` allows an attacker to introduce an integer underflow followed (string_length) by a buffer overflow of the `cdc_ecm -> ux_host_class_cdc_ecm_node_id` array. This may allow one to redirect the code execution flow or introduce a denial of service. The fix has been included in USBX release [6.1.12](https://github.com/azure-rtos/usbx/releases/tag/v6.1.12_rel). Improved mac address string descriptor length validation to check for unexpectedly small values may be used as a workaround.\n\n- CVE-2022-36620: D-link DIR-816 A2_v1.10CNB04, DIR-878 DIR_878_FW1.30B08.img is vulnerable to Buffer Overflow via /goform/addRouting.\n\n- CVE-2022-37134: D-link DIR-816 A2_v1.10CNB04.img is vulnerable to Buffer Overflow via /goform/form2Wan.cgi. When wantype is 3, l2tp_usrname will be decrypted by base64, and the result will be stored in v94, which does not check the size of l2tp_usrname, resulting in stack overflow.\n\n- CVE-2022-41877: FreeRDP is a free remote desktop protocol library and clients. Affected versions of FreeRDP are missing input length validation in `drive` channel. A malicious server can trick a FreeRDP based client to read out of bound data and send it back to the server. This issue has been addressed in version 2.9.0 and all users are advised to upgrade. Users unable to upgrade should not use the drive redirection channel - command line options `/drive`, `+drives` or `+home-drive`.\n\n- CVE-2022-4904: A flaw was found in the c-ares package. The ares_set_sortlist is missing checks about the validity of the input string, which allows a possible arbitrary length stack overflow. This issue may cause a denial of service or a limited impact on confidentiality and integrity.\n\n- CVE-2022-20699: Multiple vulnerabilities in Cisco Small Business RV160, RV260, RV340, and RV345 Series Routers could allow an attacker to do any of the following: Execute arbitrary code Elevate privileges Execute arbitrary commands Bypass authentication and authorization protections Fetch and run unsigned software Cause denial of service (DoS) For more information about these vulnerabilities, see the Details section of this advisory.\n\n- CVE-2022-24754: PJSIP is a free and open source multimedia communication library written in C language. In versions prior to and including 2.12 PJSIP there is a stack-buffer overflow vulnerability which only impacts PJSIP users who accept hashed digest credentials (credentials with data_type `PJSIP_CRED_DATA_DIGEST`). This issue has been patched in the master branch of the PJSIP repository and will be included with the next release. Users unable to upgrade need to check that the hashed digest data length must be equal to `PJSIP_MD5STRLEN` before passing to PJSIP.\n\n- CVE-2021-3581: Buffer Access with Incorrect Length Value in zephyr. Zephyr versions >= >=2.5.0 contain Buffer Access with Incorrect Length Value (CWE-805). For more information, see https://github.com/zephyrproject-rtos/zephyr/security/advisories/GHSA-8q65-5gqf-fmw5\n\n- CVE-2022-0414: Improper Validation of Specified Quantity in Input in Packagist dolibarr/dolibarr prior to 16.0.\n\n- CVE-2022-0596: Improper Validation of Specified Quantity in Input in Packagist microweber/microweber prior to 1.2.11.\n\n- CVE-2022-20445: In process_service_search_rsp of sdp_discovery.cc, there is a possible out of bounds read due to improper input validation. This could lead to remote information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-225876506\n\n- CVE-2022-22166: An Improper Validation of Specified Quantity in Input vulnerability in the routing protocol daemon (rpd) of Juniper Networks Junos OS allows an unauthenticated networked attacker to cause an rdp crash and thereby a Denial of Service (DoS). If a BGP update message is received over an established BGP session where a BGP SR-TE policy tunnel attribute is malformed and BGP update tracing flag is enabled, the rpd will core. This issue can happen with any BGP session as long as the previous conditions are met. This issue can not propagate as the crash occurs as soon as the malformed update is received. This issue affects Juniper Networks Junos OS: 20.4 versions prior to 20.4R3-S1; 21.1 versions prior to 21.1R2-S2, 21.1R3. This issue does not affect Juniper Networks Junos OS versions prior to 20.4R1.\n\n- CVE-2022-4171: The demon image annotation plugin for WordPress is vulnerable to improper input validation in versions up to, and including 5.0. This is due to the plugin improperly validating the number of characters supplied during an annotation despite there being a setting to limit the number characters input. This means that unauthenticated attackers can bypass the length restrictions and input more characters than allowed via the settings.\n\n- CVE-2022-25375: An issue was discovered in drivers/usb/gadget/function/rndis.c in the Linux kernel before 5.16.10. The RNDIS USB gadget lacks validation of the size of the RNDIS_MSG_SET command. Attackers can obtain sensitive information from kernel memory.\n\n- CVE-2022-23635: Istio is an open platform to connect, manage, and secure microservices. In affected versions the Istio control plane, `istiod`, is vulnerable to a request processing error, allowing a malicious attacker that sends a specially crafted message which results in the control plane crashing. This endpoint is served over TLS port 15012, but does not require any authentication from the attacker. For simple installations, Istiod is typically only reachable from within the cluster, limiting the blast radius. However, for some deployments, especially [multicluster](https://istio.io/latest/docs/setup/install/multicluster/primary-remote/) topologies, this port is exposed over the public internet. There are no effective workarounds, beyond upgrading. Limiting network access to Istiod to the minimal set of clients can help lessen the scope of the vulnerability to some extent.\n\n- CVE-2021-31556: An issue was discovered in the Oauth extension for MediaWiki through 1.35.2. MWOAuthConsumerSubmitControl.php does not ensure that the length of an RSA key will fit in a MySQL blob.\n\n- CVE-2022-20686: Multiple vulnerabilities in the Link Layer Discovery Protocol (LLDP) functionality of Cisco ATA 190 Series Analog Telephone Adapter firmware could allow an unauthenticated, remote attacker to execute arbitrary code on an affected device and cause the LLDP service to restart. These vulnerabilities are due to missing length validation of certain LLDP packet header fields. An attacker could exploit these vulnerabilities by sending a malicious LLDP packet to an affected device. A successful exploit could allow the attacker to execute code on the affected device and cause LLDP to restart unexpectedly, resulting in a denial of service (DoS) condition.\n\n- CVE-2022-20385: a function called 'nla_parse', do not check the len of para, it will check nla_type (which can be controlled by userspace) with 'maxtype' (in this case, it is GSCAN_MAX), then it access polciy array 'policy[type]', which OOB access happens.Product: AndroidVersions: Android SoCAndroid ID: A-238379819\n\n- CVE-2022-26125: Buffer overflow vulnerabilities exist in FRRouting through 8.1.0 due to wrong checks on the input packet length in isisd/isis_tlvs.c.\n\n- CVE-2022-26127: A buffer overflow vulnerability exists in FRRouting through 8.1.0 due to missing a check on the input packet length in the babel_packet_examin function in babeld/message.c.\n\n- CVE-2022-26128: A buffer overflow vulnerability exists in FRRouting through 8.1.0 due to a wrong check on the input packet length in the babel_packet_examin function in babeld/message.c.\n\n- CVE-2022-36086: linked_list_allocator is an allocator usable for no_std systems. Prior to version 0.10.2, the heap initialization methods were missing a minimum size check for the given heap size argument. This could lead to out-of-bound writes when a heap was initialized with a size smaller than `3 * size_of::<usize>` because of metadata write operations. This vulnerability impacts all the initialization functions on the `Heap` and `LockedHeap` types, including `Heap::new`, `Heap::init`, `Heap::init_from_slice`, and `LockedHeap::new`. It also affects multiple uses of the `Heap::extend` method. Version 0.10.2 contains a patch for the issue. As a workaround, ensure that the heap is only initialized with a size larger than `3 * size_of::<usize>` and that the `Heap::extend` method is only called with sizes larger than `2 * size_of::<usize>()`. Also, ensure that the total heap size is (and stays) a multiple of `2 * size_of::<usize>()`.\n\n- CVE-2022-36938: DexLoader function get_stringidx_fromdex() in Redex prior to commit 3b44c64 can load an out of bound address when loading the string index table, potentially allowing remote code execution during processing of a 3rd party Android APK file.\n\n- CVE-2021-1058: NVIDIA vGPU software contains a vulnerability in the guest kernel mode driver and vGPU plugin, in which an input data size is not validated, which may lead to tampering of data or denial of service. This affects vGPU version 8.x (prior to 8.6) and version 11.0 (prior to 11.3).\n\n- CVE-2021-1062: NVIDIA vGPU manager contains a vulnerability in the vGPU plugin, in which an input data length is not validated, which may lead to tampering of data or denial of service. This affects vGPU version 8.x (prior to 8.6) and version 11.0 (prior to 11.3).\n\n- CVE-2021-1081: NVIDIA vGPU software contains a vulnerability in the guest kernel mode driver and Virtual GPU manager (vGPU plugin), in which an input length is not validated, which may lead to information disclosure, tampering of data, or denial of service. This affects vGPU version 12.x (prior to 12.2), version 11.x (prior to 11.4) and version 8.x (prior 8.7).\n\n- CVE-2021-1082: NVIDIA vGPU software contains a vulnerability in the Virtual GPU Manager (vGPU plugin), in which an input length is not validated, which may lead to information disclosure, tampering of data, or denial of service. vGPU version 12.x (prior to 12.2), version 11.x (prior to 11.4) and version 8.x (prior to 8.7)\n\n- CVE-2021-1083: NVIDIA vGPU software contains a vulnerability in the guest kernel mode driver and Virtual GPU Manager (vGPU plugin), in which an input length is not validated, which may lead to information disclosure, tampering of data, or denial of service. This affects vGPU version 12.x (prior to 12.2) and version 11.x (prior to 11.4).\n\n- CVE-2021-37674: TensorFlow is an end-to-end open source platform for machine learning. In affected versions an attacker can trigger a denial of service via a segmentation fault in `tf.raw_ops.MaxPoolGrad` caused by missing validation. The [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/maxpooling_op.cc) misses some validation for the `orig_input` and `orig_output` tensors. The fixes for CVE-2021-29579 were incomplete. We have patched the issue in GitHub commit 136b51f10903e044308cf77117c0ed9871350475. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n- CVE-2021-37677: TensorFlow is an end-to-end open source platform for machine learning. In affected versions the shape inference code for `tf.raw_ops.Dequantize` has a vulnerability that could trigger a denial of service via a segfault if an attacker provides invalid arguments. The shape inference [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/ops/array_ops.cc#L2999-L3014) uses `axis` to select between two different values for `minmax_rank` which is then used to retrieve tensor dimensions. However, code assumes that `axis` can be either `-1` or a value greater than `-1`, with no validation for the other values. We have patched the issue in GitHub commit da857cfa0fde8f79ad0afdbc94e88b5d4bbec764. The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n- CVE-2021-39193: Frontier is Substrate's Ethereum compatibility layer. Prior to commit number 0b962f218f0cdd796dadfe26c3f09e68f7861b26, a bug in `pallet-ethereum` can cause invalid transactions to be included in the Ethereum block state in `pallet-ethereum` due to not validating the input data size. Any invalid transactions included this way have no possibility to alter the internal Ethereum or Substrate state. The transaction will appear to have be included, but is of no effect as it is rejected by the EVM engine. The impact is further limited by Substrate extrinsic size constraints. A patch is available in commit number 0b962f218f0cdd796dadfe26c3f09e68f7861b26. There are no workarounds aside from applying the patch.\n\n- CVE-2021-39690: In setDisplayPadding of WallpaperManagerService.java, there is a possible way to cause a persistent DoS due to improper input validation. This could lead to local denial of service with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-12Android ID: A-204316511\n\n- CVE-2021-43267: An issue was discovered in net/tipc/crypto.c in the Linux kernel before 5.14.16. The Transparent Inter-Process Communication (TIPC) functionality allows remote attackers to exploit insufficient validation of user-supplied sizes for the MSG_CRYPTO message type.\n\n- CVE-2021-45462: In Open5GS 2.4.0, a crafted packet from UE can crash SGW-U/UPF.\n\n- CVE-2022-0174: Improper Validation of Specified Quantity in Input vulnerability in dolibarr dolibarr/dolibarr.\n\n- CVE-2022-20493: In Condition of Condition.java, there is a possible way to grant notification access due to improper input validation. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-242846316\n\n- CVE-2022-20543: In multiple locations, there is a possible display crash loop due to improper input validation. This could lead to local denial of service with system execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-13Android ID: A-238178261\n\n- CVE-2022-20687: Multiple vulnerabilities in the Link Layer Discovery Protocol (LLDP) functionality of Cisco ATA 190 Series Analog Telephone Adapter firmware could allow an unauthenticated, remote attacker to execute arbitrary code on an affected device and cause the LLDP service to restart. These vulnerabilities are due to missing length validation of certain LLDP packet header fields. An attacker could exploit these vulnerabilities by sending a malicious LLDP packet to an affected device. A successful exploit could allow the attacker to execute code on the affected device and cause LLDP to restart unexpectedly, resulting in a denial of service (DoS) condition.\n\n- CVE-2022-20688: A vulnerability in the Cisco Discovery Protocol functionality of Cisco ATA 190 Series Analog Telephone Adapter firmware could allow an unauthenticated, remote attacker to execute arbitrary code on an affected device and cause Cisco Discovery Protocol service to restart. This vulnerability is due to missing length validation of certain Cisco Discovery Protocol packet header fields. An attacker could exploit these vulnerabilities by sending a malicious Cisco Discovery Protocol packet to an affected device. A successful exploit could allow the attacker to execute code on the affected device and cause Cisco Discovery Protocol to restart unexpectedly, resulting in a DoS condition.\n\n- CVE-2022-2277: Improper Input Validation vulnerability exists in the Hitachi Energy MicroSCADA X SYS600's ICCP stack during the ICCP communication establishment causes a denial-of-service when ICCP of SYS600 is request to forward any data item updates with timestamps too distant in the future to any remote ICCP system. By default, ICCP is not configured and not enabled. This issue affects: Hitachi Energy MicroSCADA X SYS600 version 10.2 to version 10.3.1. cpe:2.3:a:hitachienergy:microscada_x_sys600:10.2:*:*:*:*:*:*:* cpe:2.3:a:hitachienergy:microscada_x_sys600:10.2.1:*:*:*:*:*:*:* cpe:2.3:a:hitachienergy:microscada_x_sys600:10.3:*:*:*:*:*:*:* cpe:2.3:a:hitachienergy:microscada_x_sys600:10.3.1:*:*:*:*:*:*:*\n\n- CVE-2022-2592: A lack of length validation in Snippet descriptions in GitLab CE/EE affecting all versions prior to 15.1.6, 15.2 prior to 15.2.4 and 15.3 prior to 15.3.2 allows an authenticated attacker to create a maliciously large Snippet which when requested with or without authentication places excessive load on the server, potential leading to Denial of Service.\n\n- CVE-2022-28613: A vulnerability in the HCI Modbus TCP COMPONENT of Hitachi Energy RTU500 series CMU Firmware that is caused by the validation error in the length information carried in MBAP header allows an ATTACKER to reboot the device by sending a special crafted message. This issue affects: Hitachi Energy RTU500 series CMU Firmware 12.0.*; 12.2.*; 12.4.*; 12.6.*; 12.7.*; 13.2.*.\n\n- CVE-2022-2868: libtiff's tiffcrop utility has a improper input validation flaw that can lead to out of bounds read and ultimately cause a crash if an attacker is able to supply a crafted file to tiffcrop.\n\n- CVE-2022-3411: A lack of length validation in GitLab CE/EE affecting all versions from 12.4 before 15.6.7, 15.7 before 15.7.6, and 15.8 before 15.8.1 allows an authenticated attacker to create a large Issue description via GraphQL which, when repeatedly requested, saturates CPU usage.\n\n- CVE-2022-39272: Flux is an open and extensible continuous delivery solution for Kubernetes. Versions prior to 0.35.0 are subject to a Denial of Service. Users that have permissions to change Flux\u2019s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields `.spec.interval` or `.spec.timeout` (and structured variations of these fields), causing the entire object type to stop being processed. This issue is patched in version 0.35.0. As a workaround, Admission controllers can be employed to restrict the values that can be used for fields `.spec.interval` and `.spec.timeout`, however upgrading to the latest versions is still the recommended mitigation.\n\n- CVE-2022-39313: Parse Server is an open source backend that can be deployed to any infrastructure that can run Node.js. Versions prior to 4.10.17, and prior to 5.2.8 on the 5.x branch, crash when a file download request is received with an invalid byte range, resulting in a Denial of Service. This issue has been patched in versions 4.10.17, and 5.2.8. There are no known workarounds.\n\n- CVE-2022-40761: The function tee_obj_free in Samsung mTower through 0.3.0 allows a trusted application to trigger a Denial of Service (DoS) by invoking the function TEE_AllocateOperation with a disturbed heap layout, related to utee_cryp_obj_alloc.\n\n- CVE-2022-41896: TensorFlow is an open source platform for machine learning. If `ThreadUnsafeUnigramCandidateSampler` is given input `filterbank_channel_count` greater than the allowed max size, TensorFlow will crash. We have patched the issue in GitHub commit 39ec7eaf1428e90c37787e5b3fbd68ebd3c48860. The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.\n\n- CVE-2022-48297: The geofencing kernel code has a vulnerability of not verifying the length of the input data. Successful exploitation of this vulnerability may cause out-of-bounds memory access.\n\n- CVE-2022-48298: The geofencing kernel code does not verify the length of the input data. Successful exploitation of this vulnerability may cause out-of-bounds memory access.\n\n- CVE-2021-0934: In findAllDeAccounts of AccountsDb.java, there is a possible denial of service due to resource exhaustion. This could lead to local denial of service with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-169762606\n\n- CVE-2021-28510: For certain systems running EOS, a Precision Time Protocol (PTP) packet of a management/signaling message with an invalid Type-Length-Value (TLV) causes the PTP agent to restart. Repeated restarts of the service will make the service unavailable.\n\n- CVE-2022-0214: The Custom Popup Builder WordPress plugin before 1.3.1 autoload data from its popup on every pages, as such data can be sent by unauthenticated user, and is not validated in length, this could cause a denial of service on the blog\n\n- CVE-2022-1174: A potential DoS vulnerability was discovered in Gitlab CE/EE versions 13.7 before 14.7.7, all versions starting from 14.8 before 14.8.5, all versions starting from 14.9 before 14.9.2 allowed an attacker to trigger high CPU usage via a special crafted input added in Issues, Merge requests, Milestones, Snippets, Wiki pages, etc.\n\n- CVE-2022-23319: A segmentation fault during PCF file parsing in pcf2bdf versions >=1.05 allows an attacker to trigger a program crash via a specially crafted PCF font file. This crash affects the availability of the software and dependent downstream components.\n\n- CVE-2022-23580: Tensorflow is an Open Source Machine Learning Framework. During shape inference, TensorFlow can allocate a large vector based on a value from a tensor controlled by the user. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n- CVE-2022-29202: TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, the implementation of `tf.ragged.constant` does not fully validate the input arguments. This results in a denial of service by consuming all available memory. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue.\n\n- CVE-2022-36078: Binary provides encoding/decoding in Borsh and other formats. The vulnerability is a memory allocation vulnerability that can be exploited to allocate slices in memory with (arbitrary) excessive size value, which can either exhaust available memory or crash the whole program. When using `github.com/gagliardetto/binary` to parse unchecked (or wrong type of) data from untrusted sources of input (e.g. the blockchain) into slices, it's possible to allocate memory with excessive size. When `dec.Decode(&val)` method is used to parse data into a structure that is or contains slices of values, the length of the slice was previously read directly from the data itself without any checks on the size of it, and then a slice was allocated. This could lead to an overflow and an allocation of memory with excessive size value. Users should upgrade to `v0.7.1` or higher. A workaround is not to rely on the `dec.Decode(&val)` function to parse the data, but to use a custom `UnmarshalWithDecoder()` method that reads and checks the length of any slice.\n\n- CVE-2022-37311: OX App Suite through 7.10.6 has Uncontrolled Resource Consumption via a large location request parameter to the redirect servlet.\n\n- CVE-2022-37312: OX App Suite through 7.10.6 has Uncontrolled Resource Consumption via a large request body containing a redirect URL to the deferrer servlet.\n\n- CVE-2022-39294: conduit-hyper integrates a conduit application with the hyper server. Prior to version 0.4.2, `conduit-hyper` did not check any limit on a request's length before calling [`hyper::body::to_bytes`](https://docs.rs/hyper/latest/hyper/body/fn.to_bytes.html). An attacker could send a malicious request with an abnormally large `Content-Length`, which could lead to a panic if memory allocation failed for that request. In version 0.4.2, `conduit-hyper` sets an internal limit of 128 MiB per request, otherwise returning status 400 (\"Bad Request\"). This crate is part of the implementation of Rust's [crates.io](https://crates.io/), but that service is not affected due to its existing cloud infrastructure, which already drops such malicious requests. Even with the new limit in place, `conduit-hyper` is not recommended for production use, nor to directly serve the public Internet.\n\n- CVE-2022-4111: Unrestricted file size limit can lead to DoS in tooljet/tooljet <1.27 by allowing a logged in attacker to upload profile pictures over 2MB. \n\n- CVE-2022-41968: Nextcloud Server is an open source personal cloud server. Prior to versions 23.0.10 and 24.0.5, calendar name lengths are not validated before writing to a database. As a result, an attacker can send unnecessary amounts of data against the database. Version 23.0.10 and 24.0.5 contain patches for the issue. No known workarounds are available.\n\n- CVE-2022-20488: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-242703217\n\n- CVE-2022-20491: In NotificationChannel of NotificationChannel.java, there is a possible failure to persist permissions settings due to resource exhaustion. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12L Android-13Android ID: A-242703556\n\n- CVE-2022-20691: A vulnerability in the Cisco Discovery Protocol functionality of Cisco ATA 190 Series Adaptive Telephone Adapter firmware could allow an unauthenticated, adjacent attacker to cause a DoS condition of an affected device. This vulnerability is due to missing length validation of certain Cisco Discovery Protocol packet header fields. An attacker could exploit this vulnerability by sending crafted Cisco Discovery Protocol packets to an affected device. A successful exploit could allow the attacker to cause the device to exhaust available memory and cause the service to restart. Cisco has released firmware updates that address this vulnerability. \n\n- CVE-2022-21208: The package node-opcua before 2.74.0 are vulnerable to Denial of Service (DoS) due to a missing limitation on the number of received chunks - per single session or in total for all concurrent sessions. An attacker can exploit this vulnerability by sending an unlimited number of huge chunks (e.g. 2GB each) without sending the Final closing chunk.\n\n- CVE-2022-29212: TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, certain TFLite models that were created using TFLite model converter would crash when loaded in the TFLite interpreter. The culprit is that during quantization the scale of values could be greater than 1 but code was always assuming sub-unit scaling. Thus, since code was calling `QuantizeMultiplierSmallerThanOneExp`, the `TFLITE_CHECK_LT` assertion would trigger and abort the process. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue.\n\n- CVE-2022-29196: TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, the implementation of `tf.raw_ops.Conv3DBackpropFilterV2` does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack. The code does not validate that the `filter_sizes` argument is a vector. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue.\n\n- CVE-2022-29200: TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, the implementation of `tf.raw_ops.LSTMBlockCell` does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack. The code does not validate the ranks of any of the arguments to this API call. This results in `CHECK`-failures when the elements of the tensor are accessed. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue.\n\nRelated Weaknesses:\n\n- CWE-20 (ChildOf)\n\n- CWE-20 (ChildOf)\n\n- CWE-789 (CanPrecede)",
        "type": "Base",
        "search_source": "base_query",
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          }
        }
      },
      {
        "cwe_id": "401",
        "name": "Missing Release of Memory after Effective Lifetime",
        "description": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.",
        "score": 25.34208451259859,
        "matched_text": "CWE-401: Missing Release of Memory after Effective Lifetime\n\nType: Variant\n\nStatus: Draft\n\nAlternative Terms:\n\nMemory Leak\n\nMemory Leak\n\nMemory Leak\n\nDescription:\n\nThe product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.\n\nExtended Details:\n\nThis is often triggered by improper handling of malformed data or unexpectedly interrupted sessions. In some languages, developers are responsible for tracking memory allocation and releasing the memory. If there are no more pointers or references to the memory, then it can no longer be tracked and identified for release.\n\nReal-World Examples:\n\n- CVE-2005-3119: Memory leak because function does not free() an element of a data structure.\n\n- CVE-2004-0427: Memory leak when counter variable is not decremented.\n\n- CVE-2002-0574: chain: reference count is not decremented, leading to memory leak in OS by sending ICMP packets.\n\n- CVE-2005-3181: Kernel uses wrong function to release a data structure, preventing data from being properly tracked by other code.\n\n- CVE-2004-0222: Memory leak via unknown manipulations as part of protocol test suite.\n\n- CVE-2001-0136: Memory leak via a series of the same command.\n\nTop 25 CWE Examples:\n\n- CVE-2021-31256: Memory leak in the stbl_GetSampleInfos function in MP4Box in GPAC 1.0.1 allows attackers to read memory via a crafted file.\n\n- CVE-2021-33361: Memory leak in the afra_box_read function in MP4Box in GPAC 1.0.1 allows attackers to read memory via a crafted file.\n\n- CVE-2021-33363: Memory leak in the infe_box_read function in MP4Box in GPAC 1.0.1 allows attackers to read memory via a crafted file.\n\n- CVE-2021-33365: Memory leak in the gf_isom_get_root_od function in MP4Box in GPAC 1.0.1 allows attackers to read memory via a crafted file.\n\n- CVE-2021-36993: There is a Memory leaks vulnerability in Huawei Smartphone.Successful exploitation of this vulnerability may affect service availability.\n\n- CVE-2021-1313: Multiple vulnerabilities in the ingress packet processing function of Cisco IOS XR Software could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition on an affected device. For more information about these vulnerabilities, see the Details section of this advisory.\n\n- CVE-2020-20665: rudp v0.6 was discovered to contain a memory leak in the component main.c.\n\n- CVE-2020-21839: An issue was discovered in GNU LibreDWG 0.10. Crafted input will lead to an memory leak in dwg_decode_eed ../../src/decode.c:3638.\n\n- CVE-2021-0202: On Juniper Networks MX Series and EX9200 Series platforms with Trio-based MPC (Modular Port Concentrator) where Integrated Routing and Bridging (IRB) interface is configured and it is mapped to a VPLS instance or a Bridge-Domain, certain network events at Customer Edge (CE) device may cause memory leak in the MPC which can cause an out of memory and MPC restarts. When this issue occurs, there will be temporary traffic interruption until the MPC is restored. An administrator can use the following CLI command to monitor the status of memory usage level of the MPC: user@device> show system resource-monitor fpc FPC Resource Usage Summary Free Heap Mem Watermark : 20 % Free NH Mem Watermark : 20 % Free Filter Mem Watermark : 20 % * - Watermark reached Slot # % Heap Free RTT Average RTT 1 87 PFE # % ENCAP mem Free % NH mem Free % FW mem Free 0 NA 88 99 1 NA 89 99 When the issue is occurring, the value of \u201c% NH mem Free\u201d will go down until the MPC restarts. This issue affects MX Series and EX9200 Series with Trio-based PFEs (Packet Forwarding Engines). Please refer to https://kb.juniper.net/KB25385 for the list of Trio-based PFEs. This issue affects Juniper Networks Junos OS on MX Series, EX9200 Series: 17.3R3-S8; 17.4R3-S2; 18.2R3-S4, 18.2R3-S5; 18.3R3-S2, 18.3R3-S3; 18.4 versions starting from 18.4R3-S1 and later versions prior to 18.4R3-S6; 19.2 versions starting from 19.2R2 and later versions prior to 19.2R3-S1; 19.4 versions starting from 19.4R2 and later versions prior to 19.4R2-S3, 19.4R3; 20.2 versions starting from 20.2R1 and later versions prior to 20.2R1-S3, 20.2R2. This issue does not affect Juniper Networks Junos OS: 18.1, 19.1, 19.3, 20.1.\n\n- CVE-2021-0215: On Juniper Networks Junos EX series, QFX Series, MX Series and SRX branch series devices, a memory leak occurs every time the 802.1X authenticator port interface flaps which can lead to other processes, such as the pfex process, responsible for packet forwarding, to crash and restart. An administrator can use the following CLI command to monitor the status of memory consumption: user@device> show task memory detail Please refer to https://kb.juniper.net/KB31522 for details. This issue affects Juniper Networks Junos OS: 14.1X53 versions prior to 14.1X53-D54; 15.1X49 versions prior to 15.1X49-D240 ; 15.1X53 versions prior to 15.1X53-D593; 16.1 versions prior to 16.1R7-S8; 17.2 versions prior to 17.2R3-S4; 17.3 versions prior to 17.3R3-S8; 17.4 versions prior to 17.4R2-S11, 17.4R3-S2; 18.1 versions prior to 18.1R3-S10 ; 18.2 versions prior to 18.2R2-S7, 18.2R3-S3; 18.3 versions prior to 18.3R2-S4, 18.3R3-S2; 18.4 versions prior to 18.4R1-S7, 18.4R2-S4, 18.4R3-S2; 19.1 versions prior to 19.1R1-S5, 19.1R2-S2, 19.1R3; 19.2 versions prior to 19.2R1-S5, 19.2R2; 19.3 versions prior to 19.3R2-S3, 19.3R3; 19.4 versions prior to 19.4R1-S2, 19.4R2. This issue does not affect Juniper Networks Junos OS 12.3, 15.1.\n\n- CVE-2021-0230: On Juniper Networks SRX Series devices with link aggregation (lag) configured, executing any operation that fetches Aggregated Ethernet (AE) interface statistics, including but not limited to SNMP GET requests, causes a slow kernel memory leak. If all the available memory is consumed, the traffic will be impacted and a reboot might be required. The following log can be seen if this issue happens. /kernel: rt_pfe_veto: Memory over consumed. Op 1 err 12, rtsm_id 0:-1, msg type 72 /kernel: rt_pfe_veto: free kmem_map memory = (20770816) curproc = kmd An administrator can use the following CLI command to monitor the status of memory consumption (ifstat bucket): user@device > show system virtual-memory no-forwarding | match ifstat Type InUse MemUse HighUse Limit Requests Limit Limit Size(s) ifstat 2588977 162708K - 19633958 <<<< user@device > show system virtual-memory no-forwarding | match ifstat Type InUse MemUse HighUse Limit Requests Limit Limit Size(s) ifstat 3021629 189749K - 22914415 <<<< This issue affects Juniper Networks Junos OS on SRX Series: 17.1 versions 17.1R3 and above prior to 17.3R3-S11; 17.4 versions prior to 17.4R3-S5; 18.2 versions prior to 18.2R3-S7, 18.2R3-S8; 18.3 versions prior to 18.3R3-S4; 18.4 versions prior to 18.4R2-S7, 18.4R3-S6; 19.1 versions prior to 19.1R3-S4; 19.2 versions prior to 19.2R1-S6; 19.3 versions prior to 19.3R3-S1; 19.4 versions prior to 19.4R3-S1; 20.1 versions prior to 20.1R2, 20.1R3; 20.2 versions prior to 20.2R2-S2, 20.2R3; 20.3 versions prior to 20.3R1-S2, 20.3R2. This issue does not affect Juniper Networks Junos OS prior to 17.1R3.\n\n- CVE-2021-0257: On Juniper Networks MX Series and EX9200 Series platforms with Trio-based MPCs (Modular Port Concentrators) where Integrated Routing and Bridging (IRB) interfaces are configured and mapped to a VPLS instance or a Bridge-Domain, certain Layer 2 network events at Customer Edge (CE) devices may cause memory leaks in the MPC of Provider Edge (PE) devices which can cause an out of memory condition and MPC restart. When this issue occurs, there will be temporary traffic interruption until the MPC is restored. An administrator can use the following CLI command to monitor the status of memory usage level of the MPC: user@device> show system resource-monitor fpc FPC Resource Usage Summary Free Heap Mem Watermark : 20 % Free NH Mem Watermark : 20 % Free Filter Mem Watermark : 20 % * - Watermark reached Slot # % Heap Free RTT Average RTT 1 87 PFE # % ENCAP mem Free % NH mem Free % FW mem Free 0 NA 88 99 1 NA 89 99 When the issue is occurring, the value of \u201c% NH mem Free\u201d will go down until the MPC restarts. This issue affects MX Series and EX9200 Series with Trio-based PFEs (Packet Forwarding Engines), including MX-MPC1-3D, MX-MPC1E-3D, MX-MPC2-3D, MX-MPC2E-3D, MPC-3D-16XGE, and CHAS-MXxx Series MPCs. No other products or platforms are affected by this issue. This issue affects Juniper Networks Junos OS on MX Series, EX9200 Series: 17.3 versions prior to 17.3R3-S10; 17.4 versions prior to 17.4R3-S3; 18.2 versions prior to 18.2R3-S7; 18.3 versions prior to 18.3R3-S4; 18.4 versions prior to 18.4R3-S6; 19.2 versions prior to 19.2R3-S2; 19.3 versions prior to 19.3R3-S1; 19.4 versions prior to 19.4R2-S2, 19.4R3; 20.2 versions prior to 20.2R1-S3, 20.2R2; 20.3 versions prior to 20.3R1-S1,, 20.3R2. This issue does not affect Juniper Networks Junos OS: 17.3 versions prior to 17.3R3-S8; 17.4 versions prior to 17.4R3-S2; 18.1; 18.2 versions prior to 18.2R3-S4; 18.3 versions prior to 18.3R3-S2; 18.4 versions prior to 18.4R3-S1; 19.1; 19.2 versions prior to 19.2R2; 19.3 versions prior to 19.3R3; 19.4 versions prior to 19.4R2.\n\n- CVE-2021-1563: Multiple vulnerabilities in the implementation of the Cisco Discovery Protocol and Link Layer Discovery Protocol (LLDP) for Cisco Video Surveillance 7000 Series IP Cameras could allow an unauthenticated, adjacent attacker to cause a memory leak, which could lead to a denial of service (DoS) condition on an affected device. These vulnerabilities are due to incorrect processing of certain Cisco Discovery Protocol and LLDP packets at ingress time. An attacker could exploit these vulnerabilities by sending crafted Cisco Discovery Protocol or LLDP packets to an affected device. A successful exploit could allow the attacker to cause the affected device to continuously consume memory, which could cause the device to crash and reload, resulting in a DoS condition. Note: Cisco Discovery Protocol and LLDP are Layer 2 protocols. To exploit these vulnerabilities, an attacker must be in the same broadcast domain as the affected device (Layer 2 adjacent).\n\n- CVE-2021-1564: Multiple vulnerabilities in the implementation of the Cisco Discovery Protocol and Link Layer Discovery Protocol (LLDP) for Cisco Video Surveillance 7000 Series IP Cameras could allow an unauthenticated, adjacent attacker to cause a memory leak, which could lead to a denial of service (DoS) condition on an affected device. These vulnerabilities are due to incorrect processing of certain Cisco Discovery Protocol and LLDP packets at ingress time. An attacker could exploit these vulnerabilities by sending crafted Cisco Discovery Protocol or LLDP packets to an affected device. A successful exploit could allow the attacker to cause the affected device to continuously consume memory, which could cause the device to crash and reload, resulting in a DoS condition. Note: Cisco Discovery Protocol and LLDP are Layer 2 protocols. To exploit these vulnerabilities, an attacker must be in the same broadcast domain as the affected device (Layer 2 adjacent).\n\n- CVE-2021-20216: A flaw was found in Privoxy in versions before 3.0.31. A memory leak that occurs when decompression fails unexpectedly may lead to a denial of service. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-20234: An uncontrolled resource consumption (memory leak) flaw was found in the ZeroMQ client in versions before 4.3.3 in src/pipe.cpp. This issue causes a client that connects to multiple malicious or compromised servers to crash. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-20237: An uncontrolled resource consumption (memory leak) flaw was found in ZeroMQ's src/xpub.cpp in versions before 4.3.3. This flaw allows a remote unauthenticated attacker to send crafted PUB messages that consume excessive memory if the CURVE/ZAP authentication is disabled on the server, causing a denial of service. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-30002: An issue was discovered in the Linux kernel before 5.11.3 when a webcam device exists. video_usercopy in drivers/media/v4l2-core/v4l2-ioctl.c has a memory leak for large arguments, aka CID-fb18802a338b.\n\n- CVE-2021-30844: A logic issue was addressed with improved state management. This issue is fixed in Security Update 2021-005 Catalina, macOS Big Sur 11.6. A remote attacker may be able to leak memory.\n\n- CVE-2021-32032: In Trusted Firmware-M through 1.3.0, cleaning up the memory allocated for a multi-part cryptographic operation (in the event of a failure) can prevent the abort() operation in the associated cryptographic library from freeing internal resources, causing a memory leak.\n\n- CVE-2021-39282: Live555 through 1.08 has a memory leak in AC3AudioStreamParser for AC3 files.\n\n- CVE-2021-41229: BlueZ is a Bluetooth protocol stack for Linux. In affected versions a vulnerability exists in sdp_cstate_alloc_buf which allocates memory which will always be hung in the singly linked list of cstates and will not be freed. This will cause a memory leak over time. The data can be a very large object, which can be caused by an attacker continuously sending sdp packets and this may cause the service of the target device to crash.\n\n- CVE-2021-42340: The fix for bug 63362 present in Apache Tomcat 10.1.0-M1 to 10.1.0-M5, 10.0.0-M1 to 10.0.11, 9.0.40 to 9.0.53 and 8.5.60 to 8.5.71 introduced a memory leak. The object introduced to collect metrics for HTTP upgrade connections was not released for WebSocket connections once the connection was closed. This created a memory leak that, over time, could lead to a denial of service via an OutOfMemoryError.\n\n- CVE-2021-20265: A flaw was found in the way memory resources were freed in the unix_stream_recvmsg function in the Linux kernel when a signal was pending. This flaw allows an unprivileged local user to crash the system by exhausting available memory. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-34792: A vulnerability in the memory management of Cisco Adaptive Security Appliance (ASA) Software and Firepower Threat Defense (FTD) Software could allow an unauthenticated, remote attacker to cause a denial of service (DoS) condition on an affected device. This vulnerability is due to improper resource management when connection rates are high. An attacker could exploit this vulnerability by opening a significant number of connections on an affected device. A successful exploit could allow the attacker to cause the device to reload, resulting in a DoS condition.\n\n- CVE-2020-15254: Crossbeam is a set of tools for concurrent programming. In crossbeam-channel before version 0.4.4, the bounded channel incorrectly assumes that `Vec::from_iter` has allocated capacity that same as the number of iterator elements. `Vec::from_iter` does not actually guarantee that and may allocate extra memory. The destructor of the `bounded` channel reconstructs `Vec` from the raw pointer based on the incorrect assumes described above. This is unsound and causing deallocation with the incorrect capacity when `Vec::from_iter` has allocated different sizes with the number of iterator elements. This has been fixed in crossbeam-channel 0.4.4.\n\n- CVE-2020-27827: A flaw was found in multiple versions of OpenvSwitch. Specially crafted LLDP packets can cause memory to be lost when allocating data to handle specific optional TLVs, potentially causing a denial of service. The highest threat from this vulnerability is to system availability.\n\n- CVE-2021-28665: Stormshield SNS with versions before 3.7.18, 3.11.6 and 4.1.6 has a memory-management defect in the SNMP plugin that can lead to excessive consumption of memory and CPU resources, and possibly a denial of service.\n\n- CVE-2021-3181: rfc822.c in Mutt through 2.0.4 allows remote attackers to cause a denial of service (mailbox unavailability) by sending email messages with sequences of semicolon characters in RFC822 address fields (aka terminators of empty groups). A small email message from the attacker can cause large memory consumption, and the victim may then be unable to see email messages from other persons.\n\n- CVE-2021-41145: FreeSWITCH is a Software Defined Telecom Stack enabling the digital transformation from proprietary telecom switches to a software implementation that runs on any commodity hardware. FreeSWITCH prior to version 1.10.7 is susceptible to Denial of Service via SIP flooding. When flooding FreeSWITCH with SIP messages, it was observed that after a number of seconds the process was killed by the operating system due to memory exhaustion. By abusing this vulnerability, an attacker is able to crash any FreeSWITCH instance by flooding it with SIP messages, leading to Denial of Service. The attack does not require authentication and can be carried out over UDP, TCP or TLS. This issue was patched in version 1.10.7.\n\n- CVE-2021-31261: The gf_hinter_track_new function in GPAC 1.0.1 allows attackers to read memory via a crafted file in the MP4Box command.\n\n- CVE-2020-22844: A buffer overflow in Mikrotik RouterOS 6.47 allows unauthenticated attackers to cause a denial of service (DOS) via crafted SMB requests.\n\n- CVE-2021-40008: There is a memory leak vulnerability in CloudEngine 12800 V200R019C00SPC800, CloudEngine 5800 V200R019C00SPC800, CloudEngine 6800 V200R019C00SPC800 and CloudEngine 7800 V200R019C00SPC800. The software does not sufficiently track and release allocated memory while parse a series of crafted binary messages, which could consume remaining memory. Successful exploit could cause memory exhaust.\n\n- CVE-2022-20046: In Bluetooth, there is a possible memory corruption due to a logic error. This could lead to local denial of service with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS06142410; Issue ID: ALPS06142410.\n\n- CVE-2021-33437: An issue was discovered in mjs (mJS: Restricted JavaScript engine), ES6 (JavaScript version 6). There are memory leaks in frozen_cb() in mjs.c.\n\n- CVE-2021-42197: An issue was discovered in swftools through 20201222 through a memory leak in the swftools when swfdump is used. It allows an attacker to cause code execution.\n\n- CVE-2022-0854: A memory leak flaw was found in the Linux kernel\u2019s DMA subsystem, in the way a user calls DMA_FROM_DEVICE. This flaw allows a local user to read random memory from the kernel space.\n\n- CVE-2022-22155: An Uncontrolled Resource Consumption vulnerability in the handling of IPv6 neighbor state change events in Juniper Networks Junos OS allows an adjacent attacker to cause a memory leak in the Flexible PIC Concentrator (FPC) of an ACX5448 router. The continuous flapping of an IPv6 neighbor with specific timing will cause the FPC to run out of resources, leading to a Denial of Service (DoS) condition. Once the condition occurs, further packet processing will be impacted, creating a sustained Denial of Service (DoS) condition, requiring a manual PFE restart to restore service. The following error messages will be seen after the FPC resources have been exhausted: fpc0 DNX_NH::dnx_nh_tag_ipv4_hw_install(),3135: dnx_nh_tag_ipv4_hw_install: BCM L3 Egress create object failed for NH 602 (-14:No resources for operation), BCM NH Params: unit:0 Port:41, L3_INTF:0 Flags: 0x40 fpc0 DNX_NH::dnx_nh_tag_ipv4_hw_install(),3135: dnx_nh_tag_ipv4_hw_install: BCM L3 Egress create object failed for NH 602 (-14:No resources for operation), BCM NH Params: unit:0 Port:41, L3_INTF:0 Flags: 0x40 fpc0 DNX_NH::dnx_nh_tag_ipv4_hw_install(),3135: dnx_nh_tag_ipv4_hw_install: BCM L3 Egress create object failed for NH 602 (-14:No resources for operation), BCM NH Params: unit:0 Port:41, L3_INTF:0 Flags: 0x40 fpc0 DNX_NH::dnx_nh_tag_ipv4_hw_install(),3135: dnx_nh_tag_ipv4_hw_install: BCM L3 Egress create object failed for NH 602 (-14:No resources for operation), BCM NH Params: unit:0 Port:41, L3_INTF:0 Flags: 0x40 This issue only affects the ACX5448 router. No other products or platforms are affected by this vulnerability. This issue affects Juniper Networks Junos OS on ACX5448: 18.4 versions prior to 18.4R3-S10; 19.1 versions prior to 19.1R3-S5; 19.2 versions prior to 19.2R1-S8, 19.2R3-S2; 19.3 versions prior to 19.3R2-S6, 19.3R3-S2; 19.4 versions prior to 19.4R1-S3, 19.4R2-S2, 19.4R3; 20.1 versions prior to 20.1R2; 20.2 versions prior to 20.2R1-S1, 20.2R2.\n\n- CVE-2022-26878: drivers/bluetooth/virtio_bt.c in the Linux kernel before 5.16.3 has a memory leak (socket buffers have memory allocated but not freed).\n\n- CVE-2022-35110: SWFTools commit 772e55a2 was discovered to contain a memory leak via /lib/mem.c.\n\n- CVE-2022-36152: tifig v0.2.2 was discovered to contain a memory leak via operator new[](unsigned long) at /asan/asan_new_delete.cpp.\n\n- CVE-2022-38177: By spoofing the target resolver with responses that have a malformed ECDSA signature, an attacker can trigger a small memory leak. It is possible to gradually erode available memory to the point where named crashes for lack of resources.\n\n- CVE-2022-38178: By spoofing the target resolver with responses that have a malformed EdDSA signature, an attacker can trigger a small memory leak. It is possible to gradually erode available memory to the point where named crashes for lack of resources.\n\n- CVE-2022-23471: containerd is an open source container runtime. A bug was found in containerd's CRI implementation where a user can exhaust memory on the host. In the CRI stream server, a goroutine is launched to handle terminal resize events if a TTY is requested. If the user's process fails to launch due to, for example, a faulty command, the goroutine will be stuck waiting to send without a receiver, resulting in a memory leak. Kubernetes and crictl can both be configured to use containerd's CRI implementation and the stream server is used for handling container IO. This bug has been fixed in containerd 1.6.12 and 1.5.16. Users should update to these versions to resolve the issue. Users unable to upgrade should ensure that only trusted images and commands are used and that only trusted users have permissions to execute commands in running containers. \n\n- CVE-2021-42522: There is a Information Disclosure vulnerability in anjuta/plugins/document-manager/anjuta-bookmarks.c. This issue was caused by the incorrect use of libxml2 API. The vendor forgot to call 'g_free()' to release the return value of 'xmlGetProp()'.\n\n- CVE-2021-42523: There are two Information Disclosure vulnerabilities in colord, and they lie in colord/src/cd-device-db.c and colord/src/cd-profile-db.c separately. They exist because the 'err_msg' of 'sqlite3_exec' is not releasing after use, while libxml2 emphasizes that the caller needs to release it.\n\n- CVE-2022-26365: Linux disk/nic frontends data leaks T[his CNA information record relates to multiple CVEs; the text explains which aspects/vulnerabilities correspond to which CVE.] Linux Block and Network PV device frontends don't zero memory regions before sharing them with the backend (CVE-2022-26365, CVE-2022-33740). Additionally the granularity of the grant table doesn't allow sharing less than a 4K page, leading to unrelated data residing in the same 4K page as data shared with a backend being accessible by such backend (CVE-2022-33741, CVE-2022-33742).\n\n- CVE-2021-3690: A flaw was found in Undertow. A buffer leak on the incoming WebSocket PONG message may lead to memory exhaustion. This flaw allows an attacker to cause a denial of service. The highest threat from this vulnerability is availability.\n\n- CVE-2022-38371: A vulnerability has been identified in APOGEE MBC (PPC) (BACnet) (All versions), APOGEE MBC (PPC) (P2 Ethernet) (All versions), APOGEE MEC (PPC) (BACnet) (All versions), APOGEE MEC (PPC) (P2 Ethernet) (All versions), APOGEE PXC Compact (BACnet) (All versions < V3.5.7), APOGEE PXC Compact (P2 Ethernet) (All versions < V2.8.21), APOGEE PXC Modular (BACnet) (All versions < V3.5.7), APOGEE PXC Modular (P2 Ethernet) (All versions < V2.8.21), Desigo PXC00-E.D (All versions >= V2.3), Desigo PXC00-U (All versions >= V2.3), Desigo PXC001-E.D (All versions >= V2.3), Desigo PXC100-E.D (All versions >= V2.3), Desigo PXC12-E.D (All versions >= V2.3), Desigo PXC128-U (All versions >= V2.3), Desigo PXC200-E.D (All versions >= V2.3), Desigo PXC22-E.D (All versions >= V2.3), Desigo PXC22.1-E.D (All versions >= V2.3), Desigo PXC36.1-E.D (All versions >= V2.3), Desigo PXC50-E.D (All versions >= V2.3), Desigo PXC64-U (All versions >= V2.3), Desigo PXM20-E (All versions >= V2.3), Nucleus NET for Nucleus PLUS V1 (All versions < V5.2a), Nucleus NET for Nucleus PLUS V2 (All versions < V5.4), Nucleus ReadyStart V3 V2012 (All versions < V2012.08.1), Nucleus ReadyStart V3 V2017 (All versions < V2017.02.4), Nucleus Source Code (All versions including affected FTP server), TALON TC Compact (BACnet) (All versions < V3.5.7), TALON TC Modular (BACnet) (All versions < V3.5.7). The FTP server does not properly release memory resources that were reserved for incomplete connection attempts by FTP clients. This could allow a remote attacker to generate a denial of service condition on devices that incorporate a vulnerable version of the FTP server.\n\nRelated Weaknesses:\n\n- CWE-772 (ChildOf)\n\n- CWE-404 (ChildOf)\n\n- CWE-404 (ChildOf)",
        "type": "Variant",
        "search_source": "base_query",
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          }
        }
      }
    ],
    "graph_results": [
      {
        "doc_id": "426",
        "text": "CWE-426: Untrusted Search Path",
        "score": 2.6104000000000003,
        "metadata": {
          "doc_id": "426",
          "name": "Untrusted Search Path",
          "type": "base",
          "original_content": "CWE-426: Untrusted Search Path",
          "relationships": [
            {
              "source_id": "426",
              "target_id": "428",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "426",
              "target_id": "427",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "426",
              "target_id": "673",
              "label": "CHILDOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "426",
              "target_id": "668",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "426",
              "target_id": "642",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "98",
              "target_id": "426",
              "label": "CANALSOBE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "673",
              "target_id": "426",
              "label": "PARENTOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "668",
              "target_id": "426",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "642",
              "target_id": "426",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "explicit_mention": 1.0,
            "relationship_chain": 0.42,
            "abstraction_path": 0.9
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "78",
                    "184",
                    "CANFOLLOW"
                  ],
                  [
                    "184",
                    "98",
                    "CANPRECEDE"
                  ],
                  [
                    "98",
                    "426",
                    "CANALSOBE"
                  ]
                ],
                "score": 0.42,
                "type": "relationship_chain",
                "source": "78"
              }
            }
          },
          "is_explicit": true,
          "abstraction_level": "base",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "sparse",
              "graph"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "sparse": 94.56104726448638,
              "graph": 2.6104000000000003
            }
          }
        },
        "similarity": 2.6104000000000003
      },
      {
        "doc_id": "98",
        "text": "CWE-98: Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')",
        "score": 2.2800000000000002,
        "metadata": {
          "doc_id": "98",
          "name": "Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')",
          "type": "variant",
          "original_content": "CWE-98: Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')",
          "relationships": [
            {
              "source_id": "98",
              "target_id": "73",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "98",
              "target_id": "473",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "98",
              "target_id": "456",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "98",
              "target_id": "425",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "98",
              "target_id": "184",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "98",
              "target_id": "426",
              "label": "CANALSOBE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "98",
              "target_id": "94",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "98",
              "target_id": "829",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "98",
              "target_id": "706",
              "label": "CHILDOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "94",
              "target_id": "98",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "829",
              "target_id": "98",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "73",
              "target_id": "98",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "706",
              "target_id": "98",
              "label": "PARENTOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "473",
              "target_id": "98",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "456",
              "target_id": "98",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "425",
              "target_id": "98",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "184",
              "target_id": "98",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.8,
            "sequence_path": 0.8,
            "peer_group": 0.9
          },
          "abstraction_factor": 1.2,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "vulnerability_sequence_forward",
              "peer_relationship"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "78",
                    "184",
                    "CANFOLLOW"
                  ],
                  [
                    "184",
                    "98",
                    "CANPRECEDE"
                  ]
                ],
                "score": 0.8,
                "type": "relationship_chain",
                "source": "78"
              },
              "vulnerability_sequence_forward": {
                "path": [
                  [
                    "78",
                    "184",
                    "CANFOLLOW"
                  ],
                  [
                    "184",
                    "98",
                    "CANPRECEDE"
                  ]
                ],
                "score": 0.8,
                "type": "vulnerability_sequence_forward",
                "source": "78"
              },
              "peer_relationship": {
                "path": [
                  [
                    "98",
                    "426",
                    "CANALSOBE"
                  ]
                ],
                "score": 0.9,
                "type": "peer_relationship",
                "source": "426"
              }
            }
          },
          "position": "after",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 2.2800000000000002
            }
          }
        },
        "similarity": 2.2800000000000002
      },
      {
        "doc_id": "88",
        "text": "CWE-88: Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
        "score": 2.1762,
        "metadata": {
          "doc_id": "88",
          "name": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
          "type": "base",
          "original_content": "CWE-88: Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
          "relationships": [
            {
              "source_id": "88",
              "target_id": "77",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1340"
              }
            },
            {
              "source_id": "88",
              "target_id": "77",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1305"
              }
            },
            {
              "source_id": "88",
              "target_id": "74",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "88",
              "target_id": "77",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "78",
              "target_id": "88",
              "label": "CANALSOBE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "77",
              "target_id": "88",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "74",
              "target_id": "88",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.7,
            "abstraction_path": 0.7200000000000001,
            "peer_group": 0.9
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "abstraction_path_down",
              "peer_relationship"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "78",
                    "88",
                    "CANALSOBE"
                  ]
                ],
                "score": 0.7,
                "type": "relationship_chain",
                "source": "78"
              },
              "abstraction_path_down": {
                "path": [
                  [
                    "77",
                    "88",
                    "PARENTOF"
                  ]
                ],
                "score": 0.7200000000000001,
                "type": "abstraction_path_down",
                "source": "77"
              },
              "peer_relationship": {
                "path": [
                  [
                    "78",
                    "88",
                    "CANALSOBE"
                  ]
                ],
                "score": 0.9,
                "type": "peer_relationship",
                "source": "78"
              }
            }
          },
          "abstraction_level": "base",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 2.1762
            }
          }
        },
        "similarity": 2.1762
      },
      {
        "doc_id": "79",
        "text": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "score": 1.7680000000000005,
        "metadata": {
          "doc_id": "79",
          "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
          "type": "base",
          "original_content": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
          "relationships": [
            {
              "source_id": "79",
              "target_id": "87",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "79",
              "target_id": "86",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "79",
              "target_id": "85",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "79",
              "target_id": "84",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "79",
              "target_id": "83",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "79",
              "target_id": "81",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "79",
              "target_id": "80",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "79",
              "target_id": "184",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "79",
              "target_id": "113",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "79",
              "target_id": "352",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "79",
              "target_id": "494",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "79",
              "target_id": "74",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "79",
              "target_id": "74",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "87",
              "target_id": "79",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "86",
              "target_id": "79",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "85",
              "target_id": "79",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "84",
              "target_id": "79",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "83",
              "target_id": "79",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "81",
              "target_id": "79",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "80",
              "target_id": "79",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "74",
              "target_id": "79",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "494",
              "target_id": "79",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "184",
              "target_id": "79",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "113",
              "target_id": "79",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.8,
            "sequence_path": 0.8
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "vulnerability_sequence_forward"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "78",
                    "184",
                    "CANFOLLOW"
                  ],
                  [
                    "184",
                    "79",
                    "CANPRECEDE"
                  ]
                ],
                "score": 0.8,
                "type": "relationship_chain",
                "source": "78"
              },
              "vulnerability_sequence_forward": {
                "path": [
                  [
                    "78",
                    "184",
                    "CANFOLLOW"
                  ],
                  [
                    "184",
                    "79",
                    "CANPRECEDE"
                  ]
                ],
                "score": 0.8,
                "type": "vulnerability_sequence_forward",
                "source": "78"
              }
            }
          },
          "position": "after",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.7680000000000005
            }
          }
        },
        "similarity": 1.7680000000000005
      },
      {
        "doc_id": "434",
        "text": "CWE-434: Unrestricted Upload of File with Dangerous Type",
        "score": 1.7680000000000005,
        "metadata": {
          "doc_id": "434",
          "name": "Unrestricted Upload of File with Dangerous Type",
          "type": "base",
          "original_content": "CWE-434: Unrestricted Upload of File with Dangerous Type",
          "relationships": [
            {
              "source_id": "434",
              "target_id": "73",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "434",
              "target_id": "184",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "434",
              "target_id": "183",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "434",
              "target_id": "430",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "434",
              "target_id": "436",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "434",
              "target_id": "351",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "434",
              "target_id": "669",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "434",
              "target_id": "669",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "73",
              "target_id": "434",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "669",
              "target_id": "434",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "430",
              "target_id": "434",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "184",
              "target_id": "434",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "183",
              "target_id": "434",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.8,
            "sequence_path": 0.8
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "vulnerability_sequence_forward"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "78",
                    "184",
                    "CANFOLLOW"
                  ],
                  [
                    "184",
                    "434",
                    "CANPRECEDE"
                  ]
                ],
                "score": 0.8,
                "type": "relationship_chain",
                "source": "78"
              },
              "vulnerability_sequence_forward": {
                "path": [
                  [
                    "78",
                    "184",
                    "CANFOLLOW"
                  ],
                  [
                    "184",
                    "434",
                    "CANPRECEDE"
                  ]
                ],
                "score": 0.8,
                "type": "vulnerability_sequence_forward",
                "source": "78"
              }
            }
          },
          "position": "after",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.7680000000000005
            }
          }
        },
        "similarity": 1.7680000000000005
      },
      {
        "doc_id": "472",
        "text": "CWE-472: External Control of Assumed-Immutable Web Parameter",
        "score": 1.7680000000000005,
        "metadata": {
          "doc_id": "472",
          "name": "External Control of Assumed-Immutable Web Parameter",
          "type": "base",
          "original_content": "CWE-472: External Control of Assumed-Immutable Web Parameter",
          "relationships": [
            {
              "source_id": "472",
              "target_id": "656",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "472",
              "target_id": "384",
              "label": "REQUIREDBY",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "472",
              "target_id": "471",
              "label": "CHILDOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "472",
              "target_id": "642",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "656",
              "target_id": "472",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "642",
              "target_id": "472",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "471",
              "target_id": "472",
              "label": "PARENTOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "384",
              "target_id": "472",
              "label": "REQUIRES",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.8,
            "sequence_path": 0.8
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "vulnerability_sequence_forward"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "259",
                    "656",
                    "CANFOLLOW"
                  ],
                  [
                    "656",
                    "472",
                    "CANPRECEDE"
                  ]
                ],
                "score": 0.8,
                "type": "relationship_chain",
                "source": "259"
              },
              "vulnerability_sequence_forward": {
                "path": [
                  [
                    "259",
                    "656",
                    "CANFOLLOW"
                  ],
                  [
                    "656",
                    "472",
                    "CANPRECEDE"
                  ]
                ],
                "score": 0.8,
                "type": "vulnerability_sequence_forward",
                "source": "259"
              }
            }
          },
          "position": "after",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.7680000000000005
            }
          }
        },
        "similarity": 1.7680000000000005
      },
      {
        "doc_id": "78",
        "text": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
        "score": 0.6521784447037687,
        "metadata": {
          "doc_id": "78",
          "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
          "type": "Base",
          "extended_description": "\n\nThis weakness can lead to a vulnerability in environments in which the attacker does not have direct access to the operating system, such as in web applications. Alternately, if the weakness occurs in a privileged program, it could allow the attacker to specify commands that normally would not be accessible, or to call alternate commands with privileges that the attacker does not have. The problem is exacerbated if the compromised process does not follow the principle of least privilege, because the attacker-controlled commands may run with special system privileges that increases the amount of damage.\n\n\nThere are at least two subtypes of OS command injection:\n\n\n  - The application intends to execute a single, fixed program that is under its own control. It intends to use externally-supplied inputs as arguments to that program. For example, the program might use system(\"nslookup [HOSTNAME]\") to run nslookup and allow the user to supply a HOSTNAME, which is used as an argument. Attackers cannot prevent nslookup from executing. However, if the program does not remove command separators from the HOSTNAME argument, attackers could place the separators into the arguments, which allows them to execute their own program after nslookup has finished executing.\n\n  - The application accepts an input that it uses to fully select which program to run, as well as which commands to use. The application simply redirects this entire command to the operating system. For example, the program might use \"exec([COMMAND])\" to execute the [COMMAND] that was supplied by the user. If the COMMAND is under attacker control, then the attacker can execute arbitrary commands or programs. If the command is being executed using functions like exec() and CreateProcess(), the attacker might not be able to combine multiple commands together in the same line.\n\nFrom a weakness standpoint, these variants represent distinct programmer errors. In the first variant, the programmer clearly intends that input from untrusted parties will be part of the arguments in the command to be executed. In the second variant, the programmer does not intend for the command to be accessible to any untrusted party, but the programmer probably has not accounted for alternate ways in which malicious attackers can provide input.",
          "alternate_terms": [
            "Shell injection",
            "Shell metacharacters",
            "OS Command Injection"
          ],
          "original_content": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
          "relationships": [
            {
              "source_id": "78",
              "target_id": "184",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "78",
              "target_id": "88",
              "label": "CANALSOBE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "78",
              "target_id": "77",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1340"
              }
            },
            {
              "source_id": "78",
              "target_id": "77",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1305"
              }
            },
            {
              "source_id": "78",
              "target_id": "74",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "78",
              "target_id": "77",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "77",
              "target_id": "78",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "74",
              "target_id": "78",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "184",
              "target_id": "78",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "source": "graph",
          "sources": [
            "vector",
            "graph"
          ],
          "vector_score": 0.6521784447037687,
          "graph_score": 2.4699999999999998,
          "score_components": {
            "relationship_chain": 0.3,
            "explicit_mention": 1.0,
            "abstraction_path": 0.9
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "77",
                    "78",
                    "PARENTOF"
                  ]
                ],
                "score": 0.3,
                "type": "relationship_chain",
                "source": "77"
              }
            }
          },
          "is_explicit": true,
          "abstraction_level": "base",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse",
              "graph"
            ],
            "retriever_count": 3,
            "normalized_scores": {
              "dense": 0.6110023594431819,
              "sparse": 700.0,
              "graph": 1.7428713778815073
            }
          }
        },
        "similarity": 1.7428713778815073
      },
      {
        "doc_id": "184",
        "text": "The product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.",
        "score": 0.5423672873897002,
        "metadata": {
          "doc_id": "184",
          "name": "Incomplete List of Disallowed Inputs",
          "type": "Base",
          "extended_description": null,
          "alternate_terms": [
            "Denylist / Deny List",
            "Blocklist / Block List",
            "Blacklist / Black List"
          ],
          "original_content": "The product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.",
          "relationships": [
            {
              "source_id": "184",
              "target_id": "692",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "184",
              "target_id": "98",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "184",
              "target_id": "434",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "184",
              "target_id": "78",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "184",
              "target_id": "79",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "184",
              "target_id": "1023",
              "label": "CHILDOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "184",
              "target_id": "693",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "98",
              "target_id": "184",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "86",
              "target_id": "184",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "79",
              "target_id": "184",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "78",
              "target_id": "184",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "693",
              "target_id": "184",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "692",
              "target_id": "184",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "692",
              "target_id": "184",
              "label": "STARTSWITH",
              "properties": {
                "view_id": "709"
              }
            },
            {
              "source_id": "625",
              "target_id": "184",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "434",
              "target_id": "184",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "186",
              "target_id": "184",
              "label": "CANALSOBE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "1023",
              "target_id": "184",
              "label": "PARENTOF",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "source": "graph",
          "sources": [
            "vector",
            "graph"
          ],
          "vector_score": 0.5423672873897002,
          "graph_score": 2.2100000000000004,
          "score_components": {
            "relationship_chain": 1.0,
            "sequence_path": 1.0
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "vulnerability_sequence_forward",
              "vulnerability_sequence_backward"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "78",
                    "184",
                    "CANFOLLOW"
                  ]
                ],
                "score": 1.0,
                "type": "relationship_chain",
                "source": "78"
              },
              "vulnerability_sequence_forward": {
                "path": [
                  [
                    "78",
                    "184",
                    "CANFOLLOW"
                  ]
                ],
                "score": 0.9,
                "type": "vulnerability_sequence_forward",
                "source": "78"
              },
              "vulnerability_sequence_backward": {
                "path": [
                  [
                    "184",
                    "78",
                    "CANPRECEDE"
                  ]
                ],
                "score": 1.0,
                "type": "vulnerability_sequence_backward",
                "source": "78"
              }
            }
          },
          "position": "before",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.5429469149558803
            }
          }
        },
        "similarity": 1.5429469149558803
      },
      {
        "doc_id": "73",
        "text": "CWE-73: External Control of File Name or Path",
        "score": 1.5350400000000004,
        "metadata": {
          "doc_id": "73",
          "name": "External Control of File Name or Path",
          "type": "base",
          "original_content": "CWE-73: External Control of File Name or Path",
          "relationships": [
            {
              "source_id": "73",
              "target_id": "114",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "73",
              "target_id": "59",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "73",
              "target_id": "434",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "73",
              "target_id": "98",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "73",
              "target_id": "41",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "73",
              "target_id": "22",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "73",
              "target_id": "20",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "700"
              }
            },
            {
              "source_id": "73",
              "target_id": "610",
              "label": "CHILDOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "73",
              "target_id": "642",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "99",
              "target_id": "73",
              "label": "CANALSOBE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "98",
              "target_id": "73",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "642",
              "target_id": "73",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "610",
              "target_id": "73",
              "label": "PARENTOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "59",
              "target_id": "73",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "434",
              "target_id": "73",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "41",
              "target_id": "73",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "22",
              "target_id": "73",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "20",
              "target_id": "73",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "700"
              }
            },
            {
              "source_id": "114",
              "target_id": "73",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.8,
            "sequence_path": 0.5760000000000002
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "vulnerability_sequence_forward"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "98",
                    "426",
                    "CANALSOBE"
                  ],
                  [
                    "98",
                    "73",
                    "CANFOLLOW"
                  ]
                ],
                "score": 0.8,
                "type": "relationship_chain",
                "source": "426"
              },
              "vulnerability_sequence_forward": {
                "path": [
                  [
                    "78",
                    "184",
                    "CANFOLLOW"
                  ],
                  [
                    "184",
                    "98",
                    "CANPRECEDE"
                  ],
                  [
                    "98",
                    "73",
                    "CANFOLLOW"
                  ]
                ],
                "score": 0.5760000000000002,
                "type": "vulnerability_sequence_forward",
                "source": "78"
              }
            }
          },
          "position": "after",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.5350400000000004
            }
          }
        },
        "similarity": 1.5350400000000004
      },
      {
        "doc_id": "321",
        "text": "The use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered.",
        "score": 0.5610003246445943,
        "metadata": {
          "doc_id": "321",
          "name": "Use of Hard-coded Cryptographic Key",
          "type": "Variant",
          "extended_description": null,
          "alternate_terms": [],
          "original_content": "The use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered.",
          "relationships": [
            {
              "source_id": "321",
              "target_id": "656",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "321",
              "target_id": "798",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1340"
              }
            },
            {
              "source_id": "321",
              "target_id": "798",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1305"
              }
            },
            {
              "source_id": "321",
              "target_id": "798",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "798",
              "target_id": "321",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "656",
              "target_id": "321",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "259",
              "target_id": "321",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "1291",
              "target_id": "321",
              "label": "PEEROF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "source": "graph",
          "sources": [
            "vector",
            "graph"
          ],
          "vector_score": 0.5610003246445943,
          "graph_score": 2.172,
          "score_components": {
            "relationship_chain": 0.7,
            "sequence_path": 0.8,
            "peer_group": 0.9
          },
          "abstraction_factor": 1.2,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "vulnerability_sequence_forward",
              "peer_relationship"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "259",
                    "321",
                    "PEEROF"
                  ]
                ],
                "score": 0.7,
                "type": "relationship_chain",
                "source": "259"
              },
              "vulnerability_sequence_forward": {
                "path": [
                  [
                    "259",
                    "656",
                    "CANFOLLOW"
                  ],
                  [
                    "656",
                    "321",
                    "CANPRECEDE"
                  ]
                ],
                "score": 0.8,
                "type": "vulnerability_sequence_forward",
                "source": "259"
              },
              "peer_relationship": {
                "path": [
                  [
                    "259",
                    "321",
                    "PEEROF"
                  ]
                ],
                "score": 0.9,
                "type": "peer_relationship",
                "source": "259"
              }
            }
          },
          "position": "after",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "graph"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "dense": 0.4807996292781689,
              "graph": 1.5276001298578379
            }
          }
        },
        "similarity": 1.5276001298578379
      },
      {
        "doc_id": "428",
        "text": "CWE-428: Unquoted Search Path or Element",
        "score": 1.521,
        "metadata": {
          "doc_id": "428",
          "name": "Unquoted Search Path or Element",
          "type": "base",
          "original_content": "CWE-428: Unquoted Search Path or Element",
          "relationships": [
            {
              "source_id": "428",
              "target_id": "668",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "428",
              "target_id": "668",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "668",
              "target_id": "428",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "426",
              "target_id": "428",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.7,
            "peer_group": 0.9
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "peer_relationship"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "426",
                    "428",
                    "PEEROF"
                  ]
                ],
                "score": 0.7,
                "type": "relationship_chain",
                "source": "426"
              },
              "peer_relationship": {
                "path": [
                  [
                    "426",
                    "428",
                    "PEEROF"
                  ]
                ],
                "score": 0.9,
                "type": "peer_relationship",
                "source": "426"
              }
            }
          },
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.521
            }
          }
        },
        "similarity": 1.521
      },
      {
        "doc_id": "427",
        "text": "CWE-427: Uncontrolled Search Path Element",
        "score": 1.521,
        "metadata": {
          "doc_id": "427",
          "name": "Uncontrolled Search Path Element",
          "type": "base",
          "original_content": "CWE-427: Uncontrolled Search Path Element",
          "relationships": [
            {
              "source_id": "427",
              "target_id": "668",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "427",
              "target_id": "668",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "668",
              "target_id": "427",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "426",
              "target_id": "427",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.7,
            "peer_group": 0.9
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "peer_relationship"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "426",
                    "427",
                    "PEEROF"
                  ]
                ],
                "score": 0.7,
                "type": "relationship_chain",
                "source": "426"
              },
              "peer_relationship": {
                "path": [
                  [
                    "426",
                    "427",
                    "PEEROF"
                  ]
                ],
                "score": 0.9,
                "type": "peer_relationship",
                "source": "426"
              }
            }
          },
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.521
            }
          }
        },
        "similarity": 1.521
      },
      {
        "doc_id": "257",
        "text": "CWE-257: Storing Passwords in a Recoverable Format",
        "score": 1.521,
        "metadata": {
          "doc_id": "257",
          "name": "Storing Passwords in a Recoverable Format",
          "type": "base",
          "original_content": "CWE-257: Storing Passwords in a Recoverable Format",
          "relationships": [
            {
              "source_id": "257",
              "target_id": "259",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "257",
              "target_id": "522",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "798",
              "target_id": "257",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "522",
              "target_id": "257",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "259",
              "target_id": "257",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.7,
            "peer_group": 0.9
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "peer_relationship"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "259",
                    "257",
                    "PEEROF"
                  ]
                ],
                "score": 0.7,
                "type": "relationship_chain",
                "source": "259"
              },
              "peer_relationship": {
                "path": [
                  [
                    "259",
                    "257",
                    "PEEROF"
                  ]
                ],
                "score": 0.9,
                "type": "peer_relationship",
                "source": "259"
              }
            }
          },
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.521
            }
          }
        },
        "similarity": 1.521
      },
      {
        "doc_id": "456",
        "text": "CWE-456: Missing Initialization of a Variable",
        "score": 1.4169600000000002,
        "metadata": {
          "doc_id": "456",
          "name": "Missing Initialization of a Variable",
          "type": "variant",
          "original_content": "CWE-456: Missing Initialization of a Variable",
          "relationships": [
            {
              "source_id": "456",
              "target_id": "457",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "456",
              "target_id": "98",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "456",
              "target_id": "120",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "456",
              "target_id": "89",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "456",
              "target_id": "665",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1340"
              }
            },
            {
              "source_id": "456",
              "target_id": "665",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1305"
              }
            },
            {
              "source_id": "456",
              "target_id": "909",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "98",
              "target_id": "456",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "909",
              "target_id": "456",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "89",
              "target_id": "456",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "665",
              "target_id": "456",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1305"
              }
            },
            {
              "source_id": "457",
              "target_id": "456",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "454",
              "target_id": "456",
              "label": "CANALSOBE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "120",
              "target_id": "456",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.8,
            "sequence_path": 0.5760000000000002
          },
          "abstraction_factor": 1.2,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "vulnerability_sequence_forward"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "98",
                    "426",
                    "CANALSOBE"
                  ],
                  [
                    "98",
                    "456",
                    "CANFOLLOW"
                  ]
                ],
                "score": 0.8,
                "type": "relationship_chain",
                "source": "426"
              },
              "vulnerability_sequence_forward": {
                "path": [
                  [
                    "78",
                    "184",
                    "CANFOLLOW"
                  ],
                  [
                    "184",
                    "98",
                    "CANPRECEDE"
                  ],
                  [
                    "98",
                    "456",
                    "CANFOLLOW"
                  ]
                ],
                "score": 0.5760000000000002,
                "type": "vulnerability_sequence_forward",
                "source": "78"
              }
            }
          },
          "position": "after",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.4169600000000002
            }
          }
        },
        "similarity": 1.4169600000000002
      },
      {
        "doc_id": "473",
        "text": "CWE-473: PHP External Variable Modification",
        "score": 1.4169600000000002,
        "metadata": {
          "doc_id": "473",
          "name": "PHP External Variable Modification",
          "type": "variant",
          "original_content": "CWE-473: PHP External Variable Modification",
          "relationships": [
            {
              "source_id": "473",
              "target_id": "98",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "473",
              "target_id": "471",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "98",
              "target_id": "473",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "616",
              "target_id": "473",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "471",
              "target_id": "473",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.8,
            "sequence_path": 0.5760000000000002
          },
          "abstraction_factor": 1.2,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "vulnerability_sequence_forward"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "98",
                    "426",
                    "CANALSOBE"
                  ],
                  [
                    "98",
                    "473",
                    "CANFOLLOW"
                  ]
                ],
                "score": 0.8,
                "type": "relationship_chain",
                "source": "426"
              },
              "vulnerability_sequence_forward": {
                "path": [
                  [
                    "78",
                    "184",
                    "CANFOLLOW"
                  ],
                  [
                    "184",
                    "98",
                    "CANPRECEDE"
                  ],
                  [
                    "98",
                    "473",
                    "CANFOLLOW"
                  ]
                ],
                "score": 0.5760000000000002,
                "type": "vulnerability_sequence_forward",
                "source": "78"
              }
            }
          },
          "position": "after",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.4169600000000002
            }
          }
        },
        "similarity": 1.4169600000000002
      },
      {
        "doc_id": "138",
        "text": "CWE-138: Improper Neutralization of Special Elements",
        "score": 1.4080000000000001,
        "metadata": {
          "doc_id": "138",
          "name": "Improper Neutralization of Special Elements",
          "type": "class",
          "original_content": "CWE-138: Improper Neutralization of Special Elements",
          "relationships": [
            {
              "source_id": "138",
              "target_id": "790",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "138",
              "target_id": "464",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "138",
              "target_id": "164",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "138",
              "target_id": "162",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "138",
              "target_id": "160",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "138",
              "target_id": "159",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "138",
              "target_id": "158",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "138",
              "target_id": "157",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "138",
              "target_id": "156",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "138",
              "target_id": "155",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "138",
              "target_id": "154",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "138",
              "target_id": "153",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "138",
              "target_id": "152",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "138",
              "target_id": "151",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "138",
              "target_id": "150",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "138",
              "target_id": "149",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "138",
              "target_id": "148",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "138",
              "target_id": "147",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "138",
              "target_id": "140",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "138",
              "target_id": "707",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "790",
              "target_id": "138",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "707",
              "target_id": "138",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "464",
              "target_id": "138",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "164",
              "target_id": "138",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "162",
              "target_id": "138",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "160",
              "target_id": "138",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "159",
              "target_id": "138",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "158",
              "target_id": "138",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "157",
              "target_id": "138",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "156",
              "target_id": "138",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "155",
              "target_id": "138",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "154",
              "target_id": "138",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "153",
              "target_id": "138",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "152",
              "target_id": "138",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "151",
              "target_id": "138",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "150",
              "target_id": "138",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "149",
              "target_id": "138",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "148",
              "target_id": "138",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "147",
              "target_id": "138",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "140",
              "target_id": "138",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "explicit_mention": 1.0,
            "relationship_chain": 0.3,
            "abstraction_path": 0.7
          },
          "abstraction_factor": 0.8,
          "graph_path_info": {
            "path_types": [
              "relationship_chain"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "790",
                    "138",
                    "CHILDOF"
                  ]
                ],
                "score": 0.3,
                "type": "relationship_chain",
                "source": "790"
              }
            }
          },
          "is_explicit": true,
          "abstraction_level": "class",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Discouraged",
            "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
            "comments": "Examine children of this entry to see if there is a better fit",
            "reasons": [
              "Abstraction"
            ]
          },
          "score_info": {
            "retrievers": [
              "sparse",
              "graph"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "sparse": 91.22587651898233,
              "graph": 1.4080000000000001
            }
          }
        },
        "similarity": 1.4080000000000001
      },
      {
        "doc_id": "494",
        "text": "CWE-494: Download of Code Without Integrity Check",
        "score": 1.3676000000000001,
        "metadata": {
          "doc_id": "494",
          "name": "Download of Code Without Integrity Check",
          "type": "base",
          "original_content": "CWE-494: Download of Code Without Integrity Check",
          "relationships": [
            {
              "source_id": "494",
              "target_id": "79",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "494",
              "target_id": "669",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "494",
              "target_id": "669",
              "label": "CHILDOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "494",
              "target_id": "345",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "79",
              "target_id": "494",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "669",
              "target_id": "494",
              "label": "PARENTOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "345",
              "target_id": "494",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.6,
            "sequence_path": 0.6400000000000001
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "vulnerability_sequence_forward"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "77",
                    "74",
                    "CHILDOF"
                  ],
                  [
                    "74",
                    "79",
                    "PARENTOF"
                  ],
                  [
                    "79",
                    "494",
                    "CANPRECEDE"
                  ]
                ],
                "score": 0.6,
                "type": "relationship_chain",
                "source": "77"
              },
              "vulnerability_sequence_forward": {
                "path": [
                  [
                    "78",
                    "184",
                    "CANFOLLOW"
                  ],
                  [
                    "184",
                    "79",
                    "CANPRECEDE"
                  ],
                  [
                    "79",
                    "494",
                    "CANPRECEDE"
                  ]
                ],
                "score": 0.6400000000000001,
                "type": "vulnerability_sequence_forward",
                "source": "78"
              }
            }
          },
          "position": "after",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.3676000000000001
            }
          }
        },
        "similarity": 1.3676000000000001
      },
      {
        "doc_id": "656",
        "text": "CWE-656: Reliance on Security Through Obscurity",
        "score": 1.3600000000000003,
        "metadata": {
          "doc_id": "656",
          "name": "Reliance on Security Through Obscurity",
          "type": "class",
          "original_content": "CWE-656: Reliance on Security Through Obscurity",
          "relationships": [
            {
              "source_id": "656",
              "target_id": "472",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "656",
              "target_id": "321",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "656",
              "target_id": "259",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "656",
              "target_id": "693",
              "label": "CHILDOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "656",
              "target_id": "657",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "693",
              "target_id": "656",
              "label": "PARENTOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "657",
              "target_id": "656",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "603",
              "target_id": "656",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "472",
              "target_id": "656",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "321",
              "target_id": "656",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "259",
              "target_id": "656",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 1.0,
            "sequence_path": 1.0
          },
          "abstraction_factor": 0.8,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "vulnerability_sequence_forward",
              "vulnerability_sequence_backward"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "259",
                    "656",
                    "CANFOLLOW"
                  ]
                ],
                "score": 1.0,
                "type": "relationship_chain",
                "source": "259"
              },
              "vulnerability_sequence_forward": {
                "path": [
                  [
                    "259",
                    "656",
                    "CANFOLLOW"
                  ]
                ],
                "score": 0.9,
                "type": "vulnerability_sequence_forward",
                "source": "259"
              },
              "vulnerability_sequence_backward": {
                "path": [
                  [
                    "656",
                    "259",
                    "CANPRECEDE"
                  ]
                ],
                "score": 1.0,
                "type": "vulnerability_sequence_backward",
                "source": "259"
              }
            }
          },
          "position": "before",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed-with-Review",
            "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
            "comments": "Examine children of this entry to see if there is a better fit",
            "reasons": [
              "Abstraction"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.3600000000000003
            }
          }
        },
        "similarity": 1.3600000000000003
      },
      {
        "doc_id": "183",
        "text": "CWE-183: Permissive List of Allowed Inputs",
        "score": 1.3010400000000002,
        "metadata": {
          "doc_id": "183",
          "name": "Permissive List of Allowed Inputs",
          "type": "base",
          "original_content": "CWE-183: Permissive List of Allowed Inputs",
          "relationships": [
            {
              "source_id": "183",
              "target_id": "942",
              "label": "PARENTOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "183",
              "target_id": "434",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "183",
              "target_id": "697",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "942",
              "target_id": "183",
              "label": "CHILDOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "697",
              "target_id": "183",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "627",
              "target_id": "183",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "625",
              "target_id": "183",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "434",
              "target_id": "183",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "186",
              "target_id": "183",
              "label": "CANALSOBE",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.6,
            "sequence_path": 0.5760000000000002
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "vulnerability_sequence_forward"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "78",
                    "184",
                    "CANFOLLOW"
                  ],
                  [
                    "184",
                    "434",
                    "CANPRECEDE"
                  ],
                  [
                    "434",
                    "183",
                    "CANFOLLOW"
                  ]
                ],
                "score": 0.6,
                "type": "relationship_chain",
                "source": "78"
              },
              "vulnerability_sequence_forward": {
                "path": [
                  [
                    "78",
                    "184",
                    "CANFOLLOW"
                  ],
                  [
                    "184",
                    "434",
                    "CANPRECEDE"
                  ],
                  [
                    "434",
                    "183",
                    "CANFOLLOW"
                  ]
                ],
                "score": 0.5760000000000002,
                "type": "vulnerability_sequence_forward",
                "source": "78"
              }
            }
          },
          "position": "after",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.3010400000000002
            }
          }
        },
        "similarity": 1.3010400000000002
      },
      {
        "doc_id": "94",
        "text": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
        "score": 0.5641792579592897,
        "metadata": {
          "doc_id": "94",
          "name": "Improper Control of Generation of Code ('Code Injection')",
          "type": "Base",
          "extended_description": "\n\nWhen a product allows a user's input to contain code syntax, it might be possible for an attacker to craft the code in such a way that it will alter the intended control flow of the product. Such an alteration could lead to arbitrary code execution.\n\n\nInjection problems encompass a wide variety of issues -- all mitigated in very different ways. For this reason, the most effective way to discuss these weaknesses is to note the distinct features which classify them as injection weaknesses. The most important issue to note is that all injection problems share one thing in common -- i.e., they allow for the injection of control plane data into the user-controlled data plane. This means that the execution of the process may be altered by sending code in through legitimate data channels, using no other mechanism. While buffer overflows, and many other flaws, involve the use of some further issue to gain execution, injection problems need only for the data to be parsed. The most classic instantiations of this category of weakness are SQL injection and format string vulnerabilities.\n",
          "alternate_terms": [],
          "original_content": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
          "relationships": [
            {
              "source_id": "94",
              "target_id": "98",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "94",
              "target_id": "96",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "94",
              "target_id": "95",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "94",
              "target_id": "1336",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "94",
              "target_id": "913",
              "label": "CHILDOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "94",
              "target_id": "74",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "94",
              "target_id": "74",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "98",
              "target_id": "94",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "96",
              "target_id": "94",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "95",
              "target_id": "94",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "913",
              "target_id": "94",
              "label": "PARENTOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "74",
              "target_id": "94",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "1336",
              "target_id": "94",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "source": "graph",
          "sources": [
            "vector",
            "graph"
          ],
          "vector_score": 0.5641792579592897,
          "graph_score": 1.6016000000000004,
          "score_components": {
            "relationship_chain": 0.8,
            "sequence_path": 0.6400000000000001
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "vulnerability_sequence_forward"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "98",
                    "426",
                    "CANALSOBE"
                  ],
                  [
                    "98",
                    "94",
                    "CANPRECEDE"
                  ]
                ],
                "score": 0.8,
                "type": "relationship_chain",
                "source": "426"
              },
              "vulnerability_sequence_forward": {
                "path": [
                  [
                    "78",
                    "184",
                    "CANFOLLOW"
                  ],
                  [
                    "184",
                    "98",
                    "CANPRECEDE"
                  ],
                  [
                    "98",
                    "94",
                    "CANPRECEDE"
                  ]
                ],
                "score": 0.6400000000000001,
                "type": "vulnerability_sequence_forward",
                "source": "78"
              }
            }
          },
          "position": "after",
          "mapping_notes": {
            "usage": "Allowed-with-Review",
            "rationale": "This entry is frequently misused for vulnerabilities with a technical impact of \"code execution,\" which does not by itself indicate a root cause weakness, since dozens of weaknesses can enable code execution.",
            "comments": "This weakness only applies when the product's functionality intentionally constructs all or part of a code segment. It could be that executing code could be the result of other weaknesses that do not involve the construction of code segments.",
            "reasons": [
              "Frequent Misuse",
              "Frequent Misinterpretation"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "graph"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "dense": 0.5022731050833147,
              "graph": 1.186631703183716
            }
          }
        },
        "similarity": 1.186631703183716
      }
    ]
  },
  "retrieval_time": 5.406809329986572
}