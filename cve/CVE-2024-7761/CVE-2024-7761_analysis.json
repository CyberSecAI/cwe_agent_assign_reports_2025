{
  "cve_id": "CVE-2024-7761",
  "description": "In the process of testing the Simple Job Board WordPress plugin before 2.12.2, a vulnerability was found that allows you to implement Stored **XSS** on behalf of the editor by embedding malicious script, which entails account takeover backdoor",
  "key_phrases": {
    "rootcause": "",
    "weakness": [
      "cross-site scripting",
      "XSS"
    ],
    "impact": "account takeover",
    "vector": "embedding malicious script",
    "attacker": "",
    "product": "Simple Job Board WordPress plugin",
    "version": "before 2.12.2",
    "component": ""
  },
  "reference_content": "Here's an analysis of the provided content:\n\n**Analysis of wpscan.com_5bcd22f2_20250624_202010.html**\n\nThis content describes a Cross-Site Scripting (XSS) vulnerability in the \"Simple Job Board\" WordPress plugin, and references CVE-2024-7761.\n\n*   **Root cause of vulnerability:** The vulnerability allows for Stored XSS by embedding a malicious script, due to a lack of proper sanitization of user input. Specifically, the content of the widget title.\n*   **Weaknesses/vulnerabilities present:** Cross-Site Scripting (XSS).\n*   **Impact of exploitation:** Account takeover.\n*   **Attack vectors:** An attacker with editor+ privileges can inject malicious script into the \"SRB Recent Jobs\" widget title. When other users view the page, the malicious script will execute.\n*   **Required attacker capabilities/position:** An attacker must have at least editor level access.\n*   **Mitigation or fix:** Upgrading to version 2.12.2 fixes the issue.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Allowed | Primary CWE |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship that influenced the decision was the parent-child relationship with the more general CWE-138 (Improper Neutralization of Special Elements). However, the description is specific to Cross-site Scripting, so CWE-79 is a better fit. There are also CANPRECEDE and CANFOLLOW relationships, but those describe how this vulnerability can relate to others, not how it is composed. The Base level of abstraction is appropriate as it directly describes the **weakness**.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe138[\"CWE-138: Improper Neutralization of Special Elements\"]\n    \n    cwe79 -->|CHILDOF| cwe138\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe79 primary\n    class cwe138 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **improper neutralization** of input, leading to the ability to embed malicious scripts. This ultimately results in account takeover.\n\nImproper Input Neutralization (CWE-79) -> Malicious Script Embedded -> Account Takeover\n\n## Summary of Analysis\nThe primary **weakness** lies in the **improper neutralization** of input, which allows for the embedding of malicious scripts. This leads to a Stored **XSS** vulnerability, which can then be exploited for account takeover. The analysis is based on the provided evidence, specifically the vulnerability description: \"In the process of testing the Simple Job Board WordPress plugin before 2.12.2, a vulnerability was found that allows you to implement Stored **XSS** on behalf of the editor by embedding malicious script, which entails account takeover backdoor.\"\n\nThe retriever results consistently highlight CWE-79 as the most relevant CWE. The hierarchical relationships confirm that CWE-79 is a specific type of **improper neutralization**, making it more appropriate than its parent classes. The Base level of abstraction ensures that the CWE is specific enough to capture the essence of the vulnerability.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\n**Abstraction Level**: Variant\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-184: Incomplete List of Disallowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 2627.30\n**Source**: sparse\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 2423.33\n**Source**: sparse\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Allowed | Primary CWE |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship that influenced the decision was the parent-child relationship with the more general CWE-138 (Improper Neutralization of Special Elements). However, the description is specific to Cross-site Scripting, so CWE-79 is a better fit. There are also CANPRECEDE and CANFOLLOW relationships, but those describe how this vulnerability can relate to others, not how it is composed. The Base level of abstraction is appropriate as it directly describes the **weakness**.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe138[\"CWE-138: Improper Neutralization of Special Elements\"]\n    \n    cwe79 -->|CHILDOF| cwe138\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe79 primary\n    class cwe138 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **improper neutralization** of input, leading to the ability to embed malicious scripts. This ultimately results in account takeover.\n\nImproper Input Neutralization (CWE-79) -> Malicious Script Embedded -> Account Takeover\n\n## Summary of Analysis\nThe primary **weakness** lies in the **improper neutralization** of input, which allows for the embedding of malicious scripts. This leads to a Stored **XSS** vulnerability, which can then be exploited for account takeover. The analysis is based on the provided evidence, specifically the vulnerability description: \"In the process of testing the Simple Job Board WordPress plugin before 2.12.2, a vulnerability was found that allows you to implement Stored **XSS** on behalf of the editor by embedding malicious script, which entails account takeover backdoor.\"\n\nThe retriever results consistently highlight CWE-79 as the most relevant CWE. The hierarchical relationships confirm that CWE-79 is a specific type of **improper neutralization**, making it more appropriate than its parent classes. The Base level of abstraction ensures that the CWE is specific enough to capture the essence of the vulnerability.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\n**Abstraction Level**: Variant\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-184: Incomplete List of Disallowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 2627.30\n**Source**: sparse\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 2423.33\n**Source**: sparse\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n**Chain starting from CWE-80:**\n- 80 (Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse",
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "keyphrase_sources": [
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "impact:account takeover",
            "keyphrase": "account takeover",
            "type": "impact"
          },
          {
            "id": "vector:embedding malicious script",
            "keyphrase": "embedding malicious script",
            "type": "vector"
          },
          {
            "id": "product:Simple Job Board WordPress plugin",
            "keyphrase": "Simple Job Board WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:before 2.12.2",
            "keyphrase": "before 2.12.2",
            "type": "version"
          }
        ]
      },
      "similarity": 320.89939233771565
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_sources": [
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "vector:embedding malicious script",
            "keyphrase": "embedding malicious script",
            "type": "vector"
          },
          {
            "id": "product:Simple Job Board WordPress plugin",
            "keyphrase": "Simple Job Board WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:before 2.12.2",
            "keyphrase": "before 2.12.2",
            "type": "version"
          }
        ]
      },
      "similarity": 296.9749389248255
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "keyphrase_sources": [
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "impact:account takeover",
            "keyphrase": "account takeover",
            "type": "impact"
          },
          {
            "id": "vector:embedding malicious script",
            "keyphrase": "embedding malicious script",
            "type": "vector"
          },
          {
            "id": "product:Simple Job Board WordPress plugin",
            "keyphrase": "Simple Job Board WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:before 2.12.2",
            "keyphrase": "before 2.12.2",
            "type": "version"
          }
        ]
      },
      "similarity": 280.6182076702518
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse",
        "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
        "keyphrase_sources": [
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "impact:account takeover",
            "keyphrase": "account takeover",
            "type": "impact"
          },
          {
            "id": "vector:embedding malicious script",
            "keyphrase": "embedding malicious script",
            "type": "vector"
          },
          {
            "id": "product:Simple Job Board WordPress plugin",
            "keyphrase": "Simple Job Board WordPress plugin",
            "type": "product"
          }
        ]
      },
      "similarity": 264.2671354213015
    },
    {
      "metadata": {
        "doc_id": "942",
        "name": "Permissive Cross-domain Policy with Untrusted Domains",
        "source": "sparse",
        "original_content": "The product uses a cross-domain policy file that includes domains that should not be trusted.",
        "keyphrase_sources": [
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          }
        ]
      },
      "similarity": 254.32860693839365
    },
    {
      "metadata": {
        "doc_id": "425",
        "name": "Direct Request ('Forced Browsing')",
        "source": "sparse",
        "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
        "keyphrase_sources": [
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "impact:account takeover",
            "keyphrase": "account takeover",
            "type": "impact"
          }
        ]
      },
      "similarity": 206.60942632268583
    },
    {
      "metadata": {
        "doc_id": "548",
        "name": "Exposure of Information Through Directory Listing",
        "source": "sparse",
        "original_content": "A directory listing is inappropriately exposed, yielding potentially sensitive information to attackers.",
        "keyphrase_sources": [
          {
            "id": "product:Simple Job Board WordPress plugin",
            "keyphrase": "Simple Job Board WordPress plugin",
            "type": "product"
          }
        ]
      },
      "similarity": 103.05222567836135
    },
    {
      "metadata": {
        "doc_id": "502",
        "name": "Deserialization of Untrusted Data",
        "source": "sparse",
        "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.",
        "keyphrase_sources": [
          {
            "id": "vector:embedding malicious script",
            "keyphrase": "embedding malicious script",
            "type": "vector"
          },
          {
            "id": "version:before 2.12.2",
            "keyphrase": "before 2.12.2",
            "type": "version"
          }
        ]
      },
      "similarity": 76.93888209170606
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse",
        "original_content": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.",
        "keyphrase_sources": [
          {
            "id": "impact:account takeover",
            "keyphrase": "account takeover",
            "type": "impact"
          },
          {
            "id": "version:before 2.12.2",
            "keyphrase": "before 2.12.2",
            "type": "version"
          }
        ]
      },
      "similarity": 76.06880066057171
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-116",
      "CWE-80",
      "CWE-212",
      "CWE-79",
      "CWE-472",
      "CWE-352",
      "CWE-74",
      "CWE-138",
      "CWE-184",
      "CWE-425",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "79": [
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "impact:account takeover",
        "keyphrase": "account takeover",
        "type": "impact"
      },
      {
        "id": "vector:embedding malicious script",
        "keyphrase": "embedding malicious script",
        "type": "vector"
      },
      {
        "id": "product:Simple Job Board WordPress plugin",
        "keyphrase": "Simple Job Board WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:before 2.12.2",
        "keyphrase": "before 2.12.2",
        "type": "version"
      }
    ],
    "352": [
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "vector:embedding malicious script",
        "keyphrase": "embedding malicious script",
        "type": "vector"
      },
      {
        "id": "product:Simple Job Board WordPress plugin",
        "keyphrase": "Simple Job Board WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:before 2.12.2",
        "keyphrase": "before 2.12.2",
        "type": "version"
      }
    ],
    "116": [
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "impact:account takeover",
        "keyphrase": "account takeover",
        "type": "impact"
      },
      {
        "id": "vector:embedding malicious script",
        "keyphrase": "embedding malicious script",
        "type": "vector"
      },
      {
        "id": "product:Simple Job Board WordPress plugin",
        "keyphrase": "Simple Job Board WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:before 2.12.2",
        "keyphrase": "before 2.12.2",
        "type": "version"
      }
    ],
    "434": [
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "impact:account takeover",
        "keyphrase": "account takeover",
        "type": "impact"
      },
      {
        "id": "vector:embedding malicious script",
        "keyphrase": "embedding malicious script",
        "type": "vector"
      },
      {
        "id": "product:Simple Job Board WordPress plugin",
        "keyphrase": "Simple Job Board WordPress plugin",
        "type": "product"
      }
    ],
    "942": [
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      }
    ],
    "425": [
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "impact:account takeover",
        "keyphrase": "account takeover",
        "type": "impact"
      }
    ],
    "863": [
      {
        "id": "impact:account takeover",
        "keyphrase": "account takeover",
        "type": "impact"
      },
      {
        "id": "version:before 2.12.2",
        "keyphrase": "before 2.12.2",
        "type": "version"
      }
    ],
    "502": [
      {
        "id": "vector:embedding malicious script",
        "keyphrase": "embedding malicious script",
        "type": "vector"
      },
      {
        "id": "version:before 2.12.2",
        "keyphrase": "before 2.12.2",
        "type": "version"
      }
    ],
    "548": [
      {
        "id": "product:Simple Job Board WordPress plugin",
        "keyphrase": "Simple Job Board WordPress plugin",
        "type": "product"
      }
    ]
  }
}