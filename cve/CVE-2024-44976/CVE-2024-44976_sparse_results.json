{
  "query": "In the Linux kernel, the following vulnerability has been resolved ata pata_macio Fix DMA table overflow Kolbjrn and Jonas reported that their 32-bit PowerMacs were crashing in pata-macio since commit 09fe2bfa6b83 (ata pata_macio Fix max_segment_size with PAGE_SIZE == 64K). For example kernel BUG at drivers/ata/pata_macio.c544! Oops Exception in kernel mode, sig 5 [#1] BE PAGE_SIZE=4K MMU=Hash SMP NR_CPUS=2 DEBUG_PAGEALLOC PowerMac ... NIP pata_macio_qc_prep+0xf4/0x190 LR pata_macio_qc_prep+0xfc/0x190 Call Trace 0xc1421660 (unreliable) ata_qc_issue+0x14c/0x2d4 __ata_scsi_queuecmd+0x200/0x53c ata_scsi_queuecmd+0x50/0xe0 scsi_queue_rq+0x788/0xb1c __blk_mq_issue_directly+0x58/0xf4 blk_mq_plug_issue_direct+0x8c/0x1b4 blk_mq_flush_plug_list.part.0+0x584/0x5e0 __blk_flush_plug+0xf8/0x194 __submit_bio+0x1b8/0x2e0 submit_bio_noacct_nocheck+0x230/0x304 btrfs_work_helper+0x200/0x338 process_one_work+0x1a8/0x338 worker_thread+0x364/0x4c0 kthread+0x100/0x104 start_kernel_thread+0x10/0x14 That commit increased max_segment_size to 64KB, with the justification that the SCSI core was already using that size when PAGE_SIZE == 64KB, and that there was existing logic to split over-sized requests. However with a sufficiently large request, the splitting logic causes each sg to be split into two commands in the DMA table, leading to overflow of the DMA table, triggering the BUG_ON(). With default set",
  "count": 10,
  "results": [
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 800.0,
      "original_score": 800.0,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "abstraction": "Base",
      "score": 598.2298120842012,
      "original_score": 598.2298120842012,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "abstraction": "Base",
      "score": 589.0325692719023,
      "original_score": 589.0325692719023,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "674",
      "name": "Uncontrolled Recursion",
      "abstraction": "Class",
      "score": 544.2190275751093,
      "original_score": 544.2190275751093,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "abstraction": "Base",
      "score": 537.5053065241076,
      "original_score": 537.5053065241076,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "193",
      "name": "Off-by-one Error",
      "abstraction": "Base",
      "score": 532.3781713695001,
      "original_score": 532.3781713695001,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 524.8189120939314,
      "original_score": 524.8189120939314,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "abstraction": "Variant",
      "score": 518.2679140013034,
      "original_score": 518.2679140013034,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "abstraction": "Base",
      "score": 513.5914645988225,
      "original_score": 513.5914645988225,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "415",
      "name": "Double Free",
      "abstraction": "Variant",
      "score": 513.3845710865014,
      "original_score": 513.3845710865014,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 513.3845710865014,
    "max": 800.0,
    "mean": 567.142774860538,
    "median": 534.9417389468039,
    "count": 10
  }
}