{
  "cve_id": "CVE-2024-9095",
  "description": "In lunary-ai/lunary version v1.4.28, the /bigquery API route **lacks proper access control**, allowing any logged-in user to create a Datastream to Google BigQuery and export the entire database. This includes sensitive data such as password hashes and secret API keys. The route is protected by a config check (`config.DATA_WAREHOUSE_EXPORTS_ALLOWED`), but it does not verify the users access level or implement any access control middleware. This vulnerability can lead to the extraction of sensitive data, disruption of services, credential compromise, and service integrity breaches.",
  "key_phrases": {
    "component": "/bigquery API route",
    "rootcause": "lacks proper access control",
    "vector": "",
    "weakness": "",
    "product": "lunary-ai/lunary",
    "impact": "disruption of services, extraction of sensitive data, integrity breaches",
    "attacker": "any logged-in user",
    "version": "v1.4.28"
  },
  "reference_content": "## Analysis of CVE-2024-9095 Content\n\nThe provided content relates to a security patch for the Lunary project. Here's a breakdown of the relevant information:\n\n**Root cause of vulnerability:**\n\nThe commit message \"fix: security patch (#573)\" indicates a security issue was addressed. The diffs reveal changes related to access control and authorization checks. Specifically, the changes suggest a potential issue where users might have been able to perform actions (like updating checklists or accessing billing features) without proper authorization.\n\n**Weaknesses/vulnerabilities present:**\n\n*   **Missing Access Control:** The original code lacked sufficient checks to ensure users had the necessary permissions before performing certain actions. For example, the code initially allowed any user to potentially update checklists (`checklists.patch`) without verifying their access rights.\n*   **Insufficient Role-Based Access Control (RBAC):** The changes in `users.ts` and `roles.ts` suggest a weakness in how user roles were being validated, particularly concerning billing access. The code was modified to prevent non-owner users from adding billing members.\n*   **Potential for Privilege Escalation:** Without proper access control, a malicious user could potentially escalate their privileges and perform actions they shouldn't be authorized to do.\n\n**Impact of exploitation:**\n\n*   **Unauthorized Data Modification:** Users could potentially modify checklists or other data they shouldn't have access to.\n*   **Unauthorized Access to Sensitive Features:** Users could potentially access billing or other sensitive features without proper authorization.\n*   **Potential for Account Takeover/Compromise:** While not directly evident from the diffs, a lack of access control could potentially contribute to account takeover or compromise scenarios.\n\n**Attack vectors:**\n\n*   **Direct API Requests:** An attacker could directly send API requests to modify data or access features without proper authentication or authorization.\n*   **UI Manipulation:** An attacker could potentially manipulate the user interface to bypass access control checks.\n\n**Required attacker capabilities/position:**\n\n*   **Authenticated User:** The attacker would likely need to be an authenticated user of the Lunary application.\n*   **Understanding of API Endpoints:** Knowledge of the API endpoints and their parameters would be helpful for crafting malicious requests.\n\n**Mitigation or fix:**\n\n*   **Implemented Access Control Checks:** The code was updated to include `checkAccess` calls before allowing users to perform sensitive actions (e.g., updating checklists).\n*   **Enhanced Role-Based Access Control:** The code was modified to enforce stricter role-based access control, preventing non-owner users from adding billing members.\n*   **Restricted Access to Sensitive Features:** The `roles.ts` file was updated to restrict update and delete access to settings.\n\n**More detail than official CVE description:**\n\nYes, the provided content offers significantly more detail than a typical CVE description. It provides specific code changes and explains how the vulnerabilities were addressed. It also details the specific files and lines of code that were modified.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-862 | Missing Authorization | 1.0 | Class | Primary CWE | Allowed-with-Review |\n| CWE-201 | Insertion of Sensitive Information Into Sent Data | 0.7 | Base | Secondary Candidate | Allowed |\n| CWE-284 | Improper Access Control | 0.6 | Pillar | Secondary Candidate | Discouraged |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE selected is CWE-862, Missing Authorization, which is a Class-level CWE. It represents a situation where the product does not perform an authorization check when an actor attempts to access a resource or perform an action. This is directly supported by the vulnerability description, which states that the /bigquery API route **lacks proper access control**, even though the route is protected by a config check.\n\nCWE-862 is a child of CWE-284, Improper Access Control, a more general category. While CWE-284 could be considered, CWE-862 is more specific because the vulnerability description identifies the **lack of authorization** as the root cause.\n\nCWE-862 also has peer relationships with CWE-285 (Improper Authorization) and CWE-863 (Incorrect Authorization). However, CWE-862 is more appropriate because the issue is a complete **lack of authorization** rather than an incorrect implementation.\n\n```mermaid\ngraph TD\n    cwe862[\"CWE-862: Missing Authorization\"]\n    cwe284[\"CWE-284: Improper Access Control\"]\n    cwe285[\"CWE-285: Improper Authorization\"]\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe201[\"CWE-201: Insertion of Sensitive Information Into Sent Data\"]\n\n    cwe862 -->|CHILDOF| cwe284\n    cwe862 --|PEEROF| cwe285\n    cwe862 --|PEEROF| cwe863\n    cwe201 --|CANFOLLOW| cwe862\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe862 primary\n    class cwe284,cwe201 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **lack of proper access control** (CWE-862), which allows any logged-in user to access the /bigquery API route. This leads to the ability to create a Datastream to Google BigQuery and export the entire database, including sensitive data. If sensitive data is exported as part of this datastream then CWE-201 (Insertion of Sensitive Information Into Sent Data) could be triggered. The final impact is the extraction of sensitive data, disruption of services, credential compromise, and service integrity breaches.\n\n## Summary of Analysis\nThe initial analysis identified CWE-862 (Missing Authorization) as the primary weakness, supported by the vulnerability description stating that the /bigquery API route **lacks proper access control**. The retriever results also ranked CWE-862 highly. Further analysis of CWE relationships confirmed that CWE-862 is the most specific and appropriate CWE, as it directly addresses the **missing authorization** issue. The evidence from the vulnerability description and CVE reference links content summary supports this classification.\n\nCWE-201 (Insertion of Sensitive Information Into Sent Data) is a secondary candidate because the impact of the vulnerability is the extraction of sensitive data, which could lead to the insertion of that data into sent data.\n\nCWE-284 (Improper Access Control) was considered but deemed too general, as the specific issue is a **missing authorization** check (CWE-862).\n\nThe selected CWEs are at the optimal level of specificity, with CWE-862 being a Class-level CWE that accurately represents the **missing authorization** issue, and CWE-201 being a Base-level CWE that describes the sensitive information exposure impact.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-639: Authorization Bypass Through User-Controlled Key\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-267: Privilege Defined With Unsafe Actions\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nA particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-538: Insertion of Sensitive Information into Externally-Accessible File or Directory\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product places sensitive information into files or directories that are accessible to actors who are allowed to have access to the files, but not to the sensitive information.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-345: Insufficient Verification of Data Authenticity\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-668: Exposure of Resource to Wrong Sphere\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-668 is high-level and is often misused as a catch-all when lower-level CWE IDs might be applicable. It is sometimes used for low-information vulnerability reports [REF-1287]. It is a level-1 Class (i.e., a child of a Pillar). It is not useful for trend analysis.\n\n\n\n## CWE-209: Generation of Error Message Containing Sensitive Information\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product generates an error message that includes sensitive information about its environment, users, or associated data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which",
  "analysis_with_relationships": "# Summary\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-862 | Missing Authorization | 1.0 | Class | Primary CWE | Allowed-with-Review |\n| CWE-201 | Insertion of Sensitive Information Into Sent Data | 0.7 | Base | Secondary Candidate | Allowed |\n| CWE-284 | Improper Access Control | 0.6 | Pillar | Secondary Candidate | Discouraged |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE selected is CWE-862, Missing Authorization, which is a Class-level CWE. It represents a situation where the product does not perform an authorization check when an actor attempts to access a resource or perform an action. This is directly supported by the vulnerability description, which states that the /bigquery API route **lacks proper access control**, even though the route is protected by a config check.\n\nCWE-862 is a child of CWE-284, Improper Access Control, a more general category. While CWE-284 could be considered, CWE-862 is more specific because the vulnerability description identifies the **lack of authorization** as the root cause.\n\nCWE-862 also has peer relationships with CWE-285 (Improper Authorization) and CWE-863 (Incorrect Authorization). However, CWE-862 is more appropriate because the issue is a complete **lack of authorization** rather than an incorrect implementation.\n\n```mermaid\ngraph TD\n    cwe862[\"CWE-862: Missing Authorization\"]\n    cwe284[\"CWE-284: Improper Access Control\"]\n    cwe285[\"CWE-285: Improper Authorization\"]\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe201[\"CWE-201: Insertion of Sensitive Information Into Sent Data\"]\n\n    cwe862 -->|CHILDOF| cwe284\n    cwe862 --|PEEROF| cwe285\n    cwe862 --|PEEROF| cwe863\n    cwe201 --|CANFOLLOW| cwe862\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe862 primary\n    class cwe284,cwe201 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **lack of proper access control** (CWE-862), which allows any logged-in user to access the /bigquery API route. This leads to the ability to create a Datastream to Google BigQuery and export the entire database, including sensitive data. If sensitive data is exported as part of this datastream then CWE-201 (Insertion of Sensitive Information Into Sent Data) could be triggered. The final impact is the extraction of sensitive data, disruption of services, credential compromise, and service integrity breaches.\n\n## Summary of Analysis\nThe initial analysis identified CWE-862 (Missing Authorization) as the primary weakness, supported by the vulnerability description stating that the /bigquery API route **lacks proper access control**. The retriever results also ranked CWE-862 highly. Further analysis of CWE relationships confirmed that CWE-862 is the most specific and appropriate CWE, as it directly addresses the **missing authorization** issue. The evidence from the vulnerability description and CVE reference links content summary supports this classification.\n\nCWE-201 (Insertion of Sensitive Information Into Sent Data) is a secondary candidate because the impact of the vulnerability is the extraction of sensitive data, which could lead to the insertion of that data into sent data.\n\nCWE-284 (Improper Access Control) was considered but deemed too general, as the specific issue is a **missing authorization** check (CWE-862).\n\nThe selected CWEs are at the optimal level of specificity, with CWE-862 being a Class-level CWE that accurately represents the **missing authorization** issue, and CWE-201 being a Base-level CWE that describes the sensitive information exposure impact.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-639: Authorization Bypass Through User-Controlled Key\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-267: Privilege Defined With Unsafe Actions\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nA particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-538: Insertion of Sensitive Information into Externally-Accessible File or Directory\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product places sensitive information into files or directories that are accessible to actors who are allowed to have access to the files, but not to the sensitive information.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-345: Insufficient Verification of Data Authenticity\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-668: Exposure of Resource to Wrong Sphere\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-668 is high-level and is often misused as a catch-all when lower-level CWE IDs might be applicable. It is sometimes used for low-information vulnerability reports [REF-1287]. It is a level-1 Class (i.e., a child of a Pillar). It is not useful for trend analysis.\n\n\n\n## CWE-209: Generation of Error Message Containing Sensitive Information\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product generates an error message that includes sensitive information about its environment, users, or associated data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-345:**\n- 345 (Insufficient Verification of Data Authenticity) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 511.7289405762965
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 483.13921279428837
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 474.01266813529594
    },
    {
      "metadata": {
        "doc_id": "522",
        "name": "Insufficiently Protected Credentials",
        "source": "sparse"
      },
      "similarity": 472.72300392225713
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 469.88295359078046
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 460.72235623228283
    },
    {
      "metadata": {
        "doc_id": "639",
        "name": "Authorization Bypass Through User-Controlled Key",
        "source": "sparse"
      },
      "similarity": 458.6198619722186
    },
    {
      "metadata": {
        "doc_id": "284",
        "name": "Improper Access Control",
        "source": "sparse"
      },
      "similarity": 457.66139495466155
    },
    {
      "metadata": {
        "doc_id": "922",
        "name": "Insecure Storage of Sensitive Information",
        "type": "Class",
        "original_content": "The product stores sensitive information without properly limiting read or write access by unauthorized actors.",
        "keyphrase_source": "rootcause:lacks proper access control",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.4544086021432683
          }
        }
      },
      "similarity": 0.4544086021432683
    },
    {
      "doc_id": "202",
      "text": "When trying to keep information confidential, an attacker can often infer some of the information by using statistics.",
      "score": 0.5123529661813173,
      "metadata": {
        "doc_id": "202",
        "name": "Exposure of Sensitive Information Through Data Queries",
        "type": "Base",
        "extended_description": "In situations where data should not be tied to individual users, but a large number of users should be able to make queries that \"scrub\" the identity of users, it may be possible to get information about a user -- e.g., by specifying search terms that are known to be unique to that user.",
        "alternate_terms": [],
        "original_content": "When trying to keep information confidential, an attacker can often infer some of the information by using statistics.",
        "relationships": [
          {
            "source_id": "202",
            "target_id": "1230",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "201",
            "target_id": "202",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1230",
            "target_id": "202",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "source": "graph",
        "sources": [
          "vector",
          "graph"
        ],
        "vector_score": 0.5123529661813173,
        "graph_score": 3.6399999999999997,
        "score_components": {
          "relationship_chain": 0.7,
          "explicit_mention": 1.0,
          "abstraction_path": 0.9,
          "peer_group": 0.9
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down",
            "peer_relationship"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "201",
                  "202",
                  "CANALSOBE"
                ]
              ],
              "score": 0.7,
              "type": "relationship_chain",
              "source": "201"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "285",
                  "1230",
                  "PARENTOF"
                ],
                [
                  "1230",
                  "202",
                  "PARENTOF"
                ]
              ],
              "score": 0.5760000000000002,
              "type": "abstraction_path_down",
              "source": "285"
            },
            "peer_relationship": {
              "path": [
                [
                  "201",
                  "202",
                  "CANALSOBE"
                ]
              ],
              "score": 0.9,
              "type": "peer_relationship",
              "source": "201"
            }
          }
        },
        "is_explicit": true,
        "abstraction_level": "base",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.443770824549206,
            "graph": 2.3889411864725267
          }
        }
      },
      "similarity": 2.3889411864725267
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-345",
      "CWE-862",
      "CWE-639",
      "CWE-201",
      "CWE-472",
      "CWE-209",
      "CWE-538",
      "CWE-285",
      "CWE-668",
      "CWE-267",
      "CWE-284",
      "CWE-497",
      "CWE-212"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}