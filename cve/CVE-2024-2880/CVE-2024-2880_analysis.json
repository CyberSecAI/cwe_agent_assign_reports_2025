{
  "cve_id": "CVE-2024-2880",
  "description": "An issue was discovered in GitLab CE/EE affecting all versions starting from 16.5 prior to 16.11.6, starting from 17.0 prior to 17.0.4, and starting from 17.1 prior to 17.1.2 in which a user with `admin_group_member` custom role permission could ban group members.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "",
    "impact": "ban group members",
    "vector": "",
    "attacker": "user with admin_group_member custom role",
    "product": "GitLab CE/EE",
    "version": "16.5 to 16.11.6, 17.0 to 17.0.4, 17.1 to 17.1.2",
    "component": ""
  },
  "reference_content": "Based on the provided content, here's a breakdown of the vulnerability:\n\n* **Root Cause:** The vulnerability stems from a missing permission check on the backend request that handles user banning in GitLab groups. While the UI correctly restricts the ability to ban users to group owners, a `Guest` user with a custom role having the \"Admin group member\" permission can bypass this restriction by directly sending a crafted backend request.\n\n* **Weaknesses/Vulnerabilities Present:**\n    *   **Inadequate Authorization:** The primary weakness is the lack of proper authorization checks on the backend when handling ban user requests. The system fails to verify that the user initiating the ban action has the necessary owner-level privileges.\n    *   **Role Permission Bypass**: Although the UI prevents the user from performing the action, the API does not check for the required owner permissions, thus enabling a role permission bypass.\n    *   **Inconsistent permission enforcement:** The UI enforces the correct permission while the backend does not.\n\n* **Impact of Exploitation:** A `Guest` user with the \"Admin group member\" custom role can ban any user within the group, including users with higher permissions (such as Maintainer), causing disruption and potentially hindering group operations.\n\n* **Attack Vectors:**\n    *   The attack vector involves crafting a direct HTTP POST request to the `/groups/<group_path>/-/group_members/<user_id>/ban` endpoint.\n    *   The attacker needs to obtain a valid `Cookie` and `authenticity_token` or `X-Csrf-Token` to authenticate the request and bypass CSRF protection.\n    *   The attacker must know the target user's ID, which can be obtained from the HTML source of the group members page.\n\n* **Required Attacker Capabilities/Position:**\n    *   The attacker needs to be a `Guest` user with a custom role that has the `Admin group member` permission within the target group.\n    *   The attacker needs access to a web browser or tool that can send HTTP requests, and to view the page source to extract user ids and tokens.\n    *   The attacker does not need any special network access beyond what is required to access the GitLab instance.\n\nThis report provides more detail than a typical CVE description, including a full reproduction method and details on how to obtain necessary parameters for the exploit.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-863 | Incorrect Authorization | 0.9 | Class | Primary | Allowed-with-Review |\n| CWE-639 | Authorization Bypass Through User-Controlled Key | 0.7 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship that influenced the decision was the hierarchical relationship between CWE-285 (Improper Authorization) and CWE-863 (Incorrect Authorization), where CWE-863 is a child of CWE-285. The vulnerability description aligns more closely with the specifics of CWE-863, indicating an **incorrect** authorization check rather than a complete absence of one (CWE-285). CWE-639 is another potential match which focuses on bypassing authorization through user controlled keys which is also applicable here. Abstraction levels influenced selection by guiding the selection of the most specific CWE available.\n\n```mermaid\ngraph TD\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe285[\"CWE-285: Improper Authorization\"]\n    cwe639[\"CWE-639: Authorization Bypass Through User-Controlled Key\"]\n    \n    cwe863 -->|CHILDOF| cwe285\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe863 primary\n    class cwe285,cwe639 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with an **incorrect authorization** mechanism (CWE-863), leading to a role permission bypass. A user with insufficient privileges can perform actions they should not be able to, culminating in the ability to ban group members, disrupting group operations. The UI enforced correct permissions, but the backend API **failed to properly check** the user's authorization, leading to the bypass.\n  - **Root Cause:** CWE-863: Incorrect Authorization\n  - **Weakness:** Role Permission Bypass\n  - **Impact:** Unauthorized Banning of Group Members\n\n## Summary of Analysis\nThe initial analysis focused on identifying the **root cause** of the vulnerability. The \"CVE Reference Links Content Summary\" clearly states that the vulnerability stems from a **missing permission check** on the backend request. While the UI correctly restricts the ability to ban users to group owners, a `Guest` user with a custom role having the \"Admin group member\" permission can bypass this restriction by directly sending a crafted backend request.\n\nThe choice of CWE-863 is supported by the fact that the authorization check exists but is **incorrectly implemented**. The guidance for privileges vs permissions also highlights CWE-863 when authorization logic is present but flawed.\n\nCWE-639 is considered a secondary weakness because while there is an authorization bypass, it is not necessarily achieved \"through user-controlled key\" in the purest sense. The user is crafting a request, but the core issue is the **incorrect authorization** on the backend.\n\nThe selected CWEs are at the optimal level of specificity because they precisely reflect the **root cause** and contributing factors of the vulnerability, without being overly generic or abstract.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-285: Improper Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 2016.81\n**Source**: sparse\n\n**Description**:\nThe product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-285 is high-level and lower-level CWEs can frequently be used instead. It is a level-1 Class (i.e., a child of a Pillar).\n\n## Complete CWE Specifications\n\nCWE-863: Incorrect Authorization\nThe product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.\n\nCWE-639: Authorization Bypass Through User-Controlled Key\nThe system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-863 | Incorrect Authorization | 0.9 | Class | Primary | Allowed-with-Review |\n| CWE-639 | Authorization Bypass Through User-Controlled Key | 0.7 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship that influenced the decision was the hierarchical relationship between CWE-285 (Improper Authorization) and CWE-863 (Incorrect Authorization), where CWE-863 is a child of CWE-285. The vulnerability description aligns more closely with the specifics of CWE-863, indicating an **incorrect** authorization check rather than a complete absence of one (CWE-285). CWE-639 is another potential match which focuses on bypassing authorization through user controlled keys which is also applicable here. Abstraction levels influenced selection by guiding the selection of the most specific CWE available.\n\n```mermaid\ngraph TD\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe285[\"CWE-285: Improper Authorization\"]\n    cwe639[\"CWE-639: Authorization Bypass Through User-Controlled Key\"]\n    \n    cwe863 -->|CHILDOF| cwe285\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe863 primary\n    class cwe285,cwe639 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with an **incorrect authorization** mechanism (CWE-863), leading to a role permission bypass. A user with insufficient privileges can perform actions they should not be able to, culminating in the ability to ban group members, disrupting group operations. The UI enforced correct permissions, but the backend API **failed to properly check** the user's authorization, leading to the bypass.\n  - **Root Cause:** CWE-863: Incorrect Authorization\n  - **Weakness:** Role Permission Bypass\n  - **Impact:** Unauthorized Banning of Group Members\n\n## Summary of Analysis\nThe initial analysis focused on identifying the **root cause** of the vulnerability. The \"CVE Reference Links Content Summary\" clearly states that the vulnerability stems from a **missing permission check** on the backend request. While the UI correctly restricts the ability to ban users to group owners, a `Guest` user with a custom role having the \"Admin group member\" permission can bypass this restriction by directly sending a crafted backend request.\n\nThe choice of CWE-863 is supported by the fact that the authorization check exists but is **incorrectly implemented**. The guidance for privileges vs permissions also highlights CWE-863 when authorization logic is present but flawed.\n\nCWE-639 is considered a secondary weakness because while there is an authorization bypass, it is not necessarily achieved \"through user-controlled key\" in the purest sense. The user is crafting a request, but the core issue is the **incorrect authorization** on the backend.\n\nThe selected CWEs are at the optimal level of specificity because they precisely reflect the **root cause** and contributing factors of the vulnerability, without being overly generic or abstract.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-285: Improper Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 2016.81\n**Source**: sparse\n\n**Description**:\nThe product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-285 is high-level and lower-level CWEs can frequently be used instead. It is a level-1 Class (i.e., a child of a Pillar).\n\n## Complete CWE Specifications\n\nCWE-863: Incorrect Authorization\nThe product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.\n\nCWE-639: Authorization Bypass Through User-Controlled Key\nThe system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-285:**\n- 285 (Improper Authorization) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 115.94361302683414
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 114.04962133374892
    },
    {
      "metadata": {
        "doc_id": "400",
        "name": "Uncontrolled Resource Consumption",
        "source": "sparse"
      },
      "similarity": 111.68471828204699
    },
    {
      "metadata": {
        "doc_id": "696",
        "name": "Incorrect Behavior Order",
        "source": "sparse"
      },
      "similarity": 109.32405798194087
    },
    {
      "metadata": {
        "doc_id": "267",
        "name": "Privilege Defined With Unsafe Actions",
        "source": "sparse"
      },
      "similarity": 105.98142362759943
    },
    {
      "metadata": {
        "doc_id": "1286",
        "name": "Improper Validation of Syntactic Correctness of Input",
        "source": "sparse"
      },
      "similarity": 102.69898902301065
    },
    {
      "metadata": {
        "doc_id": "1333",
        "name": "Inefficient Regular Expression Complexity",
        "source": "sparse"
      },
      "similarity": 99.43707772778161
    },
    {
      "metadata": {
        "doc_id": "639",
        "name": "Authorization Bypass Through User-Controlled Key",
        "source": "sparse"
      },
      "similarity": 97.79985111592813
    },
    {
      "metadata": {
        "doc_id": "842",
        "name": "Placement of User into Incorrect Group",
        "type": "Base",
        "original_content": "The product or the administrator places a user into an incorrect group.",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5409951809939653,
            "graph": 1.734822398823523
          }
        }
      },
      "similarity": 0.5409951809939653
    },
    {
      "doc_id": "410",
      "text": "CWE-410: Insufficient Resource Pool",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "410",
        "name": "Insufficient Resource Pool",
        "type": "base",
        "original_content": "CWE-410: Insufficient Resource Pool",
        "relationships": [
          {
            "source_id": "410",
            "target_id": "400",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "410",
            "target_id": "664",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "664",
            "target_id": "410",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "412",
            "target_id": "410",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "400",
            "target_id": "410",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "400",
                  "410",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "400"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "400",
                  "410",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "400"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "410",
                  "400",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "400"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-285",
      "CWE-639"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}