{
  "query": "In the Linux kernel, the following vulnerability has been resolved usb cdc-acm Check control transfer buffer size before access If the first fragment is shorter than struct usb_cdc_notification, we cant calculate an expected_size. Log an error and discard the notification instead of reading lengths from memory outside the received data, which can lead to memory corruption when the expected_size decreases between fragments, causing `expected_size - acm->nb_index` to wrap. This issue has been present since the beginning of git history however, it only leads to memory corruption since commit ea2583529cd1 (cdc-acm reassemble fragmented notifications). A mitigating factor is that acm_ctrl_irq() can only execute after userspace has opened /dev/ttyACM* but if ModemManager is running, ModemManager will do that automatically depending on the USB devices vendor/product IDs and its other interfaces.",
  "count": 20,
  "results": [
    {
      "cwe_id": "805",
      "name": "Buffer Access with Incorrect Length Value",
      "abstraction": "Base",
      "score": 0.5311223277815004,
      "original_score": 0.5311223277815004,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "abstraction": "Variant",
      "score": 0.5261976715248172,
      "original_score": 0.5261976715248172,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "126",
      "name": "Buffer Over-read",
      "abstraction": "Variant",
      "score": 0.5156711147484124,
      "original_score": 0.5156711147484124,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "abstraction": "Base",
      "score": 0.5120059896784551,
      "original_score": 0.5120059896784551,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "130",
      "name": "Improper Handling of Length Parameter Inconsistency",
      "abstraction": "Base",
      "score": 0.5076494021973446,
      "original_score": 0.5076494021973446,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "abstraction": "Base",
      "score": 0.5070551821997804,
      "original_score": 0.5070551821997804,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "131",
      "name": "Incorrect Calculation of Buffer Size",
      "abstraction": "Base",
      "score": 0.5058336878380235,
      "original_score": 0.5058336878380235,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "abstraction": "Variant",
      "score": 0.5029647224799746,
      "original_score": 0.5029647224799746,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "abstraction": "Base",
      "score": 0.49851974528096005,
      "original_score": 0.49851974528096005,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "119",
      "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
      "abstraction": "Class",
      "score": 0.49717026325979946,
      "original_score": 0.49717026325979946,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "806",
      "name": "Buffer Access Using Size of Source Buffer",
      "abstraction": "Variant",
      "score": 0.4799599336388799,
      "original_score": 0.4799599336388799,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "121",
      "name": "Stack-based Buffer Overflow",
      "abstraction": "Variant",
      "score": 0.47296540085913097,
      "original_score": 0.47296540085913097,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "122",
      "name": "Heap-based Buffer Overflow",
      "abstraction": "Variant",
      "score": 0.47141929021618456,
      "original_score": 0.47141929021618456,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "134",
      "name": "Use of Externally-Controlled Format String",
      "abstraction": "Base",
      "score": 0.46932785463235627,
      "original_score": 0.46932785463235627,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "abstraction": "Variant",
      "score": 0.4677067006090282,
      "original_score": 0.4677067006090282,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 0.46573152824279246,
      "original_score": 0.46573152824279246,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "354",
      "name": "Improper Validation of Integrity Check Value",
      "abstraction": "Base",
      "score": 0.46528382040959704,
      "original_score": 0.46528382040959704,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "787",
      "name": "Out-of-bounds Write",
      "abstraction": "Base",
      "score": 0.4645935573301719,
      "original_score": 0.4645935573301719,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "abstraction": "Class",
      "score": 0.4632574118901539,
      "original_score": 0.4632574118901539,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "abstraction": "Base",
      "score": 0.4609255880403445,
      "original_score": 0.4609255880403445,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 0.4609255880403445,
    "max": 0.5311223277815004,
    "mean": 0.48926805964288544,
    "median": 0.4885650984493397,
    "count": 20
  }
}