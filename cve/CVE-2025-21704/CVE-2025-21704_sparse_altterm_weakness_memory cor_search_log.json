{
  "method": "sparse_altterm_weakness_memory cor",
  "query": "In the Linux kernel, the following vulnerability has been resolved usb cdc-acm Check control transfer buffer size before access If the first fragment is shorter than struct usb_cdc_notification, we cant calculate an expected_size. Log an error and discard the notification instead of reading lengths from memory outside the received data, which can lead to memory corruption when the expected_size decreases between fragments, causing `expected_size - acm->nb_index` to wrap. This issue has been present since the beginning of git history however, it only leads to memory corruption since commit ea2583529cd1 (cdc-acm reassemble fragmented notifications). A mitigating factor is that acm_ctrl_irq() can only execute after userspace has opened /dev/ttyACM* but if ModemManager is running, ModemManager will do that automatically depending on the USB devices vendor/product IDs and its other interfaces.",
  "keyphrases": {
    "weakness": "memory corruption"
  },
  "timestamp": "2025-07-14T09:44:50.401616",
  "results_count": 1,
  "results_summary": [
    {
      "doc_id": "787",
      "name": "Out-of-bounds Write",
      "score": 1000.0
    }
  ]
}