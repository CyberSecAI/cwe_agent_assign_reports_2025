{
  "cve_id": "CVE-2025-31672",
  "description": "Improper **Input Validation vulnerability** in Apache POI. The issue affects the parsing of OOXML format files like xlsx, docx and pptx. These file formats are basically zip files and it is possible for malicious users to add zip entries with duplicate names (including the path) in the zip. In this case, products reading the affected file could read different data because 1 of the zip entries with the duplicate name is selected over another but different products may choose a different zip entry. This issue affects Apache POI poi-ooxml before 5.4.0. poi-ooxml 5.4.0 has a check that throws an exception if zip entries with duplicate file names are found in the input file. Users are recommended to upgrade to version poi-ooxml 5.4.0, which fixes the issue. Please read https//poi.apache.org/security.html for recommendations about how to use the POI libraries securely.",
  "key_phrases": {
    "rootcause": [
      "Input Validation vulnerability",
      "improper input validation"
    ],
    "weakness": "",
    "impact": [
      "read different zip entry",
      "read different data"
    ],
    "vector": "zip entries with duplicate names",
    "attacker": "malicious users",
    "product": "Apache POI poi-ooxml",
    "version": "before 5.4.0",
    "component": ""
  },
  "reference_content": "## CVE-2025-31672: Apache POI - Improper Input Validation\n\n**Based on the provided content, this CVE is relevant.**\n\n**Root cause of vulnerability:**\n\nThe vulnerability stems from the possibility of adding zip entries with duplicate names within OOXML-based files (xlsx, docx, pptx). These file formats are essentially zip files.\n\n**Weaknesses/vulnerabilities present:**\n\n*   Improper input validation when parsing OOXML files.\n*   The ability to include duplicate zip entry names within the zip archive structure of OOXML files.\n\n**Impact of exploitation:**\n\nProducts reading the affected file could read unexpected or incorrect data because the selection of which zip entry with the duplicate name to use can vary between products.\n\n**Attack vectors:**\n\n*   A malicious user can craft a specially designed OOXML file with duplicate zip entry names.\n*   The crafted file is then opened by a vulnerable application using Apache POI.\n\n**Required attacker capabilities/position:**\n\n*   The attacker needs to be able to create and deliver a malicious OOXML file to a user who is using a vulnerable application.\n\n**Mitigation or fix:**\n\n*   Upgrade to Apache POI version 5.4.0 or later. This version includes a check that throws an exception if duplicate zip entry names are found, preventing the issue.\n*   Follow the security guidelines provided at [https://poi.apache.org/security.html](https://poi.apache.org/security.html) for secure usage of the POI libraries.\n\n**Additional Details (more detail than official CVE description):**\n\n*   The vulnerability affects the `poi-ooxml` component of Apache POI.\n*   The issue is tracked as bug-69620 in the Apache Bugzilla system ([https://bz.apache.org/bugzilla/show_bug.cgi?id=69620](https://bz.apache.org/bugzilla/show_bug.cgi?id=69620)).\n*   The CVE identifier is CVE-2025-31672 ([https://www.cve.org/CVERecord?id=CVE-2025-31672](https://www.cve.org/CVERecord?id=CVE-2025-31672)).\n*   The issue was announced on the oss-security mailing list.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-20 | Improper Input Validation | 0.9 | Class | Primary | Allowed-with-Review |\n| CWE-409 | Improper Handling of Highly Compressed Data (Data Amplification) | 0.7 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary relationship that influenced the decision was the parent-child relationship between CWE-20 and more specific input validation CWEs. However, none of the child CWEs perfectly matched the vulnerability description, making CWE-20 the most appropriate choice despite its higher abstraction level. Additionally, CWE-409 was considered due to the vulnerability's relation to handling compressed data, and it was determined to be a secondary contributing factor.\n\n```mermaid\ngraph TD\n    cwe20[\"CWE-20: Improper Input Validation\"]\n    cwe409[\"CWE-409: Improper Handling of Highly Compressed Data (Data Amplification)\"]\n    cwe400[\"CWE-400: Uncontrolled Resource Consumption\"]\n    \n    cwe409 -->|CHILDOF| cwe400\n    cwe409 -->|CANPRECEDE| cwe20\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe20 primary\n    class cwe409 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **improper input validation** (CWE-20), leading to the possibility of reading different data (impact) due to duplicate zip entries. The improper handling of compressed data (CWE-409) contributes to the vulnerability, since the file format is basically a zip file.\n  - Root Cause: **Improper Input Validation** (CWE-20)\n  - Contributing Factor: **Improper Handling of Highly Compressed Data (Data Amplification)** (CWE-409)\n  - Impact: Read different data\n\n## Summary of Analysis\nThe initial analysis identified several potential CWEs, but after carefully considering the vulnerability description and the relationships between CWEs, CWE-20 was selected as the primary CWE due to the **improper input validation**. The description explicitly mentions this **vulnerability**. \"Improper **Input Validation vulnerability** in Apache POI.\"\n\nCWE-409 was chosen as a secondary CWE. \"These file formats are basically zip files and it is possible for malicious users to add zip entries with duplicate names (including the path) in the zip.\"\n\nThe selection of CWE-20 is at a higher level (Class) due to the lack of a more specific matching CWE variant. The selection of CWE-409 is at the base level. Both are supported by the vulnerability description.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-41: Improper Resolution of Path Equivalence\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product is vulnerable to file system contents disclosure through path equivalence. Path equivalence involves the use of special characters in file and directory names. The associated manipulations are intended to generate multiple names for the same object.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-23: Relative Path Traversal\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as \"..\" that can resolve to a location that is outside of that directory.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-59: Improper Link Resolution Before File Access ('Link Following')\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-668: Exposure of Resource to Wrong Sphere\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-668 is high-level and is often misused as a catch-all when lower-level CWE IDs might be applicable. It is sometimes used for low-information vulnerability reports [REF-1287]. It is a level-1 Class (i.e., a child of a Pillar). It is not useful for trend analysis.\n\n\n\n## CWE-129: Improper Validation of Array Index\n**Abstraction Level**: Variant\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product uses untrusted input when calculating or using an array index, but the product does not validate or incorrectly validates the index to ensure the index references a valid position within the array.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-807: Reliance on Untrusted Inputs in a Security Decision\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-407: Inefficient Algorithmic Complexity\n**Abstraction Level**: Class\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nAn algorithm in a product has an inefficient worst-case computational complexity that may be detrimental to system performance and can be triggered by an attacker, typically using crafted manipulations that ensure that the worst case is being reached.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-552: Files or Directories Accessible to External Parties\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product makes files or directories accessible to unauthorized actors, even though they should not be.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction Level**: Class\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\n**Abstraction Level**: Base\n**Similarity Score**: 4501.55\n**Source**: sparse\n\n**Description**:\nThe product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.\n\n**Mapping Guidance**:",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-20 | Improper Input Validation | 0.9 | Class | Primary | Allowed-with-Review |\n| CWE-409 | Improper Handling of Highly Compressed Data (Data Amplification) | 0.7 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary relationship that influenced the decision was the parent-child relationship between CWE-20 and more specific input validation CWEs. However, none of the child CWEs perfectly matched the vulnerability description, making CWE-20 the most appropriate choice despite its higher abstraction level. Additionally, CWE-409 was considered due to the vulnerability's relation to handling compressed data, and it was determined to be a secondary contributing factor.\n\n```mermaid\ngraph TD\n    cwe20[\"CWE-20: Improper Input Validation\"]\n    cwe409[\"CWE-409: Improper Handling of Highly Compressed Data (Data Amplification)\"]\n    cwe400[\"CWE-400: Uncontrolled Resource Consumption\"]\n    \n    cwe409 -->|CHILDOF| cwe400\n    cwe409 -->|CANPRECEDE| cwe20\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe20 primary\n    class cwe409 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **improper input validation** (CWE-20), leading to the possibility of reading different data (impact) due to duplicate zip entries. The improper handling of compressed data (CWE-409) contributes to the vulnerability, since the file format is basically a zip file.\n  - Root Cause: **Improper Input Validation** (CWE-20)\n  - Contributing Factor: **Improper Handling of Highly Compressed Data (Data Amplification)** (CWE-409)\n  - Impact: Read different data\n\n## Summary of Analysis\nThe initial analysis identified several potential CWEs, but after carefully considering the vulnerability description and the relationships between CWEs, CWE-20 was selected as the primary CWE due to the **improper input validation**. The description explicitly mentions this **vulnerability**. \"Improper **Input Validation vulnerability** in Apache POI.\"\n\nCWE-409 was chosen as a secondary CWE. \"These file formats are basically zip files and it is possible for malicious users to add zip entries with duplicate names (including the path) in the zip.\"\n\nThe selection of CWE-20 is at a higher level (Class) due to the lack of a more specific matching CWE variant. The selection of CWE-409 is at the base level. Both are supported by the vulnerability description.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-41: Improper Resolution of Path Equivalence\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product is vulnerable to file system contents disclosure through path equivalence. Path equivalence involves the use of special characters in file and directory names. The associated manipulations are intended to generate multiple names for the same object.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-23: Relative Path Traversal\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as \"..\" that can resolve to a location that is outside of that directory.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-59: Improper Link Resolution Before File Access ('Link Following')\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-668: Exposure of Resource to Wrong Sphere\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-668 is high-level and is often misused as a catch-all when lower-level CWE IDs might be applicable. It is sometimes used for low-information vulnerability reports [REF-1287]. It is a level-1 Class (i.e., a child of a Pillar). It is not useful for trend analysis.\n\n\n\n## CWE-129: Improper Validation of Array Index\n**Abstraction Level**: Variant\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product uses untrusted input when calculating or using an array index, but the product does not validate or incorrectly validates the index to ensure the index references a valid position within the array.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-807: Reliance on Untrusted Inputs in a Security Decision\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-407: Inefficient Algorithmic Complexity\n**Abstraction Level**: Class\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nAn algorithm in a product has an inefficient worst-case computational complexity that may be detrimental to system performance and can be triggered by an attacker, typically using crafted manipulations that ensure that the worst case is being reached.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-552: Files or Directories Accessible to External Parties\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product makes files or directories accessible to unauthorized actors, even though they should not be.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction Level**: Class\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\n**Abstraction Level**: Base\n**Similarity Score**: 4501.55\n**Source**: sparse\n\n**Description**:\nThe product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.\n\n**Mapping Guidance**:\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-400:**\n- 400 (Uncontrolled Resource Consumption) - ROOT\n\n\n**Chain starting from CWE-407:**\n- 407 (Inefficient Algorithmic Complexity) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "sparse",
        "original_content": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
        "keyphrase_sources": [
          {
            "id": "rootcause:Input Validation vulnerability",
            "keyphrase": "Input Validation vulnerability",
            "type": "rootcause"
          },
          {
            "id": "rootcause:improper input validation",
            "keyphrase": "improper input validation",
            "type": "rootcause"
          },
          {
            "id": "impact:read different zip entry",
            "keyphrase": "read different zip entry",
            "type": "impact"
          },
          {
            "id": "impact:read different data",
            "keyphrase": "read different data",
            "type": "impact"
          },
          {
            "id": "vector:zip entries with duplicate names",
            "keyphrase": "zip entries with duplicate names",
            "type": "vector"
          },
          {
            "id": "attacker:malicious users",
            "keyphrase": "malicious users",
            "type": "attacker"
          },
          {
            "id": "product:Apache POI poi-ooxml",
            "keyphrase": "Apache POI poi-ooxml",
            "type": "product"
          },
          {
            "id": "version:before 5.4.0",
            "keyphrase": "before 5.4.0",
            "type": "version"
          }
        ]
      },
      "similarity": 808.1026263255002
    },
    {
      "metadata": {
        "doc_id": "23",
        "name": "Relative Path Traversal",
        "source": "sparse",
        "original_content": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as \"..\" that can resolve to a location that is outside of that directory.",
        "keyphrase_sources": [
          {
            "id": "rootcause:Input Validation vulnerability",
            "keyphrase": "Input Validation vulnerability",
            "type": "rootcause"
          },
          {
            "id": "rootcause:improper input validation",
            "keyphrase": "improper input validation",
            "type": "rootcause"
          },
          {
            "id": "impact:read different zip entry",
            "keyphrase": "read different zip entry",
            "type": "impact"
          },
          {
            "id": "impact:read different data",
            "keyphrase": "read different data",
            "type": "impact"
          },
          {
            "id": "vector:zip entries with duplicate names",
            "keyphrase": "zip entries with duplicate names",
            "type": "vector"
          },
          {
            "id": "attacker:malicious users",
            "keyphrase": "malicious users",
            "type": "attacker"
          },
          {
            "id": "product:Apache POI poi-ooxml",
            "keyphrase": "Apache POI poi-ooxml",
            "type": "product"
          },
          {
            "id": "version:before 5.4.0",
            "keyphrase": "before 5.4.0",
            "type": "version"
          }
        ]
      },
      "similarity": 798.3727275414308
    },
    {
      "metadata": {
        "doc_id": "20",
        "name": "Improper Input Validation",
        "source": "sparse",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "keyphrase_sources": [
          {
            "id": "rootcause:Input Validation vulnerability",
            "keyphrase": "Input Validation vulnerability",
            "type": "rootcause"
          },
          {
            "id": "rootcause:improper input validation",
            "keyphrase": "improper input validation",
            "type": "rootcause"
          },
          {
            "id": "product:Apache POI poi-ooxml",
            "keyphrase": "Apache POI poi-ooxml",
            "type": "product"
          }
        ]
      },
      "similarity": 721.4990128953905
    },
    {
      "metadata": {
        "doc_id": "59",
        "name": "Improper Link Resolution Before File Access ('Link Following')",
        "source": "sparse",
        "original_content": "The product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.",
        "keyphrase_sources": [
          {
            "id": "rootcause:Input Validation vulnerability",
            "keyphrase": "Input Validation vulnerability",
            "type": "rootcause"
          },
          {
            "id": "rootcause:improper input validation",
            "keyphrase": "improper input validation",
            "type": "rootcause"
          },
          {
            "id": "impact:read different zip entry",
            "keyphrase": "read different zip entry",
            "type": "impact"
          },
          {
            "id": "impact:read different data",
            "keyphrase": "read different data",
            "type": "impact"
          },
          {
            "id": "vector:zip entries with duplicate names",
            "keyphrase": "zip entries with duplicate names",
            "type": "vector"
          },
          {
            "id": "attacker:malicious users",
            "keyphrase": "malicious users",
            "type": "attacker"
          },
          {
            "id": "product:Apache POI poi-ooxml",
            "keyphrase": "Apache POI poi-ooxml",
            "type": "product"
          },
          {
            "id": "version:before 5.4.0",
            "keyphrase": "before 5.4.0",
            "type": "version"
          }
        ]
      },
      "similarity": 719.0273063251389
    },
    {
      "metadata": {
        "doc_id": "776",
        "name": "Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion')",
        "source": "sparse",
        "original_content": "The product uses XML documents and allows their structure to be defined with a Document Type Definition (DTD), but it does not properly control the number of recursive definitions of entities.",
        "keyphrase_sources": [
          {
            "id": "rootcause:Input Validation vulnerability",
            "keyphrase": "Input Validation vulnerability",
            "type": "rootcause"
          },
          {
            "id": "rootcause:improper input validation",
            "keyphrase": "improper input validation",
            "type": "rootcause"
          },
          {
            "id": "impact:read different data",
            "keyphrase": "read different data",
            "type": "impact"
          },
          {
            "id": "attacker:malicious users",
            "keyphrase": "malicious users",
            "type": "attacker"
          },
          {
            "id": "product:Apache POI poi-ooxml",
            "keyphrase": "Apache POI poi-ooxml",
            "type": "product"
          },
          {
            "id": "version:before 5.4.0",
            "keyphrase": "before 5.4.0",
            "type": "version"
          }
        ]
      },
      "similarity": 717.9060496418406
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse",
        "original_content": "The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.",
        "keyphrase_sources": [
          {
            "id": "impact:read different zip entry",
            "keyphrase": "read different zip entry",
            "type": "impact"
          },
          {
            "id": "impact:read different data",
            "keyphrase": "read different data",
            "type": "impact"
          },
          {
            "id": "vector:zip entries with duplicate names",
            "keyphrase": "zip entries with duplicate names",
            "type": "vector"
          },
          {
            "id": "attacker:malicious users",
            "keyphrase": "malicious users",
            "type": "attacker"
          },
          {
            "id": "version:before 5.4.0",
            "keyphrase": "before 5.4.0",
            "type": "version"
          }
        ]
      },
      "similarity": 241.82258645722914
    },
    {
      "metadata": {
        "doc_id": "409",
        "name": "Improper Handling of Highly Compressed Data (Data Amplification)",
        "source": "sparse",
        "original_content": "The product does not handle or incorrectly handles a compressed input with a very high compression ratio that produces a large output.",
        "keyphrase_sources": [
          {
            "id": "impact:read different zip entry",
            "keyphrase": "read different zip entry",
            "type": "impact"
          },
          {
            "id": "vector:zip entries with duplicate names",
            "keyphrase": "zip entries with duplicate names",
            "type": "vector"
          }
        ]
      },
      "similarity": 238.24978645315832
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-400",
      "CWE-407",
      "CWE-409",
      "CWE-22",
      "CWE-59",
      "CWE-552",
      "CWE-74",
      "CWE-668",
      "CWE-138",
      "CWE-20",
      "CWE-129",
      "CWE-807",
      "CWE-23",
      "CWE-41"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "22": [
      {
        "id": "rootcause:Input Validation vulnerability",
        "keyphrase": "Input Validation vulnerability",
        "type": "rootcause"
      },
      {
        "id": "rootcause:improper input validation",
        "keyphrase": "improper input validation",
        "type": "rootcause"
      },
      {
        "id": "impact:read different zip entry",
        "keyphrase": "read different zip entry",
        "type": "impact"
      },
      {
        "id": "impact:read different data",
        "keyphrase": "read different data",
        "type": "impact"
      },
      {
        "id": "vector:zip entries with duplicate names",
        "keyphrase": "zip entries with duplicate names",
        "type": "vector"
      },
      {
        "id": "attacker:malicious users",
        "keyphrase": "malicious users",
        "type": "attacker"
      },
      {
        "id": "product:Apache POI poi-ooxml",
        "keyphrase": "Apache POI poi-ooxml",
        "type": "product"
      },
      {
        "id": "version:before 5.4.0",
        "keyphrase": "before 5.4.0",
        "type": "version"
      }
    ],
    "23": [
      {
        "id": "rootcause:Input Validation vulnerability",
        "keyphrase": "Input Validation vulnerability",
        "type": "rootcause"
      },
      {
        "id": "rootcause:improper input validation",
        "keyphrase": "improper input validation",
        "type": "rootcause"
      },
      {
        "id": "impact:read different zip entry",
        "keyphrase": "read different zip entry",
        "type": "impact"
      },
      {
        "id": "impact:read different data",
        "keyphrase": "read different data",
        "type": "impact"
      },
      {
        "id": "vector:zip entries with duplicate names",
        "keyphrase": "zip entries with duplicate names",
        "type": "vector"
      },
      {
        "id": "attacker:malicious users",
        "keyphrase": "malicious users",
        "type": "attacker"
      },
      {
        "id": "product:Apache POI poi-ooxml",
        "keyphrase": "Apache POI poi-ooxml",
        "type": "product"
      },
      {
        "id": "version:before 5.4.0",
        "keyphrase": "before 5.4.0",
        "type": "version"
      }
    ],
    "20": [
      {
        "id": "rootcause:Input Validation vulnerability",
        "keyphrase": "Input Validation vulnerability",
        "type": "rootcause"
      },
      {
        "id": "rootcause:improper input validation",
        "keyphrase": "improper input validation",
        "type": "rootcause"
      },
      {
        "id": "product:Apache POI poi-ooxml",
        "keyphrase": "Apache POI poi-ooxml",
        "type": "product"
      }
    ],
    "59": [
      {
        "id": "rootcause:Input Validation vulnerability",
        "keyphrase": "Input Validation vulnerability",
        "type": "rootcause"
      },
      {
        "id": "rootcause:improper input validation",
        "keyphrase": "improper input validation",
        "type": "rootcause"
      },
      {
        "id": "impact:read different zip entry",
        "keyphrase": "read different zip entry",
        "type": "impact"
      },
      {
        "id": "impact:read different data",
        "keyphrase": "read different data",
        "type": "impact"
      },
      {
        "id": "vector:zip entries with duplicate names",
        "keyphrase": "zip entries with duplicate names",
        "type": "vector"
      },
      {
        "id": "attacker:malicious users",
        "keyphrase": "malicious users",
        "type": "attacker"
      },
      {
        "id": "product:Apache POI poi-ooxml",
        "keyphrase": "Apache POI poi-ooxml",
        "type": "product"
      },
      {
        "id": "version:before 5.4.0",
        "keyphrase": "before 5.4.0",
        "type": "version"
      }
    ],
    "776": [
      {
        "id": "rootcause:Input Validation vulnerability",
        "keyphrase": "Input Validation vulnerability",
        "type": "rootcause"
      },
      {
        "id": "rootcause:improper input validation",
        "keyphrase": "improper input validation",
        "type": "rootcause"
      },
      {
        "id": "impact:read different data",
        "keyphrase": "read different data",
        "type": "impact"
      },
      {
        "id": "attacker:malicious users",
        "keyphrase": "malicious users",
        "type": "attacker"
      },
      {
        "id": "product:Apache POI poi-ooxml",
        "keyphrase": "Apache POI poi-ooxml",
        "type": "product"
      },
      {
        "id": "version:before 5.4.0",
        "keyphrase": "before 5.4.0",
        "type": "version"
      }
    ],
    "306": [
      {
        "id": "impact:read different zip entry",
        "keyphrase": "read different zip entry",
        "type": "impact"
      },
      {
        "id": "impact:read different data",
        "keyphrase": "read different data",
        "type": "impact"
      },
      {
        "id": "vector:zip entries with duplicate names",
        "keyphrase": "zip entries with duplicate names",
        "type": "vector"
      },
      {
        "id": "attacker:malicious users",
        "keyphrase": "malicious users",
        "type": "attacker"
      },
      {
        "id": "version:before 5.4.0",
        "keyphrase": "before 5.4.0",
        "type": "version"
      }
    ],
    "409": [
      {
        "id": "impact:read different zip entry",
        "keyphrase": "read different zip entry",
        "type": "impact"
      },
      {
        "id": "vector:zip entries with duplicate names",
        "keyphrase": "zip entries with duplicate names",
        "type": "vector"
      }
    ]
  }
}