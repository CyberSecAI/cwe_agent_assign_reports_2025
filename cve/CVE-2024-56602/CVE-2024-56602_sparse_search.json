{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved net ieee802154 do not leave a dangling sk pointer in ieee802154_create() sock_init_data() attaches the allocated sk object to the provided sock object. If ieee802154_create() fails later, the allocated sk object is freed, but the dangling pointer remains in the provided sock object, which may allow use-after-free. Clear the sk pointer in the sock object on error.",
  "keyphrases": {
    "weakness": [
      "use-after-free"
    ]
  },
  "timestamp": "2025-07-13 23:51:43",
  "cve_id": "CVE-2024-56602",
  "result_count": 12,
  "results": [
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "score": 1000.0,
      "search_source": "alternate_term_match"
    },
    {
      "cwe_id": "415",
      "name": "Double Free",
      "score": 410.07649811302167,
      "search_source": "weakness:use-after-free"
    },
    {
      "cwe_id": "911",
      "name": "Improper Update of Reference Count",
      "score": 385.6582154197962,
      "search_source": "weakness:use-after-free"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 371.2815944551919,
      "search_source": "weakness:use-after-free"
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "score": 370.12705887173666,
      "search_source": "weakness:use-after-free"
    },
    {
      "cwe_id": "825",
      "name": "Expired Pointer Dereference",
      "score": 342.4468153367571,
      "search_source": "weakness:use-after-free"
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "score": 327.2204070828781,
      "search_source": "weakness:use-after-free"
    },
    {
      "cwe_id": "823",
      "name": "Use of Out-of-range Pointer Offset",
      "score": 325.09832966770017,
      "search_source": "weakness:use-after-free"
    },
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "score": 318.2487547604657,
      "search_source": "weakness:use-after-free"
    },
    {
      "cwe_id": "665",
      "name": "Improper Initialization",
      "score": 317.8814881462213,
      "search_source": "weakness:use-after-free"
    },
    {
      "cwe_id": "121",
      "name": "Stack-based Buffer Overflow",
      "score": 111.66818654861954,
      "search_source": "base_query"
    },
    {
      "cwe_id": "457",
      "name": "Use of Uninitialized Variable",
      "score": 110.85529023499201,
      "search_source": "base_query"
    }
  ]
}