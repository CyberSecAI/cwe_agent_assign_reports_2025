{
  "cve_id": "CVE-2025-26759",
  "description": "**Cross-Site Request Forgery** (CSRF) vulnerability in alexvtn Content Snippet Manager allows **Stored XSS**. This issue affects Content Snippet Manager from n/a through 1.1.5.",
  "key_phrases": {
    "rootcause": "Cross-Site Request Forgery",
    "weakness": "Stored XSS",
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": "alexvtn Content Snippet Manager",
    "version": "n/a through 1.1.5",
    "component": ""
  },
  "reference_content": "## Analysis of CVE-2025-26759 Content\n\nThe provided content **relates** to CVE-2025-26759 as indicated by the CVE ID present in the text. It provides details about a Cross-Site Request Forgery (CSRF) vulnerability in the WordPress Content Snippet Manager Plugin.\n\nHere's an extraction of the relevant information:\n\n**Root cause of vulnerability:**\nThe vulnerability is a Cross-Site Request Forgery (CSRF). The content does not specify the exact root cause within the plugin's code.\n\n**Weaknesses/vulnerabilities present:**\n*   Cross-Site Request Forgery (CSRF)\n\n**Impact of exploitation:**\nA malicious actor could force higher privileged users to execute unwanted actions under their current authentication. The impact varies case by case.\n\n**Attack vectors:**\nThe attack vector is through Cross-Site Request Forgery, meaning an attacker would need to trick a logged-in user into performing an action on the vulnerable site.\n\n**Required attacker capabilities/position:**\n*   Unauthenticated - The attacker does not need to be authenticated.\n*   Requires tricking a logged-in, higher-privileged user.\n\n**Mitigation or fix:**\n*   Update to version 1.1.6 or later.\n*   Patchstack users can enable auto-updates for vulnerable plugins.\n\n**Additional Details (more detail than official CVE description):**\n\n*   **Vulnerable versions:** <= 1.1.5\n*   **Fixed in:** 1.1.6\n*   **CVSS Score:** 7.1 (Low severity)\n*   **OWASP Top 10:** A1: Broken Access Control\n*   **Reported by:** Abdi Pranata\n*   **PSID:** 82d24fd71f99\n*   **Plugin Type:** WordPress Plugin\n*   **Plugin Name:** Content Snippet Manager",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1 | Base | Primary | Allowed |\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 1 | Compound | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is **Cross-Site Scripting (XSS)**, which occurs due to **improper neutralization of input**. Cross-Site Request Forgery (CSRF) can be a prerequisite for triggering the Stored XSS. The relationship is that CSRF could be used to inject malicious scripts that are then executed as XSS. CWE-79 is a base-level CWE, and is more specific than its parent classes.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n\n    cwe352 -->|CANPRECEDE| cwe79\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe79 primary\n    class cwe352 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **Cross-Site Request Forgery (CSRF)**, which allows an attacker to perform actions on behalf of a user without their consent. This can then lead to the injection of malicious scripts, resulting in **Stored XSS**. Therefore, the chain is CSRF -> Stored XSS.\n\n## Summary of Analysis\nThe vulnerability description clearly states a **Cross-Site Request Forgery (CSRF)** vulnerability leading to **Stored XSS**. The **root cause** is the CSRF, which enables injecting the malicious payload, and the **weakness** is the XSS itself due to the improper neutralization of input.\n\nThe evidence from the vulnerability description is: \"Cross-Site Request Forgery (CSRF) vulnerability in alexvtn Content Snippet Manager allows Stored XSS.\"\n\nThe relationship graph shows that CWE-352 can precede CWE-79, which aligns with the vulnerability description.\n\nCWE-79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')) is selected as the primary CWE because the ultimate vulnerability is Stored XSS. The CSRF vulnerability is a means to an end, allowing the injection of malicious code that leads to XSS. CWE-79 is at the optimal level of specificity (Base).\n\nCWE-352 (Cross-Site Request Forgery (CSRF)) is included as a secondary CWE because it is the method used to exploit the system and inject the XSS payload.\n\nCWE-80 (Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)) was considered but not chosen as it is a variant of XSS focused on HTML tags, and the description doesn't restrict it to just HTML tags.\n\nCWE-89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')), CWE-918 (Server-Side Request Forgery (SSRF)), CWE-601 (URL Redirection to Untrusted Site ('Open Redirect')), and CWE-434 (Unrestricted Upload of File with Dangerous Type) were also considered but deemed not relevant as they describe completely different types of vulnerabilities.\n\nRelevant CWE Information:",
  "analysis_with_relationships": "# Summary\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1 | Base | Primary | Allowed |\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 1 | Compound | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is **Cross-Site Scripting (XSS)**, which occurs due to **improper neutralization of input**. Cross-Site Request Forgery (CSRF) can be a prerequisite for triggering the Stored XSS. The relationship is that CSRF could be used to inject malicious scripts that are then executed as XSS. CWE-79 is a base-level CWE, and is more specific than its parent classes.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n\n    cwe352 -->|CANPRECEDE| cwe79\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe79 primary\n    class cwe352 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **Cross-Site Request Forgery (CSRF)**, which allows an attacker to perform actions on behalf of a user without their consent. This can then lead to the injection of malicious scripts, resulting in **Stored XSS**. Therefore, the chain is CSRF -> Stored XSS.\n\n## Summary of Analysis\nThe vulnerability description clearly states a **Cross-Site Request Forgery (CSRF)** vulnerability leading to **Stored XSS**. The **root cause** is the CSRF, which enables injecting the malicious payload, and the **weakness** is the XSS itself due to the improper neutralization of input.\n\nThe evidence from the vulnerability description is: \"Cross-Site Request Forgery (CSRF) vulnerability in alexvtn Content Snippet Manager allows Stored XSS.\"\n\nThe relationship graph shows that CWE-352 can precede CWE-79, which aligns with the vulnerability description.\n\nCWE-79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')) is selected as the primary CWE because the ultimate vulnerability is Stored XSS. The CSRF vulnerability is a means to an end, allowing the injection of malicious code that leads to XSS. CWE-79 is at the optimal level of specificity (Base).\n\nCWE-352 (Cross-Site Request Forgery (CSRF)) is included as a secondary CWE because it is the method used to exploit the system and inject the XSS payload.\n\nCWE-80 (Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)) was considered but not chosen as it is a variant of XSS focused on HTML tags, and the description doesn't restrict it to just HTML tags.\n\nCWE-89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')), CWE-918 (Server-Side Request Forgery (SSRF)), CWE-601 (URL Redirection to Untrusted Site ('Open Redirect')), and CWE-434 (Unrestricted Upload of File with Dangerous Type) were also considered but deemed not relevant as they describe completely different types of vulnerabilities.\n\nRelevant CWE Information:\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n**Chain starting from CWE-80:**\n- 80 (Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: XSS",
        "match_reason": "term_in_phrase_whole_phrase"
      },
      "similarity": 800.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 244.79241042172248
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 206.71185415880095
    },
    {
      "metadata": {
        "doc_id": "918",
        "name": "Server-Side Request Forgery (SSRF)",
        "source": "sparse"
      },
      "similarity": 206.4359983393312
    },
    {
      "metadata": {
        "doc_id": "601",
        "name": "URL Redirection to Untrusted Site ('Open Redirect')",
        "source": "sparse"
      },
      "similarity": 180.19715557397694
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse"
      },
      "similarity": 177.3114639784718
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 168.40516226617794
    },
    {
      "metadata": {
        "doc_id": "1004",
        "name": "Sensitive Cookie Without 'HttpOnly' Flag",
        "source": "sparse"
      },
      "similarity": 166.5339921592631
    },
    {
      "metadata": {
        "doc_id": "80",
        "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
        "type": "Variant",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.",
        "keyphrase_source": "weakness:Stored XSS",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5966733110171295,
            "graph": 1.5457388973213682
          }
        }
      },
      "similarity": 0.5966733110171295
    },
    {
      "doc_id": "184",
      "text": "CWE-184: Incomplete List of Disallowed Inputs",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "184",
        "name": "Incomplete List of Disallowed Inputs",
        "type": "base",
        "original_content": "CWE-184: Incomplete List of Disallowed Inputs",
        "relationships": [
          {
            "source_id": "184",
            "target_id": "692",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "434",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "78",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "79",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "1023",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "693",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "86",
            "target_id": "184",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "78",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "693",
            "target_id": "184",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "692",
            "target_id": "184",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "692",
            "target_id": "184",
            "label": "STARTSWITH",
            "properties": {
              "view_id": "709"
            }
          },
          {
            "source_id": "625",
            "target_id": "184",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "434",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "186",
            "target_id": "184",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1023",
            "target_id": "184",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "79",
                  "184",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "79"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "79",
                  "184",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "79"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "184",
                  "79",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "79"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-80",
      "CWE-601",
      "CWE-79",
      "CWE-352",
      "CWE-918",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}