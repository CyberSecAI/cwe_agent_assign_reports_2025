{
  "cve_id": "CVE-2024-37159",
  "description": "Evmos is the Ethereum Virtual Machine (EVM) Hub on the Cosmos Network. This vulnerability allowed a user to create a validator using vested tokens to deposit the self-bond. This vulnerability is fixed in 18.0.0.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "",
    "impact": "create a validator using vested tokens to deposit the self-bond",
    "vector": "",
    "attacker": "user",
    "product": "Evmos",
    "version": "18.0.0",
    "component": ""
  },
  "reference_content": "```json\n{\n  \"related\": true,\n  \"vulnerabilities\": [\n    {\n      \"root_cause\": \"Incorrect calculation of spendable balance when delegating vested tokens.\",\n      \"weaknesses\": [\n        \"The spendable balance was not correctly updated after delegating vested tokens.\",\n          \"Missing checks in the Ethereum ante handler for clawback vesting accounts, allowing bypass of Cosmos ante handler checks.\",\n           \"Lack of a check to prevent validator creation using vested tokens.\"\n      ],\n      \"impact\": \"Clawback vesting accounts could prematurely access unvested tokens and create validators with unvested tokens.\",\n      \"attack_vectors\": [\n        \"Delegating vested tokens.\",\n        \"Sending an Ethereum transaction targeting a precompile to interact with a Cosmos SDK module.\",\n        \"Creating validator using vested tokens.\"\n      ],\n        \"required_attacker_capabilities\": \"Requires a clawback vesting account. Attacker needs to perform delegation, send an Ethereum transaction to a precompile, or create a validator.\"\n    }\n  ]\n}\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID  | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|-----------------|------------------------------------------------------|----------------|-------------------------|-----------------------------------|------------------------------------|\n| CWE-285 | Improper Authorization | 0.8 | Class | Allowed-with-Review | Primary CWE. Authorization is **missing** to validate that the validator creation is not using vested tokens. |\n| CWE-863 | Incorrect Authorization | 0.6 | Class | Allowed-with-Review | Secondary Candidate. The authorization check could be implemented **incorrectly**. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.7\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary relationship that influenced the decision was the parent-child relationship between CWE-285 (Improper Authorization) and its potential children, as well as the peer relationship with CWE-863 (Incorrect Authorization). While CWE-285 is a high-level class, the evidence suggests a **missing** authorization check, making it the most appropriate starting point. CWE-863 was considered because the authorization check could be implemented **incorrectly**.\n\n```mermaid\ngraph TD\n    cwe285[\"CWE-285: Improper Authorization\"]\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe942[\"CWE-942: Permissive Cross-domain Policy with Untrusted Domains\"]\n    cwe1274[\"CWE-1274: Improper Access Control for Volatile Memory Containing Boot Code\"]\n    \n    cwe942 -->|CHILDOF| cwe863\n    cwe1274 -->|CHILDOF| cwe285\n    cwe863 --o|PEEROF| cwe285\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe285 primary\n    class cwe863 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **missing** or **incorrect** authorization check, leading to the ability to create a validator using vested tokens.\n\n1.  **Root Cause:** CWE-285 **Improper Authorization**: The system **does not perform** an authorization check to prevent the use of vested tokens for validator creation. Or CWE-863 **Incorrect Authorization** in which the check is implemented **incorrectly**.\n2.  **Impact:** A user can create a validator using vested tokens to deposit the self-bond, potentially gaining unauthorized control or benefits within the Evmos network.\n\n## Summary of Analysis\nThe initial analysis focused on identifying the root cause of the vulnerability, which is the ability to create a validator using vested tokens. The **Vulnerability Description Key Phrases** highlighted the **impact** (create a validator using vested tokens). The **CVE Reference Links Content Summary** indicated a \"Lack of a check to prevent validator creation using vested tokens.\"\n\nCWE-285, **Improper Authorization**, was selected as the primary CWE because the evidence suggests that an authorization check is **missing**. The system **does not** properly verify that the tokens used for validator creation are not vested. This aligns with the definition of CWE-285: \"The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.\"\n\nCWE-863, **Incorrect Authorization**, was considered as a secondary candidate because it's possible that an authorization check was implemented, but was done **incorrectly**.\n\nThe retriever results also listed **Improper Authorization** CWE-285 and **Incorrect Authorization** CWE-863.\n\nThe final decision favored CWE-285 as the primary CWE due to the clear indication of a **missing** authorization check. The abstraction level of Class was chosen because there wasn't enough information to pinpoint a more specific Base-level CWE.\n\nRelevant CWE Information:\n- CWE-285: Improper Authorization: \"The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.\"\n- CWE-863: Incorrect Authorization: \"The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.\"",
  "analysis_with_relationships": "# Summary\n| CWE ID  | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|-----------------|------------------------------------------------------|----------------|-------------------------|-----------------------------------|------------------------------------|\n| CWE-285 | Improper Authorization | 0.8 | Class | Allowed-with-Review | Primary CWE. Authorization is **missing** to validate that the validator creation is not using vested tokens. |\n| CWE-863 | Incorrect Authorization | 0.6 | Class | Allowed-with-Review | Secondary Candidate. The authorization check could be implemented **incorrectly**. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.7\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary relationship that influenced the decision was the parent-child relationship between CWE-285 (Improper Authorization) and its potential children, as well as the peer relationship with CWE-863 (Incorrect Authorization). While CWE-285 is a high-level class, the evidence suggests a **missing** authorization check, making it the most appropriate starting point. CWE-863 was considered because the authorization check could be implemented **incorrectly**.\n\n```mermaid\ngraph TD\n    cwe285[\"CWE-285: Improper Authorization\"]\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe942[\"CWE-942: Permissive Cross-domain Policy with Untrusted Domains\"]\n    cwe1274[\"CWE-1274: Improper Access Control for Volatile Memory Containing Boot Code\"]\n    \n    cwe942 -->|CHILDOF| cwe863\n    cwe1274 -->|CHILDOF| cwe285\n    cwe863 --o|PEEROF| cwe285\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe285 primary\n    class cwe863 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **missing** or **incorrect** authorization check, leading to the ability to create a validator using vested tokens.\n\n1.  **Root Cause:** CWE-285 **Improper Authorization**: The system **does not perform** an authorization check to prevent the use of vested tokens for validator creation. Or CWE-863 **Incorrect Authorization** in which the check is implemented **incorrectly**.\n2.  **Impact:** A user can create a validator using vested tokens to deposit the self-bond, potentially gaining unauthorized control or benefits within the Evmos network.\n\n## Summary of Analysis\nThe initial analysis focused on identifying the root cause of the vulnerability, which is the ability to create a validator using vested tokens. The **Vulnerability Description Key Phrases** highlighted the **impact** (create a validator using vested tokens). The **CVE Reference Links Content Summary** indicated a \"Lack of a check to prevent validator creation using vested tokens.\"\n\nCWE-285, **Improper Authorization**, was selected as the primary CWE because the evidence suggests that an authorization check is **missing**. The system **does not** properly verify that the tokens used for validator creation are not vested. This aligns with the definition of CWE-285: \"The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.\"\n\nCWE-863, **Incorrect Authorization**, was considered as a secondary candidate because it's possible that an authorization check was implemented, but was done **incorrectly**.\n\nThe retriever results also listed **Improper Authorization** CWE-285 and **Incorrect Authorization** CWE-863.\n\nThe final decision favored CWE-285 as the primary CWE due to the clear indication of a **missing** authorization check. The abstraction level of Class was chosen because there wasn't enough information to pinpoint a more specific Base-level CWE.\n\nRelevant CWE Information:\n- CWE-285: Improper Authorization: \"The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.\"\n- CWE-863: Incorrect Authorization: \"The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.\"\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-942:**\n- 942 (Permissive Cross-domain Policy with Untrusted Domains) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "400",
        "name": "Uncontrolled Resource Consumption",
        "source": "sparse"
      },
      "similarity": 64.40371006700163
    },
    {
      "metadata": {
        "doc_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "source": "sparse"
      },
      "similarity": 62.922434496470125
    },
    {
      "metadata": {
        "doc_id": "269",
        "name": "Improper Privilege Management",
        "source": "sparse"
      },
      "similarity": 62.120247695559556
    },
    {
      "metadata": {
        "doc_id": "532",
        "name": "Insertion of Sensitive Information into Log File",
        "source": "sparse"
      },
      "similarity": 61.69689733690267
    },
    {
      "metadata": {
        "doc_id": "347",
        "name": "Improper Verification of Cryptographic Signature",
        "source": "sparse"
      },
      "similarity": 61.42615972495331
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 61.18291480362123
    },
    {
      "metadata": {
        "doc_id": "696",
        "name": "Incorrect Behavior Order",
        "source": "sparse"
      },
      "similarity": 60.465283931295794
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 60.45262542919008
    },
    {
      "metadata": {
        "doc_id": "1274",
        "name": "Improper Access Control for Volatile Memory Containing Boot Code",
        "type": "Base",
        "original_content": "The product conducts a secure-boot process that transfers bootloader code from Non-Volatile Memory (NVM) into Volatile Memory (VM), but it does not have sufficient access control or other protections for the Volatile Memory.",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.3813653946306803,
            "graph": 1.6280761453455652
          }
        }
      },
      "similarity": 0.3813653946306803
    },
    {
      "doc_id": "789",
      "text": "CWE-789: Memory Allocation with Excessive Size Value",
      "score": 2.5507200000000005,
      "metadata": {
        "doc_id": "789",
        "name": "Memory Allocation with Excessive Size Value",
        "type": "variant",
        "original_content": "CWE-789: Memory Allocation with Excessive Size Value",
        "relationships": [
          {
            "source_id": "789",
            "target_id": "129",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "789",
            "target_id": "1284",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "789",
            "target_id": "476",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "789",
            "target_id": "770",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "770",
            "target_id": "789",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "476",
            "target_id": "789",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1325",
            "target_id": "789",
            "label": "PEEROF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "129",
            "target_id": "789",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1284",
            "target_id": "789",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.6080000000000001,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.2,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "1284",
                  "789",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "1284"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "400",
                  "770",
                  "PARENTOF"
                ],
                [
                  "770",
                  "789",
                  "PARENTOF"
                ]
              ],
              "score": 0.6080000000000001,
              "type": "abstraction_path_down",
              "source": "400"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "1284",
                  "789",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "1284"
            }
          }
        },
        "abstraction_level": "variant",
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.5507200000000005
          }
        }
      },
      "similarity": 2.5507200000000005
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-942",
      "CWE-285",
      "CWE-1274"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}