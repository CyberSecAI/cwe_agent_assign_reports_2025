{
  "cve_id": "CVE-2025-0333",
  "description": "A vulnerability, which was classified as critical, was found in leiyuxi cy-fast 1.0. Affected is the function listData of the file /sys/role/listData. The manipulation of the argument order leads to **sql injection**. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "sql injection",
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": "leiyuxi cy-fast",
    "version": "1.0",
    "component": "/sys/role/listData"
  },
  "reference_content": "UNRELATED",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-89 | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 1.0 | Base | Allowed | Primary CWE |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship that influenced the decision was the direct match of the vulnerability description to the CWE-89 description. While other CWEs such as CWE-79 (Cross-site Scripting) and CWE-78 (OS Command Injection) were considered, they were deemed less relevant due to the specific mention of \"**sql injection**\" in the vulnerability description. CWE-89 is a Base level CWE which is the preferred level of abstraction.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    \n    class cwe89 primary\n```\n\n## Vulnerability Chain\nThe vulnerability chain consists of a single step: the **improper neutralization** of special elements used in an SQL command, leading directly to **SQL injection**. There are no preceding or following steps identified in the provided information. The chain is simple and direct:\n\n1.  **Root Cause:** **Improper neutralization** of special elements in SQL commands (CWE-89)\n2.  **Impact:** **SQL Injection** vulnerability\n\n## Summary of Analysis\nThe primary driver for selecting CWE-89 was the explicit mention of \"**sql injection**\" in the vulnerability description. The description states, \"The manipulation of the argument order leads to **sql injection**.\" This aligns perfectly with the definition of CWE-89, which addresses scenarios where a product constructs an SQL command using externally-influenced input without properly neutralizing special elements.\n\nThe retriever results also strongly support this choice, with CWE-89 having a score of 1.0 due to the alternate terms matching the weakness. The CWE is at the Base level of abstraction which is the preferred level.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\n**Abstraction Level**: Variant\n**Similarity Score**: 0.74\n\n## CWE-790: Improper Filtering of Special Elements\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n\n## CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n\n## CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n\n## CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')\n**Abstraction Level**: Variant\n**Similarity Score**: 0.72\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n\n## CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n\n## CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 618.55\n\n## CWE-1336: Improper Neutralization of Special Elements Used in a Template Engine\n**Abstraction Level**: Base\n**Similarity Score**: 551.63\n\n## CWE-117: Improper Output Neutralization for Logs\n**Abstraction Level**: Base\n**Similarity Score**: 540.63\n\n## CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n**Abstraction Level**: Base\n**Similarity Score**: 535.04\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 533.95\n\n## CWE-117: Improper Output Neutralization for Logs\n**Abstraction Level**: base\n**Similarity Score**: 4.33\n\n## CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')\n**Abstraction Level**: base\n**Similarity Score**: 3.89\n\n## CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n**Abstraction Level**: base\n**Similarity Score**: 3.30\n\n## CWE-73: External Control of File Name or Path\n**Abstraction Level**: base\n**Similarity Score**: 2.91\n\n## CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 2.89\n\n## CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')\n**Abstraction Level**: variant\n**Similarity Score**: 2.68\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 2.62\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 2.35\n\n## CWE-1336: Improper Neutralization of Special Elements Used in a Template Engine\n**Abstraction Level**: base\n**Similarity Score**: 2.33\n\n## CWE-94: Improper Control of Generation of Code ('Code Injection')\n**Abstraction Level**: base\n**Similarity Score**: 2.28\n\nCWEs Considered but Not Used:\n\n*   CWE-79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')): While potentially relevant due to the web-based nature of the application, it does not directly address the **SQL injection** aspect.\n*   CWE-78 (Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')): Not applicable, as the vulnerability is specifically related to SQL commands, not OS commands.\n*   CWE-1336 (Improper Neutralization of Special Elements Used in a Template Engine): Not applicable because the weakness is in SQL commands, not a template engine.\n*   CWE-117 (Improper Output Neutralization for Logs): Not applicable because the weakness is in SQL commands, not in logging.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-89 | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 1.0 | Base | Allowed | Primary CWE |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship that influenced the decision was the direct match of the vulnerability description to the CWE-89 description. While other CWEs such as CWE-79 (Cross-site Scripting) and CWE-78 (OS Command Injection) were considered, they were deemed less relevant due to the specific mention of \"**sql injection**\" in the vulnerability description. CWE-89 is a Base level CWE which is the preferred level of abstraction.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    \n    class cwe89 primary\n```\n\n## Vulnerability Chain\nThe vulnerability chain consists of a single step: the **improper neutralization** of special elements used in an SQL command, leading directly to **SQL injection**. There are no preceding or following steps identified in the provided information. The chain is simple and direct:\n\n1.  **Root Cause:** **Improper neutralization** of special elements in SQL commands (CWE-89)\n2.  **Impact:** **SQL Injection** vulnerability\n\n## Summary of Analysis\nThe primary driver for selecting CWE-89 was the explicit mention of \"**sql injection**\" in the vulnerability description. The description states, \"The manipulation of the argument order leads to **sql injection**.\" This aligns perfectly with the definition of CWE-89, which addresses scenarios where a product constructs an SQL command using externally-influenced input without properly neutralizing special elements.\n\nThe retriever results also strongly support this choice, with CWE-89 having a score of 1.0 due to the alternate terms matching the weakness. The CWE is at the Base level of abstraction which is the preferred level.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\n**Abstraction Level**: Variant\n**Similarity Score**: 0.74\n\n## CWE-790: Improper Filtering of Special Elements\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n\n## CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n\n## CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n\n## CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')\n**Abstraction Level**: Variant\n**Similarity Score**: 0.72\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n\n## CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n\n## CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 618.55\n\n## CWE-1336: Improper Neutralization of Special Elements Used in a Template Engine\n**Abstraction Level**: Base\n**Similarity Score**: 551.63\n\n## CWE-117: Improper Output Neutralization for Logs\n**Abstraction Level**: Base\n**Similarity Score**: 540.63\n\n## CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n**Abstraction Level**: Base\n**Similarity Score**: 535.04\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 533.95\n\n## CWE-117: Improper Output Neutralization for Logs\n**Abstraction Level**: base\n**Similarity Score**: 4.33\n\n## CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')\n**Abstraction Level**: base\n**Similarity Score**: 3.89\n\n## CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n**Abstraction Level**: base\n**Similarity Score**: 3.30\n\n## CWE-73: External Control of File Name or Path\n**Abstraction Level**: base\n**Similarity Score**: 2.91\n\n## CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 2.89\n\n## CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')\n**Abstraction Level**: variant\n**Similarity Score**: 2.68\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 2.62\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 2.35\n\n## CWE-1336: Improper Neutralization of Special Elements Used in a Template Engine\n**Abstraction Level**: base\n**Similarity Score**: 2.33\n\n## CWE-94: Improper Control of Generation of Code ('Code Injection')\n**Abstraction Level**: base\n**Similarity Score**: 2.28\n\nCWEs Considered but Not Used:\n\n*   CWE-79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')): While potentially relevant due to the web-based nature of the application, it does not directly address the **SQL injection** aspect.\n*   CWE-78 (Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')): Not applicable, as the vulnerability is specifically related to SQL commands, not OS commands.\n*   CWE-1336 (Improper Neutralization of Special Elements Used in a Template Engine): Not applicable because the weakness is in SQL commands, not a template engine.\n*   CWE-117 (Improper Output Neutralization for Logs): Not applicable because the weakness is in SQL commands, not in logging.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: SQL injection",
        "match_reason": "exact_match_whole_phrase"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 385.06082118117797
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse"
      },
      "similarity": 339.87786899939255
    },
    {
      "metadata": {
        "doc_id": "99",
        "name": "Improper Control of Resource Identifiers ('Resource Injection')",
        "source": "sparse"
      },
      "similarity": 318.6509219129957
    },
    {
      "metadata": {
        "doc_id": "1336",
        "name": "Improper Neutralization of Special Elements Used in a Template Engine",
        "source": "sparse"
      },
      "similarity": 318.4476284861941
    },
    {
      "metadata": {
        "doc_id": "1241",
        "name": "Use of Predictable Algorithm in Random Number Generator",
        "source": "sparse"
      },
      "similarity": 315.1519307598562
    },
    {
      "metadata": {
        "doc_id": "93",
        "name": "Improper Neutralization of CRLF Sequences ('CRLF Injection')",
        "source": "sparse"
      },
      "similarity": 314.2457769215935
    },
    {
      "metadata": {
        "doc_id": "117",
        "name": "Improper Output Neutralization for Logs",
        "source": "sparse"
      },
      "similarity": 312.9362295581045
    },
    {
      "metadata": {
        "doc_id": "790",
        "name": "Improper Filtering of Special Elements",
        "type": "Class",
        "original_content": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
        "keyphrase_source": "weakness:sql injection",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.592702165762893
          }
        }
      },
      "similarity": 0.592702165762893
    },
    {
      "doc_id": "78",
      "text": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
      "score": 0.6164282498503987,
      "metadata": {
        "doc_id": "78",
        "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "type": "Base",
        "extended_description": "\n\nThis weakness can lead to a vulnerability in environments in which the attacker does not have direct access to the operating system, such as in web applications. Alternately, if the weakness occurs in a privileged program, it could allow the attacker to specify commands that normally would not be accessible, or to call alternate commands with privileges that the attacker does not have. The problem is exacerbated if the compromised process does not follow the principle of least privilege, because the attacker-controlled commands may run with special system privileges that increases the amount of damage.\n\n\nThere are at least two subtypes of OS command injection:\n\n\n  - The application intends to execute a single, fixed program that is under its own control. It intends to use externally-supplied inputs as arguments to that program. For example, the program might use system(\"nslookup [HOSTNAME]\") to run nslookup and allow the user to supply a HOSTNAME, which is used as an argument. Attackers cannot prevent nslookup from executing. However, if the program does not remove command separators from the HOSTNAME argument, attackers could place the separators into the arguments, which allows them to execute their own program after nslookup has finished executing.\n\n  - The application accepts an input that it uses to fully select which program to run, as well as which commands to use. The application simply redirects this entire command to the operating system. For example, the program might use \"exec([COMMAND])\" to execute the [COMMAND] that was supplied by the user. If the COMMAND is under attacker control, then the attacker can execute arbitrary commands or programs. If the command is being executed using functions like exec() and CreateProcess(), the attacker might not be able to combine multiple commands together in the same line.\n\nFrom a weakness standpoint, these variants represent distinct programmer errors. In the first variant, the programmer clearly intends that input from untrusted parties will be part of the arguments in the command to be executed. In the second variant, the programmer does not intend for the command to be accessible to any untrusted party, but the programmer probably has not accounted for alternate ways in which malicious attackers can provide input.",
        "alternate_terms": [
          "Shell injection",
          "Shell metacharacters",
          "OS Command Injection"
        ],
        "original_content": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
        "relationships": [
          {
            "source_id": "78",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "78",
            "target_id": "88",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "78",
            "target_id": "77",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1340"
            }
          },
          {
            "source_id": "78",
            "target_id": "77",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1305"
            }
          },
          {
            "source_id": "78",
            "target_id": "74",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "78",
            "target_id": "77",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "77",
            "target_id": "78",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "74",
            "target_id": "78",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "184",
            "target_id": "78",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "source": "graph",
        "sources": [
          "vector",
          "graph"
        ],
        "vector_score": 0.6164282498503987,
        "graph_score": 3.8870000000000005,
        "score_components": {
          "relationship_chain": 0.8,
          "explicit_mention": 1.0,
          "abstraction_path": 0.9,
          "sequence_path": 0.8
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "79",
                  "184",
                  "CANFOLLOW"
                ],
                [
                  "184",
                  "78",
                  "CANPRECEDE"
                ]
              ],
              "score": 0.8,
              "type": "relationship_chain",
              "source": "79"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "79",
                  "184",
                  "CANFOLLOW"
                ],
                [
                  "184",
                  "78",
                  "CANPRECEDE"
                ]
              ],
              "score": 0.8,
              "type": "vulnerability_sequence_forward",
              "source": "79"
            }
          }
        },
        "is_explicit": true,
        "abstraction_level": "base",
        "position": "after",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5861528331126511,
            "graph": 2.5787712999401595
          }
        }
      },
      "similarity": 2.5787712999401595
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-116",
      "CWE-93",
      "CWE-80",
      "CWE-94",
      "CWE-79",
      "CWE-1336",
      "CWE-73",
      "CWE-113",
      "CWE-790",
      "CWE-95",
      "CWE-74",
      "CWE-117",
      "CWE-78",
      "CWE-497",
      "CWE-425",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}