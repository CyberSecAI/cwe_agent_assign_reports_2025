{
  "cve_id": "CVE-2025-4335",
  "description": "The Woocommerce Multiple Addresses plugin for WordPress is vulnerable to Privilege Escalation in all versions up to, and including, 1.0.7.1. This is due to **insufficient restrictions on user meta that can be updated through the save_multiple_shipping_addresses() function**. This makes it possible for authenticated attackers, with Subscriber-level access and above, to elevate their privileges to that of an administrator.",
  "key_phrases": {
    "component": "",
    "rootcause": "insufficient restrictions on user meta that can be updated through the save_multiple_shipping_addresses() function",
    "vector": "",
    "weakness": "",
    "product": "Woocommerce Multiple Addresses plugin for WordPress",
    "impact": "Privilege Escalation",
    "attacker": "authenticated attackers with Subscriber-level access and above",
    "version": "all versions up to and including 1.0.7.1"
  },
  "reference_content": null,
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-266 | Incorrect Privilege Assignment | 0.9 | Base | Allowed | Primary CWE: **Insufficient restrictions on user meta** lead to incorrect privilege assignment, enabling privilege escalation. |\n| CWE-863 | Incorrect Authorization | 0.7 | Class | Allowed-with-Review | Secondary Candidate: Authorization check exists but is flawed, leading to privilege escalation. |\n| CWE-284 | Improper Access Control | 0.6 | Pillar | Discouraged | Secondary Candidate: A broader category that applies if no specific privilege or permission issue can be identified. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship influencing the decision is the hierarchical relationship, specifically choosing a more specific **Base** level CWE over a general **Class** or **Pillar** level CWE when the evidence supports it. CWE-266 is a more precise classification than CWE-863 and CWE-284 because the vulnerability description clearly states that the issue stems from **incorrect privilege assignment** due to **insufficient restrictions on user meta**.\n\n```mermaid\ngraph TD\n    cwe266[\"CWE-266: Incorrect Privilege Assignment\"]\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe284[\"CWE-284: Improper Access Control\"]\n\n    cwe266 -->|CHILDOF| cwe269[\"CWE-269: Improper Privilege Management\"]\n    cwe863 -->|CHILDOF| cwe285[\"CWE-285: Improper Authorization\"]\n    cwe285 -->|CHILDOF| cwe284\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe266 primary\n    class cwe863,cwe284 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **insufficient restrictions on user meta**, leading to **incorrect privilege assignment**, and ultimately resulting in **privilege escalation**.\n\n*   Root Cause: **Insufficient restrictions on user meta**\n*   Weakness: **Incorrect Privilege Assignment (CWE-266)**\n*   Impact: Privilege Escalation\n\n## Summary of Analysis\nThe analysis is strongly based on the evidence provided in the vulnerability description, particularly the key phrase indicating **insufficient restrictions on user meta**. This directly translates to an **incorrect privilege assignment**, making CWE-266 the most appropriate primary classification. The retriever results and CWE specifications support this decision, with CWE-266 being a **Base** level CWE that accurately reflects the root cause. While CWE-863 and CWE-284 were considered, they are less specific and do not fully capture the essence of the vulnerability, which is the **incorrect assignment of privileges** rather than a general authorization or access control failure. The provided guidance on privileges vs. permissions further reinforces this decision, emphasizing the importance of identifying the root cause and choosing the most specific CWE.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-266: Incorrect Privilege Assignment\n**Abstraction Level**: Base\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nA product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-863: Incorrect Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 1405.22\n**Source**: sparse\n\n**Description**:\nThe product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-284: Improper Access Control\n**Abstraction Level**: Pillar\n**Similarity Score**: 1353.92\n**Source**: sparse\n\n**Description**:\nThe product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-285 is high-level and lower-level CWEs can frequently be used instead. It is a level-1 Class (i.e., a child of a Pillar).\n\n## Technical Explanation for Selected CWEs:\n\n### CWE-266: Incorrect Privilege Assignment\n- **How the vulnerability's details match the CWE's characteristics:** The vulnerability description explicitly states that the issue is due to **insufficient restrictions on user meta**, leading to the possibility of authenticated attackers elevating their privileges. This aligns with the CWE-266 description, which focuses on the **incorrect assignment of privileges** to an actor.\n- **The security implications and potential impact:** The security implication is privilege escalation, where an attacker with low-level access can gain administrative control over the WordPress site.\n- **Any parent-child relationships or chain patterns that influenced your mapping:** CWE-266 is a child of CWE-269 (**Improper Privilege Management**), which is a more general category. However, CWE-266 is more specific and accurately reflects the root cause.\n- **Whether the weakness is primary or secondary in the vulnerability:** This is the primary weakness in the vulnerability.\n- **How the official MITRE mapping guidance influenced your decision:** The MITRE mapping guidance explicitly encourages the use of CWE-266 when there is a misconfigured role.\n\n### CWE-863: Incorrect Authorization\n- **How the vulnerability's details match the CWE's characteristics:** An authorization check is present, but is **insufficient**.\n- **The security implications and potential impact:** The security implication is privilege escalation, where an attacker with low-level access can gain administrative control over the WordPress site.\n- **Any parent-child relationships or chain patterns that influenced your mapping:** CWE-863 is a child of CWE-285 (**Improper Authorization**)\n- **Whether the weakness is primary or secondary in the vulnerability:** This is a secondary weakness in the vulnerability.\n- **How the official MITRE mapping guidance influenced your decision:** The MITRE mapping guidance allows usage with review as the CWE entry is a Class and might have Base-level children that would be more appropriate\n\n### CWE-284: Improper Access Control\n- **How the vulnerability's details match the CWE's characteristics:** This CWE serves as a broad categorization when the specific issue cannot be pinpointed to a privilege or permission problem.\n- **The security implications and potential impact:** The security implication is privilege escalation, where an attacker with low-level access can gain administrative control over the WordPress site.\n- **Any parent-child relationships or chain patterns that influenced your mapping:** This is a general category.\n- **Whether the weakness is primary or secondary in the vulnerability:** This is a secondary weakness in the vulnerability.\n- **How the official MITRE mapping guidance influenced your decision:** The MITRE mapping guidance discourages use of this CWE.\n\n## CWEs Considered But Not Used:\n\n- CWE-269 (**Improper Privilege Management**): This CWE is too general and doesn't accurately reflect the specific root cause. The guidance discourages its use and encourages identifying more specific issues.\n- CWE-285 (**Improper Authorization**): While related to authorization, the vulnerability stems from an incorrect assignment of privileges, making CWE-266 a better fit.\n- CWE-862 (**Missing Authorization**): This CWE doesn't apply because the issue isn't a complete lack of authorization, but rather an **incorrect** assignment of privileges.\n- CWE-306 (**Missing Authentication for Critical Function**): The vulnerability is about authorization after authentication has occurred.\n- CWE-472 (**External Control of Assumed-Immutable Web Parameter**): This CWE is related to web parameter manipulation and doesn't directly apply to the **incorrect privilege assignment**.\n- CWE-352 (**Cross-Site Request Forgery (CSRF)**): This vulnerability does not stem from a CSRF attack.",
  "analysis_with_relationships": "# Summary\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-266 | Incorrect Privilege Assignment | 0.9 | Base | Allowed | Primary CWE: **Insufficient restrictions on user meta** lead to incorrect privilege assignment, enabling privilege escalation. |\n| CWE-863 | Incorrect Authorization | 0.7 | Class | Allowed-with-Review | Secondary Candidate: Authorization check exists but is flawed, leading to privilege escalation. |\n| CWE-284 | Improper Access Control | 0.6 | Pillar | Discouraged | Secondary Candidate: A broader category that applies if no specific privilege or permission issue can be identified. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship influencing the decision is the hierarchical relationship, specifically choosing a more specific **Base** level CWE over a general **Class** or **Pillar** level CWE when the evidence supports it. CWE-266 is a more precise classification than CWE-863 and CWE-284 because the vulnerability description clearly states that the issue stems from **incorrect privilege assignment** due to **insufficient restrictions on user meta**.\n\n```mermaid\ngraph TD\n    cwe266[\"CWE-266: Incorrect Privilege Assignment\"]\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe284[\"CWE-284: Improper Access Control\"]\n\n    cwe266 -->|CHILDOF| cwe269[\"CWE-269: Improper Privilege Management\"]\n    cwe863 -->|CHILDOF| cwe285[\"CWE-285: Improper Authorization\"]\n    cwe285 -->|CHILDOF| cwe284\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe266 primary\n    class cwe863,cwe284 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **insufficient restrictions on user meta**, leading to **incorrect privilege assignment**, and ultimately resulting in **privilege escalation**.\n\n*   Root Cause: **Insufficient restrictions on user meta**\n*   Weakness: **Incorrect Privilege Assignment (CWE-266)**\n*   Impact: Privilege Escalation\n\n## Summary of Analysis\nThe analysis is strongly based on the evidence provided in the vulnerability description, particularly the key phrase indicating **insufficient restrictions on user meta**. This directly translates to an **incorrect privilege assignment**, making CWE-266 the most appropriate primary classification. The retriever results and CWE specifications support this decision, with CWE-266 being a **Base** level CWE that accurately reflects the root cause. While CWE-863 and CWE-284 were considered, they are less specific and do not fully capture the essence of the vulnerability, which is the **incorrect assignment of privileges** rather than a general authorization or access control failure. The provided guidance on privileges vs. permissions further reinforces this decision, emphasizing the importance of identifying the root cause and choosing the most specific CWE.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-266: Incorrect Privilege Assignment\n**Abstraction Level**: Base\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nA product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-863: Incorrect Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 1405.22\n**Source**: sparse\n\n**Description**:\nThe product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-284: Improper Access Control\n**Abstraction Level**: Pillar\n**Similarity Score**: 1353.92\n**Source**: sparse\n\n**Description**:\nThe product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-285 is high-level and lower-level CWEs can frequently be used instead. It is a level-1 Class (i.e., a child of a Pillar).\n\n## Technical Explanation for Selected CWEs:\n\n### CWE-266: Incorrect Privilege Assignment\n- **How the vulnerability's details match the CWE's characteristics:** The vulnerability description explicitly states that the issue is due to **insufficient restrictions on user meta**, leading to the possibility of authenticated attackers elevating their privileges. This aligns with the CWE-266 description, which focuses on the **incorrect assignment of privileges** to an actor.\n- **The security implications and potential impact:** The security implication is privilege escalation, where an attacker with low-level access can gain administrative control over the WordPress site.\n- **Any parent-child relationships or chain patterns that influenced your mapping:** CWE-266 is a child of CWE-269 (**Improper Privilege Management**), which is a more general category. However, CWE-266 is more specific and accurately reflects the root cause.\n- **Whether the weakness is primary or secondary in the vulnerability:** This is the primary weakness in the vulnerability.\n- **How the official MITRE mapping guidance influenced your decision:** The MITRE mapping guidance explicitly encourages the use of CWE-266 when there is a misconfigured role.\n\n### CWE-863: Incorrect Authorization\n- **How the vulnerability's details match the CWE's characteristics:** An authorization check is present, but is **insufficient**.\n- **The security implications and potential impact:** The security implication is privilege escalation, where an attacker with low-level access can gain administrative control over the WordPress site.\n- **Any parent-child relationships or chain patterns that influenced your mapping:** CWE-863 is a child of CWE-285 (**Improper Authorization**)\n- **Whether the weakness is primary or secondary in the vulnerability:** This is a secondary weakness in the vulnerability.\n- **How the official MITRE mapping guidance influenced your decision:** The MITRE mapping guidance allows usage with review as the CWE entry is a Class and might have Base-level children that would be more appropriate\n\n### CWE-284: Improper Access Control\n- **How the vulnerability's details match the CWE's characteristics:** This CWE serves as a broad categorization when the specific issue cannot be pinpointed to a privilege or permission problem.\n- **The security implications and potential impact:** The security implication is privilege escalation, where an attacker with low-level access can gain administrative control over the WordPress site.\n- **Any parent-child relationships or chain patterns that influenced your mapping:** This is a general category.\n- **Whether the weakness is primary or secondary in the vulnerability:** This is a secondary weakness in the vulnerability.\n- **How the official MITRE mapping guidance influenced your decision:** The MITRE mapping guidance discourages use of this CWE.\n\n## CWEs Considered But Not Used:\n\n- CWE-269 (**Improper Privilege Management**): This CWE is too general and doesn't accurately reflect the specific root cause. The guidance discourages its use and encourages identifying more specific issues.\n- CWE-285 (**Improper Authorization**): While related to authorization, the vulnerability stems from an incorrect assignment of privileges, making CWE-266 a better fit.\n- CWE-862 (**Missing Authorization**): This CWE doesn't apply because the issue isn't a complete lack of authorization, but rather an **incorrect** assignment of privileges.\n- CWE-306 (**Missing Authentication for Critical Function**): The vulnerability is about authorization after authentication has occurred.\n- CWE-472 (**External Control of Assumed-Immutable Web Parameter**): This CWE is related to web parameter manipulation and doesn't directly apply to the **incorrect privilege assignment**.\n- CWE-352 (**Cross-Site Request Forgery (CSRF)**): This vulnerability does not stem from a CSRF attack.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-862:**\n- 862 (Missing Authorization) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 500.99551258386174
    },
    {
      "metadata": {
        "doc_id": "284",
        "name": "Improper Access Control",
        "source": "sparse"
      },
      "similarity": 482.16759996616867
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 480.97121512060244
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 472.71990918751885
    },
    {
      "metadata": {
        "doc_id": "269",
        "name": "Improper Privilege Management",
        "source": "sparse"
      },
      "similarity": 465.25481229716627
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 454.5523299263298
    },
    {
      "metadata": {
        "doc_id": "266",
        "name": "Incorrect Privilege Assignment",
        "source": "sparse"
      },
      "similarity": 448.9557653558215
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 444.08069740461326
    },
    {
      "metadata": {
        "doc_id": "472",
        "name": "External Control of Assumed-Immutable Web Parameter",
        "type": "Base",
        "original_content": "The web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.",
        "keyphrase_source": "rootcause:insufficient restrictions on user meta that can be updated through the save_multiple_shipping_addresses() function",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5036913483487395,
            "graph": 2.0476747491441585
          }
        }
      },
      "similarity": 0.5036913483487395
    },
    {
      "doc_id": "1275",
      "text": "CWE-1275: Sensitive Cookie with Improper SameSite Attribute",
      "score": 2.5507200000000005,
      "metadata": {
        "doc_id": "1275",
        "name": "Sensitive Cookie with Improper SameSite Attribute",
        "type": "variant",
        "original_content": "CWE-1275: Sensitive Cookie with Improper SameSite Attribute",
        "relationships": [
          {
            "source_id": "1275",
            "target_id": "352",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1275",
            "target_id": "923",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "923",
            "target_id": "1275",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "352",
            "target_id": "1275",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.6080000000000001,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.2,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "352",
                  "1275",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "352"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "284",
                  "923",
                  "PARENTOF"
                ],
                [
                  "923",
                  "1275",
                  "PARENTOF"
                ]
              ],
              "score": 0.6080000000000001,
              "type": "abstraction_path_down",
              "source": "284"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "352",
                  "1275",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "352"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "1275",
                  "352",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "352"
            }
          }
        },
        "abstraction_level": "variant",
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.5507200000000005
          }
        }
      },
      "similarity": 2.5507200000000005
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-862",
      "CWE-306",
      "CWE-472",
      "CWE-352",
      "CWE-269",
      "CWE-285",
      "CWE-284",
      "CWE-266"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}