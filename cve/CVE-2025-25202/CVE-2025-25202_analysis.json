{
  "cve_id": "CVE-2025-25202",
  "description": "Ash Authentication is an authentication framework for Elixir applications. Applications which have been bootstrapped by the igniter installer present since AshAuthentication v4.1.0 and who have used the magic link strategy _or_ are manually revoking tokens are affected by **revoked tokens being allowed to verify as valid**. Unless one hase implemented any kind of custom token revocation feature in your application, then one will not be affected. The impact here for users using builtin functionality is that magic link tokens are reusable until they expire. With that said, magic link tokens are only valid for 10 minutes, so the surface area for abuse is extremely low here. The flaw is patched in version 4.4.9. Additionally a compile time warning is shown to users with remediation instructions if they upgrade. 4.4.9 ships with an upgrader, so those who use `mix igniter.upgrade ash_authentication` will have the necessary patch applied. Otherwise, one may run the upgrader manually as described in the error message. As a workaround, delete the generated `revoked?` generic action in the token resource. This will cause it to use the one internal to Ash Authentication which has always been correct. Alternatively, manually make the changes that are included in the patch.",
  "key_phrases": {
    "component": "",
    "rootcause": "revoked tokens being allowed to verify as valid",
    "vector": "",
    "weakness": "",
    "product": "Ash Authentication",
    "impact": "reusable magic link tokens, token revocation",
    "attacker": "",
    "version": "v4.1.0 to 4.4.8"
  },
  "reference_content": "CVE-2025-25202\n\n**Root cause of vulnerability:**\n\nThe flaw stems from an incorrect implementation in the `mix ash_authentication.install` generated code, specifically within the `:revoked?` action. Prior to version 4.4.9, the installer generated an action that did not correctly check for token revocation, allowing revoked tokens to be reused. This was due to missing or incorrect validation of the `:jti` and `:token` options, specifically not allowing `nil` values and not returning a `:boolean`.\n\n**Weaknesses/vulnerabilities present:**\n\n*   Flawed token revocation checking logic.\n*   Incorrect action arguments (missing `allow_nil?: true`).\n*   Incorrect action return type (not `:boolean`).\n\n**Impact of exploitation:**\n\n*   Magic link tokens are reusable until they expire instead of being immediately revoked. (Default 10 minutes)\n*   Password reset tokens are reusable until they expire instead of being immediately revoked. (Default 3 days)\n*   Confirmation tokens are reusable until they expire instead of being immediately revoked. (Default 3 days)\n\n**Attack vectors:**\n\nAn attacker could reuse a revoked token (magic link, password reset, or confirmation) to gain unauthorized access or perform actions as the legitimate user, as long as the token hasn't expired.\n\n**Required attacker capabilities/position:**\n\nThe attacker needs to have obtained a previously issued token that has since been revoked. No special privileges are required beyond possessing a valid (but revoked) token.\n\n**Mitigation or fix:**\n\n*   Upgrade to version 4.4.9 or later of `ash_authentication`.\n*   If upgrading is not immediately possible, manually modify the generated `:revoked?` action in the token resource to:\n    *   Remove `allow_nil?: false` from the `:jti` and `:token` arguments.\n    *   Ensure the action returns a `:boolean`.\n*   Alternatively, delete the generated `:revoked?` action and rely on the internal implementation within `AshAuthentication`, which is already correct.\n*   Run `mix ash_authentication.upgrade 4.4.8 4.4.9` to apply the necessary patch.\n\n**Additional Details:**\n\nThe content provides more detail than the official CVE description, specifically outlining the exact code changes required for manual mitigation and the impact on different token types (magic link, password reset, confirmation). It also details the warning message displayed during compilation after upgrading to version 4.4.9.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n\n| CWE ID    | CWE Name                                                                         | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| --------- | -------------------------------------------------------------------------------- | ---------- | --------------------- | ------------------------------- | ------------------------------- |\n| CWE-287   | Improper Authentication                                                           | 0.8        | Class                 | Primary                         | Discouraged                     |\n| CWE-1270  | Generation of Incorrect Security Tokens                                           | 0.7        | Base                  | Secondary                       | Allowed                         |\n| CWE-306   | Missing Authentication for Critical Function                                      | 0.6        | Base                  | Secondary                       | Allowed                         |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.7\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\n\nThe primary CWE selected is CWE-287 Improper Authentication, a Class-level CWE. While it's generally discouraged to use Class-level CWEs, in this case, the root cause is related to authentication issues. CWE-306 and CWE-1270 are related, however, the high-level issue is that of Authentication bypassing, so a class level is appropriate here. The generated code **allows revoked tokens being allowed to verify as valid** thus bypassing authentication.\n\n```mermaid\ngraph TD\n    cwe287[\"CWE-287: Improper Authentication\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    cwe1270[\"CWE-1270: Generation of Incorrect Security Tokens\"]\n    \n    cwe306 -->|CHILDOF| cwe287\n    cwe1270 -->|CHILDOF| cwe287\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe287 primary\n    class cwe306,cwe1270 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with the **revoked tokens being allowed to verify as valid** due to the flawed token revocation checking logic. This leads to an improper authentication scenario where revoked tokens are incorrectly considered valid. The impact is that magic link, password reset, and confirmation tokens can be reused until they expire, granting unauthorized access.\n\n## Summary of Analysis\n\nThe initial assessment pointed towards CWE-287 Improper Authentication as the primary weakness, supported by the evidence indicating **revoked tokens being allowed to verify as valid**. The retriever results also suggest considering CWE-287, but the retriever also suggests CWE-306 and CWE-1270 as well. The primary CWE is that of authentication, so CWE-287 is the best option even if it is at the Class level.\n\nRelevant CWE Information:\n\n*   **Vulnerability Description Key Phrases:** \"**rootcause:** **revoked tokens being allowed to verify as valid**\"\n*   **CVE Reference Links Content Summary:** \"The flaw stems from an incorrect implementation in the `mix ash_authentication.install` generated code, specifically within the `:revoked?` action. Prior to version 4.4.9, the installer generated an action that did not correctly check for token revocation, allowing revoked tokens to be reused.\"\n*   **Mitigation:** \"Upgrade to version 4.4.9 or later of `ash_authentication`.\"",
  "analysis_with_relationships": "# Summary\n\n| CWE ID    | CWE Name                                                                         | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| --------- | -------------------------------------------------------------------------------- | ---------- | --------------------- | ------------------------------- | ------------------------------- |\n| CWE-287   | Improper Authentication                                                           | 0.8        | Class                 | Primary                         | Discouraged                     |\n| CWE-1270  | Generation of Incorrect Security Tokens                                           | 0.7        | Base                  | Secondary                       | Allowed                         |\n| CWE-306   | Missing Authentication for Critical Function                                      | 0.6        | Base                  | Secondary                       | Allowed                         |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.7\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\n\nThe primary CWE selected is CWE-287 Improper Authentication, a Class-level CWE. While it's generally discouraged to use Class-level CWEs, in this case, the root cause is related to authentication issues. CWE-306 and CWE-1270 are related, however, the high-level issue is that of Authentication bypassing, so a class level is appropriate here. The generated code **allows revoked tokens being allowed to verify as valid** thus bypassing authentication.\n\n```mermaid\ngraph TD\n    cwe287[\"CWE-287: Improper Authentication\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    cwe1270[\"CWE-1270: Generation of Incorrect Security Tokens\"]\n    \n    cwe306 -->|CHILDOF| cwe287\n    cwe1270 -->|CHILDOF| cwe287\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe287 primary\n    class cwe306,cwe1270 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with the **revoked tokens being allowed to verify as valid** due to the flawed token revocation checking logic. This leads to an improper authentication scenario where revoked tokens are incorrectly considered valid. The impact is that magic link, password reset, and confirmation tokens can be reused until they expire, granting unauthorized access.\n\n## Summary of Analysis\n\nThe initial assessment pointed towards CWE-287 Improper Authentication as the primary weakness, supported by the evidence indicating **revoked tokens being allowed to verify as valid**. The retriever results also suggest considering CWE-287, but the retriever also suggests CWE-306 and CWE-1270 as well. The primary CWE is that of authentication, so CWE-287 is the best option even if it is at the Class level.\n\nRelevant CWE Information:\n\n*   **Vulnerability Description Key Phrases:** \"**rootcause:** **revoked tokens being allowed to verify as valid**\"\n*   **CVE Reference Links Content Summary:** \"The flaw stems from an incorrect implementation in the `mix ash_authentication.install` generated code, specifically within the `:revoked?` action. Prior to version 4.4.9, the installer generated an action that did not correctly check for token revocation, allowing revoked tokens to be reused.\"\n*   **Mitigation:** \"Upgrade to version 4.4.9 or later of `ash_authentication`.\"\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-306:**\n- 306 (Missing Authentication for Critical Function) - ROOT\n\n\n**Chain starting from CWE-287:**\n- 287 (Improper Authentication) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "1390",
        "name": "Weak Authentication",
        "source": "sparse"
      },
      "similarity": 1072.6169475263748
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 1063.090764827943
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 1062.9910684113693
    },
    {
      "metadata": {
        "doc_id": "287",
        "name": "Improper Authentication",
        "source": "sparse"
      },
      "similarity": 986.5661332237124
    },
    {
      "metadata": {
        "doc_id": "347",
        "name": "Improper Verification of Cryptographic Signature",
        "source": "sparse"
      },
      "similarity": 970.8704656040929
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 963.8767021758259
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 960.9609395898988
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 960.1864483728313
    },
    {
      "metadata": {
        "doc_id": "1270",
        "name": "Generation of Incorrect Security Tokens",
        "type": "Base",
        "original_content": "The product implements a Security Token mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Tokens generated in the system are incorrect.",
        "keyphrase_source": "rootcause:revoked tokens being allowed to verify as valid",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.4177443659639827,
            "graph": 1.6264651116733926
          }
        }
      },
      "similarity": 0.4177443659639827
    },
    {
      "doc_id": "226",
      "text": "CWE-226: Sensitive Information in Resource Not Removed Before Reuse",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "226",
        "name": "Sensitive Information in Resource Not Removed Before Reuse",
        "type": "base",
        "original_content": "CWE-226: Sensitive Information in Resource Not Removed Before Reuse",
        "relationships": [
          {
            "source_id": "226",
            "target_id": "244",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "1342",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "1301",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "1272",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "1239",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "201",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "212",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "459",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "459",
            "target_id": "226",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "244",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "212",
            "target_id": "226",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "201",
            "target_id": "226",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1342",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1194"
            }
          },
          {
            "source_id": "1342",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1301",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1272",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1239",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1194"
            }
          },
          {
            "source_id": "1239",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "201",
                  "226",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "201"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "201",
                  "226",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "201"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "226",
                  "201",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "201"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-306",
      "CWE-287",
      "CWE-1270"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}