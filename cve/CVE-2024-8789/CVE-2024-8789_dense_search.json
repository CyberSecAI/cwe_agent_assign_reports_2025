{
  "retriever": "dense",
  "query": "Lunary-ai/lunary version git 105a3f6 is vulnerable to a Regular Expression Denial of Service (ReDoS) attack. The application allows users to upload their own regular expressions, which are then executed on the server side. Certain regular expressions can have exponential runtime complexity relative to the input size, leading to potential denial of service. An attacker can exploit this by submitting a specially crafted regular expression, causing the server to become unresponsive for an arbitrary length of time.",
  "keyphrases": {
    "weakness": [
      "Regular Expression Denial of Service"
    ]
  },
  "timestamp": "2025-07-14 04:08:31",
  "cve_id": "CVE-2024-8789",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "1333",
      "name": "Inefficient Regular Expression Complexity",
      "type": "Base",
      "score": 0.650643565383334
    },
    {
      "cwe_id": "185",
      "name": "Incorrect Regular Expression",
      "type": "Class",
      "score": 0.5729950304053821
    },
    {
      "cwe_id": "777",
      "name": "Regular Expression without Anchors",
      "type": "Variant",
      "score": 0.5536657199765807
    },
    {
      "cwe_id": "624",
      "name": "Executable Regular Expression Error",
      "type": "Base",
      "score": 0.5346851611122792
    },
    {
      "cwe_id": "186",
      "name": "Overly Restrictive Regular Expression",
      "type": "Base",
      "score": 0.5325800663043359
    },
    {
      "cwe_id": "625",
      "name": "Permissive Regular Expression",
      "type": "Base",
      "score": 0.5322210819014185
    },
    {
      "cwe_id": "918",
      "name": "Server-Side Request Forgery (SSRF)",
      "type": "Base",
      "score": 0.49943846433003947
    },
    {
      "cwe_id": "1287",
      "name": "Improper Validation of Specified Type of Input",
      "type": "Base",
      "score": 0.4799260244779552
    },
    {
      "cwe_id": "434",
      "name": "Unrestricted Upload of File with Dangerous Type",
      "type": "Base",
      "score": 0.4757562454685726
    },
    {
      "cwe_id": "93",
      "name": "Improper Neutralization of CRLF Sequences ('CRLF Injection')",
      "type": "Base",
      "score": 0.4756286617762523
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "type": "Base",
      "score": 0.46117522812345957
    },
    {
      "cwe_id": "94",
      "name": "Improper Control of Generation of Code ('Code Injection')",
      "type": "Base",
      "score": 0.4548349249355931
    },
    {
      "cwe_id": "400",
      "name": "Uncontrolled Resource Consumption",
      "type": "Class",
      "score": 0.45236819989225385
    },
    {
      "cwe_id": "790",
      "name": "Improper Filtering of Special Elements",
      "type": "Class",
      "score": 0.45206797529146436
    },
    {
      "cwe_id": "674",
      "name": "Uncontrolled Recursion",
      "type": "Class",
      "score": 0.44886914474412637
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "type": "Base",
      "score": 0.44815844135967586
    },
    {
      "cwe_id": "113",
      "name": "Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')",
      "type": "Variant",
      "score": 0.4473695713919018
    },
    {
      "cwe_id": "407",
      "name": "Inefficient Algorithmic Complexity",
      "type": "Class",
      "score": 0.4462415230102724
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "type": "Variant",
      "score": 0.44230451392704806
    },
    {
      "cwe_id": "943",
      "name": "Improper Neutralization of Special Elements in Data Query Logic",
      "type": "Class",
      "score": 0.441891128845198
    }
  ]
}