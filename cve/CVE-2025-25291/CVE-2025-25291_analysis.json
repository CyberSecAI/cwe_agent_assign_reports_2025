{
  "cve_id": "CVE-2025-25291",
  "description": "ruby-saml provides security assertion markup language (SAML) single sign-on (SSO) for Ruby. An authentication bypass vulnerability was found in ruby-saml prior to versions 1.12.4 and 1.18.0 due to a **parser differential**. ReXML and Nokogiri parse XML differently the parsers can generate entirely different document structures from the same XML input. That allows an attacker to be able to execute a Signature Wrapping attack. This issue may lead to authentication bypass. Versions 1.12.4 and 1.18.0 fix the issue.",
  "key_phrases": {
    "rootcause": "parser differential",
    "weakness": "",
    "impact": "authentication bypass",
    "vector": "Signature Wrapping attack",
    "attacker": "attacker",
    "product": "ruby-saml",
    "version": "prior to versions 1.12.4 and 1.18.0",
    "component": ""
  },
  "reference_content": "```text\nUNRELATED\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-347 | Improper Verification of Cryptographic Signature | 0.9 | Base | Allowed | Primary CWE |\n| CWE-287 | Improper Authentication | 0.6 | Class | Discouraged | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary relationship influencing the decision is that CWE-347 is a **Base** level CWE, representing a specific type of cryptographic failure, and it is **ChildOf** CWE-345, which is a broader **Class** covering insufficient verification of data authenticity. While authentication bypass is the impact, the root cause stems from improper handling of cryptographic signatures due to parsing differences, making CWE-347 the more direct and appropriate classification.\n\n```mermaid\ngraph TD\n    cwe347[\"CWE-347: Improper Verification of Cryptographic Signature\"]\n    cwe345[\"CWE-345: Insufficient Verification of Data Authenticity\"]\n    cwe287[\"CWE-287: Improper Authentication\"]\n    \n    cwe347 -->|CHILDOF| cwe345\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe347 primary\n    class cwe287 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with a **parser differential** leading to an incorrect XML document structure. This **incorrect document structure** then leads to **improper verification of the cryptographic signature (CWE-347)**. Finally, the **improper signature verification** leads to **authentication bypass**.\n\n## Summary of Analysis\nThe primary CWE is CWE-347, Improper Verification of Cryptographic Signature, because the root cause of the vulnerability is the **parser differential** causing the signature verification to fail. This is supported by the vulnerability description which states the issue is due to ReXML and Nokogiri parsing XML differently. This leads to signature wrapping attack, which results in the authentication bypass. CWE-287, Improper Authentication, was considered but deemed less specific as it describes the impact rather than the root cause. The classification is based on the evidence provided in the vulnerability description, and the relationships between CWEs further support the choice of CWE-347 as the primary weakness. The selected CWE is at the optimal level of specificity because it directly addresses the **root cause** of the vulnerability, which is the improper verification of the cryptographic signature.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## Vulnerability Description\nruby-saml provides security assertion markup language (SAML) single sign-on (SSO) for Ruby. An authentication bypass vulnerability was found in ruby-saml prior to versions 1.12.4 and 1.18.0 due to a **parser differential**. ReXML and Nokogiri parse XML differently the parsers can generate entirely different document structures from the same XML input. That allows an attacker to be able to execute a Signature Wrapping attack. This issue may lead to authentication bypass. Versions 1.12.4 and 1.18.0 fix the issue.\n\n### Vulnerability Description Key Phrases\n- **rootcause:** **parser differential**\n- **impact:** authentication bypass\n- **vector:** Signature Wrapping attack\n- **attacker:** attacker\n- **product:** ruby-saml\n- **version:** prior to versions 1.12.4 and 1.18.0\n\n## CVE Reference Links Content Summary\n```text\nUNRELATED\n```\n\n## Retriever Results\n\n### Top Combined Results\n\n| Rank | CWE ID | Name | Abstraction | Usage  | Retrievers | Individual Scores |\n|------|--------|------|-------------|-------|------------|-------------------|\n| 1 | 347 | Improper Verification of Cryptographic Signature | Base | Allowed | sparse | 0.528 |\n| 2 | 1333 | Inefficient Regular Expression Complexity | Base | Allowed | sparse | 0.468 |\n| 3 | 1390 | Weak Authentication | Class | Allowed-with-Review | sparse | 0.459 |\n| 4 | 611 | Improper Restriction of XML External Entity Reference | Base | Allowed | sparse | 0.455 |\n| 5 | 328 | Use of Weak Hash | Base | Allowed | sparse | 0.443 |\n| 6 | 138 | Improper Neutralization of Special Elements | Class | Discouraged | sparse | 0.433 |\n| 7 | 287 | Improper Authentication | Class | Discouraged | sparse | 0.428 |\n| 8 | 502 | Deserialization of Untrusted Data | Base | Allowed | sparse | 0.421 |\n| 9 | 112 | Missing XML Validation | Base | Allowed | dense | 0.463 |\n| 10 | 178 | Improper Handling of Case Sensitivity | Base | Allowed | graph | 0.002 |\n\n\n---\n\n## CWE Classification Guidance\n\nThe following guidance has been automatically included because relevant keywords were detected in the vulnerability description:\n\n### Authentication vs Authorization vs Access Control Guidance\n\n## ===Guidance===\n\n### Level Set \u2013 Authentication vs Authorization vs Access Control\n\n**Authentication**:\nDetermines *who* the actor is (identity validation). This is typically the *first step* in access control.\n\n* Example phrases: \"user must log in\", \"lack of login check\", \"bypasses login\"\n* CWE relevance: authentication is usually mapped to CWE-306 or its children.\n\n  * **CWE-306**: *Missing Authentication for Critical Function* \u2013 used when no identity validation is enforced for sensitive functionality (e.g., password reset, user deletion).\n\n**Authorization**:\nDetermines *what* an authenticated actor is allowed to do. It decides access *after* identity is verified.\n\n* Example phrases: \"unauthorized access\", \"regular user can access admin panel\", \"role checks are missing\"\n* CWE relevance: use CWEs like 862, 863, 285 for authorization errors:\n\n  * **CWE-862**: *Missing Authorization* \u2013 the application doesn't check whether the user is authorized at all.\n  * **CWE-863**: *Incorrect Authorization* \u2013 the application checks authorization, but does it incorrectly (e.g., flawed logic).\n  * **CWE-285**: *Improper Authorization* \u2013 general category for any flawed authorization logic or design.\n\n**Access Control**:\nA broader term that includes both authentication and authorization. Governs how resources are protected and who can access them under what conditions.\n\n* CWE relevance:\n\n  * **CWE-284**: *Improper Access Control* \u2013 top-level category used when access control failure exists but root cause is unclear.\n  * This should be avoided **if** a more specific child CWE like 285, 862, 863, or 306 is appropriate.\n\n---\n\n## Mapping Discussion \u2013 Common Misclassification Patterns\n\n### 1. **CWE-306 vs CWE-862**:\n\n* **306** is about lack of **authentication** (e.g., *no login required at all*).\n* **862** is about lack of **authorization** *after* authentication (e.g., *admin check missing*).\n* \u2705 Example CWE-306: *\u201cAn unauthenticated attacker can invoke the password reset API.\u201d*\n* \u2705 Example CWE-862: *\u201cAn authenticated user without admin privileges can delete any user account.\u201d*\n\n### 2. **CWE-285 vs CWE-284**:\n\n* **285** is specific to authorization flaws \u2013 it's a better choice than 284 **if** the issue involves *improper or missing role checks*.\n* **284** should be reserved for general access control issues when it\u2019s unclear whether the issue lies in authn or authz.\n\n---\n\n## Technical Impact vs Root Cause Clarification\n\n**Phrase like \"unauthorized access\" is not enough.**\n\n* If you **cannot determine whether identity was checked**, assume it\u2019s **authorization** and consider 862 or 863.\n* If you **know no login happened**, lean toward **authentication** \u2192 CWE-306.\n* If the **access control policy is unclear or inconsistently enforced**, but it's not due to missing checks, consider **CWE-284**.\n\n---\n\n## Good Mapping Examples\n\n* \u2705 **CWE-306**: \u201cThe endpoint `/admin/deleteUser` does not require any authentication.\u201d\n* \u2705 **CWE-862**: \u201cAny logged-in user can change any other user's email without being an admin.\u201d\n* \u2705 **CWE-86",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-347 | Improper Verification of Cryptographic Signature | 0.9 | Base | Allowed | Primary CWE |\n| CWE-287 | Improper Authentication | 0.6 | Class | Discouraged | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary relationship influencing the decision is that CWE-347 is a **Base** level CWE, representing a specific type of cryptographic failure, and it is **ChildOf** CWE-345, which is a broader **Class** covering insufficient verification of data authenticity. While authentication bypass is the impact, the root cause stems from improper handling of cryptographic signatures due to parsing differences, making CWE-347 the more direct and appropriate classification.\n\n```mermaid\ngraph TD\n    cwe347[\"CWE-347: Improper Verification of Cryptographic Signature\"]\n    cwe345[\"CWE-345: Insufficient Verification of Data Authenticity\"]\n    cwe287[\"CWE-287: Improper Authentication\"]\n    \n    cwe347 -->|CHILDOF| cwe345\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe347 primary\n    class cwe287 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with a **parser differential** leading to an incorrect XML document structure. This **incorrect document structure** then leads to **improper verification of the cryptographic signature (CWE-347)**. Finally, the **improper signature verification** leads to **authentication bypass**.\n\n## Summary of Analysis\nThe primary CWE is CWE-347, Improper Verification of Cryptographic Signature, because the root cause of the vulnerability is the **parser differential** causing the signature verification to fail. This is supported by the vulnerability description which states the issue is due to ReXML and Nokogiri parsing XML differently. This leads to signature wrapping attack, which results in the authentication bypass. CWE-287, Improper Authentication, was considered but deemed less specific as it describes the impact rather than the root cause. The classification is based on the evidence provided in the vulnerability description, and the relationships between CWEs further support the choice of CWE-347 as the primary weakness. The selected CWE is at the optimal level of specificity because it directly addresses the **root cause** of the vulnerability, which is the improper verification of the cryptographic signature.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## Vulnerability Description\nruby-saml provides security assertion markup language (SAML) single sign-on (SSO) for Ruby. An authentication bypass vulnerability was found in ruby-saml prior to versions 1.12.4 and 1.18.0 due to a **parser differential**. ReXML and Nokogiri parse XML differently the parsers can generate entirely different document structures from the same XML input. That allows an attacker to be able to execute a Signature Wrapping attack. This issue may lead to authentication bypass. Versions 1.12.4 and 1.18.0 fix the issue.\n\n### Vulnerability Description Key Phrases\n- **rootcause:** **parser differential**\n- **impact:** authentication bypass\n- **vector:** Signature Wrapping attack\n- **attacker:** attacker\n- **product:** ruby-saml\n- **version:** prior to versions 1.12.4 and 1.18.0\n\n## CVE Reference Links Content Summary\n```text\nUNRELATED\n```\n\n## Retriever Results\n\n### Top Combined Results\n\n| Rank | CWE ID | Name | Abstraction | Usage  | Retrievers | Individual Scores |\n|------|--------|------|-------------|-------|------------|-------------------|\n| 1 | 347 | Improper Verification of Cryptographic Signature | Base | Allowed | sparse | 0.528 |\n| 2 | 1333 | Inefficient Regular Expression Complexity | Base | Allowed | sparse | 0.468 |\n| 3 | 1390 | Weak Authentication | Class | Allowed-with-Review | sparse | 0.459 |\n| 4 | 611 | Improper Restriction of XML External Entity Reference | Base | Allowed | sparse | 0.455 |\n| 5 | 328 | Use of Weak Hash | Base | Allowed | sparse | 0.443 |\n| 6 | 138 | Improper Neutralization of Special Elements | Class | Discouraged | sparse | 0.433 |\n| 7 | 287 | Improper Authentication | Class | Discouraged | sparse | 0.428 |\n| 8 | 502 | Deserialization of Untrusted Data | Base | Allowed | sparse | 0.421 |\n| 9 | 112 | Missing XML Validation | Base | Allowed | dense | 0.463 |\n| 10 | 178 | Improper Handling of Case Sensitivity | Base | Allowed | graph | 0.002 |\n\n\n---\n\n## CWE Classification Guidance\n\nThe following guidance has been automatically included because relevant keywords were detected in the vulnerability description:\n\n### Authentication vs Authorization vs Access Control Guidance\n\n## ===Guidance===\n\n### Level Set \u2013 Authentication vs Authorization vs Access Control\n\n**Authentication**:\nDetermines *who* the actor is (identity validation). This is typically the *first step* in access control.\n\n* Example phrases: \"user must log in\", \"lack of login check\", \"bypasses login\"\n* CWE relevance: authentication is usually mapped to CWE-306 or its children.\n\n  * **CWE-306**: *Missing Authentication for Critical Function* \u2013 used when no identity validation is enforced for sensitive functionality (e.g., password reset, user deletion).\n\n**Authorization**:\nDetermines *what* an authenticated actor is allowed to do. It decides access *after* identity is verified.\n\n* Example phrases: \"unauthorized access\", \"regular user can access admin panel\", \"role checks are missing\"\n* CWE relevance: use CWEs like 862, 863, 285 for authorization errors:\n\n  * **CWE-862**: *Missing Authorization* \u2013 the application doesn't check whether the user is authorized at all.\n  * **CWE-863**: *Incorrect Authorization* \u2013 the application checks authorization, but does it incorrectly (e.g., flawed logic).\n  * **CWE-285**: *Improper Authorization* \u2013 general category for any flawed authorization logic or design.\n\n**Access Control**:\nA broader term that includes both authentication and authorization. Governs how resources are protected and who can access them under what conditions.\n\n* CWE relevance:\n\n  * **CWE-284**: *Improper Access Control* \u2013 top-level category used when access control failure exists but root cause is unclear.\n  * This should be avoided **if** a more specific child CWE like 285, 862, 863, or 306 is appropriate.\n\n---\n\n## Mapping Discussion \u2013 Common Misclassification Patterns\n\n### 1. **CWE-306 vs CWE-862**:\n\n* **306** is about lack of **authentication** (e.g., *no login required at all*).\n* **862** is about lack of **authorization** *after* authentication (e.g., *admin check missing*).\n* \u2705 Example CWE-306: *\u201cAn unauthenticated attacker can invoke the password reset API.\u201d*\n* \u2705 Example CWE-862: *\u201cAn authenticated user without admin privileges can delete any user account.\u201d*\n\n### 2. **CWE-285 vs CWE-284**:\n\n* **285** is specific to authorization flaws \u2013 it's a better choice than 284 **if** the issue involves *improper or missing role checks*.\n* **284** should be reserved for general access control issues when it\u2019s unclear whether the issue lies in authn or authz.\n\n---\n\n## Technical Impact vs Root Cause Clarification\n\n**Phrase like \"unauthorized access\" is not enough.**\n\n* If you **cannot determine whether identity was checked**, assume it\u2019s **authorization** and consider 862 or 863.\n* If you **know no login happened**, lean toward **authentication** \u2192 CWE-306.\n* If the **access control policy is unclear or inconsistently enforced**, but it's not due to missing checks, consider **CWE-284**.\n\n---\n\n## Good Mapping Examples\n\n* \u2705 **CWE-306**: \u201cThe endpoint `/admin/deleteUser` does not require any authentication.\u201d\n* \u2705 **CWE-862**: \u201cAny logged-in user can change any other user's email without being an admin.\u201d\n* \u2705 **CWE-86\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-345:**\n- 345 (Insufficient Verification of Data Authenticity) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "347",
        "name": "Improper Verification of Cryptographic Signature",
        "source": "sparse"
      },
      "similarity": 528.4300987686695
    },
    {
      "metadata": {
        "doc_id": "1333",
        "name": "Inefficient Regular Expression Complexity",
        "source": "sparse"
      },
      "similarity": 467.74080993239744
    },
    {
      "metadata": {
        "doc_id": "1390",
        "name": "Weak Authentication",
        "source": "sparse"
      },
      "similarity": 458.66030757714657
    },
    {
      "metadata": {
        "doc_id": "611",
        "name": "Improper Restriction of XML External Entity Reference",
        "source": "sparse"
      },
      "similarity": 455.49492919944385
    },
    {
      "metadata": {
        "doc_id": "328",
        "name": "Use of Weak Hash",
        "source": "sparse"
      },
      "similarity": 443.0917100733965
    },
    {
      "metadata": {
        "doc_id": "138",
        "name": "Improper Neutralization of Special Elements",
        "source": "sparse"
      },
      "similarity": 432.8986628998838
    },
    {
      "metadata": {
        "doc_id": "287",
        "name": "Improper Authentication",
        "source": "sparse"
      },
      "similarity": 427.95875447306287
    },
    {
      "metadata": {
        "doc_id": "502",
        "name": "Deserialization of Untrusted Data",
        "source": "sparse"
      },
      "similarity": 420.59913087278665
    },
    {
      "metadata": {
        "doc_id": "112",
        "name": "Missing XML Validation",
        "type": "Base",
        "original_content": "The product accepts XML from an untrusted source but does not validate the XML against the proper schema.",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.46308438209532354,
            "graph": 1.471989701219816
          }
        }
      },
      "similarity": 0.46308438209532354
    },
    {
      "doc_id": "178",
      "text": "CWE-178: Improper Handling of Case Sensitivity",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "178",
        "name": "Improper Handling of Case Sensitivity",
        "type": "base",
        "original_content": "CWE-178: Improper Handling of Case Sensitivity",
        "relationships": [
          {
            "source_id": "178",
            "target_id": "289",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "178",
            "target_id": "433",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "178",
            "target_id": "706",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "178",
            "target_id": "706",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "706",
            "target_id": "178",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "433",
            "target_id": "178",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "289",
            "target_id": "178",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1289",
            "target_id": "178",
            "label": "PEEROF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "289",
                  "178",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "289"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "289",
                  "178",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "289"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "178",
                  "289",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "289"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-345",
      "CWE-862",
      "CWE-306",
      "CWE-347",
      "CWE-285",
      "CWE-284",
      "CWE-86",
      "CWE-287"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}