{
  "cve_id": "CVE-2024-44913",
  "description": "An issue in the component EXR!ReadEXR+0x40ef1 of Irfanview v4.67.1.0 allows attackers to cause an access violation via a crafted EXR file. This vulnerability can lead to a Denial of Service (DoS).",
  "key_phrases": {
    "rootcause": "",
    "weakness": "",
    "impact": [
      "Denial of Service",
      "access violation"
    ],
    "vector": "crafted EXR file",
    "attacker": "attackers",
    "product": "Irfanview",
    "version": "v4.67.1.0",
    "component": "EXR!ReadEXR+0x40ef1"
  },
  "reference_content": "The provided content details three distinct vulnerabilities discovered in the IrfanView image viewer, specifically within the `Exr.dll` plugin. All three vulnerabilities are related to access violations that occur during the processing of crafted EXR image files. Here's a breakdown of each:\n\n**Vulnerability 1**\n\n*   **Root Cause:** An access violation occurs during the execution of `EXR!ReadEXR+0x40ef1` while processing a specific EXR file. The crash occurs due to an invalid memory write operation.\n*   **Weaknesses/Vulnerabilities:** The vulnerability is located at `EXR!ReadEXR+0x40ef1`, specifically a `mov word ptr [r9],ax` instruction. The register `r9` contains an invalid memory address.\n*   **Impact of Exploitation:** The exploitation leads to a crash of the IrfanView application, which results in a denial of service.\n*   **Attack Vectors:** Opening a specially crafted EXR file (named `0001.exr`) with IrfanView version 4.67.\n*   **Required Attacker Capabilities/Position:** The attacker needs to be able to supply a malicious EXR file to the victim.\n\n**Vulnerability 2**\n\n*   **Root Cause:**  An access violation occurs when executing `EXR!ReadEXR+0x4eef0` while processing another crafted EXR file. The root cause is an invalid memory write during image processing, specifically a non-temporal store instruction.\n*   **Weaknesses/Vulnerabilities:** The vulnerability is at `EXR!ReadEXR+0x4eef0`, specifically the instruction `movntdq xmmword ptr [rcx],xmm0`. The register `rcx` points to an invalid memory location.\n*   **Impact of Exploitation:** Similar to the first vulnerability, this results in a denial of service by crashing the application.\n*   **Attack Vectors:** Opening the malicious `0002.exr` file with IrfanView version 4.67.\n*   **Required Attacker Capabilities/Position:** The attacker needs to provide a malicious EXR file to the victim.\n\n**Vulnerability 3**\n\n*   **Root Cause:** An access violation at `EXR!ReadEXR+0x3df50` during the processing of another specially crafted EXR file, triggered by an invalid write operation to memory.\n*   **Weaknesses/Vulnerabilities:** The vulnerability is at `EXR!ReadEXR+0x3df50`, specifically a `mov word ptr [rdi],ax` instruction. The address contained in `rdi` is an invalid write target.\n*    **Impact of Exploitation:** Leads to a denial-of-service condition due to the crash.\n*   **Attack Vectors:** Opening the malicious `0003.exr` file with IrfanView version 4.67.\n*   **Required Attacker Capabilities/Position:** The attacker needs to be able to supply a malicious EXR file to the victim.\n\n**Additional Details**\n\n*   **Affected Plugin:**  All three vulnerabilities are located within the `Exr.dll` plugin, version 4.67.1.0.\n*   **Affected Version:** IrfanView version 4.67 is specified as being vulnerable in all three cases.\n*   **Commonality:** All three vulnerabilities are triggered by loading maliciously crafted `.exr` files and result in an access violation leading to a crash.\n\nThe content provides specific crash details including the register values and the exact instruction causing the exception, which is more detail than a typical CVE description would provide.",
  "similar_info": {
    "cwe_distribution": {
      "95": {
        "cwe_counts": {
          "CWE-NVD-Other": 2
        },
        "total_samples": 2,
        "distribution": [
          {
            "cwes": [
              "CWE-NVD-Other"
            ],
            "frequency": 2,
            "proportion": 1.0
          }
        ]
      },
      "90": {
        "cwe_counts": {
          "CWE-NVD-Other": 2
        },
        "total_samples": 2,
        "distribution": [
          {
            "cwes": [
              "CWE-NVD-Other"
            ],
            "frequency": 2,
            "proportion": 1.0
          }
        ]
      },
      "85": {
        "cwe_counts": {
          "CWE-NVD-Other": 2
        },
        "total_samples": 2,
        "distribution": [
          {
            "cwes": [
              "CWE-NVD-Other"
            ],
            "frequency": 2,
            "proportion": 1.0
          }
        ]
      },
      "80": {
        "cwe_counts": {
          "CWE-NVD-Other": 2
        },
        "total_samples": 2,
        "distribution": [
          {
            "cwes": [
              "CWE-NVD-Other"
            ],
            "frequency": 2,
            "proportion": 1.0
          }
        ]
      },
      "75": {
        "cwe_counts": {
          "CWE-NVD-Other": 2
        },
        "total_samples": 2,
        "distribution": [
          {
            "cwes": [
              "CWE-NVD-Other"
            ],
            "frequency": 2,
            "proportion": 1.0
          }
        ]
      },
      "70": {
        "cwe_counts": {
          "CWE-NVD-Other": 2
        },
        "total_samples": 2,
        "distribution": [
          {
            "cwes": [
              "CWE-NVD-Other"
            ],
            "frequency": 2,
            "proportion": 1.0
          }
        ]
      }
    },
    "cwe_consensus": "CWE-NVD-Other",
    "similarity_stats": {
      "thresholds": [
        95,
        90,
        85,
        80,
        75,
        70
      ],
      "total_samples_by_threshold": {
        "95": 2,
        "90": 2,
        "85": 2,
        "80": 2,
        "75": 2,
        "70": 2
      },
      "top_cwes_by_threshold": {
        "95": [
          [
            "CWE-NVD-Other",
            2
          ]
        ],
        "90": [
          [
            "CWE-NVD-Other",
            2
          ]
        ],
        "85": [
          [
            "CWE-NVD-Other",
            2
          ]
        ],
        "80": [
          [
            "CWE-NVD-Other",
            2
          ]
        ],
        "75": [
          [
            "CWE-NVD-Other",
            2
          ]
        ],
        "70": [
          [
            "CWE-NVD-Other",
            2
          ]
        ]
      }
    },
    "raw_matches": [
      {
        "similarity": 95,
        "cwes": [
          "NVD-Other"
        ],
        "total": 2,
        "frequency": 2,
        "proportion": 1.0
      },
      {
        "similarity": 90,
        "cwes": [
          "NVD-Other"
        ],
        "total": 2,
        "frequency": 2,
        "proportion": 1.0
      },
      {
        "similarity": 85,
        "cwes": [
          "NVD-Other"
        ],
        "total": 2,
        "frequency": 2,
        "proportion": 1.0
      },
      {
        "similarity": 80,
        "cwes": [
          "NVD-Other"
        ],
        "total": 2,
        "frequency": 2,
        "proportion": 1.0
      },
      {
        "similarity": 75,
        "cwes": [
          "NVD-Other"
        ],
        "total": 2,
        "frequency": 2,
        "proportion": 1.0
      },
      {
        "similarity": 70,
        "cwes": [
          "NVD-Other"
        ],
        "total": 2,
        "frequency": 2,
        "proportion": 1.0
      }
    ]
  },
  "similarity_summary": {
    "consensus_cwe": "CWE-NVD-Other",
    "top_cwes": [
      [
        "CWE-NVD-Other",
        12
      ]
    ],
    "confidence_levels": {
      "high": [],
      "medium": [],
      "low": []
    },
    "total_samples": 12
  },
  "analysis": "# Summary\n\n| CWE ID  | CWE Name                                                                        | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :------------------------------------------------------------------------------ | :--------- | :---------------------- | :------------------------------ | :------------------------------ |\n| CWE-787   | Out-of-bounds Write                                                            | 0.9        | Base                    | Primary                         | Allowed                         |\n| CWE-119   | Improper Restriction of Operations within the Bounds of a Memory Buffer       | 0.7        | Class                   | Secondary                       | Discouraged                     |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary weakness is **CWE-787 (Out-of-bounds Write)**, which is a specific type of **CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer)**. The relationship is hierarchical, with **CWE-787** being a child of **CWE-119**. We choose **CWE-787** because the description specifies an invalid memory write operation, which is more specific than just a general buffer issue.\n\n```mermaid\ngraph TD\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations\"]\n\n    cwe787 -->|CHILDOF| cwe119\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe787 primary\n    class cwe119 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with a crafted EXR file being processed by IrfanView. This leads to an **out-of-bounds write (CWE-787)**, which causes an access violation and ultimately results in a denial of service. The **out-of-bounds write** is the root cause, and the denial of service is the impact.\n\n## Summary of Analysis\n\nThe analysis is strongly based on the provided evidence, particularly the \"CVE Reference Links Content Summary,\" which details the root cause of the vulnerability as an invalid memory write operation.\n\n> \"Root Cause: An access violation occurs during the execution of `EXR!ReadEXR+0x40ef1` while processing a specific EXR file. The crash occurs due to an invalid memory write operation. Weaknesses/Vulnerabilities: The vulnerability is located at `EXR!ReadEXR+0x40ef1`, specifically a `mov word ptr [r9],ax` instruction. The register `r9` contains an invalid memory address.\"\n\nThe graph relationships reinforce the decision to choose **CWE-787** as the primary weakness because it is a more specific instance of a memory buffer error.\n\nThe selected CWEs are at the optimal level of specificity because **CWE-787** directly describes the **out-of-bounds write** condition, while **CWE-119** is a more general category. The evidence strongly supports the selection of **CWE-787** as the primary cause.\n\n**CWE Considerations:**\n\n*   **CWE-119:** While applicable as a broader category, it is not as precise as **CWE-787**. Therefore, it is considered as a secondary CWE.\n*   **CWE-125: Out-of-bounds Read:** The description explicitly mentions an invalid *write* operation, ruling out an out-of-bounds read.\n*   **CWE-476: NULL Pointer Dereference:** This is not relevant since the issue is an out-of-bounds write, not a dereference of a NULL pointer.\n*   **CWE-789: Memory Allocation with Excessive Size Value:** This is a possible consideration, but the provided information doesn't explicitly state that memory allocation is the problem; it is an invalid write operation.",
  "analysis_with_relationships": "# Summary\n\n| CWE ID  | CWE Name                                                                        | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :------------------------------------------------------------------------------ | :--------- | :---------------------- | :------------------------------ | :------------------------------ |\n| CWE-787   | Out-of-bounds Write                                                            | 0.9        | Base                    | Primary                         | Allowed                         |\n| CWE-119   | Improper Restriction of Operations within the Bounds of a Memory Buffer       | 0.7        | Class                   | Secondary                       | Discouraged                     |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary weakness is **CWE-787 (Out-of-bounds Write)**, which is a specific type of **CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer)**. The relationship is hierarchical, with **CWE-787** being a child of **CWE-119**. We choose **CWE-787** because the description specifies an invalid memory write operation, which is more specific than just a general buffer issue.\n\n```mermaid\ngraph TD\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations\"]\n\n    cwe787 -->|CHILDOF| cwe119\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe787 primary\n    class cwe119 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with a crafted EXR file being processed by IrfanView. This leads to an **out-of-bounds write (CWE-787)**, which causes an access violation and ultimately results in a denial of service. The **out-of-bounds write** is the root cause, and the denial of service is the impact.\n\n## Summary of Analysis\n\nThe analysis is strongly based on the provided evidence, particularly the \"CVE Reference Links Content Summary,\" which details the root cause of the vulnerability as an invalid memory write operation.\n\n> \"Root Cause: An access violation occurs during the execution of `EXR!ReadEXR+0x40ef1` while processing a specific EXR file. The crash occurs due to an invalid memory write operation. Weaknesses/Vulnerabilities: The vulnerability is located at `EXR!ReadEXR+0x40ef1`, specifically a `mov word ptr [r9],ax` instruction. The register `r9` contains an invalid memory address.\"\n\nThe graph relationships reinforce the decision to choose **CWE-787** as the primary weakness because it is a more specific instance of a memory buffer error.\n\nThe selected CWEs are at the optimal level of specificity because **CWE-787** directly describes the **out-of-bounds write** condition, while **CWE-119** is a more general category. The evidence strongly supports the selection of **CWE-787** as the primary cause.\n\n**CWE Considerations:**\n\n*   **CWE-119:** While applicable as a broader category, it is not as precise as **CWE-787**. Therefore, it is considered as a secondary CWE.\n*   **CWE-125: Out-of-bounds Read:** The description explicitly mentions an invalid *write* operation, ruling out an out-of-bounds read.\n*   **CWE-476: NULL Pointer Dereference:** This is not relevant since the issue is an out-of-bounds write, not a dereference of a NULL pointer.\n*   **CWE-789: Memory Allocation with Excessive Size Value:** This is a possible consideration, but the provided information doesn't explicitly state that memory allocation is the problem; it is an invalid write operation.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-476:**\n- 476 (NULL Pointer Dereference) - ROOT\n\n\n**Chain starting from CWE-125:**\n- 125 (Out-of-bounds Read) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "476",
        "name": "NULL Pointer Dereference",
        "source": "sparse"
      },
      "similarity": 69.52611858482095
    },
    {
      "metadata": {
        "doc_id": "125",
        "name": "Out-of-bounds Read",
        "source": "sparse"
      },
      "similarity": 67.50933984686594
    },
    {
      "metadata": {
        "doc_id": "400",
        "name": "Uncontrolled Resource Consumption",
        "source": "sparse"
      },
      "similarity": 66.68012522482373
    },
    {
      "metadata": {
        "doc_id": "121",
        "name": "Stack-based Buffer Overflow",
        "source": "sparse"
      },
      "similarity": 66.40323224066549
    },
    {
      "metadata": {
        "doc_id": "755",
        "name": "Improper Handling of Exceptional Conditions",
        "source": "sparse"
      },
      "similarity": 65.93699028074583
    },
    {
      "metadata": {
        "doc_id": "119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "source": "sparse"
      },
      "similarity": 65.93374246356477
    },
    {
      "metadata": {
        "doc_id": "770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "source": "sparse"
      },
      "similarity": 65.87568080266819
    },
    {
      "metadata": {
        "doc_id": "674",
        "name": "Uncontrolled Recursion",
        "source": "sparse"
      },
      "similarity": 65.82834820048413
    },
    {
      "metadata": {
        "doc_id": "782",
        "name": "Exposed IOCTL with Insufficient Access Control",
        "type": "Variant",
        "original_content": "The product implements an IOCTL with functionality that should be restricted, but it does not properly enforce access control for the IOCTL.",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5380950365794309,
            "graph": 1.713661937820938
          }
        }
      },
      "similarity": 0.5380950365794309
    },
    {
      "doc_id": "1325",
      "text": "CWE-1325: Improperly Controlled Sequential Memory Allocation",
      "score": 3.4361600000000005,
      "metadata": {
        "doc_id": "1325",
        "name": "Improperly Controlled Sequential Memory Allocation",
        "type": "base",
        "original_content": "CWE-1325: Improperly Controlled Sequential Memory Allocation",
        "relationships": [
          {
            "source_id": "1325",
            "target_id": "476",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1325",
            "target_id": "789",
            "label": "PEEROF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1325",
            "target_id": "770",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "770",
            "target_id": "1325",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "476",
            "target_id": "1325",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.5760000000000002,
          "sequence_path": 1.0,
          "peer_group": 0.9
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward",
            "peer_relationship"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "476",
                  "1325",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "476"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "400",
                  "770",
                  "PARENTOF"
                ],
                [
                  "770",
                  "1325",
                  "PARENTOF"
                ]
              ],
              "score": 0.5760000000000002,
              "type": "abstraction_path_down",
              "source": "400"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "476",
                  "1325",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "476"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "1325",
                  "476",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "476"
            },
            "peer_relationship": {
              "path": [
                [
                  "1325",
                  "789",
                  "PEEROF"
                ]
              ],
              "score": 0.9,
              "type": "peer_relationship",
              "source": "789"
            }
          }
        },
        "abstraction_level": "base",
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 3.4361600000000005
          }
        }
      },
      "similarity": 3.4361600000000005
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-476",
      "CWE-125",
      "CWE-787",
      "CWE-119",
      "CWE-789"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}