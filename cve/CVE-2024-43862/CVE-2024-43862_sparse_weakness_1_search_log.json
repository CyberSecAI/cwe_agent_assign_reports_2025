{
  "method": "sparse_weakness_1",
  "query": "In the Linux kernel, the following vulnerability has been resolved net wan fsl_qmc_hdlc Convert carrier_lock spinlock to a mutex The carrier_lock spinlock protects the carrier detection. While it is held, framer_get_status() is called which in turn takes a mutex. This is not correct and can lead to a deadlock. A run with PROVE_LOCKING enabled detected the issue [ BUG Invalid wait context ] ... c204ddbc (&framer->mutex){+.+.}-{33}, at framer_get_status+0x40/0x78 other info that might help us debug this context-{44} 2 locks held by ifconfig/146 #0 c0926a38 (rtnl_mutex){+.+.}-{33}, at devinet_ioctl+0x12c/0x664 #1 c2006a40 (&qmc_hdlc->carrier_lock){....}-{22}, at qmc_hdlc_framer_set_carrier+0x30/0x98 Avoid the spinlock usage and convert carrier_lock to a mutex.",
  "keyphrases": {
    "weakness": "improper locking"
  },
  "timestamp": "2025-07-13T15:18:40.260924",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "667",
      "name": "Improper Locking",
      "score": 505.08847509375533
    },
    {
      "doc_id": "833",
      "name": "Deadlock",
      "score": 430.2051975721468
    },
    {
      "doc_id": "412",
      "name": "Unrestricted Externally Accessible Lock",
      "score": 429.86154494880424
    },
    {
      "doc_id": "662",
      "name": "Improper Synchronization",
      "score": 414.36365770302746
    },
    {
      "doc_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 391.7514388451355
    }
  ]
}