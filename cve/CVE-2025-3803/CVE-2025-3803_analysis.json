{
  "cve_id": "CVE-2025-3803",
  "description": "A vulnerability was found in Tenda W12 and i24 3.0.0.4(2887)/3.0.0.5(3644). It has been rated as critical. This issue affects the function cgiSysScheduleRebootSet of the file /bin/httpd. The manipulation of the argument rebootDate leads to **stack-based buffer overflow**. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used.",
  "key_phrases": {
    "component": "cgiSysScheduleRebootSet function of /bin/httpd",
    "rootcause": "",
    "vector": "manipulation of the argument rebootDate",
    "weakness": "stack-based buffer overflow",
    "product": "Tenda W12, i24",
    "impact": "",
    "attacker": "",
    "version": "3.0.0.4(2887)/3.0.0.5(3644)"
  },
  "reference_content": "## Analysis of CVE-2025-3803 related content\n\nBased on the provided content, specifically the GitHub issue description, here's an extraction of relevant information:\n\n**Root cause of vulnerability:**\n\nThe `rebootDate` parameter in the `cgiSysScheduleRebootSet` function does not have length limitations, leading to a stack overflow.\n\n**Weaknesses/vulnerabilities present:**\n\n*   Stack overflow vulnerability\n*   Lack of input validation on the `rebootDate` parameter.\n\n**Impact of exploitation:**\n\nThe stack overflow allows modification of the `$RA` register, which can lead to Remote Code Execution (RCE).\n\n**Attack vectors:**\n\n*   Network-based attack via HTTP POST request to the `/goform/modules` endpoint.\n*   Specifically targeting the `sysScheduleRebootSet` parameter with a crafted, overly long `rebootDate` value.\n\n**Required attacker capabilities/position:**\n\n*   Network access to the affected Tenda device.\n*   Ability to send HTTP POST requests.\n*   Understanding of stack overflow exploitation techniques.\n\n**Mitigation or fix:**\n\nThe content does not provide information about a specific fix or mitigation. However, the root cause suggests that proper input validation and length checking of the `rebootDate` parameter would resolve the vulnerability.\n\n**Affected Firmware:**\n\n*   Tenda w12 V3.0.0.5(3644)\n*   Tenda i24 V3.0.0.4(2887)\n\n**Additional Details (more detail than official CVE description):**\n\nThe provided content includes a proof-of-concept (PoC) exploit script in Python, demonstrating how to trigger the stack overflow and potentially achieve RCE. It also includes images illustrating the normal state and the overflow condition.\n\nThe content from tenda.com.cn is empty and therefore unrelated.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n\n| CWE ID  | CWE Name  | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-121 | Stack-based Buffer Overflow | 1.0  | Variant | Allowed | Primary CWE |\n| CWE-119 | Improper Restriction of Operations within the Bounds of a Memory Buffer | 0.7 | Class  | Discouraged | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary CWE is CWE-121, which is a variant of the class CWE-119. The vulnerability description clearly indicates a stack-based buffer overflow due to the lack of input validation on the `rebootDate` parameter, making CWE-121 the most specific and appropriate choice.\n\n```mermaid\ngraph TD\n    cwe121[\"CWE-121: Stack-based Buffer Overflow\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\"]\n    \n    cwe121 -->|CHILDOF| cwe119\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe121 primary\n    class cwe119 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with the **lack of input validation** on the `rebootDate` parameter, which leads to a **stack-based buffer overflow**. This overflow allows modification of the `$RA` register, potentially leading to Remote Code Execution (RCE).\n\n## Summary of Analysis\n\nThe analysis is based on the provided vulnerability description and the CVE reference content, which both explicitly mention a **stack-based buffer overflow** due to the manipulation of the `rebootDate` argument. The root cause is the **lack of input validation** on this argument.\n\nThe vulnerability description states: \"The manipulation of the argument rebootDate leads to **stack-based buffer overflow**.\" The CVE reference summary states \"The `rebootDate` parameter in the `cgiSysScheduleRebootSet` function does not have length limitations, leading to a stack overflow.\"\n\nCWE-121 is the most specific CWE that directly addresses this vulnerability. The retriever results also list CWE-121 as a potential candidate.\n\nCWE-119, while related, is a more general class of vulnerability. CWE-121 is a variant of CWE-119, and thus a better and more specific fit.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-121: Stack-based Buffer Overflow\n**Abstraction Level**: Variant\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nA stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.\n\n## CWE-121: Stack-based Buffer Overflow\nCWE-121 is chosen because the vulnerability description explicitly states a \"stack-based buffer overflow\". This is the most accurate and specific representation of the weakness.\n\nCWE-119 is considered as a secondary candidate because it is a more general class that encompasses buffer overflows, but CWE-121 provides a more precise classification. The Mapping Guidance for CWE-119 says it is \"Discouraged\" when more details are available.\n\nCWE-78, CWE-89, and CWE-79 are related to injection vulnerabilities, which is not the case here. The vulnerability is due to a buffer overflow, not improper neutralization of special elements.\n\nCWE-190 and CWE-128 are related to integer overflows, but the vulnerability description does not indicate any integer overflow issues.\n\nCWE-125, CWE-822, CWE-823, CWE-824, and CWE-825 are all about issues with pointers. The vulnerability description does not indicate any issues with pointers.",
  "analysis_with_relationships": "# Summary\n\n| CWE ID  | CWE Name  | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-121 | Stack-based Buffer Overflow | 1.0  | Variant | Allowed | Primary CWE |\n| CWE-119 | Improper Restriction of Operations within the Bounds of a Memory Buffer | 0.7 | Class  | Discouraged | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary CWE is CWE-121, which is a variant of the class CWE-119. The vulnerability description clearly indicates a stack-based buffer overflow due to the lack of input validation on the `rebootDate` parameter, making CWE-121 the most specific and appropriate choice.\n\n```mermaid\ngraph TD\n    cwe121[\"CWE-121: Stack-based Buffer Overflow\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\"]\n    \n    cwe121 -->|CHILDOF| cwe119\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe121 primary\n    class cwe119 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with the **lack of input validation** on the `rebootDate` parameter, which leads to a **stack-based buffer overflow**. This overflow allows modification of the `$RA` register, potentially leading to Remote Code Execution (RCE).\n\n## Summary of Analysis\n\nThe analysis is based on the provided vulnerability description and the CVE reference content, which both explicitly mention a **stack-based buffer overflow** due to the manipulation of the `rebootDate` argument. The root cause is the **lack of input validation** on this argument.\n\nThe vulnerability description states: \"The manipulation of the argument rebootDate leads to **stack-based buffer overflow**.\" The CVE reference summary states \"The `rebootDate` parameter in the `cgiSysScheduleRebootSet` function does not have length limitations, leading to a stack overflow.\"\n\nCWE-121 is the most specific CWE that directly addresses this vulnerability. The retriever results also list CWE-121 as a potential candidate.\n\nCWE-119, while related, is a more general class of vulnerability. CWE-121 is a variant of CWE-119, and thus a better and more specific fit.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-121: Stack-based Buffer Overflow\n**Abstraction Level**: Variant\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nA stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product performs operations on a memory buffer, but it reads from or writes to a memory location outside the buffer's intended boundary. This may result in read or write operations on unexpected memory locations that could be linked to other variables, data structures, or internal program data.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-119 is commonly misused in low-information vulnerability reports when lower-level CWEs could be used instead, or when more details about the vulnerability are available.\n\n## CWE-121: Stack-based Buffer Overflow\nCWE-121 is chosen because the vulnerability description explicitly states a \"stack-based buffer overflow\". This is the most accurate and specific representation of the weakness.\n\nCWE-119 is considered as a secondary candidate because it is a more general class that encompasses buffer overflows, but CWE-121 provides a more precise classification. The Mapping Guidance for CWE-119 says it is \"Discouraged\" when more details are available.\n\nCWE-78, CWE-89, and CWE-79 are related to injection vulnerabilities, which is not the case here. The vulnerability is due to a buffer overflow, not improper neutralization of special elements.\n\nCWE-190 and CWE-128 are related to integer overflows, but the vulnerability description does not indicate any integer overflow issues.\n\nCWE-125, CWE-822, CWE-823, CWE-824, and CWE-825 are all about issues with pointers. The vulnerability description does not indicate any issues with pointers.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n**Chain starting from CWE-121:**\n- 121 (Stack-based Buffer Overflow) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Buffer Overflow",
        "match_reason": "term_in_phrase_whole_phrase"
      },
      "similarity": 800.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "190",
        "name": "Integer Overflow or Wraparound",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Overflow",
        "match_reason": "term_in_phrase_whole_phrase"
      },
      "similarity": 800.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "121",
        "name": "Stack-based Buffer Overflow",
        "source": "sparse"
      },
      "similarity": 412.970971919633
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 401.8677493446634
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 379.702151823316
    },
    {
      "metadata": {
        "doc_id": "674",
        "name": "Uncontrolled Recursion",
        "source": "sparse"
      },
      "similarity": 377.5896504745476
    },
    {
      "metadata": {
        "doc_id": "125",
        "name": "Out-of-bounds Read",
        "source": "sparse"
      },
      "similarity": 373.4630657606029
    },
    {
      "metadata": {
        "doc_id": "117",
        "name": "Improper Output Neutralization for Logs",
        "source": "sparse"
      },
      "similarity": 353.8985570675167
    },
    {
      "metadata": {
        "doc_id": "78",
        "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "type": "Base",
        "original_content": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
        "keyphrase_source": "weakness:stack-based buffer overflow",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.6496258071756607,
            "graph": 2.5969148753132636
          }
        }
      },
      "similarity": 0.6496258071756607
    },
    {
      "doc_id": "128",
      "text": "CWE-128: Wrap-around Error",
      "score": 2.9120000000000004,
      "metadata": {
        "doc_id": "128",
        "name": "Wrap-around Error",
        "type": "base",
        "original_content": "CWE-128: Wrap-around Error",
        "relationships": [
          {
            "source_id": "128",
            "target_id": "190",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "128",
            "target_id": "119",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "128",
            "target_id": "682",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "682",
            "target_id": "128",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "119",
            "target_id": "128",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0,
          "peer_group": 0.9
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward",
            "peer_relationship"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "119",
                  "128",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "119"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "119",
                  "128",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "119"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "128",
                  "119",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "119"
            },
            "peer_relationship": {
              "path": [
                [
                  "128",
                  "190",
                  "PEEROF"
                ]
              ],
              "score": 0.9,
              "type": "peer_relationship",
              "source": "190"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.9120000000000004
          }
        }
      },
      "similarity": 2.9120000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-121",
      "CWE-823",
      "CWE-125",
      "CWE-79",
      "CWE-190",
      "CWE-825",
      "CWE-78",
      "CWE-822",
      "CWE-824",
      "CWE-119",
      "CWE-128"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}