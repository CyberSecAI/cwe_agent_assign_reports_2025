{
  "method": "sparse_weakness_1",
  "query": "In the Linux kernel, the following vulnerability has been resolved NFSv4 Fix a deadlock when recovering state on a sillyrenamed file If the file is sillyrenamed, and slated for delete on close, it is possible for a server reboot to triggeer an open reclaim, with can again race with the application call to close(). When that happens, the call to put_nfs_open_context() can trigger a synchronous delegreturn call which deadlocks because it is not marked as privileged. Instead, ensure that the call to nfs4_inode_return_delegation_on_close() catches the delegreturn, and schedules it asynchronously.",
  "keyphrases": {
    "weakness": "race"
  },
  "timestamp": "2025-07-14T09:59:00.647825",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "667",
      "name": "Improper Locking",
      "score": 520.5202478164761
    },
    {
      "doc_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "score": 495.45819214603773
    },
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 491.23108346339114
    },
    {
      "doc_id": "833",
      "name": "Deadlock",
      "score": 462.6437610987125
    },
    {
      "doc_id": "674",
      "name": "Uncontrolled Recursion",
      "score": 460.8245281475456
    }
  ]
}