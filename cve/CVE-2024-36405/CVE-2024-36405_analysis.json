{
  "cve_id": "CVE-2024-36405",
  "description": "liboqs is a C-language cryptographic library that provides implementations of post-quantum cryptography algorithms. A **control-flow timing lean** has been identified in the reference implementation of the Kyber key encapsulation mechanism when it is compiled with Clang 15-18 for `-Os`, `-O1`, and other compilation options. A proof-of-concept local attack on the reference implementation leaks the entire ML-KEM 512 secret key in ~10 minutes using end-to-end decapsulation timing measurements. The issue has been fixed in version 0.10.1. As a possible workaround, some compiler options may produce vectorized code that does not leak secret information, however relying on these compiler options as a workaround may not be reliable.",
  "key_phrases": {
    "rootcause": "control-flow timing lean",
    "weakness": "",
    "impact": "leakage of entire ML-KEM 512 secret key",
    "vector": "decapsulation timing measurements",
    "attacker": "",
    "product": "liboqs",
    "version": "",
    "component": "reference implementation of Kyber key encapsulation mechanism"
  },
  "reference_content": "```\n{\n  \"vulnerability\": {\n    \"root_cause\": \"The `poly_frommsg` function in the Kyber reference implementation, despite source-level mitigations, produces a secret-dependent branch due to compiler optimizations by Clang (versions 15-18) when compiled with certain flags.\",\n    \"weaknesses\": [\n      \"CWE-208: Observable Timing Discrepancy\",\n      \"CWE-385: Insufficiently Protected Credentials\"\n    ],\n    \"impact\": \"A control-flow timing leak allows an attacker to extract the ML-KEM 512 secret key through timing measurements of the decapsulation process. A proof-of-concept local attack can leak the entire key in approximately 10 minutes.\",\n    \"attack_vectors\": \"The vulnerability can be exploited through timing analysis of the Kyber decapsulation process. The attack is network based since an attacker can send carefully crafted ciphertexts to trigger decapsulation.\",\n    \"required_attacker_capabilities\": \"The attacker needs to be able to perform timing measurements of the decapsulation process. The attacker does not need any specific privileges.\"\n  },\n  \"affected_software\": {\n    \"name\": \"liboqs\",\n    \"versions\": \"<=0.10.0\",\n     \"patched_versions\": \"0.10.1 and higher\"\n  },\n  \"additional_details\": \"The vulnerability stems from how Clang optimizes the `poly_frommsg` function when specific compiler flags are used (e.g., `-Os`, `-O1`, `-O2 -fno-vectorize`, `-O3 -fno-vectorize`). This optimization results in a conditional branch based on the message input, which introduces a timing difference exploitable by an attacker.\"\n}\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-208 | Observable Timing Discrepancy | 1.0 | Base | Primary CWE | Allowed |\n| CWE-385 | Covert Timing Channel | 0.5 | Base | Secondary Candidate | Allowed |\n| CWE-327 | Use of a Broken or Risky Cryptographic Algorithm | 0.3 | Class | Secondary Candidate | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship that influenced the CWE selection is the parent-child relationship between CWE-203 (Observable Discrepancy) and CWE-208 (Observable Timing Discrepancy). CWE-208 is a more specific type of observable discrepancy where the difference is based on timing. The vulnerability description explicitly mentions a \"**control-flow timing lean**,\" making CWE-208 the more appropriate choice. CWE-385 (Covert Timing Channel) was considered but not selected as the primary because the description focuses on the observable timing discrepancy rather than the intentional establishment of a covert channel. CWE-327 (Use of a Broken or Risky Cryptographic Algorithm) was considered due to the potential for misconfiguration or misuse of cryptographic algorithms, but the core issue is the timing leak, not the algorithm itself.\n\n```mermaid\ngraph TD\n    cwe208[\"CWE-208: Observable Timing Discrepancy\"]\n    cwe203[\"CWE-203: Observable Discrepancy\"]\n    cwe385[\"CWE-385: Covert Timing Channel\"]\n    cwe327[\"CWE-327: Use of a Broken or Risky Cryptographic Algorithm\"]\n\n    cwe208 -->|CHILDOF| cwe203\n    cwe385 -->|CANFOLLOW| cwe208\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe208 primary\n    class cwe203 secondary\n    class cwe385, cwe327 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the compiler optimization leading to a **secret-dependent branch** (root cause). This results in an **observable timing discrepancy** during decapsulation. An attacker exploits this discrepancy through timing measurements, ultimately leading to the **leakage of the ML-KEM 512 secret key** (impact).\n\n## Summary of Analysis\nThe analysis is primarily based on the vulnerability description and the CVE reference links content summary, which explicitly mentions a \"**control-flow timing lean**\" and the presence of \"CWE-208: Observable Timing Discrepancy.\" The retriever results also support CWE-208 as the top candidate. The relationship analysis confirms that CWE-208 is more specific than CWE-203 and more relevant than CWE-385 and CWE-327 in this context.\n\nThe selected CWEs are at the optimal level of specificity because CWE-208 directly addresses the observed timing differences that expose sensitive information. While CWE-385 could be considered a related weakness, it implies an intentional design for covert communication, which is not the case here. Instead, the timing discrepancy is an unintended consequence of compiler optimization. Therefore, CWE-208 is the most accurate and specific representation of the vulnerability's root cause.\n\nRelevant CWE Information:\n- **CWE-208 Observable Timing Discrepancy**: The vulnerability's core is a **control-flow timing lean**, directly aligning with the CWE's description of timing differences revealing security-relevant information.\n- **CWE-385 Covert Timing Channel**: The description mentions a **control-flow timing lean** but does not explicitly state an intent to create a covert channel, making it a less suitable primary mapping.\n- **CWE-327 Use of a Broken or Risky Cryptographic Algorithm**: Although the vulnerability involves cryptographic algorithms, the issue is not with the algorithm itself but with the timing leak, making it less relevant than CWE-208.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-208 | Observable Timing Discrepancy | 1.0 | Base | Primary CWE | Allowed |\n| CWE-385 | Covert Timing Channel | 0.5 | Base | Secondary Candidate | Allowed |\n| CWE-327 | Use of a Broken or Risky Cryptographic Algorithm | 0.3 | Class | Secondary Candidate | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship that influenced the CWE selection is the parent-child relationship between CWE-203 (Observable Discrepancy) and CWE-208 (Observable Timing Discrepancy). CWE-208 is a more specific type of observable discrepancy where the difference is based on timing. The vulnerability description explicitly mentions a \"**control-flow timing lean**,\" making CWE-208 the more appropriate choice. CWE-385 (Covert Timing Channel) was considered but not selected as the primary because the description focuses on the observable timing discrepancy rather than the intentional establishment of a covert channel. CWE-327 (Use of a Broken or Risky Cryptographic Algorithm) was considered due to the potential for misconfiguration or misuse of cryptographic algorithms, but the core issue is the timing leak, not the algorithm itself.\n\n```mermaid\ngraph TD\n    cwe208[\"CWE-208: Observable Timing Discrepancy\"]\n    cwe203[\"CWE-203: Observable Discrepancy\"]\n    cwe385[\"CWE-385: Covert Timing Channel\"]\n    cwe327[\"CWE-327: Use of a Broken or Risky Cryptographic Algorithm\"]\n\n    cwe208 -->|CHILDOF| cwe203\n    cwe385 -->|CANFOLLOW| cwe208\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe208 primary\n    class cwe203 secondary\n    class cwe385, cwe327 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the compiler optimization leading to a **secret-dependent branch** (root cause). This results in an **observable timing discrepancy** during decapsulation. An attacker exploits this discrepancy through timing measurements, ultimately leading to the **leakage of the ML-KEM 512 secret key** (impact).\n\n## Summary of Analysis\nThe analysis is primarily based on the vulnerability description and the CVE reference links content summary, which explicitly mentions a \"**control-flow timing lean**\" and the presence of \"CWE-208: Observable Timing Discrepancy.\" The retriever results also support CWE-208 as the top candidate. The relationship analysis confirms that CWE-208 is more specific than CWE-203 and more relevant than CWE-385 and CWE-327 in this context.\n\nThe selected CWEs are at the optimal level of specificity because CWE-208 directly addresses the observed timing differences that expose sensitive information. While CWE-385 could be considered a related weakness, it implies an intentional design for covert communication, which is not the case here. Instead, the timing discrepancy is an unintended consequence of compiler optimization. Therefore, CWE-208 is the most accurate and specific representation of the vulnerability's root cause.\n\nRelevant CWE Information:\n- **CWE-208 Observable Timing Discrepancy**: The vulnerability's core is a **control-flow timing lean**, directly aligning with the CWE's description of timing differences revealing security-relevant information.\n- **CWE-385 Covert Timing Channel**: The description mentions a **control-flow timing lean** but does not explicitly state an intent to create a covert channel, making it a less suitable primary mapping.\n- **CWE-327 Use of a Broken or Risky Cryptographic Algorithm**: Although the vulnerability involves cryptographic algorithms, the issue is not with the algorithm itself but with the timing leak, making it less relevant than CWE-208.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-203:**\n- 203 (Observable Discrepancy) - ROOT\n\n\n**Chain starting from CWE-208:**\n- 208 (Observable Timing Discrepancy) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "208",
        "name": "Observable Timing Discrepancy",
        "source": "sparse"
      },
      "similarity": 628.3405905478462
    },
    {
      "metadata": {
        "doc_id": "347",
        "name": "Improper Verification of Cryptographic Signature",
        "source": "sparse"
      },
      "similarity": 572.3975344598134
    },
    {
      "metadata": {
        "doc_id": "327",
        "name": "Use of a Broken or Risky Cryptographic Algorithm",
        "source": "sparse"
      },
      "similarity": 560.4069786962513
    },
    {
      "metadata": {
        "doc_id": "203",
        "name": "Observable Discrepancy",
        "source": "sparse"
      },
      "similarity": 558.6382179044253
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 544.1428224586565
    },
    {
      "metadata": {
        "doc_id": "362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "source": "sparse"
      },
      "similarity": 535.1192160202687
    },
    {
      "metadata": {
        "doc_id": "1391",
        "name": "Use of Weak Credentials",
        "source": "sparse"
      },
      "similarity": 531.4348840413653
    },
    {
      "metadata": {
        "doc_id": "639",
        "name": "Authorization Bypass Through User-Controlled Key",
        "source": "sparse"
      },
      "similarity": 524.9629096890492
    },
    {
      "metadata": {
        "doc_id": "1258",
        "name": "Exposure of Sensitive System Information Due to Uncleared Debug Information",
        "type": "Base",
        "original_content": "The hardware does not fully clear security-sensitive values, such as keys and intermediate values in cryptographic operations, when debug mode is entered.",
        "keyphrase_source": "rootcause:control-flow timing lean",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.45184928755815396,
            "graph": 1.637009192318096
          }
        }
      },
      "similarity": 0.45184928755815396
    },
    {
      "doc_id": "212",
      "text": "CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer",
      "score": 2.56672,
      "metadata": {
        "doc_id": "212",
        "name": "Improper Removal of Sensitive Information Before Storage or Transfer",
        "type": "base",
        "original_content": "CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer",
        "relationships": [
          {
            "source_id": "212",
            "target_id": "226",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "212",
            "target_id": "1258",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "212",
            "target_id": "201",
            "label": "CANPRECEDE",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "212",
            "target_id": "669",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "212",
            "target_id": "669",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "669",
            "target_id": "212",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "212",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "201",
            "target_id": "212",
            "label": "CANFOLLOW",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1258",
            "target_id": "212",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.39199999999999996,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_up",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "201",
                  "212",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "201"
            },
            "abstraction_path_up": {
              "path": [
                [
                  "1342",
                  "226",
                  "CHILDOF"
                ],
                [
                  "226",
                  "212",
                  "CHILDOF"
                ]
              ],
              "score": 0.39199999999999996,
              "type": "abstraction_path_up",
              "source": "1342"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "201",
                  "212",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "201"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "212",
                  "201",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "201"
            }
          }
        },
        "abstraction_level": "base",
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.56672
          }
        }
      },
      "similarity": 2.56672
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-203",
      "CWE-208",
      "CWE-385",
      "CWE-327"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}