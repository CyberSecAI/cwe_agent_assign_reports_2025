{
  "cve_id": "CVE-2024-53053",
  "description": "In the Linux kernel, the following vulnerability has been resolved scsi ufs core Fix another **deadlock** during RTC update If ufshcd_rtc_work calls ufshcd_rpm_put_sync() and the pms usage_count is 0, we will enter the runtime suspend callback. However, the runtime suspend callback will wait to flush ufshcd_rtc_work, causing a **deadlock**. Replace ufshcd_rpm_put_sync() with ufshcd_rpm_put() to avoid the **deadlock**.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "deadlock",
    "impact": "runtime suspend callback",
    "vector": "ufshcd_rtc_work calls ufshcd_rpm_put_sync() when the pms usage_count is 0",
    "attacker": "",
    "product": "Linux kernel",
    "version": "",
    "component": "scsi ufs core"
  },
  "reference_content": "Based on the provided information, here's an analysis of the vulnerability:\n\n**Root Cause:**\n- A deadlock occurs in the UFS (Universal Flash Storage) subsystem when updating the Real-Time Clock (RTC).\n\n**Vulnerabilities:**\n- The function `ufshcd_update_rtc` calls `ufshcd_rpm_put_sync()`.\n- If the power management (PM) usage count is 0, `ufshcd_rpm_put_sync()` will trigger the runtime suspend callback.\n- The runtime suspend callback waits for `ufshcd_rtc_work` to complete (flush), but `ufshcd_rtc_work` itself is blocked on `ufshcd_rpm_put_sync()`, creating a deadlock condition.\n\n**Impact of Exploitation:**\n- The system will become unresponsive due to the deadlock.\n- The UFS storage operations will be stalled.\n\n**Attack Vectors:**\n- The vulnerability is triggered by the normal operation of the UFS driver, specifically during the RTC update process. No specific attacker action is needed to trigger the bug.\n\n**Required Attacker Capabilities/Position:**\n- No specific attacker capabilities or position is required. The vulnerability can be triggered by the system itself.\n\n**Technical Details:**\n- The fix replaces `ufshcd_rpm_put_sync()` with `ufshcd_rpm_put()`. The `ufshcd_rpm_put` function does not wait for the power management operation to complete synchronously, avoiding the deadlock.\n\n**Additional Notes:**\n- The fix was backported to stable kernel versions, including 6.11.x.\n- The issue was introduced by commit `6bf999e0eb41 (\"scsi: ufs: core: Add UFS RTC support\")`.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-833 | Deadlock | 1.0 | Base | Primary CWE | Allowed |\n| CWE-413 | Improper Resource Locking | 0.7 | Base | Secondary Candidate CWE | Allowed |\n| CWE-667 | Improper Locking | 0.6 | Class | Secondary Candidate CWE | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-833 (Deadlock), which is a Base level CWE. CWE-413 (Improper Resource Locking) and CWE-667 (Improper Locking) are also considered. CWE-667 is a class and parents CWE-413. The vulnerability description indicates a deadlock due to improper resource handling in a concurrent context.\n\n```mermaid\ngraph TD\n    cwe833[\"CWE-833: Deadlock\"]\n    cwe413[\"CWE-413: Improper Resource Locking\"]\n    cwe667[\"CWE-667: Improper Locking\"]\n\n    cwe833\n    cwe413 -->|CHILDOF| cwe667\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe833 primary\n    class cwe413 secondary\n    class cwe667 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **deadlock** condition caused by `ufshcd_rtc_work` calling `ufshcd_rpm_put_sync()` when the pms usage_count is 0, leading to the runtime suspend callback waiting for `ufshcd_rtc_work` to complete, resulting in a standstill. The root cause is the synchronous resource management (`ufshcd_rpm_put_sync()`) conflicting with the asynchronous nature of the runtime suspend callback and `ufshcd_rtc_work`.\n\n## Summary of Analysis\nThe analysis is based on the provided evidence from the vulnerability description and CVE reference summary.\n\nThe vulnerability description clearly states: \"Fix another **deadlock** during RTC update. If ufshcd_rtc_work calls ufshcd_rpm_put_sync() and the pms usage_count is 0, we will enter the runtime suspend callback. However, the runtime suspend callback will wait to flush ufshcd_rtc_work, causing a **deadlock**.\"\n\nThe \"CVE Reference Links Content Summary\" further supports this: \"A **deadlock** occurs in the UFS (Universal Flash Storage) subsystem when updating the Real-Time Clock (RTC).\" and \"The runtime suspend callback waits for `ufshcd_rtc_work` to complete (flush), but `ufshcd_rtc_work` itself is blocked on `ufshcd_rpm_put_sync()`, creating a **deadlock** condition.\"\n\nCWE-833 (Deadlock) is the most specific and accurate representation of the vulnerability. The retriever results also list CWE-833 as a potential match.\n\nCWE-413 (Improper Resource Locking) is considered because the deadlock involves waiting for a resource. However, the core issue is the deadlock itself rather than simply improper locking. CWE-667 (Improper Locking) is a higher-level class that encompasses CWE-413, making CWE-413 the preferred choice if improper locking were the primary issue.\n\nThe selection of CWE-833 is at the optimal level of specificity, as it directly addresses the **deadlock** condition described in the vulnerability.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-667: Improper Locking\n**Abstraction Level**: Class\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nThe product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-833: Deadlock\n**Abstraction Level**: Base\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nThe product contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-362: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence operating concurrently.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-824: Access of Uninitialized Pointer\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product accesses or uses a pointer that has not been initialized.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-755: Improper Handling of Exceptional Conditions\n**Abstraction Level**: Class\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product does not handle or incorrectly handles an exceptional condition.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n## CWE-413: Improper Resource Locking\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product does not lock or does not correctly lock a resource when the product must have exclusive access to the resource.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the resource is in an unexpected state.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-1285: Improper Validation of Specified Index, Position, or Offset in Input\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-404: Improper Resource Shutdown or Release\n**Abstraction Level**: Class\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe product does not release or incorrectly releases a resource before it is made available for re-use.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-665: Improper Initialization\n**Abstraction Level**: Class\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n## CWE-667: Improper Locking\n**Abstraction Level**: Class\n**Similarity Score**: 808.39\n**Source**: sparse\n\n**Description**:\nThe product does not properly acquire or release a lock on a",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-833 | Deadlock | 1.0 | Base | Primary CWE | Allowed |\n| CWE-413 | Improper Resource Locking | 0.7 | Base | Secondary Candidate CWE | Allowed |\n| CWE-667 | Improper Locking | 0.6 | Class | Secondary Candidate CWE | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-833 (Deadlock), which is a Base level CWE. CWE-413 (Improper Resource Locking) and CWE-667 (Improper Locking) are also considered. CWE-667 is a class and parents CWE-413. The vulnerability description indicates a deadlock due to improper resource handling in a concurrent context.\n\n```mermaid\ngraph TD\n    cwe833[\"CWE-833: Deadlock\"]\n    cwe413[\"CWE-413: Improper Resource Locking\"]\n    cwe667[\"CWE-667: Improper Locking\"]\n\n    cwe833\n    cwe413 -->|CHILDOF| cwe667\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe833 primary\n    class cwe413 secondary\n    class cwe667 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **deadlock** condition caused by `ufshcd_rtc_work` calling `ufshcd_rpm_put_sync()` when the pms usage_count is 0, leading to the runtime suspend callback waiting for `ufshcd_rtc_work` to complete, resulting in a standstill. The root cause is the synchronous resource management (`ufshcd_rpm_put_sync()`) conflicting with the asynchronous nature of the runtime suspend callback and `ufshcd_rtc_work`.\n\n## Summary of Analysis\nThe analysis is based on the provided evidence from the vulnerability description and CVE reference summary.\n\nThe vulnerability description clearly states: \"Fix another **deadlock** during RTC update. If ufshcd_rtc_work calls ufshcd_rpm_put_sync() and the pms usage_count is 0, we will enter the runtime suspend callback. However, the runtime suspend callback will wait to flush ufshcd_rtc_work, causing a **deadlock**.\"\n\nThe \"CVE Reference Links Content Summary\" further supports this: \"A **deadlock** occurs in the UFS (Universal Flash Storage) subsystem when updating the Real-Time Clock (RTC).\" and \"The runtime suspend callback waits for `ufshcd_rtc_work` to complete (flush), but `ufshcd_rtc_work` itself is blocked on `ufshcd_rpm_put_sync()`, creating a **deadlock** condition.\"\n\nCWE-833 (Deadlock) is the most specific and accurate representation of the vulnerability. The retriever results also list CWE-833 as a potential match.\n\nCWE-413 (Improper Resource Locking) is considered because the deadlock involves waiting for a resource. However, the core issue is the deadlock itself rather than simply improper locking. CWE-667 (Improper Locking) is a higher-level class that encompasses CWE-413, making CWE-413 the preferred choice if improper locking were the primary issue.\n\nThe selection of CWE-833 is at the optimal level of specificity, as it directly addresses the **deadlock** condition described in the vulnerability.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-667: Improper Locking\n**Abstraction Level**: Class\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nThe product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-833: Deadlock\n**Abstraction Level**: Base\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nThe product contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-362: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence operating concurrently.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-824: Access of Uninitialized Pointer\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product accesses or uses a pointer that has not been initialized.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-755: Improper Handling of Exceptional Conditions\n**Abstraction Level**: Class\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product does not handle or incorrectly handles an exceptional condition.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n## CWE-413: Improper Resource Locking\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product does not lock or does not correctly lock a resource when the product must have exclusive access to the resource.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the resource is in an unexpected state.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-1285: Improper Validation of Specified Index, Position, or Offset in Input\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-404: Improper Resource Shutdown or Release\n**Abstraction Level**: Class\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe product does not release or incorrectly releases a resource before it is made available for re-use.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-665: Improper Initialization\n**Abstraction Level**: Class\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n## CWE-667: Improper Locking\n**Abstraction Level**: Class\n**Similarity Score**: 808.39\n**Source**: sparse\n\n**Description**:\nThe product does not properly acquire or release a lock on a\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-404:**\n- 404 (Improper Resource Shutdown or Release) - ROOT\n\n\n**Chain starting from CWE-667:**\n- 667 (Improper Locking) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "667",
        "name": "Improper Locking",
        "source": "sparse"
      },
      "similarity": 323.82185881457923
    },
    {
      "metadata": {
        "doc_id": "833",
        "name": "Deadlock",
        "source": "sparse"
      },
      "similarity": 297.04549189459004
    },
    {
      "metadata": {
        "doc_id": "835",
        "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "source": "sparse"
      },
      "similarity": 235.8196442795855
    },
    {
      "metadata": {
        "doc_id": "663",
        "name": "Use of a Non-reentrant Function in a Concurrent Context",
        "source": "sparse"
      },
      "similarity": 234.22023681013323
    },
    {
      "metadata": {
        "doc_id": "61",
        "name": "UNIX Symbolic Link (Symlink) Following",
        "source": "sparse"
      },
      "similarity": 229.47555281837066
    },
    {
      "metadata": {
        "doc_id": "1281",
        "name": "Sequence of Processor Instructions Leads to Unexpected Behavior",
        "source": "sparse"
      },
      "similarity": 218.85771849238455
    },
    {
      "metadata": {
        "doc_id": "362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "source": "sparse"
      },
      "similarity": 213.6250470297819
    },
    {
      "metadata": {
        "doc_id": "415",
        "name": "Double Free",
        "source": "sparse"
      },
      "similarity": 213.61638008570847
    },
    {
      "metadata": {
        "doc_id": "413",
        "name": "Improper Resource Locking",
        "type": "Base",
        "original_content": "The product does not lock or does not correctly lock a resource when the product must have exclusive access to the resource.",
        "keyphrase_source": "weakness:deadlock",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.48764628159872614,
            "graph": 1.6950787528106082
          }
        }
      },
      "similarity": 0.48764628159872614
    },
    {
      "doc_id": "772",
      "text": "CWE-772: Missing Release of Resource after Effective Lifetime",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "772",
        "name": "Missing Release of Resource after Effective Lifetime",
        "type": "base",
        "original_content": "CWE-772: Missing Release of Resource after Effective Lifetime",
        "relationships": [
          {
            "source_id": "772",
            "target_id": "911",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "772",
            "target_id": "775",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "772",
            "target_id": "401",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "772",
            "target_id": "1091",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "772",
            "target_id": "404",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1340"
            }
          },
          {
            "source_id": "772",
            "target_id": "404",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1305"
            }
          },
          {
            "source_id": "772",
            "target_id": "404",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "772",
            "target_id": "404",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "911",
            "target_id": "772",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "775",
            "target_id": "772",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "404",
            "target_id": "772",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "401",
            "target_id": "772",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1091",
            "target_id": "772",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "911",
                  "772",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "911"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "911",
                  "772",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "911"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-404",
      "CWE-667",
      "CWE-833",
      "CWE-413",
      "CWE-1285",
      "CWE-362",
      "CWE-755",
      "CWE-824",
      "CWE-367",
      "CWE-665"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}