{
  "cve_id": "CVE-2025-1626",
  "description": "The Qi Blocks WordPress plugin before 1.4 does not validate and escape some of its Countdown block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored **Cross-Site Scripting** attacks.",
  "key_phrases": {
    "rootcause": "",
    "weakness": [
      "improper validation and escaping",
      "Cross-Site Scripting"
    ],
    "impact": [
      "Stored Cross-Site Scripting attacks",
      "Stored XSS"
    ],
    "vector": "",
    "attacker": "users with contributor role and above",
    "product": "Qi Blocks WordPress plugin",
    "version": "before 1.4",
    "component": "Countdown block"
  },
  "reference_content": "## Analysis of CVE-2025-1626 Content\n\nThe provided content is **RELEVANT** to CVE-2025-1626. It details a Stored Cross-Site Scripting (XSS) vulnerability in the Qi Blocks plugin for WordPress. Here's a breakdown of the extracted information:\n\n**Root cause of vulnerability:**\n\nThe plugin does not validate and escape some of its Countdown block options before outputting them back in a page/post.\n\n**Weaknesses/vulnerabilities present:**\n\n*   Stored Cross-Site Scripting (XSS)\n*   Insufficient input validation and output encoding.\n\n**Impact of exploitation:**\n\nAn attacker with Contributor+ role can inject malicious JavaScript code that will be executed in the browser of users viewing the affected post.\n\n**Attack vectors:**\n\n*   An attacker with Contributor+ access creates a post.\n*   Adds a Countdown block to the post.\n*   Injects a malicious payload (e.g., `<img src=x onerror=alert(/XSS/)>`) into the \"Second Singular Label\" field of the Countdown block.\n*   Saves the post.\n*   The XSS is triggered when the second value of the counter reaches 00 when (pre)viewing the post.\n\n**Required attacker capabilities/position:**\n\n*   Authenticated user with Contributor+ role or higher.\n\n**Mitigation or fix:**\n\n*   The vulnerability is fixed in version 1.4 of the Qi Blocks plugin.\n\n**Additional Details (more than official CVE description):**\n\n*   **Proof of Concept:** Detailed steps on how to reproduce the vulnerability are provided.\n*   **CVSS Score:** 5.9 (Medium)\n*   **References:** Links to the CVE entry ([https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2025-1626](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2025-1626)) and a research report ([https://research.cleantalk.org/CVE-2025-1626/](https://research.cleantalk.org/CVE-2025-1626/)).\n*   **CWE:** CWE-79\n*   **OWASP Top 10:** A7: Cross-Site Scripting (XSS)\n*   **Timeline:** Publicly published on 2025-04-28.\n*   **Researcher:** Krugov Artyom\n*   **WPVDB ID:** f00d86f1-7ff9-4001-af16-989358d811a8",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Allowed | Primary CWE |\n| CWE-116 | Improper Encoding or Escaping of Output | 0.7 | Class | Allowed-with-Review | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship is that CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] is a base-level CWE that directly describes the vulnerability. CWE-116 [Improper Encoding or Escaping of Output] is a Class-level CWE, and a possible cause of the XSS.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n    \n    cwe79 -->|CHILDOF| cwe116\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe79 primary\n    class cwe116 secondary\n```\n\n## Vulnerability Chain\nThe chain of events is as follows:\n1.  Input is received by the \"Countdown block\" component of the Qi Blocks WordPress plugin.\n2.  The input is not properly validated and escaped. (**Improper validation and escaping**)\n3.  The unvalidated and unescaped input is outputted back into a page/post.\n4.  The output is rendered in a web page, leading to **Stored Cross-Site Scripting attacks**.\n\nThe root cause is the **improper validation and escaping**, which directly leads to the **Cross-Site Scripting** vulnerability.\n\n## Summary of Analysis\nThe primary **weakness** is the **improper validation and escaping** of input, which leads to **Cross-Site Scripting**. CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] is the most direct and appropriate CWE. The vulnerability description explicitly states that the plugin does not validate and escape some of its Countdown block options before outputting them back in a page/post, which allows users with the contributor role and above to perform Stored **Cross-Site Scripting** attacks.\n\nCWE-116 [Improper Encoding or Escaping of Output] was considered because the description mentions **improper escaping**, however, it is a class-level CWE. It could be argued that the **improper escaping** is the root cause, and the XSS is the result. However, the retriever results and the vulnerability description point towards CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] being the more appropriate selection as it is more specific and directly relates to the XSS.\n\nCWE-352 [Cross-Site Request Forgery (CSRF)], CWE-862 [Missing Authorization], and CWE-434 [Unrestricted Upload of File with Dangerous Type] were also considered based on the retriever results, but they do not directly describe the vulnerability.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\n**Abstraction Level**: Variant\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-184: Incomplete List of Disallowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction Level**: Class\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-807: Reliance on Untrusted Inputs in a Security Decision\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 3582.78\n**Source**: sparse\n\n**Description",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Allowed | Primary CWE |\n| CWE-116 | Improper Encoding or Escaping of Output | 0.7 | Class | Allowed-with-Review | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship is that CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] is a base-level CWE that directly describes the vulnerability. CWE-116 [Improper Encoding or Escaping of Output] is a Class-level CWE, and a possible cause of the XSS.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n    \n    cwe79 -->|CHILDOF| cwe116\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe79 primary\n    class cwe116 secondary\n```\n\n## Vulnerability Chain\nThe chain of events is as follows:\n1.  Input is received by the \"Countdown block\" component of the Qi Blocks WordPress plugin.\n2.  The input is not properly validated and escaped. (**Improper validation and escaping**)\n3.  The unvalidated and unescaped input is outputted back into a page/post.\n4.  The output is rendered in a web page, leading to **Stored Cross-Site Scripting attacks**.\n\nThe root cause is the **improper validation and escaping**, which directly leads to the **Cross-Site Scripting** vulnerability.\n\n## Summary of Analysis\nThe primary **weakness** is the **improper validation and escaping** of input, which leads to **Cross-Site Scripting**. CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] is the most direct and appropriate CWE. The vulnerability description explicitly states that the plugin does not validate and escape some of its Countdown block options before outputting them back in a page/post, which allows users with the contributor role and above to perform Stored **Cross-Site Scripting** attacks.\n\nCWE-116 [Improper Encoding or Escaping of Output] was considered because the description mentions **improper escaping**, however, it is a class-level CWE. It could be argued that the **improper escaping** is the root cause, and the XSS is the result. However, the retriever results and the vulnerability description point towards CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] being the more appropriate selection as it is more specific and directly relates to the XSS.\n\nCWE-352 [Cross-Site Request Forgery (CSRF)], CWE-862 [Missing Authorization], and CWE-434 [Unrestricted Upload of File with Dangerous Type] were also considered based on the retriever results, but they do not directly describe the vulnerability.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\n**Abstraction Level**: Variant\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-184: Incomplete List of Disallowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction Level**: Class\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-807: Reliance on Untrusted Inputs in a Security Decision\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 3582.78\n**Source**: sparse\n\n**Description\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n**Chain starting from CWE-862:**\n- 862 (Missing Authorization) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_sources": [
          {
            "id": "weakness:improper validation and escaping",
            "keyphrase": "improper validation and escaping",
            "type": "weakness"
          },
          {
            "id": "weakness:Cross-Site Scripting",
            "keyphrase": "Cross-Site Scripting",
            "type": "weakness"
          },
          {
            "id": "impact:Stored Cross-Site Scripting attacks",
            "keyphrase": "Stored Cross-Site Scripting attacks",
            "type": "impact"
          },
          {
            "id": "impact:Stored XSS",
            "keyphrase": "Stored XSS",
            "type": "impact"
          },
          {
            "id": "attacker:users with contributor role and above",
            "keyphrase": "users with contributor role and above",
            "type": "attacker"
          },
          {
            "id": "product:Qi Blocks WordPress plugin",
            "keyphrase": "Qi Blocks WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:before 1.4",
            "keyphrase": "before 1.4",
            "type": "version"
          },
          {
            "id": "component:Countdown block",
            "keyphrase": "Countdown block",
            "type": "component"
          }
        ]
      },
      "similarity": 435.12515544281194
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "keyphrase_sources": [
          {
            "id": "weakness:improper validation and escaping",
            "keyphrase": "improper validation and escaping",
            "type": "weakness"
          },
          {
            "id": "weakness:Cross-Site Scripting",
            "keyphrase": "Cross-Site Scripting",
            "type": "weakness"
          },
          {
            "id": "impact:Stored Cross-Site Scripting attacks",
            "keyphrase": "Stored Cross-Site Scripting attacks",
            "type": "impact"
          },
          {
            "id": "impact:Stored XSS",
            "keyphrase": "Stored XSS",
            "type": "impact"
          },
          {
            "id": "product:Qi Blocks WordPress plugin",
            "keyphrase": "Qi Blocks WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:before 1.4",
            "keyphrase": "before 1.4",
            "type": "version"
          },
          {
            "id": "component:Countdown block",
            "keyphrase": "Countdown block",
            "type": "component"
          }
        ]
      },
      "similarity": 357.5828293233105
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse",
        "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
        "keyphrase_sources": [
          {
            "id": "weakness:improper validation and escaping",
            "keyphrase": "improper validation and escaping",
            "type": "weakness"
          },
          {
            "id": "weakness:Cross-Site Scripting",
            "keyphrase": "Cross-Site Scripting",
            "type": "weakness"
          },
          {
            "id": "impact:Stored Cross-Site Scripting attacks",
            "keyphrase": "Stored Cross-Site Scripting attacks",
            "type": "impact"
          },
          {
            "id": "impact:Stored XSS",
            "keyphrase": "Stored XSS",
            "type": "impact"
          },
          {
            "id": "attacker:users with contributor role and above",
            "keyphrase": "users with contributor role and above",
            "type": "attacker"
          },
          {
            "id": "product:Qi Blocks WordPress plugin",
            "keyphrase": "Qi Blocks WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:before 1.4",
            "keyphrase": "before 1.4",
            "type": "version"
          },
          {
            "id": "component:Countdown block",
            "keyphrase": "Countdown block",
            "type": "component"
          }
        ]
      },
      "similarity": 325.03336519253463
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse",
        "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
        "keyphrase_sources": [
          {
            "id": "weakness:Cross-Site Scripting",
            "keyphrase": "Cross-Site Scripting",
            "type": "weakness"
          },
          {
            "id": "impact:Stored Cross-Site Scripting attacks",
            "keyphrase": "Stored Cross-Site Scripting attacks",
            "type": "impact"
          },
          {
            "id": "impact:Stored XSS",
            "keyphrase": "Stored XSS",
            "type": "impact"
          },
          {
            "id": "attacker:users with contributor role and above",
            "keyphrase": "users with contributor role and above",
            "type": "attacker"
          },
          {
            "id": "product:Qi Blocks WordPress plugin",
            "keyphrase": "Qi Blocks WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:before 1.4",
            "keyphrase": "before 1.4",
            "type": "version"
          },
          {
            "id": "component:Countdown block",
            "keyphrase": "Countdown block",
            "type": "component"
          }
        ]
      },
      "similarity": 323.6033210235599
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse",
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "keyphrase_sources": [
          {
            "id": "weakness:improper validation and escaping",
            "keyphrase": "improper validation and escaping",
            "type": "weakness"
          },
          {
            "id": "weakness:Cross-Site Scripting",
            "keyphrase": "Cross-Site Scripting",
            "type": "weakness"
          },
          {
            "id": "impact:Stored Cross-Site Scripting attacks",
            "keyphrase": "Stored Cross-Site Scripting attacks",
            "type": "impact"
          },
          {
            "id": "impact:Stored XSS",
            "keyphrase": "Stored XSS",
            "type": "impact"
          },
          {
            "id": "attacker:users with contributor role and above",
            "keyphrase": "users with contributor role and above",
            "type": "attacker"
          },
          {
            "id": "product:Qi Blocks WordPress plugin",
            "keyphrase": "Qi Blocks WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:before 1.4",
            "keyphrase": "before 1.4",
            "type": "version"
          },
          {
            "id": "component:Countdown block",
            "keyphrase": "Countdown block",
            "type": "component"
          }
        ]
      },
      "similarity": 307.92262546830034
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "keyphrase_sources": [
          {
            "id": "weakness:improper validation and escaping",
            "keyphrase": "improper validation and escaping",
            "type": "weakness"
          }
        ]
      },
      "similarity": 293.2354849635763
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse",
        "original_content": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.",
        "keyphrase_sources": [
          {
            "id": "attacker:users with contributor role and above",
            "keyphrase": "users with contributor role and above",
            "type": "attacker"
          }
        ]
      },
      "similarity": 119.71427114028134
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-116",
      "CWE-862",
      "CWE-80",
      "CWE-79",
      "CWE-472",
      "CWE-352",
      "CWE-74",
      "CWE-138",
      "CWE-184",
      "CWE-807",
      "CWE-425",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "352": [
      {
        "id": "weakness:improper validation and escaping",
        "keyphrase": "improper validation and escaping",
        "type": "weakness"
      },
      {
        "id": "weakness:Cross-Site Scripting",
        "keyphrase": "Cross-Site Scripting",
        "type": "weakness"
      },
      {
        "id": "impact:Stored Cross-Site Scripting attacks",
        "keyphrase": "Stored Cross-Site Scripting attacks",
        "type": "impact"
      },
      {
        "id": "impact:Stored XSS",
        "keyphrase": "Stored XSS",
        "type": "impact"
      },
      {
        "id": "attacker:users with contributor role and above",
        "keyphrase": "users with contributor role and above",
        "type": "attacker"
      },
      {
        "id": "product:Qi Blocks WordPress plugin",
        "keyphrase": "Qi Blocks WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:before 1.4",
        "keyphrase": "before 1.4",
        "type": "version"
      },
      {
        "id": "component:Countdown block",
        "keyphrase": "Countdown block",
        "type": "component"
      }
    ],
    "116": [
      {
        "id": "weakness:improper validation and escaping",
        "keyphrase": "improper validation and escaping",
        "type": "weakness"
      },
      {
        "id": "weakness:Cross-Site Scripting",
        "keyphrase": "Cross-Site Scripting",
        "type": "weakness"
      },
      {
        "id": "impact:Stored Cross-Site Scripting attacks",
        "keyphrase": "Stored Cross-Site Scripting attacks",
        "type": "impact"
      },
      {
        "id": "impact:Stored XSS",
        "keyphrase": "Stored XSS",
        "type": "impact"
      },
      {
        "id": "product:Qi Blocks WordPress plugin",
        "keyphrase": "Qi Blocks WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:before 1.4",
        "keyphrase": "before 1.4",
        "type": "version"
      },
      {
        "id": "component:Countdown block",
        "keyphrase": "Countdown block",
        "type": "component"
      }
    ],
    "862": [
      {
        "id": "weakness:improper validation and escaping",
        "keyphrase": "improper validation and escaping",
        "type": "weakness"
      },
      {
        "id": "weakness:Cross-Site Scripting",
        "keyphrase": "Cross-Site Scripting",
        "type": "weakness"
      },
      {
        "id": "impact:Stored Cross-Site Scripting attacks",
        "keyphrase": "Stored Cross-Site Scripting attacks",
        "type": "impact"
      },
      {
        "id": "impact:Stored XSS",
        "keyphrase": "Stored XSS",
        "type": "impact"
      },
      {
        "id": "attacker:users with contributor role and above",
        "keyphrase": "users with contributor role and above",
        "type": "attacker"
      },
      {
        "id": "product:Qi Blocks WordPress plugin",
        "keyphrase": "Qi Blocks WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:before 1.4",
        "keyphrase": "before 1.4",
        "type": "version"
      },
      {
        "id": "component:Countdown block",
        "keyphrase": "Countdown block",
        "type": "component"
      }
    ],
    "79": [
      {
        "id": "weakness:improper validation and escaping",
        "keyphrase": "improper validation and escaping",
        "type": "weakness"
      },
      {
        "id": "weakness:Cross-Site Scripting",
        "keyphrase": "Cross-Site Scripting",
        "type": "weakness"
      },
      {
        "id": "impact:Stored Cross-Site Scripting attacks",
        "keyphrase": "Stored Cross-Site Scripting attacks",
        "type": "impact"
      },
      {
        "id": "impact:Stored XSS",
        "keyphrase": "Stored XSS",
        "type": "impact"
      },
      {
        "id": "attacker:users with contributor role and above",
        "keyphrase": "users with contributor role and above",
        "type": "attacker"
      },
      {
        "id": "product:Qi Blocks WordPress plugin",
        "keyphrase": "Qi Blocks WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:before 1.4",
        "keyphrase": "before 1.4",
        "type": "version"
      },
      {
        "id": "component:Countdown block",
        "keyphrase": "Countdown block",
        "type": "component"
      }
    ],
    "89": [
      {
        "id": "weakness:improper validation and escaping",
        "keyphrase": "improper validation and escaping",
        "type": "weakness"
      }
    ],
    "434": [
      {
        "id": "weakness:Cross-Site Scripting",
        "keyphrase": "Cross-Site Scripting",
        "type": "weakness"
      },
      {
        "id": "impact:Stored Cross-Site Scripting attacks",
        "keyphrase": "Stored Cross-Site Scripting attacks",
        "type": "impact"
      },
      {
        "id": "impact:Stored XSS",
        "keyphrase": "Stored XSS",
        "type": "impact"
      },
      {
        "id": "attacker:users with contributor role and above",
        "keyphrase": "users with contributor role and above",
        "type": "attacker"
      },
      {
        "id": "product:Qi Blocks WordPress plugin",
        "keyphrase": "Qi Blocks WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:before 1.4",
        "keyphrase": "before 1.4",
        "type": "version"
      },
      {
        "id": "component:Countdown block",
        "keyphrase": "Countdown block",
        "type": "component"
      }
    ],
    "863": [
      {
        "id": "attacker:users with contributor role and above",
        "keyphrase": "users with contributor role and above",
        "type": "attacker"
      }
    ]
  }
}