{
  "retriever": "dense",
  "query": "In the Linux kernel, the following vulnerability has been resolvedblock/ioctl prefer different overflow checkRunning syzkaller with the newly reintroduced signed integer overflowsanitizer shows this report[ 62.982337] ------------[ cut here ]------------[ 62.985692] cgroup Invalid name[ 62.986211] UBSAN signed-integer-overflow in ../block/ioctl.c3646[ 62.989370] 9pnet_fd p9_fd_create_tcp (7343) problem connecting socket to 127.0.0.1[ 62.992992] 9223372036854775807 + 4095 cannot be represented in type long long[ 62.997827] 9pnet_fd p9_fd_create_tcp (7345) problem connecting socket to 127.0.0.1[ 62.999369] random crng reseeded on system resumption[ 63.000634] GUP no longer grows the stack in syz-executor.2 (7353) 20002000-20003000 (20001000)[ 63.000668] CPU 0 PID 7353 Comm syz-executor.2 Not tainted 6.8.0-rc2-00035-gb3ef86b5a957 #1[ 63.000677] Hardware name QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014[ 63.000682] Call Trace[ 63.000686] [ 63.000731] dump_stack_lvl+0x93/0xd0[ 63.000919] __get_user_pages+0x903/0xd30[ 63.001030] __gup_longterm_locked+0x153e/0x1ba0[ 63.001041] ? _raw_read_unlock_irqrestore+0x17/0x50[ 63.001072] ? try_get_folio+0x29c/0x2d0[ 63.001083] internal_get_user_pages_fast+0x1119/0x1530[ 63.001109] iov_iter_extract_pages+0x23b/0x580[ 63.001206] bio_iov_iter_get_pages+0x4de/0x1220[ 63.001235] iomap_dio_bio_iter+0x9b6/0x1410[ 63.001297] __iomap_dio_rw+0xab4/0x1810[ 63.001316] iomap_dio_rw+0x45/0xa0[ 63.001328] ext4_file_write_iter+0xdde/0x1390[ 63.001372] vfs_write+0x599/0xbd0[ 63.001394] ksys_write+0xc8/0x190[ 63.001403] do_syscall_64+0xd4/0x1b0[ 63.001421] ? arch_exit_to_user_mode_prepare+0x3a/0x60[ 63.001479] entry_SYSCALL_64_after_hwframe+0x6f/0x77[ 63.001535] RIP 00330x7f7fd3ebf539[ 63.001551] Code 28 00 00 00 75 05 48 83 c4 28 c3 e8 f1 14 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48[ 63.001562] RSP 002b00007f7fd32570c8 EFLAGS 00000246 ORIG_RAX 0000000000000001[ 63.001584] RAX ffffffffffffffda RBX 00007f7fd3ff3f80 RCX 00007f7fd3ebf539[ 63.001590] RDX 4db6d1e4f7e43360 RSI 0000000020000000 RDI 0000000000000004[ 63.001595] RBP 00007f7fd3f1e496 R08 0000000000000000 R09 0000000000000000[ 63.001599] R10 0000000000000000 R11 0000000000000246 R12 0000000000000000[ 63.001604] R13 0000000000000006 R14 00007f7fd3ff3f80 R15 00007ffd415ad2b8...[ 63.018142] ---[ end trace ]---Historically, the signed integer overflow sanitizer did not work in thekernel due to its interaction with `-fwrapv` but this has since beenchanged [1] in the newest version of Clang It was re-enabled in thekernel with Commit 557f8c582a9ba8ab (ubsan Reintroduce signed overflowsanitizer).Lets rework this overflow checking logic to not actually perform anoverflow during the check itself, thus avoiding the UBSAN splat.[1] https//github.com/llvm/llvm-project/pull/82432",
  "keyphrases": {
    "rootcause": [
      "Signed integer overflow during overflow check in block",
      "ioctl.c"
    ],
    "weakness": [
      "Incorrect overflow check logic leading to an actual overflow during the check itself."
    ]
  },
  "timestamp": "2025-07-13 12:47:38",
  "cve_id": "CVE-2024-41000",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "type": "Base",
      "score": 0.6230558142449654
    },
    {
      "cwe_id": "191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "type": "Base",
      "score": 0.6199107033464717
    },
    {
      "cwe_id": "194",
      "name": "Unexpected Sign Extension",
      "type": "Variant",
      "score": 0.5988774855660619
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "type": "Class",
      "score": 0.581557892266245
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "type": "Class",
      "score": 0.5797235948761399
    },
    {
      "cwe_id": "122",
      "name": "Heap-based Buffer Overflow",
      "type": "Variant",
      "score": 0.5787850668494009
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "type": "Base",
      "score": 0.5738964245759721
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "type": "Class",
      "score": 0.5732326232069146
    },
    {
      "cwe_id": "126",
      "name": "Buffer Over-read",
      "type": "Variant",
      "score": 0.5697181230278181
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "type": "Base",
      "score": 0.5688372950940508
    },
    {
      "cwe_id": "119",
      "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
      "type": "Class",
      "score": 0.5533502212015871
    },
    {
      "cwe_id": "197",
      "name": "Numeric Truncation Error",
      "type": "Base",
      "score": 0.5434286967131505
    },
    {
      "cwe_id": "674",
      "name": "Uncontrolled Recursion",
      "type": "Class",
      "score": 0.5429934245020775
    },
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "type": "Variant",
      "score": 0.5424800043333556
    },
    {
      "cwe_id": "193",
      "name": "Off-by-one Error",
      "type": "Base",
      "score": 0.5424301384012099
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "type": "Base",
      "score": 0.5409997442353389
    },
    {
      "cwe_id": "1342",
      "name": "Information Exposure through Microarchitectural State after Transient Execution",
      "type": "Base",
      "score": 0.5401821155315696
    },
    {
      "cwe_id": "1260",
      "name": "Improper Handling of Overlap Between Protected Memory Ranges",
      "type": "Base",
      "score": 0.5400954680118815
    },
    {
      "cwe_id": "121",
      "name": "Stack-based Buffer Overflow",
      "type": "Variant",
      "score": 0.5391677783247237
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "type": "Base",
      "score": 0.5383091082249714
    }
  ]
}