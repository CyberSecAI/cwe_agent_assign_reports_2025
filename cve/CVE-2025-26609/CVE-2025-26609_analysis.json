{
  "cve_id": "CVE-2025-26609",
  "description": "WeGIA is an open source Web Manager for Institutions with a focus on Portuguese language users. A **SQL Injection** vulnerability was discovered in the WeGIA application, `familiar_docfamiliar.php` endpoint. This vulnerability could allow an attacker to execute arbitrary SQL queries, allowing unauthorized access to sensitive information. This issue has been addressed in version 3.2.14 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "SQL Injection",
    "impact": "execute arbitrary SQL queries",
    "vector": "",
    "attacker": "attacker",
    "product": "WeGIA",
    "version": "before 3.2.14",
    "component": "familiar_docfamiliar.php endpoint"
  },
  "reference_content": "CVE-2025-26609 is related to the content. Here's the extracted information:\n\n**Root cause of vulnerability:**\nLack of validation of user input in the `familiar_docfamiliar.php` endpoint.\n\n**Weaknesses/vulnerabilities present:**\nSQL Injection (CWE-89, CWE-284)\n\n**Impact of exploitation:**\n- Retrieving sensitive data\n- DoS Attack (dropping SQL tables)\n- File Upload (under certain conditions)\n\n**Attack vectors:**\n- `POST /html/atendido/familiar_docfamiliar.php`\n- Parameters: `id_dependente`, `id_doc`\n- Exploitation possible even without being logged in due to improper execution termination after session validation.\n\n**Required attacker capabilities/position:**\nNo privileges required, no user interaction needed, network access is sufficient.\n\n**Mitigation or fix:**\nPatched versions: 3.2.13. Affected versions: <=3.2.11. (The content does not detail *how* the vulnerability was fixed, only that it was patched.)\n\n**PoC:**\n`curl -X POST \"localhost:8080/html/atendido/familiar_docfamiliar.php\" --data \"id_doc=999&id_dependente=1+AND+(SELECT+299+FROM+(SELECT(SLEEP(5)))a)&action=excluir\"`\nor\n`curl -X POST \"localhost:8080/html/atendido/familiar_docfamiliar.php\" --data \"id_doc=999+AND+(SELECT+299+FROM+(SELECT(SLEEP(5)))a)&id_dependente=1&action=excluir\"`\n\n**Severity:**\nCritical (CVSS score: 10.0)\n\n**CVSS v4 base metrics:**\nAV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:H/SC:H/SI:H/SA:H\n\nThis content provides more detail than the official CVE description (which is currently a placeholder).",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-89 | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 1.0 | Base | Allowed | Primary CWE: The vulnerability is due to the **lack of neutralization** of special elements in SQL commands. |\n| CWE-200 | Exposure of Sensitive Information When Querying External Resources | 0.6 | Base | Allowed | Secondary Candidate: The impact allows unauthorized access to sensitive information. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is CWE-89, which is a base-level CWE and directly reflects the **SQL Injection** vulnerability. CWE-200 is a potential secondary weakness, representing the information disclosure impact, and is at the Base level.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    cwe200[\"CWE-200: Exposure of Sensitive Information When Querying External Resources\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n\n    cwe89 -->|CHILDOF| cwe74\n    cwe200 -->|CANFOLLOW| cwe89\n    \n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe89 primary\n    class cwe200 secondary\n    class cwe74 tertiary\n```\n\n## Vulnerability Chain\n1.  **Root Cause:** **Lack of validation** of user input in the `familiar_docfamiliar.php` endpoint, leading to **improper neutralization** of special elements used in an SQL command (**SQL Injection**).\n2.  **Impact:** Execution of arbitrary SQL queries, unauthorized access to sensitive information.\n\n## Summary of Analysis\nThe vulnerability is primarily due to **SQL Injection** (CWE-89) in the `familiar_docfamiliar.php` endpoint. The CVE Reference Links Content Summary explicitly states \"**Weaknesses/vulnerabilities present:** SQL Injection (CWE-89, CWE-284)\". The supplied data provides the root cause and impacts, making CWE-89 the most appropriate primary CWE. CWE-200 is added to map the impact of sensitive information exposure. The primary CWE is at the optimal level of specificity, as it directly describes the **SQL Injection** vulnerability.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## Technical Explanation for CWE-89\nThe vulnerability allows an attacker to inject malicious SQL code into database queries due to **improper neutralization** of user-supplied input. This can lead to unauthorized data access, modification, or deletion. The security implication is a complete compromise of the database. CWE-89 is a base-level CWE that accurately represents the **SQL Injection** vulnerability.\n\n## Technical Explanation for CWE-200\nThe successful exploitation of the **SQL Injection** vulnerability allows the attacker to retrieve sensitive information from the database.\n\n## Other CWEs Considered and Rejected\n-   CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') - This is a class-level CWE and is too general. CWE-89 is a more specific base-level CWE for **SQL Injection**.\n-   CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') - This is related to XSS, which is not the vulnerability described.\n-   CWE-434: Unrestricted Upload of File with Dangerous Type - This is related to file upload vulnerabilities, which is not the vulnerability described.\n-   CWE-94: Improper Control of Generation of Code ('Code Injection') - While **SQL Injection** can lead to code execution in some cases, the primary weakness is the **improper neutralization** of SQL commands, not arbitrary code execution.\n-   CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') - This is related to path traversal vulnerabilities, which is not the vulnerability described.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-89 | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 1.0 | Base | Allowed | Primary CWE: The vulnerability is due to the **lack of neutralization** of special elements in SQL commands. |\n| CWE-200 | Exposure of Sensitive Information When Querying External Resources | 0.6 | Base | Allowed | Secondary Candidate: The impact allows unauthorized access to sensitive information. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is CWE-89, which is a base-level CWE and directly reflects the **SQL Injection** vulnerability. CWE-200 is a potential secondary weakness, representing the information disclosure impact, and is at the Base level.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    cwe200[\"CWE-200: Exposure of Sensitive Information When Querying External Resources\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n\n    cwe89 -->|CHILDOF| cwe74\n    cwe200 -->|CANFOLLOW| cwe89\n    \n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe89 primary\n    class cwe200 secondary\n    class cwe74 tertiary\n```\n\n## Vulnerability Chain\n1.  **Root Cause:** **Lack of validation** of user input in the `familiar_docfamiliar.php` endpoint, leading to **improper neutralization** of special elements used in an SQL command (**SQL Injection**).\n2.  **Impact:** Execution of arbitrary SQL queries, unauthorized access to sensitive information.\n\n## Summary of Analysis\nThe vulnerability is primarily due to **SQL Injection** (CWE-89) in the `familiar_docfamiliar.php` endpoint. The CVE Reference Links Content Summary explicitly states \"**Weaknesses/vulnerabilities present:** SQL Injection (CWE-89, CWE-284)\". The supplied data provides the root cause and impacts, making CWE-89 the most appropriate primary CWE. CWE-200 is added to map the impact of sensitive information exposure. The primary CWE is at the optimal level of specificity, as it directly describes the **SQL Injection** vulnerability.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## Technical Explanation for CWE-89\nThe vulnerability allows an attacker to inject malicious SQL code into database queries due to **improper neutralization** of user-supplied input. This can lead to unauthorized data access, modification, or deletion. The security implication is a complete compromise of the database. CWE-89 is a base-level CWE that accurately represents the **SQL Injection** vulnerability.\n\n## Technical Explanation for CWE-200\nThe successful exploitation of the **SQL Injection** vulnerability allows the attacker to retrieve sensitive information from the database.\n\n## Other CWEs Considered and Rejected\n-   CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') - This is a class-level CWE and is too general. CWE-89 is a more specific base-level CWE for **SQL Injection**.\n-   CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') - This is related to XSS, which is not the vulnerability described.\n-   CWE-434: Unrestricted Upload of File with Dangerous Type - This is related to file upload vulnerabilities, which is not the vulnerability described.\n-   CWE-94: Improper Control of Generation of Code ('Code Injection') - While **SQL Injection** can lead to code execution in some cases, the primary weakness is the **improper neutralization** of SQL commands, not arbitrary code execution.\n-   CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') - This is related to path traversal vulnerabilities, which is not the vulnerability described.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n**Chain starting from CWE-94:**\n- 94 (Improper Control of Generation of Code ('Code Injection')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: SQL injection",
        "match_reason": "exact_match_whole_phrase"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "502",
        "name": "Deserialization of Untrusted Data",
        "source": "sparse"
      },
      "similarity": 386.1386628392769
    },
    {
      "metadata": {
        "doc_id": "1336",
        "name": "Improper Neutralization of Special Elements Used in a Template Engine",
        "source": "sparse"
      },
      "similarity": 379.4861965534991
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 379.2915892877525
    },
    {
      "metadata": {
        "doc_id": "94",
        "name": "Improper Control of Generation of Code ('Code Injection')",
        "source": "sparse"
      },
      "similarity": 371.2509644306335
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 369.00863728289977
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 364.3617518796513
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 362.46380527611
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "type": "Base",
        "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
        "keyphrase_source": "weakness:SQL Injection",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5101518677835299,
            "graph": 2.550870805748187
          }
        }
      },
      "similarity": 0.5101518677835299
    },
    {
      "doc_id": "73",
      "text": "CWE-73: External Control of File Name or Path",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "73",
        "name": "External Control of File Name or Path",
        "type": "base",
        "original_content": "CWE-73: External Control of File Name or Path",
        "relationships": [
          {
            "source_id": "73",
            "target_id": "114",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "59",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "434",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "41",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "22",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "20",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "700"
            }
          },
          {
            "source_id": "73",
            "target_id": "610",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "642",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "99",
            "target_id": "73",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "642",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "610",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "59",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "434",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "22",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "20",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "700"
            }
          },
          {
            "source_id": "114",
            "target_id": "73",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "434",
                  "73",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "434"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "434",
                  "73",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "434"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "73",
                  "434",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "434"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-94",
      "CWE-22",
      "CWE-79",
      "CWE-74",
      "CWE-284",
      "CWE-200",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}