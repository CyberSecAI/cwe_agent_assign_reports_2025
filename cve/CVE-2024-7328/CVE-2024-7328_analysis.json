{
  "cve_id": "CVE-2024-7328",
  "description": "A vulnerability, which was classified as problematic, has been found in YouDianCMS 7. This issue affects some unknown processing of the file /t.php?action=phpinfo. The manipulation leads to information disclosure. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-273251. NOTE The vendor was contacted early about this disclosure but did not respond in any way.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "",
    "impact": "information disclosure",
    "vector": "",
    "attacker": "",
    "product": "YouDianCMS",
    "version": "7",
    "component": "/t.php?action=phpinfo"
  },
  "reference_content": "Based on the provided information, here's a breakdown of the vulnerability:\n\n**Root Cause:**\n\n*   The vulnerability stems from improper access controls in YouDianCMS 7, specifically related to the `t.php` and `upload/t.php` files. These files are accessible without proper authentication or authorization checks.\n\n**Weaknesses/Vulnerabilities:**\n\n*   **Information Disclosure:** Accessing `/t.php` or `/upload/t.php` reveals sensitive information, including the web server's root directory path.\n*   **PHPinfo Exposure:**  The `/t.php?action=phpinfo` path enables access to the PHPinfo page, which discloses a wealth of server configuration details. This includes the PHP version, server information, environment variables, loaded modules, and potentially other sensitive data.\n\n**Impact of Exploitation:**\n\n*   **Sensitive Information Leakage:** Exposure of the root directory and detailed server configurations can provide attackers with crucial information for planning further attacks.\n*   **Potential for Further Attacks:** Attackers can leverage the detailed server information disclosed through PHPinfo to identify vulnerabilities in the server software or specific modules, paving the way for more sophisticated attacks.\n\n**Attack Vectors:**\n\n*   **Direct URL Access:** Attackers can exploit the vulnerability by directly accessing the vulnerable URLs (`/t.php`, `/upload/t.php`, and `/t.php?action=phpinfo`) via a web browser or other HTTP client.\n\n**Required Attacker Capabilities/Position:**\n\n*   **Network Access:** The attacker needs to have network connectivity to the vulnerable YouDianCMS instance.\n*   **No authentication required:**  The vulnerability can be exploited without any authentication or authorization.\n\n**Summary of Information:**\n\nThe provided content details an information disclosure vulnerability in YouDianCMS 7, where accessing specific files (`/t.php` or `/upload/t.php`) leaks the server's root directory, and the `phpinfo` functionality is accessible via `/t.php?action=phpinfo`, exposing a wide range of sensitive server configuration data, which can aid attackers in planning further attacks.\n\nThis information is more detailed than a typical CVE description placeholder would provide.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-425 | Direct Request ('Forced Browsing') | 0.9 | Base | Primary | Allowed |\n| CWE-497 | Exposure of Sensitive System Information to an Unauthorized Control Sphere | 0.7 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary relationship that influenced my decision was the ChildOf relationship, specifically how CWE-425 is a child of higher-level authorization CWEs. I also considered the potential for a chain relationship where **improper access control** (CWE-425) leads directly to **information disclosure** (CWE-497). The base abstraction level was chosen for both CWEs to represent the specific nature of the weaknesses.\n\n```mermaid\ngraph TD\n    cwe425[\"CWE-425: Direct Request ('Forced Browsing')\"]\n    cwe497[\"CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\"]\n    cwe288[\"CWE-288: Authentication Bypass Using an Alternate Path or Channel\"]\n    cwe862[\"CWE-862: Missing Authorization\"]\n    \n    cwe425 -->|CHILDOF| cwe288\n    cwe425 -->|CHILDOF| cwe862\n    cwe425 -->|CANPRECEDE| cwe497\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe425 primary\n    class cwe497 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **improper access control** (CWE-425), allowing unauthorized direct requests. This then leads to **information disclosure** (CWE-497) by exposing the server's root directory and PHP information.\n\n## Summary of Analysis\nThe initial analysis focused on the **information disclosure** aspect, but a deeper dive into the root cause revealed that the core issue is the **lack of proper access control**. The evidence from the \"CVE Reference Links Content Summary\" clearly states that the files are accessible \"without proper authentication or authorization checks\". This supports the selection of CWE-425. CWE-497 is then mapped as a secondary weakness, as it directly results from the **improper access control**. Both selected CWEs are at the base level, providing sufficient specificity for the vulnerability. The retriever results and graph relationships helped confirm the relevance of these CWEs.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**Justification:** The vulnerability description explicitly states that the affected files are accessible without proper authentication or authorization checks. This aligns perfectly with the description of CWE-425, which addresses the failure to enforce appropriate authorization on restricted URLs. The evidence: *\"These files are accessible without proper authentication or authorization checks.\"*\n## CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\n**Abstraction Level**: Base\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nThe product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**Justification:** Because the file is accessible without authentication (CWE-425), it leads to the exposure of sensitive information. The evidence: *\"Accessing `/t.php` or `/upload/t.php` reveals sensitive information, including the web server's root directory path.\"*\n\n## CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**Justification:** Not used. While XSS is a common web vulnerability, the description doesn't indicate any user-controlled input being reflected without sanitization. The vulnerability is about directly accessing files that disclose sensitive information.\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**Justification:** Not used. The vulnerability description doesn't indicate any file upload functionality. The issue is about directly accessing existing files.\n\n## CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 1027.11\n**Source**: sparse\n\n**Description**:\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**Justification:** Not used. The vulnerability description doesn't suggest any SQL interaction or **improper neutralization** of SQL elements.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-425 | Direct Request ('Forced Browsing') | 0.9 | Base | Primary | Allowed |\n| CWE-497 | Exposure of Sensitive System Information to an Unauthorized Control Sphere | 0.7 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary relationship that influenced my decision was the ChildOf relationship, specifically how CWE-425 is a child of higher-level authorization CWEs. I also considered the potential for a chain relationship where **improper access control** (CWE-425) leads directly to **information disclosure** (CWE-497). The base abstraction level was chosen for both CWEs to represent the specific nature of the weaknesses.\n\n```mermaid\ngraph TD\n    cwe425[\"CWE-425: Direct Request ('Forced Browsing')\"]\n    cwe497[\"CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\"]\n    cwe288[\"CWE-288: Authentication Bypass Using an Alternate Path or Channel\"]\n    cwe862[\"CWE-862: Missing Authorization\"]\n    \n    cwe425 -->|CHILDOF| cwe288\n    cwe425 -->|CHILDOF| cwe862\n    cwe425 -->|CANPRECEDE| cwe497\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe425 primary\n    class cwe497 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **improper access control** (CWE-425), allowing unauthorized direct requests. This then leads to **information disclosure** (CWE-497) by exposing the server's root directory and PHP information.\n\n## Summary of Analysis\nThe initial analysis focused on the **information disclosure** aspect, but a deeper dive into the root cause revealed that the core issue is the **lack of proper access control**. The evidence from the \"CVE Reference Links Content Summary\" clearly states that the files are accessible \"without proper authentication or authorization checks\". This supports the selection of CWE-425. CWE-497 is then mapped as a secondary weakness, as it directly results from the **improper access control**. Both selected CWEs are at the base level, providing sufficient specificity for the vulnerability. The retriever results and graph relationships helped confirm the relevance of these CWEs.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**Justification:** The vulnerability description explicitly states that the affected files are accessible without proper authentication or authorization checks. This aligns perfectly with the description of CWE-425, which addresses the failure to enforce appropriate authorization on restricted URLs. The evidence: *\"These files are accessible without proper authentication or authorization checks.\"*\n## CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\n**Abstraction Level**: Base\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nThe product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**Justification:** Because the file is accessible without authentication (CWE-425), it leads to the exposure of sensitive information. The evidence: *\"Accessing `/t.php` or `/upload/t.php` reveals sensitive information, including the web server's root directory path.\"*\n\n## CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**Justification:** Not used. While XSS is a common web vulnerability, the description doesn't indicate any user-controlled input being reflected without sanitization. The vulnerability is about directly accessing files that disclose sensitive information.\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**Justification:** Not used. The vulnerability description doesn't indicate any file upload functionality. The issue is about directly accessing existing files.\n\n## CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 1027.11\n**Source**: sparse\n\n**Description**:\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**Justification:** Not used. The vulnerability description doesn't suggest any SQL interaction or **improper neutralization** of SQL elements.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-288:**\n- 288 (Authentication Bypass Using an Alternate Path or Channel) - ROOT\n\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 178.9589597537076
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 177.22910911050957
    },
    {
      "metadata": {
        "doc_id": "1241",
        "name": "Use of Predictable Algorithm in Random Number Generator",
        "source": "sparse"
      },
      "similarity": 140.95647347256502
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse"
      },
      "similarity": 137.80452587009756
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 136.50660463057264
    },
    {
      "metadata": {
        "doc_id": "125",
        "name": "Out-of-bounds Read",
        "source": "sparse"
      },
      "similarity": 136.47697008825392
    },
    {
      "metadata": {
        "doc_id": "1336",
        "name": "Improper Neutralization of Special Elements Used in a Template Engine",
        "source": "sparse"
      },
      "similarity": 136.30704819545744
    },
    {
      "metadata": {
        "doc_id": "266",
        "name": "Incorrect Privilege Assignment",
        "source": "sparse"
      },
      "similarity": 135.89266520016912
    },
    {
      "metadata": {
        "doc_id": "96",
        "name": "Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')",
        "type": "Base",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before inserting the input into an executable resource, such as a library, configuration file, or template.",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.5938288050017371
          }
        }
      },
      "similarity": 0.5938288050017371
    },
    {
      "doc_id": "425",
      "text": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
      "score": 0.6238586821829774,
      "metadata": {
        "doc_id": "425",
        "name": "Direct Request ('Forced Browsing')",
        "type": "Base",
        "extended_description": "Web applications susceptible to direct request attacks often make the false assumption that such resources can only be reached through a given navigation path and so only apply authorization at certain points in the path.",
        "alternate_terms": [
          "forced browsing"
        ],
        "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
        "relationships": [
          {
            "source_id": "425",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "424",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "288",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "862",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "425",
            "target_id": "862",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "862",
            "target_id": "425",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "424",
            "target_id": "425",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "288",
            "target_id": "425",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "source": "graph",
        "sources": [
          "vector",
          "graph"
        ],
        "vector_score": 0.6238586821829774,
        "graph_score": 3.4200400000000006,
        "score_components": {
          "relationship_chain": 0.6,
          "explicit_mention": 1.0,
          "abstraction_path": 0.9,
          "sequence_path": 0.5760000000000002
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "89",
                  "456",
                  "CANFOLLOW"
                ],
                [
                  "456",
                  "98",
                  "CANPRECEDE"
                ],
                [
                  "98",
                  "425",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.6,
              "type": "relationship_chain",
              "source": "89"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "79",
                  "184",
                  "CANFOLLOW"
                ],
                [
                  "184",
                  "98",
                  "CANPRECEDE"
                ],
                [
                  "98",
                  "425",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.5760000000000002,
              "type": "vulnerability_sequence_forward",
              "source": "79"
            }
          }
        },
        "is_explicit": true,
        "abstraction_level": "base",
        "position": "after",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5825566958588235,
            "graph": 2.301567472873191
          }
        }
      },
      "similarity": 2.301567472873191
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-288",
      "CWE-89",
      "CWE-862",
      "CWE-79",
      "CWE-497",
      "CWE-425",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}