{
  "cve_id": "CVE-2025-0959",
  "description": "The Eventer - WordPress Event & Booking Manager Plugin plugin for WordPress is vulnerable to SQL Injection via the reg_id parameter in all versions up to, and including, 3.9.9.2 due to **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**. This makes it possible for authenticated attackers, with Subscriber-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.",
  "key_phrases": {
    "rootcause": [
      "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
      "insufficient escaping on user-supplied parameter and lack of sufficient preparation"
    ],
    "weakness": "SQL injection",
    "impact": [
      "append additional SQL queries into already existing queries",
      "extract sensitive information from the database"
    ],
    "vector": "",
    "attacker": "authenticated attackers",
    "product": "Eventer - WordPress Event & Booking Manager Plugin",
    "version": "all versions up to and including 3.9.9.2",
    "component": "reg_id parameter"
  },
  "reference_content": null,
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-89 | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 1.0 | Base | Primary | Allowed |\n| CWE-116 | Improper Encoding or Escaping of Output | 0.7 | Class | Secondary | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is CWE-89, which is a Base level CWE and a child of CWE-74 (Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')). CWE-89 is also related to CWE-943 (Improper Neutralization of Special Elements in Data Query Logic) through a child-of relationship. CWE-116, a Class-level CWE, is included as a secondary weakness due to the **insufficient escaping** aspect mentioned in the description.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n    cwe943[\"CWE-943: Improper Neutralization of Special Elements in Data Query Logic\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n\n    cwe89 -->|CHILDOF| cwe74\n    cwe89 -->|CHILDOF| cwe943\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe89 primary\n    class cwe74,cwe943,cwe116 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **insufficient escaping** and **lack of sufficient preparation** in the SQL query, leading to the **SQL injection** vulnerability. This allows attackers to **append additional SQL queries** and **extract sensitive information from the database**.\n\nRoot Cause: **Insufficient escaping** and **lack of sufficient preparation** -> Weakness: **SQL injection** -> Impact: **append additional SQL queries** -> Impact: **extract sensitive information from the database**.\n\n## Summary of Analysis\nThe primary CWE, CWE-89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')), directly addresses the core issue described in the vulnerability: the plugin does not properly neutralize special elements in the user-supplied `reg_id` parameter before using it in an SQL command. This **lack of neutralization** allows attackers to inject malicious SQL code.\n\nThe secondary CWE, CWE-116 (Improper Encoding or Escaping of Output), accounts for the **insufficient escaping** aspect of the vulnerability, as it relates to the preparation of structured messages.\n\nThe vulnerability description explicitly states \"**insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**\". This statement provides strong evidence for both CWE-89 and CWE-116.\n\nThe graph relationships confirm that CWE-89 is a specific type of injection (child of CWE-74), making it more precise than a general injection CWE.\n\nCWE-89 is at the optimal level of specificity (Base) because it directly describes the SQL injection vulnerability.\nCWE-116 is a Class because the context is specifically about SQL.\n\nOther CWEs Considered:\n\n*   CWE-74 (Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')): This is a parent of CWE-89 but is too general. The specific vulnerability is SQL injection, so CWE-89 is more appropriate.\n*   CWE-90 (Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')): This is similar to CWE-89, but specific to LDAP queries. It's not relevant because the vulnerability involves SQL queries.\n*   CWE-352 (Cross-Site Request Forgery (CSRF)): This is not applicable because the vulnerability is related to SQL injection, not CSRF.\n*   CWE-790 (Improper Filtering of Special Elements): This is too general and does not specifically address SQL injection.\n*   CWE-862 (Missing Authorization): While the attacker needs to be authenticated, the core issue is the SQL injection, not a missing authorization check.\n*   CWE-502 (Deserialization of Untrusted Data): This is not applicable as the vulnerability is related to SQL injection, not deserialization.\n*   CWE-943 (Improper Neutralization of Special Elements in Data Query Logic): Similar to CWE-89 but focuses on the logic of the query. Since the vulnerability involves injecting SQL commands, CWE-89 is a better fit.\n*   CWE-863 (Incorrect Authorization): Similar to CWE-862. Not a fit because the core issue is related to SQL injection.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-89 | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 1.0 | Base | Primary | Allowed |\n| CWE-116 | Improper Encoding or Escaping of Output | 0.7 | Class | Secondary | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is CWE-89, which is a Base level CWE and a child of CWE-74 (Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')). CWE-89 is also related to CWE-943 (Improper Neutralization of Special Elements in Data Query Logic) through a child-of relationship. CWE-116, a Class-level CWE, is included as a secondary weakness due to the **insufficient escaping** aspect mentioned in the description.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n    cwe943[\"CWE-943: Improper Neutralization of Special Elements in Data Query Logic\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n\n    cwe89 -->|CHILDOF| cwe74\n    cwe89 -->|CHILDOF| cwe943\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe89 primary\n    class cwe74,cwe943,cwe116 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **insufficient escaping** and **lack of sufficient preparation** in the SQL query, leading to the **SQL injection** vulnerability. This allows attackers to **append additional SQL queries** and **extract sensitive information from the database**.\n\nRoot Cause: **Insufficient escaping** and **lack of sufficient preparation** -> Weakness: **SQL injection** -> Impact: **append additional SQL queries** -> Impact: **extract sensitive information from the database**.\n\n## Summary of Analysis\nThe primary CWE, CWE-89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')), directly addresses the core issue described in the vulnerability: the plugin does not properly neutralize special elements in the user-supplied `reg_id` parameter before using it in an SQL command. This **lack of neutralization** allows attackers to inject malicious SQL code.\n\nThe secondary CWE, CWE-116 (Improper Encoding or Escaping of Output), accounts for the **insufficient escaping** aspect of the vulnerability, as it relates to the preparation of structured messages.\n\nThe vulnerability description explicitly states \"**insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**\". This statement provides strong evidence for both CWE-89 and CWE-116.\n\nThe graph relationships confirm that CWE-89 is a specific type of injection (child of CWE-74), making it more precise than a general injection CWE.\n\nCWE-89 is at the optimal level of specificity (Base) because it directly describes the SQL injection vulnerability.\nCWE-116 is a Class because the context is specifically about SQL.\n\nOther CWEs Considered:\n\n*   CWE-74 (Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')): This is a parent of CWE-89 but is too general. The specific vulnerability is SQL injection, so CWE-89 is more appropriate.\n*   CWE-90 (Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')): This is similar to CWE-89, but specific to LDAP queries. It's not relevant because the vulnerability involves SQL queries.\n*   CWE-352 (Cross-Site Request Forgery (CSRF)): This is not applicable because the vulnerability is related to SQL injection, not CSRF.\n*   CWE-790 (Improper Filtering of Special Elements): This is too general and does not specifically address SQL injection.\n*   CWE-862 (Missing Authorization): While the attacker needs to be authenticated, the core issue is the SQL injection, not a missing authorization check.\n*   CWE-502 (Deserialization of Untrusted Data): This is not applicable as the vulnerability is related to SQL injection, not deserialization.\n*   CWE-943 (Improper Neutralization of Special Elements in Data Query Logic): Similar to CWE-89 but focuses on the logic of the query. Since the vulnerability involves injecting SQL commands, CWE-89 is a better fit.\n*   CWE-863 (Incorrect Authorization): Similar to CWE-862. Not a fit because the core issue is related to SQL injection.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-90:**\n- 90 (Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')) - ROOT\n\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user-supplied parameter and lack of sufficient preparation",
            "keyphrase": "insufficient escaping on user-supplied parameter and lack of sufficient preparation",
            "type": "rootcause"
          },
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "impact:append additional SQL queries into already existing queries",
            "keyphrase": "append additional SQL queries into already existing queries",
            "type": "impact"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "attacker:authenticated attackers",
            "keyphrase": "authenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:Eventer - WordPress Event & Booking Manager Plugin",
            "keyphrase": "Eventer - WordPress Event & Booking Manager Plugin",
            "type": "product"
          },
          {
            "id": "version:all versions up to and including 3.9.9.2",
            "keyphrase": "all versions up to and including 3.9.9.2",
            "type": "version"
          },
          {
            "id": "component:reg_id parameter",
            "keyphrase": "reg_id parameter",
            "type": "component"
          }
        ]
      },
      "similarity": 787.9919228673931
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user-supplied parameter and lack of sufficient preparation",
            "keyphrase": "insufficient escaping on user-supplied parameter and lack of sufficient preparation",
            "type": "rootcause"
          },
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "impact:append additional SQL queries into already existing queries",
            "keyphrase": "append additional SQL queries into already existing queries",
            "type": "impact"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "attacker:authenticated attackers",
            "keyphrase": "authenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:Eventer - WordPress Event & Booking Manager Plugin",
            "keyphrase": "Eventer - WordPress Event & Booking Manager Plugin",
            "type": "product"
          },
          {
            "id": "version:all versions up to and including 3.9.9.2",
            "keyphrase": "all versions up to and including 3.9.9.2",
            "type": "version"
          },
          {
            "id": "component:reg_id parameter",
            "keyphrase": "reg_id parameter",
            "type": "component"
          }
        ]
      },
      "similarity": 769.3191419228826
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user-supplied parameter and lack of sufficient preparation",
            "keyphrase": "insufficient escaping on user-supplied parameter and lack of sufficient preparation",
            "type": "rootcause"
          },
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "impact:append additional SQL queries into already existing queries",
            "keyphrase": "append additional SQL queries into already existing queries",
            "type": "impact"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "attacker:authenticated attackers",
            "keyphrase": "authenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:Eventer - WordPress Event & Booking Manager Plugin",
            "keyphrase": "Eventer - WordPress Event & Booking Manager Plugin",
            "type": "product"
          },
          {
            "id": "version:all versions up to and including 3.9.9.2",
            "keyphrase": "all versions up to and including 3.9.9.2",
            "type": "version"
          },
          {
            "id": "component:reg_id parameter",
            "keyphrase": "reg_id parameter",
            "type": "component"
          }
        ]
      },
      "similarity": 730.2372006030243
    },
    {
      "metadata": {
        "doc_id": "90",
        "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "impact:append additional SQL queries into already existing queries",
            "keyphrase": "append additional SQL queries into already existing queries",
            "type": "impact"
          }
        ]
      },
      "similarity": 690.4570039836733
    },
    {
      "metadata": {
        "doc_id": "790",
        "name": "Improper Filtering of Special Elements",
        "source": "sparse",
        "original_content": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user-supplied parameter and lack of sufficient preparation",
            "keyphrase": "insufficient escaping on user-supplied parameter and lack of sufficient preparation",
            "type": "rootcause"
          },
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "component:reg_id parameter",
            "keyphrase": "reg_id parameter",
            "type": "component"
          }
        ]
      },
      "similarity": 667.056556409327
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse",
        "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on user-supplied parameter and lack of sufficient preparation",
            "keyphrase": "insufficient escaping on user-supplied parameter and lack of sufficient preparation",
            "type": "rootcause"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "attacker:authenticated attackers",
            "keyphrase": "authenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:Eventer - WordPress Event & Booking Manager Plugin",
            "keyphrase": "Eventer - WordPress Event & Booking Manager Plugin",
            "type": "product"
          },
          {
            "id": "version:all versions up to and including 3.9.9.2",
            "keyphrase": "all versions up to and including 3.9.9.2",
            "type": "version"
          },
          {
            "id": "component:reg_id parameter",
            "keyphrase": "reg_id parameter",
            "type": "component"
          }
        ]
      },
      "similarity": 590.0517265094859
    },
    {
      "metadata": {
        "doc_id": "502",
        "name": "Deserialization of Untrusted Data",
        "source": "sparse",
        "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.",
        "keyphrase_sources": [
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          }
        ]
      },
      "similarity": 473.0021525753321
    },
    {
      "metadata": {
        "doc_id": "943",
        "name": "Improper Neutralization of Special Elements in Data Query Logic",
        "source": "sparse",
        "original_content": "The product generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query.",
        "keyphrase_sources": [
          {
            "id": "impact:append additional SQL queries into already existing queries",
            "keyphrase": "append additional SQL queries into already existing queries",
            "type": "impact"
          }
        ]
      },
      "similarity": 192.3822418965902
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse",
        "original_content": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.",
        "keyphrase_sources": [
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "attacker:authenticated attackers",
            "keyphrase": "authenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:Eventer - WordPress Event & Booking Manager Plugin",
            "keyphrase": "Eventer - WordPress Event & Booking Manager Plugin",
            "type": "product"
          },
          {
            "id": "version:all versions up to and including 3.9.9.2",
            "keyphrase": "all versions up to and including 3.9.9.2",
            "type": "version"
          }
        ]
      },
      "similarity": 182.38086396129745
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-90",
      "CWE-89",
      "CWE-502",
      "CWE-863",
      "CWE-116",
      "CWE-862",
      "CWE-790",
      "CWE-352",
      "CWE-74",
      "CWE-943"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "116": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user-supplied parameter and lack of sufficient preparation",
        "keyphrase": "insufficient escaping on user-supplied parameter and lack of sufficient preparation",
        "type": "rootcause"
      },
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "impact:append additional SQL queries into already existing queries",
        "keyphrase": "append additional SQL queries into already existing queries",
        "type": "impact"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "attacker:authenticated attackers",
        "keyphrase": "authenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:Eventer - WordPress Event & Booking Manager Plugin",
        "keyphrase": "Eventer - WordPress Event & Booking Manager Plugin",
        "type": "product"
      },
      {
        "id": "version:all versions up to and including 3.9.9.2",
        "keyphrase": "all versions up to and including 3.9.9.2",
        "type": "version"
      },
      {
        "id": "component:reg_id parameter",
        "keyphrase": "reg_id parameter",
        "type": "component"
      }
    ],
    "89": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user-supplied parameter and lack of sufficient preparation",
        "keyphrase": "insufficient escaping on user-supplied parameter and lack of sufficient preparation",
        "type": "rootcause"
      },
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "impact:append additional SQL queries into already existing queries",
        "keyphrase": "append additional SQL queries into already existing queries",
        "type": "impact"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "attacker:authenticated attackers",
        "keyphrase": "authenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:Eventer - WordPress Event & Booking Manager Plugin",
        "keyphrase": "Eventer - WordPress Event & Booking Manager Plugin",
        "type": "product"
      },
      {
        "id": "version:all versions up to and including 3.9.9.2",
        "keyphrase": "all versions up to and including 3.9.9.2",
        "type": "version"
      },
      {
        "id": "component:reg_id parameter",
        "keyphrase": "reg_id parameter",
        "type": "component"
      }
    ],
    "352": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user-supplied parameter and lack of sufficient preparation",
        "keyphrase": "insufficient escaping on user-supplied parameter and lack of sufficient preparation",
        "type": "rootcause"
      },
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "impact:append additional SQL queries into already existing queries",
        "keyphrase": "append additional SQL queries into already existing queries",
        "type": "impact"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "attacker:authenticated attackers",
        "keyphrase": "authenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:Eventer - WordPress Event & Booking Manager Plugin",
        "keyphrase": "Eventer - WordPress Event & Booking Manager Plugin",
        "type": "product"
      },
      {
        "id": "version:all versions up to and including 3.9.9.2",
        "keyphrase": "all versions up to and including 3.9.9.2",
        "type": "version"
      },
      {
        "id": "component:reg_id parameter",
        "keyphrase": "reg_id parameter",
        "type": "component"
      }
    ],
    "90": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "impact:append additional SQL queries into already existing queries",
        "keyphrase": "append additional SQL queries into already existing queries",
        "type": "impact"
      }
    ],
    "790": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user-supplied parameter and lack of sufficient preparation",
        "keyphrase": "insufficient escaping on user-supplied parameter and lack of sufficient preparation",
        "type": "rootcause"
      },
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "component:reg_id parameter",
        "keyphrase": "reg_id parameter",
        "type": "component"
      }
    ],
    "862": [
      {
        "id": "rootcause:insufficient escaping on user-supplied parameter and lack of sufficient preparation",
        "keyphrase": "insufficient escaping on user-supplied parameter and lack of sufficient preparation",
        "type": "rootcause"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "attacker:authenticated attackers",
        "keyphrase": "authenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:Eventer - WordPress Event & Booking Manager Plugin",
        "keyphrase": "Eventer - WordPress Event & Booking Manager Plugin",
        "type": "product"
      },
      {
        "id": "version:all versions up to and including 3.9.9.2",
        "keyphrase": "all versions up to and including 3.9.9.2",
        "type": "version"
      },
      {
        "id": "component:reg_id parameter",
        "keyphrase": "reg_id parameter",
        "type": "component"
      }
    ],
    "502": [
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      }
    ],
    "943": [
      {
        "id": "impact:append additional SQL queries into already existing queries",
        "keyphrase": "append additional SQL queries into already existing queries",
        "type": "impact"
      }
    ],
    "863": [
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "attacker:authenticated attackers",
        "keyphrase": "authenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:Eventer - WordPress Event & Booking Manager Plugin",
        "keyphrase": "Eventer - WordPress Event & Booking Manager Plugin",
        "type": "product"
      },
      {
        "id": "version:all versions up to and including 3.9.9.2",
        "keyphrase": "all versions up to and including 3.9.9.2",
        "type": "version"
      }
    ]
  }
}