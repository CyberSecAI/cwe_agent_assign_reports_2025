{
  "cve_id": "CVE-2025-23016",
  "description": "FastCGI fcgi2 (aka fcgi) 2.x through 2.4.4 has an **integer overflow** (and resultant heap-based buffer overflow) via crafted nameLen or valueLen values in data to the IPC socket. This occurs in ReadParams in fcgiapp.c.",
  "key_phrases": {
    "component": "ReadParams in fcgiapp.c",
    "rootcause": "integer overflow",
    "vector": "crafted nameLen or valueLen values",
    "weakness": "integer overflow, heap-based buffer overflow",
    "product": "FastCGI fcgi2 (aka fcgi)",
    "impact": "",
    "attacker": "",
    "version": "2.x through 2.4.4"
  },
  "reference_content": "```text\nRoot cause of vulnerability:\n- An integer overflow in the ReadParams function due to improper handling of nameLen and valueLen values, which are read from the input data.\n- This leads to a heap-based buffer overflow.\n\nWeaknesses/vulnerabilities present:\n- Integer overflow (CWE-190)\n- Heap-based buffer overflow\n\nImpact of exploitation:\n- Remote Code Execution (RCE)\n\nAttack vectors:\n- Sending crafted data to the IPC socket.\n- The vulnerability can be triggered through a web server that uses the FastCGI library.\n- The FastCGI socket is exposed.\n\nRequired attacker capabilities/position:\n- The attacker needs to send crafted data to the FastCGI socket.\n- The attacker might need another vulnerability (SSRF) to be able to access the socket.\n\nMitigation or fix:\n- Update to version 2.4.5 of the FastCGI library or higher.\n- Limiting potential remote access to the FastCGI socket by declaring it as a UNIX socket.\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-190 | Integer Overflow or Wraparound | 1.0 | Base | Allowed | Primary CWE. Root cause of the vulnerability. |\n| CWE-122 | Heap-based Buffer Overflow | 1.0 | Variant | Allowed | Secondary CWE. Resulting impact of the integer overflow. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is CWE-190 Integer Overflow or Wraparound, which can directly lead to CWE-122 Heap-based Buffer Overflow. CWE-190 is a parent of CWE-680: Integer Overflow to Buffer Overflow, but the description explicitly mentions a heap-based buffer overflow, making CWE-122 a better fit. CWE-119 is a high-level class, and less specific than CWE-122.\n\n```mermaid\ngraph TD\n    cwe190[\"CWE-190: Integer Overflow or Wraparound\"]\n    cwe122[\"CWE-122: Heap-based Buffer Overflow\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\"]\n    cwe680[\"CWE-680: Integer Overflow to Buffer Overflow\"]\n    \n    cwe122 -->|CHILDOF| cwe119\n    cwe190 -->|CANPRECEDE| cwe122\n    cwe680 -->|CHILDOF| cwe190\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe190 primary\n    class cwe122 secondary\n    class cwe119,cwe680 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with CWE-190, an **integer overflow** due to crafted nameLen or valueLen values, which leads to CWE-122, a heap-based buffer overflow.\n\n## Summary of Analysis\nThe vulnerability description clearly states that an **integer overflow** leads to a heap-based buffer overflow. The \"CVE Reference Links Content Summary\" confirms this.\n\n*   \"Root cause of vulnerability: An integer overflow in the ReadParams function due to improper handling of nameLen and valueLen values, which are read from the input data.\"\n*   \"This leads to a heap-based buffer overflow.\"\n\nCWE-190 (Integer Overflow or Wraparound) is the most accurate root cause, and CWE-122 (Heap-based Buffer Overflow) represents the direct consequence.\n\nOther CWEs were considered:\n\n*   CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer): This is a broader category and less specific than CWE-122.\n*   CWE-131 (Incorrect Calculation of Buffer Size): While related, the root cause is the integer overflow, not necessarily an incorrect calculation of the buffer size directly.\n*   CWE-120 (Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')): This is more specific to buffer copy operations, while the overflow in this case is a result of the integer overflow when allocating the buffer.\n\nThe selected CWEs are at the optimal level of specificity because they accurately represent the root cause (integer overflow) and the direct consequence (heap-based buffer overflow) as described in the vulnerability details.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-190 | Integer Overflow or Wraparound | 1.0 | Base | Allowed | Primary CWE. Root cause of the vulnerability. |\n| CWE-122 | Heap-based Buffer Overflow | 1.0 | Variant | Allowed | Secondary CWE. Resulting impact of the integer overflow. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is CWE-190 Integer Overflow or Wraparound, which can directly lead to CWE-122 Heap-based Buffer Overflow. CWE-190 is a parent of CWE-680: Integer Overflow to Buffer Overflow, but the description explicitly mentions a heap-based buffer overflow, making CWE-122 a better fit. CWE-119 is a high-level class, and less specific than CWE-122.\n\n```mermaid\ngraph TD\n    cwe190[\"CWE-190: Integer Overflow or Wraparound\"]\n    cwe122[\"CWE-122: Heap-based Buffer Overflow\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\"]\n    cwe680[\"CWE-680: Integer Overflow to Buffer Overflow\"]\n    \n    cwe122 -->|CHILDOF| cwe119\n    cwe190 -->|CANPRECEDE| cwe122\n    cwe680 -->|CHILDOF| cwe190\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe190 primary\n    class cwe122 secondary\n    class cwe119,cwe680 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with CWE-190, an **integer overflow** due to crafted nameLen or valueLen values, which leads to CWE-122, a heap-based buffer overflow.\n\n## Summary of Analysis\nThe vulnerability description clearly states that an **integer overflow** leads to a heap-based buffer overflow. The \"CVE Reference Links Content Summary\" confirms this.\n\n*   \"Root cause of vulnerability: An integer overflow in the ReadParams function due to improper handling of nameLen and valueLen values, which are read from the input data.\"\n*   \"This leads to a heap-based buffer overflow.\"\n\nCWE-190 (Integer Overflow or Wraparound) is the most accurate root cause, and CWE-122 (Heap-based Buffer Overflow) represents the direct consequence.\n\nOther CWEs were considered:\n\n*   CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer): This is a broader category and less specific than CWE-122.\n*   CWE-131 (Incorrect Calculation of Buffer Size): While related, the root cause is the integer overflow, not necessarily an incorrect calculation of the buffer size directly.\n*   CWE-120 (Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')): This is more specific to buffer copy operations, while the overflow in this case is a result of the integer overflow when allocating the buffer.\n\nThe selected CWEs are at the optimal level of specificity because they accurately represent the root cause (integer overflow) and the direct consequence (heap-based buffer overflow) as described in the vulnerability details.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-131:**\n- 131 (Incorrect Calculation of Buffer Size) - ROOT\n\n\n**Chain starting from CWE-190:**\n- 190 (Integer Overflow or Wraparound) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "190",
        "name": "Integer Overflow or Wraparound",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Overflow",
        "match_reason": "term_in_phrase_whole_phrase"
      },
      "similarity": 800.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Buffer Overflow",
        "match_reason": "term_in_phrase_compound_part_1"
      },
      "similarity": 800.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "122",
        "name": "Heap-based Buffer Overflow",
        "source": "sparse"
      },
      "similarity": 266.6004235535666
    },
    {
      "metadata": {
        "doc_id": "193",
        "name": "Off-by-one Error",
        "source": "sparse"
      },
      "similarity": 248.7128239399145
    },
    {
      "metadata": {
        "doc_id": "681",
        "name": "Incorrect Conversion between Numeric Types",
        "source": "sparse"
      },
      "similarity": 248.44020839454015
    },
    {
      "metadata": {
        "doc_id": "197",
        "name": "Numeric Truncation Error",
        "source": "sparse"
      },
      "similarity": 241.6271576256217
    },
    {
      "metadata": {
        "doc_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "source": "sparse"
      },
      "similarity": 238.72269450243988
    },
    {
      "metadata": {
        "doc_id": "195",
        "name": "Signed to Unsigned Conversion Error",
        "source": "sparse"
      },
      "similarity": 236.38378919559244
    },
    {
      "metadata": {
        "doc_id": "130",
        "name": "Improper Handling of Length Parameter Inconsistency",
        "type": "Base",
        "original_content": "The product parses a formatted message or structure, but it does not handle or incorrectly handles a length field that is inconsistent with the actual length of the associated data.",
        "keyphrase_source": "weakness:integer overflow",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.5736010897407651
          }
        }
      },
      "similarity": 0.5736010897407651
    },
    {
      "doc_id": "120",
      "text": "CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
      "score": 2.9146000000000005,
      "metadata": {
        "doc_id": "120",
        "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
        "type": "base",
        "original_content": "CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
        "relationships": [
          {
            "source_id": "120",
            "target_id": "785",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "120",
            "target_id": "456",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "120",
            "target_id": "416",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "120",
            "target_id": "231",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "120",
            "target_id": "170",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "120",
            "target_id": "20",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "700"
            }
          },
          {
            "source_id": "120",
            "target_id": "123",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "120",
            "target_id": "119",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1340"
            }
          },
          {
            "source_id": "120",
            "target_id": "119",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1305"
            }
          },
          {
            "source_id": "120",
            "target_id": "119",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "120",
            "target_id": "119",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "785",
            "target_id": "120",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "456",
            "target_id": "120",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "416",
            "target_id": "120",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "231",
            "target_id": "120",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "20",
            "target_id": "120",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "700"
            }
          },
          {
            "source_id": "196",
            "target_id": "120",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "170",
            "target_id": "120",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "123",
            "target_id": "120",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "119",
            "target_id": "120",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 0.8,
          "abstraction_path": 0.7200000000000001,
          "sequence_path": 0.8,
          "peer_group": 0.63
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down",
            "vulnerability_sequence_forward",
            "peer_relationship"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "193",
                  "170",
                  "CANPRECEDE"
                ],
                [
                  "170",
                  "120",
                  "CANPRECEDE"
                ]
              ],
              "score": 0.8,
              "type": "relationship_chain",
              "source": "193"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "119",
                  "120",
                  "PARENTOF"
                ]
              ],
              "score": 0.7200000000000001,
              "type": "abstraction_path_down",
              "source": "119"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "193",
                  "170",
                  "CANPRECEDE"
                ],
                [
                  "170",
                  "120",
                  "CANPRECEDE"
                ]
              ],
              "score": 0.8,
              "type": "vulnerability_sequence_forward",
              "source": "193"
            },
            "peer_relationship": {
              "path": [
                [
                  "196",
                  "124",
                  "CANALSOBE"
                ],
                [
                  "196",
                  "120",
                  "CANALSOBE"
                ]
              ],
              "score": 0.63,
              "type": "peer_relationship",
              "source": "124"
            }
          }
        },
        "abstraction_level": "base",
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "There are some indications that this CWE ID might be misused and selected simply because it mentions \"buffer overflow\" - an increasingly vague term. This CWE entry is only appropriate for \"Buffer Copy\" operations (not buffer reads), in which where there is no \"Checking [the] Size of Input\", and (by implication of the copy) writing past the end of the buffer.",
          "comments": "If the vulnerability being analyzed involves out-of-bounds reads, then consider CWE-125 or descendants. For root cause analysis: if there is any input validation, consider children of CWE-20 such as CWE-1284. If there is a calculation error for buffer sizes, consider CWE-131 or similar.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.9146000000000005
          }
        }
      },
      "similarity": 2.9146000000000005
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-131",
      "CWE-190",
      "CWE-122",
      "CWE-680",
      "CWE-119",
      "CWE-120"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}