{
  "query": "In the Linux kernel, the following vulnerability has been resolved usb gadget configfs Prevent OOB read/write in usb_string_copy() Userspace provided string s could trivially have the length zero. Left unchecked this will firstly result in an OOB read in the form `if (str[0 - 1] == \\n) followed closely by an OOB write in the form `str[0 - 1] = \\0`. There is already a validating check to catch strings that are too long. Lets supply an additional check for invalid strings that are too short.",
  "count": 13,
  "results": [
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "abstraction": "Base",
      "score": 1000.0,
      "original_score": 1000.0,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "621",
      "name": "Variable Extraction Error",
      "abstraction": "Variant",
      "score": 700.0,
      "original_score": 700.0,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "abstraction": "Base",
      "score": 401.2424306723525,
      "original_score": 401.2424306723525,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "abstraction": "Base",
      "score": 380.51988199266077,
      "original_score": 380.51988199266077,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1333",
      "name": "Inefficient Regular Expression Complexity",
      "abstraction": "Base",
      "score": 380.44726838253814,
      "original_score": 380.44726838253814,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "abstraction": "Base",
      "score": 374.7099865965305,
      "original_score": 374.7099865965305,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "129",
      "name": "Improper Validation of Array Index",
      "abstraction": "Variant",
      "score": 371.1362042960012,
      "original_score": 371.1362042960012,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 369.9234831416708,
      "original_score": 369.9234831416708,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "787",
      "name": "Out-of-bounds Write",
      "abstraction": "Base",
      "score": 357.783852039983,
      "original_score": 357.783852039983,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "abstraction": "Variant",
      "score": 356.1007156935205,
      "original_score": 356.1007156935205,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 354.49321201400585,
      "original_score": 354.49321201400585,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "193",
      "name": "Off-by-one Error",
      "abstraction": "Base",
      "score": 347.5170927941317,
      "original_score": 347.5170927941317,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "abstraction": "Base",
      "score": 123.36954313509592,
      "original_score": 123.36954313509592,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 123.36954313509592,
    "max": 1000.0,
    "mean": 424.40335928911463,
    "median": 371.1362042960012,
    "count": 13
  }
}