{
  "cve_id": "CVE-2024-47715",
  "description": "In the Linux kernel, the following vulnerability has been resolved wifi mt76 mt7915 fix oops on non-dbdc mt7986 mt7915_band_config() sets band_idx = 1 on the main phy for mt7986 with MT7975_ONE_ADIE or MT7976_ONE_ADIE. Commit 0335c034e726 (wifi mt76 fix **race condition** related to checking tx queue fill status) introduced a **dereference of the phys array indirectly indexed by band_idx** via wcid->phy_idx in mt76_wcid_cleanup(). This caused the following Oops on affected mt7986 devices Unable to handle kernel read from unreadable memory at virtual address 0000000000000024 Mem abort info ESR = 0x0000000096000005 EC = 0x25 DABT (current EL), IL = 32 bits SET = 0, FnV = 0 EA = 0, S1PTW = 0 FSC = 0x05 level 1 translation fault Data abort info ISV = 0, ISS = 0x00000005 CM = 0, WnR = 0 user pgtable 4k pages, 39-bit VAs, pgdp=0000000042545000 [0000000000000024] pgd=0000000000000000, p4d=0000000000000000, pud=0000000000000000 Internal error Oops 0000000096000005 [#1] SMP Modules linked in ... mt7915e mt76_connac_lib mt76 mac80211 cfg80211 ... CPU 2 PID 1631 Comm hostapd Not tainted 5.15.150 #0 Hardware name ZyXEL EX5700 (Telenor) (DT) pstate 80400005 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--) pc mt76_wcid_cleanup+0x84/0x22c [mt76] lr mt76_wcid_cleanup+0x64/0x22c [mt76] sp ffffffc00a803700 x29 ffffffc00a803700 x28 ffffff80008f7300 x27 ffffff80003f3c00 x26 ffffff80000a7880 x25 ffffffc008c26e00 x24 0000000000000001",
  "key_phrases": {
    "rootcause": [
      "dereference of the phys array indirectly indexed by band_idx",
      "race condition"
    ],
    "weakness": "",
    "impact": "Oops",
    "vector": "",
    "attacker": "",
    "product": "Linux kernel",
    "version": "",
    "component": "wifi mt76 mt7915 fix oops on non-dbdc mt7986"
  },
  "reference_content": "Based on the provided information, here's an analysis of the vulnerability:\n\n**Root Cause:**\n\n- The `mt7915_band_config()` function incorrectly sets `band_idx = 1` on the main PHY for mt7986 devices with `MT7975_ONE_ADIE` or `MT7976_ONE_ADIE`. This is incorrect because such devices have a single PHY.\n- A prior commit (0335c034e726) introduced a dereference of the `phys` array using `wcid->phy_idx` in the `mt76_wcid_cleanup()` function.\n- The incorrect `band_idx` assignment leads to an out-of-bounds access of the `dev->phys` array, since `phy_idx` is derived from `band_idx`.\n\n**Vulnerabilities:**\n\n- **Out-of-bounds read:** The `mt76_wcid_cleanup()` function attempts to access `dev->phys` using an invalid index (derived from the incorrect band_idx), leading to a kernel read from unreadable memory.\n\n**Impact:**\n\n- **Kernel crash/Oops:** The out-of-bounds read causes a kernel \"Oops\", resulting in a crash of the device. The system becomes unstable, potentially requiring a reboot to recover. This can lead to a denial of service.\n\n**Attack Vectors:**\n\n- This isn't directly an attack vector, but a bug that can be triggered by normal operation of the affected Wi-Fi devices.\n- The vulnerability is triggered during the cleanup of a wireless connection, specifically in `mt76_wcid_cleanup()`.\n- Operations that lead to disconnection of a WiFi client will trigger this bug.\n\n**Required Attacker Capabilities/Position:**\n\n- An attacker doesn't need any special capabilities or position. The vulnerability is triggered by normal operations on affected mt7986 devices.\n- The issue is a logic error in how the driver handles certain mt7986 hardware configurations.\n- Simply connecting and disconnecting a wifi device is sufficient to trigger this bug.\n\n**Technical Details:**\n\n- The error occurs in `drivers/net/wireless/mediatek/mt76/mac80211.c` within the `mt76_wcid_cleanup()` function.\n- The faulty code attempts to access `dev->phys[wcid->phy_idx]`.\n- The fix replaces this with `mt76_dev_phy(dev, wcid->phy_idx)`, which properly maps `band_idx` to the correct phy for all hardware configurations.\n- The crash occurs on systems using the mt7915 driver on devices like the ZyXEL EX5700 (Telenor) (DT)\n- The backtrace clearly points to `mt76_wcid_cleanup` as the location where the crash occurs due to the invalid memory read.\n- The vulnerability affects kernel versions including 5.15.150 as indicated by the logs",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-416 | Use After Free | 0.9 | Base | Primary | Allowed |\n| CWE-362 | Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition') | 0.7 | Class | Secondary | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary relationship influencing the decision is that CWE-416 is a potential consequence of a **race condition**, which is represented by CWE-362. While CWE-362 explains the concurrent access issue, the direct result described in the vulnerability is **use after free**, thus making CWE-416 the more precise classification.\n\n```mermaid\ngraph TD\n    cwe416[\"CWE-416: Use After Free\"]\n    cwe362[\"CWE-362: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')\"]\n\n    cwe416 <--|CANFOLLOW| cwe362\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe416 primary\n    class cwe362 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with a **race condition** (CWE-362), which leads to memory corruption and ultimately a **use after free** condition (CWE-416), resulting in a kernel panic (\"Oops\").\n  - Root Cause: CWE-362 Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')\n  - Consequence: CWE-416 Use After Free\n  - Impact: Kernel Panic\n\n## Summary of Analysis\nThe initial analysis focused on the multiple keyphrases identified in the vulnerability description, including \"dereference of the phys array indirectly indexed by band_idx\" and \"**race condition**\". While several CWEs were initially considered, the analysis ultimately converged on a combination of CWE-416 and CWE-362.\n\nThe decision to prioritize CWE-416 was driven by the direct evidence of a **use after free** condition leading to the \"Oops\" (kernel panic). The \"dereference of the phys array indirectly indexed by band_idx\" strongly suggested a memory safety issue. The presence of a \"**race condition**\" indicated a potential concurrency problem, but the **use after free** was the more immediate and directly observable weakness.\n\nCWE-362 was selected as a secondary CWE because it describes the underlying **race condition** that enables the **use after free**. The graph relationships and retriever scores supported this decision, as CWE-362 is often associated with memory corruption issues.\n\nThe selected CWEs are at an optimal level of specificity, with CWE-416 being a Base level CWE and CWE-362 being a Class level CWE.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-667: Improper Locking\n**Abstraction Level**: Class\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-824: Access of Uninitialized Pointer\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product accesses or uses a pointer that has not been initialized.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-703: Improper Check or Handling of Exceptional Conditions\n**Abstraction Level**: Pillar\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product does not properly anticipate or handle exceptional conditions that rarely occur during normal operation of the product.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is extremely high-level, a Pillar.\n\n## CWE-696: Incorrect Behavior Order\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product performs multiple related behaviors, but the behaviors are performed in the wrong order in ways which may produce resultant weaknesses.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-665: Improper Initialization\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n## CWE-755: Improper Handling of Exceptional Conditions\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product does not handle or incorrectly handles an exceptional condition.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n## CWE-131: Incorrect Calculation of Buffer Size\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-754: Improper Check for Unusual or Exceptional Conditions\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product does not check or incorrectly checks for unusual or exceptional conditions that are not expected to occur frequently during day to day operation of the product.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-476: NULL Pointer Dereference\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product dereferences a pointer that it expects to be valid but is NULL.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the resource is in an unexpected state.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-362: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')\n**Abstraction Level**: Class\n**Similarity Score**: 1999.85\n**Source**: sparse\n\n**Description**:\nThe product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence operating concurrently.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-667: Improper Locking\n**Abstraction Level**: Class\n**Similarity Score**: 1922.42\n**Source**: sparse\n\n**Description**:\nThe product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-476: NULL Pointer Dereference\n**Abstraction Level**: Base\n**Similarity Score**: 1861.48\n**Source**: sparse\n\n**Description**:\nThe product dereferences a pointer that it expects to be valid but is NULL.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-416 | Use After Free | 0.9 | Base | Primary | Allowed |\n| CWE-362 | Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition') | 0.7 | Class | Secondary | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary relationship influencing the decision is that CWE-416 is a potential consequence of a **race condition**, which is represented by CWE-362. While CWE-362 explains the concurrent access issue, the direct result described in the vulnerability is **use after free**, thus making CWE-416 the more precise classification.\n\n```mermaid\ngraph TD\n    cwe416[\"CWE-416: Use After Free\"]\n    cwe362[\"CWE-362: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')\"]\n\n    cwe416 <--|CANFOLLOW| cwe362\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe416 primary\n    class cwe362 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with a **race condition** (CWE-362), which leads to memory corruption and ultimately a **use after free** condition (CWE-416), resulting in a kernel panic (\"Oops\").\n  - Root Cause: CWE-362 Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')\n  - Consequence: CWE-416 Use After Free\n  - Impact: Kernel Panic\n\n## Summary of Analysis\nThe initial analysis focused on the multiple keyphrases identified in the vulnerability description, including \"dereference of the phys array indirectly indexed by band_idx\" and \"**race condition**\". While several CWEs were initially considered, the analysis ultimately converged on a combination of CWE-416 and CWE-362.\n\nThe decision to prioritize CWE-416 was driven by the direct evidence of a **use after free** condition leading to the \"Oops\" (kernel panic). The \"dereference of the phys array indirectly indexed by band_idx\" strongly suggested a memory safety issue. The presence of a \"**race condition**\" indicated a potential concurrency problem, but the **use after free** was the more immediate and directly observable weakness.\n\nCWE-362 was selected as a secondary CWE because it describes the underlying **race condition** that enables the **use after free**. The graph relationships and retriever scores supported this decision, as CWE-362 is often associated with memory corruption issues.\n\nThe selected CWEs are at an optimal level of specificity, with CWE-416 being a Base level CWE and CWE-362 being a Class level CWE.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-667: Improper Locking\n**Abstraction Level**: Class\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-824: Access of Uninitialized Pointer\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product accesses or uses a pointer that has not been initialized.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-703: Improper Check or Handling of Exceptional Conditions\n**Abstraction Level**: Pillar\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product does not properly anticipate or handle exceptional conditions that rarely occur during normal operation of the product.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is extremely high-level, a Pillar.\n\n## CWE-696: Incorrect Behavior Order\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product performs multiple related behaviors, but the behaviors are performed in the wrong order in ways which may produce resultant weaknesses.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-665: Improper Initialization\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n## CWE-755: Improper Handling of Exceptional Conditions\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product does not handle or incorrectly handles an exceptional condition.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n## CWE-131: Incorrect Calculation of Buffer Size\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-754: Improper Check for Unusual or Exceptional Conditions\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product does not check or incorrectly checks for unusual or exceptional conditions that are not expected to occur frequently during day to day operation of the product.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-476: NULL Pointer Dereference\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product dereferences a pointer that it expects to be valid but is NULL.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the resource is in an unexpected state.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-362: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')\n**Abstraction Level**: Class\n**Similarity Score**: 1999.85\n**Source**: sparse\n\n**Description**:\nThe product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence operating concurrently.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-667: Improper Locking\n**Abstraction Level**: Class\n**Similarity Score**: 1922.42\n**Source**: sparse\n\n**Description**:\nThe product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-476: NULL Pointer Dereference\n**Abstraction Level**: Base\n**Similarity Score**: 1861.48\n**Source**: sparse\n\n**Description**:\nThe product dereferences a pointer that it expects to be valid but is NULL.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-416:**\n- 416 (Use After Free) - ROOT\n\n\n**Chain starting from CWE-476:**\n- 476 (NULL Pointer Dereference) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "476",
        "name": "NULL Pointer Dereference",
        "source": "sparse",
        "original_content": "The product dereferences a pointer that it expects to be valid but is NULL.",
        "keyphrase_sources": [
          {
            "id": "rootcause:dereference of the phys array indirectly indexed by band_idx",
            "keyphrase": "dereference of the phys array indirectly indexed by band_idx",
            "type": "rootcause"
          },
          {
            "id": "rootcause:race condition",
            "keyphrase": "race condition",
            "type": "rootcause"
          },
          {
            "id": "impact:Oops",
            "keyphrase": "Oops",
            "type": "impact"
          },
          {
            "id": "product:Linux kernel",
            "keyphrase": "Linux kernel",
            "type": "product"
          },
          {
            "id": "component:wifi mt76 mt7915 fix oops on non-dbdc mt7986",
            "keyphrase": "wifi mt76 mt7915 fix oops on non-dbdc mt7986",
            "type": "component"
          }
        ]
      },
      "similarity": 559.3606280574022
    },
    {
      "metadata": {
        "doc_id": "125",
        "name": "Out-of-bounds Read",
        "source": "sparse",
        "original_content": "The product reads data past the end, or before the beginning, of the intended buffer.",
        "keyphrase_sources": [
          {
            "id": "rootcause:dereference of the phys array indirectly indexed by band_idx",
            "keyphrase": "dereference of the phys array indirectly indexed by band_idx",
            "type": "rootcause"
          },
          {
            "id": "impact:Oops",
            "keyphrase": "Oops",
            "type": "impact"
          },
          {
            "id": "product:Linux kernel",
            "keyphrase": "Linux kernel",
            "type": "product"
          },
          {
            "id": "component:wifi mt76 mt7915 fix oops on non-dbdc mt7986",
            "keyphrase": "wifi mt76 mt7915 fix oops on non-dbdc mt7986",
            "type": "component"
          }
        ]
      },
      "similarity": 548.8668482017222
    },
    {
      "metadata": {
        "doc_id": "401",
        "name": "Missing Release of Memory after Effective Lifetime",
        "source": "sparse",
        "original_content": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.",
        "keyphrase_sources": [
          {
            "id": "rootcause:dereference of the phys array indirectly indexed by band_idx",
            "keyphrase": "dereference of the phys array indirectly indexed by band_idx",
            "type": "rootcause"
          },
          {
            "id": "rootcause:race condition",
            "keyphrase": "race condition",
            "type": "rootcause"
          },
          {
            "id": "impact:Oops",
            "keyphrase": "Oops",
            "type": "impact"
          },
          {
            "id": "product:Linux kernel",
            "keyphrase": "Linux kernel",
            "type": "product"
          },
          {
            "id": "component:wifi mt76 mt7915 fix oops on non-dbdc mt7986",
            "keyphrase": "wifi mt76 mt7915 fix oops on non-dbdc mt7986",
            "type": "component"
          }
        ]
      },
      "similarity": 529.5398758563039
    },
    {
      "metadata": {
        "doc_id": "362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "source": "sparse",
        "original_content": "The product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence operating concurrently.",
        "keyphrase_sources": [
          {
            "id": "rootcause:dereference of the phys array indirectly indexed by band_idx",
            "keyphrase": "dereference of the phys array indirectly indexed by band_idx",
            "type": "rootcause"
          },
          {
            "id": "rootcause:race condition",
            "keyphrase": "race condition",
            "type": "rootcause"
          },
          {
            "id": "impact:Oops",
            "keyphrase": "Oops",
            "type": "impact"
          },
          {
            "id": "product:Linux kernel",
            "keyphrase": "Linux kernel",
            "type": "product"
          },
          {
            "id": "component:wifi mt76 mt7915 fix oops on non-dbdc mt7986",
            "keyphrase": "wifi mt76 mt7915 fix oops on non-dbdc mt7986",
            "type": "component"
          }
        ]
      },
      "similarity": 508.39345601992557
    },
    {
      "metadata": {
        "doc_id": "909",
        "name": "Missing Initialization of Resource",
        "source": "sparse",
        "original_content": "The product does not initialize a critical resource.",
        "keyphrase_sources": [
          {
            "id": "rootcause:dereference of the phys array indirectly indexed by band_idx",
            "keyphrase": "dereference of the phys array indirectly indexed by band_idx",
            "type": "rootcause"
          },
          {
            "id": "impact:Oops",
            "keyphrase": "Oops",
            "type": "impact"
          },
          {
            "id": "product:Linux kernel",
            "keyphrase": "Linux kernel",
            "type": "product"
          }
        ]
      },
      "similarity": 508.34989626822414
    },
    {
      "metadata": {
        "doc_id": "367",
        "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
        "source": "sparse",
        "original_content": "The product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the resource is in an unexpected state.",
        "keyphrase_sources": [
          {
            "id": "rootcause:race condition",
            "keyphrase": "race condition",
            "type": "rootcause"
          }
        ]
      },
      "similarity": 470.62363622637235
    },
    {
      "metadata": {
        "doc_id": "667",
        "name": "Improper Locking",
        "source": "sparse",
        "original_content": "The product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.",
        "keyphrase_sources": [
          {
            "id": "rootcause:race condition",
            "keyphrase": "race condition",
            "type": "rootcause"
          }
        ]
      },
      "similarity": 458.978656495907
    },
    {
      "metadata": {
        "doc_id": "20",
        "name": "Improper Input Validation",
        "source": "sparse",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "keyphrase_sources": [
          {
            "id": "component:wifi mt76 mt7915 fix oops on non-dbdc mt7986",
            "keyphrase": "wifi mt76 mt7915 fix oops on non-dbdc mt7986",
            "type": "component"
          }
        ]
      },
      "similarity": 154.52863772344475
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-416",
      "CWE-476",
      "CWE-131",
      "CWE-667",
      "CWE-696",
      "CWE-362",
      "CWE-367",
      "CWE-755",
      "CWE-824",
      "CWE-754",
      "CWE-703",
      "CWE-665"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "476": [
      {
        "id": "rootcause:dereference of the phys array indirectly indexed by band_idx",
        "keyphrase": "dereference of the phys array indirectly indexed by band_idx",
        "type": "rootcause"
      },
      {
        "id": "rootcause:race condition",
        "keyphrase": "race condition",
        "type": "rootcause"
      },
      {
        "id": "impact:Oops",
        "keyphrase": "Oops",
        "type": "impact"
      },
      {
        "id": "product:Linux kernel",
        "keyphrase": "Linux kernel",
        "type": "product"
      },
      {
        "id": "component:wifi mt76 mt7915 fix oops on non-dbdc mt7986",
        "keyphrase": "wifi mt76 mt7915 fix oops on non-dbdc mt7986",
        "type": "component"
      }
    ],
    "125": [
      {
        "id": "rootcause:dereference of the phys array indirectly indexed by band_idx",
        "keyphrase": "dereference of the phys array indirectly indexed by band_idx",
        "type": "rootcause"
      },
      {
        "id": "impact:Oops",
        "keyphrase": "Oops",
        "type": "impact"
      },
      {
        "id": "product:Linux kernel",
        "keyphrase": "Linux kernel",
        "type": "product"
      },
      {
        "id": "component:wifi mt76 mt7915 fix oops on non-dbdc mt7986",
        "keyphrase": "wifi mt76 mt7915 fix oops on non-dbdc mt7986",
        "type": "component"
      }
    ],
    "401": [
      {
        "id": "rootcause:dereference of the phys array indirectly indexed by band_idx",
        "keyphrase": "dereference of the phys array indirectly indexed by band_idx",
        "type": "rootcause"
      },
      {
        "id": "rootcause:race condition",
        "keyphrase": "race condition",
        "type": "rootcause"
      },
      {
        "id": "impact:Oops",
        "keyphrase": "Oops",
        "type": "impact"
      },
      {
        "id": "product:Linux kernel",
        "keyphrase": "Linux kernel",
        "type": "product"
      },
      {
        "id": "component:wifi mt76 mt7915 fix oops on non-dbdc mt7986",
        "keyphrase": "wifi mt76 mt7915 fix oops on non-dbdc mt7986",
        "type": "component"
      }
    ],
    "362": [
      {
        "id": "rootcause:dereference of the phys array indirectly indexed by band_idx",
        "keyphrase": "dereference of the phys array indirectly indexed by band_idx",
        "type": "rootcause"
      },
      {
        "id": "rootcause:race condition",
        "keyphrase": "race condition",
        "type": "rootcause"
      },
      {
        "id": "impact:Oops",
        "keyphrase": "Oops",
        "type": "impact"
      },
      {
        "id": "product:Linux kernel",
        "keyphrase": "Linux kernel",
        "type": "product"
      },
      {
        "id": "component:wifi mt76 mt7915 fix oops on non-dbdc mt7986",
        "keyphrase": "wifi mt76 mt7915 fix oops on non-dbdc mt7986",
        "type": "component"
      }
    ],
    "909": [
      {
        "id": "rootcause:dereference of the phys array indirectly indexed by band_idx",
        "keyphrase": "dereference of the phys array indirectly indexed by band_idx",
        "type": "rootcause"
      },
      {
        "id": "impact:Oops",
        "keyphrase": "Oops",
        "type": "impact"
      },
      {
        "id": "product:Linux kernel",
        "keyphrase": "Linux kernel",
        "type": "product"
      }
    ],
    "367": [
      {
        "id": "rootcause:race condition",
        "keyphrase": "race condition",
        "type": "rootcause"
      }
    ],
    "667": [
      {
        "id": "rootcause:race condition",
        "keyphrase": "race condition",
        "type": "rootcause"
      }
    ],
    "20": [
      {
        "id": "component:wifi mt76 mt7915 fix oops on non-dbdc mt7986",
        "keyphrase": "wifi mt76 mt7915 fix oops on non-dbdc mt7986",
        "type": "component"
      }
    ]
  }
}