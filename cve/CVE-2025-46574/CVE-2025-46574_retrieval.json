{
  "vulnerability_info": "VulnerabilityInfo(cve_id='CVE-2025-46574', description='There is an **information disclosure vulnerability** in the GoldenDB database product. Attackers can exploit error messages to obtain the systems sensitive information.', key_phrases={'rootcause': '', 'weakness': 'information disclosure vulnerability', 'impact': 'information disclosure', 'vector': '', 'attacker': '', 'product': 'GoldenDB', 'version': '', 'component': ''}, reference_content=None, similar_info={'cwe_distribution': {}, 'cwe_consensus': '', 'similarity_stats': {'thresholds': [], 'total_samples_by_threshold': {}, 'top_cwes_by_threshold': {}}}, similarity_summary=SimilarityInsight(consensus_cwe='', top_cwes=[], confidence_levels={}, total_samples=0), analysis='', analysis_with_relationships='', criticism='', resolution='', relevant_cwes=[{'metadata': {'doc_id': '200', 'name': 'Exposure of Sensitive Information to an Unauthorized Actor', 'source': 'alternate_terms', 'original_match': 'AlternateTerms: Information Disclosure', 'match_reason': 'term_in_phrase_whole_phrase'}, 'similarity': 800.0, 'alternate_term_match': True}, {'metadata': {'doc_id': '209', 'name': 'Generation of Error Message Containing Sensitive Information', 'source': 'sparse'}, 'similarity': np.float64(141.4299876608809)}, {'metadata': {'doc_id': '203', 'name': 'Observable Discrepancy', 'source': 'sparse'}, 'similarity': np.float64(137.67088490931772)}, {'metadata': {'doc_id': '497', 'name': 'Exposure of Sensitive System Information to an Unauthorized Control Sphere', 'source': 'sparse'}, 'similarity': np.float64(134.10517159594693)}, {'metadata': {'doc_id': '259', 'name': 'Use of Hard-coded Password', 'source': 'sparse'}, 'similarity': np.float64(133.39706602490705)}, {'metadata': {'doc_id': '1295', 'name': 'Debug Messages Revealing Unnecessary Information', 'type': 'Base', 'original_content': 'The product fails to adequately prevent the revealing of unnecessary and potentially sensitive system information within debugging messages.', 'source': 'dense', 'mapping_notes': {'usage': 'Allowed', 'rationale': 'This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.', 'comments': \"Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\", 'reasons': ['Acceptable-Use']}, 'score_info': {'retrievers': ['dense', 'graph'], 'retriever_count': 2, 'normalized_scores': {'dense': 0.554595689578811, 'graph': 2.438855838305762}}}, 'similarity': 0.554595689578811}, {'doc_id': '756', 'text': 'CWE-756: Missing Custom Error Page', 'score': 2.2100000000000004, 'metadata': {'doc_id': '756', 'name': 'Missing Custom Error Page', 'type': 'base', 'original_content': 'CWE-756: Missing Custom Error Page', 'relationships': [{'source_id': '756', 'target_id': '7', 'label': 'PARENTOF', 'properties': {'ordinal': 'Primary', 'view_id': '1000'}}, {'source_id': '756', 'target_id': '12', 'label': 'PARENTOF', 'properties': {'ordinal': 'Primary', 'view_id': '1000'}}, {'source_id': '756', 'target_id': '209', 'label': 'CANPRECEDE', 'properties': {'view_id': '1000'}}, {'source_id': '756', 'target_id': '755', 'label': 'CHILDOF', 'properties': {'ordinal': 'Primary', 'view_id': '1000'}}, {'source_id': '755', 'target_id': '756', 'label': 'PARENTOF', 'properties': {'ordinal': 'Primary', 'view_id': '1000'}}, {'source_id': '7', 'target_id': '756', 'label': 'CHILDOF', 'properties': {'ordinal': 'Primary', 'view_id': '1000'}}, {'source_id': '209', 'target_id': '756', 'label': 'CANFOLLOW', 'properties': {'view_id': '1000'}}, {'source_id': '12', 'target_id': '756', 'label': 'CHILDOF', 'properties': {'ordinal': 'Primary', 'view_id': '1000'}}], 'score_components': {'relationship_chain': 1.0, 'sequence_path': 1.0}, 'abstraction_factor': 1.3, 'graph_path_info': {'path_types': ['relationship_chain', 'vulnerability_sequence_forward', 'vulnerability_sequence_backward'], 'best_paths': {'relationship_chain': {'path': [('209', '756', 'CANFOLLOW')], 'score': 1.0, 'type': 'relationship_chain', 'source': '209'}, 'vulnerability_sequence_forward': {'path': [('209', '756', 'CANFOLLOW')], 'score': 0.9, 'type': 'vulnerability_sequence_forward', 'source': '209'}, 'vulnerability_sequence_backward': {'path': [('756', '209', 'CANPRECEDE')], 'score': 1.0, 'type': 'vulnerability_sequence_backward', 'source': '209'}}}, 'position': 'before', 'sources': ['graph'], 'source': 'graph', 'mapping_notes': {'usage': 'Allowed', 'rationale': 'This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.', 'comments': \"Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\", 'reasons': ['Acceptable-Use']}, 'score_info': {'retrievers': ['graph'], 'retriever_count': 1, 'normalized_scores': {'graph': 2.2100000000000004}}}, 'similarity': 2.2100000000000004}, {'metadata': {'doc_id': '665', 'name': 'Improper Initialization', 'source': 'sparse'}, 'similarity': np.float64(133.041383215544)}, {'metadata': {'doc_id': '459', 'name': 'Incomplete Cleanup', 'source': 'sparse'}, 'similarity': np.float64(131.9423867804643)}, {'metadata': {'doc_id': '204', 'name': 'Observable Response Discrepancy', 'source': 'sparse'}, 'similarity': np.float64(131.760667517767)}], identified_cwes={'analyzer': [], 'critic_additional': []})",
  "retrieval_results": {
    "has_multiple_keyphrases": false,
    "raw_search_results": {
      "all_results": [
        {
          "metadata": {
            "doc_id": "200",
            "name": "Exposure of Sensitive Information to an Unauthorized Actor",
            "type": "Class",
            "original_content": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Discouraged",
              "rationale": "CWE-200 is commonly misused to represent the loss of confidentiality in a vulnerability, but confidentiality loss is a technical impact - not a root cause error. As of CWE 4.9, over 400 CWE entries can lead to a loss of confidentiality. Other options are often available. [REF-1287].",
              "comments": "If an error or mistake causes information to be disclosed, then use the CWE ID for that error. Consider starting with improper authorization (CWE-285), insecure permissions (CWE-732), improper authentication (CWE-287), etc. Also consider children such as Insertion of Sensitive Information Into Sent Data (CWE-201), Observable Discrepancy (CWE-203), Insertion of Sensitive Information into Externally-Accessible File or Directory (CWE-538), or others.",
              "reasons": [
                "Frequent Misuse"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "dense": 0.5568049924521623,
                "sparse": 800.0
              }
            }
          },
          "similarity": 0.5568049924521623
        },
        {
          "metadata": {
            "doc_id": "1295",
            "name": "Debug Messages Revealing Unnecessary Information",
            "type": "Base",
            "original_content": "The product fails to adequately prevent the revealing of unnecessary and potentially sensitive system information within debugging messages.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "graph"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "dense": 0.554595689578811,
                "graph": 2.438855838305762
              }
            }
          },
          "similarity": 0.554595689578811
        },
        {
          "metadata": {
            "doc_id": "532",
            "name": "Insertion of Sensitive Information into Log File",
            "type": "Base",
            "original_content": "The product writes sensitive information to a log file.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "graph"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "dense": 0.5542382130927397,
                "graph": 1.7304635753146775
              }
            }
          },
          "similarity": 0.5542382130927397
        },
        {
          "metadata": {
            "doc_id": "211",
            "name": "Externally-Generated Error Message Containing Sensitive Information",
            "type": "Base",
            "original_content": "The product performs an operation that triggers an external diagnostic or error message that is not directly generated or controlled by the product, such as an error generated by the programming language interpreter that a software application uses. The error can contain sensitive system information.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "graph"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "dense": 0.5529236893798679,
                "graph": 1.7403755693322525
              }
            }
          },
          "similarity": 0.5529236893798679
        },
        {
          "metadata": {
            "doc_id": "550",
            "name": "Server-generated Error Message Containing Sensitive Information",
            "type": "Variant",
            "original_content": "Certain conditions, such as network failure, will cause a server error message to be displayed.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "graph"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "dense": 0.5515453662079837,
                "graph": 1.5513093572068877
              }
            }
          },
          "similarity": 0.5515453662079837
        },
        {
          "metadata": {
            "doc_id": "213",
            "name": "Exposure of Sensitive Information Due to Incompatible Policies",
            "type": "Base",
            "original_content": "The product's intended functionality exposes information to certain actors in accordance with the developer's security policy, but this information is regarded as sensitive according to the intended security policies of other stakeholders such as the product's administrator, users, or others whose information is being processed.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.549291948813443
              }
            }
          },
          "similarity": 0.549291948813443
        },
        {
          "metadata": {
            "doc_id": "922",
            "name": "Insecure Storage of Sensitive Information",
            "type": "Class",
            "original_content": "The product stores sensitive information without properly limiting read or write access by unauthorized actors.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed-with-Review",
              "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
              "comments": "Examine children of this entry to see if there is a better fit",
              "reasons": [
                "Abstraction"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.5453782432517486
              }
            }
          },
          "similarity": 0.5453782432517486
        },
        {
          "metadata": {
            "doc_id": "497",
            "name": "Exposure of Sensitive System Information to an Unauthorized Control Sphere",
            "type": "Base",
            "original_content": "The product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.",
            "keyphrase_source": "weakness:information disclosure vulnerability",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse",
                "graph"
              ],
              "retriever_count": 3,
              "normalized_scores": {
                "dense": 0.5451759642623561,
                "sparse": 134.10517159594693,
                "graph": 1.7366888358158037
              }
            }
          },
          "similarity": 0.5451759642623561
        },
        {
          "metadata": {
            "doc_id": "89",
            "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
            "type": "Base",
            "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.5345595752446314
              }
            }
          },
          "similarity": 0.5345595752446314
        },
        {
          "metadata": {
            "doc_id": "202",
            "name": "Exposure of Sensitive Information Through Data Queries",
            "type": "Base",
            "original_content": "When trying to keep information confidential, an attacker can often infer some of the information by using statistics.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.5344625142079207
              }
            }
          },
          "similarity": 0.5344625142079207
        },
        {
          "metadata": {
            "doc_id": "537",
            "name": "Java Runtime Error Message Containing Sensitive Information",
            "type": "Variant",
            "original_content": "In many cases, an attacker can leverage the conditions that cause unhandled exception errors in order to gain unauthorized access to the system.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.5340224347533604
              }
            }
          },
          "similarity": 0.5340224347533604
        },
        {
          "metadata": {
            "doc_id": "210",
            "name": "Self-generated Error Message Containing Sensitive Information",
            "type": "Base",
            "original_content": "The product identifies an error condition and creates its own diagnostic or error messages that contain sensitive information.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.5330237831275444
              }
            }
          },
          "similarity": 0.5330237831275444
        },
        {
          "metadata": {
            "doc_id": "209",
            "name": "Generation of Error Message Containing Sensitive Information",
            "type": "Base",
            "original_content": "The product generates an error message that includes sensitive information about its environment, users, or associated data.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse",
                "graph"
              ],
              "retriever_count": 3,
              "normalized_scores": {
                "dense": 0.532574261304025,
                "sparse": 141.4299876608809,
                "graph": 2.4377578033577394
              }
            }
          },
          "similarity": 0.532574261304025
        },
        {
          "metadata": {
            "doc_id": "215",
            "name": "Insertion of Sensitive Information Into Debugging Code",
            "type": "Base",
            "original_content": "The product inserts sensitive information into debugging code, which could expose this information if the debugging code is not disabled in production.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.5228357542846217
              }
            }
          },
          "similarity": 0.5228357542846217
        },
        {
          "metadata": {
            "doc_id": "311",
            "name": "Missing Encryption of Sensitive Data",
            "type": "Class",
            "original_content": "The product does not encrypt sensitive or critical information before storage or transmission.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Discouraged",
              "rationale": "CWE-311 is high-level with more precise children available. It is a level-1 Class (i.e., a child of a Pillar).",
              "comments": "Consider children CWE-312: Cleartext Storage of Sensitive Information or CWE-319: Cleartext Transmission of Sensitive Information.",
              "reasons": [
                "Abstraction"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.5199269653734175
              }
            }
          },
          "similarity": 0.5199269653734175
        },
        {
          "metadata": {
            "doc_id": "204",
            "name": "Observable Response Discrepancy",
            "type": "Base",
            "original_content": "The product provides different responses to incoming requests in a way that reveals internal state information to an unauthorized actor outside of the intended control sphere.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "dense": 0.5176821415722559,
                "sparse": 131.760667517767
              }
            }
          },
          "similarity": 0.5176821415722559
        },
        {
          "metadata": {
            "doc_id": "317",
            "name": "Cleartext Storage of Sensitive Information in GUI",
            "type": "Variant",
            "original_content": "The product stores sensitive information in cleartext within the GUI.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.5175169690567838
              }
            }
          },
          "similarity": 0.5175169690567838
        },
        {
          "metadata": {
            "doc_id": "912",
            "name": "Hidden Functionality",
            "type": "Class",
            "original_content": "The product contains functionality that is not documented, not part of the specification, and not accessible through an interface or command sequence that is obvious to the product's users or administrators.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed-with-Review",
              "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
              "comments": "Examine children of this entry to see if there is a better fit",
              "reasons": [
                "Abstraction"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.516472450544881
              }
            }
          },
          "similarity": 0.516472450544881
        },
        {
          "metadata": {
            "doc_id": "1230",
            "name": "Exposure of Sensitive Information Through Metadata",
            "type": "Base",
            "original_content": "The product prevents direct access to a resource containing sensitive information, but it does not sufficiently limit access to metadata that is derived from the original, sensitive information.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.5134293046479486
              }
            }
          },
          "similarity": 0.5134293046479486
        },
        {
          "metadata": {
            "doc_id": "540",
            "name": "Inclusion of Sensitive Information in Source Code",
            "type": "Base",
            "original_content": "Source code on a web server or repository often contains sensitive information and should generally not be accessible to users.",
            "source": "dense",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "dense": 0.5127753486266304
              }
            }
          },
          "similarity": 0.5127753486266304
        },
        {
          "cwe_id": "200",
          "name": "Exposure of Sensitive Information to an Unauthorized Actor",
          "description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
          "score": 800.0,
          "matched_text": "AlternateTerms: Information Disclosure",
          "matched_phrase": "information disclosure vulnerability",
          "matched_term": "information disclosure",
          "type": "Class",
          "source": "sparse",
          "search_source": "alternate_term_match",
          "match_reason": "term_in_phrase_whole_phrase",
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Discouraged",
              "rationale": "CWE-200 is commonly misused to represent the loss of confidentiality in a vulnerability, but confidentiality loss is a technical impact - not a root cause error. As of CWE 4.9, over 400 CWE entries can lead to a loss of confidentiality. Other options are often available. [REF-1287].",
              "comments": "If an error or mistake causes information to be disclosed, then use the CWE ID for that error. Consider starting with improper authorization (CWE-285), insecure permissions (CWE-732), improper authentication (CWE-287), etc. Also consider children such as Insertion of Sensitive Information Into Sent Data (CWE-201), Observable Discrepancy (CWE-203), Insertion of Sensitive Information into Externally-Accessible File or Directory (CWE-538), or others.",
              "reasons": [
                "Frequent Misuse"
              ]
            }
          }
        },
        {
          "cwe_id": "209",
          "name": "Generation of Error Message Containing Sensitive Information",
          "description": "The product generates an error message that includes sensitive information about its environment, users, or associated data.",
          "score": 141.4299876608809,
          "matched_text": "CWE-209: Generation of Error Message Containing Sensitive Information\n\nType: Base\n\nStatus: Draft\n\nDescription:\n\nThe product generates an error message that includes sensitive information about its environment, users, or associated data.\n\nExtended Details:\n\n\n\nThe sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more serious attacks. The error message may be created in different ways:\n\n\n  - self-generated: the source code explicitly constructs the error message and delivers it\n\n  - externally-generated: the external environment, such as a language interpreter, handles the error and constructs its own message, whose contents are not under direct control by the programmer\n\nAn attacker may use the contents of error messages to help launch another, more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of \"..\" sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.\n\nReal-World Examples:\n\n- CVE-2008-2049: POP3 server reveals a password in an error message after multiple APOP commands are sent. Might be resultant from another weakness.\n\n- CVE-2007-5172: Program reveals password in error message if attacker can trigger certain database errors.\n\n- CVE-2008-4638: Composite: application running with high privileges (CWE-250) allows user to specify a restricted file to process, which generates a parsing error that leaks the contents of the file (CWE-209).\n\n- CVE-2008-1579: Existence of user names can be determined by requesting a nonexistent blog and reading the error message.\n\n- CVE-2007-1409: Direct request to library file in web application triggers pathname leak in error message.\n\n- CVE-2008-3060: Malformed input to login page causes leak of full path when IMAP call fails.\n\n- CVE-2005-0603: Malformed regexp syntax leads to information exposure in error message.\n\n- CVE-2017-9615: verbose logging stores admin credentials in a world-readablelog file\n\n- CVE-2018-1999036: SSH password for private key stored in build log\n\nTop 25 CWE Examples:\n\n- CVE-2021-20413: IBM Guardium Data Encryption (GDE) 4.0.0.4 could allow a remote attacker to obtain sensitive information when a detailed technical error message is returned in the browser. This information could be used in further attacks against the system. IBM X-Force ID: 196212.\n\n- CVE-2021-20417: IBM Guardium Data Encryption (GDE) 4.0.0.4 could allow a remote attacker to obtain sensitive information when a detailed technical error message is returned in the browser. This information could be used in further attacks against the system. IBM X-Force ID: 196219\n\n- CVE-2021-32766: Nextcloud Text is an open source plaintext editing application which ships with the nextcloud server. In affected versions the Nextcloud Text application returned different error messages depending on whether a folder existed in a public link share. This is problematic in case the public link share has been created with \"Upload Only\" privileges. (aka \"File Drop\"). A link share recipient is not expected to see which folders or files exist in a \"File Drop\" share. Using this vulnerability an attacker is able to enumerate folders in such a share. Exploitation requires that the attacker has access to a valid affected \"File Drop\" link share. It is recommended that the Nextcloud Server is upgraded to 20.0.12, 21.0.4 or 22.0.1. Users who are unable to upgrade are advised to disable the Nextcloud Text application in the app settings.\n\n- CVE-2021-39458: Triggering an error page of the import process in Yakamara Media Redaxo CMS version 5.12.1 allows an authenticated CMS user has to alternate the files of a vaild file backup. This leads of leaking the database credentials in the environment variables.\n\n- CVE-2021-23135: Exposure of System Data to an Unauthorized Control Sphere vulnerability in web UI of Argo CD allows attacker to cause leaked secret data into web UI error messages and logs. This issue affects Argo CD 1.8 versions prior to 1.8.7; 1.7 versions prior to 1.7.14.\n\n- CVE-2020-20470: White Shark System (WSS) 1.3.2 has web site physical path leakage vulnerability.\n\n- CVE-2020-23995: An information disclosure vulnerability in ILIAS before 5.3.19, 5.4.12 and 6.0 allows remote authenticated attackers to get the upload data path via a workspace upload.\n\n- CVE-2021-25809: UCMS 1.5.0 was discovered to contain a physical path leakage via an error message returned by the adminchannelscache() function in top.php.\n\n- CVE-2021-32712: Shopware is an open source eCommerce platform. Versions prior to 5.6.10 are vulnerable to system information leakage in error handling. Users are recommend to update to version 5.6.10. You can get the update to 5.6.10 regularly via the Auto-Updater or directly via the download overview.\n\n- CVE-2020-19275: An Information Disclosure vulnerability exists in dhcms 2017-09-18 when entering invalid characters after the normal interface, which causes an error that will leak the physical path.\n\n- CVE-2021-21421: node-etsy-client is a NodeJs Etsy ReST API Client. Applications that are using node-etsy-client and reporting client error to the end user will offer api key value too This is fixed in node-etsy-client v0.3.0 and later.\n\n- CVE-2021-22169: An issue was identified in GitLab EE 13.4 or later which leaked internal IP address via error messages.\n\n- CVE-2021-40338: Hitachi Energy LinkOne product, has a vulnerability due to a web server misconfiguration, that enables debug mode and reveals the full path of the filesystem directory when an attacker generates errors during a query operation. This issue affects: Hitachi Energy LinkOne 3.20; 3.22; 3.23; 3.24; 3.25; 3.26.\n\n- CVE-2021-39023: IBM Guardium Data Encryption (GDE) 4.0.0 and 5.0.0 could allow a remote attacker to obtain sensitive information when a detailed technical error message is returned in the browser. This information could be used in further attacks against the system. IBM X-Force ID: 213860.\n\n- CVE-2022-31047: TYPO3 is an open source web content management system. Prior to versions 7.6.57 ELTS, 8.7.47 ELTS, 9.5.34 ELTS, 10.4.29, and 11.5.11, system internal credentials or keys (e.g. database credentials) can be logged as plaintext in exception handlers, when logging the complete exception stack trace. TYPO3 versions 7.6.57 ELTS, 8.7.47 ELTS, 9.5.34 ELTS, 10.4.29, 11.5.11 contain a fix for the problem.\n\n- CVE-2022-2062: Generation of Error Message Containing Sensitive Information in GitHub repository nocodb/nocodb prior to 0.91.7+.\n\n- CVE-2021-38924: IBM Maximo Asset Management 7.6.1.1 and 7.6.1.2 could allow a remote attacker to obtain sensitive information when a detailed technical error message is returned in the browser. This information could be used in further attacks against the system. IBM X-Force ID: 210163.\n\n- CVE-2022-39315: Kirby is a Content Management System. Prior to versions 3.5.8.2, 3.6.6.2, 3.7.5.1, and 3.8.1, a user enumeration vulnerability affects all Kirby sites with user accounts unless Kirby's API and Panel are disabled in the config. It can only be exploited for targeted attacks because the attack does not scale to brute force. The problem has been patched in Kirby 3.5.8.2, Kirby 3.6.6.2, Kirby 3.7.5.1, and Kirby 3.8.1. In all of the mentioned releases, the maintainers have rewritten the affected code so that the delay is also inserted after the brute force limit is reached.\n\n- CVE-2022-20525: In enforceVisualVoicemailPackage of PhoneInterfaceManager.java, there is a possible leak of visual voicemail package name due to a permissions bypass. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-13Android ID: A-229742768\n\n- CVE-2022-24906: Nextcloud Deck is a Kanban-style project & personal management tool for Nextcloud, similar to Trello. The full path of the application is exposed to unauthorized users. It is recommended that the Nextcloud Deck app is upgraded to 1.2.11, 1.4.6, or 1.5.4. There is no workaround available.\n\n- CVE-2022-39307: Grafana is an open-source platform for monitoring and observability. When using the forget password on the login page, a POST request is made to the `/api/user/password/sent-reset-email` URL. When the username or email does not exist, a JSON response contains a \u201cuser not found\u201d message. This leaks information to unauthenticated users and introduces a security risk. This issue has been patched in 9.2.4 and backported to 8.5.15. There are no known workarounds.\n\nRelated Weaknesses:\n\n- CWE-200 (ChildOf)\n\n- CWE-200 (ChildOf)\n\n- CWE-755 (ChildOf)",
          "type": "Base",
          "source": "sparse",
          "search_source": "weakness:information disclosure vulnerability",
          "sources": [
            "base",
            "weakness"
          ],
          "boost_factor": 2.8,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            }
          }
        },
        {
          "cwe_id": "203",
          "name": "Observable Discrepancy",
          "description": "The product behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not.",
          "score": 137.67088490931772,
          "matched_text": "CWE-203: Observable Discrepancy\n\nType: Base\n\nStatus: Incomplete\n\nAlternative Terms:\n\nSide Channel Attack - Observable Discrepancies are at the root of side channel attacks.\n\nSide Channel Attack - Observable Discrepancies are at the root of side channel attacks.\n\nSide Channel Attack - Observable Discrepancies are at the root of side channel attacks.\n\nDescription:\n\nThe product behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not.\n\nExtended Details:\n\nDiscrepancies can take many forms, and variations may be detectable in timing, control flow, communications such as replies or requests, or general behavior. These discrepancies can reveal information about the product's operation or internal state to an unauthorized actor. In some cases, discrepancies can be used by attackers to form a side channel.\n\nReal-World Examples:\n\n- CVE-2020-8695: Observable discrepancy in the RAPL interface for some Intel processors allows information disclosure.\n\n- CVE-2019-14353: Crypto hardware wallet's power consumption relates to total number of pixels illuminated, creating a side channel in the USB connection that allows attackers to determine secrets displayed such as PIN numbers and passwords\n\n- CVE-2019-10071: Java-oriented framework compares HMAC signatures using String.equals() instead of a constant-time algorithm, causing timing discrepancies\n\n- CVE-2002-2094: This, and others, use \"..\" attacks and monitor error responses, so there is overlap with directory traversal.\n\n- CVE-2001-1483: Enumeration of valid usernames based on inconsistent responses\n\n- CVE-2001-1528: Account number enumeration via inconsistent responses.\n\n- CVE-2004-2150: User enumeration via discrepancies in error messages.\n\n- CVE-2005-1650: User enumeration via discrepancies in error messages.\n\n- CVE-2004-0294: Bulletin Board displays different error messages when a user exists or not, which makes it easier for remote attackers to identify valid users and conduct a brute force password guessing attack.\n\n- CVE-2004-0243: Operating System, when direct remote login is disabled, displays a different message if the password is correct, which allows remote attackers to guess the password via brute force methods.\n\n- CVE-2002-0514: Product allows remote attackers to determine if a port is being filtered because the response packet TTL is different than the default TTL.\n\n- CVE-2002-0515: Product sets a different TTL when a port is being filtered than when it is not being filtered, which allows remote attackers to identify filtered ports by comparing TTLs.\n\n- CVE-2002-0208: Product modifies TCP/IP stack and ICMP error messages in unusual ways that show the product is in use.\n\n- CVE-2004-2252: Behavioral infoleak by responding to SYN-FIN packets.\n\n- CVE-2001-1387: Product may generate different responses than specified by the administrator, possibly leading to an information leak.\n\n- CVE-2004-0778: Version control system allows remote attackers to determine the existence of arbitrary files and directories via the -X command for an alternate history file, which causes different error messages to be returned.\n\n- CVE-2004-1428: FTP server generates an error message if the user name does not exist instead of prompting for a password, which allows remote attackers to determine valid usernames.\n\n- CVE-2003-0078: SSL implementation does not perform a MAC computation if an incorrect block cipher padding is used, which causes an information leak (timing discrepancy) that may make it easier to launch cryptographic attacks that rely on distinguishing between padding and MAC verification errors, possibly leading to extraction of the original plaintext, aka the \"Vaudenay timing attack.\"\n\n- CVE-2000-1117: Virtual machine allows malicious web site operators to determine the existence of files on the client by measuring delays in the execution of the getSystemResource method.\n\n- CVE-2003-0637: Product uses a shorter timeout for a non-existent user than a valid user, which makes it easier for remote attackers to guess usernames and conduct brute force password guessing.\n\n- CVE-2003-0190: Product immediately sends an error message when a user does not exist, which allows remote attackers to determine valid usernames via a timing attack.\n\n- CVE-2004-1602: FTP server responds in a different amount of time when a given username exists, which allows remote attackers to identify valid usernames by timing the server response.\n\n- CVE-2005-0918: Browser allows remote attackers to determine the existence of arbitrary files by setting the src property to the target filename and using Javascript to determine if the web page immediately stops loading, which indicates whether the file exists or not.\n\nTop 25 CWE Examples:\n\n- CVE-2020-25082: An attacker with physical access to Nuvoton Trusted Platform Module (NPCT75x 7.2.x before 7.2.2.0) could extract an Elliptic Curve Cryptography (ECC) private key via a side-channel attack against ECDSA, because of an Observable Timing Discrepancy.\n\n- CVE-2021-29443: jose is an npm library providing a number of cryptographic operations. In vulnerable versions AES_CBC_HMAC_SHA2 Algorithm (A128CBC-HS256, A192CBC-HS384, A256CBC-HS512) decryption would always execute both HMAC tag verification and CBC decryption, if either failed `JWEDecryptionFailed` would be thrown. A possibly observable difference in timing when padding error would occur while decrypting the ciphertext makes a padding oracle and an adversary might be able to make use of that oracle to decrypt data without knowing the decryption key by issuing on average 128*b calls to the padding oracle (where b is the number of bytes in the ciphertext block). All major release versions have had a patch released which ensures the HMAC tag is verified before performing CBC decryption. The fixed versions are `^1.28.1 || ^2.0.5 || >=3.11.4`. Users should upgrade their v1.x dependency to ^1.28.1, their v2.x dependency to ^2.0.5, and their v3.x dependency to ^3.11.4. Thanks to Jason from Microsoft Vulnerability Research (MSVR) for bringing this up and Eva Sarafianou (@esarafianou) for helping to score this advisory.\n\n- CVE-2021-29444: jose-browser-runtime is an npm package which provides a number of cryptographic functions. In versions prior to 3.11.4 the AES_CBC_HMAC_SHA2 Algorithm (A128CBC-HS256, A192CBC-HS384, A256CBC-HS512) decryption would always execute both HMAC tag verification and CBC decryption, if either failed `JWEDecryptionFailed` would be thrown. But a possibly observable difference in timing when padding error would occur while decrypting the ciphertext makes a padding oracle and an adversary might be able to make use of that oracle to decrypt data without knowing the decryption key by issuing on average 128*b calls to the padding oracle (where b is the number of bytes in the ciphertext block). A patch was released which ensures the HMAC tag is verified before performing CBC decryption. The fixed versions are `>=3.11.4`. Users should upgrade to `^3.11.4`.\n\n- CVE-2021-29445: jose-node-esm-runtime is an npm package which provides a number of cryptographic functions. In versions prior to 3.11.4 the AES_CBC_HMAC_SHA2 Algorithm (A128CBC-HS256, A192CBC-HS384, A256CBC-HS512) decryption would always execute both HMAC tag verification and CBC decryption, if either failed `JWEDecryptionFailed` would be thrown. But a possibly observable difference in timing when padding error would occur while decrypting the ciphertext makes a padding oracle and an adversary might be able to make use of that oracle to decrypt data without knowing the decryption key by issuing on average 128*b calls to the padding oracle (where b is the number of bytes in the ciphertext block). A patch was released which ensures the HMAC tag is verified before performing CBC decryption. The fixed versions are `>=3.11.4`. Users should upgrade to `^3.11.4`.\n\n- CVE-2021-29446: jose-node-cjs-runtime is an npm package which provides a number of cryptographic functions. In versions prior to 3.11.4 the AES_CBC_HMAC_SHA2 Algorithm (A128CBC-HS256, A192CBC-HS384, A256CBC-HS512) decryption would always execute both HMAC tag verification and CBC decryption, if either failed `JWEDecryptionFailed` would be thrown. But a possibly observable difference in timing when padding error would occur while decrypting the ciphertext makes a padding oracle and an adversary might be able to make use of that oracle to decrypt data without knowing the decryption key by issuing on average 128*b calls to the padding oracle (where b is the number of bytes in the ciphertext block). A patch was released which ensures the HMAC tag is verified before performing CBC decryption. The fixed versions are `>=3.11.4`. Users should upgrade to `^3.11.4`.\n\n- CVE-2021-33560: Libgcrypt before 1.8.8 and 1.9.x before 1.9.3 mishandles ElGamal encryption because it lacks exponent blinding to address a side-channel attack against mpi_powm, and the window size is not chosen appropriately. This, for example, affects use of ElGamal in OpenPGP.\n\n- CVE-2021-0321: In enforceDumpPermissionForPackage of ActivityManagerService.java, there is a possible way to determine if a package is installed due to side channel information disclosure. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation. Product: Android; Versions: Android-11; Android ID: A-166667403.\n\n- CVE-2021-21424: Symfony is a PHP framework for web and console applications and a set of reusable PHP components. The ability to enumerate users was possible without relevant permissions due to different handling depending on whether the user existed or not when attempting to use the switch users functionality. We now ensure that 403s are returned whether the user exists or not if a user cannot switch to a user or if the user does not exist. The patch for this issue is available for branch 3.4.\n\n- CVE-2021-39021: IBM Guardium Data Encryption (GDE) 5.0.0.2 behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which could facilitate username enumeration. IBM X-Force ID: 213856.\n\n- CVE-2021-46744: An attacker with access to a malicious hypervisor may be able to infer data values used in a SEV guest on AMD CPUs by monitoring ciphertext values over time.\n\n- CVE-2022-1318: Hills ComNav version 3002-19 suffers from a weak communication channel. Traffic across the local network for the configuration pages can be viewed by a malicious actor. The size of certain communications packets are predictable. This would allow an attacker to learn the state of the system if they can observe the traffic. This would be possible even if the traffic were encrypted, e.g., using WPA2, as the packet sizes would remain observable. The communication encryption scheme is theoretically sound, but is not strong enough for the level of protection required.\n\n- CVE-2022-20866: A vulnerability in the handling of RSA keys on devices running Cisco Adaptive Security Appliance (ASA) Software and Cisco Firepower Threat Defense (FTD) Software could allow an unauthenticated, remote attacker to retrieve an RSA private key. This vulnerability is due to a logic error when the RSA key is stored in memory on a hardware platform that performs hardware-based cryptography. An attacker could exploit this vulnerability by using a Lenstra side-channel attack against the targeted device. A successful exploit could allow the attacker to retrieve the RSA private key. The following conditions may be observed on an affected device: This vulnerability will apply to approximately 5 percent of the RSA keys on a device that is running a vulnerable release of Cisco ASA Software or Cisco FTD Software; not all RSA keys are expected to be affected due to mathematical calculations applied to the RSA key. The RSA key could be valid but have specific characteristics that make it vulnerable to the potential leak of the RSA private key. If an attacker obtains the RSA private key, they could use the key to impersonate a device that is running Cisco ASA Software or Cisco FTD Software or to decrypt the device traffic. See the Indicators of Compromise section for more information on the detection of this type of RSA key. The RSA key could be malformed and invalid. A malformed RSA key is not functional, and a TLS client connection to a device that is running Cisco ASA Software or Cisco FTD Software that uses the malformed RSA key will result in a TLS signature failure, which means a vulnerable software release created an invalid RSA signature that failed verification. If an attacker obtains the RSA private key, they could use the key to impersonate a device that is running Cisco ASA Software or Cisco FTD Software or to decrypt the device traffic.\n\n- CVE-2022-20940: A vulnerability in the TLS handler of Cisco Firepower Threat Defense (FTD) Software could allow an unauthenticated, remote attacker to gain access to sensitive information. This vulnerability is due to improper implementation of countermeasures against a Bleichenbacher attack on a device that uses SSL decryption policies. An attacker could exploit this vulnerability by sending crafted TLS messages to an affected device, which would act as an oracle and allow the attacker to carry out a chosen-ciphertext attack. A successful exploit could allow the attacker to perform cryptanalytic operations that may allow decryption of previously captured TLS sessions to the affected device.\n\n- CVE-2022-27221: A vulnerability has been identified in SINEMA Remote Connect Server (All versions < V3.1). An attacker in machine-in-the-middle could obtain plaintext secret values by observing length differences during a series of guesses in which a string in an HTTP request URL potentially matches an unknown string in an HTTP response body, aka a \"BREACH\" attack.\n\n- CVE-2022-20275: In DevicePolicyManager, there is a possible way to determine whether an app is installed, without query permissions, due to side channel information disclosure. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-13Android ID: A-205836975\n\n- CVE-2022-20276: In DevicePolicyManager, there is a possible way to determine whether an app is installed, without query permissions, due to side channel information disclosure. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-13Android ID: A-205706731\n\n- CVE-2022-20277: In DevicePolicyManager, there is a possible way to determine whether an app is installed, without query permissions, due to side channel information disclosure. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-13Android ID: A-205145497\n\n- CVE-2022-20279: In DevicePolicyManager, there is a possible way to determine whether an app is installed, without query permissions, due to side channel information disclosure. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-13Android ID: A-204877302\n\n- CVE-2022-4087: A vulnerability was found in iPXE. It has been declared as problematic. This vulnerability affects the function tls_new_ciphertext of the file src/net/tls.c of the component TLS. The manipulation of the argument pad_len leads to information exposure through discrepancy. The name of the patch is 186306d6199096b7a7c4b4574d4be8cdb8426729. It is recommended to apply a patch to fix this issue. VDB-214054 is the identifier assigned to this vulnerability.\n\n- CVE-2021-33838: Luca through 1.7.4 on Android allows remote attackers to obtain sensitive information about COVID-19 tracking because requests related to Check-In State occur shortly after requests for Phone Number Registration.\n\nRelated Weaknesses:\n\n- CWE-200 (ChildOf)\n\n- CWE-200 (ChildOf)",
          "type": "Base",
          "source": "sparse",
          "search_source": "weakness:information disclosure vulnerability",
          "sources": [
            "base",
            "weakness"
          ],
          "boost_factor": 2.8,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            }
          }
        },
        {
          "cwe_id": "497",
          "name": "Exposure of Sensitive System Information to an Unauthorized Control Sphere",
          "description": "The product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.",
          "score": 134.10517159594693,
          "matched_text": "CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\n\nType: Base\n\nStatus: Incomplete\n\nDescription:\n\nThe product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.\n\nExtended Details:\n\n\n\nNetwork-based products, such as web applications, often run on top of an operating system or similar environment. When the product communicates with outside parties, details about the underlying system are expected to remain hidden, such as path names for data files, other OS users, installed packages, the application environment, etc. This system information may be provided by the product itself, or buried within diagnostic or debugging messages. Debugging information helps an adversary learn about the system and form an attack plan.\n\n\nAn information exposure occurs when system data or debugging information leaves the program through an output stream or logging function that makes it accessible to unauthorized parties. Using other weaknesses, an attacker could cause errors to occur; the response to these errors can reveal detailed system information, along with other impacts. An attacker can use messages that reveal technologies, operating systems, and product versions to tune the attack against known vulnerabilities in these technologies. A product may use diagnostic methods that provide significant implementation details such as stack traces as part of its error handling mechanism.\n\n\nReal-World Examples:\n\n- CVE-2021-32638: Code analysis product passes access tokens as a command-line parameter or through an environment variable, making them visible to other processes via the ps command.\n\nTop 25 CWE Examples:\n\n- CVE-2021-0291: An Exposure of System Data vulnerability in Juniper Networks Junos OS and Junos OS Evolved, where a sensitive system-level resource is not being sufficiently protected, allows a network-based unauthenticated attacker to send specific traffic which partially reaches this resource. A high rate of specific traffic may lead to a partial Denial of Service (DoS) as the CPU utilization of the RE is significantly increased. The SNMP Agent Extensibility (agentx) process should only be listening to TCP port 705 on the internal routing instance. External connections destined to port 705 should not be allowed. This issue affects: Juniper Networks Junos OS: 15.1 versions prior to 15.1R7-S9; 17.3 versions prior to 17.3R3-S12; 17.4 versions prior to 17.4R2-S13, 17.4R3-S5; 18.3 versions prior to 18.3R3-S5; 18.4 versions prior to 18.4R2-S8; 19.1 versions prior to 19.1R3-S5; 19.2 versions prior to 19.2R3-S2; 19.3 versions prior to 19.3R2-S6, 19.3R3-S2; 19.4 versions prior to 19.4R1-S4, 19.4R2-S4, 19.4R3; 20.1 versions prior to 20.1R2; 20.2 versions prior to 20.2R2; 20.3 versions prior to 20.3R2. Juniper Networks Junos OS Evolved versions prior to 20.3R2-EVO. This issue does not affect Juniper Networks Junos OS versions prior to 13.2R1.\n\n- CVE-2021-26067: Affected versions of Atlassian Bamboo allow an unauthenticated remote attacker to view a stack trace that may reveal the path for the home directory in disk and if certain files exists on the tmp directory, via a Sensitive Data Exposure vulnerability in the /chart endpoint. The affected versions are before version 7.2.2.\n\n- CVE-2021-21336: Products.PluggableAuthService is a pluggable Zope authentication and authorization framework. In Products.PluggableAuthService before version 2.6.0 there is an information disclosure vulnerability - everyone can list the names of roles defined in the ZODB Role Manager plugin if the site uses this plugin. The problem has been fixed in version 2.6.0. Depending on how you have installed Products.PluggableAuthService, you should change the buildout version pin to 2.6.0 and re-run the buildout, or if you used pip simply do `pip install \"Products.PluggableAuthService>=2.6.0\"`.\n\n- CVE-2021-21360: Products.GenericSetup is a mini-framework for expressing the configured state of a Zope Site as a set of filesystem artifacts. In Products.GenericSetup before version 2.1.1 there is an information disclosure vulnerability - anonymous visitors may view log and snapshot files generated by the Generic Setup Tool. The problem has been fixed in version 2.1.1. Depending on how you have installed Products.GenericSetup, you should change the buildout version pin to 2.1.1 and re-run the buildout, or if you used pip simply do pip install `\"Products.GenericSetup>=2.1.1\"`.\n\n- CVE-2021-21376: OMERO.web is open source Django-based software for managing microscopy imaging. OMERO.web before version 5.9.0 loads various information about the current user such as their id, name and the groups they are in, and these are available on the main webclient pages. This represents an information exposure vulnerability. Some additional information being loaded is not used by the webclient and is being removed in this release. This is fixed in version 5.9.0.\n\n- CVE-2021-22135: Elasticsearch versions before 7.11.2 and 6.8.15 contain a document disclosure flaw was found in the Elasticsearch suggester and profile API when Document and Field Level Security are enabled. The suggester and profile API are normally disabled for an index when document level security is enabled on the index. Certain queries are able to enable the profiler and suggester which could lead to disclosing the existence of documents and fields the attacker should not be able to view.\n\n- CVE-2022-22303: An exposure of sensitive system information to an unauthorized control sphere vulnerability [CWE-497] in FortiManager versions prior to 7.0.2, 6.4.7 and 6.2.9 may allow a low privileged authenticated user to gain access to the FortiGate users credentials via the config conflict file.\n\n- CVE-2022-34458:  Dell Command | Update, Dell Update, and Alienware Update versions prior to 4.7 contain a Exposure of Sensitive System Information to an Unauthorized Control Sphere vulnerability in download operation component. A local malicious user could potentially exploit this vulnerability leading to the disclosure of confidential data. \n\n- CVE-2022-22961: VMware Workspace ONE Access, Identity Manager and vRealize Automation contain an information disclosure vulnerability due to returning excess information. A malicious actor with remote access may leak the hostname of the target system. Successful exploitation of this issue can lead to targeting victims.\n\n- CVE-2022-28651: In JetBrains IntelliJ IDEA before 2021.3.3 it was possible to get passwords from protected fields\n\n- CVE-2022-20734: A vulnerability in Cisco SD-WAN vManage Software could allow an authenticated, local attacker to view sensitive information on an affected system. This vulnerability is due to insufficient file system restrictions. An authenticated attacker with netadmin privileges could exploit this vulnerability by accessing the vshell of an affected system. A successful exploit could allow the attacker to read sensitive information on the underlying operating system.\n\nRelated Weaknesses:\n\n- CWE-200 (ChildOf)",
          "type": "Base",
          "source": "sparse",
          "search_source": "weakness:information disclosure vulnerability",
          "sources": [
            "base",
            "weakness"
          ],
          "boost_factor": 2.8,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            }
          }
        },
        {
          "cwe_id": "259",
          "name": "Use of Hard-coded Password",
          "description": "The product contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.",
          "score": 133.39706602490705,
          "matched_text": "CWE-259: Use of Hard-coded Password\n\nType: Variant\n\nStatus: Draft\n\nDescription:\n\nThe product contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.\n\nExtended Details:\n\n\n\nA hard-coded password typically leads to a significant authentication failure that can be difficult for the system administrator to detect. Once detected, it can be difficult to fix, so the administrator may be forced into disabling the product entirely. There are two main variations:\n\n```\n\t\tInbound: the product contains an authentication mechanism that checks for a hard-coded password.\n\t\tOutbound: the product connects to another system or component, and it contains hard-coded password for connecting to that component.\n```\nIn the Inbound variant, a default administration account is created, and a simple password is hard-coded into the product and associated with that account. This hard-coded password is the same for each installation of the product, and it usually cannot be changed or disabled by system administrators without manually modifying the program, or otherwise patching the product. If the password is ever discovered or published (a common occurrence on the Internet), then anybody with knowledge of this password can access the product. Finally, since all installations of the product will have the same password, even across different organizations, this enables massive attacks such as worms to take place.\n\nThe Outbound variant applies to front-end systems that authenticate with a back-end service. The back-end service may require a fixed password which can be easily discovered. The programmer may simply hard-code those back-end credentials into the front-end product. Any user of that program may be able to extract the password. Client-side systems with hard-coded passwords pose even more of a threat, since the extraction of a password from a binary is usually very simple.\n\n\nReal-World Examples:\n\n- CVE-2022-29964: Distributed Control System (DCS) has hard-coded passwords for local shell access\n\n- CVE-2021-37555: Telnet service for IoT feeder for dogs and cats has hard-coded password [REF-1288]\n\n- CVE-2021-35033: Firmware for a WiFi router uses a hard-coded password for a BusyBox shell, allowing bypass of authentication through the UART port\n\nTop 25 CWE Examples:\n\n- CVE-2021-27438: The software contains a hard-coded password it uses for its own inbound authentication or for outbound communication to external components on the Reason DR60 (all firmware versions prior to 02A04.1).\n\n- CVE-2021-34757: Multiple vulnerabilities in Cisco Business 220 Series Smart Switches firmware could allow an attacker with Administrator privileges to access sensitive login credentials or reconfigure the passwords on the user account. For more information about these vulnerabilities, see the Details section of this advisory.\n\n- CVE-2020-1716: A flaw was found in the ceph-ansible playbook where it contained hardcoded passwords that were being used as default passwords while deploying Ceph services. Any authenticated attacker can abuse this flaw to brute-force Ceph deployments, and gain administrator access to Ceph clusters via the Ceph dashboard to initiate read, write, and delete Ceph clusters and also modify Ceph cluster configurations. Versions before ceph-ansible 6.0.0alpha1 are affected.\n\n- CVE-2021-21818: A hard-coded password vulnerability exists in the Zebra IP Routing Manager functionality of D-LINK DIR-3040 1.13B03. A specially crafted network request can lead to a denial of service. An attacker can send a sequence of requests to trigger this vulnerability.\n\n- CVE-2021-21820: A hard-coded password vulnerability exists in the Libcli Test Environment functionality of D-LINK DIR-3040 1.13B03. A specially crafted network request can lead to code execution. An attacker can send a sequence of requests to trigger this vulnerability.\n\n- CVE-2021-27440: The software contains a hard-coded password it uses for its own inbound authentication or for outbound communication to external components on the Reason DR60 (all firmware versions prior to 02A04.1).\n\n- CVE-2021-27452: The software contains a hard-coded password that could allow an attacker to take control of the merging unit using these hard-coded credentials on the MU320E (all firmware versions prior to v04A00.1).\n\n- CVE-2021-32454: SITEL CAP/PRX firmware version 5.2.01 makes use of a hardcoded password. An attacker with access to the device could modify these credentials, leaving the administrators of the device without access.\n\n- CVE-2021-32459: Trend Micro Home Network Security version 6.6.604 and earlier contains a hard-coded password vulnerability in the log collection server which could allow an attacker to use a specially crafted network request to lead to arbitrary authentication. An attacker must first obtain the ability to execute high-privileged code on the target device in order to exploit this vulnerability.\n\n- CVE-2021-36799: KNX ETS5 through 5.7.6 uses the hard-coded password ETS5Password, with a salt value of Ivan Medvedev, allowing local users to read project information. NOTE: This vulnerability only affects products that are no longer supported by the maintainer\n\n- CVE-2021-38456: A use of hard-coded password vulnerability in the Moxa MXview Network Management software Versions 3.x to 3.2.2 may allow an attacker to gain access through accounts using default passwords\n\n- CVE-2021-43575: KNX ETS6 through 6.0.0 uses the hard-coded password ETS5Password, with a salt value of Ivan Medvedev, allowing local users to read project information, a similar issue to CVE-2021-36799. NOTE: The vendor disputes this because it is not the responsibility of the ETS to securely store cryptographic key material when it is not being exported\n\n- CVE-2020-25752: An issue was discovered on Enphase Envoy R3.x and D4.x devices. There are hardcoded web-panel login passwords for the installer and Enphase accounts. The passwords for these accounts are hardcoded values derived from the MD5 hash of the username and serial number mixed with some static strings. The serial number can be retrieved by an unauthenticated user at /info.xml. These passwords can be easily calculated by an attacker; users are unable to change these passwords.\n\n- CVE-2020-29321: The D-Link router DIR-868L 3.01 is vulnerable to credentials disclosure in telnet service through decompilation of firmware, that allows an unauthenticated attacker to gain access to the firmware and to extract sensitive data.\n\n- CVE-2020-29322: The D-Link router DIR-880L 1.07 is vulnerable to credentials disclosure in telnet service through decompilation of firmware, that allows an unauthenticated attacker to gain access to the firmware and to extract sensitive data.\n\n- CVE-2020-29323: The D-link router DIR-885L-MFC 1.15b02, v1.21b05 is vulnerable to credentials disclosure in telnet service through decompilation of firmware, that allows an unauthenticated attacker to gain access to the firmware and to extract sensitive data.\n\n- CVE-2021-45520: Certain NETGEAR devices are affected by a hardcoded password. This affects RBK352 before 4.4.0.10, RBR350 before 4.4.0.10, and RBS350 before 4.4.0.10.\n\n- CVE-2021-45521: Certain NETGEAR devices are affected by a hardcoded password. This affects RBK352 before 4.4.0.10, RBR350 before 4.4.0.10, and RBS350 before 4.4.0.10.\n\n- CVE-2021-45522: NETGEAR XR1000 devices before 1.0.0.58 are affected by a hardcoded password.\n\n- CVE-2022-26138: The Atlassian Questions For Confluence app for Confluence Server and Data Center creates a Confluence user account in the confluence-users group with the username disabledsystemuser and a hardcoded password. A remote, unauthenticated attacker with knowledge of the hardcoded password could exploit this to log into Confluence and access all content accessible to users in the confluence-users group. This user account is created when installing versions 2.7.34, 2.7.35, and 3.0.2 of the app.\n\n- CVE-2021-31477: This vulnerability allows remote attackers to execute arbitrary code on affected installations of GE Reason RPV311 14A03. Authentication is not required to exploit this vulnerability. The specific flaw exists within the firmware and filesystem of the device. The firmware and filesystem contain hard-coded default credentials. An attacker can leverage this vulnerability to execute code in the context of the download user. Was ZDI-CAN-11852.\n\n- CVE-2022-1162: A hardcoded password was set for accounts registered using an OmniAuth provider (e.g. OAuth, LDAP, SAML) in GitLab CE/EE versions 14.7 prior to 14.7.7, 14.8 prior to 14.8.5, and 14.9 prior to 14.9.2 allowing attackers to potentially take over accounts\n\n- CVE-2022-22144: A hard-coded password vulnerability exists in the libcommonprod.so prod_change_root_passwd functionality of TCL LinkHub Mesh Wi-Fi MS1G_00_01.00_14. During system startup this functionality is always called, leading to a known root password. An attacker does not have to do anything to trigger this vulnerability.\n\n- CVE-2022-25577: ALF-BanCO v8.2.5 and below was discovered to use a hardcoded password to encrypt the SQLite database containing the user's data. Attackers who are able to gain remote or local access to the system are able to read and modify the data.\n\n- CVE-2022-26119: A improper authentication vulnerability in Fortinet FortiSIEM before 6.5.0 allows a local attacker with CLI access to perform operations on the Glassfish server directly via a hardcoded password.\n\n- CVE-2022-27172: A hard-coded password vulnerability exists in the console infactory functionality of InHand Networks InRouter302 V3.5.37. A specially-crafted network request can lead to privileged operation execution. An attacker can send a sequence of requests to trigger this vulnerability.\n\n- CVE-2022-29644: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a hard coded password for the telnet service stored in the component /web_cste/cgi-bin/product.ini.\n\n- CVE-2022-29645: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a hard coded password for root stored in the component /etc/shadow.sample.\n\n- CVE-2022-29825: Use of Hard-coded Password vulnerability in Mitsubishi Electric GX Works3 versions from 1.000A to 1.090U and GT Designer3 Version1 (GOT2000) versions from 1.122C to 1.290C allows an unauthenticated attacker to disclose sensitive information. As a result, unauthenticated users may view programs and project files or execute programs illegally.\n\n- CVE-2022-29831: Use of Hard-coded Password vulnerability in Mitsubishi Electric Corporation GX Works3 versions from 1.015R to 1.095Z allows a remote unauthenticated attacker to obtain information about the project file for MELSEC safety CPU modules.\n\n- CVE-2022-29889: A hard-coded password vulnerability exists in the telnet functionality of Abode Systems, Inc. iota All-In-One Security Kit 6.9Z. Use of a hard-coded root password can lead to arbitrary command execution. An attacker can authenticate with hard-coded credentials to trigger this vulnerability.\n\n- CVE-2022-32967: RTL8111EP-CG/RTL8111FP-CG DASH function has hard-coded password. An unauthenticated physical attacker can use the hard-coded default password during system reboot triggered by other user, to acquire partial system information such as serial number and server information.\n\n- CVE-2022-34005: An issue was discovered in TitanFTP (aka Titan FTP) NextGen before 1.2.1050. There is Remote Code Execution due to a hardcoded password for the sa account on the Microsoft SQL Express 2019 instance installed by default during TitanFTP NextGen installation, aka NX-I674 (sub-issue 1). NOTE: as of 2022-06-21, the 1.2.1050 release corrects this vulnerability in a new installation, but not in an upgrade installation.\n\n- CVE-2022-34462:  Dell EMC SCG Policy Manager, versions from 5.10 to 5.12, contain(s) a Hard-coded Password Vulnerability. An attacker, with the knowledge of the hard-coded credentials, could potentially exploit this vulnerability to login to the system to gain admin privileges. \n\n- CVE-2022-35491: TOTOLINK A3002RU V3.0.0-B20220304.1804 has a hardcoded password for root in /etc/shadow.sample.\n\n- CVE-2022-35866: This vulnerability allows remote attackers to bypass authentication on affected installations of Vinchin Backup and Recovery 6.5.0.17561. Authentication is not required to exploit this vulnerability. The specific flaw exists within the configuration of the MySQL server. The server uses a hard-coded password for the administrator user. An attacker can leverage this vulnerability to bypass authentication on the system. Was ZDI-CAN-17139.\n\n- CVE-2022-36610: TOTOLINK A720R V4.1.5cu.532_B20210610 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36611: TOTOLINK A800R V4.1.2cu.5137_B20200730 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36612: TOTOLINK A950RG V4.1.2cu.5204_B20210112 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36613: TOTOLINK N600R V4.3.0cu.7647_B20210106 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36614: TOTOLINK A860R V4.1.2cu.5182_B20201027 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36615: TOTOLINK A3000RU V4.1.2cu.5185_B20201128 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36616: TOTOLINK A810R V4.1.2cu.5182_B20201026 and V5.9c.4050_B20190424 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-37841: In TOTOLINK A860R V4.1.2cu.5182_B20201027 there is a hard coded password for root in /etc/shadow.sample.\n\n- CVE-2022-37857: bilde2910 Hauk v1.6.1 requires a hardcoded password which by default is blank. This hardcoded password is hashed but stored within the config.php file server-side as well as in clear-text on the android client device by default.\n\n- CVE-2022-38823: In TOTOLINK T6 V4.1.5cu.709_B20210518, there is a hard coded password for root in /etc/shadow.sample.\n\n- CVE-2022-45444: Sewio\u2019s Real-Time Location System (RTLS) Studio version 2.0.0 up to and including version 2.6.2 contains hard-coded passwords for select users in the application\u2019s database. This could allow a remote attacker to login to the database with unrestricted access. \n\n- CVE-2022-36159: Contec FXA3200 version 1.13 and under were discovered to contain a hard coded hash password for root stored in the component /etc/shadow. As the password strength is weak, it can be cracked in few minutes. Through this credential, a malicious actor can access the Wireless LAN Manager interface and open the telnet port then sniff the traffic or inject any malware.\n\n- CVE-2022-41653: Daikin SVMPC1 version 2.1.22 and prior and SVMPC2 version 1.2.3 and prior are vulnerable to an attacker obtaining user login credentials and control the system.\n\n- CVE-2022-48067: An information disclosure vulnerability in Totolink A830R V4.1.2cu.5182 allows attackers to obtain the root password via a brute-force attack.\n\nRelated Weaknesses:\n\n- CWE-798 (ChildOf)\n\n- CWE-798 (ChildOf)\n\n- CWE-798 (ChildOf)\n\n- CWE-321 (PeerOf)\n\n- CWE-257 (PeerOf)",
          "type": "Variant",
          "source": "sparse",
          "search_source": "weakness:information disclosure vulnerability",
          "sources": [
            "base",
            "weakness"
          ],
          "boost_factor": 2.8,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            }
          }
        },
        {
          "cwe_id": "665",
          "name": "Improper Initialization",
          "description": "The product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.",
          "score": 133.041383215544,
          "matched_text": "CWE-665: Improper Initialization\n\nType: Class\n\nStatus: Draft\n\nDescription:\n\nThe product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.\n\nExtended Details:\n\nThis can have security implications when the associated resource is expected to have certain properties or values, such as a variable that determines whether a user has been authenticated or not.\n\nReal-World Examples:\n\n- CVE-2001-1471: chain: an invalid value prevents a library file from being included, skipping initialization of key variables, leading to resultant eval injection.\n\n- CVE-2008-3637: Improper error checking in protection mechanism produces an uninitialized variable, allowing security bypass and code execution.\n\n- CVE-2008-4197: Use of uninitialized memory may allow code execution.\n\n- CVE-2008-2934: Free of an uninitialized pointer leads to crash and possible code execution.\n\n- CVE-2007-3749: OS kernel does not reset a port when starting a setuid program, allowing local users to access the port and gain privileges.\n\n- CVE-2008-0063: Product does not clear memory contents when generating an error message, leading to information leak.\n\n- CVE-2008-0062: Lack of initialization triggers NULL pointer dereference or double-free.\n\n- CVE-2008-0081: Uninitialized variable leads to code execution in popular desktop application.\n\n- CVE-2008-3688: chain: Uninitialized variable leads to infinite loop.\n\n- CVE-2008-3475: chain: Improper initialization leads to memory corruption.\n\n- CVE-2008-5021: Composite: race condition allows attacker to modify an object while it is still being initialized, causing software to access uninitialized memory.\n\n- CVE-2005-1036: Chain: Bypass of access restrictions due to improper authorization (CWE-862) of a user results from an improperly initialized (CWE-909) I/O permission bitmap\n\n- CVE-2008-3597: chain: game server can access player data structures before initialization has happened leading to NULL dereference\n\n- CVE-2009-2692: chain: uninitialized function pointers can be dereferenced allowing code execution\n\n- CVE-2009-0949: chain: improper initialization of memory can lead to NULL dereference\n\n- CVE-2009-3620: chain: some unprivileged ioctls do not verify that a structure has been initialized before invocation, leading to NULL dereference\n\nTop 25 CWE Examples:\n\n- CVE-2021-0423: In memory management driver, there is a possible information disclosure due to uninitialized data. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS05403499; Issue ID: ALPS05385714.\n\n- CVE-2021-0435: In avrc_proc_vendor_command of avrc_api.cc, there is a possible leak of heap data due to uninitialized data. This could lead to remote information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-11 Android-8.1 Android-9 Android-10Android ID: A-174150451\n\n- CVE-2021-0449: In the Titan M chip firmware, there is a possible disclosure of stack memory due to uninitialized data. This could lead to local information disclosure with System execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-175117965\n\n- CVE-2021-0450: In the Titan M chip firmware, there is a possible disclosure of stack memory due to uninitialized data. This could lead to local information disclosure with System execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-175117880\n\n- CVE-2021-0451: In the Titan M chip firmware, there is a possible disclosure of stack memory due to uninitialized data. This could lead to local information disclosure with System execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-175117871\n\n- CVE-2021-0452: In the Titan M chip firmware, there is a possible disclosure of stack memory due to uninitialized data. This could lead to local information disclosure with System execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-175117261\n\n- CVE-2021-0453: In the Titan-M chip firmware, there is a possible disclosure of stack memory due to uninitialized data. This could lead to local information disclosure with System execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-175117199\n\n- CVE-2021-1820: A memory initialization issue was addressed with improved memory handling. This issue is fixed in macOS Big Sur 11.3, iOS 14.5 and iPadOS 14.5, watchOS 7.4, tvOS 14.5. Processing maliciously crafted web content may result in the disclosure of process memory.\n\n- CVE-2021-36319: Dell Networking OS10 versions 10.4.3.x, 10.5.0.x and 10.5.1.x contain an information exposure vulnerability. A low privileged authenticated malicious user can gain access to SNMP authentication failure messages.\n\n- CVE-2020-25578: In FreeBSD 12.2-STABLE before r368969, 11.4-STABLE before r369047, 12.2-RELEASE before p3, 12.1-RELEASE before p13 and 11.4-RELEASE before p7 several file systems were not properly initializing the d_off field of the dirent structures returned by VOP_READDIR. In particular, tmpfs(5), smbfs(5), autofs(5) and mqueuefs(5) were failing to do so. As a result, eight uninitialized kernel stack bytes may be leaked to userspace by these file systems.\n\n- CVE-2021-35995: Adobe After Effects version 18.2.1 (and earlier) is affected by an Improper input validation vulnerability when parsing a specially crafted file. An unauthenticated attacker could leverage this vulnerability to disclose arbitrary memory information in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file.\n\n- CVE-2021-36006: Adobe Photoshop versions 21.2.9 (and earlier) and 22.4.2 (and earlier) are affected by an Improper input validation vulnerability when parsing a specially crafted file. An unauthenticated attacker could leverage this vulnerability to disclose arbitrary memory information in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file.\n\n- CVE-2021-44492: An issue was discovered in YottaDB through r1.32 and V7.0-000 and FIS GT.M through V7.0-000. Using crafted input, attackers can cause a type to be incorrectly initialized in the function f_incr in sr_port/f_incr.c and cause a crash due to a NULL pointer dereference.\n\n- CVE-2021-44498: An issue was discovered in FIS GT.M through V7.0-000 (related to the YottaDB code base). Using crafted input, attackers can cause a type to be incorrectly initialized in the function f_incr in sr_port/f_incr.c and cause a crash due to a NULL pointer dereference.\n\n- CVE-2021-39636: In do_ipt_get_ctl and do_ipt_set_ctl of ip_tables.c, there is a possible way to leak kernel information due to uninitialized data. This could lead to local information disclosure with system execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-120612905References: Upstream kernel\n\n- CVE-2020-27950: A memory initialization issue was addressed. This issue is fixed in macOS Big Sur 11.0.1, watchOS 7.1, iOS 12.4.9, watchOS 6.2.9, Security Update 2020-006 High Sierra, Security Update 2020-006 Mojave, iOS 14.2 and iPadOS 14.2, watchOS 5.3.9, macOS Catalina 10.15.7 Supplemental Update, macOS Catalina 10.15.7 Update. A malicious application may be able to disclose kernel memory.\n\n- CVE-2021-38647: Open Management Infrastructure Remote Code Execution Vulnerability\n\n- CVE-2022-2620: Use after free in WebUI in Google Chrome on Chrome OS prior to 104.0.5112.79 allowed a remote attacker who convinced a user to engage in specific user interactions to potentially exploit heap corruption via specific UI interactions.\n\n- CVE-2022-2472: Improper Initialization vulnerability in the local server component of EZVIZ CS-C6N-A0-1C2WFR allows a local attacker to read the contents of the memory space containing the encrypted admin password. This issue affects: EZVIZ CS-C6N-A0-1C2WFR versions prior to 5.3.0 build 220428.\n\n- CVE-2022-29695: Unicorn Engine v2.0.0-rc7 contains memory leaks caused by an incomplete unicorn engine initialization.\n\n- CVE-2022-46505: An issue in MatrixSSL 4.5.1-open and earlier leads to failure to securely check the SessionID field, resulting in the misuse of an all-zero MasterSecret that can decrypt secret data.\n\nRelated Weaknesses:\n\n- CWE-664 (ChildOf)",
          "type": "Class",
          "source": "sparse",
          "search_source": "weakness:information disclosure vulnerability",
          "sources": [
            "base",
            "weakness"
          ],
          "boost_factor": 2.8,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Discouraged",
              "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
              "comments": "Examine children of this entry to see if there is a better fit",
              "reasons": [
                "Abstraction"
              ]
            }
          }
        },
        {
          "cwe_id": "459",
          "name": "Incomplete Cleanup",
          "description": "The product does not properly \"clean up\" and remove temporary or supporting resources after they have been used.",
          "score": 131.9423867804643,
          "matched_text": "CWE-459: Incomplete Cleanup\n\nType: Base\n\nStatus: Draft\n\nAlternative Terms:\n\nInsufficient Cleanup\n\nInsufficient Cleanup\n\nInsufficient Cleanup\n\nDescription:\n\nThe product does not properly \"clean up\" and remove temporary or supporting resources after they have been used.\n\nReal-World Examples:\n\n- CVE-2000-0552: World-readable temporary file not deleted after use.\n\n- CVE-2005-2293: Temporary file not deleted after use, leaking database usernames and passwords.\n\n- CVE-2002-0788: Interaction error creates a temporary file that can not be deleted due to strong permissions.\n\n- CVE-2002-2066: Alternate data streams for NTFS files are not cleared when files are wiped (alternate channel / infoleak).\n\n- CVE-2002-2067: Alternate data streams for NTFS files are not cleared when files are wiped (alternate channel / infoleak).\n\n- CVE-2002-2068: Alternate data streams for NTFS files are not cleared when files are wiped (alternate channel / infoleak).\n\n- CVE-2002-2069: Alternate data streams for NTFS files are not cleared when files are wiped (alternate channel / infoleak).\n\n- CVE-2002-2070: Alternate data streams for NTFS files are not cleared when files are wiped (alternate channel / infoleak).\n\n- CVE-2005-1744: Users not logged out when application is restarted after security-relevant changes were made.\n\nTop 25 CWE Examples:\n\n- CVE-2021-22428: There is an Incomplete Cleanup Vulnerability in Huawei Smartphone.Successful exploitation of this vulnerability may lead to authentication bypass.\n\n- CVE-2021-26833: Cleartext Storage in a File or on Disk in TimelyBills <= 1.7.0 for iOS and versions <= 1.21.115 for Android allows attacker who can locally read user's files obtain JWT tokens for user's account due to insufficient cache clearing mechanisms. A threat actor can obtain sensitive user data by decoding the tokens as JWT is signed and encoded, not encrypted.\n\n- CVE-2021-34421: The Keybase Client for Android before version 5.8.0 and the Keybase Client for iOS before version 5.8.0 fails to properly remove exploded messages initiated by a user if the receiving user places the chat session in the background while the sending user explodes the messages. This could lead to disclosure of sensitive information which was meant to be deleted from the customer's device.\n\n- CVE-2021-39327: The BulletProof Security WordPress plugin is vulnerable to sensitive information disclosure due to a file path disclosure in the publicly accessible ~/db_backup_log.txt file which grants attackers the full path of the site, in addition to the path of database backup files. This affects versions up to, and including, 5.1.\n\n- CVE-2021-45330: An issue exsits in Gitea through 1.15.7, which could let a malicious user gain privileges due to client side cookies not being deleted and the session remains valid on the server side for reuse.\n\n- CVE-2021-4147: A flaw was found in the libvirt libxl driver. A malicious guest could continuously reboot itself and cause libvirtd on the host to deadlock or crash, resulting in a denial of service condition.\n\n- CVE-2022-23035: Insufficient cleanup of passed-through device IRQs The management of IRQs associated with physical devices exposed to x86 HVM guests involves an iterative operation in particular when cleaning up after the guest's use of the device. In the case where an interrupt is not quiescent yet at the time this cleanup gets invoked, the cleanup attempt may be scheduled to be retried. When multiple interrupts are involved, this scheduling of a retry may get erroneously skipped. At the same time pointers may get cleared (resulting in a de-reference of NULL) and freed (resulting in a use-after-free), while other code would continue to assume them to be valid.\n\n- CVE-2022-1473: The OPENSSL_LH_flush() function, which empties a hash table, contains a bug that breaks reuse of the memory occuppied by the removed hash table entries. This function is used when decoding certificates or keys. If a long lived process periodically decodes certificates or keys its memory usage will expand without bounds and the process might be terminated by the operating system causing a denial of service. Also traversing the empty hash table entries will take increasingly more time. Typically such long lived processes might be TLS clients or TLS servers configured to accept client certificate authentication. The function was added in the OpenSSL 3.0 version thus older releases are not affected by the issue. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2).\n\n- CVE-2022-27639: Incomplete cleanup in some Intel(R) XMM(TM) 7560 Modem software before version M2_7560_R_01.2146.00 may allow a privileged user to potentially enable escalation of privilege via adjacent access.\n\n- CVE-2022-29160: Nextcloud Android is the Android client for Nextcloud, a self-hosted productivity platform. Prior to version 3.19.0, sensitive tokens, images, and user related details exist after deletion of a user account. This could result in misuse of the former account holder's information. Nextcloud Android version 3.19.0 contains a patch for this issue. There are no known workarounds available.\n\n- CVE-2022-25664: Information disclosure due to exposure of information while GPU reads the data in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Wearables\n\nRelated Weaknesses:\n\n- CWE-404 (ChildOf)\n\n- CWE-404 (ChildOf)",
          "type": "Base",
          "source": "sparse",
          "search_source": "weakness:information disclosure vulnerability",
          "sources": [
            "base",
            "weakness"
          ],
          "boost_factor": 2.8,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            }
          }
        },
        {
          "cwe_id": "204",
          "name": "Observable Response Discrepancy",
          "description": "The product provides different responses to incoming requests in a way that reveals internal state information to an unauthorized actor outside of the intended control sphere.",
          "score": 131.760667517767,
          "matched_text": "CWE-204: Observable Response Discrepancy\n\nType: Base\n\nStatus: Incomplete\n\nDescription:\n\nThe product provides different responses to incoming requests in a way that reveals internal state information to an unauthorized actor outside of the intended control sphere.\n\nExtended Details:\n\nThis issue frequently occurs during authentication, where a difference in failed-login messages could allow an attacker to determine if the username is valid or not. These exposures can be inadvertent (bug) or intentional (design).\n\nReal-World Examples:\n\n- CVE-2002-2094: This, and others, use \"..\" attacks and monitor error responses, so there is overlap with directory traversal.\n\n- CVE-2001-1483: Enumeration of valid usernames based on inconsistent responses\n\n- CVE-2001-1528: Account number enumeration via inconsistent responses.\n\n- CVE-2004-2150: User enumeration via discrepancies in error messages.\n\n- CVE-2005-1650: User enumeration via discrepancies in error messages.\n\n- CVE-2004-0294: Bulletin Board displays different error messages when a user exists or not, which makes it easier for remote attackers to identify valid users and conduct a brute force password guessing attack.\n\n- CVE-2004-0243: Operating System, when direct remote login is disabled, displays a different message if the password is correct, which allows remote attackers to guess the password via brute force methods.\n\n- CVE-2002-0514: Product allows remote attackers to determine if a port is being filtered because the response packet TTL is different than the default TTL.\n\n- CVE-2002-0515: Product sets a different TTL when a port is being filtered than when it is not being filtered, which allows remote attackers to identify filtered ports by comparing TTLs.\n\n- CVE-2001-1387: Product may generate different responses than specified by the administrator, possibly leading to an information leak.\n\n- CVE-2004-0778: Version control system allows remote attackers to determine the existence of arbitrary files and directories via the -X command for an alternate history file, which causes different error messages to be returned.\n\n- CVE-2004-1428: FTP server generates an error message if the user name does not exist instead of prompting for a password, which allows remote attackers to determine valid usernames.\n\nTop 25 CWE Examples:\n\n- CVE-2021-0086: Observable response discrepancy in floating-point operations for some Intel(R) Processors may allow an authorized user to potentially enable information disclosure via local access.\n\n- CVE-2021-0089: Observable response discrepancy in some Intel(R) Processors may allow an authorized user to potentially enable information disclosure via local access.\n\n- CVE-2021-20376: IBM Sterling File Gateway 2.2.0.0 through 6.1.1.0 could allow an authenticated attacker to enumerate usernames due to there being an observable discrepancy in returned messages. IBM X-Force ID: 195568.\n\n- CVE-2021-37151: CyberArk Identity 21.5.131, when handling an invalid authentication attempt, sometimes reveals whether the username is valid. In certain authentication policy configurations with MFA, the API response length can be used to differentiate between a valid user and an invalid one (aka Username Enumeration). Response differentiation enables attackers to enumerate usernames of valid application users. Attackers can use this information to leverage brute-force and dictionary attacks in order to discover valid account information such as passwords.\n\n- CVE-2021-37968: Inappropriate implementation in Background Fetch API in Google Chrome prior to 94.0.4606.54 allowed a remote attacker to leak cross-origin data via a crafted HTML page.\n\n- CVE-2020-35518: When binding against a DN during authentication, the reply from 389-ds-base will be different whether the DN exists or not. This can be used by an unauthenticated attacker to check the existence of an entry in the LDAP database.\n\n- CVE-2021-27583: In Directus 8.x through 8.8.1, an attacker can discover whether a user is present in the database through the password reset feature. NOTE: This vulnerability only affects products that are no longer supported by the maintainer\n\n- CVE-2021-22892: An information disclosure vulnerability exists in the Rocket.Chat server fixed v3.13, v3.12.2 & v3.11.3 that allowed email addresses to be disclosed by enumeration and validation checks.\n\n- CVE-2021-44848: In Cibele Thinfinity VirtualUI before 3.0, /changePassword returns different responses for invalid authentication requests depending on whether the username exists.\n\n- CVE-2021-20049: A vulnerability in SonicWall SMA100 password change API allows a remote unauthenticated attacker to perform SMA100 username enumeration based on the server responses. This vulnerability impacts 10.2.1.2-24sv, 10.2.0.8-37sv and earlier 10.x versions.\n\n- CVE-2022-24784: Statamic is a Laravel and Git powered CMS. Before versions 3.2.39 and 3.3.2, it is possible to confirm a single character of a user's password hash using a specially crafted regular expression filter in the users endpoint of the REST API. Multiple such requests can eventually uncover the entire hash. The hash is not present in the response, however the presence or absence of a result confirms if the character is in the right position. The API has throttling enabled by default, making this a time intensive task. Both the REST API and the users endpoint need to be enabled, as they are disabled by default. The issue has been fixed in versions 3.2.39 and above, and 3.3.2 and above.\n\n- CVE-2021-20147: ManageEngine ADSelfService Plus below build 6116 contains an observable response discrepancy in the UMCP operation of the ChangePasswordAPI. This allows an unauthenticated remote attacker to determine whether a Windows domain user exists.\n\n- CVE-2021-38009: Inappropriate implementation in cache in Google Chrome prior to 96.0.4664.45 allowed a remote attacker to leak cross-origin data via a crafted HTML page.\n\n- CVE-2022-1139: Inappropriate implementation in Background Fetch API in Google Chrome prior to 100.0.4896.60 allowed a remote attacker to leak cross-origin data via a crafted HTML page.\n\n- CVE-2022-27814: SWHKD 1.1.5 allows arbitrary file-existence tests via the -c option.\n\n- CVE-2022-47952: lxc-user-nic in lxc through 5.0.1 is installed setuid root, and may allow local users to infer whether any file exists, even within a protected directory tree, because \"Failed to open\" often indicates that a file does not exist, whereas \"does not refer to a network namespace path\" often indicates that a file exists. NOTE: this is different from CVE-2018-6556 because the CVE-2018-6556 fix design was based on the premise that \"we will report back to the user that the open() failed but the user has no way of knowing why it failed\"; however, in many realistic cases, there are no plausible reasons for failing except that the file does not exist.\n\n- CVE-2022-24032: Adenza AxiomSL ControllerView through 10.8.1 is vulnerable to user enumeration. An attacker can identify valid usernames on the platform because a failed login attempt produces a different error message when the username is valid.\n\n- CVE-2022-0569: Observable Discrepancy in Packagist snipe/snipe-it prior to v5.3.9. \n\nRelated Weaknesses:\n\n- CWE-203 (ChildOf)",
          "type": "Base",
          "source": "sparse",
          "search_source": "weakness:information disclosure vulnerability",
          "sources": [
            "base",
            "weakness"
          ],
          "boost_factor": 2.8,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            }
          }
        },
        {
          "cwe_id": "319",
          "name": "Cleartext Transmission of Sensitive Information",
          "description": "The product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.",
          "score": 131.10727641882448,
          "matched_text": "CWE-319: Cleartext Transmission of Sensitive Information\n\nType: Base\n\nStatus: Draft\n\nDescription:\n\nThe product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.\n\nExtended Details:\n\n\n\nMany communication channels can be \"sniffed\" (monitored) by adversaries during data transmission. For example, in networking, packets can traverse many intermediary nodes from the source to the destination, whether across the internet, an internal network, the cloud, etc. Some actors might have privileged access to a network interface or any link along the channel, such as a router, but they might not be authorized to collect the underlying data. As a result, network traffic could be sniffed by adversaries, spilling security-critical data.\n\n\nApplicable communication channels are not limited to software products. Applicable channels include hardware-specific technologies such as internal hardware networks and external debug channels, supporting remote JTAG debugging. When mitigations are not applied to combat adversaries within the product's threat model, this weakness significantly lowers the difficulty of exploitation by such adversaries.\n\n\nWhen full communications are recorded or logged, such as with a packet dump, an adversary could attempt to obtain the dump long after the transmission has occurred and try to \"sniff\" the cleartext from the recorded communications in the dump itself. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information. \n\n\nReal-World Examples:\n\n- CVE-2022-29519: Programmable Logic Controller (PLC) sends sensitive information in plaintext, including passwords and session tokens.\n\n- CVE-2022-30312: Building Controller uses a protocol that transmits authentication credentials in plaintext.\n\n- CVE-2022-31204: Programmable Logic Controller (PLC) sends password in plaintext.\n\n- CVE-2002-1949: Passwords transmitted in cleartext.\n\n- CVE-2008-4122: Chain: Use of HTTPS cookie without \"secure\" flag causes it to be transmitted across unencrypted HTTP.\n\n- CVE-2008-3289: Product sends password hash in cleartext in violation of intended policy.\n\n- CVE-2008-4390: Remote management feature sends sensitive information including passwords in cleartext.\n\n- CVE-2007-5626: Backup routine sends password in cleartext in email.\n\n- CVE-2004-1852: Product transmits Blowfish encryption key in cleartext.\n\n- CVE-2008-0374: Printer sends configuration information, including administrative password, in cleartext.\n\n- CVE-2007-4961: Chain: cleartext transmission of the MD5 hash of password enables attacks against a server that is susceptible to replay (CWE-294).\n\n- CVE-2007-4786: Product sends passwords in cleartext to a log server.\n\n- CVE-2005-3140: Product sends file with cleartext passwords in e-mail message intended for diagnostic purposes.\n\nTop 25 CWE Examples:\n\n- CVE-2021-38142: Barco MirrorOp Windows Sender before 2.5.3.65 uses cleartext HTTP and thus allows rogue software upgrades. An attacker on the local network can achieve remote code execution on any computer that tries to update Windows Sender due to the fact that the upgrade mechanism is not secured (is not protected with TLS).\n\n- CVE-2020-12730: MagicMotion Flamingo 2 lacks BLE encryption, enabling data sniffing and packet forgery.\n\n- CVE-2020-26197: Dell PowerScale OneFS 8.1.0 - 9.1.0 contains an LDAP Provider inability to connect over TLSv1.2 vulnerability. It may make it easier to eavesdrop and decrypt such traffic for a malicious actor. Note: This does not affect clusters which are not relying on an LDAP server for the authentication provider.\n\n- CVE-2020-27184: The NPort IA5000A Series devices use Telnet as one of the network device management services. Telnet does not support the encryption of client-server communications, making it vulnerable to Man-in-the-Middle attacks.\n\n- CVE-2020-4980: IBM QRadar SIEM 7.3 and 7.4 uses less secure methods for protecting data in transit between hosts when encrypt host connections is not enabled as well as data at rest. IBM X-Force ID: 192539.\n\n- CVE-2021-27574: An issue was discovered in Emote Remote Mouse through 4.0.0.0. It uses cleartext HTTP to check, and request, updates. Thus, attackers can machine-in-the-middle a victim to download a malicious binary in place of the real update, with no SSL errors or warnings.\n\n- CVE-2021-36382: Devolutions Server before 2021.1.18, and LTS before 2020.3.20, allows attackers to intercept private keys via a man-in-the-middle attack against the connections/partial endpoint (which accepts cleartext).\n\n- CVE-2021-39272: Fetchmail before 6.4.22 fails to enforce STARTTLS session encryption in some circumstances, such as a certain situation with IMAP and PREAUTH.\n\n- CVE-2021-40366: A vulnerability has been identified in Climatix POL909 (AWB module) (All versions < V11.42), Climatix POL909 (AWM module) (All versions < V11.34). The web server of affected devices transmits data without TLS encryption. This could allow an unauthenticated remote attacker in a man-in-the-middle position to read sensitive data, such as administrator credentials, or modify data in transit.\n\n- CVE-2021-44518: An issue was discovered in the eGeeTouch 3rd Generation Travel Padlock application for Android. The lock sends a pairing code before each operation (lock or unlock) activated via the companion app. The code is sent unencrypted, allowing any attacker with the same app (either Android or iOS) to add the lock and take complete control. For successful exploitation, the attacker must be able to touch the lock's power button, and must be able to capture BLE network communication.\n\n- CVE-2021-33900: While investigating DIRSTUDIO-1219 it was noticed that configured StartTLS encryption was not applied when any SASL authentication mechanism (DIGEST-MD5, GSSAPI) was used. While investigating DIRSTUDIO-1220 it was noticed that any configured SASL confidentiality layer was not applied. This issue affects Apache Directory Studio version 2.0.0.v20210213-M16 and prior versions.\n\n- CVE-2021-27569: An issue was discovered in Emote Remote Mouse through 4.0.0.0. Attackers can maximize or minimize the window of a running process by sending the process name in a crafted packet. This information is sent in cleartext and is not protected by any authentication logic.\n\n- CVE-2021-34825: Quassel through 0.13.1, when --require-ssl is enabled, launches without SSL or TLS support if a usable X.509 certificate is not found on the local system.\n\n- CVE-2021-3774: Meross Smart Wi-Fi 2 Way Wall Switch (MSS550X), on its 3.1.3 version and before, creates an open Wi-Fi Access Point without the required security measures in its initial setup. This could allow a remote attacker to obtain the Wi-Fi SSID as well as the password configured by the user from Meross app via Http/JSON plain request.\n\n- CVE-2021-44480: Wokka Lokka Q50 devices through 2021-11-30 allow remote attackers (who know the SIM phone number and password) to listen to a device's surroundings via a callback in an SMS command, as demonstrated by the 123456 and 523681 default passwords.\n\n- CVE-2021-38370: In Alpine before 2.25, untagged responses from an IMAP server are accepted before STARTTLS.\n\n- CVE-2021-38372: In KDE Trojita 0.7, man-in-the-middle attackers can create new folders because untagged responses from an IMAP server are accepted before STARTTLS.\n\n- CVE-2021-38373: In KDE KMail 19.12.3 (aka 5.13.3), the SMTP STARTTLS option is not honored (and cleartext messages are sent) unless \"Server requires authentication\" is checked.\n\n- CVE-2021-20623: Video Insight VMS versions prior to 7.8 allows a remote attacker to execute arbitrary code with the system user privilege by sending a specially crafted request.\n\n- CVE-2021-38978: IBM Tivoli Key Lifecycle Manager 3.0, 3.0.1, 4.0, and 4.1 could allow a remote attacker to obtain sensitive information, caused by the failure to properly enable HTTP Strict Transport Security. An attacker could exploit this vulnerability to obtain sensitive information using man in the middle techniques. IBM X-Force ID: 212783.\n\n- CVE-2021-20409: IBM Security Verify Information Queue 1.0.6 and 1.0.7 could allow a remote attacker to obtain sensitive information, caused by the failure to properly enable HTTP Strict Transport Security. An attacker could exploit this vulnerability to obtain sensitive information using man in the middle techniques. IBM X-Force ID: 196188. \n\n- CVE-2021-20564: IBM Cloud Pak for Security (CP4S) 1.4.0.0, 1.5.0.0, 1.5.0.1, 1.6.0.0, and 1.6.0.1 could allow a remote attacker to obtain sensitive information, caused by the failure to properly enable HTTP Strict Transport Security. An attacker could exploit this vulnerability to obtain sensitive information using man in the middle techniques. IBM X-Force ID: 199235.\n\n- CVE-2021-45735: TOTOLINK X5000R v9.1.0u.6118_B20201102 was discovered to use the HTTP protocol for authentication into the admin interface, allowing attackers to intercept user credentials via packet capture software.\n\n- CVE-2021-21963: An information disclosure vulnerability exists in the Web Server functionality of Sealevel Systems, Inc. SeaConnect 370W v1.3.34. A specially-crafted man-in-the-middle attack can lead to a disclosure of sensitive information. An attacker can perform a man-in-the-middle attack to trigger this vulnerability.\n\n- CVE-2021-45104: An issue was discovered in HTCondor 9.0.x before 9.0.10 and 9.1.x before 9.5.1. An attacker who can capture HTCondor network data can interfere with users' jobs and data.\n\n- CVE-2021-27422: GE UR firmware versions prior to version 8.1x web server interface is supported on UR over HTTP protocol. It allows sensitive information exposure without authentication.\n\n- CVE-2021-29838: IBM Security Guardium Insights 3.0 could allow a remote attacker to obtain sensitive information, caused by the failure to properly enable HTTP Strict Transport Security. An attacker could exploit this vulnerability to obtain sensitive information using man in the middle techniques.\n\n- CVE-2021-39026: IBM Guardium Data Encryption (GDE) 5.0.0.2 and 5.0.0.3 could allow a remote attacker to obtain sensitive information, caused by the failure to properly enable HTTP Strict Transport Security. An attacker could exploit this vulnerability to obtain sensitive information using man in the middle techniques. IBM X-Force ID: 213964.\n\n- CVE-2020-27373: Dr Trust USA iCheck Connect BP Monitor BP Testing 118 1.2.1 is vulnerable to Plain text command over BLE.\n\n- CVE-2020-4970: IBM Security Identity Governance and Intelligence 5.2.4, 5.2.5, and 5.2.6 could allow a remote attacker to obtain sensitive information, caused by the failure to properly enable HTTP Strict Transport Security. An attacker could exploit this vulnerability to obtain sensitive information using man in the middle techniques. IBM X-Force ID: 192429.\n\n- CVE-2022-23509: Weave GitOps is a simple open source developer platform for people who want cloud native applications, without needing Kubernetes expertise. GitOps run has a local S3 bucket which it uses for synchronizing files that are later applied against a Kubernetes cluster. The communication between GitOps Run and the local S3 bucket is not encrypted. This allows privileged users or process to tap the local traffic to gain information permitting access to the s3 bucket. From that point, it would be possible to alter the bucket content, resulting in changes in the Kubernetes cluster's resources. There are no known workaround(s) for this vulnerability. This vulnerability has been fixed by commits ce2bbff and babd915. Users should upgrade to Weave GitOps version >= v0.12.0 released on 08/12/2022. \n\n- CVE-2022-39287: tiny-csrf is a Node.js cross site request forgery (CSRF) protection middleware. In versions prior to 1.1.0 cookies were not encrypted and thus CSRF tokens were transmitted in the clear. This issue has been addressed in commit `8eead6d` and the patch with be included in version 1.1.0. Users are advised to upgrade. There are no known workarounds for this issue.\n\n- CVE-2021-1896: Weak configuration in WLAN could cause forwarding of unencrypted packets from one client to another in Snapdragon Compute, Snapdragon Connectivity\n\n- CVE-2021-35246: The application fails to prevent users from connecting to it over unencrypted connections. An attacker able to modify a legitimate user's network traffic could bypass the application's use of SSL/TLS encryption and use the application as a platform for attacks against its users.\n\n- CVE-2021-40148: In Modem EMM, there is a possible information disclosure due to a missing data encryption. This could lead to remote information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: MOLY00716585; Issue ID: ALPS05886933.\n\n- CVE-2021-4161: The affected products contain vulnerable firmware, which could allow an attacker to sniff the traffic and decrypt login credential details. This could give an attacker admin rights through the HTTP web server.\n\n- CVE-2021-41849: An issue was discovered in Luna Simo PPR1.180610.011/202001031830. It sends the following Personally Identifiable Information (PII) in plaintext using HTTP to servers located in China: user's list of installed apps and device International Mobile Equipment Identity (IMEI). This PII is transmitted to log.skyroam.com.cn using HTTP, independent of whether the user uses the Simo software.\n\n- CVE-2021-43270: Datalust Seq.App.EmailPlus (aka seq-app-htmlemail) 3.1.0-dev-00148, 3.1.0-dev-00170, and 3.1.0-dev-00176 can use cleartext SMTP on port 25 in some cases where encryption on port 465 was intended.\n\n- CVE-2022-1524: LRM version 2.4 and lower does not implement TLS encryption. A malicious actor can MITM attack sensitive data in-transit, including credentials.\n\n- CVE-2022-21951: A Cleartext Transmission of Sensitive Information vulnerability in SUSE Rancher, Rancher allows attackers on the network to read and change network data due to missing encryption of data transmitted via the network when a cluster is created from an RKE template with the CNI value overridden This issue affects: SUSE Rancher Rancher versions prior to 2.5.14; Rancher versions prior to 2.6.5. \n\n- CVE-2022-2338: Softing Secure Integration Server V1.22 is vulnerable to authentication bypass via a machine-in-the-middle attack. The default the administration interface is accessible via plaintext HTTP protocol, facilitating the attack. The HTTP request may contain the session cookie in the request, which may be captured for use in authenticating to the server.\n\n- CVE-2022-32227: A cleartext transmission of sensitive information exists in Rocket.Chat <v5, <v4.8.2 and <v4.7.5 relating to Oauth tokens by having the permission \"view-full-other-user-info\", this could cause an oauth token leak in the product.\n\n- CVE-2022-41627:  The physical IoT device of the AliveCor's KardiaMobile, a smartphone-based personal electrocardiogram (EKG) has no encryption for its data-over-sound protocols. Exploiting this vulnerability could allow an attacker to read patient EKG results or create a denial-of-service condition by emitting sounds at similar frequencies as the device, disrupting the smartphone microphone\u2019s ability to accurately read the data. To carry out this attack, the attacker must be close (less than 5 feet) to pick up and emit sound waves. \n\n- CVE-2022-41983: On specific hardware platforms, on BIG-IP versions 16.1.x before 16.1.3.1, 15.1.x before 15.1.7, 14.1.x before 14.1.5.1, and all versions of 13.1.x, while Intel QAT (QuickAssist Technology) and the AES-GCM/CCM cipher is in use, undisclosed conditions can cause BIG-IP to send data unencrypted even with an SSL Profile applied.\n\n- CVE-2022-45877: OpenHarmony-v3.1.4 and prior versions had an vulnerability. PIN code is transmitted to the peer device in plain text during cross-device authentication, which reduces the difficulty of man-in-the-middle attacks.\n\n- CVE-2022-0005: Sensitive information accessible by physical probing of JTAG interface for some Intel(R) Processors with SGX may allow an unprivileged user to potentially enable information disclosure via physical access.\n\n- CVE-2021-22923: When curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened.\n\n- CVE-2022-23223: On Apache ShenYu versions 2.4.0 and 2.4.1, and endpoint existed that disclosed the passwords of all users. Users are recommended to upgrade to version 2.4.2 or later.\n\n- CVE-2022-24978: Zoho ManageEngine ADAudit Plus before 7055 allows authenticated Privilege Escalation on Integrated products. This occurs because a password field is present in a JSON response.\n\n- CVE-2022-25180: Jenkins Pipeline: Groovy Plugin 2648.va9433432b33c and earlier includes password parameters from the original build in replayed builds, allowing attackers with Run/Replay permission to obtain the values of password parameters passed to previous builds of a Pipeline.\n\n- CVE-2022-47714: Last Yard 22.09.8-1 does not enforce HSTS headers\n\n- CVE-2022-0553: There is no check to see if slot 0 is being uploaded from the device to the host. When using encrypted images this means the unencrypted firmware can be retrieved easily.\n\n- CVE-2022-29945: DJI drone devices sold in 2017 through 2022 broadcast unencrypted information about the drone operator's physical location via the AeroScope protocol.\n\n- CVE-2021-31898: In JetBrains WebStorm before 2021.1, HTTP requests were used instead of HTTPS.\n\n- CVE-2022-2083: The Simple Single Sign On WordPress plugin through 4.1.0 leaks its OAuth client_secret, which could be used by attackers to gain unauthorized access to the site.\n\n- CVE-2021-45081: An issue was discovered in Cobbler through 3.3.1. Routines in several files use the HTTP protocol instead of the more secure HTTPS.\n\nRelated Weaknesses:\n\n- CWE-311 (ChildOf)\n\n- CWE-311 (ChildOf)",
          "type": "Base",
          "source": "sparse",
          "search_source": "weakness:information disclosure vulnerability",
          "sources": [
            "base",
            "weakness"
          ],
          "boost_factor": 2.8,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            }
          }
        },
        {
          "cwe_id": "426",
          "name": "Untrusted Search Path",
          "description": "The product searches for critical resources using an externally-supplied search path that can point to resources that are not under the product's direct control.",
          "score": 130.80256208677224,
          "matched_text": "CWE-426: Untrusted Search Path\n\nType: Base\n\nStatus: Stable\n\nAlternative Terms:\n\nUntrusted Path\n\nUntrusted Path\n\nUntrusted Path\n\nDescription:\n\nThe product searches for critical resources using an externally-supplied search path that can point to resources that are not under the product's direct control.\n\nExtended Details:\n\n\n\nThis might allow attackers to execute their own programs, access unauthorized data files, or modify configuration in unexpected ways. If the product uses a search path to locate critical resources such as programs, then an attacker could modify that search path to point to a malicious program, which the targeted product would then execute. The problem extends to any type of critical resource that the product trusts.\n\n\nSome of the most common variants of untrusted search path are:\n\n\n  - In various UNIX and Linux-based systems, the PATH environment variable may be consulted to locate executable programs, and LD_PRELOAD may be used to locate a separate library.\n\n  - In various Microsoft-based systems, the PATH environment variable is consulted to locate a DLL, if the DLL is not found in other paths that appear earlier in the search order.\n\n\n\nReal-World Examples:\n\n- CVE-1999-1120: Application relies on its PATH environment variable to find and execute program.\n\n- CVE-2008-1810: Database application relies on its PATH environment variable to find and execute program.\n\n- CVE-2007-2027: Chain: untrusted search path enabling resultant format string by loading malicious internationalization messages.\n\n- CVE-2008-3485: Untrusted search path using malicious .EXE in Windows environment.\n\n- CVE-2008-2613: setuid program allows compromise using path that finds and loads a malicious library.\n\n- CVE-2008-1319: Server allows client to specify the search path, which can be modified to point to a program that the client has uploaded.\n\nTop 25 CWE Examples:\n\n- CVE-2021-41387: seatd-launch in seatd 0.6.x before 0.6.2 allows privilege escalation because it uses execlp and may be installed setuid root.\n\n- CVE-2021-28249: CA eHealth Performance Manager through 6.3.2.12 is affected by Privilege Escalation via a Dynamically Linked Shared Object Library. To exploit the vulnerability, the ehealth user must create a malicious library in the writable RPATH, to be dynamically linked when the FtpCollector executable is run. The code in the library will be executed as the root user. NOTE: This vulnerability only affects products that are no longer supported by the maintainer\n\n- CVE-2022-22047: Windows Client Server Run-time Subsystem (CSRSS) Elevation of Privilege Vulnerability\n\n- CVE-2021-3305: Beijing Feishu Technology Co., Ltd Feishu v3.40.3 was discovered to contain an untrusted search path vulnerability.\n\n- CVE-2022-36403: Untrusted search path vulnerability in the installer of Device Software Manager prior to Ver.2.20.3.0 allows an attacker to gain privileges via a Trojan horse DLL in an unspecified directory.\n\n- CVE-2021-36666: An issue was discovered in Druva 6.9.0 for MacOS, allows attackers to gain escalated local privileges via the inSyncDecommission.\n\n- CVE-2022-38060: A privilege escalation vulnerability exists in the sudo functionality of OpenStack Kolla git master 05194e7618. A misconfiguration in /etc/sudoers within a container can lead to increased privileges.\n\n- CVE-2022-25366: Cryptomator through 1.6.5 allows DYLIB injection because, although it has the flag 0x1000 for Hardened Runtime, it has the com.apple.security.cs.disable-library-validation and com.apple.security.cs.allow-dyld-environment-variables entitlements. An attacker can exploit this by creating a malicious .dylib file that can be executed via the DYLD_INSERT_LIBRARIES environment variable.\n\n- CVE-2022-39245: Mist is the command-line interface for the makedeb Package Repository. Prior to version 0.9.5, a user-provided `sudo` binary via the `PATH` variable can allow a local user to run arbitrary commands on the user's system with root permissions. Versions 0.9.5 and later contain a patch. No known workarounds exist.\n\n- CVE-2021-21817: An information disclosure vulnerability exists in the Zebra IP Routing Manager functionality of D-LINK DIR-3040 1.13B03. A specially crafted network request can lead to the disclosure of sensitive information. An attacker can send a sequence of requests to trigger this vulnerability.\n\nRelated Weaknesses:\n\n- CWE-642 (ChildOf)\n\n- CWE-668 (ChildOf)\n\n- CWE-673 (ChildOf)\n\n- CWE-427 (PeerOf)\n\n- CWE-428 (PeerOf)",
          "type": "Base",
          "source": "sparse",
          "search_source": "weakness:information disclosure vulnerability",
          "sources": [
            "base",
            "weakness"
          ],
          "boost_factor": 2.8,
          "boosted": true,
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            }
          }
        },
        {
          "cwe_id": "312",
          "name": "Cleartext Storage of Sensitive Information",
          "description": "The product stores sensitive information in cleartext within a resource that might be accessible to another control sphere.",
          "score": 43.23301851672306,
          "matched_text": "CWE-312: Cleartext Storage of Sensitive Information\n\nType: Base\n\nStatus: Draft\n\nDescription:\n\nThe product stores sensitive information in cleartext within a resource that might be accessible to another control sphere.\n\nExtended Details:\n\n\n\nBecause the information is stored in cleartext (i.e., unencrypted), attackers could potentially read it. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information.\n\n\nWhen organizations adopt cloud services, it can be easier for attackers to access the data from anywhere on the Internet.\n\n\nIn some systems/environments such as cloud, the use of \"double encryption\" (at both the software and hardware layer) might be required, and the developer might be solely responsible for both layers, instead of shared responsibility with the administrator of the broader system/environment.\n\n\nReal-World Examples:\n\n- CVE-2022-30275: Remote Terminal Unit (RTU) uses a driver that relies on a password stored in plaintext.\n\n- CVE-2009-2272: password and username stored in cleartext in a cookie\n\n- CVE-2009-1466: password stored in cleartext in a file with insecure permissions\n\n- CVE-2009-0152: chat program disables SSL in some circumstances even when the user says to use SSL.\n\n- CVE-2009-1603: Chain: product uses an incorrect public exponent when generating an RSA key, which effectively disables the encryption\n\n- CVE-2009-0964: storage of unencrypted passwords in a database\n\n- CVE-2008-6157: storage of unencrypted passwords in a database\n\n- CVE-2008-6828: product stores a password in cleartext in memory\n\n- CVE-2008-1567: storage of a secret key in cleartext in a temporary file\n\n- CVE-2008-0174: SCADA product uses HTTP Basic Authentication, which is not encrypted\n\n- CVE-2007-5778: login credentials stored unencrypted in a registry key\n\n- CVE-2001-1481: Plaintext credentials in world-readable file.\n\n- CVE-2005-1828: Password in cleartext in config file.\n\n- CVE-2005-2209: Password in cleartext in config file.\n\n- CVE-2002-1696: Decrypted copy of a message written to disk given a combination of options and when user replies to an encrypted message.\n\n- CVE-2004-2397: Plaintext storage of private key and passphrase in log file when user imports the key.\n\n- CVE-2002-1800: Admin password in plaintext in a cookie.\n\n- CVE-2001-1537: Default configuration has cleartext usernames/passwords in cookie.\n\n- CVE-2001-1536: Usernames/passwords in cleartext in cookies.\n\n- CVE-2005-2160: Authentication information stored in cleartext in a cookie.\n\nTop 25 CWE Examples:\n\n- CVE-2021-21339: TYPO3 is an open source PHP based web content management system. In TYPO3 before versions 6.2.57, 7.6.51, 8.7.40, 9.5.25, 10.4.14, 11.1.1 user session identifiers were stored in cleartext - without processing of additional cryptographic hashing algorithms. This vulnerability cannot be exploited directly and occurs in combination with a chained attack - like for instance SQL injection in any other component of the system. This is fixed in versions 6.2.57, 7.6.51, 8.7.40, 9.5.25, 10.4.14, 11.1.1.\n\n- CVE-2021-29481: Ratpack is a toolkit for creating web applications. In versions prior to 1.9.0, the default configuration of client side sessions results in unencrypted, but signed, data being set as cookie values. This means that if something sensitive goes into the session, it could be read by something with access to the cookies. For this to be a vulnerability, some kind of sensitive data would need to be stored in the session and the session cookie would have to leak. For example, the cookies are not configured with httpOnly and an adjacent XSS vulnerability within the site allowed capture of the cookies. As of version 1.9.0, a securely randomly generated signing key is used. As a workaround, one may supply an encryption key, as per the documentation recommendation.\n\n- CVE-2021-31855: KDE Messagelib through 5.17.0 reveals cleartext of encrypted messages in some situations. Deleting an attachment of a decrypted encrypted message stored on a remote server (e.g., an IMAP server) causes KMail to upload the decrypted content of the message to the remote server. With a crafted message, a user could be tricked into decrypting an encrypted message and then deleting an attachment attached to this message. If the attacker has access to the messages stored on the email server, then the attacker could read the decrypted content of the encrypted message. This occurs in ViewerPrivate::deleteAttachment in messageviewer/src/viewer/viewer_p.cpp.\n\n- CVE-2021-36165: RICON Industrial Cellular Router S9922L 16.10.3(3794) is affected by cleartext storage of sensitive information and sends username and password as base64.\n\n- CVE-2021-35526: Backup file without encryption vulnerability is found in Hitachi ABB Power Grids System Data Manager \u2013 SDM600 allows attacker to gain access to sensitive information. This issue affects: Hitachi ABB Power Grids System Data Manager \u2013 SDM600 1.2 versions prior to FP2 HF6 (Build Nr. 1.2.14002.257).\n\n- CVE-2021-41302: ECOA BAS controller stores sensitive data (backup exports) in clear-text, thus the unauthenticated attacker can remotely query user password and obtain user\u2019s privilege.\n\n- CVE-2021-45077: Netgear Nighthawk R6700 version 1.0.4.120 stores sensitive information in plaintext. All usernames and passwords for the device's associated services are stored in plaintext on the device. For example, the admin password is stored in plaintext in the primary configuration file on the device.\n\n- CVE-2022-26390: The Baxter Spectrum Wireless Battery Module (WBM) stores network credentials and PHI (only applicable to Spectrum IQ pumps using auto programming) in unencrypted form. An attacker with physical access to a device that hasn't had all data and settings erased may be able to extract sensitive information.\n\n- CVE-2022-22069: Devices with keyprotect off may store unencrypted keybox in RPMB and cause cryptographic issue in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Wearables\n\n- CVE-2022-27549: HCL Launch may store certain data for recurring activities in a plain text format.\n\n- CVE-2022-20219: In multiple functions of StorageManagerService.java and UserManagerService.java, there is a possible way to leave user's directories unencrypted due to a logic error in the code. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12LAndroid ID: A-224585613\n\n- CVE-2022-29959: Emerson OpenBSI through 2022-04-29 mishandles credential storage. It is an engineering environment for the ControlWave and Bristol Babcock line of RTUs. This environment provides access control functionality through user authentication and privilege management. The credentials for various users are stored insecurely in the SecUsers.ini file by using a simple string transformation rather than a cryptographic mechanism.\n\nRelated Weaknesses:\n\n- CWE-311 (ChildOf)\n\n- CWE-311 (ChildOf)\n\n- CWE-922 (ChildOf)",
          "type": "Base",
          "search_source": "base_query",
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            }
          }
        },
        {
          "cwe_id": "611",
          "name": "Improper Restriction of XML External Entity Reference",
          "description": "The product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",
          "score": 43.04141683322095,
          "matched_text": "CWE-611: Improper Restriction of XML External Entity Reference\n\nType: Base\n\nStatus: Draft\n\nAlternative Terms:\n\nXXE - An acronym used for the term \"XML eXternal Entities\"\n\nXXE - An acronym used for the term \"XML eXternal Entities\"\n\nXXE - An acronym used for the term \"XML eXternal Entities\"\n\nDescription:\n\nThe product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.\n\nExtended Details:\n\n\n\nXML documents optionally contain a Document Type Definition (DTD), which, among other features, enables the definition of XML entities. It is possible to define an entity by providing a substitution string in the form of a URI. The XML parser can access the contents of this URI and embed these contents back into the XML document for further processing.\n\n\nBy submitting an XML file that defines an external entity with a file:// URI, an attacker can cause the processing application to read the contents of a local file. For example, a URI such as \"file:///c:/winnt/win.ini\" designates (in Windows) the file C:\\Winnt\\win.ini, or file:///etc/passwd designates the password file in Unix-based systems. Using URIs with other schemes such as http://, the attacker can force the application to make outgoing requests to servers that the attacker cannot reach directly, which can be used to bypass firewall restrictions or hide the source of attacks such as port scanning.\n\n\nOnce the content of the URI is read, it is fed back into the application that is processing the XML. This application may echo back the data (e.g. in an error message), thereby exposing the file contents.\n\n\nReal-World Examples:\n\n- CVE-2022-42745: Recruiter software allows reading arbitrary files using XXE\n\n- CVE-2005-1306: A browser control can allow remote attackers to determine the existence of files via Javascript containing XML script.\n\n- CVE-2012-5656: XXE during SVG image conversion\n\n- CVE-2012-2239: XXE in PHP application allows reading the application's configuration file.\n\n- CVE-2012-3489: XXE in database server\n\n- CVE-2012-4399: XXE in rapid web application development framework allows reading arbitrary files.\n\n- CVE-2012-3363: XXE via XML-RPC request.\n\n- CVE-2012-0037: XXE in office document product using RDF.\n\n- CVE-2011-4107: XXE in web-based administration tool for database.\n\n- CVE-2010-3322: XXE in product that performs large-scale data analysis.\n\n- CVE-2009-1699: XXE in XSL stylesheet functionality in a common library used by some web browsers.\n\nTop 25 CWE Examples:\n\n- CVE-2020-25817: SilverStripe through 4.6.0-rc1 has an XXE Vulnerability in CSSContentParser. A developer utility meant for parsing HTML within unit tests can be vulnerable to XML External Entity (XXE) attacks. When this developer utility is misused for purposes involving external or user submitted data in custom project code, it can lead to vulnerabilities such as XSS on HTML output rendered through this custom code. This is now mitigated by disabling external entities during parsing. (The correct CVE ID year is 2020 [CVE-2020-25817, not CVE-2021-25817]).\n\n- CVE-2021-20453: IBM WebSphere Application Server 8.0, 8.5, and 9.0 is vulnerable to a XML External Entity Injection (XXE) attack when processing XML data. A remote attacker could exploit this vulnerability to expose sensitive information or consume memory resources. IBM X-Force ID: 196648.\n\n- CVE-2021-22158: The Proofpoint Insider Threat Management Server (formerly ObserveIT Server) is vulnerable to XML external entity (XXE) injection in the Web Console. The vulnerability requires admin user privileges and knowledge of the XML file's encryption key to successfully exploit. All versions before 7.11 are affected.\n\n- CVE-2021-28973: The XML Import functionality of the Administration console in Perforce Helix ALM 2020.3.1 Build 22 accepts XML input data that is parsed by insecurely configured software components, leading to XXE attacks.\n\n- CVE-2021-30137: Assyst 10 SP7.5 has authenticated XXE leading to SSRF via XML unmarshalling. The application allows users to send JSON or XML data to the server. It was possible to inject malicious XML data through several access points.\n\n- CVE-2021-34706: A vulnerability in the web-based management interface of Cisco Identity Services Engine (ISE) could allow an authenticated, remote attacker to access sensitive information or conduct a server-side request forgery (SSRF) attack through an affected device. This vulnerability is due to improper handling of XML External Entity (XXE) entries when parsing certain XML files. An attacker could exploit this vulnerability by uploading a crafted XML file that contains references to external entities. A successful exploit could allow the attacker to retrieve files from the local system, resulting in the disclosure of sensitive information, or cause the web application to perform arbitrary HTTP requests on behalf of the attacker.\n\n- CVE-2021-38948: IBM InfoSphere Information Server 11.7 is vulnerable to an XML External Entity Injection (XXE) attack when processing XML data. A remote attacker could exploit this vulnerability to expose sensitive information or consume memory resources. IBM X-Force ID: 211402.\n\n- CVE-2021-2401: Vulnerability in the Oracle BI Publisher product of Oracle Fusion Middleware (component: E-Business Suite - XDO). Supported versions that are affected are 5.5.0.0.0, 11.1.1.9.0, 12.2.1.3.0 and 12.2.1.4.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Oracle BI Publisher. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Oracle BI Publisher accessible data. CVSS 3.1 Base Score 5.3 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N).\n\n- CVE-2021-27635: SAP NetWeaver AS for JAVA, versions - 7.20, 7.30, 7.31, 7.40, 7.50, allows an attacker authenticated as an administrator to connect over a network and submit a specially crafted XML file in the application because of missing XML Validation, this vulnerability enables attacker to fully compromise confidentiality by allowing them to read any file on the filesystem or fully compromise availability by causing the system to crash. The attack cannot be used to change any data so that there is no compromise as to integrity.\n\n- CVE-2021-32925: admin/user_import.php in Chamilo 1.11.x reads XML data without disabling the ability to load external entities.\n\n- CVE-2021-44145: In the TransformXML processor of Apache NiFi before 1.15.1 an authenticated user could configure an XSLT file which, if it included malicious external entity calls, may reveal sensitive information.\n\n- CVE-2021-42560: An issue was discovered in CALDERA 2.9.0. The Debrief plugin receives base64 encoded \"SVG\" parameters when generating a PDF document. These SVG documents are parsed in an unsafe manner and can be leveraged for XXE attacks (e.g., File Exfiltration, Server Side Request Forgery, Out of Band Exfiltration, etc.).\n\n- CVE-2022-23170: SysAid - Okta SSO integration - was found vulnerable to XML External Entity Injection vulnerability. Any SysAid environment that uses the Okta SSO integration might be vulnerable. An unauthenticated attacker could exploit the XXE vulnerability by sending a malformed POST request to the identity provider endpoint. An attacker can extract the identity provider endpoint by decoding the SAMLRequest parameter's value and searching for the AssertionConsumerServiceURL parameter's value. It often allows an attacker to view files on the application server filesystem and interact with any back-end or external systems that the application can access. In some situations, an attacker can escalate an XXE attack to compromise the underlying server or other back-end infrastructure by leveraging the XXE vulnerability to perform server-side request forgery (SSRF) attacks.\n\n- CVE-2022-24449: Solar appScreener through 3.10.4, when a valid license is not present, allows XXE and SSRF attacks via a crafted XML document.\n\n- CVE-2022-2458: XML external entity injection(XXE) is a vulnerability that allows an attacker to interfere with an application's processing of XML data. This attack occurs when XML input containing a reference to an external entity is processed by a weakly configured XML parser. The software processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output. Here, XML external entity injection lead to External Service interaction & Internal file read in Business Central and also Kie-Server APIs.\n\n- CVE-2022-27193: CVRF-CSAF-Converter before 1.0.0-rc2 resolves XML External Entities (XXE). This leads to the inclusion of arbitrary (local) file content into the generated output document. An attacker can exploit this to disclose information from the system running the converter.\n\n- CVE-2022-3338: An External XML entity (XXE) vulnerability in ePO prior to 5.10 Update 14 can lead to an unauthenticated remote attacker to potentially trigger a Server Side Request Forgery attack. This can be exploited by mimicking the Agent Handler call to ePO and passing the carefully constructed XML file through the API.\n\n- CVE-2022-35741: Apache CloudStack version 4.5.0 and later has a SAML 2.0 authentication Service Provider plugin which is found to be vulnerable to XML external entity (XXE) injection. This plugin is not enabled by default and the attacker would require that this plugin be enabled to exploit the vulnerability. When the SAML 2.0 plugin is enabled in affected versions of Apache CloudStack could potentially allow the exploitation of XXE vulnerabilities. The SAML 2.0 messages constructed during the authentication flow in Apache CloudStack are XML-based and the XML data is parsed by various standard libraries that are now understood to be vulnerable to XXE injection attacks such as arbitrary file reading, possible denial of service, server-side request forgery (SSRF) on the CloudStack management server.\n\n- CVE-2022-38342: Safe Software FME Server v2021.2.5, v2022.0.0.2 and below was discovered to contain a XML External Entity (XXE) vulnerability which allows authenticated attackers to perform data exfiltration or Server-Side Request Forgery (SSRF) attacks.\n\n- CVE-2022-3980: An XML External Entity (XEE) vulnerability allows server-side request forgery (SSRF) and potential code execution in Sophos Mobile managed on-premises between versions 5.0.0 and 9.7.4.\n\n- CVE-2022-42745: CandidATS version 3.0.0 allows an external attacker to read arbitrary files from the server. This is possible because the application is vulnerable to XXE.\n\n- CVE-2022-45194: CBRN-Analysis before 22 allows XXE attacks via am mws XML document, leading to NTLMv2-SSP hash disclosure.\n\n- CVE-2022-45326: An XML external entity (XXE) injection vulnerability in Kwoksys Kwok Information Server before v2.9.5.SP31 allows remote authenticated users to conduct server-side request forgery (SSRF) attacks.\n\n- CVE-2022-46827: In JetBrains IntelliJ IDEA before 2022.3 an XXE attack leading to SSRF via requests to custom plugin repositories was possible.\n\n- CVE-2022-47514: An XML external entity (XXE) injection vulnerability in XML-RPC.NET before 2.5.0 allows remote authenticated users to conduct server-side request forgery (SSRF) attacks, as demonstrated by a pingback.aspx POST request.\n\n- CVE-2022-47873: Netcad KEOS 1.0 is vulnerable to XML External Entity (XXE) resulting in SSRF with XXE (remote).\n\nRelated Weaknesses:\n\n- CWE-610 (ChildOf)\n\n- CWE-610 (ChildOf)\n\n- CWE-441 (PeerOf)",
          "type": "Base",
          "search_source": "base_query",
          "metadata": {
            "source": "sparse",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            }
          }
        },
        {
          "doc_id": "203",
          "text": "CWE-203: Observable Discrepancy",
          "score": 2.4699999999999998,
          "metadata": {
            "doc_id": "203",
            "name": "Observable Discrepancy",
            "type": "base",
            "original_content": "CWE-203: Observable Discrepancy",
            "relationships": [
              {
                "source_id": "203",
                "target_id": "208",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "203",
                "target_id": "205",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "203",
                "target_id": "204",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "203",
                "target_id": "1303",
                "label": "PARENTOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "203",
                "target_id": "1300",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "203",
                "target_id": "200",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "203",
                "target_id": "200",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "208",
                "target_id": "203",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "205",
                "target_id": "203",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "204",
                "target_id": "203",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "200",
                "target_id": "203",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "1303",
                "target_id": "203",
                "label": "CHILDOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "1300",
                "target_id": "203",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1194"
                }
              },
              {
                "source_id": "1300",
                "target_id": "203",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.3,
              "explicit_mention": 1.0,
              "abstraction_path": 0.9
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "200",
                      "203",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.3,
                  "type": "relationship_chain",
                  "source": "200"
                }
              }
            },
            "is_explicit": true,
            "abstraction_level": "base",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "sparse",
                "graph"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "sparse": 137.67088490931772,
                "graph": 2.4699999999999998
              }
            }
          },
          "similarity": 2.4699999999999998
        },
        {
          "doc_id": "1295",
          "text": "The product fails to adequately prevent the revealing of unnecessary and potentially sensitive system information within debugging messages.",
          "score": 0.6371395957644052,
          "metadata": {
            "doc_id": "1295",
            "name": "Debug Messages Revealing Unnecessary Information",
            "type": "Base",
            "extended_description": "\n\nDebug messages are messages that help troubleshoot an issue by revealing the internal state of the system. For example, debug data in design can be exposed through internal memory array dumps or boot logs through interfaces like UART via TAP commands, scan chain, etc. Thus, the more information contained in a debug message, the easier it is to debug. However, there is also the risk of revealing information that could help an attacker either decipher a vulnerability, and/or gain a better understanding of the system. Thus, this extra information could lower the \"security by obscurity\" factor. While \"security by obscurity\" alone is insufficient, it can help as a part of \"Defense-in-depth\". \n",
            "alternate_terms": [],
            "original_content": "The product fails to adequately prevent the revealing of unnecessary and potentially sensitive system information within debugging messages.",
            "relationships": [
              {
                "source_id": "1295",
                "target_id": "209",
                "label": "PEEROF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "1295",
                "target_id": "200",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "200",
                "target_id": "1295",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "source": "graph",
            "sources": [
              "vector",
              "graph"
            ],
            "vector_score": 0.6371395957644052,
            "graph_score": 3.6399999999999997,
            "score_components": {
              "explicit_mention": 1.0,
              "relationship_chain": 0.7,
              "abstraction_path": 0.9,
              "peer_group": 0.9
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "abstraction_path_down",
                "peer_relationship"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "1295",
                      "209",
                      "PEEROF"
                    ]
                  ],
                  "score": 0.7,
                  "type": "relationship_chain",
                  "source": "209"
                },
                "abstraction_path_down": {
                  "path": [
                    [
                      "200",
                      "1295",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.7200000000000001,
                  "type": "abstraction_path_down",
                  "source": "200"
                },
                "peer_relationship": {
                  "path": [
                    [
                      "1295",
                      "209",
                      "PEEROF"
                    ]
                  ],
                  "score": 0.9,
                  "type": "peer_relationship",
                  "source": "209"
                }
              }
            },
            "is_explicit": true,
            "abstraction_level": "base",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "graph"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "dense": 0.554595689578811,
                "graph": 2.438855838305762
              }
            }
          },
          "similarity": 2.438855838305762
        },
        {
          "doc_id": "209",
          "text": "The product generates an error message that includes sensitive information about its environment, users, or associated data.",
          "score": 0.6343945083943495,
          "metadata": {
            "doc_id": "209",
            "name": "Generation of Error Message Containing Sensitive Information",
            "type": "Base",
            "extended_description": "\n\nThe sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more serious attacks. The error message may be created in different ways:\n\n\n  - self-generated: the source code explicitly constructs the error message and delivers it\n\n  - externally-generated: the external environment, such as a language interpreter, handles the error and constructs its own message, whose contents are not under direct control by the programmer\n\nAn attacker may use the contents of error messages to help launch another, more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of \"..\" sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.",
            "alternate_terms": [],
            "original_content": "The product generates an error message that includes sensitive information about its environment, users, or associated data.",
            "relationships": [
              {
                "source_id": "209",
                "target_id": "756",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "209",
                "target_id": "600",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "209",
                "target_id": "550",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "209",
                "target_id": "211",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "209",
                "target_id": "210",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "209",
                "target_id": "755",
                "label": "CHILDOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "209",
                "target_id": "200",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "209",
                "target_id": "200",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "81",
                "target_id": "209",
                "label": "CANALSOBE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "756",
                "target_id": "209",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "755",
                "target_id": "209",
                "label": "PARENTOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "600",
                "target_id": "209",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "550",
                "target_id": "209",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "211",
                "target_id": "209",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "210",
                "target_id": "209",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "201",
                "target_id": "209",
                "label": "CANALSOBE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "200",
                "target_id": "209",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "1295",
                "target_id": "209",
                "label": "PEEROF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "source": "graph",
            "sources": [
              "vector",
              "graph"
            ],
            "vector_score": 0.6343945083943495,
            "graph_score": 3.6399999999999997,
            "score_components": {
              "relationship_chain": 0.7,
              "explicit_mention": 1.0,
              "abstraction_path": 0.9,
              "peer_group": 0.9
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "abstraction_path_up",
                "abstraction_path_down",
                "peer_relationship"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "1295",
                      "209",
                      "PEEROF"
                    ]
                  ],
                  "score": 0.7,
                  "type": "relationship_chain",
                  "source": "1295"
                },
                "abstraction_path_up": {
                  "path": [
                    [
                      "550",
                      "209",
                      "CHILDOF"
                    ]
                  ],
                  "score": 0.5599999999999999,
                  "type": "abstraction_path_up",
                  "source": "550"
                },
                "abstraction_path_down": {
                  "path": [
                    [
                      "200",
                      "209",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.7200000000000001,
                  "type": "abstraction_path_down",
                  "source": "200"
                },
                "peer_relationship": {
                  "path": [
                    [
                      "1295",
                      "209",
                      "PEEROF"
                    ]
                  ],
                  "score": 0.9,
                  "type": "peer_relationship",
                  "source": "1295"
                }
              }
            },
            "is_explicit": true,
            "abstraction_level": "base",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse",
                "graph"
              ],
              "retriever_count": 3,
              "normalized_scores": {
                "dense": 0.532574261304025,
                "sparse": 141.4299876608809,
                "graph": 2.4377578033577394
              }
            }
          },
          "similarity": 2.4377578033577394
        },
        {
          "doc_id": "756",
          "text": "CWE-756: Missing Custom Error Page",
          "score": 2.2100000000000004,
          "metadata": {
            "doc_id": "756",
            "name": "Missing Custom Error Page",
            "type": "base",
            "original_content": "CWE-756: Missing Custom Error Page",
            "relationships": [
              {
                "source_id": "756",
                "target_id": "7",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "756",
                "target_id": "12",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "756",
                "target_id": "209",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "756",
                "target_id": "755",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "755",
                "target_id": "756",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "7",
                "target_id": "756",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "209",
                "target_id": "756",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "12",
                "target_id": "756",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 1.0,
              "sequence_path": 1.0
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "vulnerability_sequence_forward",
                "vulnerability_sequence_backward"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "209",
                      "756",
                      "CANFOLLOW"
                    ]
                  ],
                  "score": 1.0,
                  "type": "relationship_chain",
                  "source": "209"
                },
                "vulnerability_sequence_forward": {
                  "path": [
                    [
                      "209",
                      "756",
                      "CANFOLLOW"
                    ]
                  ],
                  "score": 0.9,
                  "type": "vulnerability_sequence_forward",
                  "source": "209"
                },
                "vulnerability_sequence_backward": {
                  "path": [
                    [
                      "756",
                      "209",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 1.0,
                  "type": "vulnerability_sequence_backward",
                  "source": "209"
                }
              }
            },
            "position": "before",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 2.2100000000000004
              }
            }
          },
          "similarity": 2.2100000000000004
        },
        {
          "doc_id": "1272",
          "text": "CWE-1272: Sensitive Information Uncleared Before Debug/Power State Transition",
          "score": 2.2100000000000004,
          "metadata": {
            "doc_id": "1272",
            "name": "Sensitive Information Uncleared Before Debug/Power State Transition",
            "type": "base",
            "original_content": "CWE-1272: Sensitive Information Uncleared Before Debug/Power State Transition",
            "relationships": [
              {
                "source_id": "1272",
                "target_id": "200",
                "label": "CANPRECEDE",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "1272",
                "target_id": "226",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "226",
                "target_id": "1272",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "200",
                "target_id": "1272",
                "label": "CANFOLLOW",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 1.0,
              "sequence_path": 1.0
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "vulnerability_sequence_forward",
                "vulnerability_sequence_backward"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "200",
                      "1272",
                      "CANFOLLOW"
                    ]
                  ],
                  "score": 1.0,
                  "type": "relationship_chain",
                  "source": "200"
                },
                "vulnerability_sequence_forward": {
                  "path": [
                    [
                      "200",
                      "1272",
                      "CANFOLLOW"
                    ]
                  ],
                  "score": 0.9,
                  "type": "vulnerability_sequence_forward",
                  "source": "200"
                },
                "vulnerability_sequence_backward": {
                  "path": [
                    [
                      "1272",
                      "200",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 1.0,
                  "type": "vulnerability_sequence_backward",
                  "source": "200"
                }
              }
            },
            "position": "before",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 2.2100000000000004
              }
            }
          },
          "similarity": 2.2100000000000004
        },
        {
          "doc_id": "201",
          "text": "CWE-201: Insertion of Sensitive Information Into Sent Data",
          "score": 2.1762,
          "metadata": {
            "doc_id": "201",
            "name": "Insertion of Sensitive Information Into Sent Data",
            "type": "base",
            "original_content": "CWE-201: Insertion of Sensitive Information Into Sent Data",
            "relationships": [
              {
                "source_id": "201",
                "target_id": "598",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "201",
                "target_id": "226",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "201",
                "target_id": "212",
                "label": "CANFOLLOW",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "201",
                "target_id": "202",
                "label": "CANALSOBE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "201",
                "target_id": "209",
                "label": "CANALSOBE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "201",
                "target_id": "200",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "598",
                "target_id": "201",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "226",
                "target_id": "201",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "212",
                "target_id": "201",
                "label": "CANPRECEDE",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "200",
                "target_id": "201",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.7,
              "abstraction_path": 0.7200000000000001,
              "peer_group": 0.9
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "abstraction_path_down",
                "peer_relationship"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "201",
                      "209",
                      "CANALSOBE"
                    ]
                  ],
                  "score": 0.7,
                  "type": "relationship_chain",
                  "source": "209"
                },
                "abstraction_path_down": {
                  "path": [
                    [
                      "200",
                      "201",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.7200000000000001,
                  "type": "abstraction_path_down",
                  "source": "200"
                },
                "peer_relationship": {
                  "path": [
                    [
                      "201",
                      "209",
                      "CANALSOBE"
                    ]
                  ],
                  "score": 0.9,
                  "type": "peer_relationship",
                  "source": "209"
                }
              }
            },
            "abstraction_level": "base",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 2.1762
              }
            }
          },
          "similarity": 2.1762
        },
        {
          "doc_id": "321",
          "text": "CWE-321: Use of Hard-coded Cryptographic Key",
          "score": 2.172,
          "metadata": {
            "doc_id": "321",
            "name": "Use of Hard-coded Cryptographic Key",
            "type": "variant",
            "original_content": "CWE-321: Use of Hard-coded Cryptographic Key",
            "relationships": [
              {
                "source_id": "321",
                "target_id": "656",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "321",
                "target_id": "798",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1340"
                }
              },
              {
                "source_id": "321",
                "target_id": "798",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1305"
                }
              },
              {
                "source_id": "321",
                "target_id": "798",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "798",
                "target_id": "321",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "656",
                "target_id": "321",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "259",
                "target_id": "321",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "1291",
                "target_id": "321",
                "label": "PEEROF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.7,
              "sequence_path": 0.8,
              "peer_group": 0.9
            },
            "abstraction_factor": 1.2,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "vulnerability_sequence_forward",
                "peer_relationship"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "259",
                      "321",
                      "PEEROF"
                    ]
                  ],
                  "score": 0.7,
                  "type": "relationship_chain",
                  "source": "259"
                },
                "vulnerability_sequence_forward": {
                  "path": [
                    [
                      "259",
                      "656",
                      "CANFOLLOW"
                    ],
                    [
                      "656",
                      "321",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 0.8,
                  "type": "vulnerability_sequence_forward",
                  "source": "259"
                },
                "peer_relationship": {
                  "path": [
                    [
                      "259",
                      "321",
                      "PEEROF"
                    ]
                  ],
                  "score": 0.9,
                  "type": "peer_relationship",
                  "source": "259"
                }
              }
            },
            "position": "after",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 2.172
              }
            }
          },
          "similarity": 2.172
        },
        {
          "doc_id": "600",
          "text": "CWE-600: Uncaught Exception in Servlet ",
          "score": 2.04,
          "metadata": {
            "doc_id": "600",
            "name": "Uncaught Exception in Servlet ",
            "type": "variant",
            "original_content": "CWE-600: Uncaught Exception in Servlet ",
            "relationships": [
              {
                "source_id": "600",
                "target_id": "390",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "600",
                "target_id": "209",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "600",
                "target_id": "248",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "248",
                "target_id": "600",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "209",
                "target_id": "600",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 1.0,
              "sequence_path": 1.0
            },
            "abstraction_factor": 1.2,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "vulnerability_sequence_forward",
                "vulnerability_sequence_backward"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "209",
                      "600",
                      "CANFOLLOW"
                    ]
                  ],
                  "score": 1.0,
                  "type": "relationship_chain",
                  "source": "209"
                },
                "vulnerability_sequence_forward": {
                  "path": [
                    [
                      "209",
                      "600",
                      "CANFOLLOW"
                    ]
                  ],
                  "score": 0.9,
                  "type": "vulnerability_sequence_forward",
                  "source": "209"
                },
                "vulnerability_sequence_backward": {
                  "path": [
                    [
                      "600",
                      "209",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 1.0,
                  "type": "vulnerability_sequence_backward",
                  "source": "209"
                }
              }
            },
            "position": "before",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 2.04
              }
            }
          },
          "similarity": 2.04
        },
        {
          "doc_id": "499",
          "text": "CWE-499: Serializable Class Containing Sensitive Data",
          "score": 2.04,
          "metadata": {
            "doc_id": "499",
            "name": "Serializable Class Containing Sensitive Data",
            "type": "variant",
            "original_content": "CWE-499: Serializable Class Containing Sensitive Data",
            "relationships": [
              {
                "source_id": "499",
                "target_id": "200",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "499",
                "target_id": "668",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "668",
                "target_id": "499",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "200",
                "target_id": "499",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 1.0,
              "sequence_path": 1.0
            },
            "abstraction_factor": 1.2,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "vulnerability_sequence_forward",
                "vulnerability_sequence_backward"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "200",
                      "499",
                      "CANFOLLOW"
                    ]
                  ],
                  "score": 1.0,
                  "type": "relationship_chain",
                  "source": "200"
                },
                "vulnerability_sequence_forward": {
                  "path": [
                    [
                      "200",
                      "499",
                      "CANFOLLOW"
                    ]
                  ],
                  "score": 0.9,
                  "type": "vulnerability_sequence_forward",
                  "source": "200"
                },
                "vulnerability_sequence_backward": {
                  "path": [
                    [
                      "499",
                      "200",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 1.0,
                  "type": "vulnerability_sequence_backward",
                  "source": "200"
                }
              }
            },
            "position": "before",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 2.04
              }
            }
          },
          "similarity": 2.04
        },
        {
          "doc_id": "498",
          "text": "CWE-498: Cloneable Class Containing Sensitive Information",
          "score": 2.04,
          "metadata": {
            "doc_id": "498",
            "name": "Cloneable Class Containing Sensitive Information",
            "type": "variant",
            "original_content": "CWE-498: Cloneable Class Containing Sensitive Information",
            "relationships": [
              {
                "source_id": "498",
                "target_id": "200",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "498",
                "target_id": "668",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "668",
                "target_id": "498",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "200",
                "target_id": "498",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 1.0,
              "sequence_path": 1.0
            },
            "abstraction_factor": 1.2,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "vulnerability_sequence_forward",
                "vulnerability_sequence_backward"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "200",
                      "498",
                      "CANFOLLOW"
                    ]
                  ],
                  "score": 1.0,
                  "type": "relationship_chain",
                  "source": "200"
                },
                "vulnerability_sequence_forward": {
                  "path": [
                    [
                      "200",
                      "498",
                      "CANFOLLOW"
                    ]
                  ],
                  "score": 0.9,
                  "type": "vulnerability_sequence_forward",
                  "source": "200"
                },
                "vulnerability_sequence_backward": {
                  "path": [
                    [
                      "498",
                      "200",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 1.0,
                  "type": "vulnerability_sequence_backward",
                  "source": "200"
                }
              }
            },
            "position": "before",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 2.04
              }
            }
          },
          "similarity": 2.04
        },
        {
          "doc_id": "472",
          "text": "CWE-472: External Control of Assumed-Immutable Web Parameter",
          "score": 1.7680000000000005,
          "metadata": {
            "doc_id": "472",
            "name": "External Control of Assumed-Immutable Web Parameter",
            "type": "base",
            "original_content": "CWE-472: External Control of Assumed-Immutable Web Parameter",
            "relationships": [
              {
                "source_id": "472",
                "target_id": "656",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "472",
                "target_id": "384",
                "label": "REQUIREDBY",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "472",
                "target_id": "471",
                "label": "CHILDOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "472",
                "target_id": "642",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "656",
                "target_id": "472",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "642",
                "target_id": "472",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "471",
                "target_id": "472",
                "label": "PARENTOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "384",
                "target_id": "472",
                "label": "REQUIRES",
                "properties": {
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.8,
              "sequence_path": 0.8
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "vulnerability_sequence_forward"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "259",
                      "656",
                      "CANFOLLOW"
                    ],
                    [
                      "656",
                      "472",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 0.8,
                  "type": "relationship_chain",
                  "source": "259"
                },
                "vulnerability_sequence_forward": {
                  "path": [
                    [
                      "259",
                      "656",
                      "CANFOLLOW"
                    ],
                    [
                      "656",
                      "472",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 0.8,
                  "type": "vulnerability_sequence_forward",
                  "source": "259"
                }
              }
            },
            "position": "after",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.7680000000000005
              }
            }
          },
          "similarity": 1.7680000000000005
        },
        {
          "doc_id": "211",
          "text": "The product performs an operation that triggers an external diagnostic or error message that is not directly generated or controlled by the product, such as an error generated by the programming language interpreter that a software application uses. The error can contain sensitive system information.",
          "score": 0.6459389233306319,
          "metadata": {
            "doc_id": "211",
            "name": "Externally-Generated Error Message Containing Sensitive Information",
            "type": "Base",
            "extended_description": null,
            "alternate_terms": [],
            "original_content": "The product performs an operation that triggers an external diagnostic or error message that is not directly generated or controlled by the product, such as an error generated by the programming language interpreter that a software application uses. The error can contain sensitive system information.",
            "relationships": [
              {
                "source_id": "211",
                "target_id": "537",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "211",
                "target_id": "536",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "211",
                "target_id": "535",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "211",
                "target_id": "209",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "537",
                "target_id": "211",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "536",
                "target_id": "211",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "535",
                "target_id": "211",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "209",
                "target_id": "211",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "source": "graph",
            "sources": [
              "vector",
              "graph"
            ],
            "vector_score": 0.6459389233306319,
            "graph_score": 2.4699999999999998,
            "score_components": {
              "relationship_chain": 0.3,
              "explicit_mention": 1.0,
              "abstraction_path": 0.9
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "abstraction_path_down"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "209",
                      "211",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.3,
                  "type": "relationship_chain",
                  "source": "209"
                },
                "abstraction_path_down": {
                  "path": [
                    [
                      "209",
                      "211",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.7200000000000001,
                  "type": "abstraction_path_down",
                  "source": "209"
                }
              }
            },
            "is_explicit": true,
            "abstraction_level": "base",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "graph"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "dense": 0.5529236893798679,
                "graph": 1.7403755693322525
              }
            }
          },
          "similarity": 1.7403755693322525
        },
        {
          "doc_id": "497",
          "text": "The product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.",
          "score": 0.63672208953951,
          "metadata": {
            "doc_id": "497",
            "name": "Exposure of Sensitive System Information to an Unauthorized Control Sphere",
            "type": "Base",
            "extended_description": "\n\nNetwork-based products, such as web applications, often run on top of an operating system or similar environment. When the product communicates with outside parties, details about the underlying system are expected to remain hidden, such as path names for data files, other OS users, installed packages, the application environment, etc. This system information may be provided by the product itself, or buried within diagnostic or debugging messages. Debugging information helps an adversary learn about the system and form an attack plan.\n\n\nAn information exposure occurs when system data or debugging information leaves the program through an output stream or logging function that makes it accessible to unauthorized parties. Using other weaknesses, an attacker could cause errors to occur; the response to these errors can reveal detailed system information, along with other impacts. An attacker can use messages that reveal technologies, operating systems, and product versions to tune the attack against known vulnerabilities in these technologies. A product may use diagnostic methods that provide significant implementation details such as stack traces as part of its error handling mechanism.\n",
            "alternate_terms": [],
            "original_content": "The product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.",
            "relationships": [
              {
                "source_id": "497",
                "target_id": "548",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "497",
                "target_id": "214",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "497",
                "target_id": "200",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "548",
                "target_id": "497",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "214",
                "target_id": "497",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "200",
                "target_id": "497",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "source": "graph",
            "sources": [
              "vector",
              "graph"
            ],
            "vector_score": 0.63672208953951,
            "graph_score": 2.4699999999999998,
            "score_components": {
              "relationship_chain": 0.3,
              "explicit_mention": 1.0,
              "abstraction_path": 0.9
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "200",
                      "497",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.3,
                  "type": "relationship_chain",
                  "source": "200"
                }
              }
            },
            "is_explicit": true,
            "abstraction_level": "base",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "sparse",
                "graph"
              ],
              "retriever_count": 3,
              "normalized_scores": {
                "dense": 0.5451759642623561,
                "sparse": 134.10517159594693,
                "graph": 1.7366888358158037
              }
            }
          },
          "similarity": 1.7366888358158037
        },
        {
          "doc_id": "532",
          "text": "The product writes sensitive information to a log file.",
          "score": 0.6211589382866943,
          "metadata": {
            "doc_id": "532",
            "name": "Insertion of Sensitive Information into Log File",
            "type": "Base",
            "extended_description": null,
            "alternate_terms": [],
            "original_content": "The product writes sensitive information to a log file.",
            "relationships": [
              {
                "source_id": "532",
                "target_id": "200",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              },
              {
                "source_id": "532",
                "target_id": "538",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "538",
                "target_id": "532",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "200",
                "target_id": "532",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1003"
                }
              }
            ],
            "source": "graph",
            "sources": [
              "vector",
              "graph"
            ],
            "vector_score": 0.6211589382866943,
            "graph_score": 2.4699999999999998,
            "score_components": {
              "relationship_chain": 0.3,
              "explicit_mention": 1.0,
              "abstraction_path": 0.9
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "200",
                      "532",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.3,
                  "type": "relationship_chain",
                  "source": "200"
                }
              }
            },
            "is_explicit": true,
            "abstraction_level": "base",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "graph"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "dense": 0.5542382130927397,
                "graph": 1.7304635753146775
              }
            }
          },
          "similarity": 1.7304635753146775
        },
        {
          "doc_id": "550",
          "text": "Certain conditions, such as network failure, will cause a server error message to be displayed.",
          "score": 0.6346733930172193,
          "metadata": {
            "doc_id": "550",
            "name": "Server-generated Error Message Containing Sensitive Information",
            "type": "Variant",
            "extended_description": "While error messages in and of themselves are not dangerous, per se, it is what an attacker can glean from them that might cause eventual problems.",
            "alternate_terms": [],
            "original_content": "Certain conditions, such as network failure, will cause a server error message to be displayed.",
            "relationships": [
              {
                "source_id": "550",
                "target_id": "209",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "209",
                "target_id": "550",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "source": "graph",
            "sources": [
              "vector",
              "graph"
            ],
            "vector_score": 0.6346733930172193,
            "graph_score": 2.1624,
            "score_components": {
              "relationship_chain": 0.3,
              "explicit_mention": 1.0,
              "abstraction_path": 0.76
            },
            "abstraction_factor": 1.2,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "abstraction_path_down"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "209",
                      "550",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.3,
                  "type": "relationship_chain",
                  "source": "209"
                },
                "abstraction_path_down": {
                  "path": [
                    [
                      "209",
                      "550",
                      "PARENTOF"
                    ]
                  ],
                  "score": 0.76,
                  "type": "abstraction_path_down",
                  "source": "209"
                }
              }
            },
            "is_explicit": true,
            "abstraction_level": "variant",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "dense",
                "graph"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "dense": 0.5515453662079837,
                "graph": 1.5513093572068877
              }
            }
          },
          "similarity": 1.5513093572068877
        },
        {
          "doc_id": "257",
          "text": "CWE-257: Storing Passwords in a Recoverable Format",
          "score": 1.521,
          "metadata": {
            "doc_id": "257",
            "name": "Storing Passwords in a Recoverable Format",
            "type": "base",
            "original_content": "CWE-257: Storing Passwords in a Recoverable Format",
            "relationships": [
              {
                "source_id": "257",
                "target_id": "259",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "257",
                "target_id": "522",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "798",
                "target_id": "257",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "522",
                "target_id": "257",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "259",
                "target_id": "257",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.7,
              "peer_group": 0.9
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "peer_relationship"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "259",
                      "257",
                      "PEEROF"
                    ]
                  ],
                  "score": 0.7,
                  "type": "relationship_chain",
                  "source": "259"
                },
                "peer_relationship": {
                  "path": [
                    [
                      "259",
                      "257",
                      "PEEROF"
                    ]
                  ],
                  "score": 0.9,
                  "type": "peer_relationship",
                  "source": "259"
                }
              }
            },
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.521
              }
            }
          },
          "similarity": 1.521
        },
        {
          "doc_id": "81",
          "text": "CWE-81: Improper Neutralization of Script in an Error Message Web Page",
          "score": 1.404,
          "metadata": {
            "doc_id": "81",
            "name": "Improper Neutralization of Script in an Error Message Web Page",
            "type": "variant",
            "original_content": "CWE-81: Improper Neutralization of Script in an Error Message Web Page",
            "relationships": [
              {
                "source_id": "81",
                "target_id": "390",
                "label": "CANALSOBE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "81",
                "target_id": "209",
                "label": "CANALSOBE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "81",
                "target_id": "79",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "79",
                "target_id": "81",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.7,
              "peer_group": 0.9
            },
            "abstraction_factor": 1.2,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "peer_relationship"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "81",
                      "209",
                      "CANALSOBE"
                    ]
                  ],
                  "score": 0.7,
                  "type": "relationship_chain",
                  "source": "209"
                },
                "peer_relationship": {
                  "path": [
                    [
                      "81",
                      "209",
                      "CANALSOBE"
                    ]
                  ],
                  "score": 0.9,
                  "type": "peer_relationship",
                  "source": "209"
                }
              }
            },
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.404
              }
            }
          },
          "similarity": 1.404
        },
        {
          "doc_id": "656",
          "text": "CWE-656: Reliance on Security Through Obscurity",
          "score": 1.3600000000000003,
          "metadata": {
            "doc_id": "656",
            "name": "Reliance on Security Through Obscurity",
            "type": "class",
            "original_content": "CWE-656: Reliance on Security Through Obscurity",
            "relationships": [
              {
                "source_id": "656",
                "target_id": "472",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "656",
                "target_id": "321",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "656",
                "target_id": "259",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "656",
                "target_id": "693",
                "label": "CHILDOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "656",
                "target_id": "657",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "693",
                "target_id": "656",
                "label": "PARENTOF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "657",
                "target_id": "656",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "603",
                "target_id": "656",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "472",
                "target_id": "656",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "321",
                "target_id": "656",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "259",
                "target_id": "656",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 1.0,
              "sequence_path": 1.0
            },
            "abstraction_factor": 0.8,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "vulnerability_sequence_forward",
                "vulnerability_sequence_backward"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "259",
                      "656",
                      "CANFOLLOW"
                    ]
                  ],
                  "score": 1.0,
                  "type": "relationship_chain",
                  "source": "259"
                },
                "vulnerability_sequence_forward": {
                  "path": [
                    [
                      "259",
                      "656",
                      "CANFOLLOW"
                    ]
                  ],
                  "score": 0.9,
                  "type": "vulnerability_sequence_forward",
                  "source": "259"
                },
                "vulnerability_sequence_backward": {
                  "path": [
                    [
                      "656",
                      "259",
                      "CANPRECEDE"
                    ]
                  ],
                  "score": 1.0,
                  "type": "vulnerability_sequence_backward",
                  "source": "259"
                }
              }
            },
            "position": "before",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed-with-Review",
              "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
              "comments": "Examine children of this entry to see if there is a better fit",
              "reasons": [
                "Abstraction"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.3600000000000003
              }
            }
          },
          "similarity": 1.3600000000000003
        },
        {
          "doc_id": "259",
          "text": "CWE-259: Use of Hard-coded Password",
          "score": 1.2,
          "metadata": {
            "doc_id": "259",
            "name": "Use of Hard-coded Password",
            "type": "variant",
            "original_content": "CWE-259: Use of Hard-coded Password",
            "relationships": [
              {
                "source_id": "259",
                "target_id": "656",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "259",
                "target_id": "257",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "259",
                "target_id": "321",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "259",
                "target_id": "798",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1340"
                }
              },
              {
                "source_id": "259",
                "target_id": "798",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1305"
                }
              },
              {
                "source_id": "259",
                "target_id": "798",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "798",
                "target_id": "259",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "656",
                "target_id": "259",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "257",
                "target_id": "259",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "explicit_mention": 1.0
            },
            "abstraction_factor": 1.2,
            "graph_path_info": {
              "path_types": [],
              "best_paths": {}
            },
            "is_explicit": true,
            "abstraction_level": "variant",
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "sparse",
                "graph"
              ],
              "retriever_count": 2,
              "normalized_scores": {
                "sparse": 133.39706602490705,
                "graph": 1.2
              }
            }
          },
          "similarity": 1.2
        },
        {
          "doc_id": "390",
          "text": "CWE-390: Detection of Error Condition Without Action",
          "score": 1.1466,
          "metadata": {
            "doc_id": "390",
            "name": "Detection of Error Condition Without Action",
            "type": "base",
            "original_content": "CWE-390: Detection of Error Condition Without Action",
            "relationships": [
              {
                "source_id": "390",
                "target_id": "401",
                "label": "CANPRECEDE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "390",
                "target_id": "755",
                "label": "CHILDOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "81",
                "target_id": "390",
                "label": "CANALSOBE",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "755",
                "target_id": "390",
                "label": "PARENTOF",
                "properties": {
                  "ordinal": "Primary",
                  "view_id": "1000"
                }
              },
              {
                "source_id": "600",
                "target_id": "390",
                "label": "PEEROF",
                "properties": {
                  "view_id": "1000"
                }
              },
              {
                "source_id": "401",
                "target_id": "390",
                "label": "CANFOLLOW",
                "properties": {
                  "view_id": "1000"
                }
              }
            ],
            "score_components": {
              "relationship_chain": 0.5599999999999999,
              "peer_group": 0.63
            },
            "abstraction_factor": 1.3,
            "graph_path_info": {
              "path_types": [
                "relationship_chain",
                "peer_relationship"
              ],
              "best_paths": {
                "relationship_chain": {
                  "path": [
                    [
                      "209",
                      "600",
                      "CANFOLLOW"
                    ],
                    [
                      "600",
                      "390",
                      "PEEROF"
                    ]
                  ],
                  "score": 0.5599999999999999,
                  "type": "relationship_chain",
                  "source": "209"
                },
                "peer_relationship": {
                  "path": [
                    [
                      "81",
                      "209",
                      "CANALSOBE"
                    ],
                    [
                      "81",
                      "390",
                      "CANALSOBE"
                    ]
                  ],
                  "score": 0.63,
                  "type": "peer_relationship",
                  "source": "209"
                }
              }
            },
            "sources": [
              "graph"
            ],
            "source": "graph",
            "mapping_notes": {
              "usage": "Allowed",
              "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
              "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
              "reasons": [
                "Acceptable-Use"
              ]
            },
            "score_info": {
              "retrievers": [
                "graph"
              ],
              "retriever_count": 1,
              "normalized_scores": {
                "graph": 1.1466
              }
            }
          },
          "similarity": 1.1466
        }
      ],
      "result_sources": {
        "CWE-200": [
          "dense",
          "sparse"
        ],
        "CWE-1295": [
          "dense",
          "graph"
        ],
        "CWE-532": [
          "dense",
          "graph"
        ],
        "CWE-211": [
          "dense",
          "graph"
        ],
        "CWE-550": [
          "dense",
          "graph"
        ],
        "CWE-213": [
          "dense"
        ],
        "CWE-922": [
          "dense"
        ],
        "CWE-497": [
          "dense",
          "sparse",
          "graph"
        ],
        "CWE-89": [
          "dense"
        ],
        "CWE-202": [
          "dense"
        ],
        "CWE-537": [
          "dense"
        ],
        "CWE-210": [
          "dense"
        ],
        "CWE-209": [
          "dense",
          "sparse",
          "graph"
        ],
        "CWE-215": [
          "dense"
        ],
        "CWE-311": [
          "dense"
        ],
        "CWE-204": [
          "dense",
          "sparse"
        ],
        "CWE-317": [
          "dense"
        ],
        "CWE-912": [
          "dense"
        ],
        "CWE-1230": [
          "dense"
        ],
        "CWE-540": [
          "dense"
        ],
        "CWE-203": [
          "sparse",
          "graph"
        ],
        "CWE-259": [
          "sparse",
          "graph"
        ],
        "CWE-665": [
          "sparse"
        ],
        "CWE-459": [
          "sparse"
        ],
        "CWE-319": [
          "sparse"
        ],
        "CWE-426": [
          "sparse"
        ],
        "CWE-312": [
          "sparse"
        ],
        "CWE-611": [
          "sparse"
        ],
        "CWE-756": [
          "graph"
        ],
        "CWE-1272": [
          "graph"
        ],
        "CWE-201": [
          "graph"
        ],
        "CWE-321": [
          "graph"
        ],
        "CWE-600": [
          "graph"
        ],
        "CWE-499": [
          "graph"
        ],
        "CWE-498": [
          "graph"
        ],
        "CWE-472": [
          "graph"
        ],
        "CWE-257": [
          "graph"
        ],
        "CWE-81": [
          "graph"
        ],
        "CWE-656": [
          "graph"
        ],
        "CWE-390": [
          "graph"
        ]
      },
      "result_scores": {
        "CWE-200": {
          "dense": 0.5568049924521623,
          "sparse": 800.0
        },
        "CWE-1295": {
          "dense": 0.554595689578811,
          "graph": 2.438855838305762
        },
        "CWE-532": {
          "dense": 0.5542382130927397,
          "graph": 1.7304635753146775
        },
        "CWE-211": {
          "dense": 0.5529236893798679,
          "graph": 1.7403755693322525
        },
        "CWE-550": {
          "dense": 0.5515453662079837,
          "graph": 1.5513093572068877
        },
        "CWE-213": {
          "dense": 0.549291948813443
        },
        "CWE-922": {
          "dense": 0.5453782432517486
        },
        "CWE-497": {
          "dense": 0.5451759642623561,
          "sparse": 134.10517159594693,
          "graph": 1.7366888358158037
        },
        "CWE-89": {
          "dense": 0.5345595752446314
        },
        "CWE-202": {
          "dense": 0.5344625142079207
        },
        "CWE-537": {
          "dense": 0.5340224347533604
        },
        "CWE-210": {
          "dense": 0.5330237831275444
        },
        "CWE-209": {
          "dense": 0.532574261304025,
          "sparse": 141.4299876608809,
          "graph": 2.4377578033577394
        },
        "CWE-215": {
          "dense": 0.5228357542846217
        },
        "CWE-311": {
          "dense": 0.5199269653734175
        },
        "CWE-204": {
          "dense": 0.5176821415722559,
          "sparse": 131.760667517767
        },
        "CWE-317": {
          "dense": 0.5175169690567838
        },
        "CWE-912": {
          "dense": 0.516472450544881
        },
        "CWE-1230": {
          "dense": 0.5134293046479486
        },
        "CWE-540": {
          "dense": 0.5127753486266304
        },
        "CWE-203": {
          "sparse": 137.67088490931772,
          "graph": 2.4699999999999998
        },
        "CWE-259": {
          "sparse": 133.39706602490705,
          "graph": 1.2
        },
        "CWE-665": {
          "sparse": 133.041383215544
        },
        "CWE-459": {
          "sparse": 131.9423867804643
        },
        "CWE-319": {
          "sparse": 131.10727641882448
        },
        "CWE-426": {
          "sparse": 130.80256208677224
        },
        "CWE-312": {
          "sparse": 43.23301851672306
        },
        "CWE-611": {
          "sparse": 43.04141683322095
        },
        "CWE-756": {
          "graph": 2.2100000000000004
        },
        "CWE-1272": {
          "graph": 2.2100000000000004
        },
        "CWE-201": {
          "graph": 2.1762
        },
        "CWE-321": {
          "graph": 2.172
        },
        "CWE-600": {
          "graph": 2.04
        },
        "CWE-499": {
          "graph": 2.04
        },
        "CWE-498": {
          "graph": 2.04
        },
        "CWE-472": {
          "graph": 1.7680000000000005
        },
        "CWE-257": {
          "graph": 1.521
        },
        "CWE-81": {
          "graph": 1.404
        },
        "CWE-656": {
          "graph": 1.3600000000000003
        },
        "CWE-390": {
          "graph": 1.1466
        }
      },
      "retriever_results": {
        "graph": [
          {
            "doc_id": "203",
            "text": "CWE-203: Observable Discrepancy",
            "score": 2.4699999999999998,
            "metadata": {
              "doc_id": "203",
              "name": "Observable Discrepancy",
              "type": "base",
              "original_content": "CWE-203: Observable Discrepancy",
              "relationships": [
                {
                  "source_id": "203",
                  "target_id": "208",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "203",
                  "target_id": "205",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "203",
                  "target_id": "204",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "203",
                  "target_id": "1303",
                  "label": "PARENTOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "203",
                  "target_id": "1300",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "203",
                  "target_id": "200",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "203",
                  "target_id": "200",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "208",
                  "target_id": "203",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "205",
                  "target_id": "203",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "204",
                  "target_id": "203",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "200",
                  "target_id": "203",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "1303",
                  "target_id": "203",
                  "label": "CHILDOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "1300",
                  "target_id": "203",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1194"
                  }
                },
                {
                  "source_id": "1300",
                  "target_id": "203",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.3,
                "explicit_mention": 1.0,
                "abstraction_path": 0.9
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "200",
                        "203",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.3,
                    "type": "relationship_chain",
                    "source": "200"
                  }
                }
              },
              "is_explicit": true,
              "abstraction_level": "base",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "sparse",
                  "graph"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "sparse": 137.67088490931772,
                  "graph": 2.4699999999999998
                }
              }
            },
            "similarity": 2.4699999999999998
          },
          {
            "doc_id": "1295",
            "text": "The product fails to adequately prevent the revealing of unnecessary and potentially sensitive system information within debugging messages.",
            "score": 0.6371395957644052,
            "metadata": {
              "doc_id": "1295",
              "name": "Debug Messages Revealing Unnecessary Information",
              "type": "Base",
              "extended_description": "\n\nDebug messages are messages that help troubleshoot an issue by revealing the internal state of the system. For example, debug data in design can be exposed through internal memory array dumps or boot logs through interfaces like UART via TAP commands, scan chain, etc. Thus, the more information contained in a debug message, the easier it is to debug. However, there is also the risk of revealing information that could help an attacker either decipher a vulnerability, and/or gain a better understanding of the system. Thus, this extra information could lower the \"security by obscurity\" factor. While \"security by obscurity\" alone is insufficient, it can help as a part of \"Defense-in-depth\". \n",
              "alternate_terms": [],
              "original_content": "The product fails to adequately prevent the revealing of unnecessary and potentially sensitive system information within debugging messages.",
              "relationships": [
                {
                  "source_id": "1295",
                  "target_id": "209",
                  "label": "PEEROF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "1295",
                  "target_id": "200",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "200",
                  "target_id": "1295",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "source": "graph",
              "sources": [
                "vector",
                "graph"
              ],
              "vector_score": 0.6371395957644052,
              "graph_score": 3.6399999999999997,
              "score_components": {
                "explicit_mention": 1.0,
                "relationship_chain": 0.7,
                "abstraction_path": 0.9,
                "peer_group": 0.9
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "abstraction_path_down",
                  "peer_relationship"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "1295",
                        "209",
                        "PEEROF"
                      ]
                    ],
                    "score": 0.7,
                    "type": "relationship_chain",
                    "source": "209"
                  },
                  "abstraction_path_down": {
                    "path": [
                      [
                        "200",
                        "1295",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.7200000000000001,
                    "type": "abstraction_path_down",
                    "source": "200"
                  },
                  "peer_relationship": {
                    "path": [
                      [
                        "1295",
                        "209",
                        "PEEROF"
                      ]
                    ],
                    "score": 0.9,
                    "type": "peer_relationship",
                    "source": "209"
                  }
                }
              },
              "is_explicit": true,
              "abstraction_level": "base",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "graph"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "dense": 0.554595689578811,
                  "graph": 2.438855838305762
                }
              }
            },
            "similarity": 2.438855838305762
          },
          {
            "doc_id": "209",
            "text": "The product generates an error message that includes sensitive information about its environment, users, or associated data.",
            "score": 0.6343945083943495,
            "metadata": {
              "doc_id": "209",
              "name": "Generation of Error Message Containing Sensitive Information",
              "type": "Base",
              "extended_description": "\n\nThe sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more serious attacks. The error message may be created in different ways:\n\n\n  - self-generated: the source code explicitly constructs the error message and delivers it\n\n  - externally-generated: the external environment, such as a language interpreter, handles the error and constructs its own message, whose contents are not under direct control by the programmer\n\nAn attacker may use the contents of error messages to help launch another, more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of \"..\" sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.",
              "alternate_terms": [],
              "original_content": "The product generates an error message that includes sensitive information about its environment, users, or associated data.",
              "relationships": [
                {
                  "source_id": "209",
                  "target_id": "756",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "209",
                  "target_id": "600",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "209",
                  "target_id": "550",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "209",
                  "target_id": "211",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "209",
                  "target_id": "210",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "209",
                  "target_id": "755",
                  "label": "CHILDOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "209",
                  "target_id": "200",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "209",
                  "target_id": "200",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "81",
                  "target_id": "209",
                  "label": "CANALSOBE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "756",
                  "target_id": "209",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "755",
                  "target_id": "209",
                  "label": "PARENTOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "600",
                  "target_id": "209",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "550",
                  "target_id": "209",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "211",
                  "target_id": "209",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "210",
                  "target_id": "209",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "201",
                  "target_id": "209",
                  "label": "CANALSOBE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "200",
                  "target_id": "209",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "1295",
                  "target_id": "209",
                  "label": "PEEROF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "source": "graph",
              "sources": [
                "vector",
                "graph"
              ],
              "vector_score": 0.6343945083943495,
              "graph_score": 3.6399999999999997,
              "score_components": {
                "relationship_chain": 0.7,
                "explicit_mention": 1.0,
                "abstraction_path": 0.9,
                "peer_group": 0.9
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "abstraction_path_up",
                  "abstraction_path_down",
                  "peer_relationship"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "1295",
                        "209",
                        "PEEROF"
                      ]
                    ],
                    "score": 0.7,
                    "type": "relationship_chain",
                    "source": "1295"
                  },
                  "abstraction_path_up": {
                    "path": [
                      [
                        "550",
                        "209",
                        "CHILDOF"
                      ]
                    ],
                    "score": 0.5599999999999999,
                    "type": "abstraction_path_up",
                    "source": "550"
                  },
                  "abstraction_path_down": {
                    "path": [
                      [
                        "200",
                        "209",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.7200000000000001,
                    "type": "abstraction_path_down",
                    "source": "200"
                  },
                  "peer_relationship": {
                    "path": [
                      [
                        "1295",
                        "209",
                        "PEEROF"
                      ]
                    ],
                    "score": 0.9,
                    "type": "peer_relationship",
                    "source": "1295"
                  }
                }
              },
              "is_explicit": true,
              "abstraction_level": "base",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse",
                  "graph"
                ],
                "retriever_count": 3,
                "normalized_scores": {
                  "dense": 0.532574261304025,
                  "sparse": 141.4299876608809,
                  "graph": 2.4377578033577394
                }
              }
            },
            "similarity": 2.4377578033577394
          },
          {
            "doc_id": "756",
            "text": "CWE-756: Missing Custom Error Page",
            "score": 2.2100000000000004,
            "metadata": {
              "doc_id": "756",
              "name": "Missing Custom Error Page",
              "type": "base",
              "original_content": "CWE-756: Missing Custom Error Page",
              "relationships": [
                {
                  "source_id": "756",
                  "target_id": "7",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "756",
                  "target_id": "12",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "756",
                  "target_id": "209",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "756",
                  "target_id": "755",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "755",
                  "target_id": "756",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "7",
                  "target_id": "756",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "209",
                  "target_id": "756",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "12",
                  "target_id": "756",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 1.0,
                "sequence_path": 1.0
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "vulnerability_sequence_forward",
                  "vulnerability_sequence_backward"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "209",
                        "756",
                        "CANFOLLOW"
                      ]
                    ],
                    "score": 1.0,
                    "type": "relationship_chain",
                    "source": "209"
                  },
                  "vulnerability_sequence_forward": {
                    "path": [
                      [
                        "209",
                        "756",
                        "CANFOLLOW"
                      ]
                    ],
                    "score": 0.9,
                    "type": "vulnerability_sequence_forward",
                    "source": "209"
                  },
                  "vulnerability_sequence_backward": {
                    "path": [
                      [
                        "756",
                        "209",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 1.0,
                    "type": "vulnerability_sequence_backward",
                    "source": "209"
                  }
                }
              },
              "position": "before",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 2.2100000000000004
                }
              }
            },
            "similarity": 2.2100000000000004
          },
          {
            "doc_id": "1272",
            "text": "CWE-1272: Sensitive Information Uncleared Before Debug/Power State Transition",
            "score": 2.2100000000000004,
            "metadata": {
              "doc_id": "1272",
              "name": "Sensitive Information Uncleared Before Debug/Power State Transition",
              "type": "base",
              "original_content": "CWE-1272: Sensitive Information Uncleared Before Debug/Power State Transition",
              "relationships": [
                {
                  "source_id": "1272",
                  "target_id": "200",
                  "label": "CANPRECEDE",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "1272",
                  "target_id": "226",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "226",
                  "target_id": "1272",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "200",
                  "target_id": "1272",
                  "label": "CANFOLLOW",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 1.0,
                "sequence_path": 1.0
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "vulnerability_sequence_forward",
                  "vulnerability_sequence_backward"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "200",
                        "1272",
                        "CANFOLLOW"
                      ]
                    ],
                    "score": 1.0,
                    "type": "relationship_chain",
                    "source": "200"
                  },
                  "vulnerability_sequence_forward": {
                    "path": [
                      [
                        "200",
                        "1272",
                        "CANFOLLOW"
                      ]
                    ],
                    "score": 0.9,
                    "type": "vulnerability_sequence_forward",
                    "source": "200"
                  },
                  "vulnerability_sequence_backward": {
                    "path": [
                      [
                        "1272",
                        "200",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 1.0,
                    "type": "vulnerability_sequence_backward",
                    "source": "200"
                  }
                }
              },
              "position": "before",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 2.2100000000000004
                }
              }
            },
            "similarity": 2.2100000000000004
          },
          {
            "doc_id": "201",
            "text": "CWE-201: Insertion of Sensitive Information Into Sent Data",
            "score": 2.1762,
            "metadata": {
              "doc_id": "201",
              "name": "Insertion of Sensitive Information Into Sent Data",
              "type": "base",
              "original_content": "CWE-201: Insertion of Sensitive Information Into Sent Data",
              "relationships": [
                {
                  "source_id": "201",
                  "target_id": "598",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "201",
                  "target_id": "226",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "201",
                  "target_id": "212",
                  "label": "CANFOLLOW",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "201",
                  "target_id": "202",
                  "label": "CANALSOBE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "201",
                  "target_id": "209",
                  "label": "CANALSOBE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "201",
                  "target_id": "200",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "598",
                  "target_id": "201",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "226",
                  "target_id": "201",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "212",
                  "target_id": "201",
                  "label": "CANPRECEDE",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "200",
                  "target_id": "201",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.7,
                "abstraction_path": 0.7200000000000001,
                "peer_group": 0.9
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "abstraction_path_down",
                  "peer_relationship"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "201",
                        "209",
                        "CANALSOBE"
                      ]
                    ],
                    "score": 0.7,
                    "type": "relationship_chain",
                    "source": "209"
                  },
                  "abstraction_path_down": {
                    "path": [
                      [
                        "200",
                        "201",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.7200000000000001,
                    "type": "abstraction_path_down",
                    "source": "200"
                  },
                  "peer_relationship": {
                    "path": [
                      [
                        "201",
                        "209",
                        "CANALSOBE"
                      ]
                    ],
                    "score": 0.9,
                    "type": "peer_relationship",
                    "source": "209"
                  }
                }
              },
              "abstraction_level": "base",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 2.1762
                }
              }
            },
            "similarity": 2.1762
          },
          {
            "doc_id": "321",
            "text": "CWE-321: Use of Hard-coded Cryptographic Key",
            "score": 2.172,
            "metadata": {
              "doc_id": "321",
              "name": "Use of Hard-coded Cryptographic Key",
              "type": "variant",
              "original_content": "CWE-321: Use of Hard-coded Cryptographic Key",
              "relationships": [
                {
                  "source_id": "321",
                  "target_id": "656",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "321",
                  "target_id": "798",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1340"
                  }
                },
                {
                  "source_id": "321",
                  "target_id": "798",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1305"
                  }
                },
                {
                  "source_id": "321",
                  "target_id": "798",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "798",
                  "target_id": "321",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "656",
                  "target_id": "321",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "259",
                  "target_id": "321",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "1291",
                  "target_id": "321",
                  "label": "PEEROF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.7,
                "sequence_path": 0.8,
                "peer_group": 0.9
              },
              "abstraction_factor": 1.2,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "vulnerability_sequence_forward",
                  "peer_relationship"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "259",
                        "321",
                        "PEEROF"
                      ]
                    ],
                    "score": 0.7,
                    "type": "relationship_chain",
                    "source": "259"
                  },
                  "vulnerability_sequence_forward": {
                    "path": [
                      [
                        "259",
                        "656",
                        "CANFOLLOW"
                      ],
                      [
                        "656",
                        "321",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 0.8,
                    "type": "vulnerability_sequence_forward",
                    "source": "259"
                  },
                  "peer_relationship": {
                    "path": [
                      [
                        "259",
                        "321",
                        "PEEROF"
                      ]
                    ],
                    "score": 0.9,
                    "type": "peer_relationship",
                    "source": "259"
                  }
                }
              },
              "position": "after",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 2.172
                }
              }
            },
            "similarity": 2.172
          },
          {
            "doc_id": "600",
            "text": "CWE-600: Uncaught Exception in Servlet ",
            "score": 2.04,
            "metadata": {
              "doc_id": "600",
              "name": "Uncaught Exception in Servlet ",
              "type": "variant",
              "original_content": "CWE-600: Uncaught Exception in Servlet ",
              "relationships": [
                {
                  "source_id": "600",
                  "target_id": "390",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "600",
                  "target_id": "209",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "600",
                  "target_id": "248",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "248",
                  "target_id": "600",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "209",
                  "target_id": "600",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 1.0,
                "sequence_path": 1.0
              },
              "abstraction_factor": 1.2,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "vulnerability_sequence_forward",
                  "vulnerability_sequence_backward"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "209",
                        "600",
                        "CANFOLLOW"
                      ]
                    ],
                    "score": 1.0,
                    "type": "relationship_chain",
                    "source": "209"
                  },
                  "vulnerability_sequence_forward": {
                    "path": [
                      [
                        "209",
                        "600",
                        "CANFOLLOW"
                      ]
                    ],
                    "score": 0.9,
                    "type": "vulnerability_sequence_forward",
                    "source": "209"
                  },
                  "vulnerability_sequence_backward": {
                    "path": [
                      [
                        "600",
                        "209",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 1.0,
                    "type": "vulnerability_sequence_backward",
                    "source": "209"
                  }
                }
              },
              "position": "before",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 2.04
                }
              }
            },
            "similarity": 2.04
          },
          {
            "doc_id": "499",
            "text": "CWE-499: Serializable Class Containing Sensitive Data",
            "score": 2.04,
            "metadata": {
              "doc_id": "499",
              "name": "Serializable Class Containing Sensitive Data",
              "type": "variant",
              "original_content": "CWE-499: Serializable Class Containing Sensitive Data",
              "relationships": [
                {
                  "source_id": "499",
                  "target_id": "200",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "499",
                  "target_id": "668",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "668",
                  "target_id": "499",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "200",
                  "target_id": "499",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 1.0,
                "sequence_path": 1.0
              },
              "abstraction_factor": 1.2,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "vulnerability_sequence_forward",
                  "vulnerability_sequence_backward"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "200",
                        "499",
                        "CANFOLLOW"
                      ]
                    ],
                    "score": 1.0,
                    "type": "relationship_chain",
                    "source": "200"
                  },
                  "vulnerability_sequence_forward": {
                    "path": [
                      [
                        "200",
                        "499",
                        "CANFOLLOW"
                      ]
                    ],
                    "score": 0.9,
                    "type": "vulnerability_sequence_forward",
                    "source": "200"
                  },
                  "vulnerability_sequence_backward": {
                    "path": [
                      [
                        "499",
                        "200",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 1.0,
                    "type": "vulnerability_sequence_backward",
                    "source": "200"
                  }
                }
              },
              "position": "before",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 2.04
                }
              }
            },
            "similarity": 2.04
          },
          {
            "doc_id": "498",
            "text": "CWE-498: Cloneable Class Containing Sensitive Information",
            "score": 2.04,
            "metadata": {
              "doc_id": "498",
              "name": "Cloneable Class Containing Sensitive Information",
              "type": "variant",
              "original_content": "CWE-498: Cloneable Class Containing Sensitive Information",
              "relationships": [
                {
                  "source_id": "498",
                  "target_id": "200",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "498",
                  "target_id": "668",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "668",
                  "target_id": "498",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "200",
                  "target_id": "498",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 1.0,
                "sequence_path": 1.0
              },
              "abstraction_factor": 1.2,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "vulnerability_sequence_forward",
                  "vulnerability_sequence_backward"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "200",
                        "498",
                        "CANFOLLOW"
                      ]
                    ],
                    "score": 1.0,
                    "type": "relationship_chain",
                    "source": "200"
                  },
                  "vulnerability_sequence_forward": {
                    "path": [
                      [
                        "200",
                        "498",
                        "CANFOLLOW"
                      ]
                    ],
                    "score": 0.9,
                    "type": "vulnerability_sequence_forward",
                    "source": "200"
                  },
                  "vulnerability_sequence_backward": {
                    "path": [
                      [
                        "498",
                        "200",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 1.0,
                    "type": "vulnerability_sequence_backward",
                    "source": "200"
                  }
                }
              },
              "position": "before",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 2.04
                }
              }
            },
            "similarity": 2.04
          },
          {
            "doc_id": "472",
            "text": "CWE-472: External Control of Assumed-Immutable Web Parameter",
            "score": 1.7680000000000005,
            "metadata": {
              "doc_id": "472",
              "name": "External Control of Assumed-Immutable Web Parameter",
              "type": "base",
              "original_content": "CWE-472: External Control of Assumed-Immutable Web Parameter",
              "relationships": [
                {
                  "source_id": "472",
                  "target_id": "656",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "472",
                  "target_id": "384",
                  "label": "REQUIREDBY",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "472",
                  "target_id": "471",
                  "label": "CHILDOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "472",
                  "target_id": "642",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "656",
                  "target_id": "472",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "642",
                  "target_id": "472",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "471",
                  "target_id": "472",
                  "label": "PARENTOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "384",
                  "target_id": "472",
                  "label": "REQUIRES",
                  "properties": {
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.8,
                "sequence_path": 0.8
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "vulnerability_sequence_forward"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "259",
                        "656",
                        "CANFOLLOW"
                      ],
                      [
                        "656",
                        "472",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 0.8,
                    "type": "relationship_chain",
                    "source": "259"
                  },
                  "vulnerability_sequence_forward": {
                    "path": [
                      [
                        "259",
                        "656",
                        "CANFOLLOW"
                      ],
                      [
                        "656",
                        "472",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 0.8,
                    "type": "vulnerability_sequence_forward",
                    "source": "259"
                  }
                }
              },
              "position": "after",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.7680000000000005
                }
              }
            },
            "similarity": 1.7680000000000005
          },
          {
            "doc_id": "211",
            "text": "The product performs an operation that triggers an external diagnostic or error message that is not directly generated or controlled by the product, such as an error generated by the programming language interpreter that a software application uses. The error can contain sensitive system information.",
            "score": 0.6459389233306319,
            "metadata": {
              "doc_id": "211",
              "name": "Externally-Generated Error Message Containing Sensitive Information",
              "type": "Base",
              "extended_description": null,
              "alternate_terms": [],
              "original_content": "The product performs an operation that triggers an external diagnostic or error message that is not directly generated or controlled by the product, such as an error generated by the programming language interpreter that a software application uses. The error can contain sensitive system information.",
              "relationships": [
                {
                  "source_id": "211",
                  "target_id": "537",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "211",
                  "target_id": "536",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "211",
                  "target_id": "535",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "211",
                  "target_id": "209",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "537",
                  "target_id": "211",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "536",
                  "target_id": "211",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "535",
                  "target_id": "211",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "209",
                  "target_id": "211",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "source": "graph",
              "sources": [
                "vector",
                "graph"
              ],
              "vector_score": 0.6459389233306319,
              "graph_score": 2.4699999999999998,
              "score_components": {
                "relationship_chain": 0.3,
                "explicit_mention": 1.0,
                "abstraction_path": 0.9
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "abstraction_path_down"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "209",
                        "211",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.3,
                    "type": "relationship_chain",
                    "source": "209"
                  },
                  "abstraction_path_down": {
                    "path": [
                      [
                        "209",
                        "211",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.7200000000000001,
                    "type": "abstraction_path_down",
                    "source": "209"
                  }
                }
              },
              "is_explicit": true,
              "abstraction_level": "base",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "graph"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "dense": 0.5529236893798679,
                  "graph": 1.7403755693322525
                }
              }
            },
            "similarity": 1.7403755693322525
          },
          {
            "doc_id": "497",
            "text": "The product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.",
            "score": 0.63672208953951,
            "metadata": {
              "doc_id": "497",
              "name": "Exposure of Sensitive System Information to an Unauthorized Control Sphere",
              "type": "Base",
              "extended_description": "\n\nNetwork-based products, such as web applications, often run on top of an operating system or similar environment. When the product communicates with outside parties, details about the underlying system are expected to remain hidden, such as path names for data files, other OS users, installed packages, the application environment, etc. This system information may be provided by the product itself, or buried within diagnostic or debugging messages. Debugging information helps an adversary learn about the system and form an attack plan.\n\n\nAn information exposure occurs when system data or debugging information leaves the program through an output stream or logging function that makes it accessible to unauthorized parties. Using other weaknesses, an attacker could cause errors to occur; the response to these errors can reveal detailed system information, along with other impacts. An attacker can use messages that reveal technologies, operating systems, and product versions to tune the attack against known vulnerabilities in these technologies. A product may use diagnostic methods that provide significant implementation details such as stack traces as part of its error handling mechanism.\n",
              "alternate_terms": [],
              "original_content": "The product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.",
              "relationships": [
                {
                  "source_id": "497",
                  "target_id": "548",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "497",
                  "target_id": "214",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "497",
                  "target_id": "200",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "548",
                  "target_id": "497",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "214",
                  "target_id": "497",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "200",
                  "target_id": "497",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "source": "graph",
              "sources": [
                "vector",
                "graph"
              ],
              "vector_score": 0.63672208953951,
              "graph_score": 2.4699999999999998,
              "score_components": {
                "relationship_chain": 0.3,
                "explicit_mention": 1.0,
                "abstraction_path": 0.9
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "200",
                        "497",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.3,
                    "type": "relationship_chain",
                    "source": "200"
                  }
                }
              },
              "is_explicit": true,
              "abstraction_level": "base",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse",
                  "graph"
                ],
                "retriever_count": 3,
                "normalized_scores": {
                  "dense": 0.5451759642623561,
                  "sparse": 134.10517159594693,
                  "graph": 1.7366888358158037
                }
              }
            },
            "similarity": 1.7366888358158037
          },
          {
            "doc_id": "532",
            "text": "The product writes sensitive information to a log file.",
            "score": 0.6211589382866943,
            "metadata": {
              "doc_id": "532",
              "name": "Insertion of Sensitive Information into Log File",
              "type": "Base",
              "extended_description": null,
              "alternate_terms": [],
              "original_content": "The product writes sensitive information to a log file.",
              "relationships": [
                {
                  "source_id": "532",
                  "target_id": "200",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                },
                {
                  "source_id": "532",
                  "target_id": "538",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "538",
                  "target_id": "532",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "200",
                  "target_id": "532",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1003"
                  }
                }
              ],
              "source": "graph",
              "sources": [
                "vector",
                "graph"
              ],
              "vector_score": 0.6211589382866943,
              "graph_score": 2.4699999999999998,
              "score_components": {
                "relationship_chain": 0.3,
                "explicit_mention": 1.0,
                "abstraction_path": 0.9
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "200",
                        "532",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.3,
                    "type": "relationship_chain",
                    "source": "200"
                  }
                }
              },
              "is_explicit": true,
              "abstraction_level": "base",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "graph"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "dense": 0.5542382130927397,
                  "graph": 1.7304635753146775
                }
              }
            },
            "similarity": 1.7304635753146775
          },
          {
            "doc_id": "550",
            "text": "Certain conditions, such as network failure, will cause a server error message to be displayed.",
            "score": 0.6346733930172193,
            "metadata": {
              "doc_id": "550",
              "name": "Server-generated Error Message Containing Sensitive Information",
              "type": "Variant",
              "extended_description": "While error messages in and of themselves are not dangerous, per se, it is what an attacker can glean from them that might cause eventual problems.",
              "alternate_terms": [],
              "original_content": "Certain conditions, such as network failure, will cause a server error message to be displayed.",
              "relationships": [
                {
                  "source_id": "550",
                  "target_id": "209",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "209",
                  "target_id": "550",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "source": "graph",
              "sources": [
                "vector",
                "graph"
              ],
              "vector_score": 0.6346733930172193,
              "graph_score": 2.1624,
              "score_components": {
                "relationship_chain": 0.3,
                "explicit_mention": 1.0,
                "abstraction_path": 0.76
              },
              "abstraction_factor": 1.2,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "abstraction_path_down"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "209",
                        "550",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.3,
                    "type": "relationship_chain",
                    "source": "209"
                  },
                  "abstraction_path_down": {
                    "path": [
                      [
                        "209",
                        "550",
                        "PARENTOF"
                      ]
                    ],
                    "score": 0.76,
                    "type": "abstraction_path_down",
                    "source": "209"
                  }
                }
              },
              "is_explicit": true,
              "abstraction_level": "variant",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "graph"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "dense": 0.5515453662079837,
                  "graph": 1.5513093572068877
                }
              }
            },
            "similarity": 1.5513093572068877
          },
          {
            "doc_id": "257",
            "text": "CWE-257: Storing Passwords in a Recoverable Format",
            "score": 1.521,
            "metadata": {
              "doc_id": "257",
              "name": "Storing Passwords in a Recoverable Format",
              "type": "base",
              "original_content": "CWE-257: Storing Passwords in a Recoverable Format",
              "relationships": [
                {
                  "source_id": "257",
                  "target_id": "259",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "257",
                  "target_id": "522",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "798",
                  "target_id": "257",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "522",
                  "target_id": "257",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "259",
                  "target_id": "257",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.7,
                "peer_group": 0.9
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "peer_relationship"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "259",
                        "257",
                        "PEEROF"
                      ]
                    ],
                    "score": 0.7,
                    "type": "relationship_chain",
                    "source": "259"
                  },
                  "peer_relationship": {
                    "path": [
                      [
                        "259",
                        "257",
                        "PEEROF"
                      ]
                    ],
                    "score": 0.9,
                    "type": "peer_relationship",
                    "source": "259"
                  }
                }
              },
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.521
                }
              }
            },
            "similarity": 1.521
          },
          {
            "doc_id": "81",
            "text": "CWE-81: Improper Neutralization of Script in an Error Message Web Page",
            "score": 1.404,
            "metadata": {
              "doc_id": "81",
              "name": "Improper Neutralization of Script in an Error Message Web Page",
              "type": "variant",
              "original_content": "CWE-81: Improper Neutralization of Script in an Error Message Web Page",
              "relationships": [
                {
                  "source_id": "81",
                  "target_id": "390",
                  "label": "CANALSOBE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "81",
                  "target_id": "209",
                  "label": "CANALSOBE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "81",
                  "target_id": "79",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "79",
                  "target_id": "81",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.7,
                "peer_group": 0.9
              },
              "abstraction_factor": 1.2,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "peer_relationship"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "81",
                        "209",
                        "CANALSOBE"
                      ]
                    ],
                    "score": 0.7,
                    "type": "relationship_chain",
                    "source": "209"
                  },
                  "peer_relationship": {
                    "path": [
                      [
                        "81",
                        "209",
                        "CANALSOBE"
                      ]
                    ],
                    "score": 0.9,
                    "type": "peer_relationship",
                    "source": "209"
                  }
                }
              },
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.404
                }
              }
            },
            "similarity": 1.404
          },
          {
            "doc_id": "656",
            "text": "CWE-656: Reliance on Security Through Obscurity",
            "score": 1.3600000000000003,
            "metadata": {
              "doc_id": "656",
              "name": "Reliance on Security Through Obscurity",
              "type": "class",
              "original_content": "CWE-656: Reliance on Security Through Obscurity",
              "relationships": [
                {
                  "source_id": "656",
                  "target_id": "472",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "656",
                  "target_id": "321",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "656",
                  "target_id": "259",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "656",
                  "target_id": "693",
                  "label": "CHILDOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "656",
                  "target_id": "657",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "693",
                  "target_id": "656",
                  "label": "PARENTOF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "657",
                  "target_id": "656",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "603",
                  "target_id": "656",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "472",
                  "target_id": "656",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "321",
                  "target_id": "656",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "259",
                  "target_id": "656",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 1.0,
                "sequence_path": 1.0
              },
              "abstraction_factor": 0.8,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "vulnerability_sequence_forward",
                  "vulnerability_sequence_backward"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "259",
                        "656",
                        "CANFOLLOW"
                      ]
                    ],
                    "score": 1.0,
                    "type": "relationship_chain",
                    "source": "259"
                  },
                  "vulnerability_sequence_forward": {
                    "path": [
                      [
                        "259",
                        "656",
                        "CANFOLLOW"
                      ]
                    ],
                    "score": 0.9,
                    "type": "vulnerability_sequence_forward",
                    "source": "259"
                  },
                  "vulnerability_sequence_backward": {
                    "path": [
                      [
                        "656",
                        "259",
                        "CANPRECEDE"
                      ]
                    ],
                    "score": 1.0,
                    "type": "vulnerability_sequence_backward",
                    "source": "259"
                  }
                }
              },
              "position": "before",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.3600000000000003
                }
              }
            },
            "similarity": 1.3600000000000003
          },
          {
            "doc_id": "259",
            "text": "CWE-259: Use of Hard-coded Password",
            "score": 1.2,
            "metadata": {
              "doc_id": "259",
              "name": "Use of Hard-coded Password",
              "type": "variant",
              "original_content": "CWE-259: Use of Hard-coded Password",
              "relationships": [
                {
                  "source_id": "259",
                  "target_id": "656",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "259",
                  "target_id": "257",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "259",
                  "target_id": "321",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "259",
                  "target_id": "798",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1340"
                  }
                },
                {
                  "source_id": "259",
                  "target_id": "798",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1305"
                  }
                },
                {
                  "source_id": "259",
                  "target_id": "798",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "798",
                  "target_id": "259",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "656",
                  "target_id": "259",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "257",
                  "target_id": "259",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "explicit_mention": 1.0
              },
              "abstraction_factor": 1.2,
              "graph_path_info": {
                "path_types": [],
                "best_paths": {}
              },
              "is_explicit": true,
              "abstraction_level": "variant",
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "sparse",
                  "graph"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "sparse": 133.39706602490705,
                  "graph": 1.2
                }
              }
            },
            "similarity": 1.2
          },
          {
            "doc_id": "390",
            "text": "CWE-390: Detection of Error Condition Without Action",
            "score": 1.1466,
            "metadata": {
              "doc_id": "390",
              "name": "Detection of Error Condition Without Action",
              "type": "base",
              "original_content": "CWE-390: Detection of Error Condition Without Action",
              "relationships": [
                {
                  "source_id": "390",
                  "target_id": "401",
                  "label": "CANPRECEDE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "390",
                  "target_id": "755",
                  "label": "CHILDOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "81",
                  "target_id": "390",
                  "label": "CANALSOBE",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "755",
                  "target_id": "390",
                  "label": "PARENTOF",
                  "properties": {
                    "ordinal": "Primary",
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "600",
                  "target_id": "390",
                  "label": "PEEROF",
                  "properties": {
                    "view_id": "1000"
                  }
                },
                {
                  "source_id": "401",
                  "target_id": "390",
                  "label": "CANFOLLOW",
                  "properties": {
                    "view_id": "1000"
                  }
                }
              ],
              "score_components": {
                "relationship_chain": 0.5599999999999999,
                "peer_group": 0.63
              },
              "abstraction_factor": 1.3,
              "graph_path_info": {
                "path_types": [
                  "relationship_chain",
                  "peer_relationship"
                ],
                "best_paths": {
                  "relationship_chain": {
                    "path": [
                      [
                        "209",
                        "600",
                        "CANFOLLOW"
                      ],
                      [
                        "600",
                        "390",
                        "PEEROF"
                      ]
                    ],
                    "score": 0.5599999999999999,
                    "type": "relationship_chain",
                    "source": "209"
                  },
                  "peer_relationship": {
                    "path": [
                      [
                        "81",
                        "209",
                        "CANALSOBE"
                      ],
                      [
                        "81",
                        "390",
                        "CANALSOBE"
                      ]
                    ],
                    "score": 0.63,
                    "type": "peer_relationship",
                    "source": "209"
                  }
                }
              },
              "sources": [
                "graph"
              ],
              "source": "graph",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "graph"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "graph": 1.1466
                }
              }
            },
            "similarity": 1.1466
          }
        ],
        "dense": [
          {
            "metadata": {
              "doc_id": "200",
              "name": "Exposure of Sensitive Information to an Unauthorized Actor",
              "type": "Class",
              "original_content": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Discouraged",
                "rationale": "CWE-200 is commonly misused to represent the loss of confidentiality in a vulnerability, but confidentiality loss is a technical impact - not a root cause error. As of CWE 4.9, over 400 CWE entries can lead to a loss of confidentiality. Other options are often available. [REF-1287].",
                "comments": "If an error or mistake causes information to be disclosed, then use the CWE ID for that error. Consider starting with improper authorization (CWE-285), insecure permissions (CWE-732), improper authentication (CWE-287), etc. Also consider children such as Insertion of Sensitive Information Into Sent Data (CWE-201), Observable Discrepancy (CWE-203), Insertion of Sensitive Information into Externally-Accessible File or Directory (CWE-538), or others.",
                "reasons": [
                  "Frequent Misuse"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "dense": 0.5568049924521623,
                  "sparse": 800.0
                }
              }
            },
            "similarity": 0.5568049924521623
          },
          {
            "metadata": {
              "doc_id": "1295",
              "name": "Debug Messages Revealing Unnecessary Information",
              "type": "Base",
              "original_content": "The product fails to adequately prevent the revealing of unnecessary and potentially sensitive system information within debugging messages.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "graph"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "dense": 0.554595689578811,
                  "graph": 2.438855838305762
                }
              }
            },
            "similarity": 0.554595689578811
          },
          {
            "metadata": {
              "doc_id": "532",
              "name": "Insertion of Sensitive Information into Log File",
              "type": "Base",
              "original_content": "The product writes sensitive information to a log file.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "graph"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "dense": 0.5542382130927397,
                  "graph": 1.7304635753146775
                }
              }
            },
            "similarity": 0.5542382130927397
          },
          {
            "metadata": {
              "doc_id": "211",
              "name": "Externally-Generated Error Message Containing Sensitive Information",
              "type": "Base",
              "original_content": "The product performs an operation that triggers an external diagnostic or error message that is not directly generated or controlled by the product, such as an error generated by the programming language interpreter that a software application uses. The error can contain sensitive system information.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "graph"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "dense": 0.5529236893798679,
                  "graph": 1.7403755693322525
                }
              }
            },
            "similarity": 0.5529236893798679
          },
          {
            "metadata": {
              "doc_id": "550",
              "name": "Server-generated Error Message Containing Sensitive Information",
              "type": "Variant",
              "original_content": "Certain conditions, such as network failure, will cause a server error message to be displayed.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "graph"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "dense": 0.5515453662079837,
                  "graph": 1.5513093572068877
                }
              }
            },
            "similarity": 0.5515453662079837
          },
          {
            "metadata": {
              "doc_id": "213",
              "name": "Exposure of Sensitive Information Due to Incompatible Policies",
              "type": "Base",
              "original_content": "The product's intended functionality exposes information to certain actors in accordance with the developer's security policy, but this information is regarded as sensitive according to the intended security policies of other stakeholders such as the product's administrator, users, or others whose information is being processed.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.549291948813443
                }
              }
            },
            "similarity": 0.549291948813443
          },
          {
            "metadata": {
              "doc_id": "922",
              "name": "Insecure Storage of Sensitive Information",
              "type": "Class",
              "original_content": "The product stores sensitive information without properly limiting read or write access by unauthorized actors.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.5453782432517486
                }
              }
            },
            "similarity": 0.5453782432517486
          },
          {
            "metadata": {
              "doc_id": "497",
              "name": "Exposure of Sensitive System Information to an Unauthorized Control Sphere",
              "type": "Base",
              "original_content": "The product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.",
              "keyphrase_source": "weakness:information disclosure vulnerability",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse",
                  "graph"
                ],
                "retriever_count": 3,
                "normalized_scores": {
                  "dense": 0.5451759642623561,
                  "sparse": 134.10517159594693,
                  "graph": 1.7366888358158037
                }
              }
            },
            "similarity": 0.5451759642623561
          },
          {
            "metadata": {
              "doc_id": "89",
              "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "type": "Base",
              "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.5345595752446314
                }
              }
            },
            "similarity": 0.5345595752446314
          },
          {
            "metadata": {
              "doc_id": "202",
              "name": "Exposure of Sensitive Information Through Data Queries",
              "type": "Base",
              "original_content": "When trying to keep information confidential, an attacker can often infer some of the information by using statistics.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.5344625142079207
                }
              }
            },
            "similarity": 0.5344625142079207
          },
          {
            "metadata": {
              "doc_id": "537",
              "name": "Java Runtime Error Message Containing Sensitive Information",
              "type": "Variant",
              "original_content": "In many cases, an attacker can leverage the conditions that cause unhandled exception errors in order to gain unauthorized access to the system.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.5340224347533604
                }
              }
            },
            "similarity": 0.5340224347533604
          },
          {
            "metadata": {
              "doc_id": "210",
              "name": "Self-generated Error Message Containing Sensitive Information",
              "type": "Base",
              "original_content": "The product identifies an error condition and creates its own diagnostic or error messages that contain sensitive information.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.5330237831275444
                }
              }
            },
            "similarity": 0.5330237831275444
          },
          {
            "metadata": {
              "doc_id": "209",
              "name": "Generation of Error Message Containing Sensitive Information",
              "type": "Base",
              "original_content": "The product generates an error message that includes sensitive information about its environment, users, or associated data.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse",
                  "graph"
                ],
                "retriever_count": 3,
                "normalized_scores": {
                  "dense": 0.532574261304025,
                  "sparse": 141.4299876608809,
                  "graph": 2.4377578033577394
                }
              }
            },
            "similarity": 0.532574261304025
          },
          {
            "metadata": {
              "doc_id": "215",
              "name": "Insertion of Sensitive Information Into Debugging Code",
              "type": "Base",
              "original_content": "The product inserts sensitive information into debugging code, which could expose this information if the debugging code is not disabled in production.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.5228357542846217
                }
              }
            },
            "similarity": 0.5228357542846217
          },
          {
            "metadata": {
              "doc_id": "311",
              "name": "Missing Encryption of Sensitive Data",
              "type": "Class",
              "original_content": "The product does not encrypt sensitive or critical information before storage or transmission.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Discouraged",
                "rationale": "CWE-311 is high-level with more precise children available. It is a level-1 Class (i.e., a child of a Pillar).",
                "comments": "Consider children CWE-312: Cleartext Storage of Sensitive Information or CWE-319: Cleartext Transmission of Sensitive Information.",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.5199269653734175
                }
              }
            },
            "similarity": 0.5199269653734175
          },
          {
            "metadata": {
              "doc_id": "204",
              "name": "Observable Response Discrepancy",
              "type": "Base",
              "original_content": "The product provides different responses to incoming requests in a way that reveals internal state information to an unauthorized actor outside of the intended control sphere.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense",
                  "sparse"
                ],
                "retriever_count": 2,
                "normalized_scores": {
                  "dense": 0.5176821415722559,
                  "sparse": 131.760667517767
                }
              }
            },
            "similarity": 0.5176821415722559
          },
          {
            "metadata": {
              "doc_id": "317",
              "name": "Cleartext Storage of Sensitive Information in GUI",
              "type": "Variant",
              "original_content": "The product stores sensitive information in cleartext within the GUI.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.5175169690567838
                }
              }
            },
            "similarity": 0.5175169690567838
          },
          {
            "metadata": {
              "doc_id": "912",
              "name": "Hidden Functionality",
              "type": "Class",
              "original_content": "The product contains functionality that is not documented, not part of the specification, and not accessible through an interface or command sequence that is obvious to the product's users or administrators.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed-with-Review",
                "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.516472450544881
                }
              }
            },
            "similarity": 0.516472450544881
          },
          {
            "metadata": {
              "doc_id": "1230",
              "name": "Exposure of Sensitive Information Through Metadata",
              "type": "Base",
              "original_content": "The product prevents direct access to a resource containing sensitive information, but it does not sufficiently limit access to metadata that is derived from the original, sensitive information.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.5134293046479486
                }
              }
            },
            "similarity": 0.5134293046479486
          },
          {
            "metadata": {
              "doc_id": "540",
              "name": "Inclusion of Sensitive Information in Source Code",
              "type": "Base",
              "original_content": "Source code on a web server or repository often contains sensitive information and should generally not be accessible to users.",
              "source": "dense",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              },
              "score_info": {
                "retrievers": [
                  "dense"
                ],
                "retriever_count": 1,
                "normalized_scores": {
                  "dense": 0.5127753486266304
                }
              }
            },
            "similarity": 0.5127753486266304
          }
        ],
        "sparse": [
          {
            "cwe_id": "200",
            "name": "Exposure of Sensitive Information to an Unauthorized Actor",
            "description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
            "score": 800.0,
            "matched_text": "AlternateTerms: Information Disclosure",
            "matched_phrase": "information disclosure vulnerability",
            "matched_term": "information disclosure",
            "type": "Class",
            "source": "sparse",
            "search_source": "alternate_term_match",
            "match_reason": "term_in_phrase_whole_phrase",
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Discouraged",
                "rationale": "CWE-200 is commonly misused to represent the loss of confidentiality in a vulnerability, but confidentiality loss is a technical impact - not a root cause error. As of CWE 4.9, over 400 CWE entries can lead to a loss of confidentiality. Other options are often available. [REF-1287].",
                "comments": "If an error or mistake causes information to be disclosed, then use the CWE ID for that error. Consider starting with improper authorization (CWE-285), insecure permissions (CWE-732), improper authentication (CWE-287), etc. Also consider children such as Insertion of Sensitive Information Into Sent Data (CWE-201), Observable Discrepancy (CWE-203), Insertion of Sensitive Information into Externally-Accessible File or Directory (CWE-538), or others.",
                "reasons": [
                  "Frequent Misuse"
                ]
              }
            }
          },
          {
            "cwe_id": "209",
            "name": "Generation of Error Message Containing Sensitive Information",
            "description": "The product generates an error message that includes sensitive information about its environment, users, or associated data.",
            "score": 141.4299876608809,
            "matched_text": "CWE-209: Generation of Error Message Containing Sensitive Information\n\nType: Base\n\nStatus: Draft\n\nDescription:\n\nThe product generates an error message that includes sensitive information about its environment, users, or associated data.\n\nExtended Details:\n\n\n\nThe sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more serious attacks. The error message may be created in different ways:\n\n\n  - self-generated: the source code explicitly constructs the error message and delivers it\n\n  - externally-generated: the external environment, such as a language interpreter, handles the error and constructs its own message, whose contents are not under direct control by the programmer\n\nAn attacker may use the contents of error messages to help launch another, more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of \"..\" sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.\n\nReal-World Examples:\n\n- CVE-2008-2049: POP3 server reveals a password in an error message after multiple APOP commands are sent. Might be resultant from another weakness.\n\n- CVE-2007-5172: Program reveals password in error message if attacker can trigger certain database errors.\n\n- CVE-2008-4638: Composite: application running with high privileges (CWE-250) allows user to specify a restricted file to process, which generates a parsing error that leaks the contents of the file (CWE-209).\n\n- CVE-2008-1579: Existence of user names can be determined by requesting a nonexistent blog and reading the error message.\n\n- CVE-2007-1409: Direct request to library file in web application triggers pathname leak in error message.\n\n- CVE-2008-3060: Malformed input to login page causes leak of full path when IMAP call fails.\n\n- CVE-2005-0603: Malformed regexp syntax leads to information exposure in error message.\n\n- CVE-2017-9615: verbose logging stores admin credentials in a world-readablelog file\n\n- CVE-2018-1999036: SSH password for private key stored in build log\n\nTop 25 CWE Examples:\n\n- CVE-2021-20413: IBM Guardium Data Encryption (GDE) 4.0.0.4 could allow a remote attacker to obtain sensitive information when a detailed technical error message is returned in the browser. This information could be used in further attacks against the system. IBM X-Force ID: 196212.\n\n- CVE-2021-20417: IBM Guardium Data Encryption (GDE) 4.0.0.4 could allow a remote attacker to obtain sensitive information when a detailed technical error message is returned in the browser. This information could be used in further attacks against the system. IBM X-Force ID: 196219\n\n- CVE-2021-32766: Nextcloud Text is an open source plaintext editing application which ships with the nextcloud server. In affected versions the Nextcloud Text application returned different error messages depending on whether a folder existed in a public link share. This is problematic in case the public link share has been created with \"Upload Only\" privileges. (aka \"File Drop\"). A link share recipient is not expected to see which folders or files exist in a \"File Drop\" share. Using this vulnerability an attacker is able to enumerate folders in such a share. Exploitation requires that the attacker has access to a valid affected \"File Drop\" link share. It is recommended that the Nextcloud Server is upgraded to 20.0.12, 21.0.4 or 22.0.1. Users who are unable to upgrade are advised to disable the Nextcloud Text application in the app settings.\n\n- CVE-2021-39458: Triggering an error page of the import process in Yakamara Media Redaxo CMS version 5.12.1 allows an authenticated CMS user has to alternate the files of a vaild file backup. This leads of leaking the database credentials in the environment variables.\n\n- CVE-2021-23135: Exposure of System Data to an Unauthorized Control Sphere vulnerability in web UI of Argo CD allows attacker to cause leaked secret data into web UI error messages and logs. This issue affects Argo CD 1.8 versions prior to 1.8.7; 1.7 versions prior to 1.7.14.\n\n- CVE-2020-20470: White Shark System (WSS) 1.3.2 has web site physical path leakage vulnerability.\n\n- CVE-2020-23995: An information disclosure vulnerability in ILIAS before 5.3.19, 5.4.12 and 6.0 allows remote authenticated attackers to get the upload data path via a workspace upload.\n\n- CVE-2021-25809: UCMS 1.5.0 was discovered to contain a physical path leakage via an error message returned by the adminchannelscache() function in top.php.\n\n- CVE-2021-32712: Shopware is an open source eCommerce platform. Versions prior to 5.6.10 are vulnerable to system information leakage in error handling. Users are recommend to update to version 5.6.10. You can get the update to 5.6.10 regularly via the Auto-Updater or directly via the download overview.\n\n- CVE-2020-19275: An Information Disclosure vulnerability exists in dhcms 2017-09-18 when entering invalid characters after the normal interface, which causes an error that will leak the physical path.\n\n- CVE-2021-21421: node-etsy-client is a NodeJs Etsy ReST API Client. Applications that are using node-etsy-client and reporting client error to the end user will offer api key value too This is fixed in node-etsy-client v0.3.0 and later.\n\n- CVE-2021-22169: An issue was identified in GitLab EE 13.4 or later which leaked internal IP address via error messages.\n\n- CVE-2021-40338: Hitachi Energy LinkOne product, has a vulnerability due to a web server misconfiguration, that enables debug mode and reveals the full path of the filesystem directory when an attacker generates errors during a query operation. This issue affects: Hitachi Energy LinkOne 3.20; 3.22; 3.23; 3.24; 3.25; 3.26.\n\n- CVE-2021-39023: IBM Guardium Data Encryption (GDE) 4.0.0 and 5.0.0 could allow a remote attacker to obtain sensitive information when a detailed technical error message is returned in the browser. This information could be used in further attacks against the system. IBM X-Force ID: 213860.\n\n- CVE-2022-31047: TYPO3 is an open source web content management system. Prior to versions 7.6.57 ELTS, 8.7.47 ELTS, 9.5.34 ELTS, 10.4.29, and 11.5.11, system internal credentials or keys (e.g. database credentials) can be logged as plaintext in exception handlers, when logging the complete exception stack trace. TYPO3 versions 7.6.57 ELTS, 8.7.47 ELTS, 9.5.34 ELTS, 10.4.29, 11.5.11 contain a fix for the problem.\n\n- CVE-2022-2062: Generation of Error Message Containing Sensitive Information in GitHub repository nocodb/nocodb prior to 0.91.7+.\n\n- CVE-2021-38924: IBM Maximo Asset Management 7.6.1.1 and 7.6.1.2 could allow a remote attacker to obtain sensitive information when a detailed technical error message is returned in the browser. This information could be used in further attacks against the system. IBM X-Force ID: 210163.\n\n- CVE-2022-39315: Kirby is a Content Management System. Prior to versions 3.5.8.2, 3.6.6.2, 3.7.5.1, and 3.8.1, a user enumeration vulnerability affects all Kirby sites with user accounts unless Kirby's API and Panel are disabled in the config. It can only be exploited for targeted attacks because the attack does not scale to brute force. The problem has been patched in Kirby 3.5.8.2, Kirby 3.6.6.2, Kirby 3.7.5.1, and Kirby 3.8.1. In all of the mentioned releases, the maintainers have rewritten the affected code so that the delay is also inserted after the brute force limit is reached.\n\n- CVE-2022-20525: In enforceVisualVoicemailPackage of PhoneInterfaceManager.java, there is a possible leak of visual voicemail package name due to a permissions bypass. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-13Android ID: A-229742768\n\n- CVE-2022-24906: Nextcloud Deck is a Kanban-style project & personal management tool for Nextcloud, similar to Trello. The full path of the application is exposed to unauthorized users. It is recommended that the Nextcloud Deck app is upgraded to 1.2.11, 1.4.6, or 1.5.4. There is no workaround available.\n\n- CVE-2022-39307: Grafana is an open-source platform for monitoring and observability. When using the forget password on the login page, a POST request is made to the `/api/user/password/sent-reset-email` URL. When the username or email does not exist, a JSON response contains a \u201cuser not found\u201d message. This leaks information to unauthenticated users and introduces a security risk. This issue has been patched in 9.2.4 and backported to 8.5.15. There are no known workarounds.\n\nRelated Weaknesses:\n\n- CWE-200 (ChildOf)\n\n- CWE-200 (ChildOf)\n\n- CWE-755 (ChildOf)",
            "type": "Base",
            "source": "sparse",
            "search_source": "weakness:information disclosure vulnerability",
            "sources": [
              "base",
              "weakness"
            ],
            "boost_factor": 2.8,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              }
            }
          },
          {
            "cwe_id": "203",
            "name": "Observable Discrepancy",
            "description": "The product behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not.",
            "score": 137.67088490931772,
            "matched_text": "CWE-203: Observable Discrepancy\n\nType: Base\n\nStatus: Incomplete\n\nAlternative Terms:\n\nSide Channel Attack - Observable Discrepancies are at the root of side channel attacks.\n\nSide Channel Attack - Observable Discrepancies are at the root of side channel attacks.\n\nSide Channel Attack - Observable Discrepancies are at the root of side channel attacks.\n\nDescription:\n\nThe product behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not.\n\nExtended Details:\n\nDiscrepancies can take many forms, and variations may be detectable in timing, control flow, communications such as replies or requests, or general behavior. These discrepancies can reveal information about the product's operation or internal state to an unauthorized actor. In some cases, discrepancies can be used by attackers to form a side channel.\n\nReal-World Examples:\n\n- CVE-2020-8695: Observable discrepancy in the RAPL interface for some Intel processors allows information disclosure.\n\n- CVE-2019-14353: Crypto hardware wallet's power consumption relates to total number of pixels illuminated, creating a side channel in the USB connection that allows attackers to determine secrets displayed such as PIN numbers and passwords\n\n- CVE-2019-10071: Java-oriented framework compares HMAC signatures using String.equals() instead of a constant-time algorithm, causing timing discrepancies\n\n- CVE-2002-2094: This, and others, use \"..\" attacks and monitor error responses, so there is overlap with directory traversal.\n\n- CVE-2001-1483: Enumeration of valid usernames based on inconsistent responses\n\n- CVE-2001-1528: Account number enumeration via inconsistent responses.\n\n- CVE-2004-2150: User enumeration via discrepancies in error messages.\n\n- CVE-2005-1650: User enumeration via discrepancies in error messages.\n\n- CVE-2004-0294: Bulletin Board displays different error messages when a user exists or not, which makes it easier for remote attackers to identify valid users and conduct a brute force password guessing attack.\n\n- CVE-2004-0243: Operating System, when direct remote login is disabled, displays a different message if the password is correct, which allows remote attackers to guess the password via brute force methods.\n\n- CVE-2002-0514: Product allows remote attackers to determine if a port is being filtered because the response packet TTL is different than the default TTL.\n\n- CVE-2002-0515: Product sets a different TTL when a port is being filtered than when it is not being filtered, which allows remote attackers to identify filtered ports by comparing TTLs.\n\n- CVE-2002-0208: Product modifies TCP/IP stack and ICMP error messages in unusual ways that show the product is in use.\n\n- CVE-2004-2252: Behavioral infoleak by responding to SYN-FIN packets.\n\n- CVE-2001-1387: Product may generate different responses than specified by the administrator, possibly leading to an information leak.\n\n- CVE-2004-0778: Version control system allows remote attackers to determine the existence of arbitrary files and directories via the -X command for an alternate history file, which causes different error messages to be returned.\n\n- CVE-2004-1428: FTP server generates an error message if the user name does not exist instead of prompting for a password, which allows remote attackers to determine valid usernames.\n\n- CVE-2003-0078: SSL implementation does not perform a MAC computation if an incorrect block cipher padding is used, which causes an information leak (timing discrepancy) that may make it easier to launch cryptographic attacks that rely on distinguishing between padding and MAC verification errors, possibly leading to extraction of the original plaintext, aka the \"Vaudenay timing attack.\"\n\n- CVE-2000-1117: Virtual machine allows malicious web site operators to determine the existence of files on the client by measuring delays in the execution of the getSystemResource method.\n\n- CVE-2003-0637: Product uses a shorter timeout for a non-existent user than a valid user, which makes it easier for remote attackers to guess usernames and conduct brute force password guessing.\n\n- CVE-2003-0190: Product immediately sends an error message when a user does not exist, which allows remote attackers to determine valid usernames via a timing attack.\n\n- CVE-2004-1602: FTP server responds in a different amount of time when a given username exists, which allows remote attackers to identify valid usernames by timing the server response.\n\n- CVE-2005-0918: Browser allows remote attackers to determine the existence of arbitrary files by setting the src property to the target filename and using Javascript to determine if the web page immediately stops loading, which indicates whether the file exists or not.\n\nTop 25 CWE Examples:\n\n- CVE-2020-25082: An attacker with physical access to Nuvoton Trusted Platform Module (NPCT75x 7.2.x before 7.2.2.0) could extract an Elliptic Curve Cryptography (ECC) private key via a side-channel attack against ECDSA, because of an Observable Timing Discrepancy.\n\n- CVE-2021-29443: jose is an npm library providing a number of cryptographic operations. In vulnerable versions AES_CBC_HMAC_SHA2 Algorithm (A128CBC-HS256, A192CBC-HS384, A256CBC-HS512) decryption would always execute both HMAC tag verification and CBC decryption, if either failed `JWEDecryptionFailed` would be thrown. A possibly observable difference in timing when padding error would occur while decrypting the ciphertext makes a padding oracle and an adversary might be able to make use of that oracle to decrypt data without knowing the decryption key by issuing on average 128*b calls to the padding oracle (where b is the number of bytes in the ciphertext block). All major release versions have had a patch released which ensures the HMAC tag is verified before performing CBC decryption. The fixed versions are `^1.28.1 || ^2.0.5 || >=3.11.4`. Users should upgrade their v1.x dependency to ^1.28.1, their v2.x dependency to ^2.0.5, and their v3.x dependency to ^3.11.4. Thanks to Jason from Microsoft Vulnerability Research (MSVR) for bringing this up and Eva Sarafianou (@esarafianou) for helping to score this advisory.\n\n- CVE-2021-29444: jose-browser-runtime is an npm package which provides a number of cryptographic functions. In versions prior to 3.11.4 the AES_CBC_HMAC_SHA2 Algorithm (A128CBC-HS256, A192CBC-HS384, A256CBC-HS512) decryption would always execute both HMAC tag verification and CBC decryption, if either failed `JWEDecryptionFailed` would be thrown. But a possibly observable difference in timing when padding error would occur while decrypting the ciphertext makes a padding oracle and an adversary might be able to make use of that oracle to decrypt data without knowing the decryption key by issuing on average 128*b calls to the padding oracle (where b is the number of bytes in the ciphertext block). A patch was released which ensures the HMAC tag is verified before performing CBC decryption. The fixed versions are `>=3.11.4`. Users should upgrade to `^3.11.4`.\n\n- CVE-2021-29445: jose-node-esm-runtime is an npm package which provides a number of cryptographic functions. In versions prior to 3.11.4 the AES_CBC_HMAC_SHA2 Algorithm (A128CBC-HS256, A192CBC-HS384, A256CBC-HS512) decryption would always execute both HMAC tag verification and CBC decryption, if either failed `JWEDecryptionFailed` would be thrown. But a possibly observable difference in timing when padding error would occur while decrypting the ciphertext makes a padding oracle and an adversary might be able to make use of that oracle to decrypt data without knowing the decryption key by issuing on average 128*b calls to the padding oracle (where b is the number of bytes in the ciphertext block). A patch was released which ensures the HMAC tag is verified before performing CBC decryption. The fixed versions are `>=3.11.4`. Users should upgrade to `^3.11.4`.\n\n- CVE-2021-29446: jose-node-cjs-runtime is an npm package which provides a number of cryptographic functions. In versions prior to 3.11.4 the AES_CBC_HMAC_SHA2 Algorithm (A128CBC-HS256, A192CBC-HS384, A256CBC-HS512) decryption would always execute both HMAC tag verification and CBC decryption, if either failed `JWEDecryptionFailed` would be thrown. But a possibly observable difference in timing when padding error would occur while decrypting the ciphertext makes a padding oracle and an adversary might be able to make use of that oracle to decrypt data without knowing the decryption key by issuing on average 128*b calls to the padding oracle (where b is the number of bytes in the ciphertext block). A patch was released which ensures the HMAC tag is verified before performing CBC decryption. The fixed versions are `>=3.11.4`. Users should upgrade to `^3.11.4`.\n\n- CVE-2021-33560: Libgcrypt before 1.8.8 and 1.9.x before 1.9.3 mishandles ElGamal encryption because it lacks exponent blinding to address a side-channel attack against mpi_powm, and the window size is not chosen appropriately. This, for example, affects use of ElGamal in OpenPGP.\n\n- CVE-2021-0321: In enforceDumpPermissionForPackage of ActivityManagerService.java, there is a possible way to determine if a package is installed due to side channel information disclosure. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation. Product: Android; Versions: Android-11; Android ID: A-166667403.\n\n- CVE-2021-21424: Symfony is a PHP framework for web and console applications and a set of reusable PHP components. The ability to enumerate users was possible without relevant permissions due to different handling depending on whether the user existed or not when attempting to use the switch users functionality. We now ensure that 403s are returned whether the user exists or not if a user cannot switch to a user or if the user does not exist. The patch for this issue is available for branch 3.4.\n\n- CVE-2021-39021: IBM Guardium Data Encryption (GDE) 5.0.0.2 behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which could facilitate username enumeration. IBM X-Force ID: 213856.\n\n- CVE-2021-46744: An attacker with access to a malicious hypervisor may be able to infer data values used in a SEV guest on AMD CPUs by monitoring ciphertext values over time.\n\n- CVE-2022-1318: Hills ComNav version 3002-19 suffers from a weak communication channel. Traffic across the local network for the configuration pages can be viewed by a malicious actor. The size of certain communications packets are predictable. This would allow an attacker to learn the state of the system if they can observe the traffic. This would be possible even if the traffic were encrypted, e.g., using WPA2, as the packet sizes would remain observable. The communication encryption scheme is theoretically sound, but is not strong enough for the level of protection required.\n\n- CVE-2022-20866: A vulnerability in the handling of RSA keys on devices running Cisco Adaptive Security Appliance (ASA) Software and Cisco Firepower Threat Defense (FTD) Software could allow an unauthenticated, remote attacker to retrieve an RSA private key. This vulnerability is due to a logic error when the RSA key is stored in memory on a hardware platform that performs hardware-based cryptography. An attacker could exploit this vulnerability by using a Lenstra side-channel attack against the targeted device. A successful exploit could allow the attacker to retrieve the RSA private key. The following conditions may be observed on an affected device: This vulnerability will apply to approximately 5 percent of the RSA keys on a device that is running a vulnerable release of Cisco ASA Software or Cisco FTD Software; not all RSA keys are expected to be affected due to mathematical calculations applied to the RSA key. The RSA key could be valid but have specific characteristics that make it vulnerable to the potential leak of the RSA private key. If an attacker obtains the RSA private key, they could use the key to impersonate a device that is running Cisco ASA Software or Cisco FTD Software or to decrypt the device traffic. See the Indicators of Compromise section for more information on the detection of this type of RSA key. The RSA key could be malformed and invalid. A malformed RSA key is not functional, and a TLS client connection to a device that is running Cisco ASA Software or Cisco FTD Software that uses the malformed RSA key will result in a TLS signature failure, which means a vulnerable software release created an invalid RSA signature that failed verification. If an attacker obtains the RSA private key, they could use the key to impersonate a device that is running Cisco ASA Software or Cisco FTD Software or to decrypt the device traffic.\n\n- CVE-2022-20940: A vulnerability in the TLS handler of Cisco Firepower Threat Defense (FTD) Software could allow an unauthenticated, remote attacker to gain access to sensitive information. This vulnerability is due to improper implementation of countermeasures against a Bleichenbacher attack on a device that uses SSL decryption policies. An attacker could exploit this vulnerability by sending crafted TLS messages to an affected device, which would act as an oracle and allow the attacker to carry out a chosen-ciphertext attack. A successful exploit could allow the attacker to perform cryptanalytic operations that may allow decryption of previously captured TLS sessions to the affected device.\n\n- CVE-2022-27221: A vulnerability has been identified in SINEMA Remote Connect Server (All versions < V3.1). An attacker in machine-in-the-middle could obtain plaintext secret values by observing length differences during a series of guesses in which a string in an HTTP request URL potentially matches an unknown string in an HTTP response body, aka a \"BREACH\" attack.\n\n- CVE-2022-20275: In DevicePolicyManager, there is a possible way to determine whether an app is installed, without query permissions, due to side channel information disclosure. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-13Android ID: A-205836975\n\n- CVE-2022-20276: In DevicePolicyManager, there is a possible way to determine whether an app is installed, without query permissions, due to side channel information disclosure. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-13Android ID: A-205706731\n\n- CVE-2022-20277: In DevicePolicyManager, there is a possible way to determine whether an app is installed, without query permissions, due to side channel information disclosure. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-13Android ID: A-205145497\n\n- CVE-2022-20279: In DevicePolicyManager, there is a possible way to determine whether an app is installed, without query permissions, due to side channel information disclosure. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-13Android ID: A-204877302\n\n- CVE-2022-4087: A vulnerability was found in iPXE. It has been declared as problematic. This vulnerability affects the function tls_new_ciphertext of the file src/net/tls.c of the component TLS. The manipulation of the argument pad_len leads to information exposure through discrepancy. The name of the patch is 186306d6199096b7a7c4b4574d4be8cdb8426729. It is recommended to apply a patch to fix this issue. VDB-214054 is the identifier assigned to this vulnerability.\n\n- CVE-2021-33838: Luca through 1.7.4 on Android allows remote attackers to obtain sensitive information about COVID-19 tracking because requests related to Check-In State occur shortly after requests for Phone Number Registration.\n\nRelated Weaknesses:\n\n- CWE-200 (ChildOf)\n\n- CWE-200 (ChildOf)",
            "type": "Base",
            "source": "sparse",
            "search_source": "weakness:information disclosure vulnerability",
            "sources": [
              "base",
              "weakness"
            ],
            "boost_factor": 2.8,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              }
            }
          },
          {
            "cwe_id": "497",
            "name": "Exposure of Sensitive System Information to an Unauthorized Control Sphere",
            "description": "The product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.",
            "score": 134.10517159594693,
            "matched_text": "CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\n\nType: Base\n\nStatus: Incomplete\n\nDescription:\n\nThe product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.\n\nExtended Details:\n\n\n\nNetwork-based products, such as web applications, often run on top of an operating system or similar environment. When the product communicates with outside parties, details about the underlying system are expected to remain hidden, such as path names for data files, other OS users, installed packages, the application environment, etc. This system information may be provided by the product itself, or buried within diagnostic or debugging messages. Debugging information helps an adversary learn about the system and form an attack plan.\n\n\nAn information exposure occurs when system data or debugging information leaves the program through an output stream or logging function that makes it accessible to unauthorized parties. Using other weaknesses, an attacker could cause errors to occur; the response to these errors can reveal detailed system information, along with other impacts. An attacker can use messages that reveal technologies, operating systems, and product versions to tune the attack against known vulnerabilities in these technologies. A product may use diagnostic methods that provide significant implementation details such as stack traces as part of its error handling mechanism.\n\n\nReal-World Examples:\n\n- CVE-2021-32638: Code analysis product passes access tokens as a command-line parameter or through an environment variable, making them visible to other processes via the ps command.\n\nTop 25 CWE Examples:\n\n- CVE-2021-0291: An Exposure of System Data vulnerability in Juniper Networks Junos OS and Junos OS Evolved, where a sensitive system-level resource is not being sufficiently protected, allows a network-based unauthenticated attacker to send specific traffic which partially reaches this resource. A high rate of specific traffic may lead to a partial Denial of Service (DoS) as the CPU utilization of the RE is significantly increased. The SNMP Agent Extensibility (agentx) process should only be listening to TCP port 705 on the internal routing instance. External connections destined to port 705 should not be allowed. This issue affects: Juniper Networks Junos OS: 15.1 versions prior to 15.1R7-S9; 17.3 versions prior to 17.3R3-S12; 17.4 versions prior to 17.4R2-S13, 17.4R3-S5; 18.3 versions prior to 18.3R3-S5; 18.4 versions prior to 18.4R2-S8; 19.1 versions prior to 19.1R3-S5; 19.2 versions prior to 19.2R3-S2; 19.3 versions prior to 19.3R2-S6, 19.3R3-S2; 19.4 versions prior to 19.4R1-S4, 19.4R2-S4, 19.4R3; 20.1 versions prior to 20.1R2; 20.2 versions prior to 20.2R2; 20.3 versions prior to 20.3R2. Juniper Networks Junos OS Evolved versions prior to 20.3R2-EVO. This issue does not affect Juniper Networks Junos OS versions prior to 13.2R1.\n\n- CVE-2021-26067: Affected versions of Atlassian Bamboo allow an unauthenticated remote attacker to view a stack trace that may reveal the path for the home directory in disk and if certain files exists on the tmp directory, via a Sensitive Data Exposure vulnerability in the /chart endpoint. The affected versions are before version 7.2.2.\n\n- CVE-2021-21336: Products.PluggableAuthService is a pluggable Zope authentication and authorization framework. In Products.PluggableAuthService before version 2.6.0 there is an information disclosure vulnerability - everyone can list the names of roles defined in the ZODB Role Manager plugin if the site uses this plugin. The problem has been fixed in version 2.6.0. Depending on how you have installed Products.PluggableAuthService, you should change the buildout version pin to 2.6.0 and re-run the buildout, or if you used pip simply do `pip install \"Products.PluggableAuthService>=2.6.0\"`.\n\n- CVE-2021-21360: Products.GenericSetup is a mini-framework for expressing the configured state of a Zope Site as a set of filesystem artifacts. In Products.GenericSetup before version 2.1.1 there is an information disclosure vulnerability - anonymous visitors may view log and snapshot files generated by the Generic Setup Tool. The problem has been fixed in version 2.1.1. Depending on how you have installed Products.GenericSetup, you should change the buildout version pin to 2.1.1 and re-run the buildout, or if you used pip simply do pip install `\"Products.GenericSetup>=2.1.1\"`.\n\n- CVE-2021-21376: OMERO.web is open source Django-based software for managing microscopy imaging. OMERO.web before version 5.9.0 loads various information about the current user such as their id, name and the groups they are in, and these are available on the main webclient pages. This represents an information exposure vulnerability. Some additional information being loaded is not used by the webclient and is being removed in this release. This is fixed in version 5.9.0.\n\n- CVE-2021-22135: Elasticsearch versions before 7.11.2 and 6.8.15 contain a document disclosure flaw was found in the Elasticsearch suggester and profile API when Document and Field Level Security are enabled. The suggester and profile API are normally disabled for an index when document level security is enabled on the index. Certain queries are able to enable the profiler and suggester which could lead to disclosing the existence of documents and fields the attacker should not be able to view.\n\n- CVE-2022-22303: An exposure of sensitive system information to an unauthorized control sphere vulnerability [CWE-497] in FortiManager versions prior to 7.0.2, 6.4.7 and 6.2.9 may allow a low privileged authenticated user to gain access to the FortiGate users credentials via the config conflict file.\n\n- CVE-2022-34458:  Dell Command | Update, Dell Update, and Alienware Update versions prior to 4.7 contain a Exposure of Sensitive System Information to an Unauthorized Control Sphere vulnerability in download operation component. A local malicious user could potentially exploit this vulnerability leading to the disclosure of confidential data. \n\n- CVE-2022-22961: VMware Workspace ONE Access, Identity Manager and vRealize Automation contain an information disclosure vulnerability due to returning excess information. A malicious actor with remote access may leak the hostname of the target system. Successful exploitation of this issue can lead to targeting victims.\n\n- CVE-2022-28651: In JetBrains IntelliJ IDEA before 2021.3.3 it was possible to get passwords from protected fields\n\n- CVE-2022-20734: A vulnerability in Cisco SD-WAN vManage Software could allow an authenticated, local attacker to view sensitive information on an affected system. This vulnerability is due to insufficient file system restrictions. An authenticated attacker with netadmin privileges could exploit this vulnerability by accessing the vshell of an affected system. A successful exploit could allow the attacker to read sensitive information on the underlying operating system.\n\nRelated Weaknesses:\n\n- CWE-200 (ChildOf)",
            "type": "Base",
            "source": "sparse",
            "search_source": "weakness:information disclosure vulnerability",
            "sources": [
              "base",
              "weakness"
            ],
            "boost_factor": 2.8,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              }
            }
          },
          {
            "cwe_id": "259",
            "name": "Use of Hard-coded Password",
            "description": "The product contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.",
            "score": 133.39706602490705,
            "matched_text": "CWE-259: Use of Hard-coded Password\n\nType: Variant\n\nStatus: Draft\n\nDescription:\n\nThe product contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.\n\nExtended Details:\n\n\n\nA hard-coded password typically leads to a significant authentication failure that can be difficult for the system administrator to detect. Once detected, it can be difficult to fix, so the administrator may be forced into disabling the product entirely. There are two main variations:\n\n```\n\t\tInbound: the product contains an authentication mechanism that checks for a hard-coded password.\n\t\tOutbound: the product connects to another system or component, and it contains hard-coded password for connecting to that component.\n```\nIn the Inbound variant, a default administration account is created, and a simple password is hard-coded into the product and associated with that account. This hard-coded password is the same for each installation of the product, and it usually cannot be changed or disabled by system administrators without manually modifying the program, or otherwise patching the product. If the password is ever discovered or published (a common occurrence on the Internet), then anybody with knowledge of this password can access the product. Finally, since all installations of the product will have the same password, even across different organizations, this enables massive attacks such as worms to take place.\n\nThe Outbound variant applies to front-end systems that authenticate with a back-end service. The back-end service may require a fixed password which can be easily discovered. The programmer may simply hard-code those back-end credentials into the front-end product. Any user of that program may be able to extract the password. Client-side systems with hard-coded passwords pose even more of a threat, since the extraction of a password from a binary is usually very simple.\n\n\nReal-World Examples:\n\n- CVE-2022-29964: Distributed Control System (DCS) has hard-coded passwords for local shell access\n\n- CVE-2021-37555: Telnet service for IoT feeder for dogs and cats has hard-coded password [REF-1288]\n\n- CVE-2021-35033: Firmware for a WiFi router uses a hard-coded password for a BusyBox shell, allowing bypass of authentication through the UART port\n\nTop 25 CWE Examples:\n\n- CVE-2021-27438: The software contains a hard-coded password it uses for its own inbound authentication or for outbound communication to external components on the Reason DR60 (all firmware versions prior to 02A04.1).\n\n- CVE-2021-34757: Multiple vulnerabilities in Cisco Business 220 Series Smart Switches firmware could allow an attacker with Administrator privileges to access sensitive login credentials or reconfigure the passwords on the user account. For more information about these vulnerabilities, see the Details section of this advisory.\n\n- CVE-2020-1716: A flaw was found in the ceph-ansible playbook where it contained hardcoded passwords that were being used as default passwords while deploying Ceph services. Any authenticated attacker can abuse this flaw to brute-force Ceph deployments, and gain administrator access to Ceph clusters via the Ceph dashboard to initiate read, write, and delete Ceph clusters and also modify Ceph cluster configurations. Versions before ceph-ansible 6.0.0alpha1 are affected.\n\n- CVE-2021-21818: A hard-coded password vulnerability exists in the Zebra IP Routing Manager functionality of D-LINK DIR-3040 1.13B03. A specially crafted network request can lead to a denial of service. An attacker can send a sequence of requests to trigger this vulnerability.\n\n- CVE-2021-21820: A hard-coded password vulnerability exists in the Libcli Test Environment functionality of D-LINK DIR-3040 1.13B03. A specially crafted network request can lead to code execution. An attacker can send a sequence of requests to trigger this vulnerability.\n\n- CVE-2021-27440: The software contains a hard-coded password it uses for its own inbound authentication or for outbound communication to external components on the Reason DR60 (all firmware versions prior to 02A04.1).\n\n- CVE-2021-27452: The software contains a hard-coded password that could allow an attacker to take control of the merging unit using these hard-coded credentials on the MU320E (all firmware versions prior to v04A00.1).\n\n- CVE-2021-32454: SITEL CAP/PRX firmware version 5.2.01 makes use of a hardcoded password. An attacker with access to the device could modify these credentials, leaving the administrators of the device without access.\n\n- CVE-2021-32459: Trend Micro Home Network Security version 6.6.604 and earlier contains a hard-coded password vulnerability in the log collection server which could allow an attacker to use a specially crafted network request to lead to arbitrary authentication. An attacker must first obtain the ability to execute high-privileged code on the target device in order to exploit this vulnerability.\n\n- CVE-2021-36799: KNX ETS5 through 5.7.6 uses the hard-coded password ETS5Password, with a salt value of Ivan Medvedev, allowing local users to read project information. NOTE: This vulnerability only affects products that are no longer supported by the maintainer\n\n- CVE-2021-38456: A use of hard-coded password vulnerability in the Moxa MXview Network Management software Versions 3.x to 3.2.2 may allow an attacker to gain access through accounts using default passwords\n\n- CVE-2021-43575: KNX ETS6 through 6.0.0 uses the hard-coded password ETS5Password, with a salt value of Ivan Medvedev, allowing local users to read project information, a similar issue to CVE-2021-36799. NOTE: The vendor disputes this because it is not the responsibility of the ETS to securely store cryptographic key material when it is not being exported\n\n- CVE-2020-25752: An issue was discovered on Enphase Envoy R3.x and D4.x devices. There are hardcoded web-panel login passwords for the installer and Enphase accounts. The passwords for these accounts are hardcoded values derived from the MD5 hash of the username and serial number mixed with some static strings. The serial number can be retrieved by an unauthenticated user at /info.xml. These passwords can be easily calculated by an attacker; users are unable to change these passwords.\n\n- CVE-2020-29321: The D-Link router DIR-868L 3.01 is vulnerable to credentials disclosure in telnet service through decompilation of firmware, that allows an unauthenticated attacker to gain access to the firmware and to extract sensitive data.\n\n- CVE-2020-29322: The D-Link router DIR-880L 1.07 is vulnerable to credentials disclosure in telnet service through decompilation of firmware, that allows an unauthenticated attacker to gain access to the firmware and to extract sensitive data.\n\n- CVE-2020-29323: The D-link router DIR-885L-MFC 1.15b02, v1.21b05 is vulnerable to credentials disclosure in telnet service through decompilation of firmware, that allows an unauthenticated attacker to gain access to the firmware and to extract sensitive data.\n\n- CVE-2021-45520: Certain NETGEAR devices are affected by a hardcoded password. This affects RBK352 before 4.4.0.10, RBR350 before 4.4.0.10, and RBS350 before 4.4.0.10.\n\n- CVE-2021-45521: Certain NETGEAR devices are affected by a hardcoded password. This affects RBK352 before 4.4.0.10, RBR350 before 4.4.0.10, and RBS350 before 4.4.0.10.\n\n- CVE-2021-45522: NETGEAR XR1000 devices before 1.0.0.58 are affected by a hardcoded password.\n\n- CVE-2022-26138: The Atlassian Questions For Confluence app for Confluence Server and Data Center creates a Confluence user account in the confluence-users group with the username disabledsystemuser and a hardcoded password. A remote, unauthenticated attacker with knowledge of the hardcoded password could exploit this to log into Confluence and access all content accessible to users in the confluence-users group. This user account is created when installing versions 2.7.34, 2.7.35, and 3.0.2 of the app.\n\n- CVE-2021-31477: This vulnerability allows remote attackers to execute arbitrary code on affected installations of GE Reason RPV311 14A03. Authentication is not required to exploit this vulnerability. The specific flaw exists within the firmware and filesystem of the device. The firmware and filesystem contain hard-coded default credentials. An attacker can leverage this vulnerability to execute code in the context of the download user. Was ZDI-CAN-11852.\n\n- CVE-2022-1162: A hardcoded password was set for accounts registered using an OmniAuth provider (e.g. OAuth, LDAP, SAML) in GitLab CE/EE versions 14.7 prior to 14.7.7, 14.8 prior to 14.8.5, and 14.9 prior to 14.9.2 allowing attackers to potentially take over accounts\n\n- CVE-2022-22144: A hard-coded password vulnerability exists in the libcommonprod.so prod_change_root_passwd functionality of TCL LinkHub Mesh Wi-Fi MS1G_00_01.00_14. During system startup this functionality is always called, leading to a known root password. An attacker does not have to do anything to trigger this vulnerability.\n\n- CVE-2022-25577: ALF-BanCO v8.2.5 and below was discovered to use a hardcoded password to encrypt the SQLite database containing the user's data. Attackers who are able to gain remote or local access to the system are able to read and modify the data.\n\n- CVE-2022-26119: A improper authentication vulnerability in Fortinet FortiSIEM before 6.5.0 allows a local attacker with CLI access to perform operations on the Glassfish server directly via a hardcoded password.\n\n- CVE-2022-27172: A hard-coded password vulnerability exists in the console infactory functionality of InHand Networks InRouter302 V3.5.37. A specially-crafted network request can lead to privileged operation execution. An attacker can send a sequence of requests to trigger this vulnerability.\n\n- CVE-2022-29644: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a hard coded password for the telnet service stored in the component /web_cste/cgi-bin/product.ini.\n\n- CVE-2022-29645: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a hard coded password for root stored in the component /etc/shadow.sample.\n\n- CVE-2022-29825: Use of Hard-coded Password vulnerability in Mitsubishi Electric GX Works3 versions from 1.000A to 1.090U and GT Designer3 Version1 (GOT2000) versions from 1.122C to 1.290C allows an unauthenticated attacker to disclose sensitive information. As a result, unauthenticated users may view programs and project files or execute programs illegally.\n\n- CVE-2022-29831: Use of Hard-coded Password vulnerability in Mitsubishi Electric Corporation GX Works3 versions from 1.015R to 1.095Z allows a remote unauthenticated attacker to obtain information about the project file for MELSEC safety CPU modules.\n\n- CVE-2022-29889: A hard-coded password vulnerability exists in the telnet functionality of Abode Systems, Inc. iota All-In-One Security Kit 6.9Z. Use of a hard-coded root password can lead to arbitrary command execution. An attacker can authenticate with hard-coded credentials to trigger this vulnerability.\n\n- CVE-2022-32967: RTL8111EP-CG/RTL8111FP-CG DASH function has hard-coded password. An unauthenticated physical attacker can use the hard-coded default password during system reboot triggered by other user, to acquire partial system information such as serial number and server information.\n\n- CVE-2022-34005: An issue was discovered in TitanFTP (aka Titan FTP) NextGen before 1.2.1050. There is Remote Code Execution due to a hardcoded password for the sa account on the Microsoft SQL Express 2019 instance installed by default during TitanFTP NextGen installation, aka NX-I674 (sub-issue 1). NOTE: as of 2022-06-21, the 1.2.1050 release corrects this vulnerability in a new installation, but not in an upgrade installation.\n\n- CVE-2022-34462:  Dell EMC SCG Policy Manager, versions from 5.10 to 5.12, contain(s) a Hard-coded Password Vulnerability. An attacker, with the knowledge of the hard-coded credentials, could potentially exploit this vulnerability to login to the system to gain admin privileges. \n\n- CVE-2022-35491: TOTOLINK A3002RU V3.0.0-B20220304.1804 has a hardcoded password for root in /etc/shadow.sample.\n\n- CVE-2022-35866: This vulnerability allows remote attackers to bypass authentication on affected installations of Vinchin Backup and Recovery 6.5.0.17561. Authentication is not required to exploit this vulnerability. The specific flaw exists within the configuration of the MySQL server. The server uses a hard-coded password for the administrator user. An attacker can leverage this vulnerability to bypass authentication on the system. Was ZDI-CAN-17139.\n\n- CVE-2022-36610: TOTOLINK A720R V4.1.5cu.532_B20210610 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36611: TOTOLINK A800R V4.1.2cu.5137_B20200730 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36612: TOTOLINK A950RG V4.1.2cu.5204_B20210112 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36613: TOTOLINK N600R V4.3.0cu.7647_B20210106 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36614: TOTOLINK A860R V4.1.2cu.5182_B20201027 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36615: TOTOLINK A3000RU V4.1.2cu.5185_B20201128 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36616: TOTOLINK A810R V4.1.2cu.5182_B20201026 and V5.9c.4050_B20190424 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-37841: In TOTOLINK A860R V4.1.2cu.5182_B20201027 there is a hard coded password for root in /etc/shadow.sample.\n\n- CVE-2022-37857: bilde2910 Hauk v1.6.1 requires a hardcoded password which by default is blank. This hardcoded password is hashed but stored within the config.php file server-side as well as in clear-text on the android client device by default.\n\n- CVE-2022-38823: In TOTOLINK T6 V4.1.5cu.709_B20210518, there is a hard coded password for root in /etc/shadow.sample.\n\n- CVE-2022-45444: Sewio\u2019s Real-Time Location System (RTLS) Studio version 2.0.0 up to and including version 2.6.2 contains hard-coded passwords for select users in the application\u2019s database. This could allow a remote attacker to login to the database with unrestricted access. \n\n- CVE-2022-36159: Contec FXA3200 version 1.13 and under were discovered to contain a hard coded hash password for root stored in the component /etc/shadow. As the password strength is weak, it can be cracked in few minutes. Through this credential, a malicious actor can access the Wireless LAN Manager interface and open the telnet port then sniff the traffic or inject any malware.\n\n- CVE-2022-41653: Daikin SVMPC1 version 2.1.22 and prior and SVMPC2 version 1.2.3 and prior are vulnerable to an attacker obtaining user login credentials and control the system.\n\n- CVE-2022-48067: An information disclosure vulnerability in Totolink A830R V4.1.2cu.5182 allows attackers to obtain the root password via a brute-force attack.\n\nRelated Weaknesses:\n\n- CWE-798 (ChildOf)\n\n- CWE-798 (ChildOf)\n\n- CWE-798 (ChildOf)\n\n- CWE-321 (PeerOf)\n\n- CWE-257 (PeerOf)",
            "type": "Variant",
            "source": "sparse",
            "search_source": "weakness:information disclosure vulnerability",
            "sources": [
              "base",
              "weakness"
            ],
            "boost_factor": 2.8,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              }
            }
          },
          {
            "cwe_id": "665",
            "name": "Improper Initialization",
            "description": "The product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.",
            "score": 133.041383215544,
            "matched_text": "CWE-665: Improper Initialization\n\nType: Class\n\nStatus: Draft\n\nDescription:\n\nThe product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.\n\nExtended Details:\n\nThis can have security implications when the associated resource is expected to have certain properties or values, such as a variable that determines whether a user has been authenticated or not.\n\nReal-World Examples:\n\n- CVE-2001-1471: chain: an invalid value prevents a library file from being included, skipping initialization of key variables, leading to resultant eval injection.\n\n- CVE-2008-3637: Improper error checking in protection mechanism produces an uninitialized variable, allowing security bypass and code execution.\n\n- CVE-2008-4197: Use of uninitialized memory may allow code execution.\n\n- CVE-2008-2934: Free of an uninitialized pointer leads to crash and possible code execution.\n\n- CVE-2007-3749: OS kernel does not reset a port when starting a setuid program, allowing local users to access the port and gain privileges.\n\n- CVE-2008-0063: Product does not clear memory contents when generating an error message, leading to information leak.\n\n- CVE-2008-0062: Lack of initialization triggers NULL pointer dereference or double-free.\n\n- CVE-2008-0081: Uninitialized variable leads to code execution in popular desktop application.\n\n- CVE-2008-3688: chain: Uninitialized variable leads to infinite loop.\n\n- CVE-2008-3475: chain: Improper initialization leads to memory corruption.\n\n- CVE-2008-5021: Composite: race condition allows attacker to modify an object while it is still being initialized, causing software to access uninitialized memory.\n\n- CVE-2005-1036: Chain: Bypass of access restrictions due to improper authorization (CWE-862) of a user results from an improperly initialized (CWE-909) I/O permission bitmap\n\n- CVE-2008-3597: chain: game server can access player data structures before initialization has happened leading to NULL dereference\n\n- CVE-2009-2692: chain: uninitialized function pointers can be dereferenced allowing code execution\n\n- CVE-2009-0949: chain: improper initialization of memory can lead to NULL dereference\n\n- CVE-2009-3620: chain: some unprivileged ioctls do not verify that a structure has been initialized before invocation, leading to NULL dereference\n\nTop 25 CWE Examples:\n\n- CVE-2021-0423: In memory management driver, there is a possible information disclosure due to uninitialized data. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS05403499; Issue ID: ALPS05385714.\n\n- CVE-2021-0435: In avrc_proc_vendor_command of avrc_api.cc, there is a possible leak of heap data due to uninitialized data. This could lead to remote information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-11 Android-8.1 Android-9 Android-10Android ID: A-174150451\n\n- CVE-2021-0449: In the Titan M chip firmware, there is a possible disclosure of stack memory due to uninitialized data. This could lead to local information disclosure with System execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-175117965\n\n- CVE-2021-0450: In the Titan M chip firmware, there is a possible disclosure of stack memory due to uninitialized data. This could lead to local information disclosure with System execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-175117880\n\n- CVE-2021-0451: In the Titan M chip firmware, there is a possible disclosure of stack memory due to uninitialized data. This could lead to local information disclosure with System execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-175117871\n\n- CVE-2021-0452: In the Titan M chip firmware, there is a possible disclosure of stack memory due to uninitialized data. This could lead to local information disclosure with System execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-175117261\n\n- CVE-2021-0453: In the Titan-M chip firmware, there is a possible disclosure of stack memory due to uninitialized data. This could lead to local information disclosure with System execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-175117199\n\n- CVE-2021-1820: A memory initialization issue was addressed with improved memory handling. This issue is fixed in macOS Big Sur 11.3, iOS 14.5 and iPadOS 14.5, watchOS 7.4, tvOS 14.5. Processing maliciously crafted web content may result in the disclosure of process memory.\n\n- CVE-2021-36319: Dell Networking OS10 versions 10.4.3.x, 10.5.0.x and 10.5.1.x contain an information exposure vulnerability. A low privileged authenticated malicious user can gain access to SNMP authentication failure messages.\n\n- CVE-2020-25578: In FreeBSD 12.2-STABLE before r368969, 11.4-STABLE before r369047, 12.2-RELEASE before p3, 12.1-RELEASE before p13 and 11.4-RELEASE before p7 several file systems were not properly initializing the d_off field of the dirent structures returned by VOP_READDIR. In particular, tmpfs(5), smbfs(5), autofs(5) and mqueuefs(5) were failing to do so. As a result, eight uninitialized kernel stack bytes may be leaked to userspace by these file systems.\n\n- CVE-2021-35995: Adobe After Effects version 18.2.1 (and earlier) is affected by an Improper input validation vulnerability when parsing a specially crafted file. An unauthenticated attacker could leverage this vulnerability to disclose arbitrary memory information in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file.\n\n- CVE-2021-36006: Adobe Photoshop versions 21.2.9 (and earlier) and 22.4.2 (and earlier) are affected by an Improper input validation vulnerability when parsing a specially crafted file. An unauthenticated attacker could leverage this vulnerability to disclose arbitrary memory information in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file.\n\n- CVE-2021-44492: An issue was discovered in YottaDB through r1.32 and V7.0-000 and FIS GT.M through V7.0-000. Using crafted input, attackers can cause a type to be incorrectly initialized in the function f_incr in sr_port/f_incr.c and cause a crash due to a NULL pointer dereference.\n\n- CVE-2021-44498: An issue was discovered in FIS GT.M through V7.0-000 (related to the YottaDB code base). Using crafted input, attackers can cause a type to be incorrectly initialized in the function f_incr in sr_port/f_incr.c and cause a crash due to a NULL pointer dereference.\n\n- CVE-2021-39636: In do_ipt_get_ctl and do_ipt_set_ctl of ip_tables.c, there is a possible way to leak kernel information due to uninitialized data. This could lead to local information disclosure with system execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-120612905References: Upstream kernel\n\n- CVE-2020-27950: A memory initialization issue was addressed. This issue is fixed in macOS Big Sur 11.0.1, watchOS 7.1, iOS 12.4.9, watchOS 6.2.9, Security Update 2020-006 High Sierra, Security Update 2020-006 Mojave, iOS 14.2 and iPadOS 14.2, watchOS 5.3.9, macOS Catalina 10.15.7 Supplemental Update, macOS Catalina 10.15.7 Update. A malicious application may be able to disclose kernel memory.\n\n- CVE-2021-38647: Open Management Infrastructure Remote Code Execution Vulnerability\n\n- CVE-2022-2620: Use after free in WebUI in Google Chrome on Chrome OS prior to 104.0.5112.79 allowed a remote attacker who convinced a user to engage in specific user interactions to potentially exploit heap corruption via specific UI interactions.\n\n- CVE-2022-2472: Improper Initialization vulnerability in the local server component of EZVIZ CS-C6N-A0-1C2WFR allows a local attacker to read the contents of the memory space containing the encrypted admin password. This issue affects: EZVIZ CS-C6N-A0-1C2WFR versions prior to 5.3.0 build 220428.\n\n- CVE-2022-29695: Unicorn Engine v2.0.0-rc7 contains memory leaks caused by an incomplete unicorn engine initialization.\n\n- CVE-2022-46505: An issue in MatrixSSL 4.5.1-open and earlier leads to failure to securely check the SessionID field, resulting in the misuse of an all-zero MasterSecret that can decrypt secret data.\n\nRelated Weaknesses:\n\n- CWE-664 (ChildOf)",
            "type": "Class",
            "source": "sparse",
            "search_source": "weakness:information disclosure vulnerability",
            "sources": [
              "base",
              "weakness"
            ],
            "boost_factor": 2.8,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Discouraged",
                "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
                "comments": "Examine children of this entry to see if there is a better fit",
                "reasons": [
                  "Abstraction"
                ]
              }
            }
          },
          {
            "cwe_id": "459",
            "name": "Incomplete Cleanup",
            "description": "The product does not properly \"clean up\" and remove temporary or supporting resources after they have been used.",
            "score": 131.9423867804643,
            "matched_text": "CWE-459: Incomplete Cleanup\n\nType: Base\n\nStatus: Draft\n\nAlternative Terms:\n\nInsufficient Cleanup\n\nInsufficient Cleanup\n\nInsufficient Cleanup\n\nDescription:\n\nThe product does not properly \"clean up\" and remove temporary or supporting resources after they have been used.\n\nReal-World Examples:\n\n- CVE-2000-0552: World-readable temporary file not deleted after use.\n\n- CVE-2005-2293: Temporary file not deleted after use, leaking database usernames and passwords.\n\n- CVE-2002-0788: Interaction error creates a temporary file that can not be deleted due to strong permissions.\n\n- CVE-2002-2066: Alternate data streams for NTFS files are not cleared when files are wiped (alternate channel / infoleak).\n\n- CVE-2002-2067: Alternate data streams for NTFS files are not cleared when files are wiped (alternate channel / infoleak).\n\n- CVE-2002-2068: Alternate data streams for NTFS files are not cleared when files are wiped (alternate channel / infoleak).\n\n- CVE-2002-2069: Alternate data streams for NTFS files are not cleared when files are wiped (alternate channel / infoleak).\n\n- CVE-2002-2070: Alternate data streams for NTFS files are not cleared when files are wiped (alternate channel / infoleak).\n\n- CVE-2005-1744: Users not logged out when application is restarted after security-relevant changes were made.\n\nTop 25 CWE Examples:\n\n- CVE-2021-22428: There is an Incomplete Cleanup Vulnerability in Huawei Smartphone.Successful exploitation of this vulnerability may lead to authentication bypass.\n\n- CVE-2021-26833: Cleartext Storage in a File or on Disk in TimelyBills <= 1.7.0 for iOS and versions <= 1.21.115 for Android allows attacker who can locally read user's files obtain JWT tokens for user's account due to insufficient cache clearing mechanisms. A threat actor can obtain sensitive user data by decoding the tokens as JWT is signed and encoded, not encrypted.\n\n- CVE-2021-34421: The Keybase Client for Android before version 5.8.0 and the Keybase Client for iOS before version 5.8.0 fails to properly remove exploded messages initiated by a user if the receiving user places the chat session in the background while the sending user explodes the messages. This could lead to disclosure of sensitive information which was meant to be deleted from the customer's device.\n\n- CVE-2021-39327: The BulletProof Security WordPress plugin is vulnerable to sensitive information disclosure due to a file path disclosure in the publicly accessible ~/db_backup_log.txt file which grants attackers the full path of the site, in addition to the path of database backup files. This affects versions up to, and including, 5.1.\n\n- CVE-2021-45330: An issue exsits in Gitea through 1.15.7, which could let a malicious user gain privileges due to client side cookies not being deleted and the session remains valid on the server side for reuse.\n\n- CVE-2021-4147: A flaw was found in the libvirt libxl driver. A malicious guest could continuously reboot itself and cause libvirtd on the host to deadlock or crash, resulting in a denial of service condition.\n\n- CVE-2022-23035: Insufficient cleanup of passed-through device IRQs The management of IRQs associated with physical devices exposed to x86 HVM guests involves an iterative operation in particular when cleaning up after the guest's use of the device. In the case where an interrupt is not quiescent yet at the time this cleanup gets invoked, the cleanup attempt may be scheduled to be retried. When multiple interrupts are involved, this scheduling of a retry may get erroneously skipped. At the same time pointers may get cleared (resulting in a de-reference of NULL) and freed (resulting in a use-after-free), while other code would continue to assume them to be valid.\n\n- CVE-2022-1473: The OPENSSL_LH_flush() function, which empties a hash table, contains a bug that breaks reuse of the memory occuppied by the removed hash table entries. This function is used when decoding certificates or keys. If a long lived process periodically decodes certificates or keys its memory usage will expand without bounds and the process might be terminated by the operating system causing a denial of service. Also traversing the empty hash table entries will take increasingly more time. Typically such long lived processes might be TLS clients or TLS servers configured to accept client certificate authentication. The function was added in the OpenSSL 3.0 version thus older releases are not affected by the issue. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2).\n\n- CVE-2022-27639: Incomplete cleanup in some Intel(R) XMM(TM) 7560 Modem software before version M2_7560_R_01.2146.00 may allow a privileged user to potentially enable escalation of privilege via adjacent access.\n\n- CVE-2022-29160: Nextcloud Android is the Android client for Nextcloud, a self-hosted productivity platform. Prior to version 3.19.0, sensitive tokens, images, and user related details exist after deletion of a user account. This could result in misuse of the former account holder's information. Nextcloud Android version 3.19.0 contains a patch for this issue. There are no known workarounds available.\n\n- CVE-2022-25664: Information disclosure due to exposure of information while GPU reads the data in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Wearables\n\nRelated Weaknesses:\n\n- CWE-404 (ChildOf)\n\n- CWE-404 (ChildOf)",
            "type": "Base",
            "source": "sparse",
            "search_source": "weakness:information disclosure vulnerability",
            "sources": [
              "base",
              "weakness"
            ],
            "boost_factor": 2.8,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              }
            }
          },
          {
            "cwe_id": "204",
            "name": "Observable Response Discrepancy",
            "description": "The product provides different responses to incoming requests in a way that reveals internal state information to an unauthorized actor outside of the intended control sphere.",
            "score": 131.760667517767,
            "matched_text": "CWE-204: Observable Response Discrepancy\n\nType: Base\n\nStatus: Incomplete\n\nDescription:\n\nThe product provides different responses to incoming requests in a way that reveals internal state information to an unauthorized actor outside of the intended control sphere.\n\nExtended Details:\n\nThis issue frequently occurs during authentication, where a difference in failed-login messages could allow an attacker to determine if the username is valid or not. These exposures can be inadvertent (bug) or intentional (design).\n\nReal-World Examples:\n\n- CVE-2002-2094: This, and others, use \"..\" attacks and monitor error responses, so there is overlap with directory traversal.\n\n- CVE-2001-1483: Enumeration of valid usernames based on inconsistent responses\n\n- CVE-2001-1528: Account number enumeration via inconsistent responses.\n\n- CVE-2004-2150: User enumeration via discrepancies in error messages.\n\n- CVE-2005-1650: User enumeration via discrepancies in error messages.\n\n- CVE-2004-0294: Bulletin Board displays different error messages when a user exists or not, which makes it easier for remote attackers to identify valid users and conduct a brute force password guessing attack.\n\n- CVE-2004-0243: Operating System, when direct remote login is disabled, displays a different message if the password is correct, which allows remote attackers to guess the password via brute force methods.\n\n- CVE-2002-0514: Product allows remote attackers to determine if a port is being filtered because the response packet TTL is different than the default TTL.\n\n- CVE-2002-0515: Product sets a different TTL when a port is being filtered than when it is not being filtered, which allows remote attackers to identify filtered ports by comparing TTLs.\n\n- CVE-2001-1387: Product may generate different responses than specified by the administrator, possibly leading to an information leak.\n\n- CVE-2004-0778: Version control system allows remote attackers to determine the existence of arbitrary files and directories via the -X command for an alternate history file, which causes different error messages to be returned.\n\n- CVE-2004-1428: FTP server generates an error message if the user name does not exist instead of prompting for a password, which allows remote attackers to determine valid usernames.\n\nTop 25 CWE Examples:\n\n- CVE-2021-0086: Observable response discrepancy in floating-point operations for some Intel(R) Processors may allow an authorized user to potentially enable information disclosure via local access.\n\n- CVE-2021-0089: Observable response discrepancy in some Intel(R) Processors may allow an authorized user to potentially enable information disclosure via local access.\n\n- CVE-2021-20376: IBM Sterling File Gateway 2.2.0.0 through 6.1.1.0 could allow an authenticated attacker to enumerate usernames due to there being an observable discrepancy in returned messages. IBM X-Force ID: 195568.\n\n- CVE-2021-37151: CyberArk Identity 21.5.131, when handling an invalid authentication attempt, sometimes reveals whether the username is valid. In certain authentication policy configurations with MFA, the API response length can be used to differentiate between a valid user and an invalid one (aka Username Enumeration). Response differentiation enables attackers to enumerate usernames of valid application users. Attackers can use this information to leverage brute-force and dictionary attacks in order to discover valid account information such as passwords.\n\n- CVE-2021-37968: Inappropriate implementation in Background Fetch API in Google Chrome prior to 94.0.4606.54 allowed a remote attacker to leak cross-origin data via a crafted HTML page.\n\n- CVE-2020-35518: When binding against a DN during authentication, the reply from 389-ds-base will be different whether the DN exists or not. This can be used by an unauthenticated attacker to check the existence of an entry in the LDAP database.\n\n- CVE-2021-27583: In Directus 8.x through 8.8.1, an attacker can discover whether a user is present in the database through the password reset feature. NOTE: This vulnerability only affects products that are no longer supported by the maintainer\n\n- CVE-2021-22892: An information disclosure vulnerability exists in the Rocket.Chat server fixed v3.13, v3.12.2 & v3.11.3 that allowed email addresses to be disclosed by enumeration and validation checks.\n\n- CVE-2021-44848: In Cibele Thinfinity VirtualUI before 3.0, /changePassword returns different responses for invalid authentication requests depending on whether the username exists.\n\n- CVE-2021-20049: A vulnerability in SonicWall SMA100 password change API allows a remote unauthenticated attacker to perform SMA100 username enumeration based on the server responses. This vulnerability impacts 10.2.1.2-24sv, 10.2.0.8-37sv and earlier 10.x versions.\n\n- CVE-2022-24784: Statamic is a Laravel and Git powered CMS. Before versions 3.2.39 and 3.3.2, it is possible to confirm a single character of a user's password hash using a specially crafted regular expression filter in the users endpoint of the REST API. Multiple such requests can eventually uncover the entire hash. The hash is not present in the response, however the presence or absence of a result confirms if the character is in the right position. The API has throttling enabled by default, making this a time intensive task. Both the REST API and the users endpoint need to be enabled, as they are disabled by default. The issue has been fixed in versions 3.2.39 and above, and 3.3.2 and above.\n\n- CVE-2021-20147: ManageEngine ADSelfService Plus below build 6116 contains an observable response discrepancy in the UMCP operation of the ChangePasswordAPI. This allows an unauthenticated remote attacker to determine whether a Windows domain user exists.\n\n- CVE-2021-38009: Inappropriate implementation in cache in Google Chrome prior to 96.0.4664.45 allowed a remote attacker to leak cross-origin data via a crafted HTML page.\n\n- CVE-2022-1139: Inappropriate implementation in Background Fetch API in Google Chrome prior to 100.0.4896.60 allowed a remote attacker to leak cross-origin data via a crafted HTML page.\n\n- CVE-2022-27814: SWHKD 1.1.5 allows arbitrary file-existence tests via the -c option.\n\n- CVE-2022-47952: lxc-user-nic in lxc through 5.0.1 is installed setuid root, and may allow local users to infer whether any file exists, even within a protected directory tree, because \"Failed to open\" often indicates that a file does not exist, whereas \"does not refer to a network namespace path\" often indicates that a file exists. NOTE: this is different from CVE-2018-6556 because the CVE-2018-6556 fix design was based on the premise that \"we will report back to the user that the open() failed but the user has no way of knowing why it failed\"; however, in many realistic cases, there are no plausible reasons for failing except that the file does not exist.\n\n- CVE-2022-24032: Adenza AxiomSL ControllerView through 10.8.1 is vulnerable to user enumeration. An attacker can identify valid usernames on the platform because a failed login attempt produces a different error message when the username is valid.\n\n- CVE-2022-0569: Observable Discrepancy in Packagist snipe/snipe-it prior to v5.3.9. \n\nRelated Weaknesses:\n\n- CWE-203 (ChildOf)",
            "type": "Base",
            "source": "sparse",
            "search_source": "weakness:information disclosure vulnerability",
            "sources": [
              "base",
              "weakness"
            ],
            "boost_factor": 2.8,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              }
            }
          },
          {
            "cwe_id": "319",
            "name": "Cleartext Transmission of Sensitive Information",
            "description": "The product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.",
            "score": 131.10727641882448,
            "matched_text": "CWE-319: Cleartext Transmission of Sensitive Information\n\nType: Base\n\nStatus: Draft\n\nDescription:\n\nThe product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.\n\nExtended Details:\n\n\n\nMany communication channels can be \"sniffed\" (monitored) by adversaries during data transmission. For example, in networking, packets can traverse many intermediary nodes from the source to the destination, whether across the internet, an internal network, the cloud, etc. Some actors might have privileged access to a network interface or any link along the channel, such as a router, but they might not be authorized to collect the underlying data. As a result, network traffic could be sniffed by adversaries, spilling security-critical data.\n\n\nApplicable communication channels are not limited to software products. Applicable channels include hardware-specific technologies such as internal hardware networks and external debug channels, supporting remote JTAG debugging. When mitigations are not applied to combat adversaries within the product's threat model, this weakness significantly lowers the difficulty of exploitation by such adversaries.\n\n\nWhen full communications are recorded or logged, such as with a packet dump, an adversary could attempt to obtain the dump long after the transmission has occurred and try to \"sniff\" the cleartext from the recorded communications in the dump itself. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information. \n\n\nReal-World Examples:\n\n- CVE-2022-29519: Programmable Logic Controller (PLC) sends sensitive information in plaintext, including passwords and session tokens.\n\n- CVE-2022-30312: Building Controller uses a protocol that transmits authentication credentials in plaintext.\n\n- CVE-2022-31204: Programmable Logic Controller (PLC) sends password in plaintext.\n\n- CVE-2002-1949: Passwords transmitted in cleartext.\n\n- CVE-2008-4122: Chain: Use of HTTPS cookie without \"secure\" flag causes it to be transmitted across unencrypted HTTP.\n\n- CVE-2008-3289: Product sends password hash in cleartext in violation of intended policy.\n\n- CVE-2008-4390: Remote management feature sends sensitive information including passwords in cleartext.\n\n- CVE-2007-5626: Backup routine sends password in cleartext in email.\n\n- CVE-2004-1852: Product transmits Blowfish encryption key in cleartext.\n\n- CVE-2008-0374: Printer sends configuration information, including administrative password, in cleartext.\n\n- CVE-2007-4961: Chain: cleartext transmission of the MD5 hash of password enables attacks against a server that is susceptible to replay (CWE-294).\n\n- CVE-2007-4786: Product sends passwords in cleartext to a log server.\n\n- CVE-2005-3140: Product sends file with cleartext passwords in e-mail message intended for diagnostic purposes.\n\nTop 25 CWE Examples:\n\n- CVE-2021-38142: Barco MirrorOp Windows Sender before 2.5.3.65 uses cleartext HTTP and thus allows rogue software upgrades. An attacker on the local network can achieve remote code execution on any computer that tries to update Windows Sender due to the fact that the upgrade mechanism is not secured (is not protected with TLS).\n\n- CVE-2020-12730: MagicMotion Flamingo 2 lacks BLE encryption, enabling data sniffing and packet forgery.\n\n- CVE-2020-26197: Dell PowerScale OneFS 8.1.0 - 9.1.0 contains an LDAP Provider inability to connect over TLSv1.2 vulnerability. It may make it easier to eavesdrop and decrypt such traffic for a malicious actor. Note: This does not affect clusters which are not relying on an LDAP server for the authentication provider.\n\n- CVE-2020-27184: The NPort IA5000A Series devices use Telnet as one of the network device management services. Telnet does not support the encryption of client-server communications, making it vulnerable to Man-in-the-Middle attacks.\n\n- CVE-2020-4980: IBM QRadar SIEM 7.3 and 7.4 uses less secure methods for protecting data in transit between hosts when encrypt host connections is not enabled as well as data at rest. IBM X-Force ID: 192539.\n\n- CVE-2021-27574: An issue was discovered in Emote Remote Mouse through 4.0.0.0. It uses cleartext HTTP to check, and request, updates. Thus, attackers can machine-in-the-middle a victim to download a malicious binary in place of the real update, with no SSL errors or warnings.\n\n- CVE-2021-36382: Devolutions Server before 2021.1.18, and LTS before 2020.3.20, allows attackers to intercept private keys via a man-in-the-middle attack against the connections/partial endpoint (which accepts cleartext).\n\n- CVE-2021-39272: Fetchmail before 6.4.22 fails to enforce STARTTLS session encryption in some circumstances, such as a certain situation with IMAP and PREAUTH.\n\n- CVE-2021-40366: A vulnerability has been identified in Climatix POL909 (AWB module) (All versions < V11.42), Climatix POL909 (AWM module) (All versions < V11.34). The web server of affected devices transmits data without TLS encryption. This could allow an unauthenticated remote attacker in a man-in-the-middle position to read sensitive data, such as administrator credentials, or modify data in transit.\n\n- CVE-2021-44518: An issue was discovered in the eGeeTouch 3rd Generation Travel Padlock application for Android. The lock sends a pairing code before each operation (lock or unlock) activated via the companion app. The code is sent unencrypted, allowing any attacker with the same app (either Android or iOS) to add the lock and take complete control. For successful exploitation, the attacker must be able to touch the lock's power button, and must be able to capture BLE network communication.\n\n- CVE-2021-33900: While investigating DIRSTUDIO-1219 it was noticed that configured StartTLS encryption was not applied when any SASL authentication mechanism (DIGEST-MD5, GSSAPI) was used. While investigating DIRSTUDIO-1220 it was noticed that any configured SASL confidentiality layer was not applied. This issue affects Apache Directory Studio version 2.0.0.v20210213-M16 and prior versions.\n\n- CVE-2021-27569: An issue was discovered in Emote Remote Mouse through 4.0.0.0. Attackers can maximize or minimize the window of a running process by sending the process name in a crafted packet. This information is sent in cleartext and is not protected by any authentication logic.\n\n- CVE-2021-34825: Quassel through 0.13.1, when --require-ssl is enabled, launches without SSL or TLS support if a usable X.509 certificate is not found on the local system.\n\n- CVE-2021-3774: Meross Smart Wi-Fi 2 Way Wall Switch (MSS550X), on its 3.1.3 version and before, creates an open Wi-Fi Access Point without the required security measures in its initial setup. This could allow a remote attacker to obtain the Wi-Fi SSID as well as the password configured by the user from Meross app via Http/JSON plain request.\n\n- CVE-2021-44480: Wokka Lokka Q50 devices through 2021-11-30 allow remote attackers (who know the SIM phone number and password) to listen to a device's surroundings via a callback in an SMS command, as demonstrated by the 123456 and 523681 default passwords.\n\n- CVE-2021-38370: In Alpine before 2.25, untagged responses from an IMAP server are accepted before STARTTLS.\n\n- CVE-2021-38372: In KDE Trojita 0.7, man-in-the-middle attackers can create new folders because untagged responses from an IMAP server are accepted before STARTTLS.\n\n- CVE-2021-38373: In KDE KMail 19.12.3 (aka 5.13.3), the SMTP STARTTLS option is not honored (and cleartext messages are sent) unless \"Server requires authentication\" is checked.\n\n- CVE-2021-20623: Video Insight VMS versions prior to 7.8 allows a remote attacker to execute arbitrary code with the system user privilege by sending a specially crafted request.\n\n- CVE-2021-38978: IBM Tivoli Key Lifecycle Manager 3.0, 3.0.1, 4.0, and 4.1 could allow a remote attacker to obtain sensitive information, caused by the failure to properly enable HTTP Strict Transport Security. An attacker could exploit this vulnerability to obtain sensitive information using man in the middle techniques. IBM X-Force ID: 212783.\n\n- CVE-2021-20409: IBM Security Verify Information Queue 1.0.6 and 1.0.7 could allow a remote attacker to obtain sensitive information, caused by the failure to properly enable HTTP Strict Transport Security. An attacker could exploit this vulnerability to obtain sensitive information using man in the middle techniques. IBM X-Force ID: 196188. \n\n- CVE-2021-20564: IBM Cloud Pak for Security (CP4S) 1.4.0.0, 1.5.0.0, 1.5.0.1, 1.6.0.0, and 1.6.0.1 could allow a remote attacker to obtain sensitive information, caused by the failure to properly enable HTTP Strict Transport Security. An attacker could exploit this vulnerability to obtain sensitive information using man in the middle techniques. IBM X-Force ID: 199235.\n\n- CVE-2021-45735: TOTOLINK X5000R v9.1.0u.6118_B20201102 was discovered to use the HTTP protocol for authentication into the admin interface, allowing attackers to intercept user credentials via packet capture software.\n\n- CVE-2021-21963: An information disclosure vulnerability exists in the Web Server functionality of Sealevel Systems, Inc. SeaConnect 370W v1.3.34. A specially-crafted man-in-the-middle attack can lead to a disclosure of sensitive information. An attacker can perform a man-in-the-middle attack to trigger this vulnerability.\n\n- CVE-2021-45104: An issue was discovered in HTCondor 9.0.x before 9.0.10 and 9.1.x before 9.5.1. An attacker who can capture HTCondor network data can interfere with users' jobs and data.\n\n- CVE-2021-27422: GE UR firmware versions prior to version 8.1x web server interface is supported on UR over HTTP protocol. It allows sensitive information exposure without authentication.\n\n- CVE-2021-29838: IBM Security Guardium Insights 3.0 could allow a remote attacker to obtain sensitive information, caused by the failure to properly enable HTTP Strict Transport Security. An attacker could exploit this vulnerability to obtain sensitive information using man in the middle techniques.\n\n- CVE-2021-39026: IBM Guardium Data Encryption (GDE) 5.0.0.2 and 5.0.0.3 could allow a remote attacker to obtain sensitive information, caused by the failure to properly enable HTTP Strict Transport Security. An attacker could exploit this vulnerability to obtain sensitive information using man in the middle techniques. IBM X-Force ID: 213964.\n\n- CVE-2020-27373: Dr Trust USA iCheck Connect BP Monitor BP Testing 118 1.2.1 is vulnerable to Plain text command over BLE.\n\n- CVE-2020-4970: IBM Security Identity Governance and Intelligence 5.2.4, 5.2.5, and 5.2.6 could allow a remote attacker to obtain sensitive information, caused by the failure to properly enable HTTP Strict Transport Security. An attacker could exploit this vulnerability to obtain sensitive information using man in the middle techniques. IBM X-Force ID: 192429.\n\n- CVE-2022-23509: Weave GitOps is a simple open source developer platform for people who want cloud native applications, without needing Kubernetes expertise. GitOps run has a local S3 bucket which it uses for synchronizing files that are later applied against a Kubernetes cluster. The communication between GitOps Run and the local S3 bucket is not encrypted. This allows privileged users or process to tap the local traffic to gain information permitting access to the s3 bucket. From that point, it would be possible to alter the bucket content, resulting in changes in the Kubernetes cluster's resources. There are no known workaround(s) for this vulnerability. This vulnerability has been fixed by commits ce2bbff and babd915. Users should upgrade to Weave GitOps version >= v0.12.0 released on 08/12/2022. \n\n- CVE-2022-39287: tiny-csrf is a Node.js cross site request forgery (CSRF) protection middleware. In versions prior to 1.1.0 cookies were not encrypted and thus CSRF tokens were transmitted in the clear. This issue has been addressed in commit `8eead6d` and the patch with be included in version 1.1.0. Users are advised to upgrade. There are no known workarounds for this issue.\n\n- CVE-2021-1896: Weak configuration in WLAN could cause forwarding of unencrypted packets from one client to another in Snapdragon Compute, Snapdragon Connectivity\n\n- CVE-2021-35246: The application fails to prevent users from connecting to it over unencrypted connections. An attacker able to modify a legitimate user's network traffic could bypass the application's use of SSL/TLS encryption and use the application as a platform for attacks against its users.\n\n- CVE-2021-40148: In Modem EMM, there is a possible information disclosure due to a missing data encryption. This could lead to remote information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: MOLY00716585; Issue ID: ALPS05886933.\n\n- CVE-2021-4161: The affected products contain vulnerable firmware, which could allow an attacker to sniff the traffic and decrypt login credential details. This could give an attacker admin rights through the HTTP web server.\n\n- CVE-2021-41849: An issue was discovered in Luna Simo PPR1.180610.011/202001031830. It sends the following Personally Identifiable Information (PII) in plaintext using HTTP to servers located in China: user's list of installed apps and device International Mobile Equipment Identity (IMEI). This PII is transmitted to log.skyroam.com.cn using HTTP, independent of whether the user uses the Simo software.\n\n- CVE-2021-43270: Datalust Seq.App.EmailPlus (aka seq-app-htmlemail) 3.1.0-dev-00148, 3.1.0-dev-00170, and 3.1.0-dev-00176 can use cleartext SMTP on port 25 in some cases where encryption on port 465 was intended.\n\n- CVE-2022-1524: LRM version 2.4 and lower does not implement TLS encryption. A malicious actor can MITM attack sensitive data in-transit, including credentials.\n\n- CVE-2022-21951: A Cleartext Transmission of Sensitive Information vulnerability in SUSE Rancher, Rancher allows attackers on the network to read and change network data due to missing encryption of data transmitted via the network when a cluster is created from an RKE template with the CNI value overridden This issue affects: SUSE Rancher Rancher versions prior to 2.5.14; Rancher versions prior to 2.6.5. \n\n- CVE-2022-2338: Softing Secure Integration Server V1.22 is vulnerable to authentication bypass via a machine-in-the-middle attack. The default the administration interface is accessible via plaintext HTTP protocol, facilitating the attack. The HTTP request may contain the session cookie in the request, which may be captured for use in authenticating to the server.\n\n- CVE-2022-32227: A cleartext transmission of sensitive information exists in Rocket.Chat <v5, <v4.8.2 and <v4.7.5 relating to Oauth tokens by having the permission \"view-full-other-user-info\", this could cause an oauth token leak in the product.\n\n- CVE-2022-41627:  The physical IoT device of the AliveCor's KardiaMobile, a smartphone-based personal electrocardiogram (EKG) has no encryption for its data-over-sound protocols. Exploiting this vulnerability could allow an attacker to read patient EKG results or create a denial-of-service condition by emitting sounds at similar frequencies as the device, disrupting the smartphone microphone\u2019s ability to accurately read the data. To carry out this attack, the attacker must be close (less than 5 feet) to pick up and emit sound waves. \n\n- CVE-2022-41983: On specific hardware platforms, on BIG-IP versions 16.1.x before 16.1.3.1, 15.1.x before 15.1.7, 14.1.x before 14.1.5.1, and all versions of 13.1.x, while Intel QAT (QuickAssist Technology) and the AES-GCM/CCM cipher is in use, undisclosed conditions can cause BIG-IP to send data unencrypted even with an SSL Profile applied.\n\n- CVE-2022-45877: OpenHarmony-v3.1.4 and prior versions had an vulnerability. PIN code is transmitted to the peer device in plain text during cross-device authentication, which reduces the difficulty of man-in-the-middle attacks.\n\n- CVE-2022-0005: Sensitive information accessible by physical probing of JTAG interface for some Intel(R) Processors with SGX may allow an unprivileged user to potentially enable information disclosure via physical access.\n\n- CVE-2021-22923: When curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened.\n\n- CVE-2022-23223: On Apache ShenYu versions 2.4.0 and 2.4.1, and endpoint existed that disclosed the passwords of all users. Users are recommended to upgrade to version 2.4.2 or later.\n\n- CVE-2022-24978: Zoho ManageEngine ADAudit Plus before 7055 allows authenticated Privilege Escalation on Integrated products. This occurs because a password field is present in a JSON response.\n\n- CVE-2022-25180: Jenkins Pipeline: Groovy Plugin 2648.va9433432b33c and earlier includes password parameters from the original build in replayed builds, allowing attackers with Run/Replay permission to obtain the values of password parameters passed to previous builds of a Pipeline.\n\n- CVE-2022-47714: Last Yard 22.09.8-1 does not enforce HSTS headers\n\n- CVE-2022-0553: There is no check to see if slot 0 is being uploaded from the device to the host. When using encrypted images this means the unencrypted firmware can be retrieved easily.\n\n- CVE-2022-29945: DJI drone devices sold in 2017 through 2022 broadcast unencrypted information about the drone operator's physical location via the AeroScope protocol.\n\n- CVE-2021-31898: In JetBrains WebStorm before 2021.1, HTTP requests were used instead of HTTPS.\n\n- CVE-2022-2083: The Simple Single Sign On WordPress plugin through 4.1.0 leaks its OAuth client_secret, which could be used by attackers to gain unauthorized access to the site.\n\n- CVE-2021-45081: An issue was discovered in Cobbler through 3.3.1. Routines in several files use the HTTP protocol instead of the more secure HTTPS.\n\nRelated Weaknesses:\n\n- CWE-311 (ChildOf)\n\n- CWE-311 (ChildOf)",
            "type": "Base",
            "source": "sparse",
            "search_source": "weakness:information disclosure vulnerability",
            "sources": [
              "base",
              "weakness"
            ],
            "boost_factor": 2.8,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              }
            }
          },
          {
            "cwe_id": "426",
            "name": "Untrusted Search Path",
            "description": "The product searches for critical resources using an externally-supplied search path that can point to resources that are not under the product's direct control.",
            "score": 130.80256208677224,
            "matched_text": "CWE-426: Untrusted Search Path\n\nType: Base\n\nStatus: Stable\n\nAlternative Terms:\n\nUntrusted Path\n\nUntrusted Path\n\nUntrusted Path\n\nDescription:\n\nThe product searches for critical resources using an externally-supplied search path that can point to resources that are not under the product's direct control.\n\nExtended Details:\n\n\n\nThis might allow attackers to execute their own programs, access unauthorized data files, or modify configuration in unexpected ways. If the product uses a search path to locate critical resources such as programs, then an attacker could modify that search path to point to a malicious program, which the targeted product would then execute. The problem extends to any type of critical resource that the product trusts.\n\n\nSome of the most common variants of untrusted search path are:\n\n\n  - In various UNIX and Linux-based systems, the PATH environment variable may be consulted to locate executable programs, and LD_PRELOAD may be used to locate a separate library.\n\n  - In various Microsoft-based systems, the PATH environment variable is consulted to locate a DLL, if the DLL is not found in other paths that appear earlier in the search order.\n\n\n\nReal-World Examples:\n\n- CVE-1999-1120: Application relies on its PATH environment variable to find and execute program.\n\n- CVE-2008-1810: Database application relies on its PATH environment variable to find and execute program.\n\n- CVE-2007-2027: Chain: untrusted search path enabling resultant format string by loading malicious internationalization messages.\n\n- CVE-2008-3485: Untrusted search path using malicious .EXE in Windows environment.\n\n- CVE-2008-2613: setuid program allows compromise using path that finds and loads a malicious library.\n\n- CVE-2008-1319: Server allows client to specify the search path, which can be modified to point to a program that the client has uploaded.\n\nTop 25 CWE Examples:\n\n- CVE-2021-41387: seatd-launch in seatd 0.6.x before 0.6.2 allows privilege escalation because it uses execlp and may be installed setuid root.\n\n- CVE-2021-28249: CA eHealth Performance Manager through 6.3.2.12 is affected by Privilege Escalation via a Dynamically Linked Shared Object Library. To exploit the vulnerability, the ehealth user must create a malicious library in the writable RPATH, to be dynamically linked when the FtpCollector executable is run. The code in the library will be executed as the root user. NOTE: This vulnerability only affects products that are no longer supported by the maintainer\n\n- CVE-2022-22047: Windows Client Server Run-time Subsystem (CSRSS) Elevation of Privilege Vulnerability\n\n- CVE-2021-3305: Beijing Feishu Technology Co., Ltd Feishu v3.40.3 was discovered to contain an untrusted search path vulnerability.\n\n- CVE-2022-36403: Untrusted search path vulnerability in the installer of Device Software Manager prior to Ver.2.20.3.0 allows an attacker to gain privileges via a Trojan horse DLL in an unspecified directory.\n\n- CVE-2021-36666: An issue was discovered in Druva 6.9.0 for MacOS, allows attackers to gain escalated local privileges via the inSyncDecommission.\n\n- CVE-2022-38060: A privilege escalation vulnerability exists in the sudo functionality of OpenStack Kolla git master 05194e7618. A misconfiguration in /etc/sudoers within a container can lead to increased privileges.\n\n- CVE-2022-25366: Cryptomator through 1.6.5 allows DYLIB injection because, although it has the flag 0x1000 for Hardened Runtime, it has the com.apple.security.cs.disable-library-validation and com.apple.security.cs.allow-dyld-environment-variables entitlements. An attacker can exploit this by creating a malicious .dylib file that can be executed via the DYLD_INSERT_LIBRARIES environment variable.\n\n- CVE-2022-39245: Mist is the command-line interface for the makedeb Package Repository. Prior to version 0.9.5, a user-provided `sudo` binary via the `PATH` variable can allow a local user to run arbitrary commands on the user's system with root permissions. Versions 0.9.5 and later contain a patch. No known workarounds exist.\n\n- CVE-2021-21817: An information disclosure vulnerability exists in the Zebra IP Routing Manager functionality of D-LINK DIR-3040 1.13B03. A specially crafted network request can lead to the disclosure of sensitive information. An attacker can send a sequence of requests to trigger this vulnerability.\n\nRelated Weaknesses:\n\n- CWE-642 (ChildOf)\n\n- CWE-668 (ChildOf)\n\n- CWE-673 (ChildOf)\n\n- CWE-427 (PeerOf)\n\n- CWE-428 (PeerOf)",
            "type": "Base",
            "source": "sparse",
            "search_source": "weakness:information disclosure vulnerability",
            "sources": [
              "base",
              "weakness"
            ],
            "boost_factor": 2.8,
            "boosted": true,
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              }
            }
          },
          {
            "cwe_id": "312",
            "name": "Cleartext Storage of Sensitive Information",
            "description": "The product stores sensitive information in cleartext within a resource that might be accessible to another control sphere.",
            "score": 43.23301851672306,
            "matched_text": "CWE-312: Cleartext Storage of Sensitive Information\n\nType: Base\n\nStatus: Draft\n\nDescription:\n\nThe product stores sensitive information in cleartext within a resource that might be accessible to another control sphere.\n\nExtended Details:\n\n\n\nBecause the information is stored in cleartext (i.e., unencrypted), attackers could potentially read it. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information.\n\n\nWhen organizations adopt cloud services, it can be easier for attackers to access the data from anywhere on the Internet.\n\n\nIn some systems/environments such as cloud, the use of \"double encryption\" (at both the software and hardware layer) might be required, and the developer might be solely responsible for both layers, instead of shared responsibility with the administrator of the broader system/environment.\n\n\nReal-World Examples:\n\n- CVE-2022-30275: Remote Terminal Unit (RTU) uses a driver that relies on a password stored in plaintext.\n\n- CVE-2009-2272: password and username stored in cleartext in a cookie\n\n- CVE-2009-1466: password stored in cleartext in a file with insecure permissions\n\n- CVE-2009-0152: chat program disables SSL in some circumstances even when the user says to use SSL.\n\n- CVE-2009-1603: Chain: product uses an incorrect public exponent when generating an RSA key, which effectively disables the encryption\n\n- CVE-2009-0964: storage of unencrypted passwords in a database\n\n- CVE-2008-6157: storage of unencrypted passwords in a database\n\n- CVE-2008-6828: product stores a password in cleartext in memory\n\n- CVE-2008-1567: storage of a secret key in cleartext in a temporary file\n\n- CVE-2008-0174: SCADA product uses HTTP Basic Authentication, which is not encrypted\n\n- CVE-2007-5778: login credentials stored unencrypted in a registry key\n\n- CVE-2001-1481: Plaintext credentials in world-readable file.\n\n- CVE-2005-1828: Password in cleartext in config file.\n\n- CVE-2005-2209: Password in cleartext in config file.\n\n- CVE-2002-1696: Decrypted copy of a message written to disk given a combination of options and when user replies to an encrypted message.\n\n- CVE-2004-2397: Plaintext storage of private key and passphrase in log file when user imports the key.\n\n- CVE-2002-1800: Admin password in plaintext in a cookie.\n\n- CVE-2001-1537: Default configuration has cleartext usernames/passwords in cookie.\n\n- CVE-2001-1536: Usernames/passwords in cleartext in cookies.\n\n- CVE-2005-2160: Authentication information stored in cleartext in a cookie.\n\nTop 25 CWE Examples:\n\n- CVE-2021-21339: TYPO3 is an open source PHP based web content management system. In TYPO3 before versions 6.2.57, 7.6.51, 8.7.40, 9.5.25, 10.4.14, 11.1.1 user session identifiers were stored in cleartext - without processing of additional cryptographic hashing algorithms. This vulnerability cannot be exploited directly and occurs in combination with a chained attack - like for instance SQL injection in any other component of the system. This is fixed in versions 6.2.57, 7.6.51, 8.7.40, 9.5.25, 10.4.14, 11.1.1.\n\n- CVE-2021-29481: Ratpack is a toolkit for creating web applications. In versions prior to 1.9.0, the default configuration of client side sessions results in unencrypted, but signed, data being set as cookie values. This means that if something sensitive goes into the session, it could be read by something with access to the cookies. For this to be a vulnerability, some kind of sensitive data would need to be stored in the session and the session cookie would have to leak. For example, the cookies are not configured with httpOnly and an adjacent XSS vulnerability within the site allowed capture of the cookies. As of version 1.9.0, a securely randomly generated signing key is used. As a workaround, one may supply an encryption key, as per the documentation recommendation.\n\n- CVE-2021-31855: KDE Messagelib through 5.17.0 reveals cleartext of encrypted messages in some situations. Deleting an attachment of a decrypted encrypted message stored on a remote server (e.g., an IMAP server) causes KMail to upload the decrypted content of the message to the remote server. With a crafted message, a user could be tricked into decrypting an encrypted message and then deleting an attachment attached to this message. If the attacker has access to the messages stored on the email server, then the attacker could read the decrypted content of the encrypted message. This occurs in ViewerPrivate::deleteAttachment in messageviewer/src/viewer/viewer_p.cpp.\n\n- CVE-2021-36165: RICON Industrial Cellular Router S9922L 16.10.3(3794) is affected by cleartext storage of sensitive information and sends username and password as base64.\n\n- CVE-2021-35526: Backup file without encryption vulnerability is found in Hitachi ABB Power Grids System Data Manager \u2013 SDM600 allows attacker to gain access to sensitive information. This issue affects: Hitachi ABB Power Grids System Data Manager \u2013 SDM600 1.2 versions prior to FP2 HF6 (Build Nr. 1.2.14002.257).\n\n- CVE-2021-41302: ECOA BAS controller stores sensitive data (backup exports) in clear-text, thus the unauthenticated attacker can remotely query user password and obtain user\u2019s privilege.\n\n- CVE-2021-45077: Netgear Nighthawk R6700 version 1.0.4.120 stores sensitive information in plaintext. All usernames and passwords for the device's associated services are stored in plaintext on the device. For example, the admin password is stored in plaintext in the primary configuration file on the device.\n\n- CVE-2022-26390: The Baxter Spectrum Wireless Battery Module (WBM) stores network credentials and PHI (only applicable to Spectrum IQ pumps using auto programming) in unencrypted form. An attacker with physical access to a device that hasn't had all data and settings erased may be able to extract sensitive information.\n\n- CVE-2022-22069: Devices with keyprotect off may store unencrypted keybox in RPMB and cause cryptographic issue in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Wearables\n\n- CVE-2022-27549: HCL Launch may store certain data for recurring activities in a plain text format.\n\n- CVE-2022-20219: In multiple functions of StorageManagerService.java and UserManagerService.java, there is a possible way to leave user's directories unencrypted due to a logic error in the code. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12LAndroid ID: A-224585613\n\n- CVE-2022-29959: Emerson OpenBSI through 2022-04-29 mishandles credential storage. It is an engineering environment for the ControlWave and Bristol Babcock line of RTUs. This environment provides access control functionality through user authentication and privilege management. The credentials for various users are stored insecurely in the SecUsers.ini file by using a simple string transformation rather than a cryptographic mechanism.\n\nRelated Weaknesses:\n\n- CWE-311 (ChildOf)\n\n- CWE-311 (ChildOf)\n\n- CWE-922 (ChildOf)",
            "type": "Base",
            "search_source": "base_query",
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              }
            }
          },
          {
            "cwe_id": "611",
            "name": "Improper Restriction of XML External Entity Reference",
            "description": "The product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",
            "score": 43.04141683322095,
            "matched_text": "CWE-611: Improper Restriction of XML External Entity Reference\n\nType: Base\n\nStatus: Draft\n\nAlternative Terms:\n\nXXE - An acronym used for the term \"XML eXternal Entities\"\n\nXXE - An acronym used for the term \"XML eXternal Entities\"\n\nXXE - An acronym used for the term \"XML eXternal Entities\"\n\nDescription:\n\nThe product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.\n\nExtended Details:\n\n\n\nXML documents optionally contain a Document Type Definition (DTD), which, among other features, enables the definition of XML entities. It is possible to define an entity by providing a substitution string in the form of a URI. The XML parser can access the contents of this URI and embed these contents back into the XML document for further processing.\n\n\nBy submitting an XML file that defines an external entity with a file:// URI, an attacker can cause the processing application to read the contents of a local file. For example, a URI such as \"file:///c:/winnt/win.ini\" designates (in Windows) the file C:\\Winnt\\win.ini, or file:///etc/passwd designates the password file in Unix-based systems. Using URIs with other schemes such as http://, the attacker can force the application to make outgoing requests to servers that the attacker cannot reach directly, which can be used to bypass firewall restrictions or hide the source of attacks such as port scanning.\n\n\nOnce the content of the URI is read, it is fed back into the application that is processing the XML. This application may echo back the data (e.g. in an error message), thereby exposing the file contents.\n\n\nReal-World Examples:\n\n- CVE-2022-42745: Recruiter software allows reading arbitrary files using XXE\n\n- CVE-2005-1306: A browser control can allow remote attackers to determine the existence of files via Javascript containing XML script.\n\n- CVE-2012-5656: XXE during SVG image conversion\n\n- CVE-2012-2239: XXE in PHP application allows reading the application's configuration file.\n\n- CVE-2012-3489: XXE in database server\n\n- CVE-2012-4399: XXE in rapid web application development framework allows reading arbitrary files.\n\n- CVE-2012-3363: XXE via XML-RPC request.\n\n- CVE-2012-0037: XXE in office document product using RDF.\n\n- CVE-2011-4107: XXE in web-based administration tool for database.\n\n- CVE-2010-3322: XXE in product that performs large-scale data analysis.\n\n- CVE-2009-1699: XXE in XSL stylesheet functionality in a common library used by some web browsers.\n\nTop 25 CWE Examples:\n\n- CVE-2020-25817: SilverStripe through 4.6.0-rc1 has an XXE Vulnerability in CSSContentParser. A developer utility meant for parsing HTML within unit tests can be vulnerable to XML External Entity (XXE) attacks. When this developer utility is misused for purposes involving external or user submitted data in custom project code, it can lead to vulnerabilities such as XSS on HTML output rendered through this custom code. This is now mitigated by disabling external entities during parsing. (The correct CVE ID year is 2020 [CVE-2020-25817, not CVE-2021-25817]).\n\n- CVE-2021-20453: IBM WebSphere Application Server 8.0, 8.5, and 9.0 is vulnerable to a XML External Entity Injection (XXE) attack when processing XML data. A remote attacker could exploit this vulnerability to expose sensitive information or consume memory resources. IBM X-Force ID: 196648.\n\n- CVE-2021-22158: The Proofpoint Insider Threat Management Server (formerly ObserveIT Server) is vulnerable to XML external entity (XXE) injection in the Web Console. The vulnerability requires admin user privileges and knowledge of the XML file's encryption key to successfully exploit. All versions before 7.11 are affected.\n\n- CVE-2021-28973: The XML Import functionality of the Administration console in Perforce Helix ALM 2020.3.1 Build 22 accepts XML input data that is parsed by insecurely configured software components, leading to XXE attacks.\n\n- CVE-2021-30137: Assyst 10 SP7.5 has authenticated XXE leading to SSRF via XML unmarshalling. The application allows users to send JSON or XML data to the server. It was possible to inject malicious XML data through several access points.\n\n- CVE-2021-34706: A vulnerability in the web-based management interface of Cisco Identity Services Engine (ISE) could allow an authenticated, remote attacker to access sensitive information or conduct a server-side request forgery (SSRF) attack through an affected device. This vulnerability is due to improper handling of XML External Entity (XXE) entries when parsing certain XML files. An attacker could exploit this vulnerability by uploading a crafted XML file that contains references to external entities. A successful exploit could allow the attacker to retrieve files from the local system, resulting in the disclosure of sensitive information, or cause the web application to perform arbitrary HTTP requests on behalf of the attacker.\n\n- CVE-2021-38948: IBM InfoSphere Information Server 11.7 is vulnerable to an XML External Entity Injection (XXE) attack when processing XML data. A remote attacker could exploit this vulnerability to expose sensitive information or consume memory resources. IBM X-Force ID: 211402.\n\n- CVE-2021-2401: Vulnerability in the Oracle BI Publisher product of Oracle Fusion Middleware (component: E-Business Suite - XDO). Supported versions that are affected are 5.5.0.0.0, 11.1.1.9.0, 12.2.1.3.0 and 12.2.1.4.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Oracle BI Publisher. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Oracle BI Publisher accessible data. CVSS 3.1 Base Score 5.3 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N).\n\n- CVE-2021-27635: SAP NetWeaver AS for JAVA, versions - 7.20, 7.30, 7.31, 7.40, 7.50, allows an attacker authenticated as an administrator to connect over a network and submit a specially crafted XML file in the application because of missing XML Validation, this vulnerability enables attacker to fully compromise confidentiality by allowing them to read any file on the filesystem or fully compromise availability by causing the system to crash. The attack cannot be used to change any data so that there is no compromise as to integrity.\n\n- CVE-2021-32925: admin/user_import.php in Chamilo 1.11.x reads XML data without disabling the ability to load external entities.\n\n- CVE-2021-44145: In the TransformXML processor of Apache NiFi before 1.15.1 an authenticated user could configure an XSLT file which, if it included malicious external entity calls, may reveal sensitive information.\n\n- CVE-2021-42560: An issue was discovered in CALDERA 2.9.0. The Debrief plugin receives base64 encoded \"SVG\" parameters when generating a PDF document. These SVG documents are parsed in an unsafe manner and can be leveraged for XXE attacks (e.g., File Exfiltration, Server Side Request Forgery, Out of Band Exfiltration, etc.).\n\n- CVE-2022-23170: SysAid - Okta SSO integration - was found vulnerable to XML External Entity Injection vulnerability. Any SysAid environment that uses the Okta SSO integration might be vulnerable. An unauthenticated attacker could exploit the XXE vulnerability by sending a malformed POST request to the identity provider endpoint. An attacker can extract the identity provider endpoint by decoding the SAMLRequest parameter's value and searching for the AssertionConsumerServiceURL parameter's value. It often allows an attacker to view files on the application server filesystem and interact with any back-end or external systems that the application can access. In some situations, an attacker can escalate an XXE attack to compromise the underlying server or other back-end infrastructure by leveraging the XXE vulnerability to perform server-side request forgery (SSRF) attacks.\n\n- CVE-2022-24449: Solar appScreener through 3.10.4, when a valid license is not present, allows XXE and SSRF attacks via a crafted XML document.\n\n- CVE-2022-2458: XML external entity injection(XXE) is a vulnerability that allows an attacker to interfere with an application's processing of XML data. This attack occurs when XML input containing a reference to an external entity is processed by a weakly configured XML parser. The software processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output. Here, XML external entity injection lead to External Service interaction & Internal file read in Business Central and also Kie-Server APIs.\n\n- CVE-2022-27193: CVRF-CSAF-Converter before 1.0.0-rc2 resolves XML External Entities (XXE). This leads to the inclusion of arbitrary (local) file content into the generated output document. An attacker can exploit this to disclose information from the system running the converter.\n\n- CVE-2022-3338: An External XML entity (XXE) vulnerability in ePO prior to 5.10 Update 14 can lead to an unauthenticated remote attacker to potentially trigger a Server Side Request Forgery attack. This can be exploited by mimicking the Agent Handler call to ePO and passing the carefully constructed XML file through the API.\n\n- CVE-2022-35741: Apache CloudStack version 4.5.0 and later has a SAML 2.0 authentication Service Provider plugin which is found to be vulnerable to XML external entity (XXE) injection. This plugin is not enabled by default and the attacker would require that this plugin be enabled to exploit the vulnerability. When the SAML 2.0 plugin is enabled in affected versions of Apache CloudStack could potentially allow the exploitation of XXE vulnerabilities. The SAML 2.0 messages constructed during the authentication flow in Apache CloudStack are XML-based and the XML data is parsed by various standard libraries that are now understood to be vulnerable to XXE injection attacks such as arbitrary file reading, possible denial of service, server-side request forgery (SSRF) on the CloudStack management server.\n\n- CVE-2022-38342: Safe Software FME Server v2021.2.5, v2022.0.0.2 and below was discovered to contain a XML External Entity (XXE) vulnerability which allows authenticated attackers to perform data exfiltration or Server-Side Request Forgery (SSRF) attacks.\n\n- CVE-2022-3980: An XML External Entity (XEE) vulnerability allows server-side request forgery (SSRF) and potential code execution in Sophos Mobile managed on-premises between versions 5.0.0 and 9.7.4.\n\n- CVE-2022-42745: CandidATS version 3.0.0 allows an external attacker to read arbitrary files from the server. This is possible because the application is vulnerable to XXE.\n\n- CVE-2022-45194: CBRN-Analysis before 22 allows XXE attacks via am mws XML document, leading to NTLMv2-SSP hash disclosure.\n\n- CVE-2022-45326: An XML external entity (XXE) injection vulnerability in Kwoksys Kwok Information Server before v2.9.5.SP31 allows remote authenticated users to conduct server-side request forgery (SSRF) attacks.\n\n- CVE-2022-46827: In JetBrains IntelliJ IDEA before 2022.3 an XXE attack leading to SSRF via requests to custom plugin repositories was possible.\n\n- CVE-2022-47514: An XML external entity (XXE) injection vulnerability in XML-RPC.NET before 2.5.0 allows remote authenticated users to conduct server-side request forgery (SSRF) attacks, as demonstrated by a pingback.aspx POST request.\n\n- CVE-2022-47873: Netcad KEOS 1.0 is vulnerable to XML External Entity (XXE) resulting in SSRF with XXE (remote).\n\nRelated Weaknesses:\n\n- CWE-610 (ChildOf)\n\n- CWE-610 (ChildOf)\n\n- CWE-441 (PeerOf)",
            "type": "Base",
            "search_source": "base_query",
            "metadata": {
              "source": "sparse",
              "mapping_notes": {
                "usage": "Allowed",
                "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
                "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
                "reasons": [
                  "Acceptable-Use"
                ]
              }
            }
          }
        ]
      },
      "search_metadata": {
        "query": "There is an information disclosure vulnerability in the GoldenDB database product. Attackers can exploit error messages to obtain the systems sensitive information.",
        "keyphrases": {
          "weakness": [
            "information disclosure vulnerability"
          ]
        },
        "cve_id": "CVE-2025-46574",
        "retrievers_used": {
          "graph": true,
          "dense": true,
          "sparse": true
        },
        "search_time": 1752327152.9839869,
        "retriever_counts": {
          "graph": 20,
          "dense": 20,
          "sparse": 12
        }
      }
    },
    "relevant_cwes": [
      {
        "metadata": {
          "doc_id": "200",
          "name": "Exposure of Sensitive Information to an Unauthorized Actor",
          "source": "alternate_terms",
          "original_match": "AlternateTerms: Information Disclosure",
          "match_reason": "term_in_phrase_whole_phrase"
        },
        "similarity": 800.0,
        "alternate_term_match": true
      },
      {
        "metadata": {
          "doc_id": "209",
          "name": "Generation of Error Message Containing Sensitive Information",
          "source": "sparse"
        },
        "similarity": 141.4299876608809
      },
      {
        "metadata": {
          "doc_id": "203",
          "name": "Observable Discrepancy",
          "source": "sparse"
        },
        "similarity": 137.67088490931772
      },
      {
        "metadata": {
          "doc_id": "497",
          "name": "Exposure of Sensitive System Information to an Unauthorized Control Sphere",
          "source": "sparse"
        },
        "similarity": 134.10517159594693
      },
      {
        "metadata": {
          "doc_id": "259",
          "name": "Use of Hard-coded Password",
          "source": "sparse"
        },
        "similarity": 133.39706602490705
      },
      {
        "metadata": {
          "doc_id": "1295",
          "name": "Debug Messages Revealing Unnecessary Information",
          "type": "Base",
          "original_content": "The product fails to adequately prevent the revealing of unnecessary and potentially sensitive system information within debugging messages.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "graph"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "dense": 0.554595689578811,
              "graph": 2.438855838305762
            }
          }
        },
        "similarity": 0.554595689578811
      },
      {
        "doc_id": "756",
        "text": "CWE-756: Missing Custom Error Page",
        "score": 2.2100000000000004,
        "metadata": {
          "doc_id": "756",
          "name": "Missing Custom Error Page",
          "type": "base",
          "original_content": "CWE-756: Missing Custom Error Page",
          "relationships": [
            {
              "source_id": "756",
              "target_id": "7",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "756",
              "target_id": "12",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "756",
              "target_id": "209",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "756",
              "target_id": "755",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "755",
              "target_id": "756",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "7",
              "target_id": "756",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "209",
              "target_id": "756",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "12",
              "target_id": "756",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 1.0,
            "sequence_path": 1.0
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "vulnerability_sequence_forward",
              "vulnerability_sequence_backward"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "209",
                    "756",
                    "CANFOLLOW"
                  ]
                ],
                "score": 1.0,
                "type": "relationship_chain",
                "source": "209"
              },
              "vulnerability_sequence_forward": {
                "path": [
                  [
                    "209",
                    "756",
                    "CANFOLLOW"
                  ]
                ],
                "score": 0.9,
                "type": "vulnerability_sequence_forward",
                "source": "209"
              },
              "vulnerability_sequence_backward": {
                "path": [
                  [
                    "756",
                    "209",
                    "CANPRECEDE"
                  ]
                ],
                "score": 1.0,
                "type": "vulnerability_sequence_backward",
                "source": "209"
              }
            }
          },
          "position": "before",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 2.2100000000000004
            }
          }
        },
        "similarity": 2.2100000000000004
      },
      {
        "metadata": {
          "doc_id": "665",
          "name": "Improper Initialization",
          "source": "sparse"
        },
        "similarity": 133.041383215544
      },
      {
        "metadata": {
          "doc_id": "459",
          "name": "Incomplete Cleanup",
          "source": "sparse"
        },
        "similarity": 131.9423867804643
      },
      {
        "metadata": {
          "doc_id": "204",
          "name": "Observable Response Discrepancy",
          "source": "sparse"
        },
        "similarity": 131.760667517767
      }
    ],
    "enhanced_query": "## Vulnerability Description\nThere is an **information disclosure vulnerability** in the GoldenDB database product. Attackers can exploit error messages to obtain the systems sensitive information.\n\n### Vulnerability Description Key Phrases\n- **weakness:** **information disclosure vulnerability**\n- **impact:** information disclosure\n- **product:** GoldenDB\n\n## Retriever Results\n\n### Top Combined Results\n\n| Rank | CWE ID | Name | Abstraction | Usage  | Retrievers | Individual Scores |\n|------|--------|------|-------------|-------|------------|-------------------|\n| 1 | 200 | Exposure of Sensitive Information to an Unauthorized Actor | Class | Discouraged | alternate_terms | 0.800 |\n| 2 | 209 | Generation of Error Message Containing Sensitive Information | Base | Allowed | sparse | 0.141 |\n| 3 | 203 | Observable Discrepancy | Base | Allowed | sparse | 0.138 |\n| 4 | 497 | Exposure of Sensitive System Information to an Unauthorized Control Sphere | Base | Allowed | sparse | 0.134 |\n| 5 | 259 | Use of Hard-coded Password | Variant | Allowed | sparse | 0.133 |\n| 6 | 1295 | Debug Messages Revealing Unnecessary Information | Base | Allowed | dense | 0.555 |\n| 7 | 756 | Missing Custom Error Page | Base | Allowed | graph | 0.002 |\n| 8 | 665 | Improper Initialization | Class | Discouraged | sparse | 0.133 |\n| 9 | 459 | Incomplete Cleanup | Base | Allowed | sparse | 0.132 |\n| 10 | 204 | Observable Response Discrepancy | Base | Allowed | sparse | 0.132 |\n\n\n\n# Complete CWE Specifications\n\n\n## CWE-200: Exposure of Sensitive Information to an Unauthorized Actor\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.\n\n### Extended Description\n\n\nThere are many different kinds of mistakes that introduce information exposures. The severity of the error can range widely, depending on the context in which the product operates, the type of sensitive information that is revealed, and the benefits it may provide to an attacker. Some kinds of sensitive information include:\n\n\n  - private, personal information, such as personal messages, financial data, health records, geographic location, or contact details\n\n  - system status and environment, such as the operating system and installed packages\n\n  - business secrets and intellectual property\n\n  - network status and configuration\n\n  - the product's own code or internal state\n\n  - metadata, e.g. logging of connections or message headers\n\n  - indirect information, such as a discrepancy between two internal operations that can be observed by an outsider\n\nInformation might be sensitive to different parties, each of which may have their own expectations for whether the information should be protected. These parties include:\n\n  - the product's own users\n\n  - people or organizations whose information is created or used by the product, even if they are not direct product users\n\n  - the product's administrators, including the admins of the system(s) and/or networks on which the product operates\n\n  - the developer\n\nInformation exposures can occur in different ways:\n\n  - the code  **explicitly inserts**  sensitive information into resources or messages that are intentionally made accessible to unauthorized actors, but should not contain the information - i.e., the information should have been \"scrubbed\" or \"sanitized\"\n\n  - a different weakness or mistake  **indirectly inserts**  the sensitive information into resources, such as a web script error revealing the full system path of the program.\n\n  - the code manages resources that intentionally contain sensitive information, but the resources are  **unintentionally made accessible**  to unauthorized actors. In this case, the information exposure is resultant - i.e., a different weakness enabled the access to the information in the first place.\n\nIt is common practice to describe any loss of confidentiality as an \"information exposure,\" but this can lead to overuse of CWE-200 in CWE mapping. From the CWE perspective, loss of confidentiality is a technical impact that can arise from dozens of different weaknesses, such as insecure file permissions or out-of-bounds read. CWE-200 and its lower-level descendants are intended to cover the mistakes that occur in behaviors that explicitly manage, store, transfer, or cleanse sensitive information.\n\n### Alternative Terms\nInformation Disclosure: This term is frequently used in vulnerability advisories to describe a consequence or technical impact, for any vulnerability that has a loss of confidentiality. Often, CWE-200 can be misused to represent the loss of confidentiality, even when the mistake - i.e., the weakness - is not directly related to the mishandling of the information itself, such as an out-of-bounds read that accesses sensitive memory contents; here, the out-of-bounds read is the primary weakness, not the disclosure of the memory. In addition, this phrase is also used frequently in policies and legal documents, but it does not refer to any disclosure of security-relevant information.\nInformation Leak: This is a frequently used term, however the \"leak\" term has multiple uses within security. In some cases it deals with the accidental exposure of information from a different weakness, but in other cases (such as \"memory leak\"), this deals with improper tracking of resources, which can lead to exhaustion. As a result, CWE is actively avoiding usage of the \"leak\" term.\n\n### Relationships\nChildOf -> CWE-668\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** CWE-200 is commonly misused to represent the loss of confidentiality in a vulnerability, but confidentiality loss is a technical impact - not a root cause error. As of CWE 4.9, over 400 CWE entries can lead to a loss of confidentiality. Other options are often available. [REF-1287].\n**Comments:** If an error or mistake causes information to be disclosed, then use the CWE ID for that error. Consider starting with improper authorization (CWE-285), insecure permissions (CWE-732), improper authentication (CWE-287), etc. Also consider children such as Insertion of Sensitive Information Into Sent Data (CWE-201), Observable Discrepancy (CWE-203), Insertion of Sensitive Information into Externally-Accessible File or Directory (CWE-538), or others.\n**Reasons:**\n- Frequent Misuse\n\n\n### Additional Notes\n**[Maintenance]** As a result of mapping analysis in the 2020 Top 25 and more recent versions, this weakness is under review, since it is frequently misused in mapping to cover many problems that lead to loss of confidentiality. See Mapping Notes, Extended Description, and Alternate Terms.\n\n\n\n### Observed Examples\n- **CVE-2022-31162:** Rust library leaks Oauth client details in application debug logs\n- **CVE-2021-25476:** Digital Rights Management (DRM) capability for mobile platform leaks pointer information, simplifying ASLR bypass\n- **CVE-2001-1483:** Enumeration of valid usernames based on inconsistent responses\n\n\n\n\n## CWE-209: Generation of Error Message Containing Sensitive Information\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product generates an error message that includes sensitive information about its environment, users, or associated data.\n\n### Extended Description\n\n\nThe sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more serious attacks. The error message may be created in different ways:\n\n\n  - self-generated: the source code explicitly constructs the error message and delivers it\n\n  - externally-generated: the external environment, such as a language interpreter, handles the error and constructs its own message, whose contents are not under direct control by the programmer\n\nAn attacker may use the contents of error messages to help launch another, more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of \"..\" sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-200\nChildOf -> CWE-200\nChildOf -> CWE-755\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2008-2049:** POP3 server reveals a password in an error message after multiple APOP commands are sent. Might be resultant from another weakness.\n- **CVE-2007-5172:** Program reveals password in error message if attacker can trigger certain database errors.\n- **CVE-2008-4638:** Composite: application running with high privileges (CWE-250) allows user to specify a restricted file to process, which generates a parsing error that leaks the contents of the file (CWE-209).\n\n\n\n\n## CWE-203: Observable Discrepancy\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not.\n\n### Extended Description\nDiscrepancies can take many forms, and variations may be detectable in timing, control flow, communications such as replies or requests, or general behavior. These discrepancies can reveal information about the product's operation or internal state to an unauthorized actor. In some cases, discrepancies can be used by attackers to form a side channel.\n\n### Alternative Terms\nSide Channel Attack: Observable Discrepancies are at the root of side channel attacks.\n\n### Relationships\nChildOf -> CWE-200\nChildOf -> CWE-200\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2020-8695:** Observable discrepancy in the RAPL interface for some Intel processors allows information disclosure.\n- **CVE-2019-14353:** Crypto hardware wallet's power consumption relates to total number of pixels illuminated, creating a side channel in the USB connection that allows attackers to determine secrets displayed such as PIN numbers and passwords\n- **CVE-2019-10071:** Java-oriented framework compares HMAC signatures using String.equals() instead of a constant-time algorithm, causing timing discrepancies\n\n\n\n\n## CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.\n\n### Extended Description\n\n\nNetwork-based products, such as web applications, often run on top of an operating system or similar environment. When the product communicates with outside parties, details about the underlying system are expected to remain hidden, such as path names for data files, other OS users, installed packages, the application environment, etc. This system information may be provided by the product itself, or buried within diagnostic or debugging messages. Debugging information helps an adversary learn about the system and form an attack plan.\n\n\nAn information exposure occurs when system data or debugging information leaves the program through an output stream or logging function that makes it accessible to unauthorized parties. Using other weaknesses, an attacker could cause errors to occur; the response to these errors can reveal detailed system information, along with other impacts. An attacker can use messages that reveal technologies, operating systems, and product versions to tune the attack against known vulnerabilities in these technologies. A product may use diagnostic methods that provide significant implementation details such as stack traces as part of its error handling mechanism.\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-200\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2021-32638:** Code analysis product passes access tokens as a command-line parameter or through an environment variable, making them visible to other processes via the ps command.\n\n\n\n\n## CWE-259: Use of Hard-coded Password\n**Abstraction:** Variant\n**Status:** Draft\n\n### Description\nThe product contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.\n\n### Extended Description\n\n\nA hard-coded password typically leads to a significant authentication failure that can be difficult for the system administrator to detect. Once detected, it can be difficult to fix, so the administrator may be forced into disabling the product entirely. There are two main variations:\n\n```\n\t\tInbound: the product contains an authentication mechanism that checks for a hard-coded password.\n\t\tOutbound: the product connects to another system or component, and it contains hard-coded password for connecting to that component.\n```\nIn the Inbound variant, a default administration account is created, and a simple password is hard-coded into the product and associated with that account. This hard-coded password is the same for each installation of the product, and it usually cannot be changed or disabled by system administrators without manually modifying the program, or otherwise patching the product. If the password is ever discovered or published (a common occurrence on the Internet), then anybody with knowledge of this password can access the product. Finally, since all installations of the product will have the same password, even across different organizations, this enables massive attacks such as worms to take place.\n\nThe Outbound variant applies to front-end systems that authenticate with a back-end service. The back-end service may require a fixed password which can be easily discovered. The programmer may simply hard-code those back-end credentials into the front-end product. Any user of that program may be able to extract the password. Client-side systems with hard-coded passwords pose even more of a threat, since the extraction of a password from a binary is usually very simple.\n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-798\nChildOf -> CWE-798\nChildOf -> CWE-798\nPeerOf -> CWE-321\nPeerOf -> CWE-257\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Maintenance]** This entry could be split into multiple variants: an inbound variant (as seen in the second demonstrative example) and an outbound variant (as seen in the first demonstrative example). These variants are likely to have different consequences, detectability, etc. More importantly, from a vulnerability theory perspective, they could be characterized as different behaviors.\n\n\n\n### Observed Examples\n- **CVE-2022-29964:** Distributed Control System (DCS) has hard-coded passwords for local shell access\n- **CVE-2021-37555:** Telnet service for IoT feeder for dogs and cats has hard-coded password [REF-1288]\n- **CVE-2021-35033:** Firmware for a WiFi router uses a hard-coded password for a BusyBox shell, allowing bypass of authentication through the UART port\n\n\n\n\n## CWE-1295: Debug Messages Revealing Unnecessary Information\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product fails to adequately prevent the revealing of unnecessary and potentially sensitive system information within debugging messages.\n\n### Extended Description\n\n\nDebug messages are messages that help troubleshoot an issue by revealing the internal state of the system. For example, debug data in design can be exposed through internal memory array dumps or boot logs through interfaces like UART via TAP commands, scan chain, etc. Thus, the more information contained in a debug message, the easier it is to debug. However, there is also the risk of revealing information that could help an attacker either decipher a vulnerability, and/or gain a better understanding of the system. Thus, this extra information could lower the \"security by obscurity\" factor. While \"security by obscurity\" alone is insufficient, it can help as a part of \"Defense-in-depth\". \n\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-200\nPeerOf -> CWE-209\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n### Observed Examples\n- **CVE-2021-25476:** Digital Rights Management (DRM) capability for mobile platform leaks pointer information, simplifying ASLR bypass\n- **CVE-2020-24491:** Processor generates debug message that contains sensitive information (\"addresses of memory transactions\").\n- **CVE-2017-18326:** modem debug messages include cryptographic keys\n\n\n\n\n## CWE-756: Missing Custom Error Page\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product does not return custom error pages to the user, possibly exposing sensitive information.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-755\nCanPrecede -> CWE-209\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n\n\n\n\n## CWE-665: Improper Initialization\n**Abstraction:** Class\n**Status:** Draft\n\n### Description\nThe product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.\n\n### Extended Description\nThis can have security implications when the associated resource is expected to have certain properties or values, such as a variable that determines whether a user has been authenticated or not.\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-664\n\n### Mapping Guidance\n**Usage:** Discouraged\n**Rationale:** This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n**Comments:** Examine children of this entry to see if there is a better fit\n**Reasons:**\n- Abstraction\n\n\n\n### Observed Examples\n- **CVE-2001-1471:** chain: an invalid value prevents a library file from being included, skipping initialization of key variables, leading to resultant eval injection.\n- **CVE-2008-3637:** Improper error checking in protection mechanism produces an uninitialized variable, allowing security bypass and code execution.\n- **CVE-2008-4197:** Use of uninitialized memory may allow code execution.\n\n\n\n\n## CWE-459: Incomplete Cleanup\n**Abstraction:** Base\n**Status:** Draft\n\n### Description\nThe product does not properly \"clean up\" and remove temporary or supporting resources after they have been used.\n\n### Extended Description\nNot provided\n\n### Alternative Terms\nInsufficient Cleanup\n\n### Relationships\nChildOf -> CWE-404\nChildOf -> CWE-404\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Relationship]** CWE-459 is a child of CWE-404 because, while CWE-404 covers any type of improper shutdown or release of a resource, CWE-459 deals specifically with a multi-step shutdown process in which a crucial step for \"proper\" cleanup is omitted or impossible. That is, CWE-459 deals specifically with a cleanup or shutdown process that does not successfully remove all potentially sensitive data.\n\n**[Relationship]** Overlaps other categories such as permissions and containment. Concept needs further development. This could be primary (e.g. leading to infoleak) or resultant (e.g. resulting from unhandled error conditions or early termination).\n\n\n\n### Observed Examples\n- **CVE-2000-0552:** World-readable temporary file not deleted after use.\n- **CVE-2005-2293:** Temporary file not deleted after use, leaking database usernames and passwords.\n- **CVE-2002-0788:** Interaction error creates a temporary file that can not be deleted due to strong permissions.\n\n\n\n\n## CWE-204: Observable Response Discrepancy\n**Abstraction:** Base\n**Status:** Incomplete\n\n### Description\nThe product provides different responses to incoming requests in a way that reveals internal state information to an unauthorized actor outside of the intended control sphere.\n\n### Extended Description\nThis issue frequently occurs during authentication, where a difference in failed-login messages could allow an attacker to determine if the username is valid or not. These exposures can be inadvertent (bug) or intentional (design).\n\n### Alternative Terms\nNone\n\n### Relationships\nChildOf -> CWE-203\n\n### Mapping Guidance\n**Usage:** Allowed\n**Rationale:** This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n**Comments:** Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.\n**Reasons:**\n- Acceptable-Use\n\n\n### Additional Notes\n**[Relationship]** can overlap errors related to escalated privileges\n\n\n\n### Observed Examples\n- **CVE-2002-2094:** This, and others, use \"..\" attacks and monitor error responses, so there is overlap with directory traversal.\n- **CVE-2001-1483:** Enumeration of valid usernames based on inconsistent responses\n- **CVE-2001-1528:** Account number enumeration via inconsistent responses.\n\n",
    "dense_results": [
      {
        "metadata": {
          "doc_id": "200",
          "name": "Exposure of Sensitive Information to an Unauthorized Actor",
          "type": "Class",
          "original_content": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Discouraged",
            "rationale": "CWE-200 is commonly misused to represent the loss of confidentiality in a vulnerability, but confidentiality loss is a technical impact - not a root cause error. As of CWE 4.9, over 400 CWE entries can lead to a loss of confidentiality. Other options are often available. [REF-1287].",
            "comments": "If an error or mistake causes information to be disclosed, then use the CWE ID for that error. Consider starting with improper authorization (CWE-285), insecure permissions (CWE-732), improper authentication (CWE-287), etc. Also consider children such as Insertion of Sensitive Information Into Sent Data (CWE-201), Observable Discrepancy (CWE-203), Insertion of Sensitive Information into Externally-Accessible File or Directory (CWE-538), or others.",
            "reasons": [
              "Frequent Misuse"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "dense": 0.5568049924521623,
              "sparse": 800.0
            }
          }
        },
        "similarity": 0.5568049924521623
      },
      {
        "metadata": {
          "doc_id": "1295",
          "name": "Debug Messages Revealing Unnecessary Information",
          "type": "Base",
          "original_content": "The product fails to adequately prevent the revealing of unnecessary and potentially sensitive system information within debugging messages.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "graph"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "dense": 0.554595689578811,
              "graph": 2.438855838305762
            }
          }
        },
        "similarity": 0.554595689578811
      },
      {
        "metadata": {
          "doc_id": "532",
          "name": "Insertion of Sensitive Information into Log File",
          "type": "Base",
          "original_content": "The product writes sensitive information to a log file.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "graph"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "dense": 0.5542382130927397,
              "graph": 1.7304635753146775
            }
          }
        },
        "similarity": 0.5542382130927397
      },
      {
        "metadata": {
          "doc_id": "211",
          "name": "Externally-Generated Error Message Containing Sensitive Information",
          "type": "Base",
          "original_content": "The product performs an operation that triggers an external diagnostic or error message that is not directly generated or controlled by the product, such as an error generated by the programming language interpreter that a software application uses. The error can contain sensitive system information.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "graph"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "dense": 0.5529236893798679,
              "graph": 1.7403755693322525
            }
          }
        },
        "similarity": 0.5529236893798679
      },
      {
        "metadata": {
          "doc_id": "550",
          "name": "Server-generated Error Message Containing Sensitive Information",
          "type": "Variant",
          "original_content": "Certain conditions, such as network failure, will cause a server error message to be displayed.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "graph"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "dense": 0.5515453662079837,
              "graph": 1.5513093572068877
            }
          }
        },
        "similarity": 0.5515453662079837
      },
      {
        "metadata": {
          "doc_id": "213",
          "name": "Exposure of Sensitive Information Due to Incompatible Policies",
          "type": "Base",
          "original_content": "The product's intended functionality exposes information to certain actors in accordance with the developer's security policy, but this information is regarded as sensitive according to the intended security policies of other stakeholders such as the product's administrator, users, or others whose information is being processed.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.549291948813443
            }
          }
        },
        "similarity": 0.549291948813443
      },
      {
        "metadata": {
          "doc_id": "922",
          "name": "Insecure Storage of Sensitive Information",
          "type": "Class",
          "original_content": "The product stores sensitive information without properly limiting read or write access by unauthorized actors.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed-with-Review",
            "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
            "comments": "Examine children of this entry to see if there is a better fit",
            "reasons": [
              "Abstraction"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.5453782432517486
            }
          }
        },
        "similarity": 0.5453782432517486
      },
      {
        "metadata": {
          "doc_id": "497",
          "name": "Exposure of Sensitive System Information to an Unauthorized Control Sphere",
          "type": "Base",
          "original_content": "The product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.",
          "keyphrase_source": "weakness:information disclosure vulnerability",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse",
              "graph"
            ],
            "retriever_count": 3,
            "normalized_scores": {
              "dense": 0.5451759642623561,
              "sparse": 134.10517159594693,
              "graph": 1.7366888358158037
            }
          }
        },
        "similarity": 0.5451759642623561
      },
      {
        "metadata": {
          "doc_id": "89",
          "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
          "type": "Base",
          "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.5345595752446314
            }
          }
        },
        "similarity": 0.5345595752446314
      },
      {
        "metadata": {
          "doc_id": "202",
          "name": "Exposure of Sensitive Information Through Data Queries",
          "type": "Base",
          "original_content": "When trying to keep information confidential, an attacker can often infer some of the information by using statistics.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.5344625142079207
            }
          }
        },
        "similarity": 0.5344625142079207
      },
      {
        "metadata": {
          "doc_id": "537",
          "name": "Java Runtime Error Message Containing Sensitive Information",
          "type": "Variant",
          "original_content": "In many cases, an attacker can leverage the conditions that cause unhandled exception errors in order to gain unauthorized access to the system.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.5340224347533604
            }
          }
        },
        "similarity": 0.5340224347533604
      },
      {
        "metadata": {
          "doc_id": "210",
          "name": "Self-generated Error Message Containing Sensitive Information",
          "type": "Base",
          "original_content": "The product identifies an error condition and creates its own diagnostic or error messages that contain sensitive information.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.5330237831275444
            }
          }
        },
        "similarity": 0.5330237831275444
      },
      {
        "metadata": {
          "doc_id": "209",
          "name": "Generation of Error Message Containing Sensitive Information",
          "type": "Base",
          "original_content": "The product generates an error message that includes sensitive information about its environment, users, or associated data.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse",
              "graph"
            ],
            "retriever_count": 3,
            "normalized_scores": {
              "dense": 0.532574261304025,
              "sparse": 141.4299876608809,
              "graph": 2.4377578033577394
            }
          }
        },
        "similarity": 0.532574261304025
      },
      {
        "metadata": {
          "doc_id": "215",
          "name": "Insertion of Sensitive Information Into Debugging Code",
          "type": "Base",
          "original_content": "The product inserts sensitive information into debugging code, which could expose this information if the debugging code is not disabled in production.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.5228357542846217
            }
          }
        },
        "similarity": 0.5228357542846217
      },
      {
        "metadata": {
          "doc_id": "311",
          "name": "Missing Encryption of Sensitive Data",
          "type": "Class",
          "original_content": "The product does not encrypt sensitive or critical information before storage or transmission.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Discouraged",
            "rationale": "CWE-311 is high-level with more precise children available. It is a level-1 Class (i.e., a child of a Pillar).",
            "comments": "Consider children CWE-312: Cleartext Storage of Sensitive Information or CWE-319: Cleartext Transmission of Sensitive Information.",
            "reasons": [
              "Abstraction"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.5199269653734175
            }
          }
        },
        "similarity": 0.5199269653734175
      },
      {
        "metadata": {
          "doc_id": "204",
          "name": "Observable Response Discrepancy",
          "type": "Base",
          "original_content": "The product provides different responses to incoming requests in a way that reveals internal state information to an unauthorized actor outside of the intended control sphere.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "dense": 0.5176821415722559,
              "sparse": 131.760667517767
            }
          }
        },
        "similarity": 0.5176821415722559
      },
      {
        "metadata": {
          "doc_id": "317",
          "name": "Cleartext Storage of Sensitive Information in GUI",
          "type": "Variant",
          "original_content": "The product stores sensitive information in cleartext within the GUI.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.5175169690567838
            }
          }
        },
        "similarity": 0.5175169690567838
      },
      {
        "metadata": {
          "doc_id": "912",
          "name": "Hidden Functionality",
          "type": "Class",
          "original_content": "The product contains functionality that is not documented, not part of the specification, and not accessible through an interface or command sequence that is obvious to the product's users or administrators.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed-with-Review",
            "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
            "comments": "Examine children of this entry to see if there is a better fit",
            "reasons": [
              "Abstraction"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.516472450544881
            }
          }
        },
        "similarity": 0.516472450544881
      },
      {
        "metadata": {
          "doc_id": "1230",
          "name": "Exposure of Sensitive Information Through Metadata",
          "type": "Base",
          "original_content": "The product prevents direct access to a resource containing sensitive information, but it does not sufficiently limit access to metadata that is derived from the original, sensitive information.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.5134293046479486
            }
          }
        },
        "similarity": 0.5134293046479486
      },
      {
        "metadata": {
          "doc_id": "540",
          "name": "Inclusion of Sensitive Information in Source Code",
          "type": "Base",
          "original_content": "Source code on a web server or repository often contains sensitive information and should generally not be accessible to users.",
          "source": "dense",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "dense": 0.5127753486266304
            }
          }
        },
        "similarity": 0.5127753486266304
      }
    ],
    "sparse_results": [
      {
        "cwe_id": "200",
        "name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "description": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
        "score": 800.0,
        "matched_text": "AlternateTerms: Information Disclosure",
        "matched_phrase": "information disclosure vulnerability",
        "matched_term": "information disclosure",
        "type": "Class",
        "source": "sparse",
        "search_source": "alternate_term_match",
        "match_reason": "term_in_phrase_whole_phrase",
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Discouraged",
            "rationale": "CWE-200 is commonly misused to represent the loss of confidentiality in a vulnerability, but confidentiality loss is a technical impact - not a root cause error. As of CWE 4.9, over 400 CWE entries can lead to a loss of confidentiality. Other options are often available. [REF-1287].",
            "comments": "If an error or mistake causes information to be disclosed, then use the CWE ID for that error. Consider starting with improper authorization (CWE-285), insecure permissions (CWE-732), improper authentication (CWE-287), etc. Also consider children such as Insertion of Sensitive Information Into Sent Data (CWE-201), Observable Discrepancy (CWE-203), Insertion of Sensitive Information into Externally-Accessible File or Directory (CWE-538), or others.",
            "reasons": [
              "Frequent Misuse"
            ]
          }
        }
      },
      {
        "cwe_id": "209",
        "name": "Generation of Error Message Containing Sensitive Information",
        "description": "The product generates an error message that includes sensitive information about its environment, users, or associated data.",
        "score": 141.4299876608809,
        "matched_text": "CWE-209: Generation of Error Message Containing Sensitive Information\n\nType: Base\n\nStatus: Draft\n\nDescription:\n\nThe product generates an error message that includes sensitive information about its environment, users, or associated data.\n\nExtended Details:\n\n\n\nThe sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more serious attacks. The error message may be created in different ways:\n\n\n  - self-generated: the source code explicitly constructs the error message and delivers it\n\n  - externally-generated: the external environment, such as a language interpreter, handles the error and constructs its own message, whose contents are not under direct control by the programmer\n\nAn attacker may use the contents of error messages to help launch another, more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of \"..\" sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.\n\nReal-World Examples:\n\n- CVE-2008-2049: POP3 server reveals a password in an error message after multiple APOP commands are sent. Might be resultant from another weakness.\n\n- CVE-2007-5172: Program reveals password in error message if attacker can trigger certain database errors.\n\n- CVE-2008-4638: Composite: application running with high privileges (CWE-250) allows user to specify a restricted file to process, which generates a parsing error that leaks the contents of the file (CWE-209).\n\n- CVE-2008-1579: Existence of user names can be determined by requesting a nonexistent blog and reading the error message.\n\n- CVE-2007-1409: Direct request to library file in web application triggers pathname leak in error message.\n\n- CVE-2008-3060: Malformed input to login page causes leak of full path when IMAP call fails.\n\n- CVE-2005-0603: Malformed regexp syntax leads to information exposure in error message.\n\n- CVE-2017-9615: verbose logging stores admin credentials in a world-readablelog file\n\n- CVE-2018-1999036: SSH password for private key stored in build log\n\nTop 25 CWE Examples:\n\n- CVE-2021-20413: IBM Guardium Data Encryption (GDE) 4.0.0.4 could allow a remote attacker to obtain sensitive information when a detailed technical error message is returned in the browser. This information could be used in further attacks against the system. IBM X-Force ID: 196212.\n\n- CVE-2021-20417: IBM Guardium Data Encryption (GDE) 4.0.0.4 could allow a remote attacker to obtain sensitive information when a detailed technical error message is returned in the browser. This information could be used in further attacks against the system. IBM X-Force ID: 196219\n\n- CVE-2021-32766: Nextcloud Text is an open source plaintext editing application which ships with the nextcloud server. In affected versions the Nextcloud Text application returned different error messages depending on whether a folder existed in a public link share. This is problematic in case the public link share has been created with \"Upload Only\" privileges. (aka \"File Drop\"). A link share recipient is not expected to see which folders or files exist in a \"File Drop\" share. Using this vulnerability an attacker is able to enumerate folders in such a share. Exploitation requires that the attacker has access to a valid affected \"File Drop\" link share. It is recommended that the Nextcloud Server is upgraded to 20.0.12, 21.0.4 or 22.0.1. Users who are unable to upgrade are advised to disable the Nextcloud Text application in the app settings.\n\n- CVE-2021-39458: Triggering an error page of the import process in Yakamara Media Redaxo CMS version 5.12.1 allows an authenticated CMS user has to alternate the files of a vaild file backup. This leads of leaking the database credentials in the environment variables.\n\n- CVE-2021-23135: Exposure of System Data to an Unauthorized Control Sphere vulnerability in web UI of Argo CD allows attacker to cause leaked secret data into web UI error messages and logs. This issue affects Argo CD 1.8 versions prior to 1.8.7; 1.7 versions prior to 1.7.14.\n\n- CVE-2020-20470: White Shark System (WSS) 1.3.2 has web site physical path leakage vulnerability.\n\n- CVE-2020-23995: An information disclosure vulnerability in ILIAS before 5.3.19, 5.4.12 and 6.0 allows remote authenticated attackers to get the upload data path via a workspace upload.\n\n- CVE-2021-25809: UCMS 1.5.0 was discovered to contain a physical path leakage via an error message returned by the adminchannelscache() function in top.php.\n\n- CVE-2021-32712: Shopware is an open source eCommerce platform. Versions prior to 5.6.10 are vulnerable to system information leakage in error handling. Users are recommend to update to version 5.6.10. You can get the update to 5.6.10 regularly via the Auto-Updater or directly via the download overview.\n\n- CVE-2020-19275: An Information Disclosure vulnerability exists in dhcms 2017-09-18 when entering invalid characters after the normal interface, which causes an error that will leak the physical path.\n\n- CVE-2021-21421: node-etsy-client is a NodeJs Etsy ReST API Client. Applications that are using node-etsy-client and reporting client error to the end user will offer api key value too This is fixed in node-etsy-client v0.3.0 and later.\n\n- CVE-2021-22169: An issue was identified in GitLab EE 13.4 or later which leaked internal IP address via error messages.\n\n- CVE-2021-40338: Hitachi Energy LinkOne product, has a vulnerability due to a web server misconfiguration, that enables debug mode and reveals the full path of the filesystem directory when an attacker generates errors during a query operation. This issue affects: Hitachi Energy LinkOne 3.20; 3.22; 3.23; 3.24; 3.25; 3.26.\n\n- CVE-2021-39023: IBM Guardium Data Encryption (GDE) 4.0.0 and 5.0.0 could allow a remote attacker to obtain sensitive information when a detailed technical error message is returned in the browser. This information could be used in further attacks against the system. IBM X-Force ID: 213860.\n\n- CVE-2022-31047: TYPO3 is an open source web content management system. Prior to versions 7.6.57 ELTS, 8.7.47 ELTS, 9.5.34 ELTS, 10.4.29, and 11.5.11, system internal credentials or keys (e.g. database credentials) can be logged as plaintext in exception handlers, when logging the complete exception stack trace. TYPO3 versions 7.6.57 ELTS, 8.7.47 ELTS, 9.5.34 ELTS, 10.4.29, 11.5.11 contain a fix for the problem.\n\n- CVE-2022-2062: Generation of Error Message Containing Sensitive Information in GitHub repository nocodb/nocodb prior to 0.91.7+.\n\n- CVE-2021-38924: IBM Maximo Asset Management 7.6.1.1 and 7.6.1.2 could allow a remote attacker to obtain sensitive information when a detailed technical error message is returned in the browser. This information could be used in further attacks against the system. IBM X-Force ID: 210163.\n\n- CVE-2022-39315: Kirby is a Content Management System. Prior to versions 3.5.8.2, 3.6.6.2, 3.7.5.1, and 3.8.1, a user enumeration vulnerability affects all Kirby sites with user accounts unless Kirby's API and Panel are disabled in the config. It can only be exploited for targeted attacks because the attack does not scale to brute force. The problem has been patched in Kirby 3.5.8.2, Kirby 3.6.6.2, Kirby 3.7.5.1, and Kirby 3.8.1. In all of the mentioned releases, the maintainers have rewritten the affected code so that the delay is also inserted after the brute force limit is reached.\n\n- CVE-2022-20525: In enforceVisualVoicemailPackage of PhoneInterfaceManager.java, there is a possible leak of visual voicemail package name due to a permissions bypass. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-13Android ID: A-229742768\n\n- CVE-2022-24906: Nextcloud Deck is a Kanban-style project & personal management tool for Nextcloud, similar to Trello. The full path of the application is exposed to unauthorized users. It is recommended that the Nextcloud Deck app is upgraded to 1.2.11, 1.4.6, or 1.5.4. There is no workaround available.\n\n- CVE-2022-39307: Grafana is an open-source platform for monitoring and observability. When using the forget password on the login page, a POST request is made to the `/api/user/password/sent-reset-email` URL. When the username or email does not exist, a JSON response contains a \u201cuser not found\u201d message. This leaks information to unauthenticated users and introduces a security risk. This issue has been patched in 9.2.4 and backported to 8.5.15. There are no known workarounds.\n\nRelated Weaknesses:\n\n- CWE-200 (ChildOf)\n\n- CWE-200 (ChildOf)\n\n- CWE-755 (ChildOf)",
        "type": "Base",
        "source": "sparse",
        "search_source": "weakness:information disclosure vulnerability",
        "sources": [
          "base",
          "weakness"
        ],
        "boost_factor": 2.8,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          }
        }
      },
      {
        "cwe_id": "203",
        "name": "Observable Discrepancy",
        "description": "The product behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not.",
        "score": 137.67088490931772,
        "matched_text": "CWE-203: Observable Discrepancy\n\nType: Base\n\nStatus: Incomplete\n\nAlternative Terms:\n\nSide Channel Attack - Observable Discrepancies are at the root of side channel attacks.\n\nSide Channel Attack - Observable Discrepancies are at the root of side channel attacks.\n\nSide Channel Attack - Observable Discrepancies are at the root of side channel attacks.\n\nDescription:\n\nThe product behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not.\n\nExtended Details:\n\nDiscrepancies can take many forms, and variations may be detectable in timing, control flow, communications such as replies or requests, or general behavior. These discrepancies can reveal information about the product's operation or internal state to an unauthorized actor. In some cases, discrepancies can be used by attackers to form a side channel.\n\nReal-World Examples:\n\n- CVE-2020-8695: Observable discrepancy in the RAPL interface for some Intel processors allows information disclosure.\n\n- CVE-2019-14353: Crypto hardware wallet's power consumption relates to total number of pixels illuminated, creating a side channel in the USB connection that allows attackers to determine secrets displayed such as PIN numbers and passwords\n\n- CVE-2019-10071: Java-oriented framework compares HMAC signatures using String.equals() instead of a constant-time algorithm, causing timing discrepancies\n\n- CVE-2002-2094: This, and others, use \"..\" attacks and monitor error responses, so there is overlap with directory traversal.\n\n- CVE-2001-1483: Enumeration of valid usernames based on inconsistent responses\n\n- CVE-2001-1528: Account number enumeration via inconsistent responses.\n\n- CVE-2004-2150: User enumeration via discrepancies in error messages.\n\n- CVE-2005-1650: User enumeration via discrepancies in error messages.\n\n- CVE-2004-0294: Bulletin Board displays different error messages when a user exists or not, which makes it easier for remote attackers to identify valid users and conduct a brute force password guessing attack.\n\n- CVE-2004-0243: Operating System, when direct remote login is disabled, displays a different message if the password is correct, which allows remote attackers to guess the password via brute force methods.\n\n- CVE-2002-0514: Product allows remote attackers to determine if a port is being filtered because the response packet TTL is different than the default TTL.\n\n- CVE-2002-0515: Product sets a different TTL when a port is being filtered than when it is not being filtered, which allows remote attackers to identify filtered ports by comparing TTLs.\n\n- CVE-2002-0208: Product modifies TCP/IP stack and ICMP error messages in unusual ways that show the product is in use.\n\n- CVE-2004-2252: Behavioral infoleak by responding to SYN-FIN packets.\n\n- CVE-2001-1387: Product may generate different responses than specified by the administrator, possibly leading to an information leak.\n\n- CVE-2004-0778: Version control system allows remote attackers to determine the existence of arbitrary files and directories via the -X command for an alternate history file, which causes different error messages to be returned.\n\n- CVE-2004-1428: FTP server generates an error message if the user name does not exist instead of prompting for a password, which allows remote attackers to determine valid usernames.\n\n- CVE-2003-0078: SSL implementation does not perform a MAC computation if an incorrect block cipher padding is used, which causes an information leak (timing discrepancy) that may make it easier to launch cryptographic attacks that rely on distinguishing between padding and MAC verification errors, possibly leading to extraction of the original plaintext, aka the \"Vaudenay timing attack.\"\n\n- CVE-2000-1117: Virtual machine allows malicious web site operators to determine the existence of files on the client by measuring delays in the execution of the getSystemResource method.\n\n- CVE-2003-0637: Product uses a shorter timeout for a non-existent user than a valid user, which makes it easier for remote attackers to guess usernames and conduct brute force password guessing.\n\n- CVE-2003-0190: Product immediately sends an error message when a user does not exist, which allows remote attackers to determine valid usernames via a timing attack.\n\n- CVE-2004-1602: FTP server responds in a different amount of time when a given username exists, which allows remote attackers to identify valid usernames by timing the server response.\n\n- CVE-2005-0918: Browser allows remote attackers to determine the existence of arbitrary files by setting the src property to the target filename and using Javascript to determine if the web page immediately stops loading, which indicates whether the file exists or not.\n\nTop 25 CWE Examples:\n\n- CVE-2020-25082: An attacker with physical access to Nuvoton Trusted Platform Module (NPCT75x 7.2.x before 7.2.2.0) could extract an Elliptic Curve Cryptography (ECC) private key via a side-channel attack against ECDSA, because of an Observable Timing Discrepancy.\n\n- CVE-2021-29443: jose is an npm library providing a number of cryptographic operations. In vulnerable versions AES_CBC_HMAC_SHA2 Algorithm (A128CBC-HS256, A192CBC-HS384, A256CBC-HS512) decryption would always execute both HMAC tag verification and CBC decryption, if either failed `JWEDecryptionFailed` would be thrown. A possibly observable difference in timing when padding error would occur while decrypting the ciphertext makes a padding oracle and an adversary might be able to make use of that oracle to decrypt data without knowing the decryption key by issuing on average 128*b calls to the padding oracle (where b is the number of bytes in the ciphertext block). All major release versions have had a patch released which ensures the HMAC tag is verified before performing CBC decryption. The fixed versions are `^1.28.1 || ^2.0.5 || >=3.11.4`. Users should upgrade their v1.x dependency to ^1.28.1, their v2.x dependency to ^2.0.5, and their v3.x dependency to ^3.11.4. Thanks to Jason from Microsoft Vulnerability Research (MSVR) for bringing this up and Eva Sarafianou (@esarafianou) for helping to score this advisory.\n\n- CVE-2021-29444: jose-browser-runtime is an npm package which provides a number of cryptographic functions. In versions prior to 3.11.4 the AES_CBC_HMAC_SHA2 Algorithm (A128CBC-HS256, A192CBC-HS384, A256CBC-HS512) decryption would always execute both HMAC tag verification and CBC decryption, if either failed `JWEDecryptionFailed` would be thrown. But a possibly observable difference in timing when padding error would occur while decrypting the ciphertext makes a padding oracle and an adversary might be able to make use of that oracle to decrypt data without knowing the decryption key by issuing on average 128*b calls to the padding oracle (where b is the number of bytes in the ciphertext block). A patch was released which ensures the HMAC tag is verified before performing CBC decryption. The fixed versions are `>=3.11.4`. Users should upgrade to `^3.11.4`.\n\n- CVE-2021-29445: jose-node-esm-runtime is an npm package which provides a number of cryptographic functions. In versions prior to 3.11.4 the AES_CBC_HMAC_SHA2 Algorithm (A128CBC-HS256, A192CBC-HS384, A256CBC-HS512) decryption would always execute both HMAC tag verification and CBC decryption, if either failed `JWEDecryptionFailed` would be thrown. But a possibly observable difference in timing when padding error would occur while decrypting the ciphertext makes a padding oracle and an adversary might be able to make use of that oracle to decrypt data without knowing the decryption key by issuing on average 128*b calls to the padding oracle (where b is the number of bytes in the ciphertext block). A patch was released which ensures the HMAC tag is verified before performing CBC decryption. The fixed versions are `>=3.11.4`. Users should upgrade to `^3.11.4`.\n\n- CVE-2021-29446: jose-node-cjs-runtime is an npm package which provides a number of cryptographic functions. In versions prior to 3.11.4 the AES_CBC_HMAC_SHA2 Algorithm (A128CBC-HS256, A192CBC-HS384, A256CBC-HS512) decryption would always execute both HMAC tag verification and CBC decryption, if either failed `JWEDecryptionFailed` would be thrown. But a possibly observable difference in timing when padding error would occur while decrypting the ciphertext makes a padding oracle and an adversary might be able to make use of that oracle to decrypt data without knowing the decryption key by issuing on average 128*b calls to the padding oracle (where b is the number of bytes in the ciphertext block). A patch was released which ensures the HMAC tag is verified before performing CBC decryption. The fixed versions are `>=3.11.4`. Users should upgrade to `^3.11.4`.\n\n- CVE-2021-33560: Libgcrypt before 1.8.8 and 1.9.x before 1.9.3 mishandles ElGamal encryption because it lacks exponent blinding to address a side-channel attack against mpi_powm, and the window size is not chosen appropriately. This, for example, affects use of ElGamal in OpenPGP.\n\n- CVE-2021-0321: In enforceDumpPermissionForPackage of ActivityManagerService.java, there is a possible way to determine if a package is installed due to side channel information disclosure. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation. Product: Android; Versions: Android-11; Android ID: A-166667403.\n\n- CVE-2021-21424: Symfony is a PHP framework for web and console applications and a set of reusable PHP components. The ability to enumerate users was possible without relevant permissions due to different handling depending on whether the user existed or not when attempting to use the switch users functionality. We now ensure that 403s are returned whether the user exists or not if a user cannot switch to a user or if the user does not exist. The patch for this issue is available for branch 3.4.\n\n- CVE-2021-39021: IBM Guardium Data Encryption (GDE) 5.0.0.2 behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which could facilitate username enumeration. IBM X-Force ID: 213856.\n\n- CVE-2021-46744: An attacker with access to a malicious hypervisor may be able to infer data values used in a SEV guest on AMD CPUs by monitoring ciphertext values over time.\n\n- CVE-2022-1318: Hills ComNav version 3002-19 suffers from a weak communication channel. Traffic across the local network for the configuration pages can be viewed by a malicious actor. The size of certain communications packets are predictable. This would allow an attacker to learn the state of the system if they can observe the traffic. This would be possible even if the traffic were encrypted, e.g., using WPA2, as the packet sizes would remain observable. The communication encryption scheme is theoretically sound, but is not strong enough for the level of protection required.\n\n- CVE-2022-20866: A vulnerability in the handling of RSA keys on devices running Cisco Adaptive Security Appliance (ASA) Software and Cisco Firepower Threat Defense (FTD) Software could allow an unauthenticated, remote attacker to retrieve an RSA private key. This vulnerability is due to a logic error when the RSA key is stored in memory on a hardware platform that performs hardware-based cryptography. An attacker could exploit this vulnerability by using a Lenstra side-channel attack against the targeted device. A successful exploit could allow the attacker to retrieve the RSA private key. The following conditions may be observed on an affected device: This vulnerability will apply to approximately 5 percent of the RSA keys on a device that is running a vulnerable release of Cisco ASA Software or Cisco FTD Software; not all RSA keys are expected to be affected due to mathematical calculations applied to the RSA key. The RSA key could be valid but have specific characteristics that make it vulnerable to the potential leak of the RSA private key. If an attacker obtains the RSA private key, they could use the key to impersonate a device that is running Cisco ASA Software or Cisco FTD Software or to decrypt the device traffic. See the Indicators of Compromise section for more information on the detection of this type of RSA key. The RSA key could be malformed and invalid. A malformed RSA key is not functional, and a TLS client connection to a device that is running Cisco ASA Software or Cisco FTD Software that uses the malformed RSA key will result in a TLS signature failure, which means a vulnerable software release created an invalid RSA signature that failed verification. If an attacker obtains the RSA private key, they could use the key to impersonate a device that is running Cisco ASA Software or Cisco FTD Software or to decrypt the device traffic.\n\n- CVE-2022-20940: A vulnerability in the TLS handler of Cisco Firepower Threat Defense (FTD) Software could allow an unauthenticated, remote attacker to gain access to sensitive information. This vulnerability is due to improper implementation of countermeasures against a Bleichenbacher attack on a device that uses SSL decryption policies. An attacker could exploit this vulnerability by sending crafted TLS messages to an affected device, which would act as an oracle and allow the attacker to carry out a chosen-ciphertext attack. A successful exploit could allow the attacker to perform cryptanalytic operations that may allow decryption of previously captured TLS sessions to the affected device.\n\n- CVE-2022-27221: A vulnerability has been identified in SINEMA Remote Connect Server (All versions < V3.1). An attacker in machine-in-the-middle could obtain plaintext secret values by observing length differences during a series of guesses in which a string in an HTTP request URL potentially matches an unknown string in an HTTP response body, aka a \"BREACH\" attack.\n\n- CVE-2022-20275: In DevicePolicyManager, there is a possible way to determine whether an app is installed, without query permissions, due to side channel information disclosure. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-13Android ID: A-205836975\n\n- CVE-2022-20276: In DevicePolicyManager, there is a possible way to determine whether an app is installed, without query permissions, due to side channel information disclosure. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-13Android ID: A-205706731\n\n- CVE-2022-20277: In DevicePolicyManager, there is a possible way to determine whether an app is installed, without query permissions, due to side channel information disclosure. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-13Android ID: A-205145497\n\n- CVE-2022-20279: In DevicePolicyManager, there is a possible way to determine whether an app is installed, without query permissions, due to side channel information disclosure. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-13Android ID: A-204877302\n\n- CVE-2022-4087: A vulnerability was found in iPXE. It has been declared as problematic. This vulnerability affects the function tls_new_ciphertext of the file src/net/tls.c of the component TLS. The manipulation of the argument pad_len leads to information exposure through discrepancy. The name of the patch is 186306d6199096b7a7c4b4574d4be8cdb8426729. It is recommended to apply a patch to fix this issue. VDB-214054 is the identifier assigned to this vulnerability.\n\n- CVE-2021-33838: Luca through 1.7.4 on Android allows remote attackers to obtain sensitive information about COVID-19 tracking because requests related to Check-In State occur shortly after requests for Phone Number Registration.\n\nRelated Weaknesses:\n\n- CWE-200 (ChildOf)\n\n- CWE-200 (ChildOf)",
        "type": "Base",
        "source": "sparse",
        "search_source": "weakness:information disclosure vulnerability",
        "sources": [
          "base",
          "weakness"
        ],
        "boost_factor": 2.8,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          }
        }
      },
      {
        "cwe_id": "497",
        "name": "Exposure of Sensitive System Information to an Unauthorized Control Sphere",
        "description": "The product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.",
        "score": 134.10517159594693,
        "matched_text": "CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\n\nType: Base\n\nStatus: Incomplete\n\nDescription:\n\nThe product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.\n\nExtended Details:\n\n\n\nNetwork-based products, such as web applications, often run on top of an operating system or similar environment. When the product communicates with outside parties, details about the underlying system are expected to remain hidden, such as path names for data files, other OS users, installed packages, the application environment, etc. This system information may be provided by the product itself, or buried within diagnostic or debugging messages. Debugging information helps an adversary learn about the system and form an attack plan.\n\n\nAn information exposure occurs when system data or debugging information leaves the program through an output stream or logging function that makes it accessible to unauthorized parties. Using other weaknesses, an attacker could cause errors to occur; the response to these errors can reveal detailed system information, along with other impacts. An attacker can use messages that reveal technologies, operating systems, and product versions to tune the attack against known vulnerabilities in these technologies. A product may use diagnostic methods that provide significant implementation details such as stack traces as part of its error handling mechanism.\n\n\nReal-World Examples:\n\n- CVE-2021-32638: Code analysis product passes access tokens as a command-line parameter or through an environment variable, making them visible to other processes via the ps command.\n\nTop 25 CWE Examples:\n\n- CVE-2021-0291: An Exposure of System Data vulnerability in Juniper Networks Junos OS and Junos OS Evolved, where a sensitive system-level resource is not being sufficiently protected, allows a network-based unauthenticated attacker to send specific traffic which partially reaches this resource. A high rate of specific traffic may lead to a partial Denial of Service (DoS) as the CPU utilization of the RE is significantly increased. The SNMP Agent Extensibility (agentx) process should only be listening to TCP port 705 on the internal routing instance. External connections destined to port 705 should not be allowed. This issue affects: Juniper Networks Junos OS: 15.1 versions prior to 15.1R7-S9; 17.3 versions prior to 17.3R3-S12; 17.4 versions prior to 17.4R2-S13, 17.4R3-S5; 18.3 versions prior to 18.3R3-S5; 18.4 versions prior to 18.4R2-S8; 19.1 versions prior to 19.1R3-S5; 19.2 versions prior to 19.2R3-S2; 19.3 versions prior to 19.3R2-S6, 19.3R3-S2; 19.4 versions prior to 19.4R1-S4, 19.4R2-S4, 19.4R3; 20.1 versions prior to 20.1R2; 20.2 versions prior to 20.2R2; 20.3 versions prior to 20.3R2. Juniper Networks Junos OS Evolved versions prior to 20.3R2-EVO. This issue does not affect Juniper Networks Junos OS versions prior to 13.2R1.\n\n- CVE-2021-26067: Affected versions of Atlassian Bamboo allow an unauthenticated remote attacker to view a stack trace that may reveal the path for the home directory in disk and if certain files exists on the tmp directory, via a Sensitive Data Exposure vulnerability in the /chart endpoint. The affected versions are before version 7.2.2.\n\n- CVE-2021-21336: Products.PluggableAuthService is a pluggable Zope authentication and authorization framework. In Products.PluggableAuthService before version 2.6.0 there is an information disclosure vulnerability - everyone can list the names of roles defined in the ZODB Role Manager plugin if the site uses this plugin. The problem has been fixed in version 2.6.0. Depending on how you have installed Products.PluggableAuthService, you should change the buildout version pin to 2.6.0 and re-run the buildout, or if you used pip simply do `pip install \"Products.PluggableAuthService>=2.6.0\"`.\n\n- CVE-2021-21360: Products.GenericSetup is a mini-framework for expressing the configured state of a Zope Site as a set of filesystem artifacts. In Products.GenericSetup before version 2.1.1 there is an information disclosure vulnerability - anonymous visitors may view log and snapshot files generated by the Generic Setup Tool. The problem has been fixed in version 2.1.1. Depending on how you have installed Products.GenericSetup, you should change the buildout version pin to 2.1.1 and re-run the buildout, or if you used pip simply do pip install `\"Products.GenericSetup>=2.1.1\"`.\n\n- CVE-2021-21376: OMERO.web is open source Django-based software for managing microscopy imaging. OMERO.web before version 5.9.0 loads various information about the current user such as their id, name and the groups they are in, and these are available on the main webclient pages. This represents an information exposure vulnerability. Some additional information being loaded is not used by the webclient and is being removed in this release. This is fixed in version 5.9.0.\n\n- CVE-2021-22135: Elasticsearch versions before 7.11.2 and 6.8.15 contain a document disclosure flaw was found in the Elasticsearch suggester and profile API when Document and Field Level Security are enabled. The suggester and profile API are normally disabled for an index when document level security is enabled on the index. Certain queries are able to enable the profiler and suggester which could lead to disclosing the existence of documents and fields the attacker should not be able to view.\n\n- CVE-2022-22303: An exposure of sensitive system information to an unauthorized control sphere vulnerability [CWE-497] in FortiManager versions prior to 7.0.2, 6.4.7 and 6.2.9 may allow a low privileged authenticated user to gain access to the FortiGate users credentials via the config conflict file.\n\n- CVE-2022-34458:  Dell Command | Update, Dell Update, and Alienware Update versions prior to 4.7 contain a Exposure of Sensitive System Information to an Unauthorized Control Sphere vulnerability in download operation component. A local malicious user could potentially exploit this vulnerability leading to the disclosure of confidential data. \n\n- CVE-2022-22961: VMware Workspace ONE Access, Identity Manager and vRealize Automation contain an information disclosure vulnerability due to returning excess information. A malicious actor with remote access may leak the hostname of the target system. Successful exploitation of this issue can lead to targeting victims.\n\n- CVE-2022-28651: In JetBrains IntelliJ IDEA before 2021.3.3 it was possible to get passwords from protected fields\n\n- CVE-2022-20734: A vulnerability in Cisco SD-WAN vManage Software could allow an authenticated, local attacker to view sensitive information on an affected system. This vulnerability is due to insufficient file system restrictions. An authenticated attacker with netadmin privileges could exploit this vulnerability by accessing the vshell of an affected system. A successful exploit could allow the attacker to read sensitive information on the underlying operating system.\n\nRelated Weaknesses:\n\n- CWE-200 (ChildOf)",
        "type": "Base",
        "source": "sparse",
        "search_source": "weakness:information disclosure vulnerability",
        "sources": [
          "base",
          "weakness"
        ],
        "boost_factor": 2.8,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          }
        }
      },
      {
        "cwe_id": "259",
        "name": "Use of Hard-coded Password",
        "description": "The product contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.",
        "score": 133.39706602490705,
        "matched_text": "CWE-259: Use of Hard-coded Password\n\nType: Variant\n\nStatus: Draft\n\nDescription:\n\nThe product contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.\n\nExtended Details:\n\n\n\nA hard-coded password typically leads to a significant authentication failure that can be difficult for the system administrator to detect. Once detected, it can be difficult to fix, so the administrator may be forced into disabling the product entirely. There are two main variations:\n\n```\n\t\tInbound: the product contains an authentication mechanism that checks for a hard-coded password.\n\t\tOutbound: the product connects to another system or component, and it contains hard-coded password for connecting to that component.\n```\nIn the Inbound variant, a default administration account is created, and a simple password is hard-coded into the product and associated with that account. This hard-coded password is the same for each installation of the product, and it usually cannot be changed or disabled by system administrators without manually modifying the program, or otherwise patching the product. If the password is ever discovered or published (a common occurrence on the Internet), then anybody with knowledge of this password can access the product. Finally, since all installations of the product will have the same password, even across different organizations, this enables massive attacks such as worms to take place.\n\nThe Outbound variant applies to front-end systems that authenticate with a back-end service. The back-end service may require a fixed password which can be easily discovered. The programmer may simply hard-code those back-end credentials into the front-end product. Any user of that program may be able to extract the password. Client-side systems with hard-coded passwords pose even more of a threat, since the extraction of a password from a binary is usually very simple.\n\n\nReal-World Examples:\n\n- CVE-2022-29964: Distributed Control System (DCS) has hard-coded passwords for local shell access\n\n- CVE-2021-37555: Telnet service for IoT feeder for dogs and cats has hard-coded password [REF-1288]\n\n- CVE-2021-35033: Firmware for a WiFi router uses a hard-coded password for a BusyBox shell, allowing bypass of authentication through the UART port\n\nTop 25 CWE Examples:\n\n- CVE-2021-27438: The software contains a hard-coded password it uses for its own inbound authentication or for outbound communication to external components on the Reason DR60 (all firmware versions prior to 02A04.1).\n\n- CVE-2021-34757: Multiple vulnerabilities in Cisco Business 220 Series Smart Switches firmware could allow an attacker with Administrator privileges to access sensitive login credentials or reconfigure the passwords on the user account. For more information about these vulnerabilities, see the Details section of this advisory.\n\n- CVE-2020-1716: A flaw was found in the ceph-ansible playbook where it contained hardcoded passwords that were being used as default passwords while deploying Ceph services. Any authenticated attacker can abuse this flaw to brute-force Ceph deployments, and gain administrator access to Ceph clusters via the Ceph dashboard to initiate read, write, and delete Ceph clusters and also modify Ceph cluster configurations. Versions before ceph-ansible 6.0.0alpha1 are affected.\n\n- CVE-2021-21818: A hard-coded password vulnerability exists in the Zebra IP Routing Manager functionality of D-LINK DIR-3040 1.13B03. A specially crafted network request can lead to a denial of service. An attacker can send a sequence of requests to trigger this vulnerability.\n\n- CVE-2021-21820: A hard-coded password vulnerability exists in the Libcli Test Environment functionality of D-LINK DIR-3040 1.13B03. A specially crafted network request can lead to code execution. An attacker can send a sequence of requests to trigger this vulnerability.\n\n- CVE-2021-27440: The software contains a hard-coded password it uses for its own inbound authentication or for outbound communication to external components on the Reason DR60 (all firmware versions prior to 02A04.1).\n\n- CVE-2021-27452: The software contains a hard-coded password that could allow an attacker to take control of the merging unit using these hard-coded credentials on the MU320E (all firmware versions prior to v04A00.1).\n\n- CVE-2021-32454: SITEL CAP/PRX firmware version 5.2.01 makes use of a hardcoded password. An attacker with access to the device could modify these credentials, leaving the administrators of the device without access.\n\n- CVE-2021-32459: Trend Micro Home Network Security version 6.6.604 and earlier contains a hard-coded password vulnerability in the log collection server which could allow an attacker to use a specially crafted network request to lead to arbitrary authentication. An attacker must first obtain the ability to execute high-privileged code on the target device in order to exploit this vulnerability.\n\n- CVE-2021-36799: KNX ETS5 through 5.7.6 uses the hard-coded password ETS5Password, with a salt value of Ivan Medvedev, allowing local users to read project information. NOTE: This vulnerability only affects products that are no longer supported by the maintainer\n\n- CVE-2021-38456: A use of hard-coded password vulnerability in the Moxa MXview Network Management software Versions 3.x to 3.2.2 may allow an attacker to gain access through accounts using default passwords\n\n- CVE-2021-43575: KNX ETS6 through 6.0.0 uses the hard-coded password ETS5Password, with a salt value of Ivan Medvedev, allowing local users to read project information, a similar issue to CVE-2021-36799. NOTE: The vendor disputes this because it is not the responsibility of the ETS to securely store cryptographic key material when it is not being exported\n\n- CVE-2020-25752: An issue was discovered on Enphase Envoy R3.x and D4.x devices. There are hardcoded web-panel login passwords for the installer and Enphase accounts. The passwords for these accounts are hardcoded values derived from the MD5 hash of the username and serial number mixed with some static strings. The serial number can be retrieved by an unauthenticated user at /info.xml. These passwords can be easily calculated by an attacker; users are unable to change these passwords.\n\n- CVE-2020-29321: The D-Link router DIR-868L 3.01 is vulnerable to credentials disclosure in telnet service through decompilation of firmware, that allows an unauthenticated attacker to gain access to the firmware and to extract sensitive data.\n\n- CVE-2020-29322: The D-Link router DIR-880L 1.07 is vulnerable to credentials disclosure in telnet service through decompilation of firmware, that allows an unauthenticated attacker to gain access to the firmware and to extract sensitive data.\n\n- CVE-2020-29323: The D-link router DIR-885L-MFC 1.15b02, v1.21b05 is vulnerable to credentials disclosure in telnet service through decompilation of firmware, that allows an unauthenticated attacker to gain access to the firmware and to extract sensitive data.\n\n- CVE-2021-45520: Certain NETGEAR devices are affected by a hardcoded password. This affects RBK352 before 4.4.0.10, RBR350 before 4.4.0.10, and RBS350 before 4.4.0.10.\n\n- CVE-2021-45521: Certain NETGEAR devices are affected by a hardcoded password. This affects RBK352 before 4.4.0.10, RBR350 before 4.4.0.10, and RBS350 before 4.4.0.10.\n\n- CVE-2021-45522: NETGEAR XR1000 devices before 1.0.0.58 are affected by a hardcoded password.\n\n- CVE-2022-26138: The Atlassian Questions For Confluence app for Confluence Server and Data Center creates a Confluence user account in the confluence-users group with the username disabledsystemuser and a hardcoded password. A remote, unauthenticated attacker with knowledge of the hardcoded password could exploit this to log into Confluence and access all content accessible to users in the confluence-users group. This user account is created when installing versions 2.7.34, 2.7.35, and 3.0.2 of the app.\n\n- CVE-2021-31477: This vulnerability allows remote attackers to execute arbitrary code on affected installations of GE Reason RPV311 14A03. Authentication is not required to exploit this vulnerability. The specific flaw exists within the firmware and filesystem of the device. The firmware and filesystem contain hard-coded default credentials. An attacker can leverage this vulnerability to execute code in the context of the download user. Was ZDI-CAN-11852.\n\n- CVE-2022-1162: A hardcoded password was set for accounts registered using an OmniAuth provider (e.g. OAuth, LDAP, SAML) in GitLab CE/EE versions 14.7 prior to 14.7.7, 14.8 prior to 14.8.5, and 14.9 prior to 14.9.2 allowing attackers to potentially take over accounts\n\n- CVE-2022-22144: A hard-coded password vulnerability exists in the libcommonprod.so prod_change_root_passwd functionality of TCL LinkHub Mesh Wi-Fi MS1G_00_01.00_14. During system startup this functionality is always called, leading to a known root password. An attacker does not have to do anything to trigger this vulnerability.\n\n- CVE-2022-25577: ALF-BanCO v8.2.5 and below was discovered to use a hardcoded password to encrypt the SQLite database containing the user's data. Attackers who are able to gain remote or local access to the system are able to read and modify the data.\n\n- CVE-2022-26119: A improper authentication vulnerability in Fortinet FortiSIEM before 6.5.0 allows a local attacker with CLI access to perform operations on the Glassfish server directly via a hardcoded password.\n\n- CVE-2022-27172: A hard-coded password vulnerability exists in the console infactory functionality of InHand Networks InRouter302 V3.5.37. A specially-crafted network request can lead to privileged operation execution. An attacker can send a sequence of requests to trigger this vulnerability.\n\n- CVE-2022-29644: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a hard coded password for the telnet service stored in the component /web_cste/cgi-bin/product.ini.\n\n- CVE-2022-29645: TOTOLINK A3100R V4.1.2cu.5050_B20200504 and V4.1.2cu.5247_B20211129 were discovered to contain a hard coded password for root stored in the component /etc/shadow.sample.\n\n- CVE-2022-29825: Use of Hard-coded Password vulnerability in Mitsubishi Electric GX Works3 versions from 1.000A to 1.090U and GT Designer3 Version1 (GOT2000) versions from 1.122C to 1.290C allows an unauthenticated attacker to disclose sensitive information. As a result, unauthenticated users may view programs and project files or execute programs illegally.\n\n- CVE-2022-29831: Use of Hard-coded Password vulnerability in Mitsubishi Electric Corporation GX Works3 versions from 1.015R to 1.095Z allows a remote unauthenticated attacker to obtain information about the project file for MELSEC safety CPU modules.\n\n- CVE-2022-29889: A hard-coded password vulnerability exists in the telnet functionality of Abode Systems, Inc. iota All-In-One Security Kit 6.9Z. Use of a hard-coded root password can lead to arbitrary command execution. An attacker can authenticate with hard-coded credentials to trigger this vulnerability.\n\n- CVE-2022-32967: RTL8111EP-CG/RTL8111FP-CG DASH function has hard-coded password. An unauthenticated physical attacker can use the hard-coded default password during system reboot triggered by other user, to acquire partial system information such as serial number and server information.\n\n- CVE-2022-34005: An issue was discovered in TitanFTP (aka Titan FTP) NextGen before 1.2.1050. There is Remote Code Execution due to a hardcoded password for the sa account on the Microsoft SQL Express 2019 instance installed by default during TitanFTP NextGen installation, aka NX-I674 (sub-issue 1). NOTE: as of 2022-06-21, the 1.2.1050 release corrects this vulnerability in a new installation, but not in an upgrade installation.\n\n- CVE-2022-34462:  Dell EMC SCG Policy Manager, versions from 5.10 to 5.12, contain(s) a Hard-coded Password Vulnerability. An attacker, with the knowledge of the hard-coded credentials, could potentially exploit this vulnerability to login to the system to gain admin privileges. \n\n- CVE-2022-35491: TOTOLINK A3002RU V3.0.0-B20220304.1804 has a hardcoded password for root in /etc/shadow.sample.\n\n- CVE-2022-35866: This vulnerability allows remote attackers to bypass authentication on affected installations of Vinchin Backup and Recovery 6.5.0.17561. Authentication is not required to exploit this vulnerability. The specific flaw exists within the configuration of the MySQL server. The server uses a hard-coded password for the administrator user. An attacker can leverage this vulnerability to bypass authentication on the system. Was ZDI-CAN-17139.\n\n- CVE-2022-36610: TOTOLINK A720R V4.1.5cu.532_B20210610 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36611: TOTOLINK A800R V4.1.2cu.5137_B20200730 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36612: TOTOLINK A950RG V4.1.2cu.5204_B20210112 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36613: TOTOLINK N600R V4.3.0cu.7647_B20210106 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36614: TOTOLINK A860R V4.1.2cu.5182_B20201027 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36615: TOTOLINK A3000RU V4.1.2cu.5185_B20201128 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-36616: TOTOLINK A810R V4.1.2cu.5182_B20201026 and V5.9c.4050_B20190424 was discovered to contain a hardcoded password for root at /etc/shadow.sample.\n\n- CVE-2022-37841: In TOTOLINK A860R V4.1.2cu.5182_B20201027 there is a hard coded password for root in /etc/shadow.sample.\n\n- CVE-2022-37857: bilde2910 Hauk v1.6.1 requires a hardcoded password which by default is blank. This hardcoded password is hashed but stored within the config.php file server-side as well as in clear-text on the android client device by default.\n\n- CVE-2022-38823: In TOTOLINK T6 V4.1.5cu.709_B20210518, there is a hard coded password for root in /etc/shadow.sample.\n\n- CVE-2022-45444: Sewio\u2019s Real-Time Location System (RTLS) Studio version 2.0.0 up to and including version 2.6.2 contains hard-coded passwords for select users in the application\u2019s database. This could allow a remote attacker to login to the database with unrestricted access. \n\n- CVE-2022-36159: Contec FXA3200 version 1.13 and under were discovered to contain a hard coded hash password for root stored in the component /etc/shadow. As the password strength is weak, it can be cracked in few minutes. Through this credential, a malicious actor can access the Wireless LAN Manager interface and open the telnet port then sniff the traffic or inject any malware.\n\n- CVE-2022-41653: Daikin SVMPC1 version 2.1.22 and prior and SVMPC2 version 1.2.3 and prior are vulnerable to an attacker obtaining user login credentials and control the system.\n\n- CVE-2022-48067: An information disclosure vulnerability in Totolink A830R V4.1.2cu.5182 allows attackers to obtain the root password via a brute-force attack.\n\nRelated Weaknesses:\n\n- CWE-798 (ChildOf)\n\n- CWE-798 (ChildOf)\n\n- CWE-798 (ChildOf)\n\n- CWE-321 (PeerOf)\n\n- CWE-257 (PeerOf)",
        "type": "Variant",
        "source": "sparse",
        "search_source": "weakness:information disclosure vulnerability",
        "sources": [
          "base",
          "weakness"
        ],
        "boost_factor": 2.8,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          }
        }
      },
      {
        "cwe_id": "665",
        "name": "Improper Initialization",
        "description": "The product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.",
        "score": 133.041383215544,
        "matched_text": "CWE-665: Improper Initialization\n\nType: Class\n\nStatus: Draft\n\nDescription:\n\nThe product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.\n\nExtended Details:\n\nThis can have security implications when the associated resource is expected to have certain properties or values, such as a variable that determines whether a user has been authenticated or not.\n\nReal-World Examples:\n\n- CVE-2001-1471: chain: an invalid value prevents a library file from being included, skipping initialization of key variables, leading to resultant eval injection.\n\n- CVE-2008-3637: Improper error checking in protection mechanism produces an uninitialized variable, allowing security bypass and code execution.\n\n- CVE-2008-4197: Use of uninitialized memory may allow code execution.\n\n- CVE-2008-2934: Free of an uninitialized pointer leads to crash and possible code execution.\n\n- CVE-2007-3749: OS kernel does not reset a port when starting a setuid program, allowing local users to access the port and gain privileges.\n\n- CVE-2008-0063: Product does not clear memory contents when generating an error message, leading to information leak.\n\n- CVE-2008-0062: Lack of initialization triggers NULL pointer dereference or double-free.\n\n- CVE-2008-0081: Uninitialized variable leads to code execution in popular desktop application.\n\n- CVE-2008-3688: chain: Uninitialized variable leads to infinite loop.\n\n- CVE-2008-3475: chain: Improper initialization leads to memory corruption.\n\n- CVE-2008-5021: Composite: race condition allows attacker to modify an object while it is still being initialized, causing software to access uninitialized memory.\n\n- CVE-2005-1036: Chain: Bypass of access restrictions due to improper authorization (CWE-862) of a user results from an improperly initialized (CWE-909) I/O permission bitmap\n\n- CVE-2008-3597: chain: game server can access player data structures before initialization has happened leading to NULL dereference\n\n- CVE-2009-2692: chain: uninitialized function pointers can be dereferenced allowing code execution\n\n- CVE-2009-0949: chain: improper initialization of memory can lead to NULL dereference\n\n- CVE-2009-3620: chain: some unprivileged ioctls do not verify that a structure has been initialized before invocation, leading to NULL dereference\n\nTop 25 CWE Examples:\n\n- CVE-2021-0423: In memory management driver, there is a possible information disclosure due to uninitialized data. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: ALPS05403499; Issue ID: ALPS05385714.\n\n- CVE-2021-0435: In avrc_proc_vendor_command of avrc_api.cc, there is a possible leak of heap data due to uninitialized data. This could lead to remote information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-11 Android-8.1 Android-9 Android-10Android ID: A-174150451\n\n- CVE-2021-0449: In the Titan M chip firmware, there is a possible disclosure of stack memory due to uninitialized data. This could lead to local information disclosure with System execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-175117965\n\n- CVE-2021-0450: In the Titan M chip firmware, there is a possible disclosure of stack memory due to uninitialized data. This could lead to local information disclosure with System execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-175117880\n\n- CVE-2021-0451: In the Titan M chip firmware, there is a possible disclosure of stack memory due to uninitialized data. This could lead to local information disclosure with System execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-175117871\n\n- CVE-2021-0452: In the Titan M chip firmware, there is a possible disclosure of stack memory due to uninitialized data. This could lead to local information disclosure with System execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-175117261\n\n- CVE-2021-0453: In the Titan-M chip firmware, there is a possible disclosure of stack memory due to uninitialized data. This could lead to local information disclosure with System execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-175117199\n\n- CVE-2021-1820: A memory initialization issue was addressed with improved memory handling. This issue is fixed in macOS Big Sur 11.3, iOS 14.5 and iPadOS 14.5, watchOS 7.4, tvOS 14.5. Processing maliciously crafted web content may result in the disclosure of process memory.\n\n- CVE-2021-36319: Dell Networking OS10 versions 10.4.3.x, 10.5.0.x and 10.5.1.x contain an information exposure vulnerability. A low privileged authenticated malicious user can gain access to SNMP authentication failure messages.\n\n- CVE-2020-25578: In FreeBSD 12.2-STABLE before r368969, 11.4-STABLE before r369047, 12.2-RELEASE before p3, 12.1-RELEASE before p13 and 11.4-RELEASE before p7 several file systems were not properly initializing the d_off field of the dirent structures returned by VOP_READDIR. In particular, tmpfs(5), smbfs(5), autofs(5) and mqueuefs(5) were failing to do so. As a result, eight uninitialized kernel stack bytes may be leaked to userspace by these file systems.\n\n- CVE-2021-35995: Adobe After Effects version 18.2.1 (and earlier) is affected by an Improper input validation vulnerability when parsing a specially crafted file. An unauthenticated attacker could leverage this vulnerability to disclose arbitrary memory information in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file.\n\n- CVE-2021-36006: Adobe Photoshop versions 21.2.9 (and earlier) and 22.4.2 (and earlier) are affected by an Improper input validation vulnerability when parsing a specially crafted file. An unauthenticated attacker could leverage this vulnerability to disclose arbitrary memory information in the context of the current user. Exploitation of this issue requires user interaction in that a victim must open a malicious file.\n\n- CVE-2021-44492: An issue was discovered in YottaDB through r1.32 and V7.0-000 and FIS GT.M through V7.0-000. Using crafted input, attackers can cause a type to be incorrectly initialized in the function f_incr in sr_port/f_incr.c and cause a crash due to a NULL pointer dereference.\n\n- CVE-2021-44498: An issue was discovered in FIS GT.M through V7.0-000 (related to the YottaDB code base). Using crafted input, attackers can cause a type to be incorrectly initialized in the function f_incr in sr_port/f_incr.c and cause a crash due to a NULL pointer dereference.\n\n- CVE-2021-39636: In do_ipt_get_ctl and do_ipt_set_ctl of ip_tables.c, there is a possible way to leak kernel information due to uninitialized data. This could lead to local information disclosure with system execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android kernelAndroid ID: A-120612905References: Upstream kernel\n\n- CVE-2020-27950: A memory initialization issue was addressed. This issue is fixed in macOS Big Sur 11.0.1, watchOS 7.1, iOS 12.4.9, watchOS 6.2.9, Security Update 2020-006 High Sierra, Security Update 2020-006 Mojave, iOS 14.2 and iPadOS 14.2, watchOS 5.3.9, macOS Catalina 10.15.7 Supplemental Update, macOS Catalina 10.15.7 Update. A malicious application may be able to disclose kernel memory.\n\n- CVE-2021-38647: Open Management Infrastructure Remote Code Execution Vulnerability\n\n- CVE-2022-2620: Use after free in WebUI in Google Chrome on Chrome OS prior to 104.0.5112.79 allowed a remote attacker who convinced a user to engage in specific user interactions to potentially exploit heap corruption via specific UI interactions.\n\n- CVE-2022-2472: Improper Initialization vulnerability in the local server component of EZVIZ CS-C6N-A0-1C2WFR allows a local attacker to read the contents of the memory space containing the encrypted admin password. This issue affects: EZVIZ CS-C6N-A0-1C2WFR versions prior to 5.3.0 build 220428.\n\n- CVE-2022-29695: Unicorn Engine v2.0.0-rc7 contains memory leaks caused by an incomplete unicorn engine initialization.\n\n- CVE-2022-46505: An issue in MatrixSSL 4.5.1-open and earlier leads to failure to securely check the SessionID field, resulting in the misuse of an all-zero MasterSecret that can decrypt secret data.\n\nRelated Weaknesses:\n\n- CWE-664 (ChildOf)",
        "type": "Class",
        "source": "sparse",
        "search_source": "weakness:information disclosure vulnerability",
        "sources": [
          "base",
          "weakness"
        ],
        "boost_factor": 2.8,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Discouraged",
            "rationale": "This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate",
            "comments": "Examine children of this entry to see if there is a better fit",
            "reasons": [
              "Abstraction"
            ]
          }
        }
      },
      {
        "cwe_id": "459",
        "name": "Incomplete Cleanup",
        "description": "The product does not properly \"clean up\" and remove temporary or supporting resources after they have been used.",
        "score": 131.9423867804643,
        "matched_text": "CWE-459: Incomplete Cleanup\n\nType: Base\n\nStatus: Draft\n\nAlternative Terms:\n\nInsufficient Cleanup\n\nInsufficient Cleanup\n\nInsufficient Cleanup\n\nDescription:\n\nThe product does not properly \"clean up\" and remove temporary or supporting resources after they have been used.\n\nReal-World Examples:\n\n- CVE-2000-0552: World-readable temporary file not deleted after use.\n\n- CVE-2005-2293: Temporary file not deleted after use, leaking database usernames and passwords.\n\n- CVE-2002-0788: Interaction error creates a temporary file that can not be deleted due to strong permissions.\n\n- CVE-2002-2066: Alternate data streams for NTFS files are not cleared when files are wiped (alternate channel / infoleak).\n\n- CVE-2002-2067: Alternate data streams for NTFS files are not cleared when files are wiped (alternate channel / infoleak).\n\n- CVE-2002-2068: Alternate data streams for NTFS files are not cleared when files are wiped (alternate channel / infoleak).\n\n- CVE-2002-2069: Alternate data streams for NTFS files are not cleared when files are wiped (alternate channel / infoleak).\n\n- CVE-2002-2070: Alternate data streams for NTFS files are not cleared when files are wiped (alternate channel / infoleak).\n\n- CVE-2005-1744: Users not logged out when application is restarted after security-relevant changes were made.\n\nTop 25 CWE Examples:\n\n- CVE-2021-22428: There is an Incomplete Cleanup Vulnerability in Huawei Smartphone.Successful exploitation of this vulnerability may lead to authentication bypass.\n\n- CVE-2021-26833: Cleartext Storage in a File or on Disk in TimelyBills <= 1.7.0 for iOS and versions <= 1.21.115 for Android allows attacker who can locally read user's files obtain JWT tokens for user's account due to insufficient cache clearing mechanisms. A threat actor can obtain sensitive user data by decoding the tokens as JWT is signed and encoded, not encrypted.\n\n- CVE-2021-34421: The Keybase Client for Android before version 5.8.0 and the Keybase Client for iOS before version 5.8.0 fails to properly remove exploded messages initiated by a user if the receiving user places the chat session in the background while the sending user explodes the messages. This could lead to disclosure of sensitive information which was meant to be deleted from the customer's device.\n\n- CVE-2021-39327: The BulletProof Security WordPress plugin is vulnerable to sensitive information disclosure due to a file path disclosure in the publicly accessible ~/db_backup_log.txt file which grants attackers the full path of the site, in addition to the path of database backup files. This affects versions up to, and including, 5.1.\n\n- CVE-2021-45330: An issue exsits in Gitea through 1.15.7, which could let a malicious user gain privileges due to client side cookies not being deleted and the session remains valid on the server side for reuse.\n\n- CVE-2021-4147: A flaw was found in the libvirt libxl driver. A malicious guest could continuously reboot itself and cause libvirtd on the host to deadlock or crash, resulting in a denial of service condition.\n\n- CVE-2022-23035: Insufficient cleanup of passed-through device IRQs The management of IRQs associated with physical devices exposed to x86 HVM guests involves an iterative operation in particular when cleaning up after the guest's use of the device. In the case where an interrupt is not quiescent yet at the time this cleanup gets invoked, the cleanup attempt may be scheduled to be retried. When multiple interrupts are involved, this scheduling of a retry may get erroneously skipped. At the same time pointers may get cleared (resulting in a de-reference of NULL) and freed (resulting in a use-after-free), while other code would continue to assume them to be valid.\n\n- CVE-2022-1473: The OPENSSL_LH_flush() function, which empties a hash table, contains a bug that breaks reuse of the memory occuppied by the removed hash table entries. This function is used when decoding certificates or keys. If a long lived process periodically decodes certificates or keys its memory usage will expand without bounds and the process might be terminated by the operating system causing a denial of service. Also traversing the empty hash table entries will take increasingly more time. Typically such long lived processes might be TLS clients or TLS servers configured to accept client certificate authentication. The function was added in the OpenSSL 3.0 version thus older releases are not affected by the issue. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2).\n\n- CVE-2022-27639: Incomplete cleanup in some Intel(R) XMM(TM) 7560 Modem software before version M2_7560_R_01.2146.00 may allow a privileged user to potentially enable escalation of privilege via adjacent access.\n\n- CVE-2022-29160: Nextcloud Android is the Android client for Nextcloud, a self-hosted productivity platform. Prior to version 3.19.0, sensitive tokens, images, and user related details exist after deletion of a user account. This could result in misuse of the former account holder's information. Nextcloud Android version 3.19.0 contains a patch for this issue. There are no known workarounds available.\n\n- CVE-2022-25664: Information disclosure due to exposure of information while GPU reads the data in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Wearables\n\nRelated Weaknesses:\n\n- CWE-404 (ChildOf)\n\n- CWE-404 (ChildOf)",
        "type": "Base",
        "source": "sparse",
        "search_source": "weakness:information disclosure vulnerability",
        "sources": [
          "base",
          "weakness"
        ],
        "boost_factor": 2.8,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          }
        }
      },
      {
        "cwe_id": "204",
        "name": "Observable Response Discrepancy",
        "description": "The product provides different responses to incoming requests in a way that reveals internal state information to an unauthorized actor outside of the intended control sphere.",
        "score": 131.760667517767,
        "matched_text": "CWE-204: Observable Response Discrepancy\n\nType: Base\n\nStatus: Incomplete\n\nDescription:\n\nThe product provides different responses to incoming requests in a way that reveals internal state information to an unauthorized actor outside of the intended control sphere.\n\nExtended Details:\n\nThis issue frequently occurs during authentication, where a difference in failed-login messages could allow an attacker to determine if the username is valid or not. These exposures can be inadvertent (bug) or intentional (design).\n\nReal-World Examples:\n\n- CVE-2002-2094: This, and others, use \"..\" attacks and monitor error responses, so there is overlap with directory traversal.\n\n- CVE-2001-1483: Enumeration of valid usernames based on inconsistent responses\n\n- CVE-2001-1528: Account number enumeration via inconsistent responses.\n\n- CVE-2004-2150: User enumeration via discrepancies in error messages.\n\n- CVE-2005-1650: User enumeration via discrepancies in error messages.\n\n- CVE-2004-0294: Bulletin Board displays different error messages when a user exists or not, which makes it easier for remote attackers to identify valid users and conduct a brute force password guessing attack.\n\n- CVE-2004-0243: Operating System, when direct remote login is disabled, displays a different message if the password is correct, which allows remote attackers to guess the password via brute force methods.\n\n- CVE-2002-0514: Product allows remote attackers to determine if a port is being filtered because the response packet TTL is different than the default TTL.\n\n- CVE-2002-0515: Product sets a different TTL when a port is being filtered than when it is not being filtered, which allows remote attackers to identify filtered ports by comparing TTLs.\n\n- CVE-2001-1387: Product may generate different responses than specified by the administrator, possibly leading to an information leak.\n\n- CVE-2004-0778: Version control system allows remote attackers to determine the existence of arbitrary files and directories via the -X command for an alternate history file, which causes different error messages to be returned.\n\n- CVE-2004-1428: FTP server generates an error message if the user name does not exist instead of prompting for a password, which allows remote attackers to determine valid usernames.\n\nTop 25 CWE Examples:\n\n- CVE-2021-0086: Observable response discrepancy in floating-point operations for some Intel(R) Processors may allow an authorized user to potentially enable information disclosure via local access.\n\n- CVE-2021-0089: Observable response discrepancy in some Intel(R) Processors may allow an authorized user to potentially enable information disclosure via local access.\n\n- CVE-2021-20376: IBM Sterling File Gateway 2.2.0.0 through 6.1.1.0 could allow an authenticated attacker to enumerate usernames due to there being an observable discrepancy in returned messages. IBM X-Force ID: 195568.\n\n- CVE-2021-37151: CyberArk Identity 21.5.131, when handling an invalid authentication attempt, sometimes reveals whether the username is valid. In certain authentication policy configurations with MFA, the API response length can be used to differentiate between a valid user and an invalid one (aka Username Enumeration). Response differentiation enables attackers to enumerate usernames of valid application users. Attackers can use this information to leverage brute-force and dictionary attacks in order to discover valid account information such as passwords.\n\n- CVE-2021-37968: Inappropriate implementation in Background Fetch API in Google Chrome prior to 94.0.4606.54 allowed a remote attacker to leak cross-origin data via a crafted HTML page.\n\n- CVE-2020-35518: When binding against a DN during authentication, the reply from 389-ds-base will be different whether the DN exists or not. This can be used by an unauthenticated attacker to check the existence of an entry in the LDAP database.\n\n- CVE-2021-27583: In Directus 8.x through 8.8.1, an attacker can discover whether a user is present in the database through the password reset feature. NOTE: This vulnerability only affects products that are no longer supported by the maintainer\n\n- CVE-2021-22892: An information disclosure vulnerability exists in the Rocket.Chat server fixed v3.13, v3.12.2 & v3.11.3 that allowed email addresses to be disclosed by enumeration and validation checks.\n\n- CVE-2021-44848: In Cibele Thinfinity VirtualUI before 3.0, /changePassword returns different responses for invalid authentication requests depending on whether the username exists.\n\n- CVE-2021-20049: A vulnerability in SonicWall SMA100 password change API allows a remote unauthenticated attacker to perform SMA100 username enumeration based on the server responses. This vulnerability impacts 10.2.1.2-24sv, 10.2.0.8-37sv and earlier 10.x versions.\n\n- CVE-2022-24784: Statamic is a Laravel and Git powered CMS. Before versions 3.2.39 and 3.3.2, it is possible to confirm a single character of a user's password hash using a specially crafted regular expression filter in the users endpoint of the REST API. Multiple such requests can eventually uncover the entire hash. The hash is not present in the response, however the presence or absence of a result confirms if the character is in the right position. The API has throttling enabled by default, making this a time intensive task. Both the REST API and the users endpoint need to be enabled, as they are disabled by default. The issue has been fixed in versions 3.2.39 and above, and 3.3.2 and above.\n\n- CVE-2021-20147: ManageEngine ADSelfService Plus below build 6116 contains an observable response discrepancy in the UMCP operation of the ChangePasswordAPI. This allows an unauthenticated remote attacker to determine whether a Windows domain user exists.\n\n- CVE-2021-38009: Inappropriate implementation in cache in Google Chrome prior to 96.0.4664.45 allowed a remote attacker to leak cross-origin data via a crafted HTML page.\n\n- CVE-2022-1139: Inappropriate implementation in Background Fetch API in Google Chrome prior to 100.0.4896.60 allowed a remote attacker to leak cross-origin data via a crafted HTML page.\n\n- CVE-2022-27814: SWHKD 1.1.5 allows arbitrary file-existence tests via the -c option.\n\n- CVE-2022-47952: lxc-user-nic in lxc through 5.0.1 is installed setuid root, and may allow local users to infer whether any file exists, even within a protected directory tree, because \"Failed to open\" often indicates that a file does not exist, whereas \"does not refer to a network namespace path\" often indicates that a file exists. NOTE: this is different from CVE-2018-6556 because the CVE-2018-6556 fix design was based on the premise that \"we will report back to the user that the open() failed but the user has no way of knowing why it failed\"; however, in many realistic cases, there are no plausible reasons for failing except that the file does not exist.\n\n- CVE-2022-24032: Adenza AxiomSL ControllerView through 10.8.1 is vulnerable to user enumeration. An attacker can identify valid usernames on the platform because a failed login attempt produces a different error message when the username is valid.\n\n- CVE-2022-0569: Observable Discrepancy in Packagist snipe/snipe-it prior to v5.3.9. \n\nRelated Weaknesses:\n\n- CWE-203 (ChildOf)",
        "type": "Base",
        "source": "sparse",
        "search_source": "weakness:information disclosure vulnerability",
        "sources": [
          "base",
          "weakness"
        ],
        "boost_factor": 2.8,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          }
        }
      },
      {
        "cwe_id": "319",
        "name": "Cleartext Transmission of Sensitive Information",
        "description": "The product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.",
        "score": 131.10727641882448,
        "matched_text": "CWE-319: Cleartext Transmission of Sensitive Information\n\nType: Base\n\nStatus: Draft\n\nDescription:\n\nThe product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.\n\nExtended Details:\n\n\n\nMany communication channels can be \"sniffed\" (monitored) by adversaries during data transmission. For example, in networking, packets can traverse many intermediary nodes from the source to the destination, whether across the internet, an internal network, the cloud, etc. Some actors might have privileged access to a network interface or any link along the channel, such as a router, but they might not be authorized to collect the underlying data. As a result, network traffic could be sniffed by adversaries, spilling security-critical data.\n\n\nApplicable communication channels are not limited to software products. Applicable channels include hardware-specific technologies such as internal hardware networks and external debug channels, supporting remote JTAG debugging. When mitigations are not applied to combat adversaries within the product's threat model, this weakness significantly lowers the difficulty of exploitation by such adversaries.\n\n\nWhen full communications are recorded or logged, such as with a packet dump, an adversary could attempt to obtain the dump long after the transmission has occurred and try to \"sniff\" the cleartext from the recorded communications in the dump itself. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information. \n\n\nReal-World Examples:\n\n- CVE-2022-29519: Programmable Logic Controller (PLC) sends sensitive information in plaintext, including passwords and session tokens.\n\n- CVE-2022-30312: Building Controller uses a protocol that transmits authentication credentials in plaintext.\n\n- CVE-2022-31204: Programmable Logic Controller (PLC) sends password in plaintext.\n\n- CVE-2002-1949: Passwords transmitted in cleartext.\n\n- CVE-2008-4122: Chain: Use of HTTPS cookie without \"secure\" flag causes it to be transmitted across unencrypted HTTP.\n\n- CVE-2008-3289: Product sends password hash in cleartext in violation of intended policy.\n\n- CVE-2008-4390: Remote management feature sends sensitive information including passwords in cleartext.\n\n- CVE-2007-5626: Backup routine sends password in cleartext in email.\n\n- CVE-2004-1852: Product transmits Blowfish encryption key in cleartext.\n\n- CVE-2008-0374: Printer sends configuration information, including administrative password, in cleartext.\n\n- CVE-2007-4961: Chain: cleartext transmission of the MD5 hash of password enables attacks against a server that is susceptible to replay (CWE-294).\n\n- CVE-2007-4786: Product sends passwords in cleartext to a log server.\n\n- CVE-2005-3140: Product sends file with cleartext passwords in e-mail message intended for diagnostic purposes.\n\nTop 25 CWE Examples:\n\n- CVE-2021-38142: Barco MirrorOp Windows Sender before 2.5.3.65 uses cleartext HTTP and thus allows rogue software upgrades. An attacker on the local network can achieve remote code execution on any computer that tries to update Windows Sender due to the fact that the upgrade mechanism is not secured (is not protected with TLS).\n\n- CVE-2020-12730: MagicMotion Flamingo 2 lacks BLE encryption, enabling data sniffing and packet forgery.\n\n- CVE-2020-26197: Dell PowerScale OneFS 8.1.0 - 9.1.0 contains an LDAP Provider inability to connect over TLSv1.2 vulnerability. It may make it easier to eavesdrop and decrypt such traffic for a malicious actor. Note: This does not affect clusters which are not relying on an LDAP server for the authentication provider.\n\n- CVE-2020-27184: The NPort IA5000A Series devices use Telnet as one of the network device management services. Telnet does not support the encryption of client-server communications, making it vulnerable to Man-in-the-Middle attacks.\n\n- CVE-2020-4980: IBM QRadar SIEM 7.3 and 7.4 uses less secure methods for protecting data in transit between hosts when encrypt host connections is not enabled as well as data at rest. IBM X-Force ID: 192539.\n\n- CVE-2021-27574: An issue was discovered in Emote Remote Mouse through 4.0.0.0. It uses cleartext HTTP to check, and request, updates. Thus, attackers can machine-in-the-middle a victim to download a malicious binary in place of the real update, with no SSL errors or warnings.\n\n- CVE-2021-36382: Devolutions Server before 2021.1.18, and LTS before 2020.3.20, allows attackers to intercept private keys via a man-in-the-middle attack against the connections/partial endpoint (which accepts cleartext).\n\n- CVE-2021-39272: Fetchmail before 6.4.22 fails to enforce STARTTLS session encryption in some circumstances, such as a certain situation with IMAP and PREAUTH.\n\n- CVE-2021-40366: A vulnerability has been identified in Climatix POL909 (AWB module) (All versions < V11.42), Climatix POL909 (AWM module) (All versions < V11.34). The web server of affected devices transmits data without TLS encryption. This could allow an unauthenticated remote attacker in a man-in-the-middle position to read sensitive data, such as administrator credentials, or modify data in transit.\n\n- CVE-2021-44518: An issue was discovered in the eGeeTouch 3rd Generation Travel Padlock application for Android. The lock sends a pairing code before each operation (lock or unlock) activated via the companion app. The code is sent unencrypted, allowing any attacker with the same app (either Android or iOS) to add the lock and take complete control. For successful exploitation, the attacker must be able to touch the lock's power button, and must be able to capture BLE network communication.\n\n- CVE-2021-33900: While investigating DIRSTUDIO-1219 it was noticed that configured StartTLS encryption was not applied when any SASL authentication mechanism (DIGEST-MD5, GSSAPI) was used. While investigating DIRSTUDIO-1220 it was noticed that any configured SASL confidentiality layer was not applied. This issue affects Apache Directory Studio version 2.0.0.v20210213-M16 and prior versions.\n\n- CVE-2021-27569: An issue was discovered in Emote Remote Mouse through 4.0.0.0. Attackers can maximize or minimize the window of a running process by sending the process name in a crafted packet. This information is sent in cleartext and is not protected by any authentication logic.\n\n- CVE-2021-34825: Quassel through 0.13.1, when --require-ssl is enabled, launches without SSL or TLS support if a usable X.509 certificate is not found on the local system.\n\n- CVE-2021-3774: Meross Smart Wi-Fi 2 Way Wall Switch (MSS550X), on its 3.1.3 version and before, creates an open Wi-Fi Access Point without the required security measures in its initial setup. This could allow a remote attacker to obtain the Wi-Fi SSID as well as the password configured by the user from Meross app via Http/JSON plain request.\n\n- CVE-2021-44480: Wokka Lokka Q50 devices through 2021-11-30 allow remote attackers (who know the SIM phone number and password) to listen to a device's surroundings via a callback in an SMS command, as demonstrated by the 123456 and 523681 default passwords.\n\n- CVE-2021-38370: In Alpine before 2.25, untagged responses from an IMAP server are accepted before STARTTLS.\n\n- CVE-2021-38372: In KDE Trojita 0.7, man-in-the-middle attackers can create new folders because untagged responses from an IMAP server are accepted before STARTTLS.\n\n- CVE-2021-38373: In KDE KMail 19.12.3 (aka 5.13.3), the SMTP STARTTLS option is not honored (and cleartext messages are sent) unless \"Server requires authentication\" is checked.\n\n- CVE-2021-20623: Video Insight VMS versions prior to 7.8 allows a remote attacker to execute arbitrary code with the system user privilege by sending a specially crafted request.\n\n- CVE-2021-38978: IBM Tivoli Key Lifecycle Manager 3.0, 3.0.1, 4.0, and 4.1 could allow a remote attacker to obtain sensitive information, caused by the failure to properly enable HTTP Strict Transport Security. An attacker could exploit this vulnerability to obtain sensitive information using man in the middle techniques. IBM X-Force ID: 212783.\n\n- CVE-2021-20409: IBM Security Verify Information Queue 1.0.6 and 1.0.7 could allow a remote attacker to obtain sensitive information, caused by the failure to properly enable HTTP Strict Transport Security. An attacker could exploit this vulnerability to obtain sensitive information using man in the middle techniques. IBM X-Force ID: 196188. \n\n- CVE-2021-20564: IBM Cloud Pak for Security (CP4S) 1.4.0.0, 1.5.0.0, 1.5.0.1, 1.6.0.0, and 1.6.0.1 could allow a remote attacker to obtain sensitive information, caused by the failure to properly enable HTTP Strict Transport Security. An attacker could exploit this vulnerability to obtain sensitive information using man in the middle techniques. IBM X-Force ID: 199235.\n\n- CVE-2021-45735: TOTOLINK X5000R v9.1.0u.6118_B20201102 was discovered to use the HTTP protocol for authentication into the admin interface, allowing attackers to intercept user credentials via packet capture software.\n\n- CVE-2021-21963: An information disclosure vulnerability exists in the Web Server functionality of Sealevel Systems, Inc. SeaConnect 370W v1.3.34. A specially-crafted man-in-the-middle attack can lead to a disclosure of sensitive information. An attacker can perform a man-in-the-middle attack to trigger this vulnerability.\n\n- CVE-2021-45104: An issue was discovered in HTCondor 9.0.x before 9.0.10 and 9.1.x before 9.5.1. An attacker who can capture HTCondor network data can interfere with users' jobs and data.\n\n- CVE-2021-27422: GE UR firmware versions prior to version 8.1x web server interface is supported on UR over HTTP protocol. It allows sensitive information exposure without authentication.\n\n- CVE-2021-29838: IBM Security Guardium Insights 3.0 could allow a remote attacker to obtain sensitive information, caused by the failure to properly enable HTTP Strict Transport Security. An attacker could exploit this vulnerability to obtain sensitive information using man in the middle techniques.\n\n- CVE-2021-39026: IBM Guardium Data Encryption (GDE) 5.0.0.2 and 5.0.0.3 could allow a remote attacker to obtain sensitive information, caused by the failure to properly enable HTTP Strict Transport Security. An attacker could exploit this vulnerability to obtain sensitive information using man in the middle techniques. IBM X-Force ID: 213964.\n\n- CVE-2020-27373: Dr Trust USA iCheck Connect BP Monitor BP Testing 118 1.2.1 is vulnerable to Plain text command over BLE.\n\n- CVE-2020-4970: IBM Security Identity Governance and Intelligence 5.2.4, 5.2.5, and 5.2.6 could allow a remote attacker to obtain sensitive information, caused by the failure to properly enable HTTP Strict Transport Security. An attacker could exploit this vulnerability to obtain sensitive information using man in the middle techniques. IBM X-Force ID: 192429.\n\n- CVE-2022-23509: Weave GitOps is a simple open source developer platform for people who want cloud native applications, without needing Kubernetes expertise. GitOps run has a local S3 bucket which it uses for synchronizing files that are later applied against a Kubernetes cluster. The communication between GitOps Run and the local S3 bucket is not encrypted. This allows privileged users or process to tap the local traffic to gain information permitting access to the s3 bucket. From that point, it would be possible to alter the bucket content, resulting in changes in the Kubernetes cluster's resources. There are no known workaround(s) for this vulnerability. This vulnerability has been fixed by commits ce2bbff and babd915. Users should upgrade to Weave GitOps version >= v0.12.0 released on 08/12/2022. \n\n- CVE-2022-39287: tiny-csrf is a Node.js cross site request forgery (CSRF) protection middleware. In versions prior to 1.1.0 cookies were not encrypted and thus CSRF tokens were transmitted in the clear. This issue has been addressed in commit `8eead6d` and the patch with be included in version 1.1.0. Users are advised to upgrade. There are no known workarounds for this issue.\n\n- CVE-2021-1896: Weak configuration in WLAN could cause forwarding of unencrypted packets from one client to another in Snapdragon Compute, Snapdragon Connectivity\n\n- CVE-2021-35246: The application fails to prevent users from connecting to it over unencrypted connections. An attacker able to modify a legitimate user's network traffic could bypass the application's use of SSL/TLS encryption and use the application as a platform for attacks against its users.\n\n- CVE-2021-40148: In Modem EMM, there is a possible information disclosure due to a missing data encryption. This could lead to remote information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation. Patch ID: MOLY00716585; Issue ID: ALPS05886933.\n\n- CVE-2021-4161: The affected products contain vulnerable firmware, which could allow an attacker to sniff the traffic and decrypt login credential details. This could give an attacker admin rights through the HTTP web server.\n\n- CVE-2021-41849: An issue was discovered in Luna Simo PPR1.180610.011/202001031830. It sends the following Personally Identifiable Information (PII) in plaintext using HTTP to servers located in China: user's list of installed apps and device International Mobile Equipment Identity (IMEI). This PII is transmitted to log.skyroam.com.cn using HTTP, independent of whether the user uses the Simo software.\n\n- CVE-2021-43270: Datalust Seq.App.EmailPlus (aka seq-app-htmlemail) 3.1.0-dev-00148, 3.1.0-dev-00170, and 3.1.0-dev-00176 can use cleartext SMTP on port 25 in some cases where encryption on port 465 was intended.\n\n- CVE-2022-1524: LRM version 2.4 and lower does not implement TLS encryption. A malicious actor can MITM attack sensitive data in-transit, including credentials.\n\n- CVE-2022-21951: A Cleartext Transmission of Sensitive Information vulnerability in SUSE Rancher, Rancher allows attackers on the network to read and change network data due to missing encryption of data transmitted via the network when a cluster is created from an RKE template with the CNI value overridden This issue affects: SUSE Rancher Rancher versions prior to 2.5.14; Rancher versions prior to 2.6.5. \n\n- CVE-2022-2338: Softing Secure Integration Server V1.22 is vulnerable to authentication bypass via a machine-in-the-middle attack. The default the administration interface is accessible via plaintext HTTP protocol, facilitating the attack. The HTTP request may contain the session cookie in the request, which may be captured for use in authenticating to the server.\n\n- CVE-2022-32227: A cleartext transmission of sensitive information exists in Rocket.Chat <v5, <v4.8.2 and <v4.7.5 relating to Oauth tokens by having the permission \"view-full-other-user-info\", this could cause an oauth token leak in the product.\n\n- CVE-2022-41627:  The physical IoT device of the AliveCor's KardiaMobile, a smartphone-based personal electrocardiogram (EKG) has no encryption for its data-over-sound protocols. Exploiting this vulnerability could allow an attacker to read patient EKG results or create a denial-of-service condition by emitting sounds at similar frequencies as the device, disrupting the smartphone microphone\u2019s ability to accurately read the data. To carry out this attack, the attacker must be close (less than 5 feet) to pick up and emit sound waves. \n\n- CVE-2022-41983: On specific hardware platforms, on BIG-IP versions 16.1.x before 16.1.3.1, 15.1.x before 15.1.7, 14.1.x before 14.1.5.1, and all versions of 13.1.x, while Intel QAT (QuickAssist Technology) and the AES-GCM/CCM cipher is in use, undisclosed conditions can cause BIG-IP to send data unencrypted even with an SSL Profile applied.\n\n- CVE-2022-45877: OpenHarmony-v3.1.4 and prior versions had an vulnerability. PIN code is transmitted to the peer device in plain text during cross-device authentication, which reduces the difficulty of man-in-the-middle attacks.\n\n- CVE-2022-0005: Sensitive information accessible by physical probing of JTAG interface for some Intel(R) Processors with SGX may allow an unprivileged user to potentially enable information disclosure via physical access.\n\n- CVE-2021-22923: When curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened.\n\n- CVE-2022-23223: On Apache ShenYu versions 2.4.0 and 2.4.1, and endpoint existed that disclosed the passwords of all users. Users are recommended to upgrade to version 2.4.2 or later.\n\n- CVE-2022-24978: Zoho ManageEngine ADAudit Plus before 7055 allows authenticated Privilege Escalation on Integrated products. This occurs because a password field is present in a JSON response.\n\n- CVE-2022-25180: Jenkins Pipeline: Groovy Plugin 2648.va9433432b33c and earlier includes password parameters from the original build in replayed builds, allowing attackers with Run/Replay permission to obtain the values of password parameters passed to previous builds of a Pipeline.\n\n- CVE-2022-47714: Last Yard 22.09.8-1 does not enforce HSTS headers\n\n- CVE-2022-0553: There is no check to see if slot 0 is being uploaded from the device to the host. When using encrypted images this means the unencrypted firmware can be retrieved easily.\n\n- CVE-2022-29945: DJI drone devices sold in 2017 through 2022 broadcast unencrypted information about the drone operator's physical location via the AeroScope protocol.\n\n- CVE-2021-31898: In JetBrains WebStorm before 2021.1, HTTP requests were used instead of HTTPS.\n\n- CVE-2022-2083: The Simple Single Sign On WordPress plugin through 4.1.0 leaks its OAuth client_secret, which could be used by attackers to gain unauthorized access to the site.\n\n- CVE-2021-45081: An issue was discovered in Cobbler through 3.3.1. Routines in several files use the HTTP protocol instead of the more secure HTTPS.\n\nRelated Weaknesses:\n\n- CWE-311 (ChildOf)\n\n- CWE-311 (ChildOf)",
        "type": "Base",
        "source": "sparse",
        "search_source": "weakness:information disclosure vulnerability",
        "sources": [
          "base",
          "weakness"
        ],
        "boost_factor": 2.8,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          }
        }
      },
      {
        "cwe_id": "426",
        "name": "Untrusted Search Path",
        "description": "The product searches for critical resources using an externally-supplied search path that can point to resources that are not under the product's direct control.",
        "score": 130.80256208677224,
        "matched_text": "CWE-426: Untrusted Search Path\n\nType: Base\n\nStatus: Stable\n\nAlternative Terms:\n\nUntrusted Path\n\nUntrusted Path\n\nUntrusted Path\n\nDescription:\n\nThe product searches for critical resources using an externally-supplied search path that can point to resources that are not under the product's direct control.\n\nExtended Details:\n\n\n\nThis might allow attackers to execute their own programs, access unauthorized data files, or modify configuration in unexpected ways. If the product uses a search path to locate critical resources such as programs, then an attacker could modify that search path to point to a malicious program, which the targeted product would then execute. The problem extends to any type of critical resource that the product trusts.\n\n\nSome of the most common variants of untrusted search path are:\n\n\n  - In various UNIX and Linux-based systems, the PATH environment variable may be consulted to locate executable programs, and LD_PRELOAD may be used to locate a separate library.\n\n  - In various Microsoft-based systems, the PATH environment variable is consulted to locate a DLL, if the DLL is not found in other paths that appear earlier in the search order.\n\n\n\nReal-World Examples:\n\n- CVE-1999-1120: Application relies on its PATH environment variable to find and execute program.\n\n- CVE-2008-1810: Database application relies on its PATH environment variable to find and execute program.\n\n- CVE-2007-2027: Chain: untrusted search path enabling resultant format string by loading malicious internationalization messages.\n\n- CVE-2008-3485: Untrusted search path using malicious .EXE in Windows environment.\n\n- CVE-2008-2613: setuid program allows compromise using path that finds and loads a malicious library.\n\n- CVE-2008-1319: Server allows client to specify the search path, which can be modified to point to a program that the client has uploaded.\n\nTop 25 CWE Examples:\n\n- CVE-2021-41387: seatd-launch in seatd 0.6.x before 0.6.2 allows privilege escalation because it uses execlp and may be installed setuid root.\n\n- CVE-2021-28249: CA eHealth Performance Manager through 6.3.2.12 is affected by Privilege Escalation via a Dynamically Linked Shared Object Library. To exploit the vulnerability, the ehealth user must create a malicious library in the writable RPATH, to be dynamically linked when the FtpCollector executable is run. The code in the library will be executed as the root user. NOTE: This vulnerability only affects products that are no longer supported by the maintainer\n\n- CVE-2022-22047: Windows Client Server Run-time Subsystem (CSRSS) Elevation of Privilege Vulnerability\n\n- CVE-2021-3305: Beijing Feishu Technology Co., Ltd Feishu v3.40.3 was discovered to contain an untrusted search path vulnerability.\n\n- CVE-2022-36403: Untrusted search path vulnerability in the installer of Device Software Manager prior to Ver.2.20.3.0 allows an attacker to gain privileges via a Trojan horse DLL in an unspecified directory.\n\n- CVE-2021-36666: An issue was discovered in Druva 6.9.0 for MacOS, allows attackers to gain escalated local privileges via the inSyncDecommission.\n\n- CVE-2022-38060: A privilege escalation vulnerability exists in the sudo functionality of OpenStack Kolla git master 05194e7618. A misconfiguration in /etc/sudoers within a container can lead to increased privileges.\n\n- CVE-2022-25366: Cryptomator through 1.6.5 allows DYLIB injection because, although it has the flag 0x1000 for Hardened Runtime, it has the com.apple.security.cs.disable-library-validation and com.apple.security.cs.allow-dyld-environment-variables entitlements. An attacker can exploit this by creating a malicious .dylib file that can be executed via the DYLD_INSERT_LIBRARIES environment variable.\n\n- CVE-2022-39245: Mist is the command-line interface for the makedeb Package Repository. Prior to version 0.9.5, a user-provided `sudo` binary via the `PATH` variable can allow a local user to run arbitrary commands on the user's system with root permissions. Versions 0.9.5 and later contain a patch. No known workarounds exist.\n\n- CVE-2021-21817: An information disclosure vulnerability exists in the Zebra IP Routing Manager functionality of D-LINK DIR-3040 1.13B03. A specially crafted network request can lead to the disclosure of sensitive information. An attacker can send a sequence of requests to trigger this vulnerability.\n\nRelated Weaknesses:\n\n- CWE-642 (ChildOf)\n\n- CWE-668 (ChildOf)\n\n- CWE-673 (ChildOf)\n\n- CWE-427 (PeerOf)\n\n- CWE-428 (PeerOf)",
        "type": "Base",
        "source": "sparse",
        "search_source": "weakness:information disclosure vulnerability",
        "sources": [
          "base",
          "weakness"
        ],
        "boost_factor": 2.8,
        "boosted": true,
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          }
        }
      },
      {
        "cwe_id": "312",
        "name": "Cleartext Storage of Sensitive Information",
        "description": "The product stores sensitive information in cleartext within a resource that might be accessible to another control sphere.",
        "score": 43.23301851672306,
        "matched_text": "CWE-312: Cleartext Storage of Sensitive Information\n\nType: Base\n\nStatus: Draft\n\nDescription:\n\nThe product stores sensitive information in cleartext within a resource that might be accessible to another control sphere.\n\nExtended Details:\n\n\n\nBecause the information is stored in cleartext (i.e., unencrypted), attackers could potentially read it. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information.\n\n\nWhen organizations adopt cloud services, it can be easier for attackers to access the data from anywhere on the Internet.\n\n\nIn some systems/environments such as cloud, the use of \"double encryption\" (at both the software and hardware layer) might be required, and the developer might be solely responsible for both layers, instead of shared responsibility with the administrator of the broader system/environment.\n\n\nReal-World Examples:\n\n- CVE-2022-30275: Remote Terminal Unit (RTU) uses a driver that relies on a password stored in plaintext.\n\n- CVE-2009-2272: password and username stored in cleartext in a cookie\n\n- CVE-2009-1466: password stored in cleartext in a file with insecure permissions\n\n- CVE-2009-0152: chat program disables SSL in some circumstances even when the user says to use SSL.\n\n- CVE-2009-1603: Chain: product uses an incorrect public exponent when generating an RSA key, which effectively disables the encryption\n\n- CVE-2009-0964: storage of unencrypted passwords in a database\n\n- CVE-2008-6157: storage of unencrypted passwords in a database\n\n- CVE-2008-6828: product stores a password in cleartext in memory\n\n- CVE-2008-1567: storage of a secret key in cleartext in a temporary file\n\n- CVE-2008-0174: SCADA product uses HTTP Basic Authentication, which is not encrypted\n\n- CVE-2007-5778: login credentials stored unencrypted in a registry key\n\n- CVE-2001-1481: Plaintext credentials in world-readable file.\n\n- CVE-2005-1828: Password in cleartext in config file.\n\n- CVE-2005-2209: Password in cleartext in config file.\n\n- CVE-2002-1696: Decrypted copy of a message written to disk given a combination of options and when user replies to an encrypted message.\n\n- CVE-2004-2397: Plaintext storage of private key and passphrase in log file when user imports the key.\n\n- CVE-2002-1800: Admin password in plaintext in a cookie.\n\n- CVE-2001-1537: Default configuration has cleartext usernames/passwords in cookie.\n\n- CVE-2001-1536: Usernames/passwords in cleartext in cookies.\n\n- CVE-2005-2160: Authentication information stored in cleartext in a cookie.\n\nTop 25 CWE Examples:\n\n- CVE-2021-21339: TYPO3 is an open source PHP based web content management system. In TYPO3 before versions 6.2.57, 7.6.51, 8.7.40, 9.5.25, 10.4.14, 11.1.1 user session identifiers were stored in cleartext - without processing of additional cryptographic hashing algorithms. This vulnerability cannot be exploited directly and occurs in combination with a chained attack - like for instance SQL injection in any other component of the system. This is fixed in versions 6.2.57, 7.6.51, 8.7.40, 9.5.25, 10.4.14, 11.1.1.\n\n- CVE-2021-29481: Ratpack is a toolkit for creating web applications. In versions prior to 1.9.0, the default configuration of client side sessions results in unencrypted, but signed, data being set as cookie values. This means that if something sensitive goes into the session, it could be read by something with access to the cookies. For this to be a vulnerability, some kind of sensitive data would need to be stored in the session and the session cookie would have to leak. For example, the cookies are not configured with httpOnly and an adjacent XSS vulnerability within the site allowed capture of the cookies. As of version 1.9.0, a securely randomly generated signing key is used. As a workaround, one may supply an encryption key, as per the documentation recommendation.\n\n- CVE-2021-31855: KDE Messagelib through 5.17.0 reveals cleartext of encrypted messages in some situations. Deleting an attachment of a decrypted encrypted message stored on a remote server (e.g., an IMAP server) causes KMail to upload the decrypted content of the message to the remote server. With a crafted message, a user could be tricked into decrypting an encrypted message and then deleting an attachment attached to this message. If the attacker has access to the messages stored on the email server, then the attacker could read the decrypted content of the encrypted message. This occurs in ViewerPrivate::deleteAttachment in messageviewer/src/viewer/viewer_p.cpp.\n\n- CVE-2021-36165: RICON Industrial Cellular Router S9922L 16.10.3(3794) is affected by cleartext storage of sensitive information and sends username and password as base64.\n\n- CVE-2021-35526: Backup file without encryption vulnerability is found in Hitachi ABB Power Grids System Data Manager \u2013 SDM600 allows attacker to gain access to sensitive information. This issue affects: Hitachi ABB Power Grids System Data Manager \u2013 SDM600 1.2 versions prior to FP2 HF6 (Build Nr. 1.2.14002.257).\n\n- CVE-2021-41302: ECOA BAS controller stores sensitive data (backup exports) in clear-text, thus the unauthenticated attacker can remotely query user password and obtain user\u2019s privilege.\n\n- CVE-2021-45077: Netgear Nighthawk R6700 version 1.0.4.120 stores sensitive information in plaintext. All usernames and passwords for the device's associated services are stored in plaintext on the device. For example, the admin password is stored in plaintext in the primary configuration file on the device.\n\n- CVE-2022-26390: The Baxter Spectrum Wireless Battery Module (WBM) stores network credentials and PHI (only applicable to Spectrum IQ pumps using auto programming) in unencrypted form. An attacker with physical access to a device that hasn't had all data and settings erased may be able to extract sensitive information.\n\n- CVE-2022-22069: Devices with keyprotect off may store unencrypted keybox in RPMB and cause cryptographic issue in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Wearables\n\n- CVE-2022-27549: HCL Launch may store certain data for recurring activities in a plain text format.\n\n- CVE-2022-20219: In multiple functions of StorageManagerService.java and UserManagerService.java, there is a possible way to leave user's directories unencrypted due to a logic error in the code. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10 Android-11 Android-12 Android-12LAndroid ID: A-224585613\n\n- CVE-2022-29959: Emerson OpenBSI through 2022-04-29 mishandles credential storage. It is an engineering environment for the ControlWave and Bristol Babcock line of RTUs. This environment provides access control functionality through user authentication and privilege management. The credentials for various users are stored insecurely in the SecUsers.ini file by using a simple string transformation rather than a cryptographic mechanism.\n\nRelated Weaknesses:\n\n- CWE-311 (ChildOf)\n\n- CWE-311 (ChildOf)\n\n- CWE-922 (ChildOf)",
        "type": "Base",
        "search_source": "base_query",
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          }
        }
      },
      {
        "cwe_id": "611",
        "name": "Improper Restriction of XML External Entity Reference",
        "description": "The product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",
        "score": 43.04141683322095,
        "matched_text": "CWE-611: Improper Restriction of XML External Entity Reference\n\nType: Base\n\nStatus: Draft\n\nAlternative Terms:\n\nXXE - An acronym used for the term \"XML eXternal Entities\"\n\nXXE - An acronym used for the term \"XML eXternal Entities\"\n\nXXE - An acronym used for the term \"XML eXternal Entities\"\n\nDescription:\n\nThe product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.\n\nExtended Details:\n\n\n\nXML documents optionally contain a Document Type Definition (DTD), which, among other features, enables the definition of XML entities. It is possible to define an entity by providing a substitution string in the form of a URI. The XML parser can access the contents of this URI and embed these contents back into the XML document for further processing.\n\n\nBy submitting an XML file that defines an external entity with a file:// URI, an attacker can cause the processing application to read the contents of a local file. For example, a URI such as \"file:///c:/winnt/win.ini\" designates (in Windows) the file C:\\Winnt\\win.ini, or file:///etc/passwd designates the password file in Unix-based systems. Using URIs with other schemes such as http://, the attacker can force the application to make outgoing requests to servers that the attacker cannot reach directly, which can be used to bypass firewall restrictions or hide the source of attacks such as port scanning.\n\n\nOnce the content of the URI is read, it is fed back into the application that is processing the XML. This application may echo back the data (e.g. in an error message), thereby exposing the file contents.\n\n\nReal-World Examples:\n\n- CVE-2022-42745: Recruiter software allows reading arbitrary files using XXE\n\n- CVE-2005-1306: A browser control can allow remote attackers to determine the existence of files via Javascript containing XML script.\n\n- CVE-2012-5656: XXE during SVG image conversion\n\n- CVE-2012-2239: XXE in PHP application allows reading the application's configuration file.\n\n- CVE-2012-3489: XXE in database server\n\n- CVE-2012-4399: XXE in rapid web application development framework allows reading arbitrary files.\n\n- CVE-2012-3363: XXE via XML-RPC request.\n\n- CVE-2012-0037: XXE in office document product using RDF.\n\n- CVE-2011-4107: XXE in web-based administration tool for database.\n\n- CVE-2010-3322: XXE in product that performs large-scale data analysis.\n\n- CVE-2009-1699: XXE in XSL stylesheet functionality in a common library used by some web browsers.\n\nTop 25 CWE Examples:\n\n- CVE-2020-25817: SilverStripe through 4.6.0-rc1 has an XXE Vulnerability in CSSContentParser. A developer utility meant for parsing HTML within unit tests can be vulnerable to XML External Entity (XXE) attacks. When this developer utility is misused for purposes involving external or user submitted data in custom project code, it can lead to vulnerabilities such as XSS on HTML output rendered through this custom code. This is now mitigated by disabling external entities during parsing. (The correct CVE ID year is 2020 [CVE-2020-25817, not CVE-2021-25817]).\n\n- CVE-2021-20453: IBM WebSphere Application Server 8.0, 8.5, and 9.0 is vulnerable to a XML External Entity Injection (XXE) attack when processing XML data. A remote attacker could exploit this vulnerability to expose sensitive information or consume memory resources. IBM X-Force ID: 196648.\n\n- CVE-2021-22158: The Proofpoint Insider Threat Management Server (formerly ObserveIT Server) is vulnerable to XML external entity (XXE) injection in the Web Console. The vulnerability requires admin user privileges and knowledge of the XML file's encryption key to successfully exploit. All versions before 7.11 are affected.\n\n- CVE-2021-28973: The XML Import functionality of the Administration console in Perforce Helix ALM 2020.3.1 Build 22 accepts XML input data that is parsed by insecurely configured software components, leading to XXE attacks.\n\n- CVE-2021-30137: Assyst 10 SP7.5 has authenticated XXE leading to SSRF via XML unmarshalling. The application allows users to send JSON or XML data to the server. It was possible to inject malicious XML data through several access points.\n\n- CVE-2021-34706: A vulnerability in the web-based management interface of Cisco Identity Services Engine (ISE) could allow an authenticated, remote attacker to access sensitive information or conduct a server-side request forgery (SSRF) attack through an affected device. This vulnerability is due to improper handling of XML External Entity (XXE) entries when parsing certain XML files. An attacker could exploit this vulnerability by uploading a crafted XML file that contains references to external entities. A successful exploit could allow the attacker to retrieve files from the local system, resulting in the disclosure of sensitive information, or cause the web application to perform arbitrary HTTP requests on behalf of the attacker.\n\n- CVE-2021-38948: IBM InfoSphere Information Server 11.7 is vulnerable to an XML External Entity Injection (XXE) attack when processing XML data. A remote attacker could exploit this vulnerability to expose sensitive information or consume memory resources. IBM X-Force ID: 211402.\n\n- CVE-2021-2401: Vulnerability in the Oracle BI Publisher product of Oracle Fusion Middleware (component: E-Business Suite - XDO). Supported versions that are affected are 5.5.0.0.0, 11.1.1.9.0, 12.2.1.3.0 and 12.2.1.4.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Oracle BI Publisher. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Oracle BI Publisher accessible data. CVSS 3.1 Base Score 5.3 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N).\n\n- CVE-2021-27635: SAP NetWeaver AS for JAVA, versions - 7.20, 7.30, 7.31, 7.40, 7.50, allows an attacker authenticated as an administrator to connect over a network and submit a specially crafted XML file in the application because of missing XML Validation, this vulnerability enables attacker to fully compromise confidentiality by allowing them to read any file on the filesystem or fully compromise availability by causing the system to crash. The attack cannot be used to change any data so that there is no compromise as to integrity.\n\n- CVE-2021-32925: admin/user_import.php in Chamilo 1.11.x reads XML data without disabling the ability to load external entities.\n\n- CVE-2021-44145: In the TransformXML processor of Apache NiFi before 1.15.1 an authenticated user could configure an XSLT file which, if it included malicious external entity calls, may reveal sensitive information.\n\n- CVE-2021-42560: An issue was discovered in CALDERA 2.9.0. The Debrief plugin receives base64 encoded \"SVG\" parameters when generating a PDF document. These SVG documents are parsed in an unsafe manner and can be leveraged for XXE attacks (e.g., File Exfiltration, Server Side Request Forgery, Out of Band Exfiltration, etc.).\n\n- CVE-2022-23170: SysAid - Okta SSO integration - was found vulnerable to XML External Entity Injection vulnerability. Any SysAid environment that uses the Okta SSO integration might be vulnerable. An unauthenticated attacker could exploit the XXE vulnerability by sending a malformed POST request to the identity provider endpoint. An attacker can extract the identity provider endpoint by decoding the SAMLRequest parameter's value and searching for the AssertionConsumerServiceURL parameter's value. It often allows an attacker to view files on the application server filesystem and interact with any back-end or external systems that the application can access. In some situations, an attacker can escalate an XXE attack to compromise the underlying server or other back-end infrastructure by leveraging the XXE vulnerability to perform server-side request forgery (SSRF) attacks.\n\n- CVE-2022-24449: Solar appScreener through 3.10.4, when a valid license is not present, allows XXE and SSRF attacks via a crafted XML document.\n\n- CVE-2022-2458: XML external entity injection(XXE) is a vulnerability that allows an attacker to interfere with an application's processing of XML data. This attack occurs when XML input containing a reference to an external entity is processed by a weakly configured XML parser. The software processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output. Here, XML external entity injection lead to External Service interaction & Internal file read in Business Central and also Kie-Server APIs.\n\n- CVE-2022-27193: CVRF-CSAF-Converter before 1.0.0-rc2 resolves XML External Entities (XXE). This leads to the inclusion of arbitrary (local) file content into the generated output document. An attacker can exploit this to disclose information from the system running the converter.\n\n- CVE-2022-3338: An External XML entity (XXE) vulnerability in ePO prior to 5.10 Update 14 can lead to an unauthenticated remote attacker to potentially trigger a Server Side Request Forgery attack. This can be exploited by mimicking the Agent Handler call to ePO and passing the carefully constructed XML file through the API.\n\n- CVE-2022-35741: Apache CloudStack version 4.5.0 and later has a SAML 2.0 authentication Service Provider plugin which is found to be vulnerable to XML external entity (XXE) injection. This plugin is not enabled by default and the attacker would require that this plugin be enabled to exploit the vulnerability. When the SAML 2.0 plugin is enabled in affected versions of Apache CloudStack could potentially allow the exploitation of XXE vulnerabilities. The SAML 2.0 messages constructed during the authentication flow in Apache CloudStack are XML-based and the XML data is parsed by various standard libraries that are now understood to be vulnerable to XXE injection attacks such as arbitrary file reading, possible denial of service, server-side request forgery (SSRF) on the CloudStack management server.\n\n- CVE-2022-38342: Safe Software FME Server v2021.2.5, v2022.0.0.2 and below was discovered to contain a XML External Entity (XXE) vulnerability which allows authenticated attackers to perform data exfiltration or Server-Side Request Forgery (SSRF) attacks.\n\n- CVE-2022-3980: An XML External Entity (XEE) vulnerability allows server-side request forgery (SSRF) and potential code execution in Sophos Mobile managed on-premises between versions 5.0.0 and 9.7.4.\n\n- CVE-2022-42745: CandidATS version 3.0.0 allows an external attacker to read arbitrary files from the server. This is possible because the application is vulnerable to XXE.\n\n- CVE-2022-45194: CBRN-Analysis before 22 allows XXE attacks via am mws XML document, leading to NTLMv2-SSP hash disclosure.\n\n- CVE-2022-45326: An XML external entity (XXE) injection vulnerability in Kwoksys Kwok Information Server before v2.9.5.SP31 allows remote authenticated users to conduct server-side request forgery (SSRF) attacks.\n\n- CVE-2022-46827: In JetBrains IntelliJ IDEA before 2022.3 an XXE attack leading to SSRF via requests to custom plugin repositories was possible.\n\n- CVE-2022-47514: An XML external entity (XXE) injection vulnerability in XML-RPC.NET before 2.5.0 allows remote authenticated users to conduct server-side request forgery (SSRF) attacks, as demonstrated by a pingback.aspx POST request.\n\n- CVE-2022-47873: Netcad KEOS 1.0 is vulnerable to XML External Entity (XXE) resulting in SSRF with XXE (remote).\n\nRelated Weaknesses:\n\n- CWE-610 (ChildOf)\n\n- CWE-610 (ChildOf)\n\n- CWE-441 (PeerOf)",
        "type": "Base",
        "search_source": "base_query",
        "metadata": {
          "source": "sparse",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          }
        }
      }
    ],
    "graph_results": [
      {
        "doc_id": "203",
        "text": "CWE-203: Observable Discrepancy",
        "score": 2.4699999999999998,
        "metadata": {
          "doc_id": "203",
          "name": "Observable Discrepancy",
          "type": "base",
          "original_content": "CWE-203: Observable Discrepancy",
          "relationships": [
            {
              "source_id": "203",
              "target_id": "208",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "203",
              "target_id": "205",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "203",
              "target_id": "204",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "203",
              "target_id": "1303",
              "label": "PARENTOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "203",
              "target_id": "1300",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "203",
              "target_id": "200",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "203",
              "target_id": "200",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "208",
              "target_id": "203",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "205",
              "target_id": "203",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "204",
              "target_id": "203",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "200",
              "target_id": "203",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "1303",
              "target_id": "203",
              "label": "CHILDOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "1300",
              "target_id": "203",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1194"
              }
            },
            {
              "source_id": "1300",
              "target_id": "203",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.3,
            "explicit_mention": 1.0,
            "abstraction_path": 0.9
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "200",
                    "203",
                    "PARENTOF"
                  ]
                ],
                "score": 0.3,
                "type": "relationship_chain",
                "source": "200"
              }
            }
          },
          "is_explicit": true,
          "abstraction_level": "base",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "sparse",
              "graph"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "sparse": 137.67088490931772,
              "graph": 2.4699999999999998
            }
          }
        },
        "similarity": 2.4699999999999998
      },
      {
        "doc_id": "1295",
        "text": "The product fails to adequately prevent the revealing of unnecessary and potentially sensitive system information within debugging messages.",
        "score": 0.6371395957644052,
        "metadata": {
          "doc_id": "1295",
          "name": "Debug Messages Revealing Unnecessary Information",
          "type": "Base",
          "extended_description": "\n\nDebug messages are messages that help troubleshoot an issue by revealing the internal state of the system. For example, debug data in design can be exposed through internal memory array dumps or boot logs through interfaces like UART via TAP commands, scan chain, etc. Thus, the more information contained in a debug message, the easier it is to debug. However, there is also the risk of revealing information that could help an attacker either decipher a vulnerability, and/or gain a better understanding of the system. Thus, this extra information could lower the \"security by obscurity\" factor. While \"security by obscurity\" alone is insufficient, it can help as a part of \"Defense-in-depth\". \n",
          "alternate_terms": [],
          "original_content": "The product fails to adequately prevent the revealing of unnecessary and potentially sensitive system information within debugging messages.",
          "relationships": [
            {
              "source_id": "1295",
              "target_id": "209",
              "label": "PEEROF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "1295",
              "target_id": "200",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "200",
              "target_id": "1295",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "source": "graph",
          "sources": [
            "vector",
            "graph"
          ],
          "vector_score": 0.6371395957644052,
          "graph_score": 3.6399999999999997,
          "score_components": {
            "explicit_mention": 1.0,
            "relationship_chain": 0.7,
            "abstraction_path": 0.9,
            "peer_group": 0.9
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "abstraction_path_down",
              "peer_relationship"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "1295",
                    "209",
                    "PEEROF"
                  ]
                ],
                "score": 0.7,
                "type": "relationship_chain",
                "source": "209"
              },
              "abstraction_path_down": {
                "path": [
                  [
                    "200",
                    "1295",
                    "PARENTOF"
                  ]
                ],
                "score": 0.7200000000000001,
                "type": "abstraction_path_down",
                "source": "200"
              },
              "peer_relationship": {
                "path": [
                  [
                    "1295",
                    "209",
                    "PEEROF"
                  ]
                ],
                "score": 0.9,
                "type": "peer_relationship",
                "source": "209"
              }
            }
          },
          "is_explicit": true,
          "abstraction_level": "base",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "graph"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "dense": 0.554595689578811,
              "graph": 2.438855838305762
            }
          }
        },
        "similarity": 2.438855838305762
      },
      {
        "doc_id": "209",
        "text": "The product generates an error message that includes sensitive information about its environment, users, or associated data.",
        "score": 0.6343945083943495,
        "metadata": {
          "doc_id": "209",
          "name": "Generation of Error Message Containing Sensitive Information",
          "type": "Base",
          "extended_description": "\n\nThe sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more serious attacks. The error message may be created in different ways:\n\n\n  - self-generated: the source code explicitly constructs the error message and delivers it\n\n  - externally-generated: the external environment, such as a language interpreter, handles the error and constructs its own message, whose contents are not under direct control by the programmer\n\nAn attacker may use the contents of error messages to help launch another, more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of \"..\" sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.",
          "alternate_terms": [],
          "original_content": "The product generates an error message that includes sensitive information about its environment, users, or associated data.",
          "relationships": [
            {
              "source_id": "209",
              "target_id": "756",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "209",
              "target_id": "600",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "209",
              "target_id": "550",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "209",
              "target_id": "211",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "209",
              "target_id": "210",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "209",
              "target_id": "755",
              "label": "CHILDOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "209",
              "target_id": "200",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "209",
              "target_id": "200",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "81",
              "target_id": "209",
              "label": "CANALSOBE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "756",
              "target_id": "209",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "755",
              "target_id": "209",
              "label": "PARENTOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "600",
              "target_id": "209",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "550",
              "target_id": "209",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "211",
              "target_id": "209",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "210",
              "target_id": "209",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "201",
              "target_id": "209",
              "label": "CANALSOBE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "200",
              "target_id": "209",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "1295",
              "target_id": "209",
              "label": "PEEROF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "source": "graph",
          "sources": [
            "vector",
            "graph"
          ],
          "vector_score": 0.6343945083943495,
          "graph_score": 3.6399999999999997,
          "score_components": {
            "relationship_chain": 0.7,
            "explicit_mention": 1.0,
            "abstraction_path": 0.9,
            "peer_group": 0.9
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "abstraction_path_up",
              "abstraction_path_down",
              "peer_relationship"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "1295",
                    "209",
                    "PEEROF"
                  ]
                ],
                "score": 0.7,
                "type": "relationship_chain",
                "source": "1295"
              },
              "abstraction_path_up": {
                "path": [
                  [
                    "550",
                    "209",
                    "CHILDOF"
                  ]
                ],
                "score": 0.5599999999999999,
                "type": "abstraction_path_up",
                "source": "550"
              },
              "abstraction_path_down": {
                "path": [
                  [
                    "200",
                    "209",
                    "PARENTOF"
                  ]
                ],
                "score": 0.7200000000000001,
                "type": "abstraction_path_down",
                "source": "200"
              },
              "peer_relationship": {
                "path": [
                  [
                    "1295",
                    "209",
                    "PEEROF"
                  ]
                ],
                "score": 0.9,
                "type": "peer_relationship",
                "source": "1295"
              }
            }
          },
          "is_explicit": true,
          "abstraction_level": "base",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse",
              "graph"
            ],
            "retriever_count": 3,
            "normalized_scores": {
              "dense": 0.532574261304025,
              "sparse": 141.4299876608809,
              "graph": 2.4377578033577394
            }
          }
        },
        "similarity": 2.4377578033577394
      },
      {
        "doc_id": "756",
        "text": "CWE-756: Missing Custom Error Page",
        "score": 2.2100000000000004,
        "metadata": {
          "doc_id": "756",
          "name": "Missing Custom Error Page",
          "type": "base",
          "original_content": "CWE-756: Missing Custom Error Page",
          "relationships": [
            {
              "source_id": "756",
              "target_id": "7",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "756",
              "target_id": "12",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "756",
              "target_id": "209",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "756",
              "target_id": "755",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "755",
              "target_id": "756",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "7",
              "target_id": "756",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "209",
              "target_id": "756",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "12",
              "target_id": "756",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 1.0,
            "sequence_path": 1.0
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "vulnerability_sequence_forward",
              "vulnerability_sequence_backward"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "209",
                    "756",
                    "CANFOLLOW"
                  ]
                ],
                "score": 1.0,
                "type": "relationship_chain",
                "source": "209"
              },
              "vulnerability_sequence_forward": {
                "path": [
                  [
                    "209",
                    "756",
                    "CANFOLLOW"
                  ]
                ],
                "score": 0.9,
                "type": "vulnerability_sequence_forward",
                "source": "209"
              },
              "vulnerability_sequence_backward": {
                "path": [
                  [
                    "756",
                    "209",
                    "CANPRECEDE"
                  ]
                ],
                "score": 1.0,
                "type": "vulnerability_sequence_backward",
                "source": "209"
              }
            }
          },
          "position": "before",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 2.2100000000000004
            }
          }
        },
        "similarity": 2.2100000000000004
      },
      {
        "doc_id": "1272",
        "text": "CWE-1272: Sensitive Information Uncleared Before Debug/Power State Transition",
        "score": 2.2100000000000004,
        "metadata": {
          "doc_id": "1272",
          "name": "Sensitive Information Uncleared Before Debug/Power State Transition",
          "type": "base",
          "original_content": "CWE-1272: Sensitive Information Uncleared Before Debug/Power State Transition",
          "relationships": [
            {
              "source_id": "1272",
              "target_id": "200",
              "label": "CANPRECEDE",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "1272",
              "target_id": "226",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "226",
              "target_id": "1272",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "200",
              "target_id": "1272",
              "label": "CANFOLLOW",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 1.0,
            "sequence_path": 1.0
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "vulnerability_sequence_forward",
              "vulnerability_sequence_backward"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "200",
                    "1272",
                    "CANFOLLOW"
                  ]
                ],
                "score": 1.0,
                "type": "relationship_chain",
                "source": "200"
              },
              "vulnerability_sequence_forward": {
                "path": [
                  [
                    "200",
                    "1272",
                    "CANFOLLOW"
                  ]
                ],
                "score": 0.9,
                "type": "vulnerability_sequence_forward",
                "source": "200"
              },
              "vulnerability_sequence_backward": {
                "path": [
                  [
                    "1272",
                    "200",
                    "CANPRECEDE"
                  ]
                ],
                "score": 1.0,
                "type": "vulnerability_sequence_backward",
                "source": "200"
              }
            }
          },
          "position": "before",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 2.2100000000000004
            }
          }
        },
        "similarity": 2.2100000000000004
      },
      {
        "doc_id": "201",
        "text": "CWE-201: Insertion of Sensitive Information Into Sent Data",
        "score": 2.1762,
        "metadata": {
          "doc_id": "201",
          "name": "Insertion of Sensitive Information Into Sent Data",
          "type": "base",
          "original_content": "CWE-201: Insertion of Sensitive Information Into Sent Data",
          "relationships": [
            {
              "source_id": "201",
              "target_id": "598",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "201",
              "target_id": "226",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "201",
              "target_id": "212",
              "label": "CANFOLLOW",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "201",
              "target_id": "202",
              "label": "CANALSOBE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "201",
              "target_id": "209",
              "label": "CANALSOBE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "201",
              "target_id": "200",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "598",
              "target_id": "201",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "226",
              "target_id": "201",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "212",
              "target_id": "201",
              "label": "CANPRECEDE",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "200",
              "target_id": "201",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.7,
            "abstraction_path": 0.7200000000000001,
            "peer_group": 0.9
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "abstraction_path_down",
              "peer_relationship"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "201",
                    "209",
                    "CANALSOBE"
                  ]
                ],
                "score": 0.7,
                "type": "relationship_chain",
                "source": "209"
              },
              "abstraction_path_down": {
                "path": [
                  [
                    "200",
                    "201",
                    "PARENTOF"
                  ]
                ],
                "score": 0.7200000000000001,
                "type": "abstraction_path_down",
                "source": "200"
              },
              "peer_relationship": {
                "path": [
                  [
                    "201",
                    "209",
                    "CANALSOBE"
                  ]
                ],
                "score": 0.9,
                "type": "peer_relationship",
                "source": "209"
              }
            }
          },
          "abstraction_level": "base",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 2.1762
            }
          }
        },
        "similarity": 2.1762
      },
      {
        "doc_id": "321",
        "text": "CWE-321: Use of Hard-coded Cryptographic Key",
        "score": 2.172,
        "metadata": {
          "doc_id": "321",
          "name": "Use of Hard-coded Cryptographic Key",
          "type": "variant",
          "original_content": "CWE-321: Use of Hard-coded Cryptographic Key",
          "relationships": [
            {
              "source_id": "321",
              "target_id": "656",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "321",
              "target_id": "798",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1340"
              }
            },
            {
              "source_id": "321",
              "target_id": "798",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1305"
              }
            },
            {
              "source_id": "321",
              "target_id": "798",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "798",
              "target_id": "321",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "656",
              "target_id": "321",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "259",
              "target_id": "321",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "1291",
              "target_id": "321",
              "label": "PEEROF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.7,
            "sequence_path": 0.8,
            "peer_group": 0.9
          },
          "abstraction_factor": 1.2,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "vulnerability_sequence_forward",
              "peer_relationship"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "259",
                    "321",
                    "PEEROF"
                  ]
                ],
                "score": 0.7,
                "type": "relationship_chain",
                "source": "259"
              },
              "vulnerability_sequence_forward": {
                "path": [
                  [
                    "259",
                    "656",
                    "CANFOLLOW"
                  ],
                  [
                    "656",
                    "321",
                    "CANPRECEDE"
                  ]
                ],
                "score": 0.8,
                "type": "vulnerability_sequence_forward",
                "source": "259"
              },
              "peer_relationship": {
                "path": [
                  [
                    "259",
                    "321",
                    "PEEROF"
                  ]
                ],
                "score": 0.9,
                "type": "peer_relationship",
                "source": "259"
              }
            }
          },
          "position": "after",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 2.172
            }
          }
        },
        "similarity": 2.172
      },
      {
        "doc_id": "600",
        "text": "CWE-600: Uncaught Exception in Servlet ",
        "score": 2.04,
        "metadata": {
          "doc_id": "600",
          "name": "Uncaught Exception in Servlet ",
          "type": "variant",
          "original_content": "CWE-600: Uncaught Exception in Servlet ",
          "relationships": [
            {
              "source_id": "600",
              "target_id": "390",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "600",
              "target_id": "209",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "600",
              "target_id": "248",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "248",
              "target_id": "600",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "209",
              "target_id": "600",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 1.0,
            "sequence_path": 1.0
          },
          "abstraction_factor": 1.2,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "vulnerability_sequence_forward",
              "vulnerability_sequence_backward"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "209",
                    "600",
                    "CANFOLLOW"
                  ]
                ],
                "score": 1.0,
                "type": "relationship_chain",
                "source": "209"
              },
              "vulnerability_sequence_forward": {
                "path": [
                  [
                    "209",
                    "600",
                    "CANFOLLOW"
                  ]
                ],
                "score": 0.9,
                "type": "vulnerability_sequence_forward",
                "source": "209"
              },
              "vulnerability_sequence_backward": {
                "path": [
                  [
                    "600",
                    "209",
                    "CANPRECEDE"
                  ]
                ],
                "score": 1.0,
                "type": "vulnerability_sequence_backward",
                "source": "209"
              }
            }
          },
          "position": "before",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 2.04
            }
          }
        },
        "similarity": 2.04
      },
      {
        "doc_id": "499",
        "text": "CWE-499: Serializable Class Containing Sensitive Data",
        "score": 2.04,
        "metadata": {
          "doc_id": "499",
          "name": "Serializable Class Containing Sensitive Data",
          "type": "variant",
          "original_content": "CWE-499: Serializable Class Containing Sensitive Data",
          "relationships": [
            {
              "source_id": "499",
              "target_id": "200",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "499",
              "target_id": "668",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "668",
              "target_id": "499",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "200",
              "target_id": "499",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 1.0,
            "sequence_path": 1.0
          },
          "abstraction_factor": 1.2,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "vulnerability_sequence_forward",
              "vulnerability_sequence_backward"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "200",
                    "499",
                    "CANFOLLOW"
                  ]
                ],
                "score": 1.0,
                "type": "relationship_chain",
                "source": "200"
              },
              "vulnerability_sequence_forward": {
                "path": [
                  [
                    "200",
                    "499",
                    "CANFOLLOW"
                  ]
                ],
                "score": 0.9,
                "type": "vulnerability_sequence_forward",
                "source": "200"
              },
              "vulnerability_sequence_backward": {
                "path": [
                  [
                    "499",
                    "200",
                    "CANPRECEDE"
                  ]
                ],
                "score": 1.0,
                "type": "vulnerability_sequence_backward",
                "source": "200"
              }
            }
          },
          "position": "before",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 2.04
            }
          }
        },
        "similarity": 2.04
      },
      {
        "doc_id": "498",
        "text": "CWE-498: Cloneable Class Containing Sensitive Information",
        "score": 2.04,
        "metadata": {
          "doc_id": "498",
          "name": "Cloneable Class Containing Sensitive Information",
          "type": "variant",
          "original_content": "CWE-498: Cloneable Class Containing Sensitive Information",
          "relationships": [
            {
              "source_id": "498",
              "target_id": "200",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "498",
              "target_id": "668",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "668",
              "target_id": "498",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "200",
              "target_id": "498",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 1.0,
            "sequence_path": 1.0
          },
          "abstraction_factor": 1.2,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "vulnerability_sequence_forward",
              "vulnerability_sequence_backward"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "200",
                    "498",
                    "CANFOLLOW"
                  ]
                ],
                "score": 1.0,
                "type": "relationship_chain",
                "source": "200"
              },
              "vulnerability_sequence_forward": {
                "path": [
                  [
                    "200",
                    "498",
                    "CANFOLLOW"
                  ]
                ],
                "score": 0.9,
                "type": "vulnerability_sequence_forward",
                "source": "200"
              },
              "vulnerability_sequence_backward": {
                "path": [
                  [
                    "498",
                    "200",
                    "CANPRECEDE"
                  ]
                ],
                "score": 1.0,
                "type": "vulnerability_sequence_backward",
                "source": "200"
              }
            }
          },
          "position": "before",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 2.04
            }
          }
        },
        "similarity": 2.04
      },
      {
        "doc_id": "472",
        "text": "CWE-472: External Control of Assumed-Immutable Web Parameter",
        "score": 1.7680000000000005,
        "metadata": {
          "doc_id": "472",
          "name": "External Control of Assumed-Immutable Web Parameter",
          "type": "base",
          "original_content": "CWE-472: External Control of Assumed-Immutable Web Parameter",
          "relationships": [
            {
              "source_id": "472",
              "target_id": "656",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "472",
              "target_id": "384",
              "label": "REQUIREDBY",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "472",
              "target_id": "471",
              "label": "CHILDOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "472",
              "target_id": "642",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "656",
              "target_id": "472",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "642",
              "target_id": "472",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "471",
              "target_id": "472",
              "label": "PARENTOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "384",
              "target_id": "472",
              "label": "REQUIRES",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.8,
            "sequence_path": 0.8
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "vulnerability_sequence_forward"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "259",
                    "656",
                    "CANFOLLOW"
                  ],
                  [
                    "656",
                    "472",
                    "CANPRECEDE"
                  ]
                ],
                "score": 0.8,
                "type": "relationship_chain",
                "source": "259"
              },
              "vulnerability_sequence_forward": {
                "path": [
                  [
                    "259",
                    "656",
                    "CANFOLLOW"
                  ],
                  [
                    "656",
                    "472",
                    "CANPRECEDE"
                  ]
                ],
                "score": 0.8,
                "type": "vulnerability_sequence_forward",
                "source": "259"
              }
            }
          },
          "position": "after",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.7680000000000005
            }
          }
        },
        "similarity": 1.7680000000000005
      },
      {
        "doc_id": "211",
        "text": "The product performs an operation that triggers an external diagnostic or error message that is not directly generated or controlled by the product, such as an error generated by the programming language interpreter that a software application uses. The error can contain sensitive system information.",
        "score": 0.6459389233306319,
        "metadata": {
          "doc_id": "211",
          "name": "Externally-Generated Error Message Containing Sensitive Information",
          "type": "Base",
          "extended_description": null,
          "alternate_terms": [],
          "original_content": "The product performs an operation that triggers an external diagnostic or error message that is not directly generated or controlled by the product, such as an error generated by the programming language interpreter that a software application uses. The error can contain sensitive system information.",
          "relationships": [
            {
              "source_id": "211",
              "target_id": "537",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "211",
              "target_id": "536",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "211",
              "target_id": "535",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "211",
              "target_id": "209",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "537",
              "target_id": "211",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "536",
              "target_id": "211",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "535",
              "target_id": "211",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "209",
              "target_id": "211",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "source": "graph",
          "sources": [
            "vector",
            "graph"
          ],
          "vector_score": 0.6459389233306319,
          "graph_score": 2.4699999999999998,
          "score_components": {
            "relationship_chain": 0.3,
            "explicit_mention": 1.0,
            "abstraction_path": 0.9
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "abstraction_path_down"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "209",
                    "211",
                    "PARENTOF"
                  ]
                ],
                "score": 0.3,
                "type": "relationship_chain",
                "source": "209"
              },
              "abstraction_path_down": {
                "path": [
                  [
                    "209",
                    "211",
                    "PARENTOF"
                  ]
                ],
                "score": 0.7200000000000001,
                "type": "abstraction_path_down",
                "source": "209"
              }
            }
          },
          "is_explicit": true,
          "abstraction_level": "base",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "graph"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "dense": 0.5529236893798679,
              "graph": 1.7403755693322525
            }
          }
        },
        "similarity": 1.7403755693322525
      },
      {
        "doc_id": "497",
        "text": "The product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.",
        "score": 0.63672208953951,
        "metadata": {
          "doc_id": "497",
          "name": "Exposure of Sensitive System Information to an Unauthorized Control Sphere",
          "type": "Base",
          "extended_description": "\n\nNetwork-based products, such as web applications, often run on top of an operating system or similar environment. When the product communicates with outside parties, details about the underlying system are expected to remain hidden, such as path names for data files, other OS users, installed packages, the application environment, etc. This system information may be provided by the product itself, or buried within diagnostic or debugging messages. Debugging information helps an adversary learn about the system and form an attack plan.\n\n\nAn information exposure occurs when system data or debugging information leaves the program through an output stream or logging function that makes it accessible to unauthorized parties. Using other weaknesses, an attacker could cause errors to occur; the response to these errors can reveal detailed system information, along with other impacts. An attacker can use messages that reveal technologies, operating systems, and product versions to tune the attack against known vulnerabilities in these technologies. A product may use diagnostic methods that provide significant implementation details such as stack traces as part of its error handling mechanism.\n",
          "alternate_terms": [],
          "original_content": "The product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.",
          "relationships": [
            {
              "source_id": "497",
              "target_id": "548",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "497",
              "target_id": "214",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "497",
              "target_id": "200",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "548",
              "target_id": "497",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "214",
              "target_id": "497",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "200",
              "target_id": "497",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "source": "graph",
          "sources": [
            "vector",
            "graph"
          ],
          "vector_score": 0.63672208953951,
          "graph_score": 2.4699999999999998,
          "score_components": {
            "relationship_chain": 0.3,
            "explicit_mention": 1.0,
            "abstraction_path": 0.9
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "200",
                    "497",
                    "PARENTOF"
                  ]
                ],
                "score": 0.3,
                "type": "relationship_chain",
                "source": "200"
              }
            }
          },
          "is_explicit": true,
          "abstraction_level": "base",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "sparse",
              "graph"
            ],
            "retriever_count": 3,
            "normalized_scores": {
              "dense": 0.5451759642623561,
              "sparse": 134.10517159594693,
              "graph": 1.7366888358158037
            }
          }
        },
        "similarity": 1.7366888358158037
      },
      {
        "doc_id": "532",
        "text": "The product writes sensitive information to a log file.",
        "score": 0.6211589382866943,
        "metadata": {
          "doc_id": "532",
          "name": "Insertion of Sensitive Information into Log File",
          "type": "Base",
          "extended_description": null,
          "alternate_terms": [],
          "original_content": "The product writes sensitive information to a log file.",
          "relationships": [
            {
              "source_id": "532",
              "target_id": "200",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            },
            {
              "source_id": "532",
              "target_id": "538",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "538",
              "target_id": "532",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "200",
              "target_id": "532",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1003"
              }
            }
          ],
          "source": "graph",
          "sources": [
            "vector",
            "graph"
          ],
          "vector_score": 0.6211589382866943,
          "graph_score": 2.4699999999999998,
          "score_components": {
            "relationship_chain": 0.3,
            "explicit_mention": 1.0,
            "abstraction_path": 0.9
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "200",
                    "532",
                    "PARENTOF"
                  ]
                ],
                "score": 0.3,
                "type": "relationship_chain",
                "source": "200"
              }
            }
          },
          "is_explicit": true,
          "abstraction_level": "base",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "graph"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "dense": 0.5542382130927397,
              "graph": 1.7304635753146775
            }
          }
        },
        "similarity": 1.7304635753146775
      },
      {
        "doc_id": "550",
        "text": "Certain conditions, such as network failure, will cause a server error message to be displayed.",
        "score": 0.6346733930172193,
        "metadata": {
          "doc_id": "550",
          "name": "Server-generated Error Message Containing Sensitive Information",
          "type": "Variant",
          "extended_description": "While error messages in and of themselves are not dangerous, per se, it is what an attacker can glean from them that might cause eventual problems.",
          "alternate_terms": [],
          "original_content": "Certain conditions, such as network failure, will cause a server error message to be displayed.",
          "relationships": [
            {
              "source_id": "550",
              "target_id": "209",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "209",
              "target_id": "550",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "source": "graph",
          "sources": [
            "vector",
            "graph"
          ],
          "vector_score": 0.6346733930172193,
          "graph_score": 2.1624,
          "score_components": {
            "relationship_chain": 0.3,
            "explicit_mention": 1.0,
            "abstraction_path": 0.76
          },
          "abstraction_factor": 1.2,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "abstraction_path_down"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "209",
                    "550",
                    "PARENTOF"
                  ]
                ],
                "score": 0.3,
                "type": "relationship_chain",
                "source": "209"
              },
              "abstraction_path_down": {
                "path": [
                  [
                    "209",
                    "550",
                    "PARENTOF"
                  ]
                ],
                "score": 0.76,
                "type": "abstraction_path_down",
                "source": "209"
              }
            }
          },
          "is_explicit": true,
          "abstraction_level": "variant",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "dense",
              "graph"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "dense": 0.5515453662079837,
              "graph": 1.5513093572068877
            }
          }
        },
        "similarity": 1.5513093572068877
      },
      {
        "doc_id": "257",
        "text": "CWE-257: Storing Passwords in a Recoverable Format",
        "score": 1.521,
        "metadata": {
          "doc_id": "257",
          "name": "Storing Passwords in a Recoverable Format",
          "type": "base",
          "original_content": "CWE-257: Storing Passwords in a Recoverable Format",
          "relationships": [
            {
              "source_id": "257",
              "target_id": "259",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "257",
              "target_id": "522",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "798",
              "target_id": "257",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "522",
              "target_id": "257",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "259",
              "target_id": "257",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.7,
            "peer_group": 0.9
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "peer_relationship"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "259",
                    "257",
                    "PEEROF"
                  ]
                ],
                "score": 0.7,
                "type": "relationship_chain",
                "source": "259"
              },
              "peer_relationship": {
                "path": [
                  [
                    "259",
                    "257",
                    "PEEROF"
                  ]
                ],
                "score": 0.9,
                "type": "peer_relationship",
                "source": "259"
              }
            }
          },
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.521
            }
          }
        },
        "similarity": 1.521
      },
      {
        "doc_id": "81",
        "text": "CWE-81: Improper Neutralization of Script in an Error Message Web Page",
        "score": 1.404,
        "metadata": {
          "doc_id": "81",
          "name": "Improper Neutralization of Script in an Error Message Web Page",
          "type": "variant",
          "original_content": "CWE-81: Improper Neutralization of Script in an Error Message Web Page",
          "relationships": [
            {
              "source_id": "81",
              "target_id": "390",
              "label": "CANALSOBE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "81",
              "target_id": "209",
              "label": "CANALSOBE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "81",
              "target_id": "79",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "79",
              "target_id": "81",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.7,
            "peer_group": 0.9
          },
          "abstraction_factor": 1.2,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "peer_relationship"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "81",
                    "209",
                    "CANALSOBE"
                  ]
                ],
                "score": 0.7,
                "type": "relationship_chain",
                "source": "209"
              },
              "peer_relationship": {
                "path": [
                  [
                    "81",
                    "209",
                    "CANALSOBE"
                  ]
                ],
                "score": 0.9,
                "type": "peer_relationship",
                "source": "209"
              }
            }
          },
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.404
            }
          }
        },
        "similarity": 1.404
      },
      {
        "doc_id": "656",
        "text": "CWE-656: Reliance on Security Through Obscurity",
        "score": 1.3600000000000003,
        "metadata": {
          "doc_id": "656",
          "name": "Reliance on Security Through Obscurity",
          "type": "class",
          "original_content": "CWE-656: Reliance on Security Through Obscurity",
          "relationships": [
            {
              "source_id": "656",
              "target_id": "472",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "656",
              "target_id": "321",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "656",
              "target_id": "259",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "656",
              "target_id": "693",
              "label": "CHILDOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "656",
              "target_id": "657",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "693",
              "target_id": "656",
              "label": "PARENTOF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "657",
              "target_id": "656",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "603",
              "target_id": "656",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "472",
              "target_id": "656",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "321",
              "target_id": "656",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "259",
              "target_id": "656",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 1.0,
            "sequence_path": 1.0
          },
          "abstraction_factor": 0.8,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "vulnerability_sequence_forward",
              "vulnerability_sequence_backward"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "259",
                    "656",
                    "CANFOLLOW"
                  ]
                ],
                "score": 1.0,
                "type": "relationship_chain",
                "source": "259"
              },
              "vulnerability_sequence_forward": {
                "path": [
                  [
                    "259",
                    "656",
                    "CANFOLLOW"
                  ]
                ],
                "score": 0.9,
                "type": "vulnerability_sequence_forward",
                "source": "259"
              },
              "vulnerability_sequence_backward": {
                "path": [
                  [
                    "656",
                    "259",
                    "CANPRECEDE"
                  ]
                ],
                "score": 1.0,
                "type": "vulnerability_sequence_backward",
                "source": "259"
              }
            }
          },
          "position": "before",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed-with-Review",
            "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
            "comments": "Examine children of this entry to see if there is a better fit",
            "reasons": [
              "Abstraction"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.3600000000000003
            }
          }
        },
        "similarity": 1.3600000000000003
      },
      {
        "doc_id": "259",
        "text": "CWE-259: Use of Hard-coded Password",
        "score": 1.2,
        "metadata": {
          "doc_id": "259",
          "name": "Use of Hard-coded Password",
          "type": "variant",
          "original_content": "CWE-259: Use of Hard-coded Password",
          "relationships": [
            {
              "source_id": "259",
              "target_id": "656",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "259",
              "target_id": "257",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "259",
              "target_id": "321",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "259",
              "target_id": "798",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1340"
              }
            },
            {
              "source_id": "259",
              "target_id": "798",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1305"
              }
            },
            {
              "source_id": "259",
              "target_id": "798",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "798",
              "target_id": "259",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "656",
              "target_id": "259",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "257",
              "target_id": "259",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "explicit_mention": 1.0
          },
          "abstraction_factor": 1.2,
          "graph_path_info": {
            "path_types": [],
            "best_paths": {}
          },
          "is_explicit": true,
          "abstraction_level": "variant",
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "sparse",
              "graph"
            ],
            "retriever_count": 2,
            "normalized_scores": {
              "sparse": 133.39706602490705,
              "graph": 1.2
            }
          }
        },
        "similarity": 1.2
      },
      {
        "doc_id": "390",
        "text": "CWE-390: Detection of Error Condition Without Action",
        "score": 1.1466,
        "metadata": {
          "doc_id": "390",
          "name": "Detection of Error Condition Without Action",
          "type": "base",
          "original_content": "CWE-390: Detection of Error Condition Without Action",
          "relationships": [
            {
              "source_id": "390",
              "target_id": "401",
              "label": "CANPRECEDE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "390",
              "target_id": "755",
              "label": "CHILDOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "81",
              "target_id": "390",
              "label": "CANALSOBE",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "755",
              "target_id": "390",
              "label": "PARENTOF",
              "properties": {
                "ordinal": "Primary",
                "view_id": "1000"
              }
            },
            {
              "source_id": "600",
              "target_id": "390",
              "label": "PEEROF",
              "properties": {
                "view_id": "1000"
              }
            },
            {
              "source_id": "401",
              "target_id": "390",
              "label": "CANFOLLOW",
              "properties": {
                "view_id": "1000"
              }
            }
          ],
          "score_components": {
            "relationship_chain": 0.5599999999999999,
            "peer_group": 0.63
          },
          "abstraction_factor": 1.3,
          "graph_path_info": {
            "path_types": [
              "relationship_chain",
              "peer_relationship"
            ],
            "best_paths": {
              "relationship_chain": {
                "path": [
                  [
                    "209",
                    "600",
                    "CANFOLLOW"
                  ],
                  [
                    "600",
                    "390",
                    "PEEROF"
                  ]
                ],
                "score": 0.5599999999999999,
                "type": "relationship_chain",
                "source": "209"
              },
              "peer_relationship": {
                "path": [
                  [
                    "81",
                    "209",
                    "CANALSOBE"
                  ],
                  [
                    "81",
                    "390",
                    "CANALSOBE"
                  ]
                ],
                "score": 0.63,
                "type": "peer_relationship",
                "source": "209"
              }
            }
          },
          "sources": [
            "graph"
          ],
          "source": "graph",
          "mapping_notes": {
            "usage": "Allowed",
            "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
            "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
            "reasons": [
              "Acceptable-Use"
            ]
          },
          "score_info": {
            "retrievers": [
              "graph"
            ],
            "retriever_count": 1,
            "normalized_scores": {
              "graph": 1.1466
            }
          }
        },
        "similarity": 1.1466
      }
    ]
  },
  "retrieval_time": 4.759231805801392
}