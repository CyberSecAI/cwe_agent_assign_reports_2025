{
  "method": "sparse_combined",
  "query": "When the assert() function in the GNU C Library versions 2.13 to 2.40 fails, it does not allocate enough space for the assertion failure message string and size information, which may lead to a buffer overflow if the message string size aligns to page size.",
  "keyphrases": {
    "rootcause": [
      "does not allocate enough space"
    ],
    "weakness": [
      "buffer overflow"
    ]
  },
  "timestamp": "2025-07-14T05:45:43.006171",
  "results_count": 13,
  "results_summary": [
    {
      "doc_id": "119",
      "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
      "score": 1000.0
    },
    {
      "doc_id": "190",
      "name": "Integer Overflow or Wraparound",
      "score": 800.0
    },
    {
      "doc_id": "120",
      "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
      "score": 700.0
    },
    {
      "doc_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "score": 368.1982641227662
    },
    {
      "doc_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 347.867688129145
    }
  ]
}