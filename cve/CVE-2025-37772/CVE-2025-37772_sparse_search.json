{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved RDMA/cma Fix workqueue crash in cma_netevent_work_handler struct rdma_cm_id has member struct work_struct net_work that is reused for enqueuing cma_netevent_work_handler()s onto cma_wq. Below crash[1] can occur if more than one call to cma_netevent_callback() occurs in quick succession, which further enqueues cma_netevent_work_handler()s for the same rdma_cm_id, overwriting any previously queued work-item(s) that was just scheduled to run i.e. there is no guarantee the queued work item may run between two successive calls to cma_netevent_callback() and the 2nd INIT_WORK would overwrite the 1st work item (for the same rdma_cm_id), despite grabbing id_table_lock during enqueue. Also drgn analysis [2] indicates the work item was likely overwritten. Fix this by moving the INIT_WORK() to __rdma_create_id(), so that it doesnt race with any existing queue_work() or its worker thread. [1] Trimmed crash stack =============================================",
  "keyphrases": {
    "rootcause": [
      "reusing struct rdma_cm_id member struct work_struct net_work"
    ]
  },
  "timestamp": "2025-07-14 21:21:16",
  "cve_id": "CVE-2025-37772",
  "result_count": 11,
  "results": [
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 543.7611012795921,
      "search_source": "rootcause:reusing struct rdma_cm_id member struct work_struct net_work"
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "score": 536.2616022617357,
      "search_source": "rootcause:reusing struct rdma_cm_id member struct work_struct net_work"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "score": 534.3235579737204,
      "search_source": "rootcause:reusing struct rdma_cm_id member struct work_struct net_work"
    },
    {
      "cwe_id": "193",
      "name": "Off-by-one Error",
      "score": 533.1523845337008,
      "search_source": "rootcause:reusing struct rdma_cm_id member struct work_struct net_work"
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "score": 533.1318954668076,
      "search_source": "rootcause:reusing struct rdma_cm_id member struct work_struct net_work"
    },
    {
      "cwe_id": "226",
      "name": "Sensitive Information in Resource Not Removed Before Reuse",
      "score": 531.9184510136558,
      "search_source": "rootcause:reusing struct rdma_cm_id member struct work_struct net_work"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "score": 526.024239740055,
      "search_source": "rootcause:reusing struct rdma_cm_id member struct work_struct net_work"
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "score": 524.8012211094441,
      "search_source": "rootcause:reusing struct rdma_cm_id member struct work_struct net_work"
    },
    {
      "cwe_id": "639",
      "name": "Authorization Bypass Through User-Controlled Key",
      "score": 521.6859924044722,
      "search_source": "rootcause:reusing struct rdma_cm_id member struct work_struct net_work"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 517.7409780027451,
      "search_source": "rootcause:reusing struct rdma_cm_id member struct work_struct net_work"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 171.75746306923463,
      "search_source": "base_query"
    }
  ]
}