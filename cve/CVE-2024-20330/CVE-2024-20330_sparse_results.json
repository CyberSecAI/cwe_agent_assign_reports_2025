{
  "query": "A vulnerability in the Snort 2 and Snort 3 TCP and UDP detection engine of Cisco Firepower Threat Defense (FTD) Software for Cisco Firepower 2100 Series Appliances could allow an unauthenticated, remote attacker to cause memory corruption, which could cause the Snort detection engine to restart unexpectedly. This vulnerability is due to improper memory management when the Snort detection engine processes specific TCP or UDP packets. An attacker could exploit this vulnerability by sending crafted TCP or UDP packets through a device that is inspecting traffic using the Snort detection engine. A successful exploit could allow the attacker to restart the Snort detection engine repeatedly, which could cause a denial of service (DoS) condition. The DoS condition impacts only the traffic through the device that is examined by the Snort detection engine. The device can still be managed over the network. Note Once a memory block is corrupted, it cannot be cleared until the Cisco Firepower 2100 Series Appliance is manually reloaded. This means that the Snort detection engine could crash repeatedly, causing traffic that is processed by the Snort detection engine to be dropped until the device is manually reloaded.",
  "count": 11,
  "results": [
    {
      "cwe_id": "693",
      "name": "Protection Mechanism Failure",
      "abstraction": "Pillar",
      "score": 1235.0452046347336,
      "original_score": 1235.0452046347336,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "abstraction": "Variant",
      "score": 1119.6966472662104,
      "original_score": 1119.6966472662104,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "400",
      "name": "Uncontrolled Resource Consumption",
      "abstraction": "Class",
      "score": 1100.4696535508053,
      "original_score": 1100.4696535508053,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "119",
      "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
      "abstraction": "Class",
      "score": 1086.1824242730186,
      "original_score": 1086.1824242730186,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "20",
      "name": "Improper Input Validation",
      "abstraction": "Class",
      "score": 1080.8841520673186,
      "original_score": 1080.8841520673186,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "755",
      "name": "Improper Handling of Exceptional Conditions",
      "abstraction": "Class",
      "score": 1033.2702933086412,
      "original_score": 1033.2702933086412,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "abstraction": "Variant",
      "score": 1028.3942783121217,
      "original_score": 1028.3942783121217,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "abstraction": "Base",
      "score": 1015.568669689966,
      "original_score": 1015.568669689966,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "203",
      "name": "Observable Discrepancy",
      "abstraction": "Base",
      "score": 1013.4237484547881,
      "original_score": 1013.4237484547881,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "617",
      "name": "Reachable Assertion",
      "abstraction": "Base",
      "score": 1011.4945917817137,
      "original_score": 1011.4945917817137,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "787",
      "name": "Out-of-bounds Write",
      "abstraction": "Base",
      "score": 1000.0,
      "original_score": 1000.0,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 1000.0,
    "max": 1235.0452046347336,
    "mean": 1065.8572421217561,
    "median": 1033.2702933086412,
    "count": 11
  }
}