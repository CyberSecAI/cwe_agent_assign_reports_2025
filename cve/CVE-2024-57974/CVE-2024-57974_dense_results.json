{
  "query": "In the Linux kernel, the following vulnerability has been resolved udp Deal with race between UDP socket address change and rehash If a UDP socket changes its local address while its receiving datagrams, as a result of connect(), there is a period during which a lookup operation might fail to find it, after the address is changed but before the secondary hash (port and address) and the four-tuple hash (local and remote ports and addresses) are updated. Secondary hash chains were introduced by commit 30fff9231fad (udp bind() optimisation) and, as a result, a rehash operation became needed to make a bound socket reachable again after a connect(). This operation was introduced by commit 719f835853a9 (udp add rehash on connect()) which isnt however a complete fix the socket will be found once the rehashing completes, but not while its pending. This is noticeable with a socat(1) server in UDP4-LISTEN mode, and a client sending datagrams to it. After the server receives the first datagram (cf. _xioopen_ipdgram_listen()), it issues a connect() to the address of the sender, in order to set up a directed flow. Now, if the client, running on a different CPU thread, happens to send a (subsequent) datagram while the servers socket changes its address, but is not rehashed yet, this will result in a failed lookup and a port unreachable error delivered to the client, as apparent from the following reproducer LEN=$(($(cat /proc/sys/net/core/wmem_default) / 4)) dd if=/dev/urandom bs=1 count=${LEN} of=tmp.in while do taskset -c 1 socat UDP4-LISTEN1337,null-eof OPENtmp.out,create,trunc & sleep 0.1 || sleep 1 taskset -c 2 socat OPENtmp.in UDP4localhost1337,shut-null wait done where the client will eventually get ECONNREFUSED on a write() (typically the second or third one of a given iteration) 2024/11/13 212823 socat[46901] E write(6, 0x556db2e3c000, 8192) Connection refused This issue was first observed as a seldom failure in Podmans tests checking UDP functionality while using pasta(1) to connect the containers network namespace, which leads us to a reproducer with the lookup error resulting in an ICMP packet on a tap device LOCAL_ADDR=$(ip -j -4 addr show|jq -rM .[] | .addr_info[0] | select(.scope == global).local) while do ./pasta --config-net -p pasta.pcap -u 1337 socat UDP4-LISTEN1337,null-eof OPENtmp.out,create,trunc & sleep 0.2 || sleep 1 socat OPENtmp.in UDP4${LOCAL_ADDR}1337,shut-null wait cmp tmp.in tmp.out done Once this fails tmp.in tmp.out differ char 8193, line 29 we can finally have a look at whats going on $ tshark -r pasta.pcap 1 0.000000 ? ff0216 ICMPv6 110 Multicast Listener Report Message v2 2 0.168690 88.198.0.161 ? 88.198.0.164 UDP 8234 60260 ? 1337 Len=8192 3 0.168767 88.198.0.161 ? 88.198.0.164 UDP 8234 60260 ? 1337 Len=8192 4 0.168806 88.198.0.161 ? 88.198.0.164 UDP 8234 60260 ? 1337 Len=8192 5 0.168827 c647058ddc04 ? Broadcast ARP 42 Who has 88.198.0.161? Tell 88.198.0.164 6 0.168851 9a559a559a55 ? c647058ddc04 ARP 42 88.198.0.161 is at 9a559a559a55 7 0.168875 88.198.0.161 ? 88.198.0.164 UDP 8234 60260 ? 1337 Len=8192 8 0.168896 88.198.0.164 ? 88.198.0.161 ICMP 590 Destination unreachable (Port unreachable) 9 0.168926 88.198.0.161 ? 88.198.0.164 UDP 8234 60260 ? 1337 Len=8192 10 0.168959 88.198.0.161 ? 88.198.0.164 UDP 8234 60260 ? 1337 Len=8192 11 0.168989 88.198.0.161 ? 88.198.0.164 UDP 4138 60260 ? 1337 Len=4096 12 0.169010 88.198.0.161 ? 88.198.0.164 UDP 42 60260 ? 1337 Len=0 On the third datagram received, the network namespace of the container initiates an ARP lookup to deliver the ICMP message. In another variant of this reproducer, starting the client with strace -f pasta --config-net -u 1337 socat UDP4-LISTEN1337,null-eof OPENtmp.out,create,tru ---truncated---",
  "count": 20,
  "results": [
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "abstraction": "Variant",
      "score": 0.5143859984975694,
      "original_score": 0.5143859984975694,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 0.5108249358848066,
      "original_score": 0.5108249358848066,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "605",
      "name": "Multiple Binds to the Same Port",
      "abstraction": "Variant",
      "score": 0.4950920728911314,
      "original_score": 0.4950920728911314,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "abstraction": "Base",
      "score": 0.49381840840192465,
      "original_score": 0.49381840840192465,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "abstraction": "Base",
      "score": 0.49016465296504796,
      "original_score": 0.49016465296504796,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "346",
      "name": "Origin Validation Error",
      "abstraction": "Class",
      "score": 0.4830218278794312,
      "original_score": 0.4830218278794312,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "400",
      "name": "Uncontrolled Resource Consumption",
      "abstraction": "Class",
      "score": 0.4827648240525299,
      "original_score": 0.4827648240525299,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "abstraction": "Base",
      "score": 0.4812803301042671,
      "original_score": 0.4812803301042671,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "617",
      "name": "Reachable Assertion",
      "abstraction": "Base",
      "score": 0.47774045973306556,
      "original_score": 0.47774045973306556,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "121",
      "name": "Stack-based Buffer Overflow",
      "abstraction": "Variant",
      "score": 0.4767221920444435,
      "original_score": 0.4767221920444435,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "abstraction": "Class",
      "score": 0.4762150840263254,
      "original_score": 0.4762150840263254,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "193",
      "name": "Off-by-one Error",
      "abstraction": "Base",
      "score": 0.47606095931157477,
      "original_score": 0.47606095931157477,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1389",
      "name": "Incorrect Parsing of Numbers with Different Radices",
      "abstraction": "Base",
      "score": 0.47324252183563764,
      "original_score": 0.47324252183563764,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "119",
      "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
      "abstraction": "Class",
      "score": 0.47206829979647097,
      "original_score": 0.47206829979647097,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "abstraction": "Base",
      "score": 0.47108789643149285,
      "original_score": 0.47108789643149285,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "941",
      "name": "Incorrectly Specified Destination in a Communication Channel",
      "abstraction": "Base",
      "score": 0.4676336433964404,
      "original_score": 0.4676336433964404,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "406",
      "name": "Insufficient Control of Network Message Volume (Network Amplification)",
      "abstraction": "Class",
      "score": 0.4657231532338586,
      "original_score": 0.4657231532338586,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "696",
      "name": "Incorrect Behavior Order",
      "abstraction": "Class",
      "score": 0.46474962455601543,
      "original_score": 0.46474962455601543,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "abstraction": "Class",
      "score": 0.4643112829492854,
      "original_score": 0.4643112829492854,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "126",
      "name": "Buffer Over-read",
      "abstraction": "Variant",
      "score": 0.4642516326873571,
      "original_score": 0.4642516326873571,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 0.4642516326873571,
    "max": 0.5143859984975694,
    "mean": 0.4800579900339338,
    "median": 0.4764686380353844,
    "count": 20
  }
}