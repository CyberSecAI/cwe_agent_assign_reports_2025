{
  "cve_id": "CVE-2025-2713",
  "description": "Google gVisors runsc component exhibited a local **privilege escalation vulnerability** due to **incorrect handling of file access permissions**, which allowed unprivileged users to access restricted files. This occurred because the process initially ran with root-like permissions until the first fork.",
  "key_phrases": {
    "rootcause": "incorrect handling of file access permissions",
    "weakness": "privilege escalation vulnerability",
    "impact": [
      "local privilege escalation",
      "access restricted files"
    ],
    "vector": "",
    "attacker": "unprivileged users",
    "product": "Google gVisors runsc component",
    "version": "",
    "component": ""
  },
  "reference_content": "The content relates to a vulnerability in gVisor, specifically regarding file capabilities when creating a process from an image. Here's a breakdown of the information extracted:\n\n**Root cause of vulnerability:**\n\nThe code changes address how file capabilities are applied when a process is created from an image.  Specifically, the code now applies the image's file capabilities to the new process. Previously, this wasn't being done correctly, potentially leading to incorrect permissions or security issues.\n\n**Weaknesses/vulnerabilities present:**\n\nThe vulnerability stems from not correctly applying file capabilities when creating a process from an image. This could lead to a process having insufficient or incorrect capabilities, potentially allowing for privilege escalation or unauthorized access.\n\n**Impact of exploitation:**\n\nExploitation could result in a process having incorrect permissions, potentially leading to privilege escalation or unauthorized access to resources.\n\n**Attack vectors:**\n\nAn attacker could potentially exploit this by crafting a malicious image with specific file capabilities, and then creating a process from that image.  The process might then have unintended capabilities, allowing the attacker to perform actions they shouldn't be able to.\n\n**Required attacker capabilities/position:**\n\nThe attacker needs to be able to provide an image that is used to create a process. This could be through a containerization platform or other means of process creation.\n\n**Mitigation or fix:**\n\nThe code changes implement the following fixes:\n\n*   Adds support for reading file capabilities from images.\n*   Applies the file capabilities to the process being created.\n*   Handles different versions of file capability implementations (VFS\\_CAP\\_REVISION\\_1, VFS\\_CAP\\_REVISION\\_2, VFS\\_CAP\\_REVISION\\_3).\n*   Includes checks to ensure that capabilities are applied correctly, especially for root users.\n*   Adds tests to verify the correct application of file capabilities.\n*   Adds a new image `basic/filecap` for testing.\n\n**Additional Details:**\n\nThe content provides more detail than a typical CVE description, as it includes the specific code changes and tests that were implemented to address the vulnerability. The commit message indicates that the fix involves applying the image's file capabilities when creating a process. The tests added demonstrate how the fix is verified.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-732 | Incorrect Permission Assignment for Critical Resource | 0.8 | Class | Allowed-with-Review | Primary CWE. Focuses on incorrect permission assignment for critical resources. |\n| CWE-277 | Insecure Inherited Permissions | 0.6 | Variant | Allowed | Secondary Candidate. Relates to how permissions are inherited, which can be a factor in incorrect assignments. |\n| CWE-266 | Incorrect Privilege Assignment | 0.5 | Base | Allowed | Secondary Candidate. Could be involved if the incorrect permissions lead to privilege escalation. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.7\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary CWE is CWE-732, \"Incorrect Permission Assignment for Critical Resource.\" This is a Class-level CWE. CWE-277, \"Insecure Inherited Permissions,\" is a Variant and child of CWE-732. CWE-266, \"Incorrect Privilege Assignment\" is a Base level CWE that is related because incorrect permissions can lead to incorrect privileges.\n\n```mermaid\ngraph TD\n    cwe732[\"CWE-732: Incorrect Permission Assignment for Critical Resource\"]\n    cwe277[\"CWE-277: Insecure Inherited Permissions\"]\n    cwe266[\"CWE-266: Incorrect Privilege Assignment\"]\n    \n    cwe277 -->|CHILDOF| cwe732\n    cwe266 -->|RELATED_TO| cwe732\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe732 primary\n    class cwe277,cwe266 secondary\n```\n\n## Vulnerability Chain\nThe chain of events is as follows:\n1.  **ROOT CAUSE:** **Incorrect handling of file access permissions** (Implied by CWE-732).\n2.  Incorrect Permission Assignment (CWE-732) leads to\n3.  Privilege Escalation (Impact).\n\n## Summary of Analysis\nThe initial assessment focused on the **incorrect handling of file access permissions** leading to a **privilege escalation vulnerability**. The primary CWE selected is CWE-732 (Incorrect Permission Assignment for Critical Resource), as it directly addresses the root cause described in the vulnerability. The evidence supporting this is the vulnerability description stating \"incorrect handling of file access permissions\" allowed unprivileged users to access restricted files.\n\nThe retriever results also point to CWE-732 as a strong candidate. The guidance provided emphasizes distinguishing between privileges and permissions. In this case, the vulnerability stems from how permissions were incorrectly assigned to a resource, leading to privilege escalation.\n\nCWE-277 (Insecure Inherited Permissions) was considered because the issue could involve permissions being improperly inherited by new processes. However, the description focuses more on the initial assignment of permissions rather than inheritance.\n\nCWE-266 (Incorrect Privilege Assignment) was considered, but it is less specific than CWE-732, which directly addresses the resource permission issue. CWE-266 could be a consequence of the incorrect permission assignment, but CWE-732 is the more direct root cause.\n\nThe final selection is based on the evidence that the vulnerability involves the **incorrect handling of file access permissions**, making CWE-732 the most appropriate choice. This is further supported by the retriever results and the guidance on privileges vs. permissions.\n\nRelevant CWE Information:\n*   **CWE-732**: The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors. The vulnerability description explicitly mentions \"incorrect handling of file access permissions,\" aligning with the core concept of CWE-732.\n*   **CWE-277**: The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors. This is relevant if the permissions are inherited from some parent process.\n*   **CWE-266**: A product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor. This is relevant if incorrect permissions lead to privilege escalation.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-732 | Incorrect Permission Assignment for Critical Resource | 0.8 | Class | Allowed-with-Review | Primary CWE. Focuses on incorrect permission assignment for critical resources. |\n| CWE-277 | Insecure Inherited Permissions | 0.6 | Variant | Allowed | Secondary Candidate. Relates to how permissions are inherited, which can be a factor in incorrect assignments. |\n| CWE-266 | Incorrect Privilege Assignment | 0.5 | Base | Allowed | Secondary Candidate. Could be involved if the incorrect permissions lead to privilege escalation. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.7\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary CWE is CWE-732, \"Incorrect Permission Assignment for Critical Resource.\" This is a Class-level CWE. CWE-277, \"Insecure Inherited Permissions,\" is a Variant and child of CWE-732. CWE-266, \"Incorrect Privilege Assignment\" is a Base level CWE that is related because incorrect permissions can lead to incorrect privileges.\n\n```mermaid\ngraph TD\n    cwe732[\"CWE-732: Incorrect Permission Assignment for Critical Resource\"]\n    cwe277[\"CWE-277: Insecure Inherited Permissions\"]\n    cwe266[\"CWE-266: Incorrect Privilege Assignment\"]\n    \n    cwe277 -->|CHILDOF| cwe732\n    cwe266 -->|RELATED_TO| cwe732\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe732 primary\n    class cwe277,cwe266 secondary\n```\n\n## Vulnerability Chain\nThe chain of events is as follows:\n1.  **ROOT CAUSE:** **Incorrect handling of file access permissions** (Implied by CWE-732).\n2.  Incorrect Permission Assignment (CWE-732) leads to\n3.  Privilege Escalation (Impact).\n\n## Summary of Analysis\nThe initial assessment focused on the **incorrect handling of file access permissions** leading to a **privilege escalation vulnerability**. The primary CWE selected is CWE-732 (Incorrect Permission Assignment for Critical Resource), as it directly addresses the root cause described in the vulnerability. The evidence supporting this is the vulnerability description stating \"incorrect handling of file access permissions\" allowed unprivileged users to access restricted files.\n\nThe retriever results also point to CWE-732 as a strong candidate. The guidance provided emphasizes distinguishing between privileges and permissions. In this case, the vulnerability stems from how permissions were incorrectly assigned to a resource, leading to privilege escalation.\n\nCWE-277 (Insecure Inherited Permissions) was considered because the issue could involve permissions being improperly inherited by new processes. However, the description focuses more on the initial assignment of permissions rather than inheritance.\n\nCWE-266 (Incorrect Privilege Assignment) was considered, but it is less specific than CWE-732, which directly addresses the resource permission issue. CWE-266 could be a consequence of the incorrect permission assignment, but CWE-732 is the more direct root cause.\n\nThe final selection is based on the evidence that the vulnerability involves the **incorrect handling of file access permissions**, making CWE-732 the most appropriate choice. This is further supported by the retriever results and the guidance on privileges vs. permissions.\n\nRelevant CWE Information:\n*   **CWE-732**: The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors. The vulnerability description explicitly mentions \"incorrect handling of file access permissions,\" aligning with the core concept of CWE-732.\n*   **CWE-277**: The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors. This is relevant if the permissions are inherited from some parent process.\n*   **CWE-266**: A product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor. This is relevant if incorrect permissions lead to privilege escalation.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-277:**\n- 277 (Insecure Inherited Permissions) - ROOT\n\n\n**Chain starting from CWE-266:**\n- 266 (Incorrect Privilege Assignment) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "732",
        "name": "Incorrect Permission Assignment for Critical Resource",
        "source": "sparse"
      },
      "similarity": 281.5166103746836
    },
    {
      "metadata": {
        "doc_id": "277",
        "name": "Insecure Inherited Permissions",
        "source": "sparse"
      },
      "similarity": 271.7779650017332
    },
    {
      "metadata": {
        "doc_id": "276",
        "name": "Incorrect Default Permissions",
        "source": "sparse"
      },
      "similarity": 252.88606100997004
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 250.03478368110416
    },
    {
      "metadata": {
        "doc_id": "755",
        "name": "Improper Handling of Exceptional Conditions",
        "source": "sparse"
      },
      "similarity": 249.51945084053764
    },
    {
      "metadata": {
        "doc_id": "267",
        "name": "Privilege Defined With Unsafe Actions",
        "source": "sparse"
      },
      "similarity": 248.39051712380342
    },
    {
      "metadata": {
        "doc_id": "379",
        "name": "Creation of Temporary File in Directory with Insecure Permissions",
        "source": "sparse"
      },
      "similarity": 248.28307966004587
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 247.9869289920791
    },
    {
      "metadata": {
        "doc_id": "250",
        "name": "Execution with Unnecessary Privileges",
        "type": "Base",
        "original_content": "The product performs an operation at a privilege level that is higher than the minimum level required, which creates new weaknesses or amplifies the consequences of other weaknesses.",
        "keyphrase_source": "weakness:privilege escalation vulnerability",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "retriever_count": 3,
          "normalized_scores": {
            "dense": 0.5307145060647784,
            "sparse": 246.43100132161007,
            "graph": 1.7187728258324968
          }
        }
      },
      "similarity": 0.5307145060647784
    },
    {
      "doc_id": "123",
      "text": "CWE-123: Write-what-where Condition",
      "score": 2.7014000000000005,
      "metadata": {
        "doc_id": "123",
        "name": "Write-what-where Condition",
        "type": "base",
        "original_content": "CWE-123: Write-what-where Condition",
        "relationships": [
          {
            "source_id": "123",
            "target_id": "590",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "123",
            "target_id": "479",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "123",
            "target_id": "416",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "123",
            "target_id": "364",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "123",
            "target_id": "134",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "123",
            "target_id": "120",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "123",
            "target_id": "119",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1340"
            }
          },
          {
            "source_id": "123",
            "target_id": "119",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1305"
            }
          },
          {
            "source_id": "123",
            "target_id": "787",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "787",
            "target_id": "123",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "590",
            "target_id": "123",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "479",
            "target_id": "123",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "416",
            "target_id": "123",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "415",
            "target_id": "123",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "364",
            "target_id": "123",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "134",
            "target_id": "123",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "120",
            "target_id": "123",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "119",
            "target_id": "123",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1305"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0,
          "peer_group": 0.63
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "peer_relationship"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "416",
                  "123",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "416"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "416",
                  "123",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "416"
            },
            "peer_relationship": {
              "path": [
                [
                  "415",
                  "416",
                  "PEEROF"
                ],
                [
                  "415",
                  "123",
                  "PEEROF"
                ]
              ],
              "score": 0.63,
              "type": "peer_relationship",
              "source": "416"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.7014000000000005
          }
        }
      },
      "similarity": 2.7014000000000005
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-277",
      "CWE-266",
      "CWE-732"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}