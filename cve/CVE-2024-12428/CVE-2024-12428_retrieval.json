{
  "vulnerability_info": "VulnerabilityInfo(cve_id='CVE-2024-12428', description='The WP Data Access App, Table, Form and Chart Builder plugin plugin for WordPress is vulnerable to SQL Injection via the order[user_login][dir] parameter in all versions up to, and including, 5.5.22 due to **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**. This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.', key_phrases={'rootcause': ['insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query', 'insufficient escaping on user-supplied parameter'], 'weakness': 'SQL injection', 'impact': ['extract sensitive information from the database', 'append SQL queries'], 'vector': '', 'attacker': 'unauthenticated attackers', 'product': ['Form and Chart Builder plugin', 'WP Data Access App', 'Table'], 'version': 'up to and including 5.5.22', 'component': 'order[user_login][dir] parameter'}, reference_content=\"Based on the provided content, here's a breakdown of the vulnerability:\\n\\n**CVE ID:** CVE-2024-12428\\n\\n**Vulnerability Description:**\\nThe WP Data Access \u2013 App, Table, Form and Chart Builder plugin for WordPress is vulnerable to SQL Injection.\\n\\n**Root Cause:**\\nThe vulnerability stems from insufficient sanitization and escaping of user-supplied input within the `order[user_login][dir]` parameter. Specifically, the plugin doesn't properly sanitize the `dir` value before using it in an SQL query.\\n\\n**Weaknesses/Vulnerabilities Present:**\\n- **SQL Injection:** The primary vulnerability is an SQL injection, allowing an attacker to manipulate the SQL queries executed by the plugin. This is due to the lack of sufficient preparation of the existing SQL query and insufficient escaping of user-supplied input, allowing an attacker to append malicious SQL code.\\n\\n**Impact of Exploitation:**\\n- **Sensitive Information Disclosure:** An unauthenticated attacker can exploit this vulnerability to extract sensitive information from the database.\\n- **Potential for further attacks:** This could also be a starting point for more severe attacks, like data modification or complete takeover of the application.\\n\\n**Attack Vectors:**\\n- **Network:** The attack can be launched remotely over the network.\\n- **HTTP Parameter Manipulation:** The attacker injects malicious SQL code via the `order[user_login][dir]` parameter, which is part of the HTTP request.\\n\\n**Required Attacker Capabilities/Position:**\\n- **Unauthenticated Access:** The attacker does not need to be authenticated to exploit the vulnerability.\\n- **Network Access:** The attacker needs to be able to send HTTP requests to the vulnerable WordPress site.\\n\\n**Affected Versions:**\\n- All versions of the WP Data Access \u2013 App, Table, Form and Chart Builder plugin up to and including 5.5.22.\\n\\n**Patched Version:**\\n- Version 5.5.23\\n\\n**Additional Notes**\\n- The provided diff from the WordPress Plugin directory shows the fix involves adding `sanitize_sql_orderby` to the `column` parameter.\", similar_info={'cwe_distribution': {}, 'cwe_consensus': '', 'similarity_stats': {'thresholds': [], 'total_samples_by_threshold': {}, 'top_cwes_by_threshold': {}}}, similarity_summary=SimilarityInsight(consensus_cwe='', top_cwes=[], confidence_levels={}, total_samples=0), analysis='', analysis_with_relationships='', criticism='', resolution='', relevant_cwes=[{'metadata': {'doc_id': '116', 'name': 'Improper Encoding or Escaping of Output', 'source': 'sparse', 'original_content': 'The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.', 'keyphrase_sources': [{'id': 'rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query', 'keyphrase': 'insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query', 'type': 'rootcause'}, {'id': 'rootcause:insufficient escaping on user-supplied parameter', 'keyphrase': 'insufficient escaping on user-supplied parameter', 'type': 'rootcause'}, {'id': 'weakness:SQL injection', 'keyphrase': 'SQL injection', 'type': 'weakness'}, {'id': 'impact:extract sensitive information from the database', 'keyphrase': 'extract sensitive information from the database', 'type': 'impact'}, {'id': 'impact:append SQL queries', 'keyphrase': 'append SQL queries', 'type': 'impact'}, {'id': 'attacker:unauthenticated attackers', 'keyphrase': 'unauthenticated attackers', 'type': 'attacker'}, {'id': 'product:Form and Chart Builder plugin', 'keyphrase': 'Form and Chart Builder plugin', 'type': 'product'}, {'id': 'product:WP Data Access App', 'keyphrase': 'WP Data Access App', 'type': 'product'}, {'id': 'product:Table', 'keyphrase': 'Table', 'type': 'product'}, {'id': 'version:up to and including 5.5.22', 'keyphrase': 'up to and including 5.5.22', 'type': 'version'}, {'id': 'component:order[user_login][dir] parameter', 'keyphrase': 'order[user_login][dir] parameter', 'type': 'component'}]}, 'similarity': np.float64(761.6847897325956)}, {'metadata': {'doc_id': '89', 'name': \"Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\", 'source': 'sparse', 'original_content': 'The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.', 'keyphrase_sources': [{'id': 'rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query', 'keyphrase': 'insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query', 'type': 'rootcause'}, {'id': 'rootcause:insufficient escaping on user-supplied parameter', 'keyphrase': 'insufficient escaping on user-supplied parameter', 'type': 'rootcause'}, {'id': 'weakness:SQL injection', 'keyphrase': 'SQL injection', 'type': 'weakness'}, {'id': 'impact:extract sensitive information from the database', 'keyphrase': 'extract sensitive information from the database', 'type': 'impact'}, {'id': 'impact:append SQL queries', 'keyphrase': 'append SQL queries', 'type': 'impact'}, {'id': 'attacker:unauthenticated attackers', 'keyphrase': 'unauthenticated attackers', 'type': 'attacker'}, {'id': 'product:Form and Chart Builder plugin', 'keyphrase': 'Form and Chart Builder plugin', 'type': 'product'}, {'id': 'product:WP Data Access App', 'keyphrase': 'WP Data Access App', 'type': 'product'}, {'id': 'product:Table', 'keyphrase': 'Table', 'type': 'product'}, {'id': 'version:up to and including 5.5.22', 'keyphrase': 'up to and including 5.5.22', 'type': 'version'}, {'id': 'component:order[user_login][dir] parameter', 'keyphrase': 'order[user_login][dir] parameter', 'type': 'component'}]}, 'similarity': np.float64(748.3692930834397)}, {'metadata': {'doc_id': '352', 'name': 'Cross-Site Request Forgery (CSRF)', 'source': 'sparse', 'original_content': 'The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.', 'keyphrase_sources': [{'id': 'rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query', 'keyphrase': 'insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query', 'type': 'rootcause'}, {'id': 'rootcause:insufficient escaping on user-supplied parameter', 'keyphrase': 'insufficient escaping on user-supplied parameter', 'type': 'rootcause'}, {'id': 'weakness:SQL injection', 'keyphrase': 'SQL injection', 'type': 'weakness'}, {'id': 'impact:extract sensitive information from the database', 'keyphrase': 'extract sensitive information from the database', 'type': 'impact'}, {'id': 'impact:append SQL queries', 'keyphrase': 'append SQL queries', 'type': 'impact'}, {'id': 'attacker:unauthenticated attackers', 'keyphrase': 'unauthenticated attackers', 'type': 'attacker'}, {'id': 'product:Form and Chart Builder plugin', 'keyphrase': 'Form and Chart Builder plugin', 'type': 'product'}, {'id': 'product:WP Data Access App', 'keyphrase': 'WP Data Access App', 'type': 'product'}, {'id': 'product:Table', 'keyphrase': 'Table', 'type': 'product'}, {'id': 'version:up to and including 5.5.22', 'keyphrase': 'up to and including 5.5.22', 'type': 'version'}, {'id': 'component:order[user_login][dir] parameter', 'keyphrase': 'order[user_login][dir] parameter', 'type': 'component'}]}, 'similarity': np.float64(703.3266528989515)}, {'metadata': {'doc_id': '90', 'name': \"Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')\", 'source': 'sparse', 'original_content': 'The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.', 'keyphrase_sources': [{'id': 'rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query', 'keyphrase': 'insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query', 'type': 'rootcause'}, {'id': 'rootcause:insufficient escaping on user-supplied parameter', 'keyphrase': 'insufficient escaping on user-supplied parameter', 'type': 'rootcause'}, {'id': 'weakness:SQL injection', 'keyphrase': 'SQL injection', 'type': 'weakness'}, {'id': 'impact:extract sensitive information from the database', 'keyphrase': 'extract sensitive information from the database', 'type': 'impact'}, {'id': 'impact:append SQL queries', 'keyphrase': 'append SQL queries', 'type': 'impact'}, {'id': 'attacker:unauthenticated attackers', 'keyphrase': 'unauthenticated attackers', 'type': 'attacker'}, {'id': 'product:Table', 'keyphrase': 'Table', 'type': 'product'}, {'id': 'version:up to and including 5.5.22', 'keyphrase': 'up to and including 5.5.22', 'type': 'version'}, {'id': 'component:order[user_login][dir] parameter', 'keyphrase': 'order[user_login][dir] parameter', 'type': 'component'}]}, 'similarity': np.float64(684.1403889868592)}, {'metadata': {'doc_id': '790', 'name': 'Improper Filtering of Special Elements', 'source': 'sparse', 'original_content': 'The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.', 'keyphrase_sources': [{'id': 'rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query', 'keyphrase': 'insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query', 'type': 'rootcause'}, {'id': 'rootcause:insufficient escaping on user-supplied parameter', 'keyphrase': 'insufficient escaping on user-supplied parameter', 'type': 'rootcause'}, {'id': 'version:up to and including 5.5.22', 'keyphrase': 'up to and including 5.5.22', 'type': 'version'}]}, 'similarity': np.float64(644.1905176623654)}, {'metadata': {'doc_id': '502', 'name': 'Deserialization of Untrusted Data', 'source': 'sparse', 'original_content': 'The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.', 'keyphrase_sources': [{'id': 'weakness:SQL injection', 'keyphrase': 'SQL injection', 'type': 'weakness'}]}, 'similarity': np.float64(456.4925612836982)}, {'metadata': {'doc_id': '862', 'name': 'Missing Authorization', 'source': 'sparse', 'original_content': 'The product does not perform an authorization check when an actor attempts to access a resource or perform an action.', 'keyphrase_sources': [{'id': 'impact:extract sensitive information from the database', 'keyphrase': 'extract sensitive information from the database', 'type': 'impact'}, {'id': 'attacker:unauthenticated attackers', 'keyphrase': 'unauthenticated attackers', 'type': 'attacker'}, {'id': 'product:Form and Chart Builder plugin', 'keyphrase': 'Form and Chart Builder plugin', 'type': 'product'}, {'id': 'product:WP Data Access App', 'keyphrase': 'WP Data Access App', 'type': 'product'}, {'id': 'product:Table', 'keyphrase': 'Table', 'type': 'product'}]}, 'similarity': np.float64(172.6061075871963)}, {'metadata': {'doc_id': '943', 'name': 'Improper Neutralization of Special Elements in Data Query Logic', 'source': 'sparse', 'original_content': 'The product generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query.', 'keyphrase_sources': [{'id': 'impact:append SQL queries', 'keyphrase': 'append SQL queries', 'type': 'impact'}]}, 'similarity': np.float64(171.88017686605218)}, {'metadata': {'doc_id': '306', 'name': 'Missing Authentication for Critical Function', 'source': 'sparse', 'original_content': 'The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.', 'keyphrase_sources': [{'id': 'product:Form and Chart Builder plugin', 'keyphrase': 'Form and Chart Builder plugin', 'type': 'product'}]}, 'similarity': np.float64(171.7401939616121)}, {'metadata': {'doc_id': '434', 'name': 'Unrestricted Upload of File with Dangerous Type', 'source': 'sparse', 'original_content': 'The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.', 'keyphrase_sources': [{'id': 'product:WP Data Access App', 'keyphrase': 'WP Data Access App', 'type': 'product'}, {'id': 'component:order[user_login][dir] parameter', 'keyphrase': 'order[user_login][dir] parameter', 'type': 'component'}]}, 'similarity': np.float64(167.39935242654016)}], identified_cwes={'analyzer': [], 'critic_additional': []})",
  "retrieval_results": {
    "has_multiple_keyphrases": true,
    "keyphrase_cwe_sets": {
      "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query": {
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause",
        "cwes": [
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
              "keyphrase_sources": [
                {
                  "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
                  "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:insufficient escaping on user-supplied parameter",
                  "keyphrase": "insufficient escaping on user-supplied parameter",
                  "type": "rootcause"
                },
                {
                  "id": "weakness:SQL injection",
                  "keyphrase": "SQL injection",
                  "type": "weakness"
                },
                {
                  "id": "impact:extract sensitive information from the database",
                  "keyphrase": "extract sensitive information from the database",
                  "type": "impact"
                },
                {
                  "id": "impact:append SQL queries",
                  "keyphrase": "append SQL queries",
                  "type": "impact"
                },
                {
                  "id": "attacker:unauthenticated attackers",
                  "keyphrase": "unauthenticated attackers",
                  "type": "attacker"
                },
                {
                  "id": "product:Form and Chart Builder plugin",
                  "keyphrase": "Form and Chart Builder plugin",
                  "type": "product"
                },
                {
                  "id": "product:WP Data Access App",
                  "keyphrase": "WP Data Access App",
                  "type": "product"
                },
                {
                  "id": "product:Table",
                  "keyphrase": "Table",
                  "type": "product"
                },
                {
                  "id": "version:up to and including 5.5.22",
                  "keyphrase": "up to and including 5.5.22",
                  "type": "version"
                },
                {
                  "id": "component:order[user_login][dir] parameter",
                  "keyphrase": "order[user_login][dir] parameter",
                  "type": "component"
                }
              ]
            },
            "similarity": 761.6847897325956
          },
          {
            "metadata": {
              "doc_id": "89",
              "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
              "keyphrase_sources": [
                {
                  "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
                  "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:insufficient escaping on user-supplied parameter",
                  "keyphrase": "insufficient escaping on user-supplied parameter",
                  "type": "rootcause"
                },
                {
                  "id": "weakness:SQL injection",
                  "keyphrase": "SQL injection",
                  "type": "weakness"
                },
                {
                  "id": "impact:extract sensitive information from the database",
                  "keyphrase": "extract sensitive information from the database",
                  "type": "impact"
                },
                {
                  "id": "impact:append SQL queries",
                  "keyphrase": "append SQL queries",
                  "type": "impact"
                },
                {
                  "id": "attacker:unauthenticated attackers",
                  "keyphrase": "unauthenticated attackers",
                  "type": "attacker"
                },
                {
                  "id": "product:Form and Chart Builder plugin",
                  "keyphrase": "Form and Chart Builder plugin",
                  "type": "product"
                },
                {
                  "id": "product:WP Data Access App",
                  "keyphrase": "WP Data Access App",
                  "type": "product"
                },
                {
                  "id": "product:Table",
                  "keyphrase": "Table",
                  "type": "product"
                },
                {
                  "id": "version:up to and including 5.5.22",
                  "keyphrase": "up to and including 5.5.22",
                  "type": "version"
                },
                {
                  "id": "component:order[user_login][dir] parameter",
                  "keyphrase": "order[user_login][dir] parameter",
                  "type": "component"
                }
              ]
            },
            "similarity": 748.3692930834397
          },
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
              "keyphrase_sources": [
                {
                  "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
                  "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:insufficient escaping on user-supplied parameter",
                  "keyphrase": "insufficient escaping on user-supplied parameter",
                  "type": "rootcause"
                },
                {
                  "id": "weakness:SQL injection",
                  "keyphrase": "SQL injection",
                  "type": "weakness"
                },
                {
                  "id": "impact:extract sensitive information from the database",
                  "keyphrase": "extract sensitive information from the database",
                  "type": "impact"
                },
                {
                  "id": "impact:append SQL queries",
                  "keyphrase": "append SQL queries",
                  "type": "impact"
                },
                {
                  "id": "attacker:unauthenticated attackers",
                  "keyphrase": "unauthenticated attackers",
                  "type": "attacker"
                },
                {
                  "id": "product:Form and Chart Builder plugin",
                  "keyphrase": "Form and Chart Builder plugin",
                  "type": "product"
                },
                {
                  "id": "product:WP Data Access App",
                  "keyphrase": "WP Data Access App",
                  "type": "product"
                },
                {
                  "id": "product:Table",
                  "keyphrase": "Table",
                  "type": "product"
                },
                {
                  "id": "version:up to and including 5.5.22",
                  "keyphrase": "up to and including 5.5.22",
                  "type": "version"
                },
                {
                  "id": "component:order[user_login][dir] parameter",
                  "keyphrase": "order[user_login][dir] parameter",
                  "type": "component"
                }
              ]
            },
            "similarity": 703.3266528989515
          },
          {
            "metadata": {
              "doc_id": "90",
              "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.",
              "keyphrase_sources": [
                {
                  "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
                  "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:insufficient escaping on user-supplied parameter",
                  "keyphrase": "insufficient escaping on user-supplied parameter",
                  "type": "rootcause"
                },
                {
                  "id": "weakness:SQL injection",
                  "keyphrase": "SQL injection",
                  "type": "weakness"
                },
                {
                  "id": "impact:extract sensitive information from the database",
                  "keyphrase": "extract sensitive information from the database",
                  "type": "impact"
                },
                {
                  "id": "impact:append SQL queries",
                  "keyphrase": "append SQL queries",
                  "type": "impact"
                },
                {
                  "id": "attacker:unauthenticated attackers",
                  "keyphrase": "unauthenticated attackers",
                  "type": "attacker"
                },
                {
                  "id": "product:Table",
                  "keyphrase": "Table",
                  "type": "product"
                },
                {
                  "id": "version:up to and including 5.5.22",
                  "keyphrase": "up to and including 5.5.22",
                  "type": "version"
                },
                {
                  "id": "component:order[user_login][dir] parameter",
                  "keyphrase": "order[user_login][dir] parameter",
                  "type": "component"
                }
              ]
            },
            "similarity": 684.1403889868592
          },
          {
            "metadata": {
              "doc_id": "790",
              "name": "Improper Filtering of Special Elements",
              "source": "sparse",
              "original_content": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
              "keyphrase_sources": [
                {
                  "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
                  "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:insufficient escaping on user-supplied parameter",
                  "keyphrase": "insufficient escaping on user-supplied parameter",
                  "type": "rootcause"
                },
                {
                  "id": "version:up to and including 5.5.22",
                  "keyphrase": "up to and including 5.5.22",
                  "type": "version"
                }
              ]
            },
            "similarity": 644.1905176623654
          }
        ]
      },
      "rootcause:insufficient escaping on user-supplied parameter": {
        "keyphrase": "insufficient escaping on user-supplied parameter",
        "type": "rootcause",
        "cwes": [
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 619.1965534669608
          },
          {
            "metadata": {
              "doc_id": "89",
              "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data."
            },
            "similarity": 579.5556338165864
          },
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 561.6575881838992
          },
          {
            "metadata": {
              "doc_id": "90",
              "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component."
            },
            "similarity": 541.6820168754695
          },
          {
            "metadata": {
              "doc_id": "790",
              "name": "Improper Filtering of Special Elements",
              "source": "sparse",
              "original_content": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component."
            },
            "similarity": 529.5692497415092
          }
        ]
      },
      "weakness:SQL injection": {
        "keyphrase": "SQL injection",
        "type": "weakness",
        "cwes": [
          {
            "metadata": {
              "doc_id": "89",
              "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data."
            },
            "similarity": 548.3225272529359
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 505.33278567677763
          },
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 464.60002041567486
          },
          {
            "metadata": {
              "doc_id": "502",
              "name": "Deserialization of Untrusted Data",
              "source": "sparse",
              "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.",
              "keyphrase_sources": [
                {
                  "id": "weakness:SQL injection",
                  "keyphrase": "SQL injection",
                  "type": "weakness"
                }
              ]
            },
            "similarity": 456.4925612836982
          },
          {
            "metadata": {
              "doc_id": "90",
              "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component."
            },
            "similarity": 455.5386598396244
          }
        ]
      },
      "impact:extract sensitive information from the database": {
        "keyphrase": "extract sensitive information from the database",
        "type": "impact",
        "cwes": [
          {
            "metadata": {
              "doc_id": "89",
              "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data."
            },
            "similarity": 200.6298844085431
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 180.9113966488898
          },
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 174.28872147335414
          },
          {
            "metadata": {
              "doc_id": "90",
              "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component."
            },
            "similarity": 173.5173858377616
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
              "keyphrase_sources": [
                {
                  "id": "impact:extract sensitive information from the database",
                  "keyphrase": "extract sensitive information from the database",
                  "type": "impact"
                },
                {
                  "id": "attacker:unauthenticated attackers",
                  "keyphrase": "unauthenticated attackers",
                  "type": "attacker"
                },
                {
                  "id": "product:Form and Chart Builder plugin",
                  "keyphrase": "Form and Chart Builder plugin",
                  "type": "product"
                },
                {
                  "id": "product:WP Data Access App",
                  "keyphrase": "WP Data Access App",
                  "type": "product"
                },
                {
                  "id": "product:Table",
                  "keyphrase": "Table",
                  "type": "product"
                }
              ]
            },
            "similarity": 172.6061075871963
          }
        ]
      },
      "impact:append SQL queries": {
        "keyphrase": "append SQL queries",
        "type": "impact",
        "cwes": [
          {
            "metadata": {
              "doc_id": "89",
              "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data."
            },
            "similarity": 190.46527129722898
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 176.8357287902193
          },
          {
            "metadata": {
              "doc_id": "943",
              "name": "Improper Neutralization of Special Elements in Data Query Logic",
              "source": "sparse",
              "original_content": "The product generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query.",
              "keyphrase_sources": [
                {
                  "id": "impact:append SQL queries",
                  "keyphrase": "append SQL queries",
                  "type": "impact"
                }
              ]
            },
            "similarity": 171.88017686605218
          },
          {
            "metadata": {
              "doc_id": "90",
              "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component."
            },
            "similarity": 167.3487303078278
          },
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 165.2355852579169
          }
        ]
      },
      "attacker:unauthenticated attackers": {
        "keyphrase": "unauthenticated attackers",
        "type": "attacker",
        "cwes": [
          {
            "metadata": {
              "doc_id": "89",
              "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data."
            },
            "similarity": 179.2309762142329
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 171.02286337986138
          },
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 167.66369220738466
          },
          {
            "metadata": {
              "doc_id": "90",
              "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component."
            },
            "similarity": 160.04922113058723
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action."
            },
            "similarity": 158.96054643136486
          }
        ]
      },
      "product:Form and Chart Builder plugin": {
        "keyphrase": "Form and Chart Builder plugin",
        "type": "product",
        "cwes": [
          {
            "metadata": {
              "doc_id": "89",
              "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data."
            },
            "similarity": 194.1371698775065
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 185.44129482187728
          },
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 184.66678735521873
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action."
            },
            "similarity": 175.0345786325207
          },
          {
            "metadata": {
              "doc_id": "306",
              "name": "Missing Authentication for Critical Function",
              "source": "sparse",
              "original_content": "The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.",
              "keyphrase_sources": [
                {
                  "id": "product:Form and Chart Builder plugin",
                  "keyphrase": "Form and Chart Builder plugin",
                  "type": "product"
                }
              ]
            },
            "similarity": 171.7401939616121
          }
        ]
      },
      "product:WP Data Access App": {
        "keyphrase": "WP Data Access App",
        "type": "product",
        "cwes": [
          {
            "metadata": {
              "doc_id": "89",
              "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data."
            },
            "similarity": 185.808788687888
          },
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 177.65969848182516
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 173.90833935996395
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action."
            },
            "similarity": 169.06208051241603
          },
          {
            "metadata": {
              "doc_id": "434",
              "name": "Unrestricted Upload of File with Dangerous Type",
              "source": "sparse",
              "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
              "keyphrase_sources": [
                {
                  "id": "product:WP Data Access App",
                  "keyphrase": "WP Data Access App",
                  "type": "product"
                },
                {
                  "id": "component:order[user_login][dir] parameter",
                  "keyphrase": "order[user_login][dir] parameter",
                  "type": "component"
                }
              ]
            },
            "similarity": 167.39935242654016
          }
        ]
      },
      "product:Table": {
        "keyphrase": "Table",
        "type": "product",
        "cwes": [
          {
            "metadata": {
              "doc_id": "89",
              "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data."
            },
            "similarity": 175.55082692655452
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 167.10163813534834
          },
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 162.61828789955524
          },
          {
            "metadata": {
              "doc_id": "90",
              "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component."
            },
            "similarity": 154.69361848651306
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action."
            },
            "similarity": 154.38826530671335
          }
        ]
      },
      "version:up to and including 5.5.22": {
        "keyphrase": "up to and including 5.5.22",
        "type": "version",
        "cwes": [
          {
            "metadata": {
              "doc_id": "89",
              "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data."
            },
            "similarity": 198.75268353610807
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 197.23580144547705
          },
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 188.86075327027982
          },
          {
            "metadata": {
              "doc_id": "90",
              "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component."
            },
            "similarity": 184.5939297135692
          },
          {
            "metadata": {
              "doc_id": "790",
              "name": "Improper Filtering of Special Elements",
              "source": "sparse",
              "original_content": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component."
            },
            "similarity": 184.1825396808828
          }
        ]
      },
      "component:order[user_login][dir] parameter": {
        "keyphrase": "order[user_login][dir] parameter",
        "type": "component",
        "cwes": [
          {
            "metadata": {
              "doc_id": "89",
              "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data."
            },
            "similarity": 184.4016228438598
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 173.66629523887846
          },
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 166.8273528499712
          },
          {
            "metadata": {
              "doc_id": "434",
              "name": "Unrestricted Upload of File with Dangerous Type",
              "source": "sparse",
              "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment."
            },
            "similarity": 162.91721550465647
          },
          {
            "metadata": {
              "doc_id": "90",
              "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component."
            },
            "similarity": 160.69285924656077
          }
        ]
      }
    },
    "keyphrase_mapping": {
      "116": [
        {
          "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
          "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
          "type": "rootcause"
        },
        {
          "id": "rootcause:insufficient escaping on user-supplied parameter",
          "keyphrase": "insufficient escaping on user-supplied parameter",
          "type": "rootcause"
        },
        {
          "id": "weakness:SQL injection",
          "keyphrase": "SQL injection",
          "type": "weakness"
        },
        {
          "id": "impact:extract sensitive information from the database",
          "keyphrase": "extract sensitive information from the database",
          "type": "impact"
        },
        {
          "id": "impact:append SQL queries",
          "keyphrase": "append SQL queries",
          "type": "impact"
        },
        {
          "id": "attacker:unauthenticated attackers",
          "keyphrase": "unauthenticated attackers",
          "type": "attacker"
        },
        {
          "id": "product:Form and Chart Builder plugin",
          "keyphrase": "Form and Chart Builder plugin",
          "type": "product"
        },
        {
          "id": "product:WP Data Access App",
          "keyphrase": "WP Data Access App",
          "type": "product"
        },
        {
          "id": "product:Table",
          "keyphrase": "Table",
          "type": "product"
        },
        {
          "id": "version:up to and including 5.5.22",
          "keyphrase": "up to and including 5.5.22",
          "type": "version"
        },
        {
          "id": "component:order[user_login][dir] parameter",
          "keyphrase": "order[user_login][dir] parameter",
          "type": "component"
        }
      ],
      "89": [
        {
          "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
          "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
          "type": "rootcause"
        },
        {
          "id": "rootcause:insufficient escaping on user-supplied parameter",
          "keyphrase": "insufficient escaping on user-supplied parameter",
          "type": "rootcause"
        },
        {
          "id": "weakness:SQL injection",
          "keyphrase": "SQL injection",
          "type": "weakness"
        },
        {
          "id": "impact:extract sensitive information from the database",
          "keyphrase": "extract sensitive information from the database",
          "type": "impact"
        },
        {
          "id": "impact:append SQL queries",
          "keyphrase": "append SQL queries",
          "type": "impact"
        },
        {
          "id": "attacker:unauthenticated attackers",
          "keyphrase": "unauthenticated attackers",
          "type": "attacker"
        },
        {
          "id": "product:Form and Chart Builder plugin",
          "keyphrase": "Form and Chart Builder plugin",
          "type": "product"
        },
        {
          "id": "product:WP Data Access App",
          "keyphrase": "WP Data Access App",
          "type": "product"
        },
        {
          "id": "product:Table",
          "keyphrase": "Table",
          "type": "product"
        },
        {
          "id": "version:up to and including 5.5.22",
          "keyphrase": "up to and including 5.5.22",
          "type": "version"
        },
        {
          "id": "component:order[user_login][dir] parameter",
          "keyphrase": "order[user_login][dir] parameter",
          "type": "component"
        }
      ],
      "352": [
        {
          "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
          "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
          "type": "rootcause"
        },
        {
          "id": "rootcause:insufficient escaping on user-supplied parameter",
          "keyphrase": "insufficient escaping on user-supplied parameter",
          "type": "rootcause"
        },
        {
          "id": "weakness:SQL injection",
          "keyphrase": "SQL injection",
          "type": "weakness"
        },
        {
          "id": "impact:extract sensitive information from the database",
          "keyphrase": "extract sensitive information from the database",
          "type": "impact"
        },
        {
          "id": "impact:append SQL queries",
          "keyphrase": "append SQL queries",
          "type": "impact"
        },
        {
          "id": "attacker:unauthenticated attackers",
          "keyphrase": "unauthenticated attackers",
          "type": "attacker"
        },
        {
          "id": "product:Form and Chart Builder plugin",
          "keyphrase": "Form and Chart Builder plugin",
          "type": "product"
        },
        {
          "id": "product:WP Data Access App",
          "keyphrase": "WP Data Access App",
          "type": "product"
        },
        {
          "id": "product:Table",
          "keyphrase": "Table",
          "type": "product"
        },
        {
          "id": "version:up to and including 5.5.22",
          "keyphrase": "up to and including 5.5.22",
          "type": "version"
        },
        {
          "id": "component:order[user_login][dir] parameter",
          "keyphrase": "order[user_login][dir] parameter",
          "type": "component"
        }
      ],
      "90": [
        {
          "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
          "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
          "type": "rootcause"
        },
        {
          "id": "rootcause:insufficient escaping on user-supplied parameter",
          "keyphrase": "insufficient escaping on user-supplied parameter",
          "type": "rootcause"
        },
        {
          "id": "weakness:SQL injection",
          "keyphrase": "SQL injection",
          "type": "weakness"
        },
        {
          "id": "impact:extract sensitive information from the database",
          "keyphrase": "extract sensitive information from the database",
          "type": "impact"
        },
        {
          "id": "impact:append SQL queries",
          "keyphrase": "append SQL queries",
          "type": "impact"
        },
        {
          "id": "attacker:unauthenticated attackers",
          "keyphrase": "unauthenticated attackers",
          "type": "attacker"
        },
        {
          "id": "product:Table",
          "keyphrase": "Table",
          "type": "product"
        },
        {
          "id": "version:up to and including 5.5.22",
          "keyphrase": "up to and including 5.5.22",
          "type": "version"
        },
        {
          "id": "component:order[user_login][dir] parameter",
          "keyphrase": "order[user_login][dir] parameter",
          "type": "component"
        }
      ],
      "790": [
        {
          "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
          "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
          "type": "rootcause"
        },
        {
          "id": "rootcause:insufficient escaping on user-supplied parameter",
          "keyphrase": "insufficient escaping on user-supplied parameter",
          "type": "rootcause"
        },
        {
          "id": "version:up to and including 5.5.22",
          "keyphrase": "up to and including 5.5.22",
          "type": "version"
        }
      ],
      "502": [
        {
          "id": "weakness:SQL injection",
          "keyphrase": "SQL injection",
          "type": "weakness"
        }
      ],
      "862": [
        {
          "id": "impact:extract sensitive information from the database",
          "keyphrase": "extract sensitive information from the database",
          "type": "impact"
        },
        {
          "id": "attacker:unauthenticated attackers",
          "keyphrase": "unauthenticated attackers",
          "type": "attacker"
        },
        {
          "id": "product:Form and Chart Builder plugin",
          "keyphrase": "Form and Chart Builder plugin",
          "type": "product"
        },
        {
          "id": "product:WP Data Access App",
          "keyphrase": "WP Data Access App",
          "type": "product"
        },
        {
          "id": "product:Table",
          "keyphrase": "Table",
          "type": "product"
        }
      ],
      "943": [
        {
          "id": "impact:append SQL queries",
          "keyphrase": "append SQL queries",
          "type": "impact"
        }
      ],
      "306": [
        {
          "id": "product:Form and Chart Builder plugin",
          "keyphrase": "Form and Chart Builder plugin",
          "type": "product"
        }
      ],
      "434": [
        {
          "id": "product:WP Data Access App",
          "keyphrase": "WP Data Access App",
          "type": "product"
        },
        {
          "id": "component:order[user_login][dir] parameter",
          "keyphrase": "order[user_login][dir] parameter",
          "type": "component"
        }
      ]
    },
    "relevant_cwes": [
      {
        "metadata": {
          "doc_id": "116",
          "name": "Improper Encoding or Escaping of Output",
          "source": "sparse",
          "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
          "keyphrase_sources": [
            {
              "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
              "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
              "type": "rootcause"
            },
            {
              "id": "rootcause:insufficient escaping on user-supplied parameter",
              "keyphrase": "insufficient escaping on user-supplied parameter",
              "type": "rootcause"
            },
            {
              "id": "weakness:SQL injection",
              "keyphrase": "SQL injection",
              "type": "weakness"
            },
            {
              "id": "impact:extract sensitive information from the database",
              "keyphrase": "extract sensitive information from the database",
              "type": "impact"
            },
            {
              "id": "impact:append SQL queries",
              "keyphrase": "append SQL queries",
              "type": "impact"
            },
            {
              "id": "attacker:unauthenticated attackers",
              "keyphrase": "unauthenticated attackers",
              "type": "attacker"
            },
            {
              "id": "product:Form and Chart Builder plugin",
              "keyphrase": "Form and Chart Builder plugin",
              "type": "product"
            },
            {
              "id": "product:WP Data Access App",
              "keyphrase": "WP Data Access App",
              "type": "product"
            },
            {
              "id": "product:Table",
              "keyphrase": "Table",
              "type": "product"
            },
            {
              "id": "version:up to and including 5.5.22",
              "keyphrase": "up to and including 5.5.22",
              "type": "version"
            },
            {
              "id": "component:order[user_login][dir] parameter",
              "keyphrase": "order[user_login][dir] parameter",
              "type": "component"
            }
          ]
        },
        "similarity": 761.6847897325956
      },
      {
        "metadata": {
          "doc_id": "89",
          "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
          "source": "sparse",
          "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
          "keyphrase_sources": [
            {
              "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
              "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
              "type": "rootcause"
            },
            {
              "id": "rootcause:insufficient escaping on user-supplied parameter",
              "keyphrase": "insufficient escaping on user-supplied parameter",
              "type": "rootcause"
            },
            {
              "id": "weakness:SQL injection",
              "keyphrase": "SQL injection",
              "type": "weakness"
            },
            {
              "id": "impact:extract sensitive information from the database",
              "keyphrase": "extract sensitive information from the database",
              "type": "impact"
            },
            {
              "id": "impact:append SQL queries",
              "keyphrase": "append SQL queries",
              "type": "impact"
            },
            {
              "id": "attacker:unauthenticated attackers",
              "keyphrase": "unauthenticated attackers",
              "type": "attacker"
            },
            {
              "id": "product:Form and Chart Builder plugin",
              "keyphrase": "Form and Chart Builder plugin",
              "type": "product"
            },
            {
              "id": "product:WP Data Access App",
              "keyphrase": "WP Data Access App",
              "type": "product"
            },
            {
              "id": "product:Table",
              "keyphrase": "Table",
              "type": "product"
            },
            {
              "id": "version:up to and including 5.5.22",
              "keyphrase": "up to and including 5.5.22",
              "type": "version"
            },
            {
              "id": "component:order[user_login][dir] parameter",
              "keyphrase": "order[user_login][dir] parameter",
              "type": "component"
            }
          ]
        },
        "similarity": 748.3692930834397
      },
      {
        "metadata": {
          "doc_id": "352",
          "name": "Cross-Site Request Forgery (CSRF)",
          "source": "sparse",
          "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
          "keyphrase_sources": [
            {
              "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
              "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
              "type": "rootcause"
            },
            {
              "id": "rootcause:insufficient escaping on user-supplied parameter",
              "keyphrase": "insufficient escaping on user-supplied parameter",
              "type": "rootcause"
            },
            {
              "id": "weakness:SQL injection",
              "keyphrase": "SQL injection",
              "type": "weakness"
            },
            {
              "id": "impact:extract sensitive information from the database",
              "keyphrase": "extract sensitive information from the database",
              "type": "impact"
            },
            {
              "id": "impact:append SQL queries",
              "keyphrase": "append SQL queries",
              "type": "impact"
            },
            {
              "id": "attacker:unauthenticated attackers",
              "keyphrase": "unauthenticated attackers",
              "type": "attacker"
            },
            {
              "id": "product:Form and Chart Builder plugin",
              "keyphrase": "Form and Chart Builder plugin",
              "type": "product"
            },
            {
              "id": "product:WP Data Access App",
              "keyphrase": "WP Data Access App",
              "type": "product"
            },
            {
              "id": "product:Table",
              "keyphrase": "Table",
              "type": "product"
            },
            {
              "id": "version:up to and including 5.5.22",
              "keyphrase": "up to and including 5.5.22",
              "type": "version"
            },
            {
              "id": "component:order[user_login][dir] parameter",
              "keyphrase": "order[user_login][dir] parameter",
              "type": "component"
            }
          ]
        },
        "similarity": 703.3266528989515
      },
      {
        "metadata": {
          "doc_id": "90",
          "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
          "source": "sparse",
          "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.",
          "keyphrase_sources": [
            {
              "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
              "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
              "type": "rootcause"
            },
            {
              "id": "rootcause:insufficient escaping on user-supplied parameter",
              "keyphrase": "insufficient escaping on user-supplied parameter",
              "type": "rootcause"
            },
            {
              "id": "weakness:SQL injection",
              "keyphrase": "SQL injection",
              "type": "weakness"
            },
            {
              "id": "impact:extract sensitive information from the database",
              "keyphrase": "extract sensitive information from the database",
              "type": "impact"
            },
            {
              "id": "impact:append SQL queries",
              "keyphrase": "append SQL queries",
              "type": "impact"
            },
            {
              "id": "attacker:unauthenticated attackers",
              "keyphrase": "unauthenticated attackers",
              "type": "attacker"
            },
            {
              "id": "product:Table",
              "keyphrase": "Table",
              "type": "product"
            },
            {
              "id": "version:up to and including 5.5.22",
              "keyphrase": "up to and including 5.5.22",
              "type": "version"
            },
            {
              "id": "component:order[user_login][dir] parameter",
              "keyphrase": "order[user_login][dir] parameter",
              "type": "component"
            }
          ]
        },
        "similarity": 684.1403889868592
      },
      {
        "metadata": {
          "doc_id": "790",
          "name": "Improper Filtering of Special Elements",
          "source": "sparse",
          "original_content": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
          "keyphrase_sources": [
            {
              "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
              "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
              "type": "rootcause"
            },
            {
              "id": "rootcause:insufficient escaping on user-supplied parameter",
              "keyphrase": "insufficient escaping on user-supplied parameter",
              "type": "rootcause"
            },
            {
              "id": "version:up to and including 5.5.22",
              "keyphrase": "up to and including 5.5.22",
              "type": "version"
            }
          ]
        },
        "similarity": 644.1905176623654
      },
      {
        "metadata": {
          "doc_id": "502",
          "name": "Deserialization of Untrusted Data",
          "source": "sparse",
          "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.",
          "keyphrase_sources": [
            {
              "id": "weakness:SQL injection",
              "keyphrase": "SQL injection",
              "type": "weakness"
            }
          ]
        },
        "similarity": 456.4925612836982
      },
      {
        "metadata": {
          "doc_id": "862",
          "name": "Missing Authorization",
          "source": "sparse",
          "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
          "keyphrase_sources": [
            {
              "id": "impact:extract sensitive information from the database",
              "keyphrase": "extract sensitive information from the database",
              "type": "impact"
            },
            {
              "id": "attacker:unauthenticated attackers",
              "keyphrase": "unauthenticated attackers",
              "type": "attacker"
            },
            {
              "id": "product:Form and Chart Builder plugin",
              "keyphrase": "Form and Chart Builder plugin",
              "type": "product"
            },
            {
              "id": "product:WP Data Access App",
              "keyphrase": "WP Data Access App",
              "type": "product"
            },
            {
              "id": "product:Table",
              "keyphrase": "Table",
              "type": "product"
            }
          ]
        },
        "similarity": 172.6061075871963
      },
      {
        "metadata": {
          "doc_id": "943",
          "name": "Improper Neutralization of Special Elements in Data Query Logic",
          "source": "sparse",
          "original_content": "The product generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query.",
          "keyphrase_sources": [
            {
              "id": "impact:append SQL queries",
              "keyphrase": "append SQL queries",
              "type": "impact"
            }
          ]
        },
        "similarity": 171.88017686605218
      },
      {
        "metadata": {
          "doc_id": "306",
          "name": "Missing Authentication for Critical Function",
          "source": "sparse",
          "original_content": "The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.",
          "keyphrase_sources": [
            {
              "id": "product:Form and Chart Builder plugin",
              "keyphrase": "Form and Chart Builder plugin",
              "type": "product"
            }
          ]
        },
        "similarity": 171.7401939616121
      },
      {
        "metadata": {
          "doc_id": "434",
          "name": "Unrestricted Upload of File with Dangerous Type",
          "source": "sparse",
          "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
          "keyphrase_sources": [
            {
              "id": "product:WP Data Access App",
              "keyphrase": "WP Data Access App",
              "type": "product"
            },
            {
              "id": "component:order[user_login][dir] parameter",
              "keyphrase": "order[user_login][dir] parameter",
              "type": "component"
            }
          ]
        },
        "similarity": 167.39935242654016
      }
    ],
    "enhanced_query": "# Vulnerability Description\n\n    The WP Data Access App, Table, Form and Chart Builder plugin plugin for WordPress is vulnerable to SQL Injection via the order[user_login][dir] parameter in all versions up to, and including, 5.5.22 due to **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**. This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.\n\n    # Keyphrase-Specific CWE Analysis\n    This vulnerability contains multiple keyphrases that may map to different CWEs. \n    Please analyze each keyphrase separately and determine the most appropriate CWE(s) for each.\n\n    ## ROOTCAUSE: 'insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query'\n\nRelevant CWEs for this ROOTCAUSE:\n\n### 1. CWE-116: Improper Encoding or Escaping of Output (Score: 761.68)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 2. CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (Score: 748.37)\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal o...\n\n### 3. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 703.33)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 4. CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection') (Score: 684.14)\n\nThe product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component....\n\n### 5. CWE-790: Improper Filtering of Special Elements (Score: 644.19)\n\nThe product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component....\n\n## ROOTCAUSE: 'insufficient escaping on user-supplied parameter'\n\nRelevant CWEs for this ROOTCAUSE:\n\n### 1. CWE-116: Improper Encoding or Escaping of Output (Score: 761.68)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 2. CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (Score: 748.37)\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal o...\n\n### 3. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 703.33)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 4. CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection') (Score: 684.14)\n\nThe product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component....\n\n### 5. CWE-790: Improper Filtering of Special Elements (Score: 644.19)\n\nThe product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component....\n\n## WEAKNESS: 'SQL injection'\n\nRelevant CWEs for this WEAKNESS:\n\n### 1. CWE-116: Improper Encoding or Escaping of Output (Score: 761.68)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 2. CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (Score: 748.37)\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal o...\n\n### 3. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 703.33)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 4. CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection') (Score: 684.14)\n\nThe product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component....\n\n### 5. CWE-502: Deserialization of Untrusted Data (Score: 456.49)\n\nThe product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid....\n\n## IMPACT: 'extract sensitive information from the database'\n\nRelevant CWEs for this IMPACT:\n\n### 1. CWE-116: Improper Encoding or Escaping of Output (Score: 761.68)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 2. CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (Score: 748.37)\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal o...\n\n### 3. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 703.33)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 4. CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection') (Score: 684.14)\n\nThe product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component....\n\n### 5. CWE-862: Missing Authorization (Score: 172.61)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n## IMPACT: 'append SQL queries'\n\nRelevant CWEs for this IMPACT:\n\n### 1. CWE-116: Improper Encoding or Escaping of Output (Score: 761.68)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 2. CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (Score: 748.37)\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal o...\n\n### 3. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 703.33)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 4. CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection') (Score: 684.14)\n\nThe product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component....\n\n### 5. CWE-943: Improper Neutralization of Special Elements in Data Query Logic (Score: 171.88)\n\nThe product generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query....\n\n## ATTACKER: 'unauthenticated attackers'\n\nRelevant CWEs for this ATTACKER:\n\n### 1. CWE-116: Improper Encoding or Escaping of Output (Score: 761.68)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 2. CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (Score: 748.37)\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal o...\n\n### 3. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 703.33)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 4. CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection') (Score: 684.14)\n\nThe product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component....\n\n### 5. CWE-862: Missing Authorization (Score: 172.61)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n## PRODUCT: 'Form and Chart Builder plugin'\n\nRelevant CWEs for this PRODUCT:\n\n### 1. CWE-116: Improper Encoding or Escaping of Output (Score: 761.68)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 2. CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (Score: 748.37)\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal o...\n\n### 3. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 703.33)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 4. CWE-862: Missing Authorization (Score: 172.61)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n### 5. CWE-306: Missing Authentication for Critical Function (Score: 171.74)\n\nThe product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources....\n\n## PRODUCT: 'WP Data Access App'\n\nRelevant CWEs for this PRODUCT:\n\n### 1. CWE-116: Improper Encoding or Escaping of Output (Score: 761.68)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 2. CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (Score: 748.37)\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal o...\n\n### 3. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 703.33)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 4. CWE-862: Missing Authorization (Score: 172.61)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n### 5. CWE-434: Unrestricted Upload of File with Dangerous Type (Score: 167.40)\n\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment....\n\n## PRODUCT: 'Table'\n\nRelevant CWEs for this PRODUCT:\n\n### 1. CWE-116: Improper Encoding or Escaping of Output (Score: 761.68)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 2. CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (Score: 748.37)\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal o...\n\n### 3. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 703.33)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 4. CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection') (Score: 684.14)\n\nThe product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component....\n\n### 5. CWE-862: Missing Authorization (Score: 172.61)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n## VERSION: 'up to and including 5.5.22'\n\nRelevant CWEs for this VERSION:\n\n### 1. CWE-116: Improper Encoding or Escaping of Output (Score: 761.68)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 2. CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (Score: 748.37)\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal o...\n\n### 3. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 703.33)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 4. CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection') (Score: 684.14)\n\nThe product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component....\n\n### 5. CWE-790: Improper Filtering of Special Elements (Score: 644.19)\n\nThe product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component....\n\n## COMPONENT: 'order[user_login][dir] parameter'\n\nRelevant CWEs for this COMPONENT:\n\n### 1. CWE-116: Improper Encoding or Escaping of Output (Score: 761.68)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 2. CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (Score: 748.37)\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal o...\n\n### 3. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 703.33)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 4. CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection') (Score: 684.14)\n\nThe product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component....\n\n### 5. CWE-434: Unrestricted Upload of File with Dangerous Type (Score: 167.40)\n\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment....\n\n\n    # Analysis Instructions\n    1. For each keyphrase, identify the most appropriate CWE(s) that represent the weakness.\n    2. Consider how the different keyphrases might relate to each other in the vulnerability chain.\n    3. Provide a final determination of primary CWE(s) and any secondary CWEs.\n    4. Format your response using the standard analysis template.\n\n    Please analyze how these different weaknesses interact and provide a comprehensive CWE classification.\n    "
  },
  "retrieval_time": 1.6060543060302734
}