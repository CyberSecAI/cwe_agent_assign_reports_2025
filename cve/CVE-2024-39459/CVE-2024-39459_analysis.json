{
  "cve_id": "CVE-2024-39459",
  "description": "In rare cases Jenkins Plain Credentials Plugin 182.v468b_97b_9dcb_8 and earlier **stores secret file credentials unencrypted** (only Base64 encoded) on the Jenkins controller file system, where they can be viewed by users with access to the Jenkins controller file system (global credentials) or with Item/Extended Read permission (folder-scoped credentials).",
  "key_phrases": {
    "rootcause": "",
    "weakness": "stores secret file credentials unencrypted",
    "impact": "view credentials",
    "vector": "",
    "attacker": "users with access to Jenkins controller file system",
    "product": "Jenkins Plain Credentials Plugin",
    "version": "182.v468b_97b_9dcb_8 and earlier",
    "component": ""
  },
  "reference_content": "Based on the provided content, here's a breakdown of the vulnerability described in CVE-2024-39459:\n\n**Root Cause of Vulnerability:**\n\n- The Plain Credentials Plugin, in versions 182.v468b_97b_9dcb_8 and earlier, attempts to decrypt the content of a file when creating secret file credentials to verify if it's a valid encrypted secret.\n\n**Weaknesses/Vulnerabilities Present:**\n\n- **Improper Handling of Encrypted Data:** The plugin's attempt to decrypt the file content to validate it could lead to a scenario where a file that *happens* to match the expected format of an encrypted secret is then stored as an unencrypted, albeit Base64-encoded, file on the Jenkins controller file system. This essentially bypasses the intended encryption.\n\n**Impact of Exploitation:**\n\n- **Exposure of Sensitive Information:**  The primary impact is the exposure of sensitive information contained within secret file credentials. While the stored credential files are Base64 encoded, this is easily reversible, revealing the actual secrets.\n- **Unauthorized Access:** These unencrypted credentials could be viewed by:\n    - Users with direct access to the Jenkins controller file system (for global credentials).\n    - Users with \"Item/Extended Read\" permissions (for folder-scoped credentials).\n\n**Attack Vectors:**\n\n- **Malicious File Upload:** An attacker could upload a specially crafted file designed to mimic the encrypted secret format to trigger the vulnerability and cause it to be stored unencrypted.\n- **Access to File System:** An attacker already having access to the Jenkins controller file system can directly read the stored, unencrypted, credentials.\n- **Abuse of Permissions:** An attacker who has \"Item/Extended Read\" permissions can read folder-scoped unencrypted credentials.\n\n**Required Attacker Capabilities/Position:**\n\n-  **User Interaction (Limited):** An attacker needs to somehow cause the upload of a specially crafted secret file through the Jenkins UI (or potentially, a malicious API call, if applicable).\n- **Access to the Jenkins Controller File System:** For global credentials, the attacker requires access to the Jenkins server's file system.\n-  **Sufficient Permissions:** For folder-scoped credentials, the attacker needs \"Item/Extended Read\" permissions within Jenkins.\n    \n**Additional Notes:**\n- **Unusable Credentials:** The advisory notes that the unencrypted credentials stored due to this vulnerability are unusable by Jenkins in their unencrypted form. They would still be decrypted when in use, therefore, the existing, correctly configured credentials are not impacted.\n- **Mitigation:** The vulnerability is addressed in version 183.va_de8f1dd5a_2b_ of the Plain Credentials Plugin, which no longer attempts decryption during credential creation.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID  | CWE Name                                                      | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :------------------------------------------------------------ | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-256 | Plaintext Storage of a Password                               | 0.9        | Base                  | Primary CWE                     | Allowed                       |\n| CWE-538 | Insertion of Sensitive Information into Externally-Accessible File or Directory | 0.7        | Base                  | Secondary Candidate             | Allowed                       |\n| CWE-312 | Cleartext Storage of Sensitive Information                    | 0.6        | Base                  | Secondary Candidate             | Allowed                       |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary relationship influencing the CWE selection is the hierarchical one, where more specific CWEs are preferred. The **root cause** is the **unencrypted storage** of sensitive information, making CWE-256 the primary candidate. Other CWEs like CWE-538 and CWE-312 are considered as they capture the broader context of sensitive information exposure.\n\n```mermaid\ngraph TD\n    cwe256[\"CWE-256: Plaintext Storage of a Password\"]\n    cwe538[\"CWE-538: Insertion of Sensitive Information into Externally-Accessible File or Directory\"]\n    cwe312[\"CWE-312: Cleartext Storage of Sensitive Information\"]\n\n    cwe256 -->|CANALSOBE| cwe312\n    cwe538 -->|CANALSOBE| cwe312\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe256 primary\n    class cwe538,cwe312 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with the **unencrypted storage of secret file credentials (CWE-256)**, leading to potential exposure of this information to users with access to the Jenkins controller file system or with specific read permissions. This exposure can be viewed as **insertion of sensitive information into an externally accessible file (CWE-538)** or more broadly as **cleartext storage of sensitive information (CWE-312)**.\n\n## Summary of Analysis\n\nThe analysis is primarily based on the provided evidence, which includes the vulnerability description and CVE reference links content summary. The **weakness** is explicitly stated as \"**stores secret file credentials unencrypted**\", making CWE-256 the most direct and appropriate mapping. The other CWEs considered provide additional context but are not as directly representative of the **root cause**.\n\nThe selection of CWE-256 is at the optimal level of specificity because it directly addresses the core issue of storing passwords in plaintext. While CWE-312 (Cleartext Storage of Sensitive Information) is a broader category, CWE-256 is a more precise description of the vulnerability. Similarly, CWE-538 (Insertion of Sensitive Information into Externally-Accessible File or Directory) captures the impact of the vulnerability, but CWE-256 focuses on the **root cause**.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-538: Insertion of Sensitive Information into Externally-Accessible File or Directory\n**Abstraction Level**: Base\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nThe product places sensitive information into files or directories that are accessible to actors who are allowed to have access to the files, but not to the sensitive information.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-312: Cleartext Storage of Sensitive Information\n**Abstraction Level**: Base\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nThe product stores sensitive information in cleartext within a resource that might be accessible to another control sphere.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-522: Insufficiently Protected Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nThe product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-266: Incorrect Privilege Assignment\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nA product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-276: Incorrect Default Permissions\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nDuring installation, installed file permissions are set to allow anyone to modify those files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-267: Privilege Defined With Unsafe Actions\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nA particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-178: Improper Handling of Case Sensitivity\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product does not properly account for differences in case sensitivity when accessing or determining the properties of a resource, leading to inconsistent results.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-256: Plaintext Storage of a Password\n**Abstraction Level**: Base\n**Similarity Score**: 2065.40\n**Source**: sparse\n\n**Description**:\nStoring a password in plaintext may result in a system compromise.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-522: Insufficiently Protected Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 2064.77\n**Source**: sparse\n\n**Description**:\nThe product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-863: Incorrect Authorization\n**",
  "analysis_with_relationships": "# Summary\n| CWE ID  | CWE Name                                                      | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :------------------------------------------------------------ | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-256 | Plaintext Storage of a Password                               | 0.9        | Base                  | Primary CWE                     | Allowed                       |\n| CWE-538 | Insertion of Sensitive Information into Externally-Accessible File or Directory | 0.7        | Base                  | Secondary Candidate             | Allowed                       |\n| CWE-312 | Cleartext Storage of Sensitive Information                    | 0.6        | Base                  | Secondary Candidate             | Allowed                       |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary relationship influencing the CWE selection is the hierarchical one, where more specific CWEs are preferred. The **root cause** is the **unencrypted storage** of sensitive information, making CWE-256 the primary candidate. Other CWEs like CWE-538 and CWE-312 are considered as they capture the broader context of sensitive information exposure.\n\n```mermaid\ngraph TD\n    cwe256[\"CWE-256: Plaintext Storage of a Password\"]\n    cwe538[\"CWE-538: Insertion of Sensitive Information into Externally-Accessible File or Directory\"]\n    cwe312[\"CWE-312: Cleartext Storage of Sensitive Information\"]\n\n    cwe256 -->|CANALSOBE| cwe312\n    cwe538 -->|CANALSOBE| cwe312\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe256 primary\n    class cwe538,cwe312 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with the **unencrypted storage of secret file credentials (CWE-256)**, leading to potential exposure of this information to users with access to the Jenkins controller file system or with specific read permissions. This exposure can be viewed as **insertion of sensitive information into an externally accessible file (CWE-538)** or more broadly as **cleartext storage of sensitive information (CWE-312)**.\n\n## Summary of Analysis\n\nThe analysis is primarily based on the provided evidence, which includes the vulnerability description and CVE reference links content summary. The **weakness** is explicitly stated as \"**stores secret file credentials unencrypted**\", making CWE-256 the most direct and appropriate mapping. The other CWEs considered provide additional context but are not as directly representative of the **root cause**.\n\nThe selection of CWE-256 is at the optimal level of specificity because it directly addresses the core issue of storing passwords in plaintext. While CWE-312 (Cleartext Storage of Sensitive Information) is a broader category, CWE-256 is a more precise description of the vulnerability. Similarly, CWE-538 (Insertion of Sensitive Information into Externally-Accessible File or Directory) captures the impact of the vulnerability, but CWE-256 focuses on the **root cause**.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-538: Insertion of Sensitive Information into Externally-Accessible File or Directory\n**Abstraction Level**: Base\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nThe product places sensitive information into files or directories that are accessible to actors who are allowed to have access to the files, but not to the sensitive information.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-312: Cleartext Storage of Sensitive Information\n**Abstraction Level**: Base\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nThe product stores sensitive information in cleartext within a resource that might be accessible to another control sphere.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-522: Insufficiently Protected Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nThe product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-266: Incorrect Privilege Assignment\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nA product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-276: Incorrect Default Permissions\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nDuring installation, installed file permissions are set to allow anyone to modify those files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-267: Privilege Defined With Unsafe Actions\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nA particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-178: Improper Handling of Case Sensitivity\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product does not properly account for differences in case sensitivity when accessing or determining the properties of a resource, leading to inconsistent results.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-256: Plaintext Storage of a Password\n**Abstraction Level**: Base\n**Similarity Score**: 2065.40\n**Source**: sparse\n\n**Description**:\nStoring a password in plaintext may result in a system compromise.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-522: Insufficiently Protected Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 2064.77\n**Source**: sparse\n\n**Description**:\nThe product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-863: Incorrect Authorization\n**\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-267:**\n- 267 (Privilege Defined With Unsafe Actions) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "256",
        "name": "Plaintext Storage of a Password",
        "source": "sparse"
      },
      "similarity": 510.67180092053854
    },
    {
      "metadata": {
        "doc_id": "522",
        "name": "Insufficiently Protected Credentials",
        "source": "sparse"
      },
      "similarity": 456.81193030402477
    },
    {
      "metadata": {
        "doc_id": "260",
        "name": "Password in Configuration File",
        "source": "sparse"
      },
      "similarity": 397.76809931430824
    },
    {
      "metadata": {
        "doc_id": "538",
        "name": "Insertion of Sensitive Information into Externally-Accessible File or Directory",
        "source": "sparse"
      },
      "similarity": 334.62928778436697
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 315.47029221895286
    },
    {
      "metadata": {
        "doc_id": "312",
        "name": "Cleartext Storage of Sensitive Information",
        "source": "sparse"
      },
      "similarity": 308.2725045607677
    },
    {
      "metadata": {
        "doc_id": "532",
        "name": "Insertion of Sensitive Information into Log File",
        "source": "sparse"
      },
      "similarity": 290.96309698021213
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 271.14965880597356
    },
    {
      "metadata": {
        "doc_id": "555",
        "name": "J2EE Misconfiguration: Plaintext Password in Configuration File",
        "type": "Variant",
        "original_content": "The J2EE application stores a plaintext password in a configuration file.",
        "keyphrase_source": "weakness:stores secret file credentials unencrypted",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5435080080360795,
            "graph": 1.5223557664195622
          }
        }
      },
      "similarity": 0.5435080080360795
    },
    {
      "doc_id": "523",
      "text": "Login pages do not use adequate measures to protect the user name and password while they are in transit from the client to the server.",
      "score": 0.5222178391392209,
      "metadata": {
        "doc_id": "523",
        "name": "Unprotected Transport of Credentials",
        "type": "Base",
        "extended_description": null,
        "alternate_terms": [],
        "original_content": "Login pages do not use adequate measures to protect the user name and password while they are in transit from the client to the server.",
        "relationships": [
          {
            "source_id": "523",
            "target_id": "312",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "523",
            "target_id": "522",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "522",
            "target_id": "523",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "source": "graph",
        "sources": [
          "vector",
          "graph"
        ],
        "vector_score": 0.5222178391392209,
        "graph_score": 2.1762,
        "score_components": {
          "relationship_chain": 0.7,
          "abstraction_path": 0.7200000000000001,
          "peer_group": 0.9
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down",
            "peer_relationship"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "523",
                  "312",
                  "CANALSOBE"
                ]
              ],
              "score": 0.7,
              "type": "relationship_chain",
              "source": "312"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "522",
                  "523",
                  "PARENTOF"
                ]
              ],
              "score": 0.7200000000000001,
              "type": "abstraction_path_down",
              "source": "522"
            },
            "peer_relationship": {
              "path": [
                [
                  "523",
                  "312",
                  "CANALSOBE"
                ]
              ],
              "score": 0.9,
              "type": "peer_relationship",
              "source": "312"
            }
          }
        },
        "abstraction_level": "base",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.44132032871369514,
            "graph": 1.5146071356556883
          }
        }
      },
      "similarity": 1.5146071356556883
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-267",
      "CWE-178",
      "CWE-538",
      "CWE-256",
      "CWE-312",
      "CWE-1391",
      "CWE-522",
      "CWE-266",
      "CWE-276",
      "CWE-497",
      "CWE-212"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}