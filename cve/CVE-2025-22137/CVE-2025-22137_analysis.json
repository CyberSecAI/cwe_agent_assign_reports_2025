{
  "cve_id": "CVE-2025-22137",
  "description": "Pingvin Share is a self-hosted file sharing platform and an alternative for WeTransfer. This vulnerability allows an authenticated or unauthenticated (if anonymous shares are allowed) user to overwrite arbitrary files on the server, including sensitive system files, via HTTP POST requests. The issue has been patched in version 1.4.0.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "",
    "impact": "overwrite arbitrary files on the server",
    "vector": "HTTP POST requests",
    "attacker": "authenticated or unauthenticated user",
    "product": "Pingvin Share",
    "version": "",
    "component": ""
  },
  "reference_content": "```json\n{\n  \"cve_id\": \"CVE-2025-22137\",\n  \"related_content\": [\n    {\n      \"file\": \"github.com_36879ed9_20250624_144304.html\",\n      \"extracted_content\": {\n        \"vulnerability_information\": {\n          \"description\": \"This vulnerability allows an authenticated or unauthenticated (if anonymous shares are allowed) user to overwrite arbitrary files on the server, including sensitive system files, via HTTP POST requests.\",\n          \"impact\": \"If exploited, the attacker can overwrite files which could result in denial-of-service by overwriting the database, or even remote code execution.\",\n          \"patches\": \"The issue has been patched in version 1.4.0. Users are advised to upgrade to this version to resolve the vulnerability.\",\n          \"credit\": \"Thanks to **Hannes Michel and Adam Kornerud** for reporting this vulnerability.\",\n          \"cvss\": \"9.8\",\n          \"attack_vector\": \"Network\",\n          \"attack_complexity\": \"Low\",\n          \"privileges_required\": \"None\",\n          \"user_interaction\": \"None\",\n          \"scope\": \"Unchanged\",\n          \"confidentiality\": \"High\",\n          \"integrity\": \"High\",\n          \"availability\": \"High\"\n        },\n        \"attack_vectors\": [\n          \"HTTP POST requests\"\n        ],\n        \"affected_versions\": \"0.6.0 - 1.3.0\",\n        \"patched_versions\": \"1.4.0\"\n      },\n       \"more_details_than_cve_description\": true\n    },\n    {\n      \"file\": \"github.com_97c9619c_20250624_144301.html\",\n      \"extracted_content\": {\n        \"fix\": \"Commit 6cf5c66 fixed the remote arbitrary file overwrite on file upload endpoint.  The commit added validation for the file ID format to prevent arbitrary file overwrites.\"\n      }\n    },\n    {\n      \"file\": \"github.com_fc6bdc72_20250624_144303.html\",\n      \"extracted_content\": {\n        \"fix\": \"Commit c52ec71 refactored the file service to use fs promises.  This commit does not appear to fix the vulnerability directly, but rather refactors the code.\"\n      }\n    }\n  ]\n}\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n\n| CWE ID  | CWE Name                                                                                    | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :------------------------------------------------------------------------------------------ | :--------- | :---------------------- | :------------------------------ | :------------------------------ |\n| CWE-22    | Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')        | 0.9        | Base                    | Primary                         | Allowed                       |\n| CWE-434   | Unrestricted Upload of File with Dangerous Type                                     | 0.7        | Base                    | Secondary                       | Allowed                       |\n| CWE-306   | Missing Authentication for Critical Function                                           | 0.6       | Base                    | Secondary                       | Allowed                       |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary weakness is CWE-22, which describes a path traversal vulnerability. The other CWEs describe related weaknesses where files can be uploaded and authentication might be missing.\n\n```mermaid\ngraph TD\n    cwe22[\"CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\"]\n    cwe434[\"CWE-434: Unrestricted Upload of File with Dangerous Type\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    \n    cwe434 -->|CANFOLLOW| cwe22\n    cwe306 -->|CANPRECEDE| cwe22\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe22 primary\n    class cwe434,cwe306 secondary\n```\n\n## Vulnerability Chain\n\n1.  **Root Cause:** Improper path validation or limitation (**CWE-22**) allows writing outside the intended directory.\n2.  **Prerequisite (Optional):** **Missing authentication (CWE-306)** if anonymous shares are allowed, which exacerbates the issue.\n3.  **Contributing Factor:** **Unrestricted file upload (CWE-434)** allows for potentially dangerous files to be placed in arbitrary locations.\n4.  **Impact:** Arbitrary file overwrite, leading to potential DoS or RCE.\n\n## Summary of Analysis\n\nThe vulnerability description explicitly states that an authenticated or unauthenticated user can **overwrite arbitrary files on the server**, including sensitive system files. The commit message \"Commit 6cf5c66 fixed the remote arbitrary file overwrite on file upload endpoint. The commit added validation for the file ID format to prevent arbitrary file overwrites\" further supports that **lack of validation** for file ID's lead to arbitrary file overwrites.\n\n**CWE-22** (Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')) is selected as the primary CWE because the core issue is the ability to write files outside of the intended directory. The patch implemented validation for the file ID format to prevent arbitrary file overwrites, showing that the path was not correctly validated.\n\n**CWE-434** (Unrestricted Upload of File with Dangerous Type) is a secondary CWE because the vulnerability involves overwriting files, suggesting a file upload mechanism is involved.\n\n**CWE-306** (Missing Authentication for Critical Function) is a secondary CWE because the vulnerability can be exploited by both authenticated and unauthenticated users (if anonymous shares are allowed). This suggests that authentication may be missing or insufficient for the file overwrite functionality.\n\nOther CWEs Considered:\n\n*   CWE-79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')): While file overwrites could potentially lead to XSS if the overwritten files are web pages, the core issue is file system access, not XSS.\n*   CWE-918 (Server-Side Request Forgery (SSRF)): Not relevant as the vulnerability does not involve making requests to other servers.\n*   CWE-639 (Authorization Bypass Through User-Controlled Key): Although the vulnerability can be exploited by both authenticated and unauthenticated users, the core issue is path traversal, not authorization bypass.\n\nThe selected CWEs are at the optimal level of specificity because they directly address the root cause (CWE-22) and contributing factors (CWE-434 and CWE-306) of the vulnerability.",
  "analysis_with_relationships": "# Summary\n\n| CWE ID  | CWE Name                                                                                    | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :------------------------------------------------------------------------------------------ | :--------- | :---------------------- | :------------------------------ | :------------------------------ |\n| CWE-22    | Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')        | 0.9        | Base                    | Primary                         | Allowed                       |\n| CWE-434   | Unrestricted Upload of File with Dangerous Type                                     | 0.7        | Base                    | Secondary                       | Allowed                       |\n| CWE-306   | Missing Authentication for Critical Function                                           | 0.6       | Base                    | Secondary                       | Allowed                       |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary weakness is CWE-22, which describes a path traversal vulnerability. The other CWEs describe related weaknesses where files can be uploaded and authentication might be missing.\n\n```mermaid\ngraph TD\n    cwe22[\"CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\"]\n    cwe434[\"CWE-434: Unrestricted Upload of File with Dangerous Type\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    \n    cwe434 -->|CANFOLLOW| cwe22\n    cwe306 -->|CANPRECEDE| cwe22\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe22 primary\n    class cwe434,cwe306 secondary\n```\n\n## Vulnerability Chain\n\n1.  **Root Cause:** Improper path validation or limitation (**CWE-22**) allows writing outside the intended directory.\n2.  **Prerequisite (Optional):** **Missing authentication (CWE-306)** if anonymous shares are allowed, which exacerbates the issue.\n3.  **Contributing Factor:** **Unrestricted file upload (CWE-434)** allows for potentially dangerous files to be placed in arbitrary locations.\n4.  **Impact:** Arbitrary file overwrite, leading to potential DoS or RCE.\n\n## Summary of Analysis\n\nThe vulnerability description explicitly states that an authenticated or unauthenticated user can **overwrite arbitrary files on the server**, including sensitive system files. The commit message \"Commit 6cf5c66 fixed the remote arbitrary file overwrite on file upload endpoint. The commit added validation for the file ID format to prevent arbitrary file overwrites\" further supports that **lack of validation** for file ID's lead to arbitrary file overwrites.\n\n**CWE-22** (Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')) is selected as the primary CWE because the core issue is the ability to write files outside of the intended directory. The patch implemented validation for the file ID format to prevent arbitrary file overwrites, showing that the path was not correctly validated.\n\n**CWE-434** (Unrestricted Upload of File with Dangerous Type) is a secondary CWE because the vulnerability involves overwriting files, suggesting a file upload mechanism is involved.\n\n**CWE-306** (Missing Authentication for Critical Function) is a secondary CWE because the vulnerability can be exploited by both authenticated and unauthenticated users (if anonymous shares are allowed). This suggests that authentication may be missing or insufficient for the file overwrite functionality.\n\nOther CWEs Considered:\n\n*   CWE-79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')): While file overwrites could potentially lead to XSS if the overwritten files are web pages, the core issue is file system access, not XSS.\n*   CWE-918 (Server-Side Request Forgery (SSRF)): Not relevant as the vulnerability does not involve making requests to other servers.\n*   CWE-639 (Authorization Bypass Through User-Controlled Key): Although the vulnerability can be exploited by both authenticated and unauthenticated users, the core issue is path traversal, not authorization bypass.\n\nThe selected CWEs are at the optimal level of specificity because they directly address the root cause (CWE-22) and contributing factors (CWE-434 and CWE-306) of the vulnerability.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-22:**\n- 22 (Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')) - ROOT\n\n\n**Chain starting from CWE-639:**\n- 639 (Authorization Bypass Through User-Controlled Key) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 89.89884835580331
    },
    {
      "metadata": {
        "doc_id": "918",
        "name": "Server-Side Request Forgery (SSRF)",
        "source": "sparse"
      },
      "similarity": 88.80882573024296
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 87.4514186309738
    },
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "sparse"
      },
      "similarity": 87.16248464095476
    },
    {
      "metadata": {
        "doc_id": "668",
        "name": "Exposure of Resource to Wrong Sphere",
        "source": "sparse"
      },
      "similarity": 85.75334627198521
    },
    {
      "metadata": {
        "doc_id": "639",
        "name": "Authorization Bypass Through User-Controlled Key",
        "source": "sparse"
      },
      "similarity": 85.62381781423319
    },
    {
      "metadata": {
        "doc_id": "138",
        "name": "Improper Neutralization of Special Elements",
        "source": "sparse"
      },
      "similarity": 85.3705373205905
    },
    {
      "metadata": {
        "doc_id": "23",
        "name": "Relative Path Traversal",
        "source": "sparse"
      },
      "similarity": 85.32559351943782
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "type": "Base",
        "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.45428295631656146,
            "graph": 2.543722642346589
          }
        }
      },
      "similarity": 0.45428295631656146
    },
    {
      "doc_id": "79",
      "text": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
      "score": 0.4703063199899981,
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "type": "Base",
        "extended_description": "\n\nCross-site scripting (XSS) vulnerabilities occur when:\n\n\n  1. Untrusted data enters a web application, typically from a web request.\n\n  1. The web application dynamically generates a web page that contains this untrusted data.\n\n  1. During page generation, the application does not prevent the data from containing content that is executable by a web browser, such as JavaScript, HTML tags, HTML attributes, mouse events, Flash, ActiveX, etc.\n\n  1. A victim visits the generated web page through a web browser, which contains malicious script that was injected using the untrusted data.\n\n  1. Since the script comes from a web page that was sent by the web server, the victim's web browser executes the malicious script in the context of the web server's domain.\n\n  1. This effectively violates the intention of the web browser's same-origin policy, which states that scripts in one domain should not be able to access resources or run code in a different domain.\n\nThere are three main kinds of XSS:\n\n  -  **Type 1: Reflected XSS (or Non-Persistent)**  - The server reads data directly from the HTTP request and reflects it back in the HTTP response. Reflected XSS exploits occur when an attacker causes a victim to supply dangerous content to a vulnerable web application, which is then reflected back to the victim and executed by the web browser. The most common mechanism for delivering malicious content is to include it as a parameter in a URL that is posted publicly or e-mailed directly to the victim. URLs constructed in this manner constitute the core of many phishing schemes, whereby an attacker convinces a victim to visit a URL that refers to a vulnerable site. After the site reflects the attacker's content back to the victim, the content is executed by the victim's browser.\n\n  -  **Type 2: Stored XSS (or Persistent)**  - The application stores dangerous data in a database, message forum, visitor log, or other trusted data store. At a later time, the dangerous data is subsequently read back into the application and included in dynamic content. From an attacker's perspective, the optimal place to inject malicious content is in an area that is displayed to either many users or particularly interesting users. Interesting users typically have elevated privileges in the application or interact with sensitive data that is valuable to the attacker. If one of these users executes malicious content, the attacker may be able to perform privileged operations on behalf of the user or gain access to sensitive data belonging to the user. For example, the attacker might inject XSS into a log message, which might not be handled properly when an administrator views the logs. \n\n  -  **Type 0: DOM-Based XSS**  - In DOM-based XSS, the client performs the injection of XSS into the page; in the other types, the server performs the injection. DOM-based XSS generally involves server-controlled, trusted script that is sent to the client, such as Javascript that performs sanity checks on a form before the user submits it. If the server-supplied script processes user-supplied data and then injects it back into the web page (such as with dynamic HTML), then DOM-based XSS is possible. \n\nOnce the malicious script is injected, the attacker can perform a variety of malicious activities. The attacker could transfer private information, such as cookies that may include session information, from the victim's machine to the attacker. The attacker could send malicious requests to a web site on behalf of the victim, which could be especially dangerous to the site if the victim has administrator privileges to manage that site. Phishing attacks could be used to emulate trusted web sites and trick the victim into entering a password, allowing the attacker to compromise the victim's account on that web site. Finally, the script could exploit a vulnerability in the web browser itself possibly taking over the victim's machine, sometimes referred to as \"drive-by hacking.\"\n\nIn many cases, the attack can be launched without the victim even being aware of it. Even with careful users, attackers frequently use a variety of methods to encode the malicious portion of the attack, such as URL encoding or Unicode, so the request looks less suspicious.\n",
        "alternate_terms": [
          "XSS",
          "HTML Injection",
          "CSS"
        ],
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "relationships": [
          {
            "source_id": "79",
            "target_id": "87",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "86",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "85",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "84",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "83",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "81",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "80",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "113",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "352",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "494",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "74",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "79",
            "target_id": "74",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "87",
            "target_id": "79",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "86",
            "target_id": "79",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "85",
            "target_id": "79",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "84",
            "target_id": "79",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "83",
            "target_id": "79",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "81",
            "target_id": "79",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "80",
            "target_id": "79",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "74",
            "target_id": "79",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "494",
            "target_id": "79",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "79",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "113",
            "target_id": "79",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "source": "graph",
        "sources": [
          "vector",
          "graph"
        ],
        "vector_score": 0.4703063199899981,
        "graph_score": 4.472,
        "score_components": {
          "relationship_chain": 0.7,
          "explicit_mention": 1.0,
          "abstraction_path": 0.9,
          "sequence_path": 0.8,
          "peer_group": 0.9
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "peer_relationship"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "79",
                  "352",
                  "PEEROF"
                ]
              ],
              "score": 0.7,
              "type": "relationship_chain",
              "source": "352"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "434",
                  "184",
                  "CANFOLLOW"
                ],
                [
                  "184",
                  "79",
                  "CANPRECEDE"
                ]
              ],
              "score": 0.8,
              "type": "vulnerability_sequence_forward",
              "source": "434"
            },
            "peer_relationship": {
              "path": [
                [
                  "79",
                  "352",
                  "PEEROF"
                ]
              ],
              "score": 0.9,
              "type": "peer_relationship",
              "source": "352"
            }
          }
        },
        "is_explicit": true,
        "abstraction_level": "base",
        "position": "after",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.41862683715636373,
            "graph": 2.8713225279959995
          }
        }
      },
      "similarity": 2.8713225279959995
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-22",
      "CWE-639",
      "CWE-306",
      "CWE-79",
      "CWE-918",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}