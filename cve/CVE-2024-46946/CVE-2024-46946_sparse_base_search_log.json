{
  "method": "sparse_base",
  "query": "langchain_experimental (aka LangChain Experimental) 0.1.17 through 0.3.0 for LangChain allows attackers to execute arbitrary code through sympy.sympify (which uses eval) in LLMSymbolicMathChain. LLMSymbolicMathChain was introduced in fcccde406dd9e9b05fc9babcbeb9ff527b0ec0c6 (2023-10-05).",
  "keyphrases": {
    "base_query": "langchain_experimental (aka LangChain Experimental) 0.1.17 through 0.3.0 for LangChain allows attackers to execute arbitrary code through sympy.sympify (which uses eval) in LLMSymbolicMathChain. LLMSymbolicMathChain was introduced in fcccde406dd9e9b05fc9babcbeb9ff527b0ec0c6 (2023-10-05)."
  },
  "timestamp": "2025-07-13T17:44:35.399217",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "95",
      "name": "Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
      "score": 46.908701422239794
    },
    {
      "doc_id": "94",
      "name": "Improper Control of Generation of Code ('Code Injection')",
      "score": 42.408870622718034
    },
    {
      "doc_id": "822",
      "name": "Untrusted Pointer Dereference",
      "score": 40.89051298919687
    },
    {
      "doc_id": "250",
      "name": "Execution with Unnecessary Privileges",
      "score": 40.297512098781574
    },
    {
      "doc_id": "121",
      "name": "Stack-based Buffer Overflow",
      "score": 39.632736877290654
    }
  ]
}