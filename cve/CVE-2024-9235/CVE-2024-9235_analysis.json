{
  "cve_id": "CVE-2024-9235",
  "description": "The Mapster WP Maps plugin for WordPress is vulnerable to unauthorized modification of data that can lead to privilege escalation due to an **insufficient capability check** on the mapster_wp_maps_set_option_from_js() function in all versions up to, and including, 1.5.0. This makes it possible for authenticated attackers, with contributor-level access and above, to update arbitrary options on the WordPress site. This can be leveraged to update the default role for registration to administrator and enable user registration for attackers to gain administrative user access to a vulnerable site.",
  "key_phrases": {
    "rootcause": "insufficient capability check",
    "weakness": "",
    "impact": [
      "unauthorized modification of data",
      "privilege escalation"
    ],
    "vector": "",
    "attacker": "authenticated attackers with contributor-level access and above",
    "product": "Mapster WP Maps WordPress plugin",
    "version": "up to and including 1.5.0",
    "component": "mapster_wp_maps_set_option_from_js() function"
  },
  "reference_content": "Based on the provided information, here's a breakdown of the vulnerability:\n\n**Root Cause:**\n\n*   The vulnerability stems from an insufficient capability check in the `mapster_wp_maps_set_option_from_js()` function within the Mapster WP Maps plugin. This function allows for updating arbitrary options on the WordPress site.\n\n**Weaknesses/Vulnerabilities Present:**\n\n*   **Improper Authorization:** The core issue is that the `mapster_wp_maps_set_option_from_js()` function lacks proper authorization checks. It only verifies if the user has `edit_posts` capability, which is granted to Contributor-level users and above and is not enough to protect options from modification.\n*   **Arbitrary Options Update:** Due to the lack of proper authorization, an attacker can manipulate the `option_name` parameter to update any option within the WordPress database.\n\n**Impact of Exploitation:**\n\n*   **Privilege Escalation:** A contributor-level attacker can exploit this vulnerability to elevate their privileges to administrator by manipulating the `default_role` option and enabling user registration. This allows them to gain full control over the vulnerable WordPress site.\n*   **Complete Site Takeover:**  By gaining administrative access, the attacker can further manipulate the website, install malicious plugins, inject code, and steal data, potentially leading to complete site compromise.\n\n**Attack Vectors:**\n\n*   **Network:** The attack is network-based and can be performed remotely.\n*   **REST API Endpoint:** The vulnerability is exposed through a REST API endpoint provided by the plugin. The `mapster_wp_maps_set_option_from_js()` function is registered as a callback for the `mapster-wp-maps/set-option` endpoint.\n*  **Request Parameters:** An attacker can use `GET` request method, and modify `option_name` and `option_value` parameters to update WordPress options.\n\n**Required Attacker Capabilities/Position:**\n\n*   **Authenticated User:** The attacker needs to be an authenticated user on the WordPress site with at least Contributor-level access or higher (as they have `edit_posts` capability).\n*   **Access to the REST API Endpoint:** The attacker needs to be able to send requests to the vulnerable REST API endpoint exposed by the plugin.\n\n**Additional Notes:**\n\n*   The vulnerability was fixed in version 1.6.0 of the plugin.\n*   The vulnerability is present in all versions of the plugin up to and including 1.5.0.\n*   The provided code diff highlights the change from the vulnerable `mapster_wp_maps_set_option` function to a more secure  `mapster_wp_maps_set_tutorial_option` function which only updates a single option.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID    | CWE Name                                                                  | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| --------- | ------------------------------------------------------------------------- | ---------- | --------------------- | ------------------------------- | ------------------------------- |\n| CWE-863   | Incorrect Authorization                                                     | 0.9        | Class                 | Allowed-with-Review             | Authorization logic present but flawed |\n| CWE-266 | Incorrect Privilege Assignment                                                     | 0.7        | Base                 | Allowed             | Privilege escalation via role manipulation |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship influencing the CWE selection is the parent-child relationship. CWE-863 is a Class-level CWE, while more specific Base-level CWEs exist. However, based on the provided information, the authorization logic is present but flawed, aligning with CWE-863's definition. CWE-266 is a Base level CWE and is a good secondary candidate since the vulnerability leads to a privilege escalation.\n\n```mermaid\ngraph TD\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe266[\"CWE-266: Incorrect Privilege Assignment\"]\n    \n    cwe266 -->|PeerOf| cwe863\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe863 primary\n    class cwe266 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with an **insufficient capability check** (authorization). This leads to the ability to update arbitrary options. The chain culminates in privilege escalation and potential complete site takeover.\n\n## Summary of Analysis\nThe initial analysis focused on identifying the root cause of the vulnerability. The description clearly states that the vulnerability stems from an **insufficient capability check**. This aligns with the definition of CWE-863, which describes a situation where authorization logic is present but flawed. The ability to update arbitrary options and the resulting privilege escalation are consequences of this **incorrect authorization**.\n\nThe selection of CWE-863 is also supported by the \"Mapping Discussion \u2013 CWE Usage for Privileges vs Permissions\" section, specifically the line, *\"Authorization logic is present but flawed\"*\n\nThe evidence from the \"CVE Reference Links Content Summary\" section further solidifies this choice: *\"The core issue is that the `mapster_wp_maps_set_option_from_js()` function lacks proper authorization checks.\"* Also: *\"It only verifies if the user has `edit_posts` capability, which is granted to Contributor-level users and above and is not enough to protect options from modification.\"*\n\nCWE-266 is a good secondary candidate because the attacker is able to assign incorrect privileges to a user by manipulating the default role option.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-266: Incorrect Privilege Assignment\n**Abstraction Level**: Base\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nA product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-863: Incorrect Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 2164.99\n**Source**: sparse\n\n**Description**:\nThe product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate",
  "analysis_with_relationships": "# Summary\n| CWE ID    | CWE Name                                                                  | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| --------- | ------------------------------------------------------------------------- | ---------- | --------------------- | ------------------------------- | ------------------------------- |\n| CWE-863   | Incorrect Authorization                                                     | 0.9        | Class                 | Allowed-with-Review             | Authorization logic present but flawed |\n| CWE-266 | Incorrect Privilege Assignment                                                     | 0.7        | Base                 | Allowed             | Privilege escalation via role manipulation |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship influencing the CWE selection is the parent-child relationship. CWE-863 is a Class-level CWE, while more specific Base-level CWEs exist. However, based on the provided information, the authorization logic is present but flawed, aligning with CWE-863's definition. CWE-266 is a Base level CWE and is a good secondary candidate since the vulnerability leads to a privilege escalation.\n\n```mermaid\ngraph TD\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe266[\"CWE-266: Incorrect Privilege Assignment\"]\n    \n    cwe266 -->|PeerOf| cwe863\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe863 primary\n    class cwe266 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with an **insufficient capability check** (authorization). This leads to the ability to update arbitrary options. The chain culminates in privilege escalation and potential complete site takeover.\n\n## Summary of Analysis\nThe initial analysis focused on identifying the root cause of the vulnerability. The description clearly states that the vulnerability stems from an **insufficient capability check**. This aligns with the definition of CWE-863, which describes a situation where authorization logic is present but flawed. The ability to update arbitrary options and the resulting privilege escalation are consequences of this **incorrect authorization**.\n\nThe selection of CWE-863 is also supported by the \"Mapping Discussion \u2013 CWE Usage for Privileges vs Permissions\" section, specifically the line, *\"Authorization logic is present but flawed\"*\n\nThe evidence from the \"CVE Reference Links Content Summary\" section further solidifies this choice: *\"The core issue is that the `mapster_wp_maps_set_option_from_js()` function lacks proper authorization checks.\"* Also: *\"It only verifies if the user has `edit_posts` capability, which is granted to Contributor-level users and above and is not enough to protect options from modification.\"*\n\nCWE-266 is a good secondary candidate because the attacker is able to assign incorrect privileges to a user by manipulating the default role option.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-266: Incorrect Privilege Assignment\n**Abstraction Level**: Base\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nA product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-863: Incorrect Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 2164.99\n**Source**: sparse\n\n**Description**:\nThe product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-266:**\n- 266 (Incorrect Privilege Assignment) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 647.7371606478537
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 636.8278366412615
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 635.3562663942614
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 599.9574339614459
    },
    {
      "metadata": {
        "doc_id": "472",
        "name": "External Control of Assumed-Immutable Web Parameter",
        "source": "sparse"
      },
      "similarity": 596.6054571151329
    },
    {
      "metadata": {
        "doc_id": "284",
        "name": "Improper Access Control",
        "source": "sparse"
      },
      "similarity": 587.8372348250255
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 585.4088804622423
    },
    {
      "metadata": {
        "doc_id": "269",
        "name": "Improper Privilege Management",
        "source": "sparse"
      },
      "similarity": 571.5501067004398
    },
    {
      "metadata": {
        "doc_id": "425",
        "name": "Direct Request ('Forced Browsing')",
        "type": "Base",
        "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
        "keyphrase_source": "rootcause:insufficient capability check",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.48729713304928335,
            "graph": 2.0558993043634595
          }
        }
      },
      "similarity": 0.48729713304928335
    },
    {
      "doc_id": "471",
      "text": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
      "score": 2.7196000000000002,
      "metadata": {
        "doc_id": "471",
        "name": "Modification of Assumed-Immutable Data (MAID)",
        "type": "base",
        "original_content": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
        "relationships": [
          {
            "source_id": "471",
            "target_id": "621",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "607",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "602",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "473",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "472",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "291",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "1321",
            "label": "CANFOLLOW",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "1282",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "664",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "664",
            "target_id": "471",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "621",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "607",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "602",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "473",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "472",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "291",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1321",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1282",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.5599999999999999,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_up",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "425",
                  "471",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "425"
            },
            "abstraction_path_up": {
              "path": [
                [
                  "472",
                  "471",
                  "CHILDOF"
                ]
              ],
              "score": 0.5599999999999999,
              "type": "abstraction_path_up",
              "source": "472"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "425",
                  "471",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "425"
            }
          }
        },
        "abstraction_level": "base",
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.7196000000000002
          }
        }
      },
      "similarity": 2.7196000000000002
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-266"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}