{
  "retriever": "dense",
  "query": "In the Linux kernel, the following vulnerability has been resolved s390/pci Fix duplicate pci_dev_put() in disable_slot() when PF has child VFs With commit bcb5d6c76903 (s390/pci introduce lock to synchronize state of zpci_devs) the code to ignore power off of a PF that has child VFs was changed from a direct return to a goto to the unlock and pci_dev_put() section. The change however left the existing pci_dev_put() untouched resulting in a doubple put. This can subsequently cause a use after free if the struct pci_dev is released in an unexpected state. Fix this by removing the extra pci_dev_put().",
  "keyphrases": {
    "weakness": [
      "use after free"
    ]
  },
  "timestamp": "2025-07-14 21:57:56",
  "cve_id": "CVE-2025-37946",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "type": "Class",
      "score": 0.5145446506655174
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "type": "Base",
      "score": 0.5122204538107078
    },
    {
      "cwe_id": "415",
      "name": "Double Free",
      "type": "Variant",
      "score": 0.4922047686509614
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "type": "Class",
      "score": 0.49079896413313323
    },
    {
      "cwe_id": "1256",
      "name": "Improper Restriction of Software Interfaces to Hardware Features",
      "type": "Base",
      "score": 0.48768105967018033
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "type": "Class",
      "score": 0.48697705434148364
    },
    {
      "cwe_id": "1250",
      "name": "Improper Preservation of Consistency Between Independent Representations of Shared State",
      "type": "Base",
      "score": 0.48638060503317415
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "type": "Variant",
      "score": 0.48605417599400474
    },
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "type": "Variant",
      "score": 0.4838711435691689
    },
    {
      "cwe_id": "911",
      "name": "Improper Update of Reference Count",
      "type": "Base",
      "score": 0.4814312508957953
    },
    {
      "cwe_id": "733",
      "name": "Compiler Optimization Removal or Modification of Security-critical Code",
      "type": "Base",
      "score": 0.4674986935494919
    },
    {
      "cwe_id": "1233",
      "name": "Security-Sensitive Hardware Controls with Missing Lock Bit Protection",
      "type": "Base",
      "score": 0.4654327270669071
    },
    {
      "cwe_id": "1260",
      "name": "Improper Handling of Overlap Between Protected Memory Ranges",
      "type": "Base",
      "score": 0.4637189688883017
    },
    {
      "cwe_id": "1189",
      "name": "Improper Isolation of Shared Resources on System-on-a-Chip (SoC)",
      "type": "Base",
      "score": 0.46048598294971343
    },
    {
      "cwe_id": "1037",
      "name": "Processor Optimization Removal or Modification of Security-critical Code",
      "type": "Base",
      "score": 0.45926280470350545
    },
    {
      "cwe_id": "413",
      "name": "Improper Resource Locking",
      "type": "Base",
      "score": 0.45802533349637564
    },
    {
      "cwe_id": "775",
      "name": "Missing Release of File Descriptor or Handle after Effective Lifetime",
      "type": "Variant",
      "score": 0.456889048300679
    },
    {
      "cwe_id": "1264",
      "name": "Hardware Logic with Insecure De-Synchronization between Control and Data Channels",
      "type": "Base",
      "score": 0.4555824530338182
    },
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "type": "Base",
      "score": 0.45548599698547426
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "type": "Base",
      "score": 0.45399716101887233
    }
  ]
}