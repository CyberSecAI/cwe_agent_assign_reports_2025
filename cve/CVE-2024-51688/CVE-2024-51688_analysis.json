{
  "cve_id": "CVE-2024-51688",
  "description": "Cross-Site Request Forgery (CSRF) vulnerability in FraudLabs Pro FraudLabs Pro SMS Verification allows Stored **XSS**.This issue affects FraudLabs Pro SMS Verification from n/a through 1.10.1.",
  "key_phrases": {
    "rootcause": "improper access control",
    "weakness": [
      "XSS",
      "cross-site request forgery"
    ],
    "impact": "stored cross-site scripting",
    "vector": "",
    "attacker": "",
    "product": "FraudLabs Pro SMS Verification",
    "version": "n/a through 1.10.1",
    "component": ""
  },
  "reference_content": "```\n{\n  \"Root cause of vulnerability\": \"The WordPress FraudLabs Pro SMS Verification plugin <= 1.10.1 is vulnerable to Cross-Site Request Forgery (CSRF).\",\n  \"Weaknesses/vulnerabilities present\": \"Cross-Site Request Forgery (CSRF)\",\n  \"Impact of exploitation\": \"A malicious actor could force higher privileged users to execute unwanted actions under their current authentication.\",\n  \"Attack vectors\": \"A malicious actor could trick a logged-in user into submitting a crafted request. This can be done through various methods, like malicious links or embedded iframes on a website.\",\n  \"Required attacker capabilities/position\": \"The attacker needs to be able to trick a logged-in user into clicking a malicious link or visiting a malicious website controlled by the attacker.  The attacker does not need prior authentication to the WordPress application.\"\n}\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID  | CWE Name                                                                       | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :----------------------------------------------------------------------------- | :--------- | :---------------------- | :------------------------------ | :------------------------------ |\n| CWE-79    | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.95       | Base                    | Primary CWE                  | Allowed                       |\n| CWE-352   | Cross-Site Request Forgery (CSRF)                                            | 0.80       | Compound                | Secondary Candidate                | Allowed                       |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.90\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary weakness is **CWE-79** Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). This is the root cause because the application fails to neutralize user-provided input before displaying it on a web page, leading to the possibility of injecting malicious scripts.\n\n**CWE-352** Cross-Site Request Forgery (CSRF) is listed as a secondary weakness, this could be a contributing factor as the **XSS** vulnerability could be exploited via **CSRF**.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n\n    cwe79 -->|CANBEEXPLOITEDBY| cwe352\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe79 primary\n    class cwe352 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **improper neutralization of input** leading to **CWE-79**, which allows for the injection of malicious scripts into web pages. The **CSRF** (**CWE-352**) may lead to exploitation of the **XSS**.\n\n## Summary of Analysis\nThe analysis is based on the provided vulnerability description, which explicitly states the presence of both **Cross-Site Request Forgery (CSRF)** and **Stored XSS**. The key phrases 'cross-site request forgery' and 'XSS' directly point to these weaknesses. The description highlights that the FraudLabs Pro SMS Verification product is vulnerable to Stored **XSS**.\n\nThe primary selection of **CWE-79** is strongly supported by the description indicating **improper neutralization of input**, which is the core characteristic of **XSS** vulnerabilities. While **CWE-352** is also mentioned, it is considered a secondary factor as it may facilitate the exploitation of **XSS** but is not the root cause itself.\n\nThe selection of **CWE-79** and **CWE-352** are at the optimal level of specificity, representing the identified weaknesses accurately.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\n**Abstraction Level**: Variant\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-345: Insufficient Verification of Data Authenticity\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-451: User Interface (UI) Misrepresentation of Critical Information\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe user interface (UI) does not properly represent critical information to the user, allowing the information - or its source - to be obscured or spoofed. This is often a component in phishing attacks.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-330: Use of Insufficiently Random Values\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-807: Reliance on Untrusted Inputs in a Security Decision\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-668: Exposure of Resource to Wrong Sphere\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-668 is high-level and is often misused as a catch-all when lower-level CWE IDs might be applicable. It is sometimes used for low-information vulnerability reports [REF-1287]. It is a level-1 Class (i.e., a child of a Pillar). It is not useful for trend analysis.\n\n\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 2607.32\n**Source**: sparse\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score",
  "analysis_with_relationships": "# Summary\n| CWE ID  | CWE Name                                                                       | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :----------------------------------------------------------------------------- | :--------- | :---------------------- | :------------------------------ | :------------------------------ |\n| CWE-79    | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.95       | Base                    | Primary CWE                  | Allowed                       |\n| CWE-352   | Cross-Site Request Forgery (CSRF)                                            | 0.80       | Compound                | Secondary Candidate                | Allowed                       |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.90\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary weakness is **CWE-79** Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). This is the root cause because the application fails to neutralize user-provided input before displaying it on a web page, leading to the possibility of injecting malicious scripts.\n\n**CWE-352** Cross-Site Request Forgery (CSRF) is listed as a secondary weakness, this could be a contributing factor as the **XSS** vulnerability could be exploited via **CSRF**.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n\n    cwe79 -->|CANBEEXPLOITEDBY| cwe352\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe79 primary\n    class cwe352 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **improper neutralization of input** leading to **CWE-79**, which allows for the injection of malicious scripts into web pages. The **CSRF** (**CWE-352**) may lead to exploitation of the **XSS**.\n\n## Summary of Analysis\nThe analysis is based on the provided vulnerability description, which explicitly states the presence of both **Cross-Site Request Forgery (CSRF)** and **Stored XSS**. The key phrases 'cross-site request forgery' and 'XSS' directly point to these weaknesses. The description highlights that the FraudLabs Pro SMS Verification product is vulnerable to Stored **XSS**.\n\nThe primary selection of **CWE-79** is strongly supported by the description indicating **improper neutralization of input**, which is the core characteristic of **XSS** vulnerabilities. While **CWE-352** is also mentioned, it is considered a secondary factor as it may facilitate the exploitation of **XSS** but is not the root cause itself.\n\nThe selection of **CWE-79** and **CWE-352** are at the optimal level of specificity, representing the identified weaknesses accurately.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\n**Abstraction Level**: Variant\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-345: Insufficient Verification of Data Authenticity\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-451: User Interface (UI) Misrepresentation of Critical Information\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe user interface (UI) does not properly represent critical information to the user, allowing the information - or its source - to be obscured or spoofed. This is often a component in phishing attacks.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-330: Use of Insufficiently Random Values\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-807: Reliance on Untrusted Inputs in a Security Decision\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-668: Exposure of Resource to Wrong Sphere\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-668 is high-level and is often misused as a catch-all when lower-level CWE IDs might be applicable. It is sometimes used for low-information vulnerability reports [REF-1287]. It is a level-1 Class (i.e., a child of a Pillar). It is not useful for trend analysis.\n\n\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 2607.32\n**Source**: sparse\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n**Chain starting from CWE-345:**\n- 345 (Insufficient Verification of Data Authenticity) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "601",
        "name": "URL Redirection to Untrusted Site ('Open Redirect')",
        "source": "sparse",
        "original_content": "The web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a redirect.",
        "keyphrase_sources": [
          {
            "id": "weakness:cross-site request forgery",
            "keyphrase": "cross-site request forgery",
            "type": "weakness"
          }
        ]
      },
      "similarity": 212.12006304942935
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_sources": [
          {
            "id": "rootcause:improper access control",
            "keyphrase": "improper access control",
            "type": "rootcause"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "weakness:cross-site request forgery",
            "keyphrase": "cross-site request forgery",
            "type": "weakness"
          },
          {
            "id": "impact:stored cross-site scripting",
            "keyphrase": "stored cross-site scripting",
            "type": "impact"
          },
          {
            "id": "product:FraudLabs Pro SMS Verification",
            "keyphrase": "FraudLabs Pro SMS Verification",
            "type": "product"
          },
          {
            "id": "version:n/a through 1.10.1",
            "keyphrase": "n/a through 1.10.1",
            "type": "version"
          }
        ]
      },
      "similarity": 193.2094555670352
    },
    {
      "metadata": {
        "doc_id": "918",
        "name": "Server-Side Request Forgery (SSRF)",
        "source": "sparse",
        "original_content": "The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.",
        "keyphrase_sources": [
          {
            "id": "rootcause:improper access control",
            "keyphrase": "improper access control",
            "type": "rootcause"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "weakness:cross-site request forgery",
            "keyphrase": "cross-site request forgery",
            "type": "weakness"
          },
          {
            "id": "product:FraudLabs Pro SMS Verification",
            "keyphrase": "FraudLabs Pro SMS Verification",
            "type": "product"
          },
          {
            "id": "version:n/a through 1.10.1",
            "keyphrase": "n/a through 1.10.1",
            "type": "version"
          }
        ]
      },
      "similarity": 165.0775207537983
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse",
        "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
        "keyphrase_sources": [
          {
            "id": "rootcause:improper access control",
            "keyphrase": "improper access control",
            "type": "rootcause"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "impact:stored cross-site scripting",
            "keyphrase": "stored cross-site scripting",
            "type": "impact"
          },
          {
            "id": "version:n/a through 1.10.1",
            "keyphrase": "n/a through 1.10.1",
            "type": "version"
          }
        ]
      },
      "similarity": 163.43683538305928
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "keyphrase_sources": [
          {
            "id": "rootcause:improper access control",
            "keyphrase": "improper access control",
            "type": "rootcause"
          },
          {
            "id": "weakness:cross-site request forgery",
            "keyphrase": "cross-site request forgery",
            "type": "weakness"
          }
        ]
      },
      "similarity": 161.46092904908522
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse",
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "keyphrase_sources": [
          {
            "id": "rootcause:improper access control",
            "keyphrase": "improper access control",
            "type": "rootcause"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "weakness:cross-site request forgery",
            "keyphrase": "cross-site request forgery",
            "type": "weakness"
          },
          {
            "id": "impact:stored cross-site scripting",
            "keyphrase": "stored cross-site scripting",
            "type": "impact"
          }
        ]
      },
      "similarity": 161.4321935321263
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "keyphrase_sources": [
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "impact:stored cross-site scripting",
            "keyphrase": "stored cross-site scripting",
            "type": "impact"
          }
        ]
      },
      "similarity": 142.7544964517316
    },
    {
      "metadata": {
        "doc_id": "80",
        "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
        "source": "sparse",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.",
        "keyphrase_sources": [
          {
            "id": "impact:stored cross-site scripting",
            "keyphrase": "stored cross-site scripting",
            "type": "impact"
          }
        ]
      },
      "similarity": 76.66662351205447
    },
    {
      "metadata": {
        "doc_id": "347",
        "name": "Improper Verification of Cryptographic Signature",
        "source": "sparse",
        "original_content": "The product does not verify, or incorrectly verifies, the cryptographic signature for data.",
        "keyphrase_sources": [
          {
            "id": "product:FraudLabs Pro SMS Verification",
            "keyphrase": "FraudLabs Pro SMS Verification",
            "type": "product"
          },
          {
            "id": "version:n/a through 1.10.1",
            "keyphrase": "n/a through 1.10.1",
            "type": "version"
          }
        ]
      },
      "similarity": 60.54407305814166
    },
    {
      "metadata": {
        "doc_id": "522",
        "name": "Insufficiently Protected Credentials",
        "source": "sparse",
        "original_content": "The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.",
        "keyphrase_sources": [
          {
            "id": "product:FraudLabs Pro SMS Verification",
            "keyphrase": "FraudLabs Pro SMS Verification",
            "type": "product"
          }
        ]
      },
      "similarity": 55.15466859845079
    },
    {
      "metadata": {
        "doc_id": "290",
        "name": "Authentication Bypass by Spoofing",
        "source": "sparse",
        "original_content": "This attack-focused weakness is caused by incorrectly implemented authentication schemes that are subject to spoofing attacks.",
        "keyphrase_sources": [
          {
            "id": "product:FraudLabs Pro SMS Verification",
            "keyphrase": "FraudLabs Pro SMS Verification",
            "type": "product"
          },
          {
            "id": "version:n/a through 1.10.1",
            "keyphrase": "n/a through 1.10.1",
            "type": "version"
          }
        ]
      },
      "similarity": 53.20237301496287
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-116",
      "CWE-345",
      "CWE-80",
      "CWE-330",
      "CWE-79",
      "CWE-472",
      "CWE-352",
      "CWE-303",
      "CWE-451",
      "CWE-1391",
      "CWE-668",
      "CWE-807"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "352": [
      {
        "id": "rootcause:improper access control",
        "keyphrase": "improper access control",
        "type": "rootcause"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "weakness:cross-site request forgery",
        "keyphrase": "cross-site request forgery",
        "type": "weakness"
      },
      {
        "id": "impact:stored cross-site scripting",
        "keyphrase": "stored cross-site scripting",
        "type": "impact"
      },
      {
        "id": "product:FraudLabs Pro SMS Verification",
        "keyphrase": "FraudLabs Pro SMS Verification",
        "type": "product"
      },
      {
        "id": "version:n/a through 1.10.1",
        "keyphrase": "n/a through 1.10.1",
        "type": "version"
      }
    ],
    "918": [
      {
        "id": "rootcause:improper access control",
        "keyphrase": "improper access control",
        "type": "rootcause"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "weakness:cross-site request forgery",
        "keyphrase": "cross-site request forgery",
        "type": "weakness"
      },
      {
        "id": "product:FraudLabs Pro SMS Verification",
        "keyphrase": "FraudLabs Pro SMS Verification",
        "type": "product"
      },
      {
        "id": "version:n/a through 1.10.1",
        "keyphrase": "n/a through 1.10.1",
        "type": "version"
      }
    ],
    "434": [
      {
        "id": "rootcause:improper access control",
        "keyphrase": "improper access control",
        "type": "rootcause"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "impact:stored cross-site scripting",
        "keyphrase": "stored cross-site scripting",
        "type": "impact"
      },
      {
        "id": "version:n/a through 1.10.1",
        "keyphrase": "n/a through 1.10.1",
        "type": "version"
      }
    ],
    "89": [
      {
        "id": "rootcause:improper access control",
        "keyphrase": "improper access control",
        "type": "rootcause"
      },
      {
        "id": "weakness:cross-site request forgery",
        "keyphrase": "cross-site request forgery",
        "type": "weakness"
      }
    ],
    "79": [
      {
        "id": "rootcause:improper access control",
        "keyphrase": "improper access control",
        "type": "rootcause"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "weakness:cross-site request forgery",
        "keyphrase": "cross-site request forgery",
        "type": "weakness"
      },
      {
        "id": "impact:stored cross-site scripting",
        "keyphrase": "stored cross-site scripting",
        "type": "impact"
      }
    ],
    "116": [
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "impact:stored cross-site scripting",
        "keyphrase": "stored cross-site scripting",
        "type": "impact"
      }
    ],
    "601": [
      {
        "id": "weakness:cross-site request forgery",
        "keyphrase": "cross-site request forgery",
        "type": "weakness"
      }
    ],
    "80": [
      {
        "id": "impact:stored cross-site scripting",
        "keyphrase": "stored cross-site scripting",
        "type": "impact"
      }
    ],
    "347": [
      {
        "id": "product:FraudLabs Pro SMS Verification",
        "keyphrase": "FraudLabs Pro SMS Verification",
        "type": "product"
      },
      {
        "id": "version:n/a through 1.10.1",
        "keyphrase": "n/a through 1.10.1",
        "type": "version"
      }
    ],
    "522": [
      {
        "id": "product:FraudLabs Pro SMS Verification",
        "keyphrase": "FraudLabs Pro SMS Verification",
        "type": "product"
      }
    ],
    "290": [
      {
        "id": "product:FraudLabs Pro SMS Verification",
        "keyphrase": "FraudLabs Pro SMS Verification",
        "type": "product"
      },
      {
        "id": "version:n/a through 1.10.1",
        "keyphrase": "n/a through 1.10.1",
        "type": "version"
      }
    ]
  }
}