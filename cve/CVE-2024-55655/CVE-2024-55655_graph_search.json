{
  "retriever": "graph",
  "query": "sigstore-python is a Python tool for generating and verifying Sigstore signatures. Versions of sigstore-python newer than 2.0.0 but prior to 3.6.0 perform insufficient validation of the integration time present in v2 and v3 bundles during the verification flow the integration time is verified *if* a source of signed time (such as an inclusion promise) is present, but is otherwise trusted if no source of signed time is present. This does not affect v1 bundles, as the v1 bundle format always requires an inclusion promise. Sigstore uses signed time to support verification of signatures made against short-lived signing keys. The impact and severity of this weakness is *low*, as Sigstore contains multiple other enforcing components that prevent an attacker who modifies the integration timestamp within a bundle from impersonating a valid signature. In particular, an attacker who modifies the integration timestamp can induce a Denial of Service, but in no different manner than already possible with bundle access (e.g. modifying the signature itself such that it fails to verify). Separately, an attacker could upload a *new* entry to the transparency service, and substitute their new entrys time. However, this would still be rejected at validation time, as the new entrys (valid) signed time would be outside the validity window of the original signing certificate and would nonetheless render the attacker auditable. Consider specifically these CWEs: CWE-1390 CWE-327 CWE-297 CWE-194 CWE-208 CWE-347 CWE-367 CWE-295",
  "keyphrases": {
    "original_query": "sigstore-python is a Python tool for generating and verifying Sigstore signatures. Versions of sigstore-python newer than 2.0.0 but prior to 3.6.0 perform insufficient validation of the integration time present in v2 and v3 bundles during the verification flow the integration time is verified *if* a source of signed time (such as an inclusion promise) is present, but is otherwise trusted if no source of signed time is present. This does not affect v1 bundles, as the v1 bundle format always requires an inclusion promise. Sigstore uses signed time to support verification of signatures made against short-lived signing keys. The impact and severity of this weakness is *low*, as Sigstore contains multiple other enforcing components that prevent an attacker who modifies the integration timestamp within a bundle from impersonating a valid signature. In particular, an attacker who modifies the integration timestamp can induce a Denial of Service, but in no different manner than already possible with bundle access (e.g. modifying the signature itself such that it fails to verify). Separately, an attacker could upload a *new* entry to the transparency service, and substitute their new entrys time. However, this would still be rejected at validation time, as the new entrys (valid) signed time would be outside the validity window of the original signing certificate and would nonetheless render the attacker auditable.",
    "enhanced_query": "sigstore-python is a Python tool for generating and verifying Sigstore signatures. Versions of sigstore-python newer than 2.0.0 but prior to 3.6.0 perform insufficient validation of the integration time present in v2 and v3 bundles during the verification flow the integration time is verified *if* a source of signed time (such as an inclusion promise) is present, but is otherwise trusted if no source of signed time is present. This does not affect v1 bundles, as the v1 bundle format always requires an inclusion promise. Sigstore uses signed time to support verification of signatures made against short-lived signing keys. The impact and severity of this weakness is *low*, as Sigstore contains multiple other enforcing components that prevent an attacker who modifies the integration timestamp within a bundle from impersonating a valid signature. In particular, an attacker who modifies the integration timestamp can induce a Denial of Service, but in no different manner than already possible with bundle access (e.g. modifying the signature itself such that it fails to verify). Separately, an attacker could upload a *new* entry to the transparency service, and substitute their new entrys time. However, this would still be rejected at validation time, as the new entrys (valid) signed time would be outside the validity window of the original signing certificate and would nonetheless render the attacker auditable. Consider specifically these CWEs: CWE-1390 CWE-327 CWE-297 CWE-194 CWE-208 CWE-347 CWE-367 CWE-295",
    "cwe_mentions": [
      "CWE-1390",
      "CWE-327",
      "CWE-297",
      "CWE-194",
      "CWE-208",
      "CWE-347",
      "CWE-367",
      "CWE-295"
    ],
    "search_time": 2.928208351135254
  },
  "timestamp": "2025-07-13 23:19:58",
  "cve_id": "CVE-2024-55655",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "208",
      "name": "Observable Timing Discrepancy",
      "type": "Base",
      "score": 2.767472976852559,
      "relationship_count": 0
    },
    {
      "cwe_id": "609",
      "name": "Double-Checked Locking",
      "type": "base",
      "score": 2.2100000000000004,
      "relationship_count": 0
    },
    {
      "cwe_id": "301",
      "name": "Reflection Attack in an Authentication Protocol",
      "type": "base",
      "score": 2.1762,
      "relationship_count": 0
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "type": "base",
      "score": 2.1189999999999998,
      "relationship_count": 0
    },
    {
      "cwe_id": "370",
      "name": "Missing Check for Certificate Revocation after Initial Check",
      "type": "variant",
      "score": 1.91472,
      "relationship_count": 0
    },
    {
      "cwe_id": "327",
      "name": "Use of a Broken or Risky Cryptographic Algorithm",
      "type": "Class",
      "score": 1.6904696011796392,
      "relationship_count": 0
    },
    {
      "cwe_id": "295",
      "name": "Improper Certificate Validation",
      "type": "Base",
      "score": 1.6390439207659915,
      "relationship_count": 0
    },
    {
      "cwe_id": "322",
      "name": "Key Exchange without Entity Authentication",
      "type": "base",
      "score": 1.521,
      "relationship_count": 0
    },
    {
      "cwe_id": "197",
      "name": "Numeric Truncation Error",
      "type": "base",
      "score": 1.521,
      "relationship_count": 0
    },
    {
      "cwe_id": "386",
      "name": "Symbolic Name not Mapping to Correct Object",
      "type": "base",
      "score": 1.521,
      "relationship_count": 0
    },
    {
      "cwe_id": "385",
      "name": "Covert Timing Channel",
      "type": "Base",
      "score": 1.4869255944457802,
      "relationship_count": 0
    },
    {
      "cwe_id": "297",
      "name": "Improper Validation of Certificate with Host Mismatch",
      "type": "Variant",
      "score": 1.462982236004287,
      "relationship_count": 0
    },
    {
      "cwe_id": "347",
      "name": "Improper Verification of Cryptographic Signature",
      "type": "Base",
      "score": 1.4498219653986162,
      "relationship_count": 0
    },
    {
      "cwe_id": "350",
      "name": "Reliance on Reverse DNS Resolution for a Security-Critical Action",
      "type": "variant",
      "score": 1.3747200000000002,
      "relationship_count": 0
    },
    {
      "cwe_id": "1390",
      "name": "Weak Authentication",
      "type": "class",
      "score": 1.3648,
      "relationship_count": 0
    },
    {
      "cwe_id": "298",
      "name": "Improper Validation of Certificate Expiration",
      "type": "Variant",
      "score": 1.1655654860642295,
      "relationship_count": 0
    },
    {
      "cwe_id": "486",
      "name": "Comparison of Classes by Name",
      "type": "variant",
      "score": 1.0584,
      "relationship_count": 0
    },
    {
      "cwe_id": "296",
      "name": "Improper Following of a Certificate's Chain of Trust",
      "type": "Base",
      "score": 1.051363192572635,
      "relationship_count": 0
    },
    {
      "cwe_id": "836",
      "name": "Use of Password Hash Instead of Password for Authentication",
      "type": "base",
      "score": 1.0062,
      "relationship_count": 0
    },
    {
      "cwe_id": "804",
      "name": "Guessable CAPTCHA",
      "type": "base",
      "score": 1.0062,
      "relationship_count": 0
    }
  ]
}