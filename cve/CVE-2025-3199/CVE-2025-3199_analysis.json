{
  "cve_id": "CVE-2025-3199",
  "description": "A vulnerability was found in ageerle ruoyi-ai up to 2.0.1 and classified as critical. Affected by this issue is some unknown functionality of the file ruoyi-modules/ruoyi-system/src/main/java/org/ruoyi/system/controller/system/SysModelController.java of the component API Interface. The manipulation leads to **improper authorization**. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 2.0.2 is able to address this issue. The name of the patch is c0daf641fb25b244591b7a6c3affa35c69d321fe. It is recommended to upgrade the affected component.",
  "key_phrases": {
    "rootcause": "improper authorization",
    "weakness": "",
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": "ageerle ruoyi-ai",
    "version": "up to 2.0.1",
    "component": "ruoyi-modules/ruoyi-system/src/main/java/org/ruoyi/system/controller/system/SysModelController.java"
  },
  "reference_content": "Here's an analysis of the provided content, focusing on the information relevant to CVE-2025-3199:\n\n**Content from github.com_e8130919_20250624_194525.html (stripped)**\n\n*   **Relates to CVE-2025-3199:** YES\n*   **Root cause of vulnerability:** The SysModelController component in the ruoyi-ai project lacks proper access control, allowing unauthorized access to sensitive API interfaces. Specifically, the APIs for adding, deleting, modifying, and querying large model configurations can be accessed without authentication.\n*   **Weaknesses/vulnerabilities present:** Unauthorized access vulnerability in SysModelController component. Attackers can add, delete, modify, and query system's large model configurations without credentials.\n*   **Impact of exploitation:** Attackers can damage the confidentiality, integrity, and availability of the system.\n*   **Attack vectors:** Exploitation involves sending HTTP requests to specific API endpoints (e.g., `/prod-api/system/model`) without providing any authentication credentials.\n*   **Required attacker capabilities/position:** An attacker needs to be able to send HTTP requests to the vulnerable API endpoints. No specific privileges or position within the system are required.\n*   **Mitigation or fix:** Add permission control to relevant API interfaces.\n\n**More detail than the official CVE description:** This content provides detailed information, including the specific vulnerable code location, the affected API endpoints, a proof-of-concept (POC), and the impact of the vulnerability. The CVE description retrieval is unavailable, but this content offers extensive technical details.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-862 | Missing Authorization | 0.9 | Base | Primary | Allowed |\n| CWE-285 | Improper Authorization | 0.7 | Class | Secondary | Discouraged |\n| CWE-306 | Missing Authentication for Critical Function | 0.6 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-862, which is a Base level CWE, while CWE-285 is a Class level CWE that represents a more general category of authorization issues. CWE-306 is also considered because the description mentions that the API interfaces can be accessed without authentication which is related to authorization bypass. CWE-862 is a more specific child of CWE-285 and a sibling to CWE-863 Incorrect Authorization. These relationships helped in refining the selection towards the most accurate representation of the vulnerability.\n\n```mermaid\ngraph TD\n    cwe862[\"CWE-862: Missing Authorization\"]\n    cwe285[\"CWE-285: Improper Authorization\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    \n    cwe862 -->|CHILDOF| cwe285\n    cwe306 -->|CHILDOF| cwe287[\"CWE-287: Improper Authentication\"]\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe862 primary\n    class cwe285,cwe306 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **missing authorization** check on the API interfaces, which leads to unauthorized access to sensitive functionalities such as adding, deleting, modifying, and querying large model configurations. The final impact is that attackers can compromise the confidentiality, integrity, and availability of the system.\n  - **Root Cause:** **Missing authorization** check.\n  - **Weakness:** Unauthorized access to sensitive API interfaces.\n  - **Impact:** Compromised confidentiality, integrity, and availability.\n\n## Summary of Analysis\nThe initial analysis identified **improper authorization** as the root cause. After reviewing the details from the CVE reference link, the vulnerability is more specifically about the **missing authorization** checks for the SysModelController component. The reference link content confirms that the API interfaces lack proper access control, allowing unauthorized access to sensitive functionalities. The selection of CWE-862 is based on the fact that the application doesn't check whether the user is authorized at all.\nThe decision to select CWE-862 is based on the evidence from the CVE reference links content summary: \"The SysModelController component in the ruoyi-ai project lacks proper access control, allowing unauthorized access to sensitive API interfaces...the APIs for adding, deleting, modifying, and querying large model configurations can be accessed without authentication.\" This clearly indicates a **missing authorization** check, making CWE-862 the most appropriate choice.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-284: Improper Access Control\n**Abstraction Level**: Pillar\n**Similarity Score**: 0.800\n\n**Description**: The product does not adequately control access to resources or privileges, which allows an attacker to violate integrity, confidentiality, or availability.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is very high-level and should only be used when a more specific CWE entry cannot be identified.\n\n## CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n**Abstraction Level**: Base\n**Similarity Score**: 0.669\n\n**Description**: The product does not neutralize or incorrectly neutralizes input before it is placed in output that is used as a web page that is served to other users.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 0.624\n\n**Description**: The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-705: Incorrect Control Flow Scoping\n**Abstraction Level**: Class\n**Similarity Score**: 0.568\n\n**Description**: The application defines a control flow scope that is either too broad or too narrow, which could expose resources or functionality to unintended actors.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-1336: Improper Neutralization of Special Elements Used in a Template Engine\n**Abstraction Level**: Base\n**Similarity Score**: 0.563\n\n**Description**: The product constructs all or part of a template using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended template when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-334: Small Space of Random Values\n**Abstraction Level**: Base\n**Similarity Score**: 0.559\n\n**Description**: The application uses a pseudorandom number generator (PRNG) that can only produce a small number of possible values. This can reduce the effectiveness of the generated value, especially if it is used for security purposes.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-285: Improper Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 0.552\n\n**Description**: The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-285 is high-level and lower-level CWEs can frequently be used instead. It is a level-1 Class (i.e., a child of a Pillar).\n\n## CWE-306: Missing Authentication for Critical Function\n**Abstraction Level**: Base\n**Similarity Score**: 0.549\n\n**Description**: The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-269: Improper Privilege Management\n**Abstraction Level**: Class\n**Similarity Score**: 0.583\n\n**Description**: The software does not properly manage privileges, possibly including privilege assignment, privilege revocation, or checking whether the caller has sufficient privileges.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n## CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')\n**Abstraction Level**: base\n**Similarity Score**: 0.003\n\n**Description**: The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\nCWE-284 Improper Access Control, CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'), CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'), CWE-705 Incorrect Control Flow Scoping, CWE-1336 Improper Neutralization of Special Elements Used in a Template Engine, CWE-334 Small Space of Random Values, CWE-285 Improper Authorization, CWE-306 Missing Authentication for Critical Function, CWE-269 Improper Privilege Management, CWE-78 Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') were considered but not used.\nC",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-862 | Missing Authorization | 0.9 | Base | Primary | Allowed |\n| CWE-285 | Improper Authorization | 0.7 | Class | Secondary | Discouraged |\n| CWE-306 | Missing Authentication for Critical Function | 0.6 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-862, which is a Base level CWE, while CWE-285 is a Class level CWE that represents a more general category of authorization issues. CWE-306 is also considered because the description mentions that the API interfaces can be accessed without authentication which is related to authorization bypass. CWE-862 is a more specific child of CWE-285 and a sibling to CWE-863 Incorrect Authorization. These relationships helped in refining the selection towards the most accurate representation of the vulnerability.\n\n```mermaid\ngraph TD\n    cwe862[\"CWE-862: Missing Authorization\"]\n    cwe285[\"CWE-285: Improper Authorization\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    \n    cwe862 -->|CHILDOF| cwe285\n    cwe306 -->|CHILDOF| cwe287[\"CWE-287: Improper Authentication\"]\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe862 primary\n    class cwe285,cwe306 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **missing authorization** check on the API interfaces, which leads to unauthorized access to sensitive functionalities such as adding, deleting, modifying, and querying large model configurations. The final impact is that attackers can compromise the confidentiality, integrity, and availability of the system.\n  - **Root Cause:** **Missing authorization** check.\n  - **Weakness:** Unauthorized access to sensitive API interfaces.\n  - **Impact:** Compromised confidentiality, integrity, and availability.\n\n## Summary of Analysis\nThe initial analysis identified **improper authorization** as the root cause. After reviewing the details from the CVE reference link, the vulnerability is more specifically about the **missing authorization** checks for the SysModelController component. The reference link content confirms that the API interfaces lack proper access control, allowing unauthorized access to sensitive functionalities. The selection of CWE-862 is based on the fact that the application doesn't check whether the user is authorized at all.\nThe decision to select CWE-862 is based on the evidence from the CVE reference links content summary: \"The SysModelController component in the ruoyi-ai project lacks proper access control, allowing unauthorized access to sensitive API interfaces...the APIs for adding, deleting, modifying, and querying large model configurations can be accessed without authentication.\" This clearly indicates a **missing authorization** check, making CWE-862 the most appropriate choice.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-284: Improper Access Control\n**Abstraction Level**: Pillar\n**Similarity Score**: 0.800\n\n**Description**: The product does not adequately control access to resources or privileges, which allows an attacker to violate integrity, confidentiality, or availability.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is very high-level and should only be used when a more specific CWE entry cannot be identified.\n\n## CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n**Abstraction Level**: Base\n**Similarity Score**: 0.669\n\n**Description**: The product does not neutralize or incorrectly neutralizes input before it is placed in output that is used as a web page that is served to other users.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 0.624\n\n**Description**: The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-705: Incorrect Control Flow Scoping\n**Abstraction Level**: Class\n**Similarity Score**: 0.568\n\n**Description**: The application defines a control flow scope that is either too broad or too narrow, which could expose resources or functionality to unintended actors.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-1336: Improper Neutralization of Special Elements Used in a Template Engine\n**Abstraction Level**: Base\n**Similarity Score**: 0.563\n\n**Description**: The product constructs all or part of a template using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended template when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-334: Small Space of Random Values\n**Abstraction Level**: Base\n**Similarity Score**: 0.559\n\n**Description**: The application uses a pseudorandom number generator (PRNG) that can only produce a small number of possible values. This can reduce the effectiveness of the generated value, especially if it is used for security purposes.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-285: Improper Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 0.552\n\n**Description**: The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-285 is high-level and lower-level CWEs can frequently be used instead. It is a level-1 Class (i.e., a child of a Pillar).\n\n## CWE-306: Missing Authentication for Critical Function\n**Abstraction Level**: Base\n**Similarity Score**: 0.549\n\n**Description**: The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-269: Improper Privilege Management\n**Abstraction Level**: Class\n**Similarity Score**: 0.583\n\n**Description**: The software does not properly manage privileges, possibly including privilege assignment, privilege revocation, or checking whether the caller has sufficient privileges.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n## CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')\n**Abstraction Level**: base\n**Similarity Score**: 0.003\n\n**Description**: The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\nCWE-284 Improper Access Control, CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'), CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'), CWE-705 Incorrect Control Flow Scoping, CWE-1336 Improper Neutralization of Special Elements Used in a Template Engine, CWE-334 Small Space of Random Values, CWE-285 Improper Authorization, CWE-306 Missing Authentication for Critical Function, CWE-269 Improper Privilege Management, CWE-78 Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') were considered but not used.\nC\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "284",
        "name": "Improper Access Control",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Authorization",
        "match_reason": "term_in_phrase_whole_phrase"
      },
      "similarity": 800.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 669.400590245172
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 623.8765633509952
    },
    {
      "metadata": {
        "doc_id": "705",
        "name": "Incorrect Control Flow Scoping",
        "source": "sparse"
      },
      "similarity": 567.6344892742621
    },
    {
      "metadata": {
        "doc_id": "1336",
        "name": "Improper Neutralization of Special Elements Used in a Template Engine",
        "source": "sparse"
      },
      "similarity": 563.1029294696248
    },
    {
      "metadata": {
        "doc_id": "334",
        "name": "Small Space of Random Values",
        "source": "sparse"
      },
      "similarity": 558.9772447370874
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 551.9664726774625
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 548.5457542181812
    },
    {
      "metadata": {
        "doc_id": "269",
        "name": "Improper Privilege Management",
        "type": "Class",
        "original_content": "The product does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor.",
        "keyphrase_source": "rootcause:improper authorization",
        "source": "dense",
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-269 is commonly misused. It can be conflated with \"privilege escalation,\" which is a technical impact that is listed in many low-information vulnerability reports [REF-1287]. It is not useful for trend analysis.",
          "comments": "If an error or mistake allows privilege escalation, then use the CWE ID for that mistake. Avoid using CWE-269 when only phrases such as \"privilege escalation\" or \"gain privileges\" are available, as these indicate technical impact of the vulnerability - not the root cause weakness. If the root cause seems to be directly related to privileges, then examine the children of CWE-269 for additional hints, such as Execution with Unnecessary Privileges (CWE-250) or Incorrect Privilege Assignment (CWE-266).",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.582745892463499
          }
        }
      },
      "similarity": 0.582745892463499
    },
    {
      "doc_id": "78",
      "text": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
      "score": 0.605648128799882,
      "metadata": {
        "doc_id": "78",
        "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "type": "Base",
        "extended_description": "\n\nThis weakness can lead to a vulnerability in environments in which the attacker does not have direct access to the operating system, such as in web applications. Alternately, if the weakness occurs in a privileged program, it could allow the attacker to specify commands that normally would not be accessible, or to call alternate commands with privileges that the attacker does not have. The problem is exacerbated if the compromised process does not follow the principle of least privilege, because the attacker-controlled commands may run with special system privileges that increases the amount of damage.\n\n\nThere are at least two subtypes of OS command injection:\n\n\n  - The application intends to execute a single, fixed program that is under its own control. It intends to use externally-supplied inputs as arguments to that program. For example, the program might use system(\"nslookup [HOSTNAME]\") to run nslookup and allow the user to supply a HOSTNAME, which is used as an argument. Attackers cannot prevent nslookup from executing. However, if the program does not remove command separators from the HOSTNAME argument, attackers could place the separators into the arguments, which allows them to execute their own program after nslookup has finished executing.\n\n  - The application accepts an input that it uses to fully select which program to run, as well as which commands to use. The application simply redirects this entire command to the operating system. For example, the program might use \"exec([COMMAND])\" to execute the [COMMAND] that was supplied by the user. If the COMMAND is under attacker control, then the attacker can execute arbitrary commands or programs. If the command is being executed using functions like exec() and CreateProcess(), the attacker might not be able to combine multiple commands together in the same line.\n\nFrom a weakness standpoint, these variants represent distinct programmer errors. In the first variant, the programmer clearly intends that input from untrusted parties will be part of the arguments in the command to be executed. In the second variant, the programmer does not intend for the command to be accessible to any untrusted party, but the programmer probably has not accounted for alternate ways in which malicious attackers can provide input.",
        "alternate_terms": [
          "Shell injection",
          "Shell metacharacters",
          "OS Command Injection"
        ],
        "original_content": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
        "relationships": [
          {
            "source_id": "78",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "78",
            "target_id": "88",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "78",
            "target_id": "77",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1340"
            }
          },
          {
            "source_id": "78",
            "target_id": "77",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1305"
            }
          },
          {
            "source_id": "78",
            "target_id": "74",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "78",
            "target_id": "77",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "77",
            "target_id": "78",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "74",
            "target_id": "78",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "184",
            "target_id": "78",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "source": "graph",
        "sources": [
          "vector",
          "graph"
        ],
        "vector_score": 0.605648128799882,
        "graph_score": 3.8870000000000005,
        "score_components": {
          "relationship_chain": 0.8,
          "explicit_mention": 1.0,
          "abstraction_path": 0.9,
          "sequence_path": 0.8
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "79",
                  "184",
                  "CANFOLLOW"
                ],
                [
                  "184",
                  "78",
                  "CANPRECEDE"
                ]
              ],
              "score": 0.8,
              "type": "relationship_chain",
              "source": "79"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "79",
                  "184",
                  "CANFOLLOW"
                ],
                [
                  "184",
                  "78",
                  "CANPRECEDE"
                ]
              ],
              "score": 0.8,
              "type": "vulnerability_sequence_forward",
              "source": "79"
            }
          }
        },
        "is_explicit": true,
        "abstraction_level": "base",
        "position": "after",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5794830649510615,
            "graph": 2.574459251519953
          }
        }
      },
      "similarity": 2.574459251519953
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-89",
      "CWE-334",
      "CWE-862",
      "CWE-306",
      "CWE-79",
      "CWE-1336",
      "CWE-269",
      "CWE-285",
      "CWE-78",
      "CWE-284",
      "CWE-287",
      "CWE-705"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}