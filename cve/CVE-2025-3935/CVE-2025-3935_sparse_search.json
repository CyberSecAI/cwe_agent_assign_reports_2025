{
  "retriever": "sparse",
  "query": "ScreenConnect versions 25.2.3 and earlier versions may be susceptible to a ViewState code injection attack. ASP.NET Web Forms use ViewState to preserve page and control state, with data encoded using Base64 protected by machine keys. It is important to note that to obtain these machine keys, privileged system level access must be obtained. If these machine keys are compromised, attackers could create and send a malicious ViewState to the website, potentially leading to remote code execution on the server. The risk does not originate from a vulnerability introduced by ScreenConnect, but from platform level behavior. This had no direct impact to ScreenConnect Client. ScreenConnect 2025.4 patch disables ViewState and removes any dependency on it.",
  "keyphrases": {
    "weakness": [
      "code injection"
    ]
  },
  "timestamp": "2025-07-14 22:20:39",
  "cve_id": "CVE-2025-3935",
  "result_count": 12,
  "results": [
    {
      "cwe_id": "346",
      "name": "Origin Validation Error",
      "score": 523.0247855093185,
      "search_source": "weakness:code injection"
    },
    {
      "cwe_id": "94",
      "name": "Improper Control of Generation of Code ('Code Injection')",
      "score": 509.8271252640907,
      "search_source": "weakness:code injection"
    },
    {
      "cwe_id": "502",
      "name": "Deserialization of Untrusted Data",
      "score": 507.02224267415477,
      "search_source": "weakness:code injection"
    },
    {
      "cwe_id": "306",
      "name": "Missing Authentication for Critical Function",
      "score": 500.7123044672838,
      "search_source": "weakness:code injection"
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "score": 500.31761108654166,
      "search_source": "weakness:code injection"
    },
    {
      "cwe_id": "203",
      "name": "Observable Discrepancy",
      "score": 498.8838154390075,
      "search_source": "weakness:code injection"
    },
    {
      "cwe_id": "79",
      "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "score": 498.73809942147665,
      "search_source": "weakness:code injection"
    },
    {
      "cwe_id": "347",
      "name": "Improper Verification of Cryptographic Signature",
      "score": 496.2950367216094,
      "search_source": "weakness:code injection"
    },
    {
      "cwe_id": "20",
      "name": "Improper Input Validation",
      "score": 491.40207100765383,
      "search_source": "weakness:code injection"
    },
    {
      "cwe_id": "1336",
      "name": "Improper Neutralization of Special Elements Used in a Template Engine",
      "score": 490.8456594158655,
      "search_source": "weakness:code injection"
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "score": 174.39279312154767,
      "search_source": "base_query"
    },
    {
      "cwe_id": "327",
      "name": "Use of a Broken or Risky Cryptographic Algorithm",
      "score": 173.55262508685757,
      "search_source": "base_query"
    }
  ]
}