{
  "query": "In the Linux kernel, the following vulnerability has been resolved drm/xe/client add missing bo locking in show_meminfo() bo_meminfo() wants to inspect bo state like tt and the ttm resource, however this state can change at any point leading to stuff like NPD and UAF, if the bo lock is not held. Grab the bo lock when calling bo_meminfo(), ensuring we drop any spinlocks first. In the case of object_idr we now also need to hold a ref. v2 (MattB) - Also add xe_bo_assert_held() (cherry picked from commit 4f63d712fa104c3ebefcb289d1e733e86d8698c7)",
  "count": 13,
  "results": [
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "abstraction": "Class",
      "score": 485.00262087190106,
      "original_score": 485.00262087190106,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "abstraction": "Base",
      "score": 459.01928931851864,
      "original_score": 459.01928931851864,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "764",
      "name": "Multiple Locks of a Critical Resource",
      "abstraction": "Base",
      "score": 440.71140358944393,
      "original_score": 440.71140358944393,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "abstraction": "Base",
      "score": 419.97966146009105,
      "original_score": 419.97966146009105,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "abstraction": "Class",
      "score": 416.9507422741591,
      "original_score": 416.9507422741591,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "abstraction": "Base",
      "score": 404.81372260347536,
      "original_score": 404.81372260347536,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 403.74185178928434,
      "original_score": 403.74185178928434,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "212",
      "name": "Improper Removal of Sensitive Information Before Storage or Transfer",
      "abstraction": "Base",
      "score": 398.7739362310671,
      "original_score": 398.7739362310671,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "abstraction": "Base",
      "score": 396.7435090895408,
      "original_score": 396.7435090895408,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "306",
      "name": "Missing Authentication for Critical Function",
      "abstraction": "Base",
      "score": 391.9247254290321,
      "original_score": 391.9247254290321,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "617",
      "name": "Reachable Assertion",
      "abstraction": "Base",
      "score": 114.22561131696465,
      "original_score": 114.22561131696465,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "610",
      "name": "Externally Controlled Reference to a Resource in Another Sphere",
      "abstraction": "Class",
      "score": 113.33791481036639,
      "original_score": 113.33791481036639,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "663",
      "name": "Use of a Non-reentrant Function in a Concurrent Context",
      "abstraction": "Base",
      "score": 113.14966715940784,
      "original_score": 113.14966715940784,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 113.14966715940784,
    "max": 485.00262087190106,
    "mean": 350.64420430332706,
    "median": 403.74185178928434,
    "count": 13
  }
}