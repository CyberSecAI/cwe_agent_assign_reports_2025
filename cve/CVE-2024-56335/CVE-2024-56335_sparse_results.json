{
  "query": "vaultwarden is an unofficial Bitwarden compatible server written in Rust, formerly known as bitwarden_rs. In affected versions an attacker is capable of updating or deleting groups from an organization given a few conditions 1. The attacker has a user account in the server. 2. The attackers account has admin or owner permissions in an unrelated organization. 3. The attacker knows the target organizations UUID and the target groups UUID. Note that this vulnerability is related to group functionality and as such is only applicable for servers who have enabled the `ORG_GROUPS_ENABLED` setting, which is disabled by default. This attack can lead to different situations 1. Denial of service, the attacker can limit users from accessing the organizations data by removing their membership from the group. 2. Privilege escalation, if the attacker is part of the victim organization, they can escalate their own privileges by joining a group they wouldnt normally have access to. For attackers that arent part of the organization, this shouldnt lead to any possible plain-text data exfiltration as all the data is encrypted client side. This vulnerability is patched in Vaultwarden `1.32.7`, and users are recommended to update as soon as possible. If its not possible to update to `1.32.7`, some possible workarounds are 1. Disabling `ORG_GROUPS_ENABLED`, which would disable groups functionality on the server. 2. Disabling `SIGNUPS_ALLOWED`, which would not allow an attacker to create new accounts on the server.",
  "count": 10,
  "results": [
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "abstraction": "Class",
      "score": 470.3734477014587,
      "original_score": 470.3734477014587,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "1390",
      "name": "Weak Authentication",
      "abstraction": "Class",
      "score": 445.49798072877076,
      "original_score": 445.49798072877076,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "639",
      "name": "Authorization Bypass Through User-Controlled Key",
      "abstraction": "Base",
      "score": 439.80612825641634,
      "original_score": 439.80612825641634,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "285",
      "name": "Improper Authorization",
      "abstraction": "Class",
      "score": 438.93274173252667,
      "original_score": 438.93274173252667,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "287",
      "name": "Improper Authentication",
      "abstraction": "Class",
      "score": 428.12776760743975,
      "original_score": 428.12776760743975,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "732",
      "name": "Incorrect Permission Assignment for Critical Resource",
      "abstraction": "Class",
      "score": 423.63724609909644,
      "original_score": 423.63724609909644,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "306",
      "name": "Missing Authentication for Critical Function",
      "abstraction": "Base",
      "score": 421.5803409265475,
      "original_score": 421.5803409265475,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "201",
      "name": "Insertion of Sensitive Information Into Sent Data",
      "abstraction": "Base",
      "score": 421.24593898515116,
      "original_score": 421.24593898515116,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "862",
      "name": "Missing Authorization",
      "abstraction": "Class",
      "score": 420.6747053838601,
      "original_score": 420.6747053838601,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "918",
      "name": "Server-Side Request Forgery (SSRF)",
      "abstraction": "Base",
      "score": 419.80404360389485,
      "original_score": 419.80404360389485,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 419.80404360389485,
    "max": 470.3734477014587,
    "mean": 432.96803410251624,
    "median": 425.88250685326807,
    "count": 10
  }
}