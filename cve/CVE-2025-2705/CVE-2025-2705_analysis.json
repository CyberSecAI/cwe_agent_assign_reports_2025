{
  "cve_id": "CVE-2025-2705",
  "description": "A vulnerability classified as critical has been found in Digiwin ERP 5.1. Affected is the function DoUpload/DoWebUpload of the file /Api/FileUploadApi.ashx. The manipulation of the argument File leads to **unrestricted upload**. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "unrestricted upload",
    "impact": "",
    "vector": "manipulation of the argument File",
    "attacker": "",
    "product": "Digiwin ERP",
    "version": "5.1",
    "component": "/Api/FileUploadApi.ashx"
  },
  "reference_content": null,
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-434 | Unrestricted Upload of File with Dangerous Type | 1.0 | Base | Allowed | Primary CWE |\n| CWE-73 | External Control of File Name or Path | 0.7 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-434, which represents the **unrestricted upload** of dangerous files. CWE-73 is considered as a secondary candidate because the vulnerability description mentions the manipulation of the \"File\" argument, suggesting external control over the file name or path. CWE-434 stands out as the primary issue due to the **unrestricted upload**, which directly aligns with its description.\n\n```mermaid\ngraph TD\n    cwe434[\"CWE-434: Unrestricted Upload of File with Dangerous Type\"]\n    cwe73[\"CWE-73: External Control of File Name or Path\"]\n    \n    cwe434 -- PEEROF --> cwe73\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe434 primary\n    class cwe73 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **unrestricted upload** of a file, represented by CWE-434. The attacker manipulates the \"File\" argument, which could potentially lead to the external control of the file name or path (CWE-73). The primary root cause is CWE-434, leading directly to the vulnerability, while CWE-73 could be a contributing factor.\n\n## Summary of Analysis\nThe initial analysis strongly points towards CWE-434 as the primary vulnerability, supported by the **weakness** being **unrestricted upload**. This is corroborated by the vulnerability description's emphasis on the ability to manipulate the \"File\" argument, leading to the direct upload of dangerous file types. The retriever results also listed CWE-434 as a top candidate. Therefore, the final assessment is based on the provided evidence, with CWE-434 selected as the most specific and accurate representation of the vulnerability. CWE-73 is also considered a secondary candidate because the vulnerability description mentions the manipulation of the \"File\" argument, suggesting external control over the file name or path.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 0.82\n**Source**: dense\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 2.66\n**Source**: graph\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-73: External Control of File Name or Path\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product allows user input to control or influence paths or file names that are used in filesystem operations.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n### CWE Considerations:\n\n*   **CWE-434: Unrestricted Upload of File with Dangerous Type**\n\n    *   **Rationale:** This CWE directly addresses the **unrestricted upload** aspect of the vulnerability. The vulnerability description clearly states that the manipulation of the \"File\" argument leads to this **unrestricted upload**, aligning perfectly with the characteristics of CWE-434.\n    *   **Security Implications:** This allows attackers to upload malicious files that can be executed on the server, potentially leading to code execution, data compromise, or system takeover.\n    *   **Relationships:** The \"PeerOf\" relationship to CWE-430 (Upload of Web Script Without Server-Side Validation) is relevant, as the uploaded file could contain a web script.\n    *   **Usage:** The mapping guidance specifies \"Allowed\" for this CWE, further supporting its applicability.\n*   **CWE-73: External Control of File Name or Path**\n\n    *   **Rationale:** The manipulation of the \"File\" argument suggests that the attacker has control over the file name or path used in the upload process.\n    *   **Security Implications:** This can lead to path traversal vulnerabilities, where attackers can upload files to arbitrary locations on the server.\n    *   **Relationships:** \"CanFollow\" relationship from CWE-22 and \"CanPrecede\" relationships to other CWEs are relevant.\n    *   **Usage:** The mapping guidance specifies \"Allowed\" for this CWE.\n*   **CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')** and **CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')**: These were considered due to their high retriever scores, but they are not directly applicable as the vulnerability's core issue is related to file handling rather than input sanitization for web page generation or SQL queries.\n*   **CWE-306: Missing Authentication for Critical Function**: While the vulnerability involves a critical function, the primary issue is the **unrestricted upload** rather than the absence of authentication.\n*   **CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')**: This is related to CWE-73. If the file path is not correctly validated, then the **unrestricted upload** could allow traversal issues.\n*   **CWE-425: Direct Request ('Forced Browsing')**: This is not directly applicable, because the **unrestricted upload** is the primary issue.\n\nBased on the retriever results, relationship analysis, and the detailed descriptions of the CWEs, CWE-434 best represents the primary vulnerability. CWE-73 is a secondary concern.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-434 | Unrestricted Upload of File with Dangerous Type | 1.0 | Base | Allowed | Primary CWE |\n| CWE-73 | External Control of File Name or Path | 0.7 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-434, which represents the **unrestricted upload** of dangerous files. CWE-73 is considered as a secondary candidate because the vulnerability description mentions the manipulation of the \"File\" argument, suggesting external control over the file name or path. CWE-434 stands out as the primary issue due to the **unrestricted upload**, which directly aligns with its description.\n\n```mermaid\ngraph TD\n    cwe434[\"CWE-434: Unrestricted Upload of File with Dangerous Type\"]\n    cwe73[\"CWE-73: External Control of File Name or Path\"]\n    \n    cwe434 -- PEEROF --> cwe73\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe434 primary\n    class cwe73 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **unrestricted upload** of a file, represented by CWE-434. The attacker manipulates the \"File\" argument, which could potentially lead to the external control of the file name or path (CWE-73). The primary root cause is CWE-434, leading directly to the vulnerability, while CWE-73 could be a contributing factor.\n\n## Summary of Analysis\nThe initial analysis strongly points towards CWE-434 as the primary vulnerability, supported by the **weakness** being **unrestricted upload**. This is corroborated by the vulnerability description's emphasis on the ability to manipulate the \"File\" argument, leading to the direct upload of dangerous file types. The retriever results also listed CWE-434 as a top candidate. Therefore, the final assessment is based on the provided evidence, with CWE-434 selected as the most specific and accurate representation of the vulnerability. CWE-73 is also considered a secondary candidate because the vulnerability description mentions the manipulation of the \"File\" argument, suggesting external control over the file name or path.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 0.82\n**Source**: dense\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 2.66\n**Source**: graph\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-73: External Control of File Name or Path\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product allows user input to control or influence paths or file names that are used in filesystem operations.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n### CWE Considerations:\n\n*   **CWE-434: Unrestricted Upload of File with Dangerous Type**\n\n    *   **Rationale:** This CWE directly addresses the **unrestricted upload** aspect of the vulnerability. The vulnerability description clearly states that the manipulation of the \"File\" argument leads to this **unrestricted upload**, aligning perfectly with the characteristics of CWE-434.\n    *   **Security Implications:** This allows attackers to upload malicious files that can be executed on the server, potentially leading to code execution, data compromise, or system takeover.\n    *   **Relationships:** The \"PeerOf\" relationship to CWE-430 (Upload of Web Script Without Server-Side Validation) is relevant, as the uploaded file could contain a web script.\n    *   **Usage:** The mapping guidance specifies \"Allowed\" for this CWE, further supporting its applicability.\n*   **CWE-73: External Control of File Name or Path**\n\n    *   **Rationale:** The manipulation of the \"File\" argument suggests that the attacker has control over the file name or path used in the upload process.\n    *   **Security Implications:** This can lead to path traversal vulnerabilities, where attackers can upload files to arbitrary locations on the server.\n    *   **Relationships:** \"CanFollow\" relationship from CWE-22 and \"CanPrecede\" relationships to other CWEs are relevant.\n    *   **Usage:** The mapping guidance specifies \"Allowed\" for this CWE.\n*   **CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')** and **CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')**: These were considered due to their high retriever scores, but they are not directly applicable as the vulnerability's core issue is related to file handling rather than input sanitization for web page generation or SQL queries.\n*   **CWE-306: Missing Authentication for Critical Function**: While the vulnerability involves a critical function, the primary issue is the **unrestricted upload** rather than the absence of authentication.\n*   **CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')**: This is related to CWE-73. If the file path is not correctly validated, then the **unrestricted upload** could allow traversal issues.\n*   **CWE-425: Direct Request ('Forced Browsing')**: This is not directly applicable, because the **unrestricted upload** is the primary issue.\n\nBased on the retriever results, relationship analysis, and the detailed descriptions of the CWEs, CWE-434 best represents the primary vulnerability. CWE-73 is a secondary concern.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n**Chain starting from CWE-22:**\n- 22 (Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 449.52041006219054
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 427.41132269994944
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse"
      },
      "similarity": 411.9484692761738
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 369.5369284327541
    },
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "sparse"
      },
      "similarity": 354.53965620544454
    },
    {
      "metadata": {
        "doc_id": "1336",
        "name": "Improper Neutralization of Special Elements Used in a Template Engine",
        "source": "sparse"
      },
      "similarity": 352.4767817470183
    },
    {
      "metadata": {
        "doc_id": "1391",
        "name": "Use of Weak Credentials",
        "source": "sparse"
      },
      "similarity": 352.10161807695636
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 351.59036115337074
    },
    {
      "metadata": {
        "doc_id": "646",
        "name": "Reliance on File Name or Extension of Externally-Supplied File",
        "type": "Variant",
        "original_content": "The product allows a file to be uploaded, but it relies on the file name or extension of the file to determine the appropriate behaviors. This could be used by attackers to cause the file to be misclassified and processed in a dangerous fashion.",
        "keyphrase_source": "weakness:unrestricted upload",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.6026440564196192
          }
        }
      },
      "similarity": 0.6026440564196192
    },
    {
      "doc_id": "425",
      "text": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
      "score": 0.6239183694864195,
      "metadata": {
        "doc_id": "425",
        "name": "Direct Request ('Forced Browsing')",
        "type": "Base",
        "extended_description": "Web applications susceptible to direct request attacks often make the false assumption that such resources can only be reached through a given navigation path and so only apply authorization at certain points in the path.",
        "alternate_terms": [
          "forced browsing"
        ],
        "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
        "relationships": [
          {
            "source_id": "425",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "424",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "288",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "862",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "425",
            "target_id": "862",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "862",
            "target_id": "425",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "424",
            "target_id": "425",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "288",
            "target_id": "425",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "source": "graph",
        "sources": [
          "vector",
          "graph"
        ],
        "vector_score": 0.6239183694864195,
        "graph_score": 3.4200400000000006,
        "score_components": {
          "relationship_chain": 0.6,
          "explicit_mention": 1.0,
          "abstraction_path": 0.9,
          "sequence_path": 0.5760000000000002
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "89",
                  "456",
                  "CANFOLLOW"
                ],
                [
                  "456",
                  "98",
                  "CANPRECEDE"
                ],
                [
                  "98",
                  "425",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.6,
              "type": "relationship_chain",
              "source": "89"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "79",
                  "184",
                  "CANFOLLOW"
                ],
                [
                  "184",
                  "98",
                  "CANPRECEDE"
                ],
                [
                  "98",
                  "425",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.5760000000000002,
              "type": "vulnerability_sequence_forward",
              "source": "79"
            }
          }
        },
        "is_explicit": true,
        "abstraction_level": "base",
        "position": "after",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5817800115074847,
            "graph": 2.301591347794568
          }
        }
      },
      "similarity": 2.301591347794568
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-22",
      "CWE-79",
      "CWE-73",
      "CWE-306",
      "CWE-425",
      "CWE-430",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}