{
  "cve_id": "CVE-2025-37794",
  "description": "In the Linux kernel, the following vulnerability has been resolved wifi mac80211 Purge vif txq in ieee80211_do_stop() After ieee80211_do_stop() SKB from vifs txq could still be processed. Indeed another concurrent vif schedule_and_wake_txq call could cause those packets to be dequeued (see ieee80211_handle_wake_tx_queue()) without checking the sdata current state. Because vif.drv_priv is now cleared in this function, this could lead to driver crash. For example in ath12k, ahvif is store in vif.drv_priv. Thus if ath12k_mac_op_tx() is called after ieee80211_do_stop(), ahvif->ah can be NULL, leading the ath12k_warn(ahvif->ah,...) call in this function to trigger the NULL deref below. Unable to handle kernel paging request at virtual address dfffffc000000001 KASAN **null-ptr-deref** in range [0x0000000000000008-0x000000000000000f] batman_adv bat0 Interface deactivated brbh1337 Mem abort info ESR = 0x0000000096000004 EC = 0x25 DABT (current EL), IL = 32 bits SET = 0, FnV = 0 EA = 0, S1PTW = 0 FSC = 0x04 level 0 translation fault Data abort info ISV = 0, ISS = 0x00000004, ISS2 = 0x00000000 CM = 0, WnR = 0, TnD = 0, TagAccess = 0 GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0 [dfffffc000000001] address between user and kernel address ranges Internal error Oops 0000000096000004",
  "key_phrases": {
    "rootcause": "",
    "weakness": [
      "NULL dereference",
      "null-ptr-deref"
    ],
    "impact": [
      "driver crash",
      "Oops"
    ],
    "vector": "",
    "attacker": "",
    "product": "Linux kernel",
    "version": "",
    "component": "wifi mac80211"
  },
  "reference_content": null,
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "```markdown\n# Summary\n| CWE ID    | CWE Name                                                                        | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| --------- | ------------------------------------------------------------------------------- | ---------- | --------------------- | ------------------------------- | ------------------------------- |\n| CWE-476   | NULL Pointer Dereference                                                        | 1          | Base                  | Primary CWE                   | Allowed                       |\n| CWE-362   | Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition') | 0.6          | Class                 | Secondary Candidate                    | Allowed-with-Review                       |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is a **NULL pointer dereference** (CWE-476). The vulnerability occurs due to a race condition (CWE-362) where the `vif.drv_priv` is cleared in `ieee80211_do_stop()` while another concurrent `vif schedule_and_wake_txq` call could cause packets to be dequeued without checking the `sdata` current state. The race condition allows the execution flow to continue even after the `vif.drv_priv` is cleared, eventually leading to the **NULL pointer dereference** when `ath12k_mac_op_tx()` is called. CWE-476 is a child of CWE-754 (Improper Check for Unusual or Exceptional Conditions) and is related to CWE-824 (Access of Uninitialized Pointer). CWE-362 is a class-level CWE, while CWE-476 is a base-level CWE, indicating a more specific characterization of the vulnerability.\n\n```mermaid\ngraph TD\n    cwe476[\"CWE-476: NULL Pointer Dereference\"]\n    cwe362[\"CWE-362: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')\"]\n    cwe754[\"CWE-754: Improper Check for Unusual or Exceptional Conditions\"]\n    \n    cwe476 -->|CHILDOF| cwe754\n    cwe362 -->|CANPRECEDE| cwe476\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe476 primary\n    class cwe362 secondary\n    class cwe754 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with a race condition (CWE-362) where a shared resource is accessed concurrently without proper synchronization. This leads to a state where a necessary pointer (`vif.drv_priv`) is cleared prematurely. Consequently, a **NULL pointer dereference** (CWE-476) occurs when the cleared pointer is accessed later in the execution, resulting in a driver crash.\n\nCWE-362 (Race Condition) -> **NULL pointer dereference** (CWE-476) -> Driver Crash\n\n## Summary of Analysis\nThe vulnerability description clearly indicates a **NULL pointer dereference** occurring in the Linux kernel's wifi mac80211 component. The root cause is the concurrent access to a shared resource without proper synchronization, leading to the premature clearing of a pointer. The subsequent dereference of this **NULL pointer** causes a driver crash.\n\nThe primary CWE is CWE-476 (NULL Pointer Dereference), as it directly describes the error leading to the crash. CWE-362 (Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')) is considered as a secondary CWE because it describes the condition that enables the NULL pointer dereference.\n\nThe selection of CWE-476 is at the optimal level of specificity, as it is a base-level CWE that precisely captures the nature of the error. Other CWEs like CWE-754 (Improper Check for Unusual or Exceptional Conditions) are more general and do not accurately represent the specific vulnerability.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-824: Access of Uninitialized Pointer\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product accesses or uses a pointer that has not been initialized.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-667: Improper Locking\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-476: NULL Pointer Dereference\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product dereferences a pointer that it expects to be valid but is NULL.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-822: Untrusted Pointer Dereference\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product obtains a value from an untrusted source, converts this value to a pointer, and dereferences the resulting pointer.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-833: Deadlock\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-755: Improper Handling of Exceptional Conditions\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product does not handle or incorrectly handles an exceptional condition.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n## CWE-665: Improper Initialization\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n## CWE-252: Unchecked Return Value\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-703: Improper Check or Handling of Exceptional Conditions\n**Abstraction Level**: Pillar\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product does not properly anticipate or handle exceptional conditions that rarely occur during normal operation of the product.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is extremely high-level, a Pillar.\n\n## CWE-1285: Improper Validation of Specified Index, Position, or Offset in Input\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-476: NULL Pointer Dereference\n**Abstraction Level**: Base\n**Similarity Score**: 2085.32\n**Source**: sparse\n\n**Description**:\nThe product dereferences a pointer that it expects to be valid but is NULL.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the",
  "analysis_with_relationships": "# Summary\n| CWE ID    | CWE Name                                                                        | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| --------- | ------------------------------------------------------------------------------- | ---------- | --------------------- | ------------------------------- | ------------------------------- |\n| CWE-476   | NULL Pointer Dereference                                                        | 1          | Base                  | Primary CWE                   | Allowed                       |\n| CWE-362   | Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition') | 0.6          | Class                 | Secondary Candidate                    | Allowed-with-Review                       |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is a **NULL pointer dereference** (CWE-476). The vulnerability occurs due to a race condition (CWE-362) where the `vif.drv_priv` is cleared in `ieee80211_do_stop()` while another concurrent `vif schedule_and_wake_txq` call could cause packets to be dequeued without checking the `sdata` current state. The race condition allows the execution flow to continue even after the `vif.drv_priv` is cleared, eventually leading to the **NULL pointer dereference** when `ath12k_mac_op_tx()` is called. CWE-476 is a child of CWE-754 (Improper Check for Unusual or Exceptional Conditions) and is related to CWE-824 (Access of Uninitialized Pointer). CWE-362 is a class-level CWE, while CWE-476 is a base-level CWE, indicating a more specific characterization of the vulnerability.mermaid\n```mermaid\ngraph TD\n    cwe476[\"CWE-476: NULL Pointer Dereference\"]\n    cwe362[\"CWE-362: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')\"]\n    cwe754[\"CWE-754: Improper Check for Unusual or Exceptional Conditions\"]\n    \n    cwe476 -->|CHILDOF| cwe754\n    cwe362 -->|CANPRECEDE| cwe476\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe476 primary\n    class cwe362 secondary\n    class cwe754 tertiary\n\n```\n\n\n## Vulnerability Chain\nThe vulnerability chain starts with a race condition (CWE-362) where a shared resource is accessed concurrently without proper synchronization. This leads to a state where a necessary pointer (`vif.drv_priv`) is cleared prematurely. Consequently, a **NULL pointer dereference** (CWE-476) occurs when the cleared pointer is accessed later in the execution, resulting in a driver crash.\n\nCWE-362 (Race Condition) -> **NULL pointer dereference** (CWE-476) -> Driver Crash\n\n## Summary of Analysis\nThe vulnerability description clearly indicates a **NULL pointer dereference** occurring in the Linux kernel's wifi mac80211 component. The root cause is the concurrent access to a shared resource without proper synchronization, leading to the premature clearing of a pointer. The subsequent dereference of this **NULL pointer** causes a driver crash.\n\nThe primary CWE is CWE-476 (NULL Pointer Dereference), as it directly describes the error leading to the crash. CWE-362 (Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')) is considered as a secondary CWE because it describes the condition that enables the NULL pointer dereference.\n\nThe selection of CWE-476 is at the optimal level of specificity, as it is a base-level CWE that precisely captures the nature of the error. Other CWEs like CWE-754 (Improper Check for Unusual or Exceptional Conditions) are more general and do not accurately represent the specific vulnerability.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-824: Access of Uninitialized Pointer\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product accesses or uses a pointer that has not been initialized.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-667: Improper Locking\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-476: NULL Pointer Dereference\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product dereferences a pointer that it expects to be valid but is NULL.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-822: Untrusted Pointer Dereference\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product obtains a value from an untrusted source, converts this value to a pointer, and dereferences the resulting pointer.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-833: Deadlock\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-755: Improper Handling of Exceptional Conditions\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product does not handle or incorrectly handles an exceptional condition.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n## CWE-665: Improper Initialization\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n## CWE-252: Unchecked Return Value\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-703: Improper Check or Handling of Exceptional Conditions\n**Abstraction Level**: Pillar\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product does not properly anticipate or handle exceptional conditions that rarely occur during normal operation of the product.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is extremely high-level, a Pillar.\n\n## CWE-1285: Improper Validation of Specified Index, Position, or Offset in Input\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-476: NULL Pointer Dereference\n**Abstraction Level**: Base\n**Similarity Score**: 2085.32\n**Source**: sparse\n\n**Description**:\nThe product dereferences a pointer that it expects to be valid but is NULL.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-665:**\n- 665 (Improper Initialization) - ROOT\n\n\n**Chain starting from CWE-476:**\n- 476 (NULL Pointer Dereference) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "476",
        "name": "NULL Pointer Dereference",
        "source": "sparse",
        "original_content": "The product dereferences a pointer that it expects to be valid but is NULL.",
        "keyphrase_sources": [
          {
            "id": "weakness:NULL dereference",
            "keyphrase": "NULL dereference",
            "type": "weakness"
          },
          {
            "id": "weakness:null-ptr-deref",
            "keyphrase": "null-ptr-deref",
            "type": "weakness"
          },
          {
            "id": "impact:driver crash",
            "keyphrase": "driver crash",
            "type": "impact"
          },
          {
            "id": "impact:Oops",
            "keyphrase": "Oops",
            "type": "impact"
          },
          {
            "id": "product:Linux kernel",
            "keyphrase": "Linux kernel",
            "type": "product"
          },
          {
            "id": "component:wifi mac80211",
            "keyphrase": "wifi mac80211",
            "type": "component"
          }
        ]
      },
      "similarity": 694.5786014048114
    },
    {
      "metadata": {
        "doc_id": "822",
        "name": "Untrusted Pointer Dereference",
        "source": "sparse",
        "original_content": "The product obtains a value from an untrusted source, converts this value to a pointer, and dereferences the resulting pointer.",
        "keyphrase_sources": [
          {
            "id": "weakness:NULL dereference",
            "keyphrase": "NULL dereference",
            "type": "weakness"
          },
          {
            "id": "weakness:null-ptr-deref",
            "keyphrase": "null-ptr-deref",
            "type": "weakness"
          },
          {
            "id": "impact:driver crash",
            "keyphrase": "driver crash",
            "type": "impact"
          },
          {
            "id": "impact:Oops",
            "keyphrase": "Oops",
            "type": "impact"
          },
          {
            "id": "product:Linux kernel",
            "keyphrase": "Linux kernel",
            "type": "product"
          },
          {
            "id": "component:wifi mac80211",
            "keyphrase": "wifi mac80211",
            "type": "component"
          }
        ]
      },
      "similarity": 569.2565427139642
    },
    {
      "metadata": {
        "doc_id": "909",
        "name": "Missing Initialization of Resource",
        "source": "sparse",
        "original_content": "The product does not initialize a critical resource.",
        "keyphrase_sources": [
          {
            "id": "weakness:NULL dereference",
            "keyphrase": "NULL dereference",
            "type": "weakness"
          },
          {
            "id": "weakness:null-ptr-deref",
            "keyphrase": "null-ptr-deref",
            "type": "weakness"
          },
          {
            "id": "impact:driver crash",
            "keyphrase": "driver crash",
            "type": "impact"
          },
          {
            "id": "impact:Oops",
            "keyphrase": "Oops",
            "type": "impact"
          },
          {
            "id": "product:Linux kernel",
            "keyphrase": "Linux kernel",
            "type": "product"
          },
          {
            "id": "component:wifi mac80211",
            "keyphrase": "wifi mac80211",
            "type": "component"
          }
        ]
      },
      "similarity": 546.6113275488053
    },
    {
      "metadata": {
        "doc_id": "667",
        "name": "Improper Locking",
        "source": "sparse",
        "original_content": "The product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.",
        "keyphrase_sources": [
          {
            "id": "weakness:NULL dereference",
            "keyphrase": "NULL dereference",
            "type": "weakness"
          },
          {
            "id": "weakness:null-ptr-deref",
            "keyphrase": "null-ptr-deref",
            "type": "weakness"
          },
          {
            "id": "impact:driver crash",
            "keyphrase": "driver crash",
            "type": "impact"
          },
          {
            "id": "impact:Oops",
            "keyphrase": "Oops",
            "type": "impact"
          },
          {
            "id": "product:Linux kernel",
            "keyphrase": "Linux kernel",
            "type": "product"
          },
          {
            "id": "component:wifi mac80211",
            "keyphrase": "wifi mac80211",
            "type": "component"
          }
        ]
      },
      "similarity": 542.1793963681033
    },
    {
      "metadata": {
        "doc_id": "833",
        "name": "Deadlock",
        "source": "sparse",
        "original_content": "The product contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock.",
        "keyphrase_sources": [
          {
            "id": "weakness:NULL dereference",
            "keyphrase": "NULL dereference",
            "type": "weakness"
          },
          {
            "id": "weakness:null-ptr-deref",
            "keyphrase": "null-ptr-deref",
            "type": "weakness"
          }
        ]
      },
      "similarity": 537.4751219598074
    },
    {
      "metadata": {
        "doc_id": "362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "source": "sparse",
        "original_content": "The product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence operating concurrently.",
        "keyphrase_sources": [
          {
            "id": "product:Linux kernel",
            "keyphrase": "Linux kernel",
            "type": "product"
          }
        ]
      },
      "similarity": 194.6895297676889
    },
    {
      "metadata": {
        "doc_id": "787",
        "name": "Out-of-bounds Write",
        "source": "sparse",
        "original_content": "The product writes data past the end, or before the beginning, of the intended buffer.",
        "keyphrase_sources": [
          {
            "id": "impact:driver crash",
            "keyphrase": "driver crash",
            "type": "impact"
          },
          {
            "id": "impact:Oops",
            "keyphrase": "Oops",
            "type": "impact"
          },
          {
            "id": "component:wifi mac80211",
            "keyphrase": "wifi mac80211",
            "type": "component"
          }
        ]
      },
      "similarity": 194.4453590458013
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-665",
      "CWE-476",
      "CWE-667",
      "CWE-833",
      "CWE-1285",
      "CWE-362",
      "CWE-822",
      "CWE-755",
      "CWE-824",
      "CWE-252",
      "CWE-703",
      "CWE-754"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "476": [
      {
        "id": "weakness:NULL dereference",
        "keyphrase": "NULL dereference",
        "type": "weakness"
      },
      {
        "id": "weakness:null-ptr-deref",
        "keyphrase": "null-ptr-deref",
        "type": "weakness"
      },
      {
        "id": "impact:driver crash",
        "keyphrase": "driver crash",
        "type": "impact"
      },
      {
        "id": "impact:Oops",
        "keyphrase": "Oops",
        "type": "impact"
      },
      {
        "id": "product:Linux kernel",
        "keyphrase": "Linux kernel",
        "type": "product"
      },
      {
        "id": "component:wifi mac80211",
        "keyphrase": "wifi mac80211",
        "type": "component"
      }
    ],
    "822": [
      {
        "id": "weakness:NULL dereference",
        "keyphrase": "NULL dereference",
        "type": "weakness"
      },
      {
        "id": "weakness:null-ptr-deref",
        "keyphrase": "null-ptr-deref",
        "type": "weakness"
      },
      {
        "id": "impact:driver crash",
        "keyphrase": "driver crash",
        "type": "impact"
      },
      {
        "id": "impact:Oops",
        "keyphrase": "Oops",
        "type": "impact"
      },
      {
        "id": "product:Linux kernel",
        "keyphrase": "Linux kernel",
        "type": "product"
      },
      {
        "id": "component:wifi mac80211",
        "keyphrase": "wifi mac80211",
        "type": "component"
      }
    ],
    "909": [
      {
        "id": "weakness:NULL dereference",
        "keyphrase": "NULL dereference",
        "type": "weakness"
      },
      {
        "id": "weakness:null-ptr-deref",
        "keyphrase": "null-ptr-deref",
        "type": "weakness"
      },
      {
        "id": "impact:driver crash",
        "keyphrase": "driver crash",
        "type": "impact"
      },
      {
        "id": "impact:Oops",
        "keyphrase": "Oops",
        "type": "impact"
      },
      {
        "id": "product:Linux kernel",
        "keyphrase": "Linux kernel",
        "type": "product"
      },
      {
        "id": "component:wifi mac80211",
        "keyphrase": "wifi mac80211",
        "type": "component"
      }
    ],
    "667": [
      {
        "id": "weakness:NULL dereference",
        "keyphrase": "NULL dereference",
        "type": "weakness"
      },
      {
        "id": "weakness:null-ptr-deref",
        "keyphrase": "null-ptr-deref",
        "type": "weakness"
      },
      {
        "id": "impact:driver crash",
        "keyphrase": "driver crash",
        "type": "impact"
      },
      {
        "id": "impact:Oops",
        "keyphrase": "Oops",
        "type": "impact"
      },
      {
        "id": "product:Linux kernel",
        "keyphrase": "Linux kernel",
        "type": "product"
      },
      {
        "id": "component:wifi mac80211",
        "keyphrase": "wifi mac80211",
        "type": "component"
      }
    ],
    "833": [
      {
        "id": "weakness:NULL dereference",
        "keyphrase": "NULL dereference",
        "type": "weakness"
      },
      {
        "id": "weakness:null-ptr-deref",
        "keyphrase": "null-ptr-deref",
        "type": "weakness"
      }
    ],
    "787": [
      {
        "id": "impact:driver crash",
        "keyphrase": "driver crash",
        "type": "impact"
      },
      {
        "id": "impact:Oops",
        "keyphrase": "Oops",
        "type": "impact"
      },
      {
        "id": "component:wifi mac80211",
        "keyphrase": "wifi mac80211",
        "type": "component"
      }
    ],
    "362": [
      {
        "id": "product:Linux kernel",
        "keyphrase": "Linux kernel",
        "type": "product"
      }
    ]
  }
}