{
  "cve_id": "CVE-2024-49762",
  "description": "Pterodactyl is a free, open-source game server management panel. When a user disables two-factor authentication via the Panel, a `DELETE` request with their current password in a query parameter will be sent. While query parameters are encrypted when using TLS, many webservers (including ones officially documented for use with Pterodactyl) will log query parameters in plain-text, storing a users password in plain text. Prior to version 1.11.8, if a malicious user obtains access to these logs they could potentially authenticate against a users account assuming they are able to discover the accounts email address or username separately. This problem has been patched in version 1.11.8. There are no workarounds at this time. There is not a direct vulnerability within the software as it relates to logs generated by intermediate components such as web servers or Layer 7 proxies. Updating to `v1.11.8` or adding the linked patch manually are the only ways to avoid this problem. As this vulnerability relates to historical logging of sensitive data, users who have ever disabled 2FA on a Panel (self-hosted or operated by a company) should change their passwords and consider enabling 2FA if it was left disabled. While its unlikely that their account swill be compromised by this vulnerability, its not impossible. Panel administrators should consider clearing any access logs that may contain sensitive data.",
  "key_phrases": {
    "rootcause": "improper access control",
    "weakness": "plaintext password exposure",
    "impact": "",
    "vector": "",
    "attacker": "malicious user",
    "product": "Pterodactyl",
    "version": "prior to 1.11.8",
    "component": "Panel"
  },
  "reference_content": "Based on the provided information, here's an analysis of CVE-2024-49762:\n\n**Root Cause of Vulnerability:**\n\n- When a user disables two-factor authentication (2FA) on the Pterodactyl Panel, a `DELETE` request containing their current password in a query parameter was sent.\n-  Webservers and proxies often log query parameters in plain text even when TLS encryption is used for the connection.\n\n**Weaknesses/Vulnerabilities Present:**\n\n- **Plaintext Password Logging:** The primary vulnerability is the logging of user passwords in plaintext within web server access logs when 2FA is disabled.\n- **Use of `DELETE` Request:**  Using a `DELETE` request with the password in the query parameter was the specific mechanism triggering the logging of sensitive information.\n\n**Impact of Exploitation:**\n\n- **Account Compromise:** If an attacker gains access to the server logs containing the plaintext passwords, they can potentially authenticate to the affected user accounts.\n- **Data Breach:**  Exposure of the user\u2019s password in the server logs represents a significant data breach.\n- **Limited Scope:**  Exploitation also requires the attacker to know or discover a user's email address or username separately.\n\n**Attack Vectors:**\n\n- **Log Access:** The primary attack vector is gaining unauthorized access to web server access logs. This could be done through system compromise, exploiting other vulnerabilities, or insider threat.\n- **Local Access:** The CVSS score indicates a local attack vector, suggesting the attacker needs access to the server where logs are stored.\n\n**Required Attacker Capabilities/Position:**\n\n- **Access to Server Logs:** The attacker must have the ability to read the webserver access logs.\n- **Knowledge of User Credentials:** They must then identify the username/email address associated with the exposed password to be able to exploit this issue.\n\n**Additional Details:**\n\n- **Patch:** The vulnerability was fixed by changing the `DELETE` request to a `POST` request, sending the password in the request body rather than as a query parameter. The patch is available in commit `8be2b89` on the `1.0-develop` branch and `75b5908` on top of `v1.11.7`.\n- **Mitigation:** Users are advised to change passwords if they have ever disabled 2FA on their Pterodactyl panel, and to enable 2FA.  Panel administrators are advised to clear server access logs.\n- **CVSS Score:** The CVSS score is 4.6 (Moderate), indicating a local attack vector with low confidentiality and integrity impact, and no impact on availability.\n- **CWE:** The weakness is categorized as CWE-313: Missing Security Check on a Password.\n\nIn summary, the vulnerability arises from inadvertently logging user passwords in plain text due to the specific use of a `DELETE` request with parameters and how web servers process those. Exploitation requires an attacker to obtain access to these logs and to independently acquire username/email address information. The vulnerability has been fixed with the use of a POST request sending the password in the request body.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n\n| CWE ID   | CWE Name                                                                   | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| -------- | -------------------------------------------------------------------------- | ---------- | --------------------- | ------------------------------- | ------------------------------- |\n| CWE-532  | Insertion of Sensitive Information into Log File                         | 0.9        | Base                  | Primary                         | Allowed                       |\n| CWE-319  | Cleartext Transmission of Sensitive Information                         | 0.7        | Base                  | Secondary                       | Allowed                       |\n| CWE-256  | Plaintext Storage of a Password                                          | 0.6        | Base                  | Secondary                       | Allowed                       |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary CWE is CWE-532, representing the core issue of logging sensitive information. CWE-319 is a related weakness describing the cleartext transmission, and CWE-256 is a further specific weakness of storing passwords in plaintext. CWE-532 is not a child of any other CWE. However, CWE-256 is a child of CWE-522 (Insufficiently Protected Credentials) which in turn is a child of CWE-287 (Improper Authentication). This suggests a potential authentication-related context.\n\n```mermaid\ngraph TD\n    cwe532[\"CWE-532: Insertion of Sensitive Information into Log File\"]\n    cwe319[\"CWE-319: Cleartext Transmission of Sensitive Information\"]\n    cwe256[\"CWE-256: Plaintext Storage of a Password\"]\n    cwe522[\"CWE-522: Insufficiently Protected Credentials\"]\n    cwe287[\"CWE-287: Improper Authentication\"]\n\n    cwe256 -->|CHILDOF| cwe522\n    cwe522 -->|CHILDOF| cwe287\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe532 primary\n    class cwe319,cwe256 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain begins with the **improper** handling of passwords during the 2FA disabling process, leading to the transmission of the password in a query parameter. This is followed by the logging of the query parameter in plaintext by the web server, resulting in the storage of sensitive information in log files. The attacker gains access to these logs, retrieves the plaintext password, and uses it to compromise the user account.\n  - Root Cause: **improper access control** leading to password in the query parameter\n  - Weakness 1: Logging of query parameter containing password (CWE-532)\n  - Weakness 2: Sensitive information sent in cleartext (CWE-319)\n  - Impact: Account compromise\n\n## Summary of Analysis\n\nThe initial assessment focused on identifying the root cause of the vulnerability and the specific weaknesses involved. The primary driver for the CWE selection was the evidence from the vulnerability description and the CVE Reference Links Content Summary, which highlighted the logging of plaintext passwords as the main issue.\n\nThe analysis considered the guidance provided, especially regarding authentication vs. authorization. However, the core issue is not about missing authentication or authorization checks within the Pterodactyl application itself, but rather the unintentional logging of sensitive data by intermediate components.\n\nThe selection of CWE-532 as the primary CWE is based on its direct relevance to the vulnerability description: \"While query parameters are encrypted when using TLS, many webservers (including ones officially documented for use with Pterodactyl) will log query parameters in plain-text, storing a users password in plain text.\"\n\nThe selection of CWE-319 is based on the fact that the password was transmitted as a query parameter and was therefore in cleartext for the webserver.\nThe selection of CWE-256 is based on the fact that the passwords were found in plaintext.\n\nThe graph relationships influenced the consideration of related CWEs, such as those related to authentication and credential management. However, the final selection prioritizes the most direct and specific representation of the vulnerability: the **insertion of sensitive information into log files**.\n\nThe selected CWEs are at the optimal level of specificity because they accurately describe the technical details of the vulnerability and its potential impact. More generic CWEs, such as CWE-284 (Improper Access Control), would not provide sufficient information about the specific nature of the weakness.\n\nRelevant CWE Information:\n\n**CWE-532: Insertion of Sensitive Information into Log File**\n\n*   **Description:** The product places sensitive information into log files.\n*   This aligns with the vulnerability where passwords are logged in plain text.\n\n**CWE-319: Cleartext Transmission of Sensitive Information**\n\n*   **Description:** The product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.\n*   This aligns with the vulnerability where passwords are sent as a query parameter.\n\n**CWE-256: Plaintext Storage of a Password**\n\n*   **Description:** The product stores user passwords in a format that is not properly protected, which makes it easier for an attacker to compromise the credentials.\n*   This aligns with the vulnerability where passwords are logged in plain text.\n\n**CWEs Considered but Not Used:**\n\n*   **CWE-287 Improper Authentication:** While the vulnerability involves passwords, the root cause is not a failure in the authentication process itself. The application authenticates users correctly. The problem lies in the subsequent logging of sensitive data.\n*   **CWE-306 Missing Authentication for Critical Function:** This CWE does not apply as the issue isn't related to missing authentication.\n*   **CWE-863 Incorrect Authorization:** This CWE does not apply as the issue isn't related to incorrect authorization.",
  "analysis_with_relationships": "# Summary\n\n| CWE ID   | CWE Name                                                                   | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| -------- | -------------------------------------------------------------------------- | ---------- | --------------------- | ------------------------------- | ------------------------------- |\n| CWE-532  | Insertion of Sensitive Information into Log File                         | 0.9        | Base                  | Primary                         | Allowed                       |\n| CWE-319  | Cleartext Transmission of Sensitive Information                         | 0.7        | Base                  | Secondary                       | Allowed                       |\n| CWE-256  | Plaintext Storage of a Password                                          | 0.6        | Base                  | Secondary                       | Allowed                       |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary CWE is CWE-532, representing the core issue of logging sensitive information. CWE-319 is a related weakness describing the cleartext transmission, and CWE-256 is a further specific weakness of storing passwords in plaintext. CWE-532 is not a child of any other CWE. However, CWE-256 is a child of CWE-522 (Insufficiently Protected Credentials) which in turn is a child of CWE-287 (Improper Authentication). This suggests a potential authentication-related context.\n\n```mermaid\ngraph TD\n    cwe532[\"CWE-532: Insertion of Sensitive Information into Log File\"]\n    cwe319[\"CWE-319: Cleartext Transmission of Sensitive Information\"]\n    cwe256[\"CWE-256: Plaintext Storage of a Password\"]\n    cwe522[\"CWE-522: Insufficiently Protected Credentials\"]\n    cwe287[\"CWE-287: Improper Authentication\"]\n\n    cwe256 -->|CHILDOF| cwe522\n    cwe522 -->|CHILDOF| cwe287\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe532 primary\n    class cwe319,cwe256 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain begins with the **improper** handling of passwords during the 2FA disabling process, leading to the transmission of the password in a query parameter. This is followed by the logging of the query parameter in plaintext by the web server, resulting in the storage of sensitive information in log files. The attacker gains access to these logs, retrieves the plaintext password, and uses it to compromise the user account.\n  - Root Cause: **improper access control** leading to password in the query parameter\n  - Weakness 1: Logging of query parameter containing password (CWE-532)\n  - Weakness 2: Sensitive information sent in cleartext (CWE-319)\n  - Impact: Account compromise\n\n## Summary of Analysis\n\nThe initial assessment focused on identifying the root cause of the vulnerability and the specific weaknesses involved. The primary driver for the CWE selection was the evidence from the vulnerability description and the CVE Reference Links Content Summary, which highlighted the logging of plaintext passwords as the main issue.\n\nThe analysis considered the guidance provided, especially regarding authentication vs. authorization. However, the core issue is not about missing authentication or authorization checks within the Pterodactyl application itself, but rather the unintentional logging of sensitive data by intermediate components.\n\nThe selection of CWE-532 as the primary CWE is based on its direct relevance to the vulnerability description: \"While query parameters are encrypted when using TLS, many webservers (including ones officially documented for use with Pterodactyl) will log query parameters in plain-text, storing a users password in plain text.\"\n\nThe selection of CWE-319 is based on the fact that the password was transmitted as a query parameter and was therefore in cleartext for the webserver.\nThe selection of CWE-256 is based on the fact that the passwords were found in plaintext.\n\nThe graph relationships influenced the consideration of related CWEs, such as those related to authentication and credential management. However, the final selection prioritizes the most direct and specific representation of the vulnerability: the **insertion of sensitive information into log files**.\n\nThe selected CWEs are at the optimal level of specificity because they accurately describe the technical details of the vulnerability and its potential impact. More generic CWEs, such as CWE-284 (Improper Access Control), would not provide sufficient information about the specific nature of the weakness.\n\nRelevant CWE Information:\n\n**CWE-532: Insertion of Sensitive Information into Log File**\n\n*   **Description:** The product places sensitive information into log files.\n*   This aligns with the vulnerability where passwords are logged in plain text.\n\n**CWE-319: Cleartext Transmission of Sensitive Information**\n\n*   **Description:** The product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.\n*   This aligns with the vulnerability where passwords are sent as a query parameter.\n\n**CWE-256: Plaintext Storage of a Password**\n\n*   **Description:** The product stores user passwords in a format that is not properly protected, which makes it easier for an attacker to compromise the credentials.\n*   This aligns with the vulnerability where passwords are logged in plain text.\n\n**CWEs Considered but Not Used:**\n\n*   **CWE-287 Improper Authentication:** While the vulnerability involves passwords, the root cause is not a failure in the authentication process itself. The application authenticates users correctly. The problem lies in the subsequent logging of sensitive data.\n*   **CWE-306 Missing Authentication for Critical Function:** This CWE does not apply as the issue isn't related to missing authentication.\n*   **CWE-863 Incorrect Authorization:** This CWE does not apply as the issue isn't related to incorrect authorization.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-319:**\n- 319 (Cleartext Transmission of Sensitive Information) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "1390",
        "name": "Weak Authentication",
        "source": "sparse"
      },
      "similarity": 1173.4401002471463
    },
    {
      "metadata": {
        "doc_id": "532",
        "name": "Insertion of Sensitive Information into Log File",
        "source": "sparse"
      },
      "similarity": 1156.2653231108313
    },
    {
      "metadata": {
        "doc_id": "287",
        "name": "Improper Authentication",
        "source": "sparse"
      },
      "similarity": 1131.433785424356
    },
    {
      "metadata": {
        "doc_id": "256",
        "name": "Plaintext Storage of a Password",
        "source": "sparse"
      },
      "similarity": 1124.197910817658
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 1110.5285467815625
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 1097.2636749449098
    },
    {
      "metadata": {
        "doc_id": "209",
        "name": "Generation of Error Message Containing Sensitive Information",
        "source": "sparse"
      },
      "similarity": 1082.6149808559103
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 1076.929437226316
    },
    {
      "metadata": {
        "doc_id": "620",
        "name": "Unverified Password Change",
        "type": "Base",
        "original_content": "When setting a new password for a user, the product does not require knowledge of the original password, or using another form of authentication.",
        "keyphrase_source": "weakness:plaintext password exposure",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.47063314960728897,
            "graph": 1.6781252184078341
          }
        }
      },
      "similarity": 0.47063314960728897
    },
    {
      "doc_id": "613",
      "text": "CWE-613: Insufficient Session Expiration",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "613",
        "name": "Insufficient Session Expiration",
        "type": "base",
        "original_content": "CWE-613: Insufficient Session Expiration",
        "relationships": [
          {
            "source_id": "613",
            "target_id": "352",
            "label": "REQUIREDBY",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "613",
            "target_id": "287",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "613",
            "target_id": "672",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "613",
            "target_id": "672",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "672",
            "target_id": "613",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "352",
            "target_id": "613",
            "label": "REQUIRES",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "287",
            "target_id": "613",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "287",
                  "613",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "287"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "287",
                  "613",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "287"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "613",
                  "287",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "287"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-319",
      "CWE-306",
      "CWE-284",
      "CWE-256",
      "CWE-522",
      "CWE-287",
      "CWE-532"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}