{
  "cve_id": "CVE-2024-13235",
  "description": "The Pinpoint Booking System #1 WordPress Booking Plugin plugin for WordPress is vulnerable to **SQL Injection** via the language parameter in all versions up to, and including, 2.9.9.5.2 due to **insufficient escaping on the user supplied parameter and **lack of sufficient preparation** on the existing SQL query**. This makes it possible for authenticated attackers, with Subscriber-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.",
  "key_phrases": {
    "rootcause": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
    "weakness": [
      "lack of sufficient preparation",
      "SQL Injection"
    ],
    "impact": "extract sensitive information from the database",
    "vector": "",
    "attacker": "authenticated attackers with Subscriber-level access and above",
    "product": "Pinpoint Booking System #1 WordPress Booking Plugin WordPress plugin",
    "version": "all versions up to and including 2.9.9.5.2",
    "component": "language parameter"
  },
  "reference_content": null,
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID  | CWE Name                                                                | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :---------------------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-89    | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 1          | Base                  | Primary                         | Allowed                       |\n| CWE-116   | Improper Encoding or Escaping of Output                               | 0.7        | Class                 | Secondary                       | Allowed-with-Review           |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is CWE-89, which is a Base level CWE and accurately reflects the **SQL Injection** vulnerability. CWE-89 is a child of CWE-74 (Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')) and CWE-943 (Insufficient Verification of Data Validity). It can also precede CWE-456 (Missing Initialization).\n\nCWE-116 is a Class level CWE and a parent of more specific Base level CWEs, but it is a relevant secondary weakness given the description mentioning **insufficient escaping**.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n    cwe943[\"CWE-943: Insufficient Verification of Data Validity\"]\n    cwe456[\"CWE-456: Missing Initialization\"]\n\n    cwe89 -->|CHILDOF| cwe74\n    cwe89 -->|CHILDOF| cwe943\n    cwe89 -->|CANFOLLOW| cwe456\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe89 primary\n    class cwe116,cwe74,cwe943,cwe456 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **insufficient escaping** and **lack of sufficient preparation** of the SQL query, leading to the **SQL Injection** vulnerability. This allows attackers to **extract sensitive information from the database**.\n\n## Summary of Analysis\nThe primary CWE is CWE-89 because the vulnerability description explicitly states \"SQL Injection\" and provides details about **insufficient escaping** and **lack of sufficient preparation** on the existing SQL query. This aligns directly with CWE-89's definition: \"The product constructs all or part of an SQL command using externally-influenced input...but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command\".\n\nCWE-116 is considered a secondary weakness because the description mentions **insufficient escaping**, which relates to the encoding or escaping of data. However, since the primary issue is the resulting **SQL Injection**, CWE-89 is the more direct and specific classification.\n\nThe evidence is strong, as the vulnerability description clearly points to an **SQL Injection** vulnerability due to **insufficient escaping** and **lack of sufficient preparation**. The retriever scores also support CWE-89 as a relevant CWE.\n\nOther CWEs were considered but deemed less appropriate:\n*   CWE-74, CWE-90, CWE-94, CWE-502, CWE-352, CWE-425, CWE-862, CWE-863, CWE-790: These CWEs are either too broad or address different types of vulnerabilities (e.g., LDAP Injection, Code Injection, CSRF, Missing Authorization). They do not directly address the specific issue of **SQL Injection** caused by **insufficient escaping** and **lack of sufficient preparation** on the existing SQL query.\n*   CWE-138: Improper Neutralization of Special Elements. This is too high level.\n*   CWE-472: External Control of Assumed-Immutable Web Parameter. While external input is involved, the core issue is the improper handling of that input in the SQL query.\n*   CWE-303: Incorrect Implementation of Authentication Algorithm. This is unrelated to the **SQL Injection** vulnerability.\n*   CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer. This is about sensitive information exposure, not the injection itself.\n*   CWE-178: Improper Handling of Case Sensitivity. This is unrelated to the **SQL Injection** vulnerability.\n*   CWE-471: Modification of Assumed-Immutable Data (MAID). This is not about modifying data.\n*   CWE-613: Insufficient Session Expiration. This is unrelated to the **SQL Injection** vulnerability.\n*   CWE-98: Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion'). This is related to PHP file inclusion and not related to **SQL Injection**.",
  "analysis_with_relationships": "# Summary\n| CWE ID  | CWE Name                                                                | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :---------------------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-89    | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 1          | Base                  | Primary                         | Allowed                       |\n| CWE-116   | Improper Encoding or Escaping of Output                               | 0.7        | Class                 | Secondary                       | Allowed-with-Review           |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is CWE-89, which is a Base level CWE and accurately reflects the **SQL Injection** vulnerability. CWE-89 is a child of CWE-74 (Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')) and CWE-943 (Insufficient Verification of Data Validity). It can also precede CWE-456 (Missing Initialization).\n\nCWE-116 is a Class level CWE and a parent of more specific Base level CWEs, but it is a relevant secondary weakness given the description mentioning **insufficient escaping**.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n    cwe943[\"CWE-943: Insufficient Verification of Data Validity\"]\n    cwe456[\"CWE-456: Missing Initialization\"]\n\n    cwe89 -->|CHILDOF| cwe74\n    cwe89 -->|CHILDOF| cwe943\n    cwe89 -->|CANFOLLOW| cwe456\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe89 primary\n    class cwe116,cwe74,cwe943,cwe456 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **insufficient escaping** and **lack of sufficient preparation** of the SQL query, leading to the **SQL Injection** vulnerability. This allows attackers to **extract sensitive information from the database**.\n\n## Summary of Analysis\nThe primary CWE is CWE-89 because the vulnerability description explicitly states \"SQL Injection\" and provides details about **insufficient escaping** and **lack of sufficient preparation** on the existing SQL query. This aligns directly with CWE-89's definition: \"The product constructs all or part of an SQL command using externally-influenced input...but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command\".\n\nCWE-116 is considered a secondary weakness because the description mentions **insufficient escaping**, which relates to the encoding or escaping of data. However, since the primary issue is the resulting **SQL Injection**, CWE-89 is the more direct and specific classification.\n\nThe evidence is strong, as the vulnerability description clearly points to an **SQL Injection** vulnerability due to **insufficient escaping** and **lack of sufficient preparation**. The retriever scores also support CWE-89 as a relevant CWE.\n\nOther CWEs were considered but deemed less appropriate:\n*   CWE-74, CWE-90, CWE-94, CWE-502, CWE-352, CWE-425, CWE-862, CWE-863, CWE-790: These CWEs are either too broad or address different types of vulnerabilities (e.g., LDAP Injection, Code Injection, CSRF, Missing Authorization). They do not directly address the specific issue of **SQL Injection** caused by **insufficient escaping** and **lack of sufficient preparation** on the existing SQL query.\n*   CWE-138: Improper Neutralization of Special Elements. This is too high level.\n*   CWE-472: External Control of Assumed-Immutable Web Parameter. While external input is involved, the core issue is the improper handling of that input in the SQL query.\n*   CWE-303: Incorrect Implementation of Authentication Algorithm. This is unrelated to the **SQL Injection** vulnerability.\n*   CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer. This is about sensitive information exposure, not the injection itself.\n*   CWE-178: Improper Handling of Case Sensitivity. This is unrelated to the **SQL Injection** vulnerability.\n*   CWE-471: Modification of Assumed-Immutable Data (MAID). This is not about modifying data.\n*   CWE-613: Insufficient Session Expiration. This is unrelated to the **SQL Injection** vulnerability.\n*   CWE-98: Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion'). This is related to PHP file inclusion and not related to **SQL Injection**.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-471:**\n- 471 (Modification of Assumed-Immutable Data (MAID)) - ROOT\n\n\n**Chain starting from CWE-94:**\n- 94 (Improper Control of Generation of Code ('Code Injection')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "weakness:lack of sufficient preparation",
            "keyphrase": "lack of sufficient preparation",
            "type": "weakness"
          },
          {
            "id": "weakness:SQL Injection",
            "keyphrase": "SQL Injection",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "attacker:authenticated attackers with Subscriber-level access and above",
            "keyphrase": "authenticated attackers with Subscriber-level access and above",
            "type": "attacker"
          },
          {
            "id": "product:Pinpoint Booking System #1 WordPress Booking Plugin WordPress plugin",
            "keyphrase": "Pinpoint Booking System #1 WordPress Booking Plugin WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:all versions up to and including 2.9.9.5.2",
            "keyphrase": "all versions up to and including 2.9.9.5.2",
            "type": "version"
          },
          {
            "id": "component:language parameter",
            "keyphrase": "language parameter",
            "type": "component"
          }
        ]
      },
      "similarity": 801.8525417563012
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "weakness:lack of sufficient preparation",
            "keyphrase": "lack of sufficient preparation",
            "type": "weakness"
          },
          {
            "id": "weakness:SQL Injection",
            "keyphrase": "SQL Injection",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "attacker:authenticated attackers with Subscriber-level access and above",
            "keyphrase": "authenticated attackers with Subscriber-level access and above",
            "type": "attacker"
          },
          {
            "id": "product:Pinpoint Booking System #1 WordPress Booking Plugin WordPress plugin",
            "keyphrase": "Pinpoint Booking System #1 WordPress Booking Plugin WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:all versions up to and including 2.9.9.5.2",
            "keyphrase": "all versions up to and including 2.9.9.5.2",
            "type": "version"
          },
          {
            "id": "component:language parameter",
            "keyphrase": "language parameter",
            "type": "component"
          }
        ]
      },
      "similarity": 781.7583654454521
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "weakness:lack of sufficient preparation",
            "keyphrase": "lack of sufficient preparation",
            "type": "weakness"
          },
          {
            "id": "weakness:SQL Injection",
            "keyphrase": "SQL Injection",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "attacker:authenticated attackers with Subscriber-level access and above",
            "keyphrase": "authenticated attackers with Subscriber-level access and above",
            "type": "attacker"
          },
          {
            "id": "product:Pinpoint Booking System #1 WordPress Booking Plugin WordPress plugin",
            "keyphrase": "Pinpoint Booking System #1 WordPress Booking Plugin WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:all versions up to and including 2.9.9.5.2",
            "keyphrase": "all versions up to and including 2.9.9.5.2",
            "type": "version"
          },
          {
            "id": "component:language parameter",
            "keyphrase": "language parameter",
            "type": "component"
          }
        ]
      },
      "similarity": 732.304453313701
    },
    {
      "metadata": {
        "doc_id": "90",
        "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          }
        ]
      },
      "similarity": 688.0204561793491
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse",
        "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "weakness:lack of sufficient preparation",
            "keyphrase": "lack of sufficient preparation",
            "type": "weakness"
          },
          {
            "id": "weakness:SQL Injection",
            "keyphrase": "SQL Injection",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "attacker:authenticated attackers with Subscriber-level access and above",
            "keyphrase": "authenticated attackers with Subscriber-level access and above",
            "type": "attacker"
          },
          {
            "id": "product:Pinpoint Booking System #1 WordPress Booking Plugin WordPress plugin",
            "keyphrase": "Pinpoint Booking System #1 WordPress Booking Plugin WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:all versions up to and including 2.9.9.5.2",
            "keyphrase": "all versions up to and including 2.9.9.5.2",
            "type": "version"
          },
          {
            "id": "component:language parameter",
            "keyphrase": "language parameter",
            "type": "component"
          }
        ]
      },
      "similarity": 665.3686932615695
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse",
        "original_content": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.",
        "keyphrase_sources": [
          {
            "id": "weakness:lack of sufficient preparation",
            "keyphrase": "lack of sufficient preparation",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "attacker:authenticated attackers with Subscriber-level access and above",
            "keyphrase": "authenticated attackers with Subscriber-level access and above",
            "type": "attacker"
          },
          {
            "id": "product:Pinpoint Booking System #1 WordPress Booking Plugin WordPress plugin",
            "keyphrase": "Pinpoint Booking System #1 WordPress Booking Plugin WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:all versions up to and including 2.9.9.5.2",
            "keyphrase": "all versions up to and including 2.9.9.5.2",
            "type": "version"
          }
        ]
      },
      "similarity": 482.43827026898833
    },
    {
      "metadata": {
        "doc_id": "502",
        "name": "Deserialization of Untrusted Data",
        "source": "sparse",
        "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.",
        "keyphrase_sources": [
          {
            "id": "weakness:SQL Injection",
            "keyphrase": "SQL Injection",
            "type": "weakness"
          }
        ]
      },
      "similarity": 474.31066846909334
    },
    {
      "metadata": {
        "doc_id": "790",
        "name": "Improper Filtering of Special Elements",
        "source": "sparse",
        "original_content": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
        "keyphrase_sources": [
          {
            "id": "component:language parameter",
            "keyphrase": "language parameter",
            "type": "component"
          }
        ]
      },
      "similarity": 165.2358412277383
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-471",
      "CWE-94",
      "CWE-862",
      "CWE-790",
      "CWE-74",
      "CWE-90",
      "CWE-89",
      "CWE-613",
      "CWE-352",
      "CWE-425",
      "CWE-456",
      "CWE-863",
      "CWE-178",
      "CWE-138",
      "CWE-212",
      "CWE-502",
      "CWE-116",
      "CWE-472",
      "CWE-98",
      "CWE-303",
      "CWE-943"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "116": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "weakness:lack of sufficient preparation",
        "keyphrase": "lack of sufficient preparation",
        "type": "weakness"
      },
      {
        "id": "weakness:SQL Injection",
        "keyphrase": "SQL Injection",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "attacker:authenticated attackers with Subscriber-level access and above",
        "keyphrase": "authenticated attackers with Subscriber-level access and above",
        "type": "attacker"
      },
      {
        "id": "product:Pinpoint Booking System #1 WordPress Booking Plugin WordPress plugin",
        "keyphrase": "Pinpoint Booking System #1 WordPress Booking Plugin WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:all versions up to and including 2.9.9.5.2",
        "keyphrase": "all versions up to and including 2.9.9.5.2",
        "type": "version"
      },
      {
        "id": "component:language parameter",
        "keyphrase": "language parameter",
        "type": "component"
      }
    ],
    "89": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "weakness:lack of sufficient preparation",
        "keyphrase": "lack of sufficient preparation",
        "type": "weakness"
      },
      {
        "id": "weakness:SQL Injection",
        "keyphrase": "SQL Injection",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "attacker:authenticated attackers with Subscriber-level access and above",
        "keyphrase": "authenticated attackers with Subscriber-level access and above",
        "type": "attacker"
      },
      {
        "id": "product:Pinpoint Booking System #1 WordPress Booking Plugin WordPress plugin",
        "keyphrase": "Pinpoint Booking System #1 WordPress Booking Plugin WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:all versions up to and including 2.9.9.5.2",
        "keyphrase": "all versions up to and including 2.9.9.5.2",
        "type": "version"
      },
      {
        "id": "component:language parameter",
        "keyphrase": "language parameter",
        "type": "component"
      }
    ],
    "352": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "weakness:lack of sufficient preparation",
        "keyphrase": "lack of sufficient preparation",
        "type": "weakness"
      },
      {
        "id": "weakness:SQL Injection",
        "keyphrase": "SQL Injection",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "attacker:authenticated attackers with Subscriber-level access and above",
        "keyphrase": "authenticated attackers with Subscriber-level access and above",
        "type": "attacker"
      },
      {
        "id": "product:Pinpoint Booking System #1 WordPress Booking Plugin WordPress plugin",
        "keyphrase": "Pinpoint Booking System #1 WordPress Booking Plugin WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:all versions up to and including 2.9.9.5.2",
        "keyphrase": "all versions up to and including 2.9.9.5.2",
        "type": "version"
      },
      {
        "id": "component:language parameter",
        "keyphrase": "language parameter",
        "type": "component"
      }
    ],
    "90": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      }
    ],
    "862": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "weakness:lack of sufficient preparation",
        "keyphrase": "lack of sufficient preparation",
        "type": "weakness"
      },
      {
        "id": "weakness:SQL Injection",
        "keyphrase": "SQL Injection",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "attacker:authenticated attackers with Subscriber-level access and above",
        "keyphrase": "authenticated attackers with Subscriber-level access and above",
        "type": "attacker"
      },
      {
        "id": "product:Pinpoint Booking System #1 WordPress Booking Plugin WordPress plugin",
        "keyphrase": "Pinpoint Booking System #1 WordPress Booking Plugin WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:all versions up to and including 2.9.9.5.2",
        "keyphrase": "all versions up to and including 2.9.9.5.2",
        "type": "version"
      },
      {
        "id": "component:language parameter",
        "keyphrase": "language parameter",
        "type": "component"
      }
    ],
    "863": [
      {
        "id": "weakness:lack of sufficient preparation",
        "keyphrase": "lack of sufficient preparation",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "attacker:authenticated attackers with Subscriber-level access and above",
        "keyphrase": "authenticated attackers with Subscriber-level access and above",
        "type": "attacker"
      },
      {
        "id": "product:Pinpoint Booking System #1 WordPress Booking Plugin WordPress plugin",
        "keyphrase": "Pinpoint Booking System #1 WordPress Booking Plugin WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:all versions up to and including 2.9.9.5.2",
        "keyphrase": "all versions up to and including 2.9.9.5.2",
        "type": "version"
      }
    ],
    "502": [
      {
        "id": "weakness:SQL Injection",
        "keyphrase": "SQL Injection",
        "type": "weakness"
      }
    ],
    "790": [
      {
        "id": "component:language parameter",
        "keyphrase": "language parameter",
        "type": "component"
      }
    ]
  }
}