{
  "cve_id": "CVE-2024-9730",
  "description": "Trimble SketchUp Viewer SKP File Parsing Memory Corruption Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Trimble SketchUp Viewer. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file. The specific flaw exists within the parsing of SKP files. The issue results from the **lack of proper validation of user-supplied data**, which can result in a **memory corruption** condition. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-24146.",
  "key_phrases": {
    "rootcause": "lack of proper validation of user-supplied data",
    "weakness": "memory corruption",
    "impact": [
      "execute arbitrary code",
      "execute code in the context of the current process",
      "remote code execution"
    ],
    "vector": "malicious page or file",
    "attacker": "remote attackers",
    "product": "Trimble SketchUp Viewer",
    "version": "",
    "component": "SKP file parsing"
  },
  "reference_content": "Based on the provided content, here's a breakdown of the vulnerability:\n\n**Root Cause:** The vulnerability stems from a lack of proper validation of user-supplied data during the parsing of SKP files within Trimble SketchUp Viewer. This leads to a memory corruption condition.\n\n**Weaknesses/Vulnerabilities:**\n*   Memory corruption due to insufficient input validation.\n\n**Impact of Exploitation:**\n*   Remote attackers can execute arbitrary code within the context of the current process.\n\n**Attack Vectors:**\n*   User interaction is required for exploitation. The target must either visit a malicious page or open a malicious SKP file.\n\n**Required Attacker Capabilities/Position:**\n*   The attacker needs to be able to deliver a malicious SKP file or a link to a malicious page to the victim.\n\n**Additional Information:**\n\n*   The vulnerability was fixed in SketchUp Viewer version 2024.0.2.\n*   The vulnerability was reported to the vendor on 2024-05-08, and the coordinated public release of the advisory was on 2024-10-11.",
  "similar_info": {
    "cwe_distribution": {
      "95": {
        "cwe_counts": {
          "CWE-787": 1
        },
        "total_samples": 2,
        "distribution": [
          {
            "cwes": [],
            "frequency": 1,
            "proportion": 0.5
          },
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 1,
            "proportion": 0.5
          }
        ]
      },
      "90": {
        "cwe_counts": {
          "CWE-787": 3
        },
        "total_samples": 4,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 3,
            "proportion": 0.75
          },
          {
            "cwes": [],
            "frequency": 1,
            "proportion": 0.25
          }
        ]
      },
      "85": {
        "cwe_counts": {
          "CWE-787": 4,
          "CWE-908": 1
        },
        "total_samples": 30,
        "distribution": [
          {
            "cwes": [],
            "frequency": 25,
            "proportion": 0.833
          },
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 4,
            "proportion": 0.133
          },
          {
            "cwes": [
              "CWE-908"
            ],
            "frequency": 1,
            "proportion": 0.033
          }
        ]
      },
      "80": {
        "cwe_counts": {
          "CWE-125": 10,
          "CWE-787": 3,
          "CWE-908": 1
        },
        "total_samples": 54,
        "distribution": [
          {
            "cwes": [],
            "frequency": 40,
            "proportion": 0.741
          },
          {
            "cwes": [
              "CWE-125"
            ],
            "frequency": 10,
            "proportion": 0.185
          },
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 3,
            "proportion": 0.056
          },
          {
            "cwes": [
              "CWE-908"
            ],
            "frequency": 1,
            "proportion": 0.019
          }
        ]
      },
      "75": {
        "cwe_counts": {
          "CWE-787": 3,
          "CWE-908": 1
        },
        "total_samples": 50,
        "distribution": [
          {
            "cwes": [],
            "frequency": 46,
            "proportion": 0.92
          },
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 3,
            "proportion": 0.06
          },
          {
            "cwes": [
              "CWE-908"
            ],
            "frequency": 1,
            "proportion": 0.02
          }
        ]
      },
      "70": {
        "cwe_counts": {
          "CWE-787": 11,
          "CWE-908": 1
        },
        "total_samples": 69,
        "distribution": [
          {
            "cwes": [],
            "frequency": 57,
            "proportion": 0.826
          },
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 11,
            "proportion": 0.159
          },
          {
            "cwes": [
              "CWE-908"
            ],
            "frequency": 1,
            "proportion": 0.014
          }
        ]
      }
    },
    "cwe_consensus": "CWE-787",
    "similarity_stats": {
      "thresholds": [
        95,
        90,
        85,
        80,
        75,
        70
      ],
      "total_samples_by_threshold": {
        "95": 2,
        "90": 4,
        "85": 30,
        "80": 54,
        "75": 50,
        "70": 69
      },
      "top_cwes_by_threshold": {
        "95": [
          [
            "CWE-787",
            1
          ]
        ],
        "90": [
          [
            "CWE-787",
            3
          ]
        ],
        "85": [
          [
            "CWE-787",
            4
          ],
          [
            "CWE-908",
            1
          ]
        ],
        "80": [
          [
            "CWE-125",
            10
          ],
          [
            "CWE-787",
            3
          ],
          [
            "CWE-908",
            1
          ]
        ],
        "75": [
          [
            "CWE-787",
            3
          ],
          [
            "CWE-908",
            1
          ]
        ],
        "70": [
          [
            "CWE-787",
            11
          ],
          [
            "CWE-908",
            1
          ]
        ]
      }
    },
    "raw_matches": [
      {
        "similarity": 95,
        "cwes": [],
        "total": 2,
        "frequency": 1,
        "proportion": 0.5
      },
      {
        "similarity": 95,
        "cwes": [
          "787"
        ],
        "total": 2,
        "frequency": 1,
        "proportion": 0.5
      },
      {
        "similarity": 90,
        "cwes": [
          "787"
        ],
        "total": 4,
        "frequency": 3,
        "proportion": 0.75
      },
      {
        "similarity": 90,
        "cwes": [],
        "total": 4,
        "frequency": 1,
        "proportion": 0.25
      },
      {
        "similarity": 85,
        "cwes": [],
        "total": 30,
        "frequency": 25,
        "proportion": 0.833
      },
      {
        "similarity": 85,
        "cwes": [
          "787"
        ],
        "total": 30,
        "frequency": 4,
        "proportion": 0.133
      },
      {
        "similarity": 85,
        "cwes": [
          "908"
        ],
        "total": 30,
        "frequency": 1,
        "proportion": 0.033
      },
      {
        "similarity": 80,
        "cwes": [],
        "total": 54,
        "frequency": 40,
        "proportion": 0.741
      },
      {
        "similarity": 80,
        "cwes": [
          "125"
        ],
        "total": 54,
        "frequency": 10,
        "proportion": 0.185
      },
      {
        "similarity": 80,
        "cwes": [
          "787"
        ],
        "total": 54,
        "frequency": 3,
        "proportion": 0.056
      },
      {
        "similarity": 80,
        "cwes": [
          "908"
        ],
        "total": 54,
        "frequency": 1,
        "proportion": 0.019
      },
      {
        "similarity": 75,
        "cwes": [],
        "total": 50,
        "frequency": 46,
        "proportion": 0.92
      },
      {
        "similarity": 75,
        "cwes": [
          "787"
        ],
        "total": 50,
        "frequency": 3,
        "proportion": 0.06
      },
      {
        "similarity": 75,
        "cwes": [
          "908"
        ],
        "total": 50,
        "frequency": 1,
        "proportion": 0.02
      },
      {
        "similarity": 70,
        "cwes": [],
        "total": 69,
        "frequency": 57,
        "proportion": 0.826
      },
      {
        "similarity": 70,
        "cwes": [
          "787"
        ],
        "total": 69,
        "frequency": 11,
        "proportion": 0.159
      },
      {
        "similarity": 70,
        "cwes": [
          "908"
        ],
        "total": 69,
        "frequency": 1,
        "proportion": 0.014
      }
    ]
  },
  "similarity_summary": {
    "consensus_cwe": "CWE-787",
    "top_cwes": [
      [
        "CWE-787",
        25
      ],
      [
        "CWE-125",
        10
      ],
      [
        "CWE-908",
        4
      ]
    ],
    "confidence_levels": {
      "high": [],
      "medium": [],
      "low": []
    },
    "total_samples": 209
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-787 | Out-of-bounds Write | 1.0 | Base | Primary | Allowed |\n| CWE-20 | Improper Input Validation | 0.7 | Class | Secondary | Discouraged |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is identified as CWE-787, which stems from a **lack of proper input validation** (CWE-20). CWE-787 is a Base level CWE, providing a specific description of the **out-of-bounds write** condition, while CWE-20 is a Class level CWE representing a more general case of **improper input validation**. The relationship between them is that **improper input validation** can lead to an **out-of-bounds write** if user-supplied data isn't properly checked before being used to write to memory. The Retriever results suggested other buffer overflow related CWEs such as CWE-121 (Stack-based Buffer Overflow) and CWE-122 (Heap-based Buffer Overflow), but the description doesn't give enough information to determine stack vs heap, so CWE-787 is more appropriate.\n\n```mermaid\ngraph TD\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe20[\"CWE-20: Improper Input Validation\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations\"]\n    \n    cwe787 -->|CHILDOF| cwe119\n    cwe20 -->|CANPRECEDE| cwe787\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe787 primary\n    class cwe20 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **lack of proper input validation** (CWE-20), which leads to a **memory corruption** condition due to an **out-of-bounds write** (CWE-787). This, in turn, allows a remote attacker to execute arbitrary code.\n\nCWE-20 (Improper Input Validation) -> CWE-787 (Out-of-bounds Write) -> Arbitrary Code Execution\n\n## Summary of Analysis\nThe vulnerability description clearly states that the root cause is the **lack of proper validation of user-supplied data**, leading to **memory corruption**. The primary CWE, CWE-787 (Out-of-bounds Write), accurately reflects the memory corruption condition, while CWE-20 (Improper Input Validation) describes the root cause. The evidence supporting this includes:\n\n*   \"The issue results from the **lack of proper validation of user-supplied data**, which can result in a **memory corruption** condition.\"\n*   \"An attacker can leverage this vulnerability to execute code in the context of the current process.\"\n\nCWE-787 is at the Base level of abstraction, providing a specific description of the vulnerability. CWE-20 is a Class-level CWE, and while it is the root cause, it is discouraged as a primary mapping, so it is used as a secondary mapping.\nCWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer) was considered, but it's a more general case, and CWE-787 provides a more specific description of the **out-of-bounds write** condition.\n\nOther CWEs considered but not used:\n\n*   CWE-125 (Out-of-bounds Read): The description focuses on memory corruption, implying a write operation rather than a read.\n*   CWE-94 (Improper Control of Generation of Code ('Code Injection')): The description mentions arbitrary code execution as an impact, but the root cause is **memory corruption** due to **improper input validation**, not code injection directly.\n*   CWE-122 (Heap-based Buffer Overflow) and CWE-121 (Stack-based Buffer Overflow): While buffer overflows can occur on the heap or stack, the description doesn't provide enough information to specify the memory location, so the more general CWE-787 is more appropriate.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-787 | Out-of-bounds Write | 1.0 | Base | Primary | Allowed |\n| CWE-20 | Improper Input Validation | 0.7 | Class | Secondary | Discouraged |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is identified as CWE-787, which stems from a **lack of proper input validation** (CWE-20). CWE-787 is a Base level CWE, providing a specific description of the **out-of-bounds write** condition, while CWE-20 is a Class level CWE representing a more general case of **improper input validation**. The relationship between them is that **improper input validation** can lead to an **out-of-bounds write** if user-supplied data isn't properly checked before being used to write to memory. The Retriever results suggested other buffer overflow related CWEs such as CWE-121 (Stack-based Buffer Overflow) and CWE-122 (Heap-based Buffer Overflow), but the description doesn't give enough information to determine stack vs heap, so CWE-787 is more appropriate.\n\n```mermaid\ngraph TD\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe20[\"CWE-20: Improper Input Validation\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations\"]\n    \n    cwe787 -->|CHILDOF| cwe119\n    cwe20 -->|CANPRECEDE| cwe787\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe787 primary\n    class cwe20 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **lack of proper input validation** (CWE-20), which leads to a **memory corruption** condition due to an **out-of-bounds write** (CWE-787). This, in turn, allows a remote attacker to execute arbitrary code.\n\nCWE-20 (Improper Input Validation) -> CWE-787 (Out-of-bounds Write) -> Arbitrary Code Execution\n\n## Summary of Analysis\nThe vulnerability description clearly states that the root cause is the **lack of proper validation of user-supplied data**, leading to **memory corruption**. The primary CWE, CWE-787 (Out-of-bounds Write), accurately reflects the memory corruption condition, while CWE-20 (Improper Input Validation) describes the root cause. The evidence supporting this includes:\n\n*   \"The issue results from the **lack of proper validation of user-supplied data**, which can result in a **memory corruption** condition.\"\n*   \"An attacker can leverage this vulnerability to execute code in the context of the current process.\"\n\nCWE-787 is at the Base level of abstraction, providing a specific description of the vulnerability. CWE-20 is a Class-level CWE, and while it is the root cause, it is discouraged as a primary mapping, so it is used as a secondary mapping.\nCWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer) was considered, but it's a more general case, and CWE-787 provides a more specific description of the **out-of-bounds write** condition.\n\nOther CWEs considered but not used:\n\n*   CWE-125 (Out-of-bounds Read): The description focuses on memory corruption, implying a write operation rather than a read.\n*   CWE-94 (Improper Control of Generation of Code ('Code Injection')): The description mentions arbitrary code execution as an impact, but the root cause is **memory corruption** due to **improper input validation**, not code injection directly.\n*   CWE-122 (Heap-based Buffer Overflow) and CWE-121 (Stack-based Buffer Overflow): While buffer overflows can occur on the heap or stack, the description doesn't provide enough information to specify the memory location, so the more general CWE-787 is more appropriate.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-121:**\n- 121 (Stack-based Buffer Overflow) - ROOT\n\n\n**Chain starting from CWE-94:**\n- 94 (Improper Control of Generation of Code ('Code Injection')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "787",
        "name": "Out-of-bounds Write",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Memory Corruption",
        "match_reason": "exact_match_whole_phrase"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "20",
        "name": "Improper Input Validation",
        "source": "sparse"
      },
      "similarity": 704.7225597747948
    },
    {
      "metadata": {
        "doc_id": "121",
        "name": "Stack-based Buffer Overflow",
        "source": "sparse"
      },
      "similarity": 653.6570742364048
    },
    {
      "metadata": {
        "doc_id": "122",
        "name": "Heap-based Buffer Overflow",
        "source": "sparse"
      },
      "similarity": 623.4311538075401
    },
    {
      "metadata": {
        "doc_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "source": "sparse"
      },
      "similarity": 621.7876617598363
    },
    {
      "metadata": {
        "doc_id": "119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "source": "sparse"
      },
      "similarity": 602.0613138712918
    },
    {
      "metadata": {
        "doc_id": "457",
        "name": "Use of Uninitialized Variable",
        "source": "sparse"
      },
      "similarity": 594.2244782291557
    },
    {
      "metadata": {
        "doc_id": "125",
        "name": "Out-of-bounds Read",
        "source": "sparse"
      },
      "similarity": 583.5564766153901
    },
    {
      "metadata": {
        "doc_id": "94",
        "name": "Improper Control of Generation of Code ('Code Injection')",
        "type": "Base",
        "original_content": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This entry is frequently misused for vulnerabilities with a technical impact of \"code execution,\" which does not by itself indicate a root cause weakness, since dozens of weaknesses can enable code execution.",
          "comments": "This weakness only applies when the product's functionality intentionally constructs all or part of a code segment. It could be that executing code could be the result of other weaknesses that do not involve the construction of code segments.",
          "reasons": [
            "Frequent Misuse",
            "Frequent Misinterpretation"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5079091370920903,
            "graph": 1.6511532001327556
          }
        }
      },
      "similarity": 0.5079091370920903
    },
    {
      "doc_id": "129",
      "text": "CWE-129: Improper Validation of Array Index",
      "score": 2.2704,
      "metadata": {
        "doc_id": "129",
        "name": "Improper Validation of Array Index",
        "type": "variant",
        "original_content": "CWE-129: Improper Validation of Array Index",
        "relationships": [
          {
            "source_id": "129",
            "target_id": "789",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "129",
            "target_id": "823",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "129",
            "target_id": "119",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "129",
            "target_id": "20",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "129",
            "target_id": "1285",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "823",
            "target_id": "129",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "789",
            "target_id": "129",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "20",
            "target_id": "129",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "1285",
            "target_id": "129",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "119",
            "target_id": "129",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 0.8,
          "abstraction_path": 0.76,
          "sequence_path": 0.8
        },
        "abstraction_factor": 1.2,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "1284",
                  "789",
                  "CANPRECEDE"
                ],
                [
                  "789",
                  "129",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.8,
              "type": "relationship_chain",
              "source": "1284"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "20",
                  "129",
                  "PARENTOF"
                ]
              ],
              "score": 0.76,
              "type": "abstraction_path_down",
              "source": "20"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "1284",
                  "789",
                  "CANPRECEDE"
                ],
                [
                  "789",
                  "129",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.7200000000000001,
              "type": "vulnerability_sequence_forward",
              "source": "1284"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "823",
                  "787",
                  "CANPRECEDE"
                ],
                [
                  "129",
                  "823",
                  "CANPRECEDE"
                ]
              ],
              "score": 0.8,
              "type": "vulnerability_sequence_backward",
              "source": "787"
            }
          }
        },
        "abstraction_level": "variant",
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2704
          }
        }
      },
      "similarity": 2.2704
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-121",
      "CWE-94",
      "CWE-125",
      "CWE-787",
      "CWE-122",
      "CWE-20",
      "CWE-119"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}