{
  "retriever": "dense",
  "query": "In the Linux kernel, the following vulnerability has been resolved drop_monitor fix incorrect initialization order Syzkaller reports the following bug BUG spinlock bad magic on CPU#1, syz-executor.0/7995 lock 0xffff88805303f3e0, .magic 00000000, .owner /-1, .owner_cpu 0 CPU 1 PID 7995 Comm syz-executor.0 Tainted G E 5.10.209+ #1 Hardware name VMware, Inc. VMware Virtual Platform/440BX Desktop Reference Platform, BIOS 6.00 11/12/2020 Call Trace __dump_stack lib/dump_stack.c77 [inline] dump_stack+0x119/0x179 lib/dump_stack.c118 debug_spin_lock_before kernel/locking/spinlock_debug.c83 [inline] do_raw_spin_lock+0x1f6/0x270 kernel/locking/spinlock_debug.c112 __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h117 [inline] _raw_spin_lock_irqsave+0x50/0x70 kernel/locking/spinlock.c159 reset_per_cpu_data+0xe6/0x240 [drop_monitor] net_dm_cmd_trace+0x43d/0x17a0 [drop_monitor] genl_family_rcv_msg_doit+0x22f/0x330 net/netlink/genetlink.c739 genl_family_rcv_msg net/netlink/genetlink.c783 [inline] genl_rcv_msg+0x341/0x5a0 net/netlink/genetlink.c800 netlink_rcv_skb+0x14d/0x440 net/netlink/af_netlink.c2497 genl_rcv+0x29/0x40 net/netlink/genetlink.c811 netlink_unicast_kernel net/netlink/af_netlink.c1322 [inline] netlink_unicast+0x54b/0x800 net/netlink/af_netlink.c1348 netlink_sendmsg+0x914/0xe00 net/netlink/af_netlink.c1916 sock_sendmsg_nosec net/socket.c651 [inline] __sock_sendmsg+0x157/0x190 net/socket.c663 ____sys_sendmsg+0x712/0x870 net/socket.c2378 ___sys_sendmsg+0xf8/0x170 net/socket.c2432 __sys_sendmsg+0xea/0x1b0 net/socket.c2461 do_syscall_64+0x30/0x40 arch/x86/entry/common.c46 entry_SYSCALL_64_after_hwframe+0x62/0xc7 RIP 00330x7f3f9815aee9 Code ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48 RSP 002b00007f3f972bf0c8 EFLAGS 00000246 ORIG_RAX 000000000000002e RAX ffffffffffffffda RBX 00007f3f9826d050 RCX 00007f3f9815aee9 RDX 0000000020000000 RSI 0000000020001300 RDI 0000000000000007 RBP 00007f3f981b63bd R08 0000000000000000 R09 0000000000000000 R10 0000000000000000 R11 0000000000000246 R12 0000000000000000 R13 000000000000006e R14 00007f3f9826d050 R15 00007ffe01ee6768 If drop_monitor is built as a kernel module, syzkaller may have time to send a netlink NET_DM_CMD_START message during the module loading. This will call the net_dm_monitor_start() function that uses a spinlock that has not yet been initialized. To fix this, lets place resource initialization above the registration of a generic netlink family. Found by InfoTeCS on behalf of Linux Verification Center (linuxtesting.org) with Syzkaller.",
  "keyphrases": {
    "rootcause": [
      "incorrect initialization order"
    ]
  },
  "timestamp": "2025-07-14 09:54:45",
  "cve_id": "CVE-2025-21862",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "type": "Class",
      "score": 0.564081523922124
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "type": "Class",
      "score": 0.5493999181045737
    },
    {
      "cwe_id": "413",
      "name": "Improper Resource Locking",
      "type": "Base",
      "score": 0.5435205820323701
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "type": "Class",
      "score": 0.5352570706395776
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "type": "Base",
      "score": 0.5246331721934628
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "type": "Base",
      "score": 0.5244424557330186
    },
    {
      "cwe_id": "1264",
      "name": "Hardware Logic with Insecure De-Synchronization between Control and Data Channels",
      "type": "Base",
      "score": 0.5167938485985172
    },
    {
      "cwe_id": "665",
      "name": "Improper Initialization",
      "type": "Class",
      "score": 0.5154170695044322
    },
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "type": "Base",
      "score": 0.5111203376122306
    },
    {
      "cwe_id": "61",
      "name": "UNIX Symbolic Link (Symlink) Following",
      "type": "Compound",
      "score": 0.5108557994059001
    },
    {
      "cwe_id": "119",
      "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
      "type": "Class",
      "score": 0.4975623353184931
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "type": "Variant",
      "score": 0.4926978172408127
    },
    {
      "cwe_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "type": "Base",
      "score": 0.48925610686112386
    },
    {
      "cwe_id": "366",
      "name": "Race Condition within a Thread",
      "type": "Base",
      "score": 0.4871160246384335
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "type": "Base",
      "score": 0.4862979535081533
    },
    {
      "cwe_id": "1342",
      "name": "Information Exposure through Microarchitectural State after Transient Execution",
      "type": "Base",
      "score": 0.4850528163513915
    },
    {
      "cwe_id": "457",
      "name": "Use of Uninitialized Variable",
      "type": "Variant",
      "score": 0.48411416139594066
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "type": "Base",
      "score": 0.4819886929681138
    },
    {
      "cwe_id": "400",
      "name": "Uncontrolled Resource Consumption",
      "type": "Class",
      "score": 0.48124616376958873
    },
    {
      "cwe_id": "121",
      "name": "Stack-based Buffer Overflow",
      "type": "Variant",
      "score": 0.4810538088727542
    }
  ]
}