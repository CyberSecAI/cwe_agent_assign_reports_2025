{
  "method": "sparse_combined",
  "query": "In the Linux kernel, the following vulnerability has been resolved btrfs fix uninitialized pointer free in add_inode_ref() The add_inode_ref() function does not initialize the name struct when it is declared. If any of the following calls to read_one_inode() returns NULL, dir = read_one_inode(root, parent_objectid) if (!dir) { ret = -ENOENT goto out } inode = read_one_inode(root, inode_objectid) if (!inode) { ret = -EIO goto out } then name.name would be freed on out before being initialized. out ... kfree(name.name) This issue was reported by Coverity with CID 1526744.",
  "keyphrases": {
    "rootcause": [
      "uninitialized pointer free"
    ]
  },
  "timestamp": "2025-07-13T19:50:38.879354",
  "results_count": 13,
  "results_summary": [
    {
      "doc_id": "909",
      "name": "Missing Initialization of Resource",
      "score": 418.47864136240025
    },
    {
      "doc_id": "824",
      "name": "Access of Uninitialized Pointer",
      "score": 416.6968395753707
    },
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 394.04456961990377
    },
    {
      "doc_id": "476",
      "name": "NULL Pointer Dereference",
      "score": 386.77506797648067
    },
    {
      "doc_id": "908",
      "name": "Use of Uninitialized Resource",
      "score": 384.139507221282
    }
  ]
}