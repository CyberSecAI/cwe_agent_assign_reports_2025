{
  "cve_id": "CVE-2025-47885",
  "description": "Jenkins Health Advisor by CloudBees Plugin 374.v194b_d4f0c8c8 and earlier **does not escape responses from the Jenkins Health Advisor server**, resulting in a stored **cross-site scripting** (XSS) vulnerability exploitable by attackers able to control Jenkins Health Advisor server responses.",
  "key_phrases": {
    "rootcause": "does not escape responses from the Jenkins Health Advisor server",
    "weakness": "cross-site scripting",
    "impact": "",
    "vector": "",
    "attacker": "attackers able to control Jenkins Health Advisor server responses",
    "product": "Jenkins Health Advisor by CloudBees Plugin",
    "version": "374.v194b_d4f0c8c8 and earlier",
    "component": ""
  },
  "reference_content": "```\nThe content describes a stored cross-site scripting (XSS) vulnerability in the Health Advisor by CloudBees Plugin, which corresponds to CVE-2025-47885.\n\n*   **Weaknesses/vulnerabilities present:** The Health Advisor by CloudBees Plugin does not escape responses from the Jenkins Health Advisor server.\n*   **Impact of exploitation:** A stored cross-site scripting (XSS) vulnerability exploitable by attackers able to control Jenkins Health Advisor server responses.\n*   **Affected plugin:** `cloudbees-jenkins-advisor`\n*   **Affected versions:** up to and including 374.v194b\\_d4f0c8c8\n*   **Mitigation or fix:** Update Health Advisor by CloudBees Plugin to version 374.376.v3a\\_41a\\_a\\_142efe\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Allowed | Primary CWE. The **root cause** is that the product **does not escape responses from the Jenkins Health Advisor server**, leading to a **cross-site scripting** (XSS) vulnerability. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-79, which is a Base level CWE. The retriever results provided several candidate CWEs. CWE-79 is the best fit.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe80[\"CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\"]\n    cwe113[\"CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')\"]\n    cwe78[\"CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')\"]\n    cwe184[\"CWE-184: Incomplete List of Disallowed Inputs\"]\n\n    cwe80 -->|PEEROF| cwe79\n    cwe113 -->|CANPRECEDE| cwe79\n    cwe184 -->|CANPRECEDE| cwe79\n    cwe78 -->|CANFOLLOW| cwe184\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe79 primary\n    class cwe80,cwe113,cwe78,cwe184 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **failure to escape responses** from the Jenkins Health Advisor server. This leads directly to the **cross-site scripting vulnerability**.\n\n## Summary of Analysis\nThe vulnerability description clearly states that the Jenkins Health Advisor by CloudBees Plugin **does not escape responses** from the Jenkins Health Advisor server, which results in a stored **cross-site scripting** (XSS) vulnerability. This aligns perfectly with CWE-79, \"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\".\n\nThe retriever results listed several potential CWEs, including:\n\n*   CWE-862 (Missing Authorization): This is not relevant, as the vulnerability is due to improper output handling, not a missing authorization check.\n*   CWE-116 (Improper Encoding or Escaping of Output): This is a class-level CWE. Since the vulnerability leads to XSS, CWE-79 is a more specific and appropriate choice.\n*   CWE-838 (Inappropriate Encoding for Output Context): Similar to CWE-116, this is a more general CWE and less specific than CWE-79.\n*   CWE-522 (Insufficiently Protected Credentials) and CWE-256 (Plaintext Storage of a Password): These are unrelated to the XSS vulnerability.\n*   CWE-352 (Cross-Site Request Forgery (CSRF)): This is not relevant, as the vulnerability is not related to CSRF.\n*   CWE-613 (Insufficient Session Expiration): This is not relevant to the described vulnerability.\n*   CWE-80 (Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)): CWE-80 is a variant of XSS. CWE-79 is more general and describes the overall vulnerability.\n*   CWE-184 (Incomplete List of Disallowed Inputs): While input validation is important, the **root cause** here is the **lack of output escaping**, making CWE-79 a better fit.\n\nTherefore, based on the provided evidence, CWE-79 is the most accurate and specific representation of the vulnerability.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Allowed | Primary CWE. The **root cause** is that the product **does not escape responses from the Jenkins Health Advisor server**, leading to a **cross-site scripting** (XSS) vulnerability. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-79, which is a Base level CWE. The retriever results provided several candidate CWEs. CWE-79 is the best fit.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe80[\"CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\"]\n    cwe113[\"CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')\"]\n    cwe78[\"CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')\"]\n    cwe184[\"CWE-184: Incomplete List of Disallowed Inputs\"]\n\n    cwe80 -->|PEEROF| cwe79\n    cwe113 -->|CANPRECEDE| cwe79\n    cwe184 -->|CANPRECEDE| cwe79\n    cwe78 -->|CANFOLLOW| cwe184\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe79 primary\n    class cwe80,cwe113,cwe78,cwe184 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **failure to escape responses** from the Jenkins Health Advisor server. This leads directly to the **cross-site scripting vulnerability**.\n\n## Summary of Analysis\nThe vulnerability description clearly states that the Jenkins Health Advisor by CloudBees Plugin **does not escape responses** from the Jenkins Health Advisor server, which results in a stored **cross-site scripting** (XSS) vulnerability. This aligns perfectly with CWE-79, \"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\".\n\nThe retriever results listed several potential CWEs, including:\n\n*   CWE-862 (Missing Authorization): This is not relevant, as the vulnerability is due to improper output handling, not a missing authorization check.\n*   CWE-116 (Improper Encoding or Escaping of Output): This is a class-level CWE. Since the vulnerability leads to XSS, CWE-79 is a more specific and appropriate choice.\n*   CWE-838 (Inappropriate Encoding for Output Context): Similar to CWE-116, this is a more general CWE and less specific than CWE-79.\n*   CWE-522 (Insufficiently Protected Credentials) and CWE-256 (Plaintext Storage of a Password): These are unrelated to the XSS vulnerability.\n*   CWE-352 (Cross-Site Request Forgery (CSRF)): This is not relevant, as the vulnerability is not related to CSRF.\n*   CWE-613 (Insufficient Session Expiration): This is not relevant to the described vulnerability.\n*   CWE-80 (Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)): CWE-80 is a variant of XSS. CWE-79 is more general and describes the overall vulnerability.\n*   CWE-184 (Incomplete List of Disallowed Inputs): While input validation is important, the **root cause** here is the **lack of output escaping**, making CWE-79 a better fit.\n\nTherefore, based on the provided evidence, CWE-79 is the most accurate and specific representation of the vulnerability.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-522:**\n- 522 (Insufficiently Protected Credentials) - ROOT\n\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 319.16972918646167
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 300.51981035355504
    },
    {
      "metadata": {
        "doc_id": "838",
        "name": "Inappropriate Encoding for Output Context",
        "source": "sparse"
      },
      "similarity": 277.63034601919077
    },
    {
      "metadata": {
        "doc_id": "522",
        "name": "Insufficiently Protected Credentials",
        "source": "sparse"
      },
      "similarity": 274.58037601181485
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 272.54115160543904
    },
    {
      "metadata": {
        "doc_id": "256",
        "name": "Plaintext Storage of a Password",
        "source": "sparse"
      },
      "similarity": 264.2542830785304
    },
    {
      "metadata": {
        "doc_id": "613",
        "name": "Insufficient Session Expiration",
        "source": "sparse"
      },
      "similarity": 246.6094818946167
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 243.01120729066312
    },
    {
      "metadata": {
        "doc_id": "80",
        "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
        "type": "Variant",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.",
        "keyphrase_source": "weakness:cross-site scripting",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "retriever_count": 3,
          "normalized_scores": {
            "dense": 0.5261827505850389,
            "sparse": 206.1009591609915,
            "graph": 1.5231130136935114
          }
        }
      },
      "similarity": 0.5261827505850389
    },
    {
      "doc_id": "184",
      "text": "CWE-184: Incomplete List of Disallowed Inputs",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "184",
        "name": "Incomplete List of Disallowed Inputs",
        "type": "base",
        "original_content": "CWE-184: Incomplete List of Disallowed Inputs",
        "relationships": [
          {
            "source_id": "184",
            "target_id": "692",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "434",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "78",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "79",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "1023",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "693",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "86",
            "target_id": "184",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "78",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "693",
            "target_id": "184",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "692",
            "target_id": "184",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "692",
            "target_id": "184",
            "label": "STARTSWITH",
            "properties": {
              "view_id": "709"
            }
          },
          {
            "source_id": "625",
            "target_id": "184",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "434",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "186",
            "target_id": "184",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1023",
            "target_id": "184",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "79",
                  "184",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "79"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "79",
                  "184",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "79"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "184",
                  "79",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "79"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-522",
      "CWE-116",
      "CWE-80",
      "CWE-862",
      "CWE-838",
      "CWE-79",
      "CWE-113",
      "CWE-613",
      "CWE-352",
      "CWE-256",
      "CWE-78",
      "CWE-184"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}