{
  "cve_id": "CVE-2024-49195",
  "description": "Mbed TLS 3.5.x through 3.6.x before 3.6.2 has a **buffer underrun** in pkwrite when writing an opaque key pair",
  "key_phrases": {
    "rootcause": "",
    "weakness": "buffer underrun",
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": "Mbed TLS",
    "version": "3.5.x through 3.6.x before 3.6.2",
    "component": "pkwrite"
  },
  "reference_content": "The provided content is related to CVE-2024-49195.\n\n**Root cause of vulnerability:**\nThe functions `mbedtls_pk_write_key_der()` and `mbedtls_pk_write_key_pem()` can cause a buffer underrun when the output buffer is too small in certain cases. This occurs when the code writes data to an intermediate buffer and then copies it to the output buffer without verifying if the output buffer is large enough.\n\n**Weaknesses/vulnerabilities present:**\n- Buffer underrun in `mbedtls_pk_write_key_der()` and `mbedtls_pk_write_key_pem()`.\n- Insufficient output buffer size check when writing an opaque key pair.\n\n**Impact of exploitation:**\n- Stack or heap corruption due to buffer underrun.\n\n**Attack vectors:**\n- Calling the vulnerable functions with an output buffer that is too small.\n\n**Required attacker capabilities/position:**\n- Ability to call `mbedtls_pk_write_key_der()` or `mbedtls_pk_write_key_pem()` with a crafted output buffer and a PK context containing an opaque key.\n- The compile-time option `MBEDTLS_USE_PSA_CRYPTO` must be enabled.\n- For elliptic curve keys, `MBEDTLS_ECP_C` must be enabled, and the output buffer must be smaller than the uncompressed public key representation.\n- For RSA keys with `mbedtls_pk_write_key_der()`, the buffer must be smaller than the actual output.\n- For RSA keys with `mbedtls_pk_write_key_pem()`, `MBEDTLS_MPI_MAX_SIZE` must be less than or equal to 420.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-124 | Buffer Underwrite ('Buffer Underflow') | 1.0 | Base | Allowed | Primary CWE |\n| CWE-131 | Incorrect Calculation of Buffer Size | 0.7 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship that influenced the decision was the direct match of the vulnerability description to the definition of CWE-124 **Buffer Underwrite ('Buffer Underflow')**. CWE-131 **Incorrect Calculation of Buffer Size** was considered as a potential cause, leading to a chain where the incorrect calculation could precede the buffer underwrite. The abstraction levels were considered to choose the most specific and relevant CWE.\n\n```mermaid\ngraph TD\n    cwe124[\"CWE-124: Buffer Underwrite ('Buffer Underflow')\"]\n    cwe131[\"CWE-131: Incorrect Calculation of Buffer Size\"]\n\n    cwe131 -->|CANPRECEDE| cwe124\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe124 primary\n    class cwe131 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with a potential **incorrect calculation of the buffer size** (CWE-131), which then leads to the **buffer underwrite** (CWE-124).\n\n## Summary of Analysis\nThe initial analysis focused on identifying the root cause of the vulnerability. The description clearly states that there is a **buffer underrun** in pkwrite when writing an opaque key pair. The CVE Reference Links Content Summary confirms that the functions `mbedtls_pk_write_key_der()` and `mbedtls_pk_write_key_pem()` can cause a **buffer underrun** when the output buffer is too small in certain cases.\n\nThe primary CWE, CWE-124 **Buffer Underwrite ('Buffer Underflow')**, directly matches the vulnerability description.\n\nCWE-131 **Incorrect Calculation of Buffer Size** was considered because the buffer underrun could be a consequence of an incorrect size calculation, as suggested in the CVE Reference Links Content Summary. However, the description doesn't explicitly state that the buffer size calculation is incorrect, only that the output buffer is too small.\n\nThe selected CWEs are at the optimal level of specificity. CWE-124 is a Base CWE and directly reflects the **buffer underrun**.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-131: Incorrect Calculation of Buffer Size\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-124: Buffer Underwrite ('Buffer Underflow')\n**Abstraction Level**: Base\n**Similarity Score**: 739.14\n**Source**: sparse\n\n**Description**:\nThe product writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**Supporting evidence:**\n- Vulnerability Description: \"... has a **buffer underrun** in pkwrite when writing an opaque key pair\"\n- CVE Reference Links Content Summary: \"**Root cause of vulnerability:** The functions `mbedtls_pk_write_key_der()` and `mbedtls_pk_write_key_pem()` can cause a **buffer underrun** when the output buffer is too small in certain cases.\"\n\nCWE-124 is the primary weakness.\nCWE-131 is a secondary weakness that could be the root cause of CWE-124.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-124 | Buffer Underwrite ('Buffer Underflow') | 1.0 | Base | Allowed | Primary CWE |\n| CWE-131 | Incorrect Calculation of Buffer Size | 0.7 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship that influenced the decision was the direct match of the vulnerability description to the definition of CWE-124 **Buffer Underwrite ('Buffer Underflow')**. CWE-131 **Incorrect Calculation of Buffer Size** was considered as a potential cause, leading to a chain where the incorrect calculation could precede the buffer underwrite. The abstraction levels were considered to choose the most specific and relevant CWE.\n\n```mermaid\ngraph TD\n    cwe124[\"CWE-124: Buffer Underwrite ('Buffer Underflow')\"]\n    cwe131[\"CWE-131: Incorrect Calculation of Buffer Size\"]\n\n    cwe131 -->|CANPRECEDE| cwe124\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe124 primary\n    class cwe131 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with a potential **incorrect calculation of the buffer size** (CWE-131), which then leads to the **buffer underwrite** (CWE-124).\n\n## Summary of Analysis\nThe initial analysis focused on identifying the root cause of the vulnerability. The description clearly states that there is a **buffer underrun** in pkwrite when writing an opaque key pair. The CVE Reference Links Content Summary confirms that the functions `mbedtls_pk_write_key_der()` and `mbedtls_pk_write_key_pem()` can cause a **buffer underrun** when the output buffer is too small in certain cases.\n\nThe primary CWE, CWE-124 **Buffer Underwrite ('Buffer Underflow')**, directly matches the vulnerability description.\n\nCWE-131 **Incorrect Calculation of Buffer Size** was considered because the buffer underrun could be a consequence of an incorrect size calculation, as suggested in the CVE Reference Links Content Summary. However, the description doesn't explicitly state that the buffer size calculation is incorrect, only that the output buffer is too small.\n\nThe selected CWEs are at the optimal level of specificity. CWE-124 is a Base CWE and directly reflects the **buffer underrun**.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-131: Incorrect Calculation of Buffer Size\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-124: Buffer Underwrite ('Buffer Underflow')\n**Abstraction Level**: Base\n**Similarity Score**: 739.14\n**Source**: sparse\n\n**Description**:\nThe product writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**Supporting evidence:**\n- Vulnerability Description: \"... has a **buffer underrun** in pkwrite when writing an opaque key pair\"\n- CVE Reference Links Content Summary: \"**Root cause of vulnerability:** The functions `mbedtls_pk_write_key_der()` and `mbedtls_pk_write_key_pem()` can cause a **buffer underrun** when the output buffer is too small in certain cases.\"\n\nCWE-124 is the primary weakness.\nCWE-131 is a secondary weakness that could be the root cause of CWE-124.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-124:**\n- 124 (Buffer Underwrite ('Buffer Underflow')) - ROOT\n\n\n**Chain starting from CWE-131:**\n- 131 (Incorrect Calculation of Buffer Size) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "124",
        "name": "Buffer Underwrite ('Buffer Underflow')",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: buffer underrun",
        "match_reason": "exact_match_whole_phrase"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "126",
        "name": "Buffer Over-read",
        "source": "sparse"
      },
      "similarity": 131.1074346937591
    },
    {
      "metadata": {
        "doc_id": "226",
        "name": "Sensitive Information in Resource Not Removed Before Reuse",
        "source": "sparse"
      },
      "similarity": 123.6705224257811
    },
    {
      "metadata": {
        "doc_id": "122",
        "name": "Heap-based Buffer Overflow",
        "source": "sparse"
      },
      "similarity": 117.5934453994741
    },
    {
      "metadata": {
        "doc_id": "121",
        "name": "Stack-based Buffer Overflow",
        "source": "sparse"
      },
      "similarity": 116.14572963097191
    },
    {
      "metadata": {
        "doc_id": "327",
        "name": "Use of a Broken or Risky Cryptographic Algorithm",
        "source": "sparse"
      },
      "similarity": 116.02831512799128
    },
    {
      "metadata": {
        "doc_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "source": "sparse"
      },
      "similarity": 114.3625202699457
    },
    {
      "metadata": {
        "doc_id": "295",
        "name": "Improper Certificate Validation",
        "source": "sparse"
      },
      "similarity": 110.45301041992806
    },
    {
      "metadata": {
        "doc_id": "805",
        "name": "Buffer Access with Incorrect Length Value",
        "type": "Base",
        "original_content": "The product uses a sequential operation to read or write a buffer, but it uses an incorrect length value that causes it to access memory that is outside of the bounds of the buffer.",
        "keyphrase_source": "weakness:buffer underrun",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.48913865855240546,
            "graph": 1.6577541681863508
          }
        }
      },
      "similarity": 0.48913865855240546
    },
    {
      "doc_id": "131",
      "text": "The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.",
      "score": 0.5162790412152212,
      "metadata": {
        "doc_id": "131",
        "name": "Incorrect Calculation of Buffer Size",
        "type": "Base",
        "extended_description": null,
        "alternate_terms": [],
        "original_content": "The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.",
        "relationships": [
          {
            "source_id": "131",
            "target_id": "467",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "131",
            "target_id": "119",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "131",
            "target_id": "682",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1340"
            }
          },
          {
            "source_id": "131",
            "target_id": "682",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1305"
            }
          },
          {
            "source_id": "131",
            "target_id": "682",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "131",
            "target_id": "682",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "682",
            "target_id": "131",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "467",
            "target_id": "131",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "119",
            "target_id": "131",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "source": "graph",
        "sources": [
          "vector",
          "graph"
        ],
        "vector_score": 0.5162790412152212,
        "graph_score": 3.6540400000000006,
        "score_components": {
          "relationship_chain": 0.8,
          "explicit_mention": 1.0,
          "abstraction_path": 0.9,
          "sequence_path": 0.5760000000000002
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "805",
                  "119",
                  "CHILDOF"
                ],
                [
                  "119",
                  "131",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.8,
              "type": "relationship_chain",
              "source": "805"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "124",
                  "839",
                  "CANFOLLOW"
                ],
                [
                  "839",
                  "119",
                  "CANPRECEDE"
                ],
                [
                  "119",
                  "131",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.5760000000000002,
              "type": "vulnerability_sequence_forward",
              "source": "124"
            }
          }
        },
        "is_explicit": true,
        "abstraction_level": "base",
        "position": "after",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.46084363221141983,
            "graph": 2.3989356164860887
          }
        }
      },
      "similarity": 2.3989356164860887
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-124",
      "CWE-131"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}