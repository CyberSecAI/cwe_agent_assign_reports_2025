{
  "query": "In the Linux kernel, the following vulnerability has been resolved md fix mddev uaf while iterating all_mddevs list While iterating all_mddevs list from md_notify_reboot() and md_exit(), list_for_each_entry_safe is used, and this can race with deletint the next mddev, causing UAF t1 spin_lock //list_for_each_entry_safe(mddev, n, ...) mddev_get(mddev1) // assume mddev2 is the next entry spin_unlock t2 //remove mddev2 ... mddev_free spin_lock list_del spin_unlock kfree(mddev2) mddev_put(mddev1) spin_lock //continue dereference mddev2->all_mddevs The old helper for_each_mddev() actually grab the reference of mddev2 while holding the lock, to prevent from being freed. This problem can be fixed the same way, however, the code will be complex. Hence switch to use list_for_each_entry, in this case mddev_put() can free the mddev1 and its not safe as well. Refer to md_seq_show(), also factor out a helper mddev_put_locked() to fix this problem.",
  "count": 20,
  "results": [
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "abstraction": "Class",
      "score": 0.5355530346350655,
      "original_score": 0.5355530346350655,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 0.5228033714694466,
      "original_score": 0.5228033714694466,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "abstraction": "Base",
      "score": 0.5188577481740339,
      "original_score": 0.5188577481740339,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "abstraction": "Class",
      "score": 0.5177626734778707,
      "original_score": 0.5177626734778707,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "366",
      "name": "Race Condition within a Thread",
      "abstraction": "Base",
      "score": 0.5066398250271504,
      "original_score": 0.5066398250271504,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "911",
      "name": "Improper Update of Reference Count",
      "abstraction": "Base",
      "score": 0.5023604180541124,
      "original_score": 0.5023604180541124,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "413",
      "name": "Improper Resource Locking",
      "abstraction": "Base",
      "score": 0.5021175117690129,
      "original_score": 0.5021175117690129,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "abstraction": "Base",
      "score": 0.492496416755562,
      "original_score": 0.492496416755562,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "abstraction": "Variant",
      "score": 0.49136097086233865,
      "original_score": 0.49136097086233865,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "606",
      "name": "Unchecked Input for Loop Condition",
      "abstraction": "Base",
      "score": 0.4899035429776791,
      "original_score": 0.4899035429776791,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "415",
      "name": "Double Free",
      "abstraction": "Variant",
      "score": 0.47925647047423714,
      "original_score": 0.47925647047423714,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "abstraction": "Base",
      "score": 0.47711924726771393,
      "original_score": 0.47711924726771393,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "abstraction": "Variant",
      "score": 0.472609670167994,
      "original_score": 0.472609670167994,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "abstraction": "Base",
      "score": 0.47234272155852725,
      "original_score": 0.47234272155852725,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "131",
      "name": "Incorrect Calculation of Buffer Size",
      "abstraction": "Base",
      "score": 0.4722507275000263,
      "original_score": 0.4722507275000263,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1264",
      "name": "Hardware Logic with Insecure De-Synchronization between Control and Data Channels",
      "abstraction": "Base",
      "score": 0.47175047986457624,
      "original_score": 0.47175047986457624,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "775",
      "name": "Missing Release of File Descriptor or Handle after Effective Lifetime",
      "abstraction": "Variant",
      "score": 0.4705896456419874,
      "original_score": 0.4705896456419874,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "277",
      "name": "Insecure Inherited Permissions",
      "abstraction": "Variant",
      "score": 0.4705415777509596,
      "original_score": 0.4705415777509596,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "404",
      "name": "Improper Resource Shutdown or Release",
      "abstraction": "Class",
      "score": 0.47023777035060177,
      "original_score": 0.47023777035060177,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "252",
      "name": "Unchecked Return Value",
      "abstraction": "Base",
      "score": 0.467930033576191,
      "original_score": 0.467930033576191,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 0.467930033576191,
    "max": 0.5355530346350655,
    "mean": 0.49022419286775437,
    "median": 0.48458000672595813,
    "count": 20
  }
}