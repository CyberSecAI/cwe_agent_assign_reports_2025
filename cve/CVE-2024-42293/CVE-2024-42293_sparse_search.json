{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved arm64 mm Fix lockless walks with static and dynamic page-table folding Lina reports random oopsen originating from the fast GUP code when 16K pages are used with 4-level page-tables, the fourth level being folded at runtime due to lack of LPA2. In this configuration, the generic implementation of p4d_offset_lockless() will return a p4d_t * corresponding to the pgd_t allocated on the stack of the caller, gup_fast_pgd_range(). This is normally fine, but when the fourth level of page-table is folded at runtime, pud_offset_lockless() will offset from the address of the p4d_t to calculate the address of the PUD in the same page-table page. This results in a stray stack read when the p4d_t has been allocated on the stack and can send the walker into the weeds. Fix the problem by providing our own definition of p4d_offset_lockless() when CONFIG_PGTABLE_LEVELS <= 4 which returns the real page-table pointer rather than the address of the local stack variable.",
  "keyphrases": {
    "rootcause": [
      "lockless walks with static",
      "dynamic page-table folding"
    ],
    "weakness": [
      "stack corruption"
    ]
  },
  "timestamp": "2025-07-13 13:53:36",
  "cve_id": "CVE-2024-42293",
  "result_count": 12,
  "results": [
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 890.36798668755,
      "search_source": "rootcause:dynamic page-table folding"
    },
    {
      "cwe_id": "472",
      "name": "External Control of Assumed-Immutable Web Parameter",
      "score": 853.3973657347374,
      "search_source": "rootcause:dynamic page-table folding"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 845.9432539552452,
      "search_source": "rootcause:lockless walks with static"
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "score": 842.7782782512274,
      "search_source": "rootcause:dynamic page-table folding"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 841.4553796384555,
      "search_source": "rootcause:lockless walks with static"
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "score": 841.2569287851977,
      "search_source": "rootcause:lockless walks with static"
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "score": 836.8661390560153,
      "search_source": "rootcause:lockless walks with static"
    },
    {
      "cwe_id": "79",
      "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "score": 831.6131051135139,
      "search_source": "rootcause:dynamic page-table folding"
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "score": 823.9768188190924,
      "search_source": "rootcause:dynamic page-table folding"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "score": 822.7028976152751,
      "search_source": "rootcause:dynamic page-table folding"
    },
    {
      "cwe_id": "121",
      "name": "Stack-based Buffer Overflow",
      "score": 771.2984259160165,
      "search_source": "weakness:stack corruption"
    },
    {
      "cwe_id": "674",
      "name": "Uncontrolled Recursion",
      "score": 765.1941967688606,
      "search_source": "weakness:stack corruption"
    }
  ]
}