{
  "cve_id": "CVE-2024-6477",
  "description": "The UsersWP WordPress plugin before 1.2.12 uses **predictable filenames** when an admin generates an export, which could allow unauthenticated attackers to download them and retrieve sensitive information such as IP, username, and email address",
  "key_phrases": {
    "rootcause": "predictable filenames",
    "weakness": "",
    "impact": "download exports and retrieve sensitive information",
    "vector": "",
    "attacker": "unauthenticated attackers",
    "product": "UsersWP WordPress plugin",
    "version": "before 1.2.12",
    "component": ""
  },
  "reference_content": "- **Root cause of vulnerability:** The plugin generates export files with predictable filenames.\n- **Weaknesses/vulnerabilities present:** Sensitive Data Disclosure due to predictable filenames for exported user data.\n- **Impact of exploitation:** Unauthenticated attackers can download the export files, gaining access to sensitive information such as usernames, IP addresses, and email addresses of users.\n- **Attack vectors:** By guessing or knowing the predictable filename, an attacker can directly request the file via HTTP.\n- **Required attacker capabilities/position:** The attacker does not need any authentication and can be in any network location.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-340 | Generation of Predictable Numbers or Identifiers | 0.9 | Class | Allowed-with-Review | Primary CWE. The plugin uses **predictable filenames** when generating exports. |\n| CWE-552 | Files or Directories Accessible to External Parties | 0.8 | Base | Allowed | Secondary CWE. Unauthenticated attackers can download these exports.|\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is CWE-340, which leads to CWE-552. CWE-340 is a class-level CWE, and there might be a more specific base-level CWE available, but the provided information is not detailed enough to select it. CWE-552 is a base-level CWE representing the impact of the predictable identifiers.\n\n```mermaid\ngraph TD\n    cwe340[\"CWE-340: Generation of Predictable Numbers or Identifiers\"]\n    cwe552[\"CWE-552: Files or Directories Accessible to External Parties\"]\n\n    cwe552 -- CANFOLLOW --> cwe340\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe340 primary\n    class cwe552 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **generation of predictable filenames** (CWE-340). This leads to the impact where unauthenticated attackers can download these files (CWE-552), gaining access to sensitive information.\n\n## Summary of Analysis\nThe primary weakness is the **generation of predictable filenames** (CWE-340) when an admin generates an export file. This allows unauthenticated attackers to download the files, which leads to sensitive data disclosure (CWE-552).\n\nThe vulnerability description states that the UsersWP WordPress plugin before 1.2.12 uses **predictable filenames** when an admin generates an export, which could allow unauthenticated attackers to download them and retrieve sensitive information such as IP, username, and email address.\n\nThe CVE Reference Links Content Summary confirms that the root cause is the plugin generating export files with **predictable filenames**. The impact is that unauthenticated attackers can download the export files, gaining access to sensitive information such as usernames, IP addresses, and email addresses of users.\n\nCWE-340 (Generation of Predictable Numbers or Identifiers) is a Class-level CWE that fits the root cause. The description matches the vulnerability: The product uses a scheme that generates numbers or identifiers that are more predictable than required. The mapping guidance suggests that a more specific Base-level child might be more appropriate. However, without more information about the specific algorithm used to generate the filenames, it is not possible to select a more specific CWE.\n\nCWE-552 (Files or Directories Accessible to External Parties) is a Base-level CWE that fits the impact. The description matches the vulnerability: The product makes files or directories accessible to unauthorized actors, even though they should not be.\n\nCWE-425 (Direct Request ('Forced Browsing')) was considered but not selected because while it's true that the attacker can directly request the file, the root cause isn't the lack of authorization checks, but the predictability of the filename itself.\n\nCWE-639 (Authorization Bypass Through User-Controlled Key) was considered, but it doesn't fit the vulnerability because there is no user-controlled key involved. The issue is that the filenames are predictable, not that an attacker is modifying a key to gain access to another user's data.\n\nCWE-330 (Use of Insufficiently Random Values) was considered, but CWE-340 is a better fit because it's more specific to identifiers and numbers, whereas CWE-330 is more general.\n\nCWE-341 (Predictable from Observable State) was considered, but it is similar to CWE-340. Since the filenames themselves are predictable, CWE-340 is a better fit for the specific weakness.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-340 | Generation of Predictable Numbers or Identifiers | 0.9 | Class | Allowed-with-Review | Primary CWE. The plugin uses **predictable filenames** when generating exports. |\n| CWE-552 | Files or Directories Accessible to External Parties | 0.8 | Base | Allowed | Secondary CWE. Unauthenticated attackers can download these exports.|\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is CWE-340, which leads to CWE-552. CWE-340 is a class-level CWE, and there might be a more specific base-level CWE available, but the provided information is not detailed enough to select it. CWE-552 is a base-level CWE representing the impact of the predictable identifiers.\n\n```mermaid\ngraph TD\n    cwe340[\"CWE-340: Generation of Predictable Numbers or Identifiers\"]\n    cwe552[\"CWE-552: Files or Directories Accessible to External Parties\"]\n\n    cwe552 -- CANFOLLOW --> cwe340\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe340 primary\n    class cwe552 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **generation of predictable filenames** (CWE-340). This leads to the impact where unauthenticated attackers can download these files (CWE-552), gaining access to sensitive information.\n\n## Summary of Analysis\nThe primary weakness is the **generation of predictable filenames** (CWE-340) when an admin generates an export file. This allows unauthenticated attackers to download the files, which leads to sensitive data disclosure (CWE-552).\n\nThe vulnerability description states that the UsersWP WordPress plugin before 1.2.12 uses **predictable filenames** when an admin generates an export, which could allow unauthenticated attackers to download them and retrieve sensitive information such as IP, username, and email address.\n\nThe CVE Reference Links Content Summary confirms that the root cause is the plugin generating export files with **predictable filenames**. The impact is that unauthenticated attackers can download the export files, gaining access to sensitive information such as usernames, IP addresses, and email addresses of users.\n\nCWE-340 (Generation of Predictable Numbers or Identifiers) is a Class-level CWE that fits the root cause. The description matches the vulnerability: The product uses a scheme that generates numbers or identifiers that are more predictable than required. The mapping guidance suggests that a more specific Base-level child might be more appropriate. However, without more information about the specific algorithm used to generate the filenames, it is not possible to select a more specific CWE.\n\nCWE-552 (Files or Directories Accessible to External Parties) is a Base-level CWE that fits the impact. The description matches the vulnerability: The product makes files or directories accessible to unauthorized actors, even though they should not be.\n\nCWE-425 (Direct Request ('Forced Browsing')) was considered but not selected because while it's true that the attacker can directly request the file, the root cause isn't the lack of authorization checks, but the predictability of the filename itself.\n\nCWE-639 (Authorization Bypass Through User-Controlled Key) was considered, but it doesn't fit the vulnerability because there is no user-controlled key involved. The issue is that the filenames are predictable, not that an attacker is modifying a key to gain access to another user's data.\n\nCWE-330 (Use of Insufficiently Random Values) was considered, but CWE-340 is a better fit because it's more specific to identifiers and numbers, whereas CWE-330 is more general.\n\nCWE-341 (Predictable from Observable State) was considered, but it is similar to CWE-340. Since the filenames themselves are predictable, CWE-340 is a better fit for the specific weakness.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-340:**\n- 340 (Generation of Predictable Numbers or Identifiers) - ROOT\n\n\n**Chain starting from CWE-330:**\n- 330 (Use of Insufficiently Random Values) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "639",
        "name": "Authorization Bypass Through User-Controlled Key",
        "source": "sparse"
      },
      "similarity": 202.90233946288555
    },
    {
      "metadata": {
        "doc_id": "341",
        "name": "Predictable from Observable State",
        "source": "sparse"
      },
      "similarity": 199.21568823213272
    },
    {
      "metadata": {
        "doc_id": "552",
        "name": "Files or Directories Accessible to External Parties",
        "source": "sparse"
      },
      "similarity": 197.00499492155143
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 195.1339094439032
    },
    {
      "metadata": {
        "doc_id": "425",
        "name": "Direct Request ('Forced Browsing')",
        "source": "sparse"
      },
      "similarity": 195.1202107687536
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 194.3762277683835
    },
    {
      "metadata": {
        "doc_id": "330",
        "name": "Use of Insufficiently Random Values",
        "source": "sparse"
      },
      "similarity": 191.01160657664278
    },
    {
      "metadata": {
        "doc_id": "340",
        "name": "Generation of Predictable Numbers or Identifiers",
        "source": "sparse"
      },
      "similarity": 190.24083946437764
    },
    {
      "metadata": {
        "doc_id": "760",
        "name": "Use of a One-Way Hash with a Predictable Salt",
        "type": "Variant",
        "original_content": "The product uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the product uses a predictable salt as part of the input.",
        "keyphrase_source": "rootcause:predictable filenames",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.48033996923869227,
            "sparse": 188.74591202209592
          }
        }
      },
      "similarity": 0.48033996923869227
    },
    {
      "doc_id": "471",
      "text": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "471",
        "name": "Modification of Assumed-Immutable Data (MAID)",
        "type": "base",
        "original_content": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
        "relationships": [
          {
            "source_id": "471",
            "target_id": "621",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "607",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "602",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "473",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "472",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "291",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "1321",
            "label": "CANFOLLOW",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "1282",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "664",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "664",
            "target_id": "471",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "621",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "607",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "602",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "473",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "472",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "291",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1321",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1282",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "425",
                  "471",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "425"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "425",
                  "471",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "425"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-340",
      "CWE-330",
      "CWE-639",
      "CWE-552",
      "CWE-425",
      "CWE-341"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}