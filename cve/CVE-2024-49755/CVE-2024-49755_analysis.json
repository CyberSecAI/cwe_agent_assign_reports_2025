{
  "cve_id": "CVE-2024-49755",
  "description": "Duende IdentityServer is an OpenID Connect and OAuth 2.x framework for ASP.NET Core. IdentityServers local API authentication handler performs **insufficient validation of the cnf claim in DPoP access tokens**. This allows an attacker to use leaked DPoP access tokens at local api endpoints even without possessing the private key for signing proof tokens. Note that this only impacts custom endpoints within an IdentityServer implementation that have explicitly used the LocalApiAuthenticationHandler for authentication. This vulnerability is patched in IdentityServer 7.0.8. Version 6.3 and below are unaffected, as they do not support DPoP in Local APIs.",
  "key_phrases": {
    "rootcause": "insufficient validation of the cnf claim in DPoP access tokens",
    "weakness": "",
    "impact": "use leaked DPoP access tokens at local api endpoints",
    "vector": "",
    "attacker": "attacker",
    "product": "Duende IdentityServer",
    "version": "prior to 7.0.8",
    "component": "IdentityServers local API authentication handler"
  },
  "reference_content": "Based on the provided content, here's an analysis of CVE-2024-49755:\n\n**Root Cause of Vulnerability:**\n\nThe vulnerability stems from insufficient validation of the `cnf` (confirmation) claim within DPoP (Demonstration of Proof-of-Possession) access tokens by IdentityServer's local API authentication handler. Specifically, the handler does not properly verify if the `jkt` (JWK thumbprint) within the `cnf` claim of the access token matches the thumbprint of the key used to sign the DPoP proof token.\n\n**Weaknesses/Vulnerabilities Present:**\n\n*   **Insufficient Validation:** The primary weakness is the lack of proper validation of the `cnf` claim. The `jkt` member within the `cnf` claim was not being properly compared to the `jwk` used to create the DPoP proof.\n*   **Bypass of DPoP Protection:** This insufficient validation allows an attacker who has obtained a leaked DPoP access token to use it at local API endpoints, even without possessing the private key associated with the token. This effectively bypasses the intended protection of DPoP.\n\n**Impact of Exploitation:**\n\n*   **Unauthorized Access:** An attacker with a leaked DPoP access token can gain unauthorized access to local API endpoints of the IdentityServer implementation.\n*   **Potential Data Exposure/Modification:** Depending on the specific functionality of the local API endpoints, this could lead to the exposure of sensitive data or the modification of data.\n\n**Attack Vectors:**\n\n*   **Leaked Access Tokens:** The attack vector is a leaked DPoP access token. If an access token is compromised, an attacker can use it to gain unauthorized access.\n*   **Local API Endpoints:** The attack is limited to custom endpoints that have explicitly used the `LocalApiAuthenticationHandler` for authentication and have enabled DPoP for local APIs.\n\n**Required Attacker Capabilities/Position:**\n\n*   **Possession of a Leaked DPoP Access Token:** The attacker must obtain a valid DPoP access token. This could happen through various means like interception or exfiltration.\n*   **Network Access:**  The attacker must have network access to the vulnerable local API endpoints.\n\n**Additional Information:**\n\n*   The vulnerability only affects IdentityServer implementations using the local APIs feature and have explicitly enabled DPoP for local APIs via `LocalApiTokenMode.DPoPAndBearer` or `LocalApiTokenMode.DPoPOnly`.\n*   OAuth or OIDC protocol endpoints, UI pages, external API resources, and refresh tokens for public clients are not impacted by this vulnerability.\n*   The fix involves properly validating the `jkt` member of the `cnf` claim against the thumbprint of the key used for the DPoP proof.\n*   The CVSS score is 3.1, with the following base metrics:\n    *   Attack Vector: Network\n    *   Attack Complexity: High\n    *   Privileges Required: None\n    *   User Interaction: Required\n    *   Scope: Unchanged\n    *   Confidentiality: Low\n    *   Integrity: None\n    *   Availability: None\n*   The vulnerability is addressed in IdentityServer version 7.0.8. Versions 6.3 and below are not affected, as they do not support DPoP in local APIs.\n\nThis information provides a detailed analysis of the vulnerability described by CVE-2024-49755, going beyond the placeholder description and drawing upon the code and commit information provided.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-347 | Improper Verification of Cryptographic Signature | 0.9 | Base | Allowed | Primary CWE. The **root cause** is the **insufficient validation of the cnf claim in DPoP access tokens**, which involves cryptographic signatures. |\n| CWE-287 | Improper Authentication | 0.7 | Class | Discouraged | Secondary candidate. The vulnerability involves a failure in authentication due to **insufficient validation**. However, CWE-347 is more specific. |\n| CWE-306 | Missing Authentication for Critical Function | 0.6 | Base | Allowed | Secondary candidate. The vulnerability is due to **insufficient validation**, not a complete absence of authentication, making CWE-347 a better fit. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-347 (Improper Verification of Cryptographic Signature). CWE-347 is a child of CWE-345 (Insufficient Verification of Data Authenticity), indicating a hierarchical relationship. CWE-287 (Improper Authentication) and CWE-306 (Missing Authentication for Critical Function) were considered as potential candidates, but CWE-347 was chosen due to its specificity regarding cryptographic signatures and its alignment with the root cause.\n\n```mermaid\ngraph TD\n    cwe347[\"CWE-347: Improper Verification of Cryptographic Signature\"]\n    cwe345[\"CWE-345: Insufficient Verification of Data Authenticity\"]\n    cwe287[\"CWE-287: Improper Authentication\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    \n    cwe347 -->|CHILDOF| cwe345\n    cwe347 -->|PEEROF| cwe287\n    cwe347 -->|PEEROF| cwe306\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe347 primary\n    class cwe345,cwe287,cwe306 secondary\n```\n\n## Vulnerability Chain\nThe chain of events is as follows:\n1.  **Root Cause:** **Insufficient validation of the cnf claim in DPoP access tokens** (CWE-347)\n2.  **Impact:** Allows an attacker to use leaked DPoP access tokens at local API endpoints\nThe chain highlights how the initial flaw in validating cryptographic signatures leads directly to the exploitation of leaked tokens.\n\n## Summary of Analysis\nThe primary CWE selected is CWE-347 (Improper Verification of Cryptographic Signature). This selection is based on the evidence in the vulnerability description, which explicitly mentions **insufficient validation of the cnf claim in DPoP access tokens**. The CVE Reference Links Content Summary further supports this by stating that the handler does not properly verify if the `jkt` (JWK thumbprint) within the `cnf` claim of the access token matches the thumbprint of the key used to sign the DPoP proof token.\n\nThe choice of CWE-347 is further justified by its base level abstraction, which aligns with the detailed root cause of the vulnerability. Alternative CWEs, such as CWE-287 and CWE-306, were considered but deemed less specific as they represent more general authentication failures, rather than the specific issue of cryptographic signature verification.\n\nThe graph relationships influenced the final selection by clarifying the hierarchical structure. CWE-347 is more specific than its parent CWE-345, thus providing a more accurate representation of the vulnerability. The relationships also helped eliminate candidates like CWE-287 and CWE-306, which are related to authentication but do not directly address the cryptographic aspect of the vulnerability.\nThe selected CWEs are at the optimal level of specificity because CWE-347 accurately captures the technical flaw in cryptographic signature verification, which is the root cause of the vulnerability.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-347 | Improper Verification of Cryptographic Signature | 0.9 | Base | Allowed | Primary CWE. The **root cause** is the **insufficient validation of the cnf claim in DPoP access tokens**, which involves cryptographic signatures. |\n| CWE-287 | Improper Authentication | 0.7 | Class | Discouraged | Secondary candidate. The vulnerability involves a failure in authentication due to **insufficient validation**. However, CWE-347 is more specific. |\n| CWE-306 | Missing Authentication for Critical Function | 0.6 | Base | Allowed | Secondary candidate. The vulnerability is due to **insufficient validation**, not a complete absence of authentication, making CWE-347 a better fit. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-347 (Improper Verification of Cryptographic Signature). CWE-347 is a child of CWE-345 (Insufficient Verification of Data Authenticity), indicating a hierarchical relationship. CWE-287 (Improper Authentication) and CWE-306 (Missing Authentication for Critical Function) were considered as potential candidates, but CWE-347 was chosen due to its specificity regarding cryptographic signatures and its alignment with the root cause.\n\n```mermaid\ngraph TD\n    cwe347[\"CWE-347: Improper Verification of Cryptographic Signature\"]\n    cwe345[\"CWE-345: Insufficient Verification of Data Authenticity\"]\n    cwe287[\"CWE-287: Improper Authentication\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    \n    cwe347 -->|CHILDOF| cwe345\n    cwe347 -->|PEEROF| cwe287\n    cwe347 -->|PEEROF| cwe306\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe347 primary\n    class cwe345,cwe287,cwe306 secondary\n```\n\n## Vulnerability Chain\nThe chain of events is as follows:\n1.  **Root Cause:** **Insufficient validation of the cnf claim in DPoP access tokens** (CWE-347)\n2.  **Impact:** Allows an attacker to use leaked DPoP access tokens at local API endpoints\nThe chain highlights how the initial flaw in validating cryptographic signatures leads directly to the exploitation of leaked tokens.\n\n## Summary of Analysis\nThe primary CWE selected is CWE-347 (Improper Verification of Cryptographic Signature). This selection is based on the evidence in the vulnerability description, which explicitly mentions **insufficient validation of the cnf claim in DPoP access tokens**. The CVE Reference Links Content Summary further supports this by stating that the handler does not properly verify if the `jkt` (JWK thumbprint) within the `cnf` claim of the access token matches the thumbprint of the key used to sign the DPoP proof token.\n\nThe choice of CWE-347 is further justified by its base level abstraction, which aligns with the detailed root cause of the vulnerability. Alternative CWEs, such as CWE-287 and CWE-306, were considered but deemed less specific as they represent more general authentication failures, rather than the specific issue of cryptographic signature verification.\n\nThe graph relationships influenced the final selection by clarifying the hierarchical structure. CWE-347 is more specific than its parent CWE-345, thus providing a more accurate representation of the vulnerability. The relationships also helped eliminate candidates like CWE-287 and CWE-306, which are related to authentication but do not directly address the cryptographic aspect of the vulnerability.\nThe selected CWEs are at the optimal level of specificity because CWE-347 accurately captures the technical flaw in cryptographic signature verification, which is the root cause of the vulnerability.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-306:**\n- 306 (Missing Authentication for Critical Function) - ROOT\n\n\n**Chain starting from CWE-287:**\n- 287 (Improper Authentication) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 571.5870894003317
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 557.8095037805372
    },
    {
      "metadata": {
        "doc_id": "287",
        "name": "Improper Authentication",
        "source": "sparse"
      },
      "similarity": 548.9556246202573
    },
    {
      "metadata": {
        "doc_id": "1390",
        "name": "Weak Authentication",
        "source": "sparse"
      },
      "similarity": 541.8996700105228
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 527.0848429506592
    },
    {
      "metadata": {
        "doc_id": "347",
        "name": "Improper Verification of Cryptographic Signature",
        "source": "sparse"
      },
      "similarity": 523.9143670035918
    },
    {
      "metadata": {
        "doc_id": "522",
        "name": "Insufficiently Protected Credentials",
        "source": "sparse"
      },
      "similarity": 520.2225474783703
    },
    {
      "metadata": {
        "doc_id": "200",
        "name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "source": "sparse"
      },
      "similarity": 515.6769760436778
    },
    {
      "metadata": {
        "doc_id": "556",
        "name": "ASP.NET Misconfiguration: Use of Identity Impersonation",
        "type": "Variant",
        "original_content": "Configuring an ASP.NET application to run with impersonated credentials may give the application unnecessary privileges.",
        "keyphrase_source": "rootcause:insufficient validation of the cnf claim in DPoP access tokens",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.5195959591954218
          }
        }
      },
      "similarity": 0.5195959591954218
    },
    {
      "doc_id": "226",
      "text": "CWE-226: Sensitive Information in Resource Not Removed Before Reuse",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "226",
        "name": "Sensitive Information in Resource Not Removed Before Reuse",
        "type": "base",
        "original_content": "CWE-226: Sensitive Information in Resource Not Removed Before Reuse",
        "relationships": [
          {
            "source_id": "226",
            "target_id": "244",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "1342",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "1301",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "1272",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "1239",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "201",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "212",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "459",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "459",
            "target_id": "226",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "244",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "212",
            "target_id": "226",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "201",
            "target_id": "226",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1342",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1194"
            }
          },
          {
            "source_id": "1342",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1301",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1272",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1239",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1194"
            }
          },
          {
            "source_id": "1239",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "201",
                  "226",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "201"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "201",
                  "226",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "201"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "226",
                  "201",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "201"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-306",
      "CWE-287",
      "CWE-347",
      "CWE-345"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}