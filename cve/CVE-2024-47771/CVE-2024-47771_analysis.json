{
  "cve_id": "CVE-2024-47771",
  "description": "Element Desktop is a Matrix client for desktop platforms. Element Desktop versions 1.11.70 through 1.11.80 contain a vulnerability which can, under specially crafted conditions, lead to the access token becoming exposed to third parties. At least one vector has been identified internally, involving malicious widgets, but other vectors may exist. Users are strongly advised to upgrade to version 1.11.81 to remediate the issue. As a workaround, avoid granting permissions to untrusted widgets.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "",
    "impact": "access token exposed to third parties",
    "vector": "malicious widgets",
    "attacker": "",
    "product": "Element Desktop",
    "version": "1.11.70 through 1.11.80",
    "component": ""
  },
  "reference_content": "Based on the provided information, here's an analysis of CVE-2024-47771:\n\n**Root Cause of Vulnerability:**\nThe vulnerability stems from how Element Desktop handles authenticated media requests. Specifically, it involves how access tokens are passed when accessing media, potentially exposing them to third parties under specific conditions. The core issue lies in how the application rewrites URLs and adds authorization headers for media requests.\n\n**Weaknesses/Vulnerabilities Present:**\n- **Access Token Exposure:** The primary weakness is the potential for access tokens to be exposed to malicious third parties. The mechanism for rewriting media URLs and attaching authorization headers was flawed.\n- **Insecure Media URL Handling:** The application modifies media URLs late in the request lifecycle (similar to a service worker), which is insecure and error-prone.\n- **Insufficient Origin Validation:** There was insufficient validation of the origin of requests to ensure they were indeed going to the legitimate homeserver.\n\n**Impact of Exploitation:**\n- **Access Token Theft:** Attackers could gain access to a user's access token, enabling them to impersonate the user and perform actions on their account.\n- **Data Exposure:** With access to a user's token, attackers could potentially access private conversations and data associated with the user's account.\n- **Account Compromise:** Complete account compromise is possible depending on the scope of the exposed token.\n\n**Attack Vectors:**\n- **Malicious Widgets:** The vulnerability can be exploited via malicious widgets, which can be crafted to trigger the conditions necessary for token exposure.\n- **Other Potential Vectors:** The description notes that while malicious widgets are one identified vector, \"other vectors may exist\", suggesting the possibility of other attack methods.\n\n**Required Attacker Capabilities/Position:**\n- **Ability to Create Malicious Widgets:** Attackers must have the ability to create or inject malicious widgets into the Element Desktop client.\n- **User Interaction:** The user needs to interact with or grant permission to the malicious widget.\n- **Network Position:** The attacker does not need to be on the same network, this is a network based attack vector.\n\n**Additional Details:**\n\n*   The vulnerability is present in Element Desktop versions 1.11.70 through 1.11.80.\n*   The issue is fixed in version 1.11.81.\n*   The fix involves moving the check for the homeserver URL to where the access token is added, doing IPC communication sparingly to reduce the chance of token leaks and ensuring the origin of request matches the homeserver instead of relying solely on hostname.\n\n* The fix includes the following changes to `media-auth.ts`:\n   -  Checking the request URL before modification\n   - Ensuring the origin matches the homeserver origin rather than only checking hostname\n   - Moving the `getHomeserverUrl` check to before the Authorization header is added\n   - Adding `try...catch` blocks when creating URL objects\n\n* The fix includes the following changes to `preload.ts`:\n    - Adding the `serverSupportedVersions` to the list of electron channels.\n\nThis information is more detailed than the basic description provided in the CVE record.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID  | CWE Name                                                                 | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :----------------------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-863   | Incorrect Authorization                                                  | 0.9        | Class                 | Primary                         | Allowed-with-Review           |\n| CWE-668   | Exposure of Resource to Wrong Sphere                                     | 0.7        | Class                 | Secondary                       | Discouraged                   |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship that influenced the decision was the parent-child relationship. CWE-863 (Incorrect Authorization) is a Class-level CWE and could potentially have more specific Base-level children. However, based on the available information, the authorization check was present but flawed, making CWE-863 the most appropriate choice. CWE-668 (Exposure of Resource to Wrong Sphere) was considered due to the access token exposure, but it is a more general Class-level CWE. The vulnerability chain also suggests that an authorization issue led to the exposure of the access token, which further supports the selection of CWE-863 as the primary CWE.\n\n```mermaid\ngraph TD\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe668[\"CWE-668: Exposure of Resource to Wrong Sphere\"]\n    \n    cwe668 -->|PEEROF| cwe863\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe863 primary\n    class cwe668 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with a flawed authorization mechanism, which leads to the exposure of the access token.\n- **Root Cause:** **Incorrect Authorization** (CWE-863)\n- **Impact:** **Access Token Exposure** (CWE-668)\n\n## Summary of Analysis\nThe initial analysis focused on identifying the root cause of the vulnerability. The CVE description and the reference links content summary clearly indicate that the application performs an authorization check, but it is **incorrect**. This aligns perfectly with CWE-863 (Incorrect Authorization). The evidence supporting this includes:\n- \"Specifically, it involves how access tokens are passed when accessing media, potentially exposing them to third parties under specific conditions.\"\n- \"Insufficient origin validation\".\n- The fix including \"Ensuring the origin matches the homeserver origin rather than only checking hostname\".\n\nCWE-668 (Exposure of Resource to Wrong Sphere) was considered as a secondary CWE because the **impact** of the vulnerability is the **exposure** of the access token. However, it is a high-level CWE and CWE-863 better captures the root cause.\n\nThe selected CWEs are at the optimal level of specificity because CWE-863 captures the flawed authorization logic, and CWE-668 describes the resulting information exposure.\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-267: Privilege Defined With Unsafe Actions\n**Abstraction Level**: Base\n**Similarity Score**: 0.80\n**Source**: dense\n\n**Description**:\nA particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not selected* because the evidence suggests an authorization flaw rather than misuse of a privilege.\n\n## CWE-668: Exposure of Resource to Wrong Sphere\n**Abstraction Level**: Class\n**Similarity Score**: 0.80\n**Source**: dense\n\n**Description**:\nThe product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-668 is high-level and is often misused as a catch-all when lower-level CWE IDs might be applicable. It is sometimes used for low-information vulnerability reports [REF-1287]. It is a level-1 Class (i.e., a child of a Pillar). It is not useful for trend analysis.\n\n*Selected as Secondary* because it describes the impact of the vulnerability - the exposure of the access token to third parties.\n\n## CWE-266: Incorrect Privilege Assignment\n**Abstraction Level**: Base\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nA product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not selected* because the vulnerability is not about assigning incorrect privileges, but about flawed authorization logic.\n\n## CWE-41: Improper Resolution of Path Equivalence\n**Abstraction Level**: Base\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nThe product is vulnerable to file system contents disclosure through path equivalence. Path equivalence involves the use of special characters in file and directory names. The associated manipulations are intended to generate multiple names for the same object.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not selected* because the vulnerability does not relate to path equivalence.\n\n## CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\n**Abstraction Level**: Base\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not selected* because it is too specific to system-level information, while the vulnerability involves a user's access token.\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not selected* because the vulnerability does not involve externally controlled web parameters.\n\n## CWE-280: Improper Handling of Insufficient Permissions or Privileges\n**Abstraction Level**: Base\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe product does not handle or incorrectly handles when it has insufficient privileges to access resources or functionality as specified by their permissions. This may cause it to follow unexpected code paths that may leave the product in an invalid state.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not selected* because the vulnerability involves incorrect authorization logic, not handling of insufficient privileges.\n\n## CWE-451: User Interface (UI) Misrepresentation of Critical Information\n**Abstraction Level**: Class\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe user interface (UI) does not properly represent critical information to the user, allowing the information - or its source - to be obscured or spoofed. This is often a component in phishing attacks.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n*Not selected* because the vulnerability is not related to UI misrepresentation.\n\n## CWE-610: Externally Controlled Reference to a Resource in Another Sphere\n**Abstraction Level**: Class\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe product uses an externally controlled name or reference that resolves to a resource that is outside of the intended control sphere.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n*Not selected* because the vulnerability is not directly related to externally controlled references.\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to",
  "analysis_with_relationships": "# Summary\n| CWE ID  | CWE Name                                                                 | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :----------------------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-863   | Incorrect Authorization                                                  | 0.9        | Class                 | Primary                         | Allowed-with-Review           |\n| CWE-668   | Exposure of Resource to Wrong Sphere                                     | 0.7        | Class                 | Secondary                       | Discouraged                   |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship that influenced the decision was the parent-child relationship. CWE-863 (Incorrect Authorization) is a Class-level CWE and could potentially have more specific Base-level children. However, based on the available information, the authorization check was present but flawed, making CWE-863 the most appropriate choice. CWE-668 (Exposure of Resource to Wrong Sphere) was considered due to the access token exposure, but it is a more general Class-level CWE. The vulnerability chain also suggests that an authorization issue led to the exposure of the access token, which further supports the selection of CWE-863 as the primary CWE.\n\n```mermaid\ngraph TD\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe668[\"CWE-668: Exposure of Resource to Wrong Sphere\"]\n    \n    cwe668 -->|PEEROF| cwe863\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe863 primary\n    class cwe668 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with a flawed authorization mechanism, which leads to the exposure of the access token.\n- **Root Cause:** **Incorrect Authorization** (CWE-863)\n- **Impact:** **Access Token Exposure** (CWE-668)\n\n## Summary of Analysis\nThe initial analysis focused on identifying the root cause of the vulnerability. The CVE description and the reference links content summary clearly indicate that the application performs an authorization check, but it is **incorrect**. This aligns perfectly with CWE-863 (Incorrect Authorization). The evidence supporting this includes:\n- \"Specifically, it involves how access tokens are passed when accessing media, potentially exposing them to third parties under specific conditions.\"\n- \"Insufficient origin validation\".\n- The fix including \"Ensuring the origin matches the homeserver origin rather than only checking hostname\".\n\nCWE-668 (Exposure of Resource to Wrong Sphere) was considered as a secondary CWE because the **impact** of the vulnerability is the **exposure** of the access token. However, it is a high-level CWE and CWE-863 better captures the root cause.\n\nThe selected CWEs are at the optimal level of specificity because CWE-863 captures the flawed authorization logic, and CWE-668 describes the resulting information exposure.\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-267: Privilege Defined With Unsafe Actions\n**Abstraction Level**: Base\n**Similarity Score**: 0.80\n**Source**: dense\n\n**Description**:\nA particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not selected* because the evidence suggests an authorization flaw rather than misuse of a privilege.\n\n## CWE-668: Exposure of Resource to Wrong Sphere\n**Abstraction Level**: Class\n**Similarity Score**: 0.80\n**Source**: dense\n\n**Description**:\nThe product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-668 is high-level and is often misused as a catch-all when lower-level CWE IDs might be applicable. It is sometimes used for low-information vulnerability reports [REF-1287]. It is a level-1 Class (i.e., a child of a Pillar). It is not useful for trend analysis.\n\n*Selected as Secondary* because it describes the impact of the vulnerability - the exposure of the access token to third parties.\n\n## CWE-266: Incorrect Privilege Assignment\n**Abstraction Level**: Base\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nA product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not selected* because the vulnerability is not about assigning incorrect privileges, but about flawed authorization logic.\n\n## CWE-41: Improper Resolution of Path Equivalence\n**Abstraction Level**: Base\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nThe product is vulnerable to file system contents disclosure through path equivalence. Path equivalence involves the use of special characters in file and directory names. The associated manipulations are intended to generate multiple names for the same object.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not selected* because the vulnerability does not relate to path equivalence.\n\n## CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\n**Abstraction Level**: Base\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not selected* because it is too specific to system-level information, while the vulnerability involves a user's access token.\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not selected* because the vulnerability does not involve externally controlled web parameters.\n\n## CWE-280: Improper Handling of Insufficient Permissions or Privileges\n**Abstraction Level**: Base\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe product does not handle or incorrectly handles when it has insufficient privileges to access resources or functionality as specified by their permissions. This may cause it to follow unexpected code paths that may leave the product in an invalid state.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not selected* because the vulnerability involves incorrect authorization logic, not handling of insufficient privileges.\n\n## CWE-451: User Interface (UI) Misrepresentation of Critical Information\n**Abstraction Level**: Class\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe user interface (UI) does not properly represent critical information to the user, allowing the information - or its source - to be obscured or spoofed. This is often a component in phishing attacks.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n*Not selected* because the vulnerability is not related to UI misrepresentation.\n\n## CWE-610: Externally Controlled Reference to a Resource in Another Sphere\n**Abstraction Level**: Class\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe product uses an externally controlled name or reference that resolves to a resource that is outside of the intended control sphere.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n*Not selected* because the vulnerability is not directly related to externally controlled references.\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-280:**\n- 280 (Improper Handling of Insufficient Permissions or Privileges ) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "427",
        "name": "Uncontrolled Search Path Element",
        "source": "sparse"
      },
      "similarity": 124.36268451222486
    },
    {
      "metadata": {
        "doc_id": "502",
        "name": "Deserialization of Untrusted Data",
        "source": "sparse"
      },
      "similarity": 117.48662596062499
    },
    {
      "metadata": {
        "doc_id": "200",
        "name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "source": "sparse"
      },
      "similarity": 116.16889474621301
    },
    {
      "metadata": {
        "doc_id": "770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "source": "sparse"
      },
      "similarity": 115.80128368835936
    },
    {
      "metadata": {
        "doc_id": "94",
        "name": "Improper Control of Generation of Code ('Code Injection')",
        "source": "sparse"
      },
      "similarity": 114.86963527467279
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 114.46151646096324
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 112.5825687164314
    },
    {
      "metadata": {
        "doc_id": "190",
        "name": "Integer Overflow or Wraparound",
        "source": "sparse"
      },
      "similarity": 112.52121422207209
    },
    {
      "metadata": {
        "doc_id": "1021",
        "name": "Improper Restriction of Rendered UI Layers or Frames",
        "type": "Base",
        "original_content": "The web application does not restrict or incorrectly restricts frame objects or UI layers that belong to another application or domain, which can lead to user confusion about which interface the user is interacting with.",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5008357022208535,
            "graph": 1.6994495986706168
          }
        }
      },
      "similarity": 0.5008357022208535
    },
    {
      "doc_id": "98",
      "text": "CWE-98: Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')",
      "score": 2.4936000000000003,
      "metadata": {
        "doc_id": "98",
        "name": "Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')",
        "type": "variant",
        "original_content": "CWE-98: Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')",
        "relationships": [
          {
            "source_id": "98",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "473",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "456",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "426",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "94",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "829",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "706",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "94",
            "target_id": "98",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "829",
            "target_id": "98",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "706",
            "target_id": "98",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "473",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "456",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0,
          "peer_group": 0.63
        },
        "abstraction_factor": 1.2,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward",
            "peer_relationship"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "94",
                  "98",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "94"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "94",
                  "98",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "94"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "98",
                  "94",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "94"
            },
            "peer_relationship": {
              "path": [
                [
                  "426",
                  "427",
                  "PEEROF"
                ],
                [
                  "98",
                  "426",
                  "CANALSOBE"
                ]
              ],
              "score": 0.63,
              "type": "peer_relationship",
              "source": "427"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.4936000000000003
          }
        }
      },
      "similarity": 2.4936000000000003
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-280",
      "CWE-610",
      "CWE-472",
      "CWE-668",
      "CWE-451",
      "CWE-267",
      "CWE-266",
      "CWE-497",
      "CWE-212",
      "CWE-41"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}