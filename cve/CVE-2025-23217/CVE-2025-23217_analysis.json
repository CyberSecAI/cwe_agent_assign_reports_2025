{
  "cve_id": "CVE-2025-23217",
  "description": "mitmproxy is a interactive TLS-capable intercepting HTTP proxy for penetration testers and software developers and mitmweb is a web-based interface for mitmproxy. In mitmweb 11.1.1 and below, a malicious client can use mitmwebs proxy server (bound to `*8080` by default) to access mitmwebs internal API (bound to `127.0.0.18081` by default). In other words, while the cannot access the API directly, they can access the API through the proxy. An attacker may be able to escalate this **SSRF**-style access to remote code execution. The mitmproxy and mitmdump tools are unaffected. Only mitmweb is affected. This vulnerability has been fixed in mitmproxy 11.1.2 and above. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
  "key_phrases": {
    "component": "proxy server",
    "rootcause": "",
    "vector": "access mitmwebs internal API",
    "weakness": "SSRF",
    "product": "mitmweb",
    "impact": "remote code execution, escalate this SSRF-style access",
    "attacker": "malicious client",
    "version": "11.1.1 and below"
  },
  "reference_content": "```text\nCVE ID: CVE-2025-23217\n\n**Root cause of vulnerability:**\nIn mitmweb 11.1.0 and below, a malicious client can use mitmweb's proxy server to access mitmweb's internal API.\n\n**Weaknesses/vulnerabilities present:**\nSSRF (Server-Side Request Forgery) - style access to remote code execution.\n\n**Impact of exploitation:**\nAn attacker may be able to escalate SSRF-style access to remote code execution.\n\n**Attack vectors:**\nAn attacker needs to be in the same local network and utilize the proxy server to access the internal API.\n\n**Required attacker capabilities/position:**\nThe attacker needs to be in the same local network as the target.\n\n**Mitigation or fix:**\nThe vulnerability has been fixed in mitmproxy 11.1.2 and above. The `block_global` option, enabled by default, blocks connections originating from publicly-routable IP addresses in the proxy.\n\n**Additional details (more than official CVE description):**\n- The mitmproxy and mitmdump tools are unaffected, only mitmweb is affected.\n- The vulnerability was reported by Stefan Gr\u00f6nke (@gronke) as part of a security audit by Radically Open Security, supported by the NGI0 Entrust fund and NLnet.\n- Timeline of events is provided: report received (Jan 14, 2025), verified (Jan 14, 2025), patch shared (Jan 19, 2025), confirmation of patch (Feb 4, 2025), advisory published (Feb 5, 2025).\n- CVE ID: CVE-2025-23217\n- CWE IDs: CWE-288, CWE-441\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-918 | Server-Side Request Forgery (SSRF) | 1.0 | Base | Primary | Allowed |\n| CWE-201 | Insertion of Sensitive Information Into Sent Data | 0.7 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary relationship considered was the direct match of the vulnerability description to CWE-918, \"Server-Side Request Forgery (SSRF)\". CWE-201, \"Insertion of Sensitive Information Into Sent Data,\" was also considered as a secondary weakness because the API access might lead to the exposure of sensitive data. The abstraction levels were appropriate since both are Base level CWEs.\n\n```mermaid\ngraph TD\n    cwe918[\"CWE-918: Server-Side Request Forgery (SSRF)\"]\n    cwe201[\"CWE-201: Insertion of Sensitive Information Into Sent Data\"]\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe918 primary\n    class cwe201 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with a **SSRF** vulnerability (CWE-918), where a malicious client can use mitmweb's proxy server to access mitmweb's internal API. This access could potentially lead to the insertion of sensitive information into sent data (CWE-201), and escalate to remote code execution.\n\n## Summary of Analysis\n\nThe primary assessment is strongly based on the vulnerability description and the CVE Reference Links Content Summary, both explicitly mentioning \"SSRF.\"\n\nThe vulnerability description states: \"In mitmweb 11.1.1 and below, a malicious client can use mitmwebs proxy server (bound to `*8080` by default) to access mitmwebs internal API (bound to `127.0.0.18081` by default).\"\n\nThe CVE Reference Links Content Summary states: \"**Weaknesses/vulnerabilities present:** SSRF (Server-Side Request Forgery) - style access to remote code execution.\"\n\nGiven this clear evidence, CWE-918 is the most appropriate primary CWE.\n\nCWE-201 is considered as a secondary CWE because the **SSRF** vulnerability allows access to the internal API, which might involve the retrieval and insertion of sensitive data into responses.\n\nThe selected CWEs are at the optimal level of specificity as they directly address the root cause (**SSRF**) and a potential consequence (information exposure).\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-918: Server-Side Request Forgery (SSRF)\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-346: Origin Validation Error\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product does not properly verify that the source of data or communication is valid.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-294: Authentication Bypass by Capture-replay\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nA capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-923: Improper Restriction of Communication Channel to Intended Endpoints\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product establishes a communication channel to (or from) an endpoint for privileged or protected operations, but it does not properly ensure that it is communicating with the correct endpoint.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n\n\n## CWE-290: Authentication Bypass by Spoofing\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThis attack-focused weakness is caused by incorrectly implemented authentication schemes that are subject to spoofing attacks.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')\n**Abstraction Level**: Variant\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product receives data from an HTTP agent/component (e.g., web server, proxy, browser, etc.), but it does not neutralize or incorrectly neutralizes CR and LF characters before the data is included in outgoing HTTP headers.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-918: Server-Side Request Forgery (SSRF)\n**Abstraction Level**: Base\n**Similarity Score**: 896.37\n**Source**: sparse\n\n**Description**:\nThe web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\n**Abstraction Level**: Base\n**Similarity Score**: 858.31\n**Source**: sparse\n\n**Description**:\nThe product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly",
  "analysis_with_relationships": "# Summary\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-918 | Server-Side Request Forgery (SSRF) | 1.0 | Base | Primary | Allowed |\n| CWE-201 | Insertion of Sensitive Information Into Sent Data | 0.7 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary relationship considered was the direct match of the vulnerability description to CWE-918, \"Server-Side Request Forgery (SSRF)\". CWE-201, \"Insertion of Sensitive Information Into Sent Data,\" was also considered as a secondary weakness because the API access might lead to the exposure of sensitive data. The abstraction levels were appropriate since both are Base level CWEs.\n\n```mermaid\ngraph TD\n    cwe918[\"CWE-918: Server-Side Request Forgery (SSRF)\"]\n    cwe201[\"CWE-201: Insertion of Sensitive Information Into Sent Data\"]\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe918 primary\n    class cwe201 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with a **SSRF** vulnerability (CWE-918), where a malicious client can use mitmweb's proxy server to access mitmweb's internal API. This access could potentially lead to the insertion of sensitive information into sent data (CWE-201), and escalate to remote code execution.\n\n## Summary of Analysis\n\nThe primary assessment is strongly based on the vulnerability description and the CVE Reference Links Content Summary, both explicitly mentioning \"SSRF.\"\n\nThe vulnerability description states: \"In mitmweb 11.1.1 and below, a malicious client can use mitmwebs proxy server (bound to `*8080` by default) to access mitmwebs internal API (bound to `127.0.0.18081` by default).\"\n\nThe CVE Reference Links Content Summary states: \"**Weaknesses/vulnerabilities present:** SSRF (Server-Side Request Forgery) - style access to remote code execution.\"\n\nGiven this clear evidence, CWE-918 is the most appropriate primary CWE.\n\nCWE-201 is considered as a secondary CWE because the **SSRF** vulnerability allows access to the internal API, which might involve the retrieval and insertion of sensitive data into responses.\n\nThe selected CWEs are at the optimal level of specificity as they directly address the root cause (**SSRF**) and a potential consequence (information exposure).\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-918: Server-Side Request Forgery (SSRF)\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-346: Origin Validation Error\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product does not properly verify that the source of data or communication is valid.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-294: Authentication Bypass by Capture-replay\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nA capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-923: Improper Restriction of Communication Channel to Intended Endpoints\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product establishes a communication channel to (or from) an endpoint for privileged or protected operations, but it does not properly ensure that it is communicating with the correct endpoint.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n\n\n## CWE-290: Authentication Bypass by Spoofing\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThis attack-focused weakness is caused by incorrectly implemented authentication schemes that are subject to spoofing attacks.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')\n**Abstraction Level**: Variant\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product receives data from an HTTP agent/component (e.g., web server, proxy, browser, etc.), but it does not neutralize or incorrectly neutralizes CR and LF characters before the data is included in outgoing HTTP headers.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-918: Server-Side Request Forgery (SSRF)\n**Abstraction Level**: Base\n**Similarity Score**: 896.37\n**Source**: sparse\n\n**Description**:\nThe web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\n**Abstraction Level**: Base\n**Similarity Score**: 858.31\n**Source**: sparse\n\n**Description**:\nThe product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-290:**\n- 290 (Authentication Bypass by Spoofing) - ROOT\n\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "918",
        "name": "Server-Side Request Forgery (SSRF)",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: SSRF",
        "match_reason": "exact_match_whole_phrase"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 648.6024527962135
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 635.9277100655611
    },
    {
      "metadata": {
        "doc_id": "287",
        "name": "Improper Authentication",
        "source": "sparse"
      },
      "similarity": 615.9948967911454
    },
    {
      "metadata": {
        "doc_id": "923",
        "name": "Improper Restriction of Communication Channel to Intended Endpoints",
        "source": "sparse"
      },
      "similarity": 610.6152551110384
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 604.2366733808379
    },
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "sparse"
      },
      "similarity": 601.7380085407538
    },
    {
      "metadata": {
        "doc_id": "502",
        "name": "Deserialization of Untrusted Data",
        "source": "sparse"
      },
      "similarity": 600.9749063056674
    },
    {
      "metadata": {
        "doc_id": "441",
        "name": "Unintended Proxy or Intermediary ('Confused Deputy')",
        "type": "Class",
        "original_content": "The product receives a request, message, or directive from an upstream component, but the product does not sufficiently preserve the original source of the request before forwarding the request to an external actor that is outside of the product's control sphere. This causes the product to appear to be the source of the request, leading it to act as a proxy or other intermediary between the upstream component and the external actor.",
        "keyphrase_source": "weakness:SSRF",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5285980806307224,
            "graph": 1.5565316783815888
          }
        }
      },
      "similarity": 0.5285980806307224
    },
    {
      "doc_id": "322",
      "text": "CWE-322: Key Exchange without Entity Authentication",
      "score": 2.73416,
      "metadata": {
        "doc_id": "322",
        "name": "Key Exchange without Entity Authentication",
        "type": "base",
        "original_content": "CWE-322: Key Exchange without Entity Authentication",
        "relationships": [
          {
            "source_id": "322",
            "target_id": "295",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "322",
            "target_id": "923",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "322",
            "target_id": "306",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "923",
            "target_id": "322",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "306",
            "target_id": "322",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "295",
            "target_id": "322",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.5760000000000002,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "923",
                  "322",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "923"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "287",
                  "306",
                  "PARENTOF"
                ],
                [
                  "306",
                  "322",
                  "PARENTOF"
                ]
              ],
              "score": 0.5760000000000002,
              "type": "abstraction_path_down",
              "source": "287"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "923",
                  "322",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "923"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "322",
                  "923",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "923"
            }
          }
        },
        "abstraction_level": "base",
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.73416
          }
        }
      },
      "similarity": 2.73416
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-290",
      "CWE-116",
      "CWE-346",
      "CWE-22",
      "CWE-201",
      "CWE-923",
      "CWE-113",
      "CWE-294",
      "CWE-303",
      "CWE-74",
      "CWE-918",
      "CWE-212"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}