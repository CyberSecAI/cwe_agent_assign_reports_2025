{
  "query": "In the Linux kernel, the following vulnerability has been resolved drm/v3d Add job to pending list if the reset was skipped When a CL/CSD job times out, we check if the GPU has made any progress since the last timeout. If so, instead of resetting the hardware, we skip the reset and let the timer get rearmed. This gives long-running jobs a chance to complete. However, when `timedout_job()` is called, the job in question is removed from the pending list, which means it wont be automatically freed through `free_job()`. Consequently, when we skip the reset and keep the job running, the job wont be freed when it finally completes. This situation leads to a memory leak, as exposed in [1] and [2]. Similarly to commit 704d3d60fec4 (drm/etnaviv dont block scheduler when GPU is still active), this patch ensures the job is put back on the pending list when extending the timeout.",
  "count": 20,
  "results": [
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "abstraction": "Class",
      "score": 0.4437578254180027,
      "original_score": 0.4437578254180027,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 0.42684736381969907,
      "original_score": 0.42684736381969907,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "abstraction": "Class",
      "score": 0.4221092192541751,
      "original_score": 0.4221092192541751,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "abstraction": "Variant",
      "score": 0.4168738806834522,
      "original_score": 0.4168738806834522,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "abstraction": "Base",
      "score": 0.41579225179117435,
      "original_score": 0.41579225179117435,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "abstraction": "Base",
      "score": 0.4133867440631619,
      "original_score": 0.4133867440631619,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "abstraction": "Base",
      "score": 0.412086964027256,
      "original_score": 0.412086964027256,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "775",
      "name": "Missing Release of File Descriptor or Handle after Effective Lifetime",
      "abstraction": "Variant",
      "score": 0.4115993501347579,
      "original_score": 0.4115993501347579,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "226",
      "name": "Sensitive Information in Resource Not Removed Before Reuse",
      "abstraction": "Base",
      "score": 0.4103126741197374,
      "original_score": 0.4103126741197374,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "366",
      "name": "Race Condition within a Thread",
      "abstraction": "Base",
      "score": 0.4080133959508686,
      "original_score": 0.4080133959508686,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "413",
      "name": "Improper Resource Locking",
      "abstraction": "Base",
      "score": 0.38838099409129423,
      "original_score": 0.38838099409129423,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "abstraction": "Variant",
      "score": 0.3881025061866476,
      "original_score": 0.3881025061866476,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 0.38740796677559414,
      "original_score": 0.38740796677559414,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "122",
      "name": "Heap-based Buffer Overflow",
      "abstraction": "Variant",
      "score": 0.3865357789996165,
      "original_score": 0.3865357789996165,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "abstraction": "Base",
      "score": 0.384575321836601,
      "original_score": 0.384575321836601,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "459",
      "name": "Incomplete Cleanup",
      "abstraction": "Base",
      "score": 0.3814252961591247,
      "original_score": 0.3814252961591247,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "abstraction": "Base",
      "score": 0.380058128384271,
      "original_score": 0.380058128384271,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "772",
      "name": "Missing Release of Resource after Effective Lifetime",
      "abstraction": "Base",
      "score": 0.37953748078957034,
      "original_score": 0.37953748078957034,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "119",
      "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
      "abstraction": "Class",
      "score": 0.37836821552858546,
      "original_score": 0.37836821552858546,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "126",
      "name": "Buffer Over-read",
      "abstraction": "Variant",
      "score": 0.3774751964753561,
      "original_score": 0.3774751964753561,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 0.3774751964753561,
    "max": 0.4437578254180027,
    "mean": 0.4006323277244473,
    "median": 0.3981971950210814,
    "count": 20
  }
}