{
  "cve_id": "CVE-2024-8247",
  "description": "The Newsletters plugin for WordPress is vulnerable to privilege escalation in all versions up to, and including, 4.9.9.2. This is due to the **plugin not restricting what user meta can be updated as screen options**. This makes it possible for authenticated attackers, with subscriber-level access and above, to escalate their privileges to that of an administrator. Please note that this only affects users with access to edit/update screen options, which means an administrator would need to grant lower privilege users with access to the Sent & Draft Emails page of the plugin in order for this to be exploited.",
  "key_phrases": {
    "rootcause": "plugin not restricting what user meta can be updated as screen options",
    "weakness": "",
    "impact": "privilege escalation",
    "vector": "",
    "attacker": "authenticated attackers with subscriber-level access and above",
    "product": "Newsletters plugin for WordPress",
    "version": "all versions up to and including 4.9.9.2",
    "component": "Sent & Draft Emails page"
  },
  "reference_content": "```json\n{\n  \"CVE-2024-8247\": {\n    \"vulnerability_details\": {\n      \"root_cause\": \"The Newsletters plugin for WordPress does not restrict what user meta can be updated as screen options.\",\n      \"weaknesses\": [\n        \"Improper Privilege Management\"\n      ],\n      \"impact\": \"Authenticated attackers, with subscriber-level access and above, can escalate their privileges to that of an administrator.\",\n      \"attack_vectors\": [\n        \"Network access\"\n      ],\n      \"required_capabilities\": \"An authenticated attacker with subscriber-level access and above, who has access to edit/update screen options. This access requires an administrator to grant lower privilege users access to the Sent & Draft Emails page of the plugin.\"\n    },\n    \"additional_details\": \"The Wordfence content provides more detail than the CVE description regarding the attack vector and the specific plugin functionality that is vulnerable to exploitation. It also clarifies that an administrator must grant lower-level users with access to the Sent & Draft Emails page for the vulnerability to be exploitable. The referenced code snippets also help understand the context of the vulnerability.\"\n  }\n}\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID  | CWE Name                                                                 | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :----------------------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-266 | Incorrect Privilege Assignment                                           | 0.95       | Base                  | Primary                         | Allowed                       |\n| CWE-863 | Incorrect Authorization                                                  | 0.75      | Class                 | Secondary                       | Allowed-with-Review           |\n| CWE-285 | Improper Authorization                                                 | 0.65       | Class                 | Secondary                       | Discouraged                   |\n| CWE-862 | Missing Authorization                                                  | 0.60       | Class                 | Secondary                       | Allowed-with-Review           |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-266, which is a Base level CWE. The other CWEs (CWE-863, CWE-285, CWE-862) are Class level CWEs. These are related to authorization issues, but the root cause is an incorrect privilege assignment. CWE-266 is the most specific and accurate representation of the vulnerability. The guidance specifically suggests CWE-266 for scenarios where a user is assigned the wrong role due to misconfiguration.\n\n```mermaid\ngraph TD\n    cwe266[\"CWE-266: Incorrect Privilege Assignment\"]\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe285[\"CWE-285: Improper Authorization\"]\n    cwe862[\"CWE-862: Missing Authorization\"]\n    cwe284[\"CWE-284: Improper Access Control\"]\n    cwe269[\"CWE-269: Improper Privilege Management\"]\n\n    cwe266 -->|PEEROF| cwe863\n    cwe266 -->|PEEROF| cwe285\n    cwe266 -->|PEEROF| cwe862\n    cwe863 -->|CHILDOF| cwe284\n    cwe285 -->|CHILDOF| cwe284\n    cwe266 -->|CHILDOF| cwe269\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe266 primary\n    class cwe863,cwe285,cwe862 secondary\n    class cwe284,cwe269 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **plugin not restricting what user meta can be updated as screen options** (CWE-266). This leads to an attacker being able to modify their user meta to escalate their privileges (CWE-863 or CWE-285), ultimately resulting in privilege escalation and unauthorized access to sensitive functionality.\n\n## Summary of Analysis\nThe analysis indicates that the primary weakness is **CWE-266 (Incorrect Privilege Assignment)** because the **plugin is not restricting what user meta can be updated as screen options**. This allows authenticated attackers to escalate their privileges. The evidence for this comes directly from the \"Vulnerability Description Key Phrases\" section, which identifies the **rootcause** as \"**plugin not restricting what user meta can be updated as screen options**.\" The \"CVE Reference Links Content Summary\" also supports this, stating, \"The Newsletters plugin for WordPress does not restrict what user meta can be updated as screen options.\"\n\nThe mapping guidance for privileges vs. permissions clearly states that if a user is assigned the wrong role due to misconfiguration, **CWE-266** is the appropriate choice.\n\nThe other CWEs considered (CWE-863, CWE-285, CWE-862) are related to authorization but are more general. While an attacker is performing actions they are not authorized to do (CWE-863 or CWE-285), the underlying issue is the incorrect privilege assignment.\n\nCWE-862 (Missing Authorization) could also be considered, but since the plugin is performing some level of authorization (albeit incorrectly due to the incorrect privilege assignment), CWE-266 is a better fit.\n\nThe selected CWEs are at the optimal level of specificity because **CWE-266** directly addresses the root cause, and the other options describe authorization issues that are a result of the incorrect privilege assignment.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-266: Incorrect Privilege Assignment\n**Abstraction Level**: Base\n**Similarity Score**: 0.80\n**Source**: dense\n\n**Description**:\nA product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-863: Incorrect Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 1794.58\n**Source**: sparse\n\n**Description**:\nThe product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-285: Improper Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 1729.16\n**Source**: sparse\n\n**Description**:\nThe product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-285 is high-level and lower-level CWEs can frequently be used instead. It is a level-1 Class (i.e., a child of a Pillar).\n\n## CWE-862: Missing Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 1667.19\n**Source**: sparse\n\n**Description**:\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate",
  "analysis_with_relationships": "# Summary\n| CWE ID  | CWE Name                                                                 | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :----------------------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-266 | Incorrect Privilege Assignment                                           | 0.95       | Base                  | Primary                         | Allowed                       |\n| CWE-863 | Incorrect Authorization                                                  | 0.75      | Class                 | Secondary                       | Allowed-with-Review           |\n| CWE-285 | Improper Authorization                                                 | 0.65       | Class                 | Secondary                       | Discouraged                   |\n| CWE-862 | Missing Authorization                                                  | 0.60       | Class                 | Secondary                       | Allowed-with-Review           |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-266, which is a Base level CWE. The other CWEs (CWE-863, CWE-285, CWE-862) are Class level CWEs. These are related to authorization issues, but the root cause is an incorrect privilege assignment. CWE-266 is the most specific and accurate representation of the vulnerability. The guidance specifically suggests CWE-266 for scenarios where a user is assigned the wrong role due to misconfiguration.\n\n```mermaid\ngraph TD\n    cwe266[\"CWE-266: Incorrect Privilege Assignment\"]\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe285[\"CWE-285: Improper Authorization\"]\n    cwe862[\"CWE-862: Missing Authorization\"]\n    cwe284[\"CWE-284: Improper Access Control\"]\n    cwe269[\"CWE-269: Improper Privilege Management\"]\n\n    cwe266 -->|PEEROF| cwe863\n    cwe266 -->|PEEROF| cwe285\n    cwe266 -->|PEEROF| cwe862\n    cwe863 -->|CHILDOF| cwe284\n    cwe285 -->|CHILDOF| cwe284\n    cwe266 -->|CHILDOF| cwe269\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe266 primary\n    class cwe863,cwe285,cwe862 secondary\n    class cwe284,cwe269 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **plugin not restricting what user meta can be updated as screen options** (CWE-266). This leads to an attacker being able to modify their user meta to escalate their privileges (CWE-863 or CWE-285), ultimately resulting in privilege escalation and unauthorized access to sensitive functionality.\n\n## Summary of Analysis\nThe analysis indicates that the primary weakness is **CWE-266 (Incorrect Privilege Assignment)** because the **plugin is not restricting what user meta can be updated as screen options**. This allows authenticated attackers to escalate their privileges. The evidence for this comes directly from the \"Vulnerability Description Key Phrases\" section, which identifies the **rootcause** as \"**plugin not restricting what user meta can be updated as screen options**.\" The \"CVE Reference Links Content Summary\" also supports this, stating, \"The Newsletters plugin for WordPress does not restrict what user meta can be updated as screen options.\"\n\nThe mapping guidance for privileges vs. permissions clearly states that if a user is assigned the wrong role due to misconfiguration, **CWE-266** is the appropriate choice.\n\nThe other CWEs considered (CWE-863, CWE-285, CWE-862) are related to authorization but are more general. While an attacker is performing actions they are not authorized to do (CWE-863 or CWE-285), the underlying issue is the incorrect privilege assignment.\n\nCWE-862 (Missing Authorization) could also be considered, but since the plugin is performing some level of authorization (albeit incorrectly due to the incorrect privilege assignment), CWE-266 is a better fit.\n\nThe selected CWEs are at the optimal level of specificity because **CWE-266** directly addresses the root cause, and the other options describe authorization issues that are a result of the incorrect privilege assignment.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-266: Incorrect Privilege Assignment\n**Abstraction Level**: Base\n**Similarity Score**: 0.80\n**Source**: dense\n\n**Description**:\nA product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-863: Incorrect Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 1794.58\n**Source**: sparse\n\n**Description**:\nThe product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-285: Improper Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 1729.16\n**Source**: sparse\n\n**Description**:\nThe product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-285 is high-level and lower-level CWEs can frequently be used instead. It is a level-1 Class (i.e., a child of a Pillar).\n\n## CWE-862: Missing Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 1667.19\n**Source**: sparse\n\n**Description**:\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-862:**\n- 862 (Missing Authorization) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 763.8780891616868
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 753.8785952034111
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 736.7763164718551
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 724.6913886165393
    },
    {
      "metadata": {
        "doc_id": "284",
        "name": "Improper Access Control",
        "source": "sparse"
      },
      "similarity": 719.7870027124666
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 719.0163339809457
    },
    {
      "metadata": {
        "doc_id": "266",
        "name": "Incorrect Privilege Assignment",
        "source": "sparse"
      },
      "similarity": 712.8687538867534
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 707.849422710839
    },
    {
      "metadata": {
        "doc_id": "472",
        "name": "External Control of Assumed-Immutable Web Parameter",
        "type": "Base",
        "original_content": "The web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.",
        "keyphrase_source": "rootcause:plugin not restricting what user meta can be updated as screen options",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5036812093673728,
            "graph": 2.0554860049909998
          }
        }
      },
      "similarity": 0.5036812093673728
    },
    {
      "doc_id": "1275",
      "text": "CWE-1275: Sensitive Cookie with Improper SameSite Attribute",
      "score": 2.5507200000000005,
      "metadata": {
        "doc_id": "1275",
        "name": "Sensitive Cookie with Improper SameSite Attribute",
        "type": "variant",
        "original_content": "CWE-1275: Sensitive Cookie with Improper SameSite Attribute",
        "relationships": [
          {
            "source_id": "1275",
            "target_id": "352",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1275",
            "target_id": "923",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "923",
            "target_id": "1275",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "352",
            "target_id": "1275",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.6080000000000001,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.2,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "352",
                  "1275",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "352"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "284",
                  "923",
                  "PARENTOF"
                ],
                [
                  "923",
                  "1275",
                  "PARENTOF"
                ]
              ],
              "score": 0.6080000000000001,
              "type": "abstraction_path_down",
              "source": "284"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "352",
                  "1275",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "352"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "1275",
                  "352",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "352"
            }
          }
        },
        "abstraction_level": "variant",
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.5507200000000005
          }
        }
      },
      "similarity": 2.5507200000000005
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-862",
      "CWE-269",
      "CWE-285",
      "CWE-284",
      "CWE-266"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}