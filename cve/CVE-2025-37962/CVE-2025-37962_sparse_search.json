{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved ksmbd fix memory leak in parse_lease_state() The previous patch that added bounds check for create lease context introduced a memory leak. When the bounds check fails, the function returns NULL without freeing the previously allocated lease_ctx_info structure. This patch fixes the issue by adding kfree(lreq) before returning NULL in both boundary check cases.",
  "keyphrases": {
    "rootcause": [
      "memory leak"
    ],
    "weakness": [
      "memory leak"
    ]
  },
  "timestamp": "2025-07-14 22:01:24",
  "cve_id": "CVE-2025-37962",
  "result_count": 10,
  "results": [
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "score": 1000.0,
      "search_source": "alternate_term_match"
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "score": 369.5325565873329,
      "search_source": "rootcause:memory leak"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 355.03400973358225,
      "search_source": "rootcause:memory leak"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "score": 353.71032136782895,
      "search_source": "rootcause:memory leak"
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "score": 344.55318623708916,
      "search_source": "rootcause:memory leak"
    },
    {
      "cwe_id": "787",
      "name": "Out-of-bounds Write",
      "score": 331.16702555175846,
      "search_source": "rootcause:memory leak"
    },
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "score": 324.75308865970675,
      "search_source": "rootcause:memory leak"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "score": 321.3266739948456,
      "search_source": "rootcause:memory leak"
    },
    {
      "cwe_id": "226",
      "name": "Sensitive Information in Resource Not Removed Before Reuse",
      "score": 318.9634153664947,
      "search_source": "rootcause:memory leak"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 317.2919285809473,
      "search_source": "rootcause:memory leak"
    }
  ]
}