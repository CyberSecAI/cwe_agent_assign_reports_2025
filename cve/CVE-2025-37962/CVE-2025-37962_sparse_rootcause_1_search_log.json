{
  "method": "sparse_rootcause_1",
  "query": "In the Linux kernel, the following vulnerability has been resolved ksmbd fix memory leak in parse_lease_state() The previous patch that added bounds check for create lease context introduced a memory leak. When the bounds check fails, the function returns NULL without freeing the previously allocated lease_ctx_info structure. This patch fixes the issue by adding kfree(lreq) before returning NULL in both boundary check cases.",
  "keyphrases": {
    "rootcause": "memory leak"
  },
  "timestamp": "2025-07-14T22:01:24.512001",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "125",
      "name": "Out-of-bounds Read",
      "score": 369.5325565873329
    },
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 355.03400973358225
    },
    {
      "doc_id": "667",
      "name": "Improper Locking",
      "score": 353.71032136782895
    },
    {
      "doc_id": "476",
      "name": "NULL Pointer Dereference",
      "score": 344.55318623708916
    },
    {
      "doc_id": "787",
      "name": "Out-of-bounds Write",
      "score": 331.16702555175846
    }
  ]
}