{
  "cve_id": "CVE-2025-5149",
  "description": "A vulnerability was found in WCMS up to 8.3.11. It has been declared as critical. Affected by this vulnerability is the function getMemberByUid of the file /index.php?articleadmin/getallcon of the component Login. The manipulation of the argument uid leads to **improper authentication**. The attack can be launched remotely. The complexity of an attack is rather high. The exploitation appears to be difficult. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.",
  "key_phrases": {
    "rootcause": "improper authentication",
    "weakness": "",
    "impact": "",
    "vector": "manipulation of the argument uid",
    "attacker": "",
    "product": "WCMS",
    "version": "up to 8.3.11",
    "component": "/index.php?articleadmin/getallcon function getMemberByUid"
  },
  "reference_content": "## Analysis of CVE Content\n\nThis content details a vulnerability in the WCMS project hosted on Gitee. Here's a breakdown of the information extracted:\n\n**Root cause of vulnerability:**\n\nThe vulnerability stems from insufficient authentication checks in the `AdminController` class. Specifically, the code relies on a cookie named `openid` to authenticate users. This `openid` is encrypted using a weak RC4 encryption scheme and then base64 encoded. The code decrypts this `openid`, extracts a user ID (UID) using a regular expression, and then retrieves user information from the database based on this UID.  Crucially, it only checks if the `groupid` of the retrieved user is equal to 1 (admin).\n\n**Weaknesses/vulnerabilities present:**\n\n*   **Authentication Bypass:** An attacker can bypass authentication by forging a valid `openid` cookie containing a manipulated UID.\n*   **Weak Encryption:** The use of RC4 encryption is considered weak and susceptible to attacks.\n*   **Insufficient Input Validation:** The code doesn't adequately validate the decrypted `openid` or the extracted UID, allowing for manipulation.\n*   **Cookie Manipulation:** The vulnerability is exploitable through cookie manipulation.\n\n**Impact of exploitation:**\n\nSuccessful exploitation allows an attacker to gain unauthorized access to administrative functionalities within the WCMS application.\n\n**Attack vectors:**\n\n1.  **Forge `openid` Cookie:** An attacker can craft a malicious `openid` cookie containing a UID corresponding to an administrator account.\n2.  **URL Encode:** The forged `openid` needs to be URL encoded before being used in the cookie.\n3.  **Send Request:** Send a request to the vulnerable endpoint (`/index.php?articleadmin/getallcon`) with the forged cookie.\n\n**Required attacker capabilities/position:**\n\n*   Knowledge of the application's authentication mechanism.\n*   Ability to manipulate HTTP cookies.\n*   Ability to decrypt RC4-encrypted strings (or obtain a valid UID).\n*   No specific network position is required; the attack can be launched remotely.\n\n**Mitigation or fix:**\n\nThe provided content does not explicitly state a fix. However, the following mitigations are recommended:\n\n*   **Stronger Authentication:** Implement a more robust authentication mechanism, such as multi-factor authentication.\n*   **Secure Encryption:** Replace RC4 with a modern, secure encryption algorithm (e.g., AES).\n*   **Input Validation:** Thoroughly validate all user inputs, including the decrypted `openid` and extracted UID.\n*   **Session Management:** Implement secure session management practices to prevent cookie manipulation.\n*   **Principle of Least Privilege:** Ensure that users only have the necessary permissions to perform their tasks.\n\n**Additional Notes:**\n\n*   The content provides more detail than a typical CVE description, including code snippets and a Python script for encryption/decryption.\n*   The provided Python script can be used to generate a valid `openid` cookie for a given UID.\n*   The vulnerability is present in the `/index.php?articleadmin/getallcon` endpoint.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID  | CWE Name                                                                         | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :------------------------------------------------------------------------------- | :--------- | :---------------------- | :------------------------------ | :-------------------------------- |\n| CWE-287 | Improper Authentication                                                        | 0.95       | Class                     | Primary                         | Discouraged                       |\n| CWE-306 | Missing Authentication for Critical Function                                   | 0.85       | Base                      | Secondary                       | Allowed                           |\n| CWE-639 | Authorization Bypass Through User-Controlled Key                               | 0.75       | Base                      | Secondary                       | Allowed                           |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-287, Improper Authentication, because the core issue revolves around the system failing to properly prove a user's claimed identity. However, due to weak encryption of the 'openid' cookie (RC4) and insufficient input validation, an attacker can forge a valid cookie and bypass authentication checks, suggesting CWE-306, Missing Authentication for Critical Function, as a contributing factor. Further, the ability to manipulate the key (UID) to access another user's data brings CWE-639, Authorization Bypass Through User-Controlled Key, into consideration. CWE-287 is a Class, while CWE-306 and CWE-639 are Base, providing more specific classifications. The relationship between these CWEs is complex, with CWE-287 being a higher-level category encompassing potential issues with authentication.\n\n```mermaid\ngraph TD\n    cwe287[\"CWE-287: Improper Authentication\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    cwe639[\"CWE-639: Authorization Bypass Through User-Controlled Key\"]\n\n    cwe306 -->|CHILDOF| cwe287\n    cwe639 -->|RELATED| cwe287\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe287 primary\n    class cwe306,cwe639 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain begins with the **weak encryption** of the `openid` cookie (RC4), compounded by **insufficient input validation** of the decrypted `openid` and the extracted UID. This allows for the **forging of a valid cookie** with a manipulated UID. Consequently, an attacker can **bypass authentication** and gain unauthorized access. The root cause is the **improper authentication**, as the system fails to adequately verify the user's identity.\n\n## Summary of Analysis\nThe initial assessment, based on the vulnerability description alone, pointed towards CWE-287 (Improper Authentication), driven by the key phrase \"**improper authentication**\". The CVE Reference Links Content Summary provides substantial evidence of the authentication bypass due to weak encryption and insufficient validation, reinforcing this choice. The retriever results list CWE-287 as a potential candidate, though it's a Class-level CWE. Considering the detailed context, CWE-306 (Missing Authentication for Critical Function) and CWE-639 (Authorization Bypass Through User-Controlled Key) are added as secondary CWEs to reflect more specific aspects of the vulnerability.\n\nThe selection of CWE-287 as the primary CWE is supported by the vulnerability description's focus on the failure to properly prove a user's identity. The addition of CWE-306 and CWE-639 provides a more complete picture, capturing the nuances of the bypass mechanism and the ability to manipulate user keys for unauthorized access. The decision to include these additional CWEs is based on the principle of specificity, aiming to provide a more granular representation of the vulnerability's root causes. The mitigations suggested in the CVE content, such as stronger authentication, secure encryption, and input validation, further support the selected CWEs.\n\nRelevant CWE Information:\n\n**CWE-287: Improper Authentication**\n*Technical Explanation:* The WCMS application does not properly prove that a user's claimed identity is correct. Specifically, it relies on a weakly encrypted cookie (`openid`) and insufficiently validates the extracted user ID (UID). An attacker can forge a valid cookie with a manipulated UID to bypass authentication.\n*Security Implications:* Unauthorized access to administrative functionalities.\n*Relationship Analysis:* A Class-level CWE, encompassing more specific authentication weaknesses.\n*Mapping Guidance Influence:* The initial vulnerability description pointed to **improper authentication**, making CWE-287 a natural fit.\n\n**CWE-306: Missing Authentication for Critical Function**\n*Technical Explanation:* The application is missing proper authentication checks for critical functions, allowing attackers to bypass authentication by forging 'openid' cookie.\n*Security Implications:* Allows attackers to bypass authentication mechanisms and access critical functionalities.\n*Relationship Analysis:* Child of CWE-287, providing more specific details on how the authentication is missing.\n*Mapping Guidance Influence:* Allowed usage.\n\n**CWE-639: Authorization Bypass Through User-Controlled Key**\n*Technical Explanation:* By manipulating the UID within the 'openid' cookie, an attacker can potentially access another user's data or record, bypassing authorization checks.\n*Security Implications:* Unauthorized access to sensitive data and functionalities associated with other users.\n*Relationship Analysis:* A base level CWE\n*Mapping Guidance Influence:* Allowed usage.\n\nCWEs Considered but Not Used:\nCWE-89 (SQL Injection), CWE-79 (Cross-Site Scripting), CWE-434 (Unrestricted Upload of File with Dangerous Type), and CWE-425 (Direct Request ('Forced Browsing')) were considered but ultimately deemed less relevant as they do not directly address the root cause of the authentication bypass. While input validation is a factor, the primary issue is the **improper authentication** and the reliance on a weak authentication mechanism.",
  "analysis_with_relationships": "# Summary\n| CWE ID  | CWE Name                                                                         | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :------------------------------------------------------------------------------- | :--------- | :---------------------- | :------------------------------ | :-------------------------------- |\n| CWE-287 | Improper Authentication                                                        | 0.95       | Class                     | Primary                         | Discouraged                       |\n| CWE-306 | Missing Authentication for Critical Function                                   | 0.85       | Base                      | Secondary                       | Allowed                           |\n| CWE-639 | Authorization Bypass Through User-Controlled Key                               | 0.75       | Base                      | Secondary                       | Allowed                           |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-287, Improper Authentication, because the core issue revolves around the system failing to properly prove a user's claimed identity. However, due to weak encryption of the 'openid' cookie (RC4) and insufficient input validation, an attacker can forge a valid cookie and bypass authentication checks, suggesting CWE-306, Missing Authentication for Critical Function, as a contributing factor. Further, the ability to manipulate the key (UID) to access another user's data brings CWE-639, Authorization Bypass Through User-Controlled Key, into consideration. CWE-287 is a Class, while CWE-306 and CWE-639 are Base, providing more specific classifications. The relationship between these CWEs is complex, with CWE-287 being a higher-level category encompassing potential issues with authentication.\n\n```mermaid\ngraph TD\n    cwe287[\"CWE-287: Improper Authentication\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    cwe639[\"CWE-639: Authorization Bypass Through User-Controlled Key\"]\n\n    cwe306 -->|CHILDOF| cwe287\n    cwe639 -->|RELATED| cwe287\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe287 primary\n    class cwe306,cwe639 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain begins with the **weak encryption** of the `openid` cookie (RC4), compounded by **insufficient input validation** of the decrypted `openid` and the extracted UID. This allows for the **forging of a valid cookie** with a manipulated UID. Consequently, an attacker can **bypass authentication** and gain unauthorized access. The root cause is the **improper authentication**, as the system fails to adequately verify the user's identity.\n\n## Summary of Analysis\nThe initial assessment, based on the vulnerability description alone, pointed towards CWE-287 (Improper Authentication), driven by the key phrase \"**improper authentication**\". The CVE Reference Links Content Summary provides substantial evidence of the authentication bypass due to weak encryption and insufficient validation, reinforcing this choice. The retriever results list CWE-287 as a potential candidate, though it's a Class-level CWE. Considering the detailed context, CWE-306 (Missing Authentication for Critical Function) and CWE-639 (Authorization Bypass Through User-Controlled Key) are added as secondary CWEs to reflect more specific aspects of the vulnerability.\n\nThe selection of CWE-287 as the primary CWE is supported by the vulnerability description's focus on the failure to properly prove a user's identity. The addition of CWE-306 and CWE-639 provides a more complete picture, capturing the nuances of the bypass mechanism and the ability to manipulate user keys for unauthorized access. The decision to include these additional CWEs is based on the principle of specificity, aiming to provide a more granular representation of the vulnerability's root causes. The mitigations suggested in the CVE content, such as stronger authentication, secure encryption, and input validation, further support the selected CWEs.\n\nRelevant CWE Information:\n\n**CWE-287: Improper Authentication**\n*Technical Explanation:* The WCMS application does not properly prove that a user's claimed identity is correct. Specifically, it relies on a weakly encrypted cookie (`openid`) and insufficiently validates the extracted user ID (UID). An attacker can forge a valid cookie with a manipulated UID to bypass authentication.\n*Security Implications:* Unauthorized access to administrative functionalities.\n*Relationship Analysis:* A Class-level CWE, encompassing more specific authentication weaknesses.\n*Mapping Guidance Influence:* The initial vulnerability description pointed to **improper authentication**, making CWE-287 a natural fit.\n\n**CWE-306: Missing Authentication for Critical Function**\n*Technical Explanation:* The application is missing proper authentication checks for critical functions, allowing attackers to bypass authentication by forging 'openid' cookie.\n*Security Implications:* Allows attackers to bypass authentication mechanisms and access critical functionalities.\n*Relationship Analysis:* Child of CWE-287, providing more specific details on how the authentication is missing.\n*Mapping Guidance Influence:* Allowed usage.\n\n**CWE-639: Authorization Bypass Through User-Controlled Key**\n*Technical Explanation:* By manipulating the UID within the 'openid' cookie, an attacker can potentially access another user's data or record, bypassing authorization checks.\n*Security Implications:* Unauthorized access to sensitive data and functionalities associated with other users.\n*Relationship Analysis:* A base level CWE\n*Mapping Guidance Influence:* Allowed usage.\n\nCWEs Considered but Not Used:\nCWE-89 (SQL Injection), CWE-79 (Cross-Site Scripting), CWE-434 (Unrestricted Upload of File with Dangerous Type), and CWE-425 (Direct Request ('Forced Browsing')) were considered but ultimately deemed less relevant as they do not directly address the root cause of the authentication bypass. While input validation is a factor, the primary issue is the **improper authentication** and the reliance on a weak authentication mechanism.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n**Chain starting from CWE-639:**\n- 639 (Authorization Bypass Through User-Controlled Key) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 643.5412376855408
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 616.3773111205312
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 546.6713988028429
    },
    {
      "metadata": {
        "doc_id": "287",
        "name": "Improper Authentication",
        "source": "sparse"
      },
      "similarity": 537.0204163322006
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 531.1104773441956
    },
    {
      "metadata": {
        "doc_id": "927",
        "name": "Use of Implicit Intent for Sensitive Communication",
        "source": "sparse"
      },
      "similarity": 526.9249327322054
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse"
      },
      "similarity": 526.7644465506309
    },
    {
      "metadata": {
        "doc_id": "1336",
        "name": "Improper Neutralization of Special Elements Used in a Template Engine",
        "source": "sparse"
      },
      "similarity": 520.8166205284259
    },
    {
      "metadata": {
        "doc_id": "425",
        "name": "Direct Request ('Forced Browsing')",
        "type": "Base",
        "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.6074323200566776,
            "graph": 2.45024440459881
          }
        }
      },
      "similarity": 0.6074323200566776
    },
    {
      "doc_id": "471",
      "text": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
      "score": 2.7196000000000002,
      "metadata": {
        "doc_id": "471",
        "name": "Modification of Assumed-Immutable Data (MAID)",
        "type": "base",
        "original_content": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
        "relationships": [
          {
            "source_id": "471",
            "target_id": "621",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "607",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "602",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "473",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "472",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "291",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "1321",
            "label": "CANFOLLOW",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "1282",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "664",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "664",
            "target_id": "471",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "621",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "607",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "602",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "473",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "472",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "291",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1321",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1282",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.5599999999999999,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_up",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "425",
                  "471",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "425"
            },
            "abstraction_path_up": {
              "path": [
                [
                  "472",
                  "471",
                  "CHILDOF"
                ]
              ],
              "score": 0.5599999999999999,
              "type": "abstraction_path_up",
              "source": "472"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "425",
                  "471",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "425"
            }
          }
        },
        "abstraction_level": "base",
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.7196000000000002
          }
        }
      },
      "similarity": 2.7196000000000002
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-639",
      "CWE-306",
      "CWE-79",
      "CWE-287",
      "CWE-425",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}