{
  "method": "sparse_base",
  "query": "A vulnerability has been identified in the Express response.links function, allowing for arbitrary resource injection in the Link header when unsanitized data is used. The issue arises from improper sanitization in `Link` header values, which can allow a combination of characters like `,`, ``, and `<>` to preload malicious resources. This vulnerability is especially relevant for dynamic parameters.",
  "keyphrases": {
    "base_query": "A vulnerability has been identified in the Express response.links function, allowing for arbitrary resource injection in the Link header when unsanitized data is used. The issue arises from improper sanitization in `Link` header values, which can allow a combination of characters like `,`, ``, and `<>` to preload malicious resources. This vulnerability is especially relevant for dynamic parameters."
  },
  "timestamp": "2025-07-13T00:12:52.688739",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "138",
      "name": "Improper Neutralization of Special Elements",
      "score": 110.73569825015329
    },
    {
      "doc_id": "113",
      "name": "Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')",
      "score": 109.93207191229638
    },
    {
      "doc_id": "74",
      "name": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
      "score": 105.72224697683431
    },
    {
      "doc_id": "79",
      "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "score": 102.84252365182883
    },
    {
      "doc_id": "78",
      "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
      "score": 98.71404890167663
    }
  ]
}