{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved net_sched ets Fix double list add in class with netem as child qdisc As described in Gerrards report [1], there are use cases where a netem child qdisc will make the parent qdiscs enqueue callback reentrant. In the case of ets, there wont be a UAF, but the code will add the same classifier to the list twice, which will cause memory corruption. In addition to checking for qlen being zero, this patch checks whether the class was already added to the active_list (cl_is_active) before doing the addition to cater for the reentrant case. [1] https//lore.kernel.org/netdev/CAHcdcOm+03OD2j6R0=YHKqmy=VgJ8xEOKuP6c7mSgnp-TEJJbw@mail.gmail.com/",
  "keyphrases": {
    "weakness": [
      "memory corruption"
    ]
  },
  "timestamp": "2025-07-14 21:52:01",
  "cve_id": "CVE-2025-37914",
  "result_count": 13,
  "results": [
    {
      "cwe_id": "787",
      "name": "Out-of-bounds Write",
      "score": 1000.0,
      "search_source": "alternate_term_match"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 508.92150663786913,
      "search_source": "weakness:memory corruption"
    },
    {
      "cwe_id": "415",
      "name": "Double Free",
      "score": 499.07097057956884,
      "search_source": "weakness:memory corruption"
    },
    {
      "cwe_id": "364",
      "name": "Signal Handler Race Condition",
      "score": 480.52091876190224,
      "search_source": "weakness:memory corruption"
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "score": 480.1216115983173,
      "search_source": "weakness:memory corruption"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "score": 475.6050508054029,
      "search_source": "weakness:memory corruption"
    },
    {
      "cwe_id": "191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "score": 465.1843651776176,
      "search_source": "weakness:memory corruption"
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "score": 464.26857870413255,
      "search_source": "weakness:memory corruption"
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "score": 460.46662922777995,
      "search_source": "weakness:memory corruption"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "score": 457.82477328492035,
      "search_source": "weakness:memory corruption"
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "score": 457.1460149132119,
      "search_source": "weakness:memory corruption"
    },
    {
      "cwe_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "score": 160.1346238221485,
      "search_source": "base_query"
    },
    {
      "cwe_id": "79",
      "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "score": 159.82639773491854,
      "search_source": "base_query"
    }
  ]
}