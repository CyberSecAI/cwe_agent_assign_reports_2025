{
  "cve_id": "CVE-2025-30222",
  "description": "Shescape is a simple shell escape library for JavaScript. Versions 1.7.2 through 2.1.1 are vulnerable to potential environment variable exposure on Windows with CMD. This impact users of Shescape on Windows that explicitly configure `shell cmd.exe` or `shell true` using any of `quote`/`quoteAll`/`escape`/`escapeAll`. An attacker may be able to get read-only access to environment variables. This bug has been patched in v2.1.2. For those who are already using v2 of Shescape, no further changes are required. Those who are are using v1 of Shescape should follow the migration guide to upgrade to v2. There is no plan to release a patch compatible with v1 of Shescape. As a workaround, users can remove all instances of `%` from user input before using Shescape.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "",
    "impact": "potential environment variable exposure",
    "vector": "",
    "attacker": "",
    "product": "Shescape",
    "version": "1.7.2 through 2.1.1",
    "component": ""
  },
  "reference_content": "```text\nRoot cause of vulnerability:\nThe vulnerability lies in the way Shescape, a library for escaping shell arguments, handles the escaping of the percent (%) character when used with `cmd.exe` on Windows. Specifically, the incorrect escaping of the % character allows for the exposure of environment variables.\n\nWeaknesses/vulnerabilities present:\n*   CWE-200: Information Exposure.\n*   Shescape incorrectly handles escaping of special characters (specifically %) in `cmd.exe`.\n\nImpact of exploitation:\nAn attacker can read-only access environment variables by injecting a crafted payload containing % characters. This could lead to information disclosure.\n\nAttack vectors:\nThe attack vector is injecting a payload containing \"%\" characters into the `shescape.quote()`, `shescape.quoteAll()`, `shescape.escape()`, or `shescape.escapeAll()` functions when the shell is configured as `'cmd.exe'` or `true` and the user input is passed to `cp.execSync`.\n\nRequired attacker capabilities/position:\nThe attacker needs to be able to inject malicious input into the `shescape` functions, specifically including percent signs.\n\nMitigation or fix:\nThe vulnerability is patched in version 2.1.2 of Shescape. Users should upgrade to this version. Alternatively, users can remove all instances of the percent (%) character from user input before using Shescape.\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-200 | Information Exposure [CWE-200: Information Exposure] | 0.9 | Class | Allowed | Primary CWE: The vulnerability results in the exposure of environment variables, directly aligning with the characteristics of Information Exposure. |\n| CWE-150 | Improper Neutralization of Escape, Meta, or Control Sequences [CWE-150: Improper Neutralization of Escape, Meta, or Control Sequences] | 0.7 | Variant | Allowed | Secondary Candidate: The **incorrect escaping** of the percent character is a form of **improper neutralization** of a special element. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary relationship is that CWE-150 is a potential cause for CWE-200. The **improper neutralization** can lead to the **exposure of sensitive information**.\n\n```mermaid\ngraph TD\n    cwe200[\"CWE-200: Information Exposure\"]\n    cwe150[\"CWE-150: Improper Neutralization of Escape, Meta, or Control Sequences\"]\n    \n    cwe200 <--|CAUSES| cwe150\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe200 primary\n    class cwe150 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with the **improper neutralization** of the percent character (CWE-150), leading to the **exposure of environment variables** (CWE-200).\n\n## Summary of Analysis\n\nThe primary weakness is **information exposure** (CWE-200) because the vulnerability allows an attacker to read environment variables. The root cause is the **incorrect escaping** of the percent character, which can be mapped to **improper neutralization** (CWE-150).\n\nThe decision to select CWE-200 as the primary weakness is based on the CVE Reference Links Content Summary, which lists CWE-200 as a present vulnerability. The vulnerability description also states that the impact is potential environment variable exposure, which directly aligns with the definition of CWE-200.\n\nCWE-150 is included as a secondary candidate because the root cause of the **information exposure** is the **improper handling** of the percent character when escaping shell arguments. The **incorrect escaping** can be considered as a form of **improper neutralization** of a special element (%).\n\nRelevant CWE Information:\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-150: Improper Neutralization of Escape, Meta, or Control Sequences\n**Abstraction Level**: Variant\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\nCWE-79, CWE-93, CWE-116, CWE-117, CWE-138, CWE-156, CWE-178, CWE-184, CWE-212, CWE-497, CWE-498, CWE-499, CWE-863, CWE-88, CWE-942, CWE-1333, and CWE-226 were considered but not used because they did not accurately describe the root cause or impact of the vulnerability. The primary impact is **information exposure**, and the root cause is the **improper escaping** of the percent character, making CWE-200 and CWE-150 the most appropriate mappings.",
  "analysis_with_relationships": "# Summary\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-200 | Information Exposure [CWE-200: Information Exposure] | 0.9 | Class | Allowed | Primary CWE: The vulnerability results in the exposure of environment variables, directly aligning with the characteristics of Information Exposure. |\n| CWE-150 | Improper Neutralization of Escape, Meta, or Control Sequences [CWE-150: Improper Neutralization of Escape, Meta, or Control Sequences] | 0.7 | Variant | Allowed | Secondary Candidate: The **incorrect escaping** of the percent character is a form of **improper neutralization** of a special element. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary relationship is that CWE-150 is a potential cause for CWE-200. The **improper neutralization** can lead to the **exposure of sensitive information**.\n\n```mermaid\ngraph TD\n    cwe200[\"CWE-200: Information Exposure\"]\n    cwe150[\"CWE-150: Improper Neutralization of Escape, Meta, or Control Sequences\"]\n    \n    cwe200 <--|CAUSES| cwe150\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe200 primary\n    class cwe150 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with the **improper neutralization** of the percent character (CWE-150), leading to the **exposure of environment variables** (CWE-200).\n\n## Summary of Analysis\n\nThe primary weakness is **information exposure** (CWE-200) because the vulnerability allows an attacker to read environment variables. The root cause is the **incorrect escaping** of the percent character, which can be mapped to **improper neutralization** (CWE-150).\n\nThe decision to select CWE-200 as the primary weakness is based on the CVE Reference Links Content Summary, which lists CWE-200 as a present vulnerability. The vulnerability description also states that the impact is potential environment variable exposure, which directly aligns with the definition of CWE-200.\n\nCWE-150 is included as a secondary candidate because the root cause of the **information exposure** is the **improper handling** of the percent character when escaping shell arguments. The **incorrect escaping** can be considered as a form of **improper neutralization** of a special element (%).\n\nRelevant CWE Information:\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-150: Improper Neutralization of Escape, Meta, or Control Sequences\n**Abstraction Level**: Variant\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\nCWE-79, CWE-93, CWE-116, CWE-117, CWE-138, CWE-156, CWE-178, CWE-184, CWE-212, CWE-497, CWE-498, CWE-499, CWE-863, CWE-88, CWE-942, CWE-1333, and CWE-226 were considered but not used because they did not accurately describe the root cause or impact of the vulnerability. The primary impact is **information exposure**, and the root cause is the **improper escaping** of the percent character, making CWE-200 and CWE-150 the most appropriate mappings.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-499:**\n- 499 (Serializable Class Containing Sensitive Data) - ROOT\n\n\n**Chain starting from CWE-93:**\n- 93 (Improper Neutralization of CRLF Sequences ('CRLF Injection')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "156",
        "name": "Improper Neutralization of Whitespace",
        "source": "sparse"
      },
      "similarity": 283.2770507920954
    },
    {
      "metadata": {
        "doc_id": "93",
        "name": "Improper Neutralization of CRLF Sequences ('CRLF Injection')",
        "source": "sparse"
      },
      "similarity": 250.5136296808285
    },
    {
      "metadata": {
        "doc_id": "1333",
        "name": "Inefficient Regular Expression Complexity",
        "source": "sparse"
      },
      "similarity": 247.594975277943
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 235.48978831442582
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 229.58499300242977
    },
    {
      "metadata": {
        "doc_id": "184",
        "name": "Incomplete List of Disallowed Inputs",
        "source": "sparse"
      },
      "similarity": 224.2590204833257
    },
    {
      "metadata": {
        "doc_id": "668",
        "name": "Exposure of Resource to Wrong Sphere",
        "source": "sparse"
      },
      "similarity": 224.09589681762043
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 221.1522500032448
    },
    {
      "metadata": {
        "doc_id": "150",
        "name": "Improper Neutralization of Escape, Meta, or Control Sequences",
        "type": "Variant",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream component.",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5009490389371387,
            "graph": 1.0593002829695335
          }
        }
      },
      "similarity": 0.5009490389371387
    },
    {
      "doc_id": "117",
      "text": "CWE-117: Improper Output Neutralization for Logs",
      "score": 2.8651999999999997,
      "metadata": {
        "doc_id": "117",
        "name": "Improper Output Neutralization for Logs",
        "type": "base",
        "original_content": "CWE-117: Improper Output Neutralization for Logs",
        "relationships": [
          {
            "source_id": "117",
            "target_id": "93",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "117",
            "target_id": "20",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "700"
            }
          },
          {
            "source_id": "117",
            "target_id": "116",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "93",
            "target_id": "117",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "20",
            "target_id": "117",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "700"
            }
          },
          {
            "source_id": "116",
            "target_id": "117",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.7200000000000001,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "93",
                  "117",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "93"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "116",
                  "117",
                  "PARENTOF"
                ]
              ],
              "score": 0.7200000000000001,
              "type": "abstraction_path_down",
              "source": "116"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "93",
                  "117",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "93"
            }
          }
        },
        "abstraction_level": "base",
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.8651999999999997
          }
        }
      },
      "similarity": 2.8651999999999997
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-499",
      "CWE-93",
      "CWE-226",
      "CWE-79",
      "CWE-117",
      "CWE-184",
      "CWE-498",
      "CWE-863",
      "CWE-88",
      "CWE-150",
      "CWE-178",
      "CWE-138",
      "CWE-212",
      "CWE-116",
      "CWE-156",
      "CWE-942",
      "CWE-200",
      "CWE-497",
      "CWE-1333"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}