{
  "cve_id": "CVE-2025-1095",
  "description": "IBM Personal Communications v14 and v15 include a Windows service that is vulnerable to local privilege escalation (LPE). The vulnerability allows any interactively logged in users on the target computer to run commands with full privileges in the context of NT AUTHORITY\\\\SYSTEM. This allows for a low privileged attacker to escalate their privileges. This vulnerability is due to an **incomplete fix for CVE-2024-25029**.",
  "key_phrases": {
    "rootcause": "incomplete fix for CVE-2024-25029",
    "weakness": "",
    "impact": "local privilege escalation",
    "vector": "",
    "attacker": "",
    "product": "IBM Personal Communications",
    "version": "v14 and v15",
    "component": "Windows service"
  },
  "reference_content": "## Analysis of CVE-2025-1095 Content\n\nThis content **relates** to CVE-2025-1095. It provides details beyond the placeholder description.\n\n**Root cause of vulnerability:**\n\nThe vulnerability is found in Personal Communications through the deployment of an arbitrary MSI package. The root cause isn't explicitly stated, but it implies a weakness in how Personal Communications handles MSI package deployment.\n\n**Weaknesses/vulnerabilities present:**\n\n*   Vulnerability in Personal Communications related to MSI package deployment.\n\n**Impact of exploitation:**\n\nThe impact of exploitation is not detailed in this bulletin.\n\n**Attack vectors:**\n\n*   Deployment of an arbitrary MSI package.\n\n**Required attacker capabilities/position:**\n\nThe required attacker capabilities and position are not detailed. It implies the attacker needs to be able to deploy an MSI package to a system running Personal Communications.\n\n**Mitigation or fix:**\n\n*   **v14.x:** Upgrade to the fix available at: <https://www.ibm.com/support/fixcentral/swg/selectFixes?parent=ibm%7ERational&product=ibm/Rational/IBM+Personal+Communications&release=14.0.7&platform=Windows&function=all> (PComm v1407\\_IFix)\n*   **v15.x:** Upgrade to the fix available at: <https://www.ibm.com/support/fixcentral/swg/selectFixes?parent=ibm%7ERational&product=ibm/Rational/IBM+Personal+Communications&release=15.0.3&platform=Windows&function=all> (PComm v1503\\_IFix)\n\n**Additional Information:**\n\n*   The vulnerability was reported by Jonas Vestberg, WithSecure AB.\n*   Affected products: PCOMM v14.x and v15.x\n*   Initial publication date: 08 Apr 2025\n*   No workarounds are available.\n*   CVSS information is available via links provided.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-266 | Incorrect Privilege Assignment | 0.85 | Base | Allowed | Primary CWE. The **root cause** is the **incorrect privilege assignment** to the service, allowing local users to escalate privileges. |\n| CWE-250 | Execution with Unnecessary Privileges | 0.75 | Base | Allowed | Secondary candidate. The service may be running with higher privileges than necessary, which amplifies the impact of the **incorrect privilege assignment**. |\n| CWE-269 | Improper Privilege Management | 0.65 | Class | Discouraged | Secondary candidate. More general than CWE-266, but reflects overall **improper handling of privileges**. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.80\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\n\nThe primary relationship is between CWE-266, CWE-250, and CWE-269. CWE-266 (Incorrect Privilege Assignment) is chosen as the primary because it directly addresses the **root cause** of the vulnerability where the service is granted excessive privileges. CWE-250 (Execution with Unnecessary Privileges) is a related weakness, where the service runs with higher privileges than required, amplifying the impact. CWE-269 (Improper Privilege Management) is a more general class that encompasses both.\n\n```mermaid\ngraph TD\n    cwe266[\"CWE-266: Incorrect Privilege Assignment\"]\n    cwe250[\"CWE-250: Execution with Unnecessary Privileges\"]\n    cwe269[\"CWE-269: Improper Privilege Management\"]\n    \n    cwe266 -->|CHILDOF| cwe269\n    cwe250 -->|CHILDOF| cwe269\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe266 primary\n    class cwe250 secondary\n    class cwe269 tertiary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with the **incorrect privilege assignment** (CWE-266) in the Windows service. This allows an attacker to execute code with elevated privileges (NT AUTHORITY\\SYSTEM), leading to local privilege escalation. The service potentially running with **unnecessary privileges** (CWE-250) exacerbates the issue.\n1.  **Incorrect Privilege Assignment (CWE-266):** The root cause. The service is assigned privileges it should not have.\n2.  **Execution with Unnecessary Privileges (CWE-250):** The service runs with elevated privileges, amplifying the impact.\n3.  **Local Privilege Escalation (Impact):** Attackers exploit the misconfigured service to gain system-level privileges.\n\n## Summary of Analysis\n\nThe initial analysis focused on the **incomplete fix** aspect, but the analysis of CVE-2025-1095 shows the weakness relates to how the Personal Communications handles MSI package deployment. The key evidence for the primary CWE is the vulnerability description stating that the vulnerability allows interactively logged-in users to run commands with full privileges, indicating an **incorrect privilege assignment**. The decision to choose CWE-266 is based on the fact that the **root cause** involves the product assigning incorrect privileges to an actor, as highlighted in the CWE description. CWE-250 is included because the service might be running with elevated privileges, which is unnecessary.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-266: Incorrect Privilege Assignment\n**Abstraction Level**: Base\n**Similarity Score**: 0.80\n**Source**: dense\n\n**Description**:\nA product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n## CWE-250: Execution with Unnecessary Privileges\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product performs an operation at a privilege level that is higher than the minimum level required, which creates new weaknesses or amplifies the consequences of other weaknesses.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\nThe retriever scores, vulnerability description, and the guidance on privileges vs. permissions all support this mapping. CWE-285 was considered, but it relates to improper authorization checks, which is not the **root cause** here. The issue is that the privileges were assigned incorrectly in the first place (CWE-266). CWE-863 was considered as a potential mapping since it relates to incorrect authorization. However, it's more appropriate when there's a flawed authorization check. In this case, the vulnerability stems from the initial incorrect assignment of privileges.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-266 | Incorrect Privilege Assignment | 0.85 | Base | Allowed | Primary CWE. The **root cause** is the **incorrect privilege assignment** to the service, allowing local users to escalate privileges. |\n| CWE-250 | Execution with Unnecessary Privileges | 0.75 | Base | Allowed | Secondary candidate. The service may be running with higher privileges than necessary, which amplifies the impact of the **incorrect privilege assignment**. |\n| CWE-269 | Improper Privilege Management | 0.65 | Class | Discouraged | Secondary candidate. More general than CWE-266, but reflects overall **improper handling of privileges**. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.80\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\n\nThe primary relationship is between CWE-266, CWE-250, and CWE-269. CWE-266 (Incorrect Privilege Assignment) is chosen as the primary because it directly addresses the **root cause** of the vulnerability where the service is granted excessive privileges. CWE-250 (Execution with Unnecessary Privileges) is a related weakness, where the service runs with higher privileges than required, amplifying the impact. CWE-269 (Improper Privilege Management) is a more general class that encompasses both.\n\n```mermaid\ngraph TD\n    cwe266[\"CWE-266: Incorrect Privilege Assignment\"]\n    cwe250[\"CWE-250: Execution with Unnecessary Privileges\"]\n    cwe269[\"CWE-269: Improper Privilege Management\"]\n    \n    cwe266 -->|CHILDOF| cwe269\n    cwe250 -->|CHILDOF| cwe269\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe266 primary\n    class cwe250 secondary\n    class cwe269 tertiary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with the **incorrect privilege assignment** (CWE-266) in the Windows service. This allows an attacker to execute code with elevated privileges (NT AUTHORITY\\SYSTEM), leading to local privilege escalation. The service potentially running with **unnecessary privileges** (CWE-250) exacerbates the issue.\n1.  **Incorrect Privilege Assignment (CWE-266):** The root cause. The service is assigned privileges it should not have.\n2.  **Execution with Unnecessary Privileges (CWE-250):** The service runs with elevated privileges, amplifying the impact.\n3.  **Local Privilege Escalation (Impact):** Attackers exploit the misconfigured service to gain system-level privileges.\n\n## Summary of Analysis\n\nThe initial analysis focused on the **incomplete fix** aspect, but the analysis of CVE-2025-1095 shows the weakness relates to how the Personal Communications handles MSI package deployment. The key evidence for the primary CWE is the vulnerability description stating that the vulnerability allows interactively logged-in users to run commands with full privileges, indicating an **incorrect privilege assignment**. The decision to choose CWE-266 is based on the fact that the **root cause** involves the product assigning incorrect privileges to an actor, as highlighted in the CWE description. CWE-250 is included because the service might be running with elevated privileges, which is unnecessary.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-266: Incorrect Privilege Assignment\n**Abstraction Level**: Base\n**Similarity Score**: 0.80\n**Source**: dense\n\n**Description**:\nA product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n## CWE-250: Execution with Unnecessary Privileges\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product performs an operation at a privilege level that is higher than the minimum level required, which creates new weaknesses or amplifies the consequences of other weaknesses.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\nThe retriever scores, vulnerability description, and the guidance on privileges vs. permissions all support this mapping. CWE-285 was considered, but it relates to improper authorization checks, which is not the **root cause** here. The issue is that the privileges were assigned incorrectly in the first place (CWE-266). CWE-863 was considered as a potential mapping since it relates to incorrect authorization. However, it's more appropriate when there's a flawed authorization check. In this case, the vulnerability stems from the initial incorrect assignment of privileges.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-269:**\n- 269 (Improper Privilege Management) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "250",
        "name": "Execution with Unnecessary Privileges",
        "source": "sparse"
      },
      "similarity": 452.23246506686814
    },
    {
      "metadata": {
        "doc_id": "276",
        "name": "Incorrect Default Permissions",
        "source": "sparse"
      },
      "similarity": 447.9458140883645
    },
    {
      "metadata": {
        "doc_id": "732",
        "name": "Incorrect Permission Assignment for Critical Resource",
        "source": "sparse"
      },
      "similarity": 444.54243104465695
    },
    {
      "metadata": {
        "doc_id": "269",
        "name": "Improper Privilege Management",
        "source": "sparse"
      },
      "similarity": 442.30775484767275
    },
    {
      "metadata": {
        "doc_id": "782",
        "name": "Exposed IOCTL with Insufficient Access Control",
        "source": "sparse"
      },
      "similarity": 416.6594858183133
    },
    {
      "metadata": {
        "doc_id": "59",
        "name": "Improper Link Resolution Before File Access ('Link Following')",
        "source": "sparse"
      },
      "similarity": 416.3642091536865
    },
    {
      "metadata": {
        "doc_id": "427",
        "name": "Uncontrolled Search Path Element",
        "source": "sparse"
      },
      "similarity": 408.0033746439111
    },
    {
      "metadata": {
        "doc_id": "20",
        "name": "Improper Input Validation",
        "source": "sparse"
      },
      "similarity": 399.50684929512386
    },
    {
      "metadata": {
        "doc_id": "1386",
        "name": "Insecure Operation on Windows Junction / Mount Point",
        "type": "Base",
        "original_content": "The product opens a file or directory, but it does not properly prevent the name from being associated with a junction or mount point to a destination that is outside of the intended control sphere.",
        "keyphrase_source": "rootcause:incomplete fix for CVE-2024-25029",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5710824223163957,
            "graph": 1.637294759678512
          }
        }
      },
      "similarity": 0.5710824223163957
    },
    {
      "doc_id": "781",
      "text": "CWE-781: Improper Address Validation in IOCTL with METHOD_NEITHER I/O Control Code",
      "score": 2.04,
      "metadata": {
        "doc_id": "781",
        "name": "Improper Address Validation in IOCTL with METHOD_NEITHER I/O Control Code",
        "type": "variant",
        "original_content": "CWE-781: Improper Address Validation in IOCTL with METHOD_NEITHER I/O Control Code",
        "relationships": [
          {
            "source_id": "781",
            "target_id": "782",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "781",
            "target_id": "822",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "781",
            "target_id": "1285",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "822",
            "target_id": "781",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "782",
            "target_id": "781",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1285",
            "target_id": "781",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.2,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "782",
                  "781",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "782"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "782",
                  "781",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "782"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.04
          }
        }
      },
      "similarity": 2.04
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-269",
      "CWE-285",
      "CWE-250",
      "CWE-266"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}