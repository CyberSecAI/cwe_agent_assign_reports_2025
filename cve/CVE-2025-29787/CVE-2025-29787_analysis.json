{
  "cve_id": "CVE-2025-29787",
  "description": "`zip` is a zip library for rust which supports reading and writing of simple ZIP files. In the archive extraction routine of affected versions of the `zip` crate starting with version 1.3.0 and prior to version 2.3.0, symbolic links earlier in the archive are allowed to be used for later files in the archive without validation of the final canonicalized path, allowing maliciously crafted archives to overwrite arbitrary files in the file system when extracted. Users who extract untrusted archive files using the following high-level API method may be affected and critical files on the system may be overwritten with arbitrary file permissions, which can potentially lead to code execution. Version 2.3.0 fixes the issue.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "symbolic link overwrite",
    "impact": "overwrite arbitrary files",
    "vector": "maliciously crafted archives",
    "attacker": "",
    "product": "zip crate",
    "version": "1.3.0 to 2.2.2",
    "component": "archive extraction routine"
  },
  "reference_content": "```\nCVE: CVE-2025-29787\n\nRoot cause of vulnerability:\nIn the archive extraction routine of affected versions of the `zip` crate, symbolic links earlier in the archive are allowed to be used for later files in the archive without validation of the final canonicalized path.\n\nWeaknesses/vulnerabilities present:\n- Zip-slip vulnerability (CVE-2018-1000170 variant)\n- Incorrect path canonicalization during archive extraction.\n- Allowing symbolic links to point outside the target directory.\n\nImpact of exploitation:\n- Arbitrary file write.\n- Critical files on the system may be overwritten with arbitrary file permissions.\n- Potential code execution.\n\nAttack vectors:\n- Maliciously crafted zip archives.\n- Exploitation through the `zip::unstable::stream::ZipStreamReader::extract` and `zip::read::ZipArchive::extract` APIs.\n\nRequired attacker capabilities/position:\n- Ability to create and deliver a malicious zip archive to a user.\n- No specific privileges are required beyond the ability to extract the archive.\n\nMitigation or fix:\n- Upgrade to version 2.3.0 or later of the `zip` crate.\n- The fix involves canonicalizing output paths and symlink targets, and ensuring they descend from the destination directory.\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-59 | Improper Link Resolution Before File Access ('Link Following') | 0.9 | Base | Allowed | Primary CWE. The vulnerability involves the use of symbolic links to overwrite arbitrary files. |\n| CWE-23 | Relative Path Traversal | 0.7 | Base | Allowed | Secondary CWE. Although not explicitly stated, the symbolic link can resolve to a location outside the restricted directory. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary weakness is CWE-59 Improper Link Resolution Before File Access ('Link Following'). The description explicitly states that symbolic links are used to overwrite arbitrary files. CWE-23 Relative Path Traversal is related, as the symbolic link can resolve to a location outside the intended directory, but this is not as direct a match as CWE-59.\n\n```mermaid\ngraph TD\n    cwe59[\"CWE-59: Improper Link Resolution Before File Access ('Link Following')\"]\n    cwe23[\"CWE-23: Relative Path Traversal\"]\n    cwe61[\"CWE-61: UNIX Symbolic Link (Symlink) Following\"]\n    \n    cwe59 -->|ParentOf| cwe61\n    cwe23 -->|PeerOf| cwe59\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe59 primary\n    class cwe23 secondary\n    class cwe61 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain involves a malicious zip archive containing symbolic links. The **weakness** is that these symbolic links are not validated, allowing them to point to arbitrary files. When the archive is extracted, these links are used to **overwrite arbitrary files**, leading to potential code execution.\n\n## Summary of Analysis\nThe analysis is primarily based on the provided vulnerability description, which explicitly mentions the use of symbolic links to overwrite files. The key phrase is \"**symbolic link overwrite**\". The CVE description states: \"symbolic links earlier in the archive are allowed to be used for later files in the archive without validation of the final canonicalized path.\" This directly aligns with CWE-59, which describes the improper resolution of links before file access.\n\nCWE-23 is a potential secondary weakness, as the symbolic links may resolve to locations outside the intended directory. The retriever results also suggest CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'), however CWE-23 is more appropriate because of the Relative path traversal via the link.\n\nThe selected CWEs are at the base level of abstraction, providing a precise representation of the vulnerability.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-59: Improper Link Resolution Before File Access ('Link Following')\n**Abstraction Level**: Base\n**Similarity Score**: 0.81\n**Source**: dense\n\n**Description**:\nThe product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-23: Relative Path Traversal\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as \"..\" that can resolve to a location that is outside of that directory.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-59 | Improper Link Resolution Before File Access ('Link Following') | 0.9 | Base | Allowed | Primary CWE. The vulnerability involves the use of symbolic links to overwrite arbitrary files. |\n| CWE-23 | Relative Path Traversal | 0.7 | Base | Allowed | Secondary CWE. Although not explicitly stated, the symbolic link can resolve to a location outside the restricted directory. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary weakness is CWE-59 Improper Link Resolution Before File Access ('Link Following'). The description explicitly states that symbolic links are used to overwrite arbitrary files. CWE-23 Relative Path Traversal is related, as the symbolic link can resolve to a location outside the intended directory, but this is not as direct a match as CWE-59.\n\n```mermaid\ngraph TD\n    cwe59[\"CWE-59: Improper Link Resolution Before File Access ('Link Following')\"]\n    cwe23[\"CWE-23: Relative Path Traversal\"]\n    cwe61[\"CWE-61: UNIX Symbolic Link (Symlink) Following\"]\n    \n    cwe59 -->|ParentOf| cwe61\n    cwe23 -->|PeerOf| cwe59\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe59 primary\n    class cwe23 secondary\n    class cwe61 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain involves a malicious zip archive containing symbolic links. The **weakness** is that these symbolic links are not validated, allowing them to point to arbitrary files. When the archive is extracted, these links are used to **overwrite arbitrary files**, leading to potential code execution.\n\n## Summary of Analysis\nThe analysis is primarily based on the provided vulnerability description, which explicitly mentions the use of symbolic links to overwrite files. The key phrase is \"**symbolic link overwrite**\". The CVE description states: \"symbolic links earlier in the archive are allowed to be used for later files in the archive without validation of the final canonicalized path.\" This directly aligns with CWE-59, which describes the improper resolution of links before file access.\n\nCWE-23 is a potential secondary weakness, as the symbolic links may resolve to locations outside the intended directory. The retriever results also suggest CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'), however CWE-23 is more appropriate because of the Relative path traversal via the link.\n\nThe selected CWEs are at the base level of abstraction, providing a precise representation of the vulnerability.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-59: Improper Link Resolution Before File Access ('Link Following')\n**Abstraction Level**: Base\n**Similarity Score**: 0.81\n**Source**: dense\n\n**Description**:\nThe product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-23: Relative Path Traversal\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as \"..\" that can resolve to a location that is outside of that directory.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-59:**\n- 59 (Improper Link Resolution Before File Access ('Link Following')) - ROOT\n\n\n**Chain starting from CWE-23:**\n- 23 (Relative Path Traversal) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "59",
        "name": "Improper Link Resolution Before File Access ('Link Following')",
        "source": "sparse"
      },
      "similarity": 859.758936096285
    },
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "sparse"
      },
      "similarity": 747.8746889386774
    },
    {
      "metadata": {
        "doc_id": "61",
        "name": "UNIX Symbolic Link (Symlink) Following",
        "source": "sparse"
      },
      "similarity": 738.6876707383126
    },
    {
      "metadata": {
        "doc_id": "23",
        "name": "Relative Path Traversal",
        "source": "sparse"
      },
      "similarity": 730.7500811441639
    },
    {
      "metadata": {
        "doc_id": "409",
        "name": "Improper Handling of Highly Compressed Data (Data Amplification)",
        "source": "sparse"
      },
      "similarity": 614.8462469146381
    },
    {
      "metadata": {
        "doc_id": "732",
        "name": "Incorrect Permission Assignment for Critical Resource",
        "source": "sparse"
      },
      "similarity": 608.8509738129004
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 587.8247557410625
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse"
      },
      "similarity": 586.2053994162422
    },
    {
      "metadata": {
        "doc_id": "62",
        "name": "UNIX Hard Link",
        "type": "Variant",
        "original_content": "The product, when opening a file or directory, does not sufficiently account for when the name is associated with a hard link to a target that is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.",
        "keyphrase_source": "weakness:symbolic link overwrite",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.46846768040134673,
            "graph": 1.4889124894880552
          }
        }
      },
      "similarity": 0.46846768040134673
    },
    {
      "doc_id": "363",
      "text": "CWE-363: Race Condition Enabling Link Following",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "363",
        "name": "Race Condition Enabling Link Following",
        "type": "base",
        "original_content": "CWE-363: Race Condition Enabling Link Following",
        "relationships": [
          {
            "source_id": "363",
            "target_id": "59",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "363",
            "target_id": "367",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "59",
            "target_id": "363",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "367",
            "target_id": "363",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "59",
                  "363",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "59"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "59",
                  "363",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "59"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "363",
                  "59",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "59"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-59",
      "CWE-23",
      "CWE-61",
      "CWE-22"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}