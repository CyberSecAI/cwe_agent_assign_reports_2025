{
  "cve_id": "CVE-2025-31486",
  "description": "Vite is a frontend tooling framework for javascript. The contents of arbitrary files can be returned to the browser. By adding ?.svg with ?.wasm?init or with sec-fetch-dest script header, the server.fs.deny restriction was able to bypass. This bypass is only possible if the file is smaller than build.assetsInlineLimit (default 4kB) and when using Vite 6.0+. Only apps explicitly exposing the Vite dev server to the network (using --host or server.host config option) are affected. This vulnerability is fixed in 4.5.12, 5.4.17, 6.0.14, 6.1.4, and 6.2.5.",
  "key_phrases": {
    "component": "",
    "rootcause": "The fs.deny restriction was able to bypass",
    "vector": "adding ?.svg with ?.wasm?init, sec-fetch-dest script header",
    "weakness": "",
    "product": "Vite",
    "impact": "return contents of arbitrary files",
    "attacker": "",
    "version": "6.0+"
  },
  "reference_content": "## Analysis of CVE-2025-31486 based on provided content:\n\nThe provided content details a security vulnerability in Vite (versions >=6.2.0, <=6.2.4, >=6.1.0, <=6.1.3, >=6.0.0, <=6.0.13, >=5.0.0, <=5.4.16, and <=4.5.11) that allows arbitrary file content to be returned to the browser. This vulnerability is tracked as GHSA-xcj6-pq6g-qj4x and is assigned CVE-2025-31486.\n\n**Root cause of vulnerability:**\n\n*   The vulnerability stems from insufficient validation of file requests, specifically related to `.svg` files and relative paths.\n*   For `.svg` files, the code at `packages/vite/src/node/plugins/asset.ts` incorrectly handles requests ending with `.svg`, allowing access to arbitrary files. This bypass is possible with `?.svg?.wasm?init` or `sec-fetch-dest: script` header.\n*   The check for relative paths was performed before the ID normalization, enabling bypasses using paths like `../../`.\n\n**Weaknesses/vulnerabilities present:**\n\n*   **Path Traversal:** The relative path vulnerability allows an attacker to traverse the file system.\n*   **Insecure Direct Object Reference (IDOR):** The `.svg` vulnerability allows access to files based on a potentially manipulated identifier.\n*   **Insufficient Input Validation:** Lack of proper validation of file paths and extensions.\n\n**Impact of exploitation:**\n\n*   An attacker can read arbitrary files from the server, potentially exposing sensitive information (e.g., `/etc/passwd`).\n\n**Attack vectors:**\n\n*   Sending crafted HTTP requests to the Vite dev server with specific file paths (e.g., `http://127.0.0.1:5173/etc/passwd?.svg?.wasm?init` or `http://127.0.0.1:5173/@fs/x/x/x/vite-project/?/../../../../../etc/passwd?import&?raw`).\n*   Exploitation requires the Vite dev server to be exposed to the network (using `--host` or `server.host` config option).\n\n**Required attacker capabilities/position:**\n\n*   Network access to the Vite dev server.\n*   Ability to send crafted HTTP requests.\n*   No authentication is required.\n\n**Mitigation or fix:**\n\n*   Upgrade to a patched version of Vite: >=6.2.5, >=6.1.4, >=6.0.14, >=5.4.17, or >=4.5.12.\n\n**Additional details:**\n\n*   The vulnerability is only exploitable if the requested file is smaller than the `build.assetsInlineLimit` (default: 4kB).\n*   The provided content includes a Proof of Concept (PoC) demonstrating how to read the `/etc/passwd` file.\n*   The vulnerability has been reported by multiple security researchers.\n*   CVSS score: 5.3/10 (Moderate).\n\nThis analysis provides more detail than the official CVE description, as it includes specific code locations, PoC examples, and a detailed explanation of the root cause and attack vectors.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-22 | Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') | 1.0 | Base | Allowed | Primary CWE: The vulnerability description and CVE reference link content summary clearly indicate path traversal as the root cause. |\n| CWE-668 | Exposure of Resource to Wrong Sphere | 0.7 | Class | Discouraged | Secondary Candidate: The vulnerability results in the exposure of resources (arbitrary files) to the wrong sphere, but CWE-22 is a more specific root cause. |\n| CWE-863 | Incorrect Authorization | 0.6 | Class | Allowed-with-Review | Secondary Candidate: The fs.deny restriction bypass suggests an authorization issue, but path traversal is the direct cause of the bypass.|\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness identified is CWE-22, which represents the **improper limitation of a pathname to a restricted directory**, leading to path traversal. This is a base-level CWE.\n\nCWE-668 (Exposure of Resource to Wrong Sphere) is a class-level CWE that could be considered as a consequence of the path traversal, but is not as specific. CWE-22 can lead to CWE-668 since by traversing the path restrictions, resources can be exposed to unintended actors.\n\nCWE-863 (Incorrect Authorization) is also a Class-level CWE that is a possible candidate because the **fs.deny restriction was able to bypass**, which implies an authorization problem. However, the root cause is the path traversal vulnerability.\n\n```mermaid\ngraph TD\n    cwe22[\"CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\"]\n    cwe668[\"CWE-668: Exposure of Resource to Wrong Sphere\"]\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n\n    cwe22 -->|CANPRECEDE| cwe668\n    cwe22 -->|CANPRECEDE| cwe863\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe22 primary\n    class cwe668,cwe863 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **improper limitation of a pathname (CWE-22)**. This leads to the ability to access arbitrary files, effectively **exposing resources to the wrong sphere (CWE-668)** and potentially bypassing authorization checks **(CWE-863)**.\n\n## Summary of Analysis\nThe initial analysis identified CWE-22 as the primary root cause due to the path traversal vulnerability. The CVE reference content confirms this, stating that \"the check for relative paths was performed before the ID normalization, enabling bypasses using paths like `../../`.\" This aligns with the description of CWE-22, which involves **improper neutralization of special elements within the pathname**. The **fs.deny restriction was able to bypass**, which indicates an authorization problem.\n\nCWE-668 and CWE-863 are secondary candidates because they represent the impact of the path traversal, where arbitrary files are exposed and authorization checks are bypassed. However, the root cause remains the path traversal vulnerability.\n\nThe selection of CWE-22 is based on direct evidence from the vulnerability description and CVE reference content, as well as its base-level abstraction, which provides a more specific representation of the weakness.\n\nRelevant CWE Information:\n* CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\n    * Abstraction Level: Base\n    * Description: The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.\n* CWE-668: Exposure of Resource to Wrong Sphere\n    * Abstraction Level: Class\n    * Description: The product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.\n* CWE-863: Incorrect Authorization\n    * Abstraction Level: Class\n    * Description: The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-22 | Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') | 1.0 | Base | Allowed | Primary CWE: The vulnerability description and CVE reference link content summary clearly indicate path traversal as the root cause. |\n| CWE-668 | Exposure of Resource to Wrong Sphere | 0.7 | Class | Discouraged | Secondary Candidate: The vulnerability results in the exposure of resources (arbitrary files) to the wrong sphere, but CWE-22 is a more specific root cause. |\n| CWE-863 | Incorrect Authorization | 0.6 | Class | Allowed-with-Review | Secondary Candidate: The fs.deny restriction bypass suggests an authorization issue, but path traversal is the direct cause of the bypass.|\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness identified is CWE-22, which represents the **improper limitation of a pathname to a restricted directory**, leading to path traversal. This is a base-level CWE.\n\nCWE-668 (Exposure of Resource to Wrong Sphere) is a class-level CWE that could be considered as a consequence of the path traversal, but is not as specific. CWE-22 can lead to CWE-668 since by traversing the path restrictions, resources can be exposed to unintended actors.\n\nCWE-863 (Incorrect Authorization) is also a Class-level CWE that is a possible candidate because the **fs.deny restriction was able to bypass**, which implies an authorization problem. However, the root cause is the path traversal vulnerability.\n\n```mermaid\ngraph TD\n    cwe22[\"CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\"]\n    cwe668[\"CWE-668: Exposure of Resource to Wrong Sphere\"]\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n\n    cwe22 -->|CANPRECEDE| cwe668\n    cwe22 -->|CANPRECEDE| cwe863\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe22 primary\n    class cwe668,cwe863 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **improper limitation of a pathname (CWE-22)**. This leads to the ability to access arbitrary files, effectively **exposing resources to the wrong sphere (CWE-668)** and potentially bypassing authorization checks **(CWE-863)**.\n\n## Summary of Analysis\nThe initial analysis identified CWE-22 as the primary root cause due to the path traversal vulnerability. The CVE reference content confirms this, stating that \"the check for relative paths was performed before the ID normalization, enabling bypasses using paths like `../../`.\" This aligns with the description of CWE-22, which involves **improper neutralization of special elements within the pathname**. The **fs.deny restriction was able to bypass**, which indicates an authorization problem.\n\nCWE-668 and CWE-863 are secondary candidates because they represent the impact of the path traversal, where arbitrary files are exposed and authorization checks are bypassed. However, the root cause remains the path traversal vulnerability.\n\nThe selection of CWE-22 is based on direct evidence from the vulnerability description and CVE reference content, as well as its base-level abstraction, which provides a more specific representation of the weakness.\n\nRelevant CWE Information:\n* CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\n    * Abstraction Level: Base\n    * Description: The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.\n* CWE-668: Exposure of Resource to Wrong Sphere\n    * Abstraction Level: Class\n    * Description: The product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.\n* CWE-863: Incorrect Authorization\n    * Abstraction Level: Class\n    * Description: The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-668:**\n- 668 (Exposure of Resource to Wrong Sphere) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 549.9885408809012
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 544.0238647657231
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 543.5849510778881
    },
    {
      "metadata": {
        "doc_id": "184",
        "name": "Incomplete List of Disallowed Inputs",
        "source": "sparse"
      },
      "similarity": 542.8543105227304
    },
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "sparse"
      },
      "similarity": 541.1924578249789
    },
    {
      "metadata": {
        "doc_id": "668",
        "name": "Exposure of Resource to Wrong Sphere",
        "source": "sparse"
      },
      "similarity": 533.99555085922
    },
    {
      "metadata": {
        "doc_id": "1333",
        "name": "Inefficient Regular Expression Complexity",
        "source": "sparse"
      },
      "similarity": 531.0980333206375
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 529.1413834955804
    },
    {
      "metadata": {
        "doc_id": "830",
        "name": "Inclusion of Web Functionality from an Untrusted Source",
        "type": "Variant",
        "original_content": "The product includes web functionality (such as a web widget) from another domain, which causes it to operate within the domain of the product, potentially granting total access and control of the product to the untrusted source.",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.4329452059108625
          }
        }
      },
      "similarity": 0.4329452059108625
    },
    {
      "doc_id": "78",
      "text": "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "78",
        "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "type": "base",
        "original_content": "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "relationships": [
          {
            "source_id": "78",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "78",
            "target_id": "88",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "78",
            "target_id": "77",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1340"
            }
          },
          {
            "source_id": "78",
            "target_id": "77",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1305"
            }
          },
          {
            "source_id": "78",
            "target_id": "74",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "78",
            "target_id": "77",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "77",
            "target_id": "78",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "74",
            "target_id": "78",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "184",
            "target_id": "78",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "184",
                  "78",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "184"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "184",
                  "78",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "184"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-668",
      "CWE-22"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}