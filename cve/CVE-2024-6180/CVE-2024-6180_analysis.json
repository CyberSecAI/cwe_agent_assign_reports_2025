{
  "cve_id": "CVE-2024-6180",
  "description": "The EventON plugin for WordPress is vulnerable to unauthorized modification of data due to a **missing capability check** on the eventon_import_settings ajax action in all versions up to, and including, 2.2.15. This makes it possible for unauthenticated attackers to update plugin settings, including adding stored **cross-site scripting** to settings options displayed on event calendar pages.",
  "key_phrases": {
    "rootcause": "missing capability check",
    "weakness": "cross-site scripting",
    "impact": [
      "unauthorized modification of data",
      "update plugin settings"
    ],
    "vector": "",
    "attacker": "unauthenticated attackers",
    "product": "EventON plugin for WordPress",
    "version": "all versions up to and including 2.2.15",
    "component": "eventon_import_settings ajax action"
  },
  "reference_content": "```\n{\n  \"Root cause of vulnerability\": \"Missing capability check on the 'eventon_import_settings' ajax action.\",\n  \"Weaknesses/vulnerabilities present\": \"Unauthenticated stored cross-site scripting (XSS) and plugin settings updates due to missing authorization checks.\",\n  \"Impact of exploitation\": \"An unauthenticated attacker can modify plugin settings, including injecting malicious JavaScript code into settings that are displayed on event calendar pages, which leads to Stored XSS.\",\n  \"Attack vectors\": \"The vulnerability is exploited through an AJAX request to the 'eventon_import_settings' action.\",\n  \"Required attacker capabilities/position\": \"The attacker does not need to be authenticated and can send the malicious request remotely over the network.\"\n}\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-862 | Missing Authorization | 1.0 | Class | Primary | Allowed-with-Review |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.9 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.95\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is the **missing authorization** (CWE-862), which allows unauthorized modification of data. The secondary weakness is **improper neutralization of input** (CWE-79) leading to stored cross-site scripting. CWE-862 is a Class-level CWE, with more specific Base-level children that could be considered, but the provided information is not specific enough to select a child. CWE-79 is a Base-level CWE and is directly related to the stored XSS. CWE-862 can precede CWE-79 because the missing authorization allows an attacker to inject malicious code.\n\n```mermaid\ngraph TD\n    cwe862[\"CWE-862: Missing Authorization\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe862 -->|CANPRECEDE| cwe79\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe862 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **missing authorization** check (CWE-862). Because of this **missing authorization**, an unauthenticated attacker can modify plugin settings and inject malicious JavaScript code. This leads to the stored **cross-site scripting** vulnerability (CWE-79), where the injected code is executed when other users view the affected pages.\n\n## Summary of Analysis\nThe primary CWE is CWE-862 (**Missing Authorization**), because the root cause of the vulnerability is the **missing capability check**. The vulnerability description states \"The EventON plugin for WordPress is vulnerable to unauthorized modification of data due to a **missing capability check** on the eventon_import_settings ajax action\". The \"CVE Reference Links Content Summary\" confirms this by stating: \"Root cause of vulnerability: **Missing capability check** on the 'eventon_import_settings' ajax action.\"\n\nThe secondary CWE is CWE-79 (**Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')**), because the \"Vulnerability Description\" mentions \"adding stored **cross-site scripting** to settings options displayed on event calendar pages.\" The \"CVE Reference Links Content Summary\" further confirms this by stating: \"Weaknesses/vulnerabilities present: Unauthenticated stored **cross-site scripting** (XSS) and plugin settings updates due to missing authorization checks.\"\n\nCWE-862 is at the Class level and is appropriate because the provided information doesn't give specifics to select a child. CWE-79 is at the Base level and is appropriate because it directly represents the stored XSS vulnerability.\n\nThe retriever results list several other CWEs, including CWE-352 (**Cross-Site Request Forgery (CSRF)**), CWE-116 (**Improper Encoding or Escaping of Output**), CWE-306 (**Missing Authentication for Critical Function**), CWE-434 (**Unrestricted Upload of File with Dangerous Type**), CWE-96 (**Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')**), and CWE-471 (**Modification of Assumed-Immutable Data (MAID)**). However, these are not as directly relevant as CWE-862 and CWE-79. CWE-306 is similar to CWE-862, but CWE-862 is more appropriate as it focuses on the **missing authorization** check. CWE-352 is not applicable because the vulnerability is not related to cross-site request forgery. CWE-116 is a general class and is not specific enough to the vulnerability. CWE-434 is not relevant because there is no file upload involved. CWE-96 is not relevant because it focuses on static code injection, which is not the case here. CWE-471 is not relevant because there is no modification of assumed-immutable data.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-862 | Missing Authorization | 1.0 | Class | Primary | Allowed-with-Review |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.9 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.95\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is the **missing authorization** (CWE-862), which allows unauthorized modification of data. The secondary weakness is **improper neutralization of input** (CWE-79) leading to stored cross-site scripting. CWE-862 is a Class-level CWE, with more specific Base-level children that could be considered, but the provided information is not specific enough to select a child. CWE-79 is a Base-level CWE and is directly related to the stored XSS. CWE-862 can precede CWE-79 because the missing authorization allows an attacker to inject malicious code.\n\n```mermaid\ngraph TD\n    cwe862[\"CWE-862: Missing Authorization\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe862 -->|CANPRECEDE| cwe79\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe862 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **missing authorization** check (CWE-862). Because of this **missing authorization**, an unauthenticated attacker can modify plugin settings and inject malicious JavaScript code. This leads to the stored **cross-site scripting** vulnerability (CWE-79), where the injected code is executed when other users view the affected pages.\n\n## Summary of Analysis\nThe primary CWE is CWE-862 (**Missing Authorization**), because the root cause of the vulnerability is the **missing capability check**. The vulnerability description states \"The EventON plugin for WordPress is vulnerable to unauthorized modification of data due to a **missing capability check** on the eventon_import_settings ajax action\". The \"CVE Reference Links Content Summary\" confirms this by stating: \"Root cause of vulnerability: **Missing capability check** on the 'eventon_import_settings' ajax action.\"\n\nThe secondary CWE is CWE-79 (**Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')**), because the \"Vulnerability Description\" mentions \"adding stored **cross-site scripting** to settings options displayed on event calendar pages.\" The \"CVE Reference Links Content Summary\" further confirms this by stating: \"Weaknesses/vulnerabilities present: Unauthenticated stored **cross-site scripting** (XSS) and plugin settings updates due to missing authorization checks.\"\n\nCWE-862 is at the Class level and is appropriate because the provided information doesn't give specifics to select a child. CWE-79 is at the Base level and is appropriate because it directly represents the stored XSS vulnerability.\n\nThe retriever results list several other CWEs, including CWE-352 (**Cross-Site Request Forgery (CSRF)**), CWE-116 (**Improper Encoding or Escaping of Output**), CWE-306 (**Missing Authentication for Critical Function**), CWE-434 (**Unrestricted Upload of File with Dangerous Type**), CWE-96 (**Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')**), and CWE-471 (**Modification of Assumed-Immutable Data (MAID)**). However, these are not as directly relevant as CWE-862 and CWE-79. CWE-306 is similar to CWE-862, but CWE-862 is more appropriate as it focuses on the **missing authorization** check. CWE-352 is not applicable because the vulnerability is not related to cross-site request forgery. CWE-116 is a general class and is not specific enough to the vulnerability. CWE-434 is not relevant because there is no file upload involved. CWE-96 is not relevant because it focuses on static code injection, which is not the case here. CWE-471 is not relevant because there is no modification of assumed-immutable data.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-471:**\n- 471 (Modification of Assumed-Immutable Data (MAID)) - ROOT\n\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 501.78078590191114
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 466.50853717501735
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 397.9917657355171
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 386.6066611656463
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 378.38779247484223
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 376.56641672359893
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 358.9559478567892
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse"
      },
      "similarity": 344.5812938673982
    },
    {
      "metadata": {
        "doc_id": "96",
        "name": "Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')",
        "type": "Base",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before inserting the input into an executable resource, such as a library, configuration file, or template.",
        "keyphrase_source": "weakness:cross-site scripting",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.4947061201604669,
            "graph": 1.6118258696365912
          }
        }
      },
      "similarity": 0.4947061201604669
    },
    {
      "doc_id": "471",
      "text": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
      "score": 2.7196000000000002,
      "metadata": {
        "doc_id": "471",
        "name": "Modification of Assumed-Immutable Data (MAID)",
        "type": "base",
        "original_content": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
        "relationships": [
          {
            "source_id": "471",
            "target_id": "621",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "607",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "602",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "473",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "472",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "291",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "1321",
            "label": "CANFOLLOW",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "1282",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "664",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "664",
            "target_id": "471",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "621",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "607",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "602",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "473",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "472",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "291",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1321",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1282",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.5599999999999999,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_up",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "425",
                  "471",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "425"
            },
            "abstraction_path_up": {
              "path": [
                [
                  "472",
                  "471",
                  "CHILDOF"
                ]
              ],
              "score": 0.5599999999999999,
              "type": "abstraction_path_up",
              "source": "472"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "425",
                  "471",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "425"
            }
          }
        },
        "abstraction_level": "base",
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.7196000000000002
          }
        }
      },
      "similarity": 2.7196000000000002
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-471",
      "CWE-116",
      "CWE-862",
      "CWE-79",
      "CWE-306",
      "CWE-352",
      "CWE-96",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}