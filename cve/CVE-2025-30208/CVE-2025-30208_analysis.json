{
  "cve_id": "CVE-2025-30208",
  "description": "Vite, a provider of frontend development tooling, has a vulnerability in versions prior to 6.2.3, 6.1.2, 6.0.12, 5.4.15, and 4.5.10. `@fs` denies access to files outside of Vite serving allow list. Adding `?raw??` or `?import&raw??` to the URL bypasses this limitation and returns the file content if it exists. This bypass exists because trailing separators such as `?` are removed in several places, but are not accounted for in query string regexes. The contents of arbitrary files can be returned to the browser. Only apps explicitly exposing the Vite dev server to the network (using `--host` or `server.host` config option) are affected. Versions 6.2.3, 6.1.2, 6.0.12, 5.4.15, and 4.5.10 fix the issue.",
  "key_phrases": {
    "rootcause": "trailing separators are removed in several places, but are not accounted for in query string regexes",
    "weakness": "",
    "impact": "bypass this limitation and returns the file content if it exists",
    "vector": "?raw?? or ?import&raw??",
    "attacker": "",
    "product": "Vite",
    "version": "prior to 6.2.3, 6.1.2, 6.0.12, 5.4.15, and 4.5.10",
    "component": "@fs"
  },
  "reference_content": "CVE-2025-30208\n\n**Root cause of vulnerability:**\nTrailing separators such as `?` are removed in several places, but are not accounted for in query string regexes, allowing bypass of the `@fs` access denial.\n\n**Weaknesses/vulnerabilities present:**\n- Improper input validation\n- Insecure direct object reference (potentially, as arbitrary files can be accessed)\n\n**Impact of exploitation:**\nThe contents of arbitrary files can be returned to the browser. This is only exploitable if the Vite dev server is exposed to the network (using `--host` or `server.host` config option).\n\n**Attack vectors:**\n- Network: An attacker can send a crafted request to the Vite dev server with a URL containing `?raw??` or `?import&raw??` appended to a file path.\n\n**Required attacker capabilities/position:**\n- Network access to a Vite dev server that is exposed to the network.\n- No authentication is required.\n\n**Mitigation or fix:**\nThe vulnerability is patched in versions >=6.2.3, >=6.1.2, >=6.0.12, >=5.4.15, and >=4.5.10. The fix involves correctly handling trailing query separators in the URL validation logic.\n\n**Additional details:**\nThe provided content includes commit messages and diffs showing the fix for this vulnerability. The PoC demonstrates how to bypass the security check and retrieve the contents of an arbitrary file.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-22 | Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') | 0.9 | Base | Allowed | Primary CWE. The vulnerability allows bypassing intended restrictions on file access due to **improper limitation of pathname**. |\n| CWE-73 | External Control of File Name or Path | 0.7 | Base | Allowed | Secondary CWE. The vulnerability involves user-controlled input influencing file paths, which can lead to unauthorized access. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE selected is CWE-22, which focuses on the **improper limitation of a pathname to a restricted directory**. This is the root cause as the vulnerability allows bypassing the intended restrictions. CWE-73 (External Control of File Name or Path) is a related weakness as it describes how user input can influence file paths. CWE-22 is a parent of CWE-23 (Relative Path Traversal). The relationship is that the **improper** handling leads to path traversal, where an attacker can access files outside the intended directory.\n\n```mermaid\ngraph TD\n    cwe22[\"CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\"]\n    cwe73[\"CWE-73: External Control of File Name or Path\"]\n    cwe23[\"CWE-23: Relative Path Traversal\"]\n    \n    cwe23 -->|CHILDOF| cwe22\n    cwe22 -->|CANFOLLOW| cwe73\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe22 primary\n    class cwe73 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **improper input validation** when handling the URL, specifically the query string. This **improper** handling allows an attacker to bypass intended access restrictions and read arbitrary files on the server.\n\n1.  **Root Cause:** **Improper input validation** (**trailing separators are removed in several places, but are not accounted for in query string regexes**)\n2.  **Weakness:** CWE-22 (Improper Limitation of a Pathname to a Restricted Directory)\n3.  **Impact:** Arbitrary file read, information disclosure\n\n## Summary of Analysis\nThe primary weakness is CWE-22 (Improper Limitation of a Pathname to a Restricted Directory). The evidence clearly supports this, as the vulnerability description states that the `@fs` access denial is bypassed due to **improper handling of trailing separators in the URL**. Specifically, the **rootcause** is that the **trailing separators are removed in several places, but are not accounted for in query string regexes**. This aligns perfectly with CWE-22, which deals with **improper limitation of pathnames to restricted directories**. The retriever results also list CWE-22 as the top result, further supporting this classification.\n\nCWE-73 (External Control of File Name or Path) is added as a secondary CWE because the vulnerability allows user-controlled input (the URL with `?raw??` or `?import&raw??`) to influence the file path being accessed.\n\nOther CWEs were considered but not selected:\n\n*   CWE-1333 (Inefficient Regular Expression Complexity): While the issue involves regular expressions, the primary problem is the **improper** handling of the input, not the complexity of the regex itself.\n*   CWE-863 (Incorrect Authorization): While the vulnerability leads to unauthorized access, the root cause is the **improper limitation** of the pathname, not an authorization flaw.\n*   CWE-209 (Generation of Error Message Containing Sensitive Information): This CWE is not applicable as the vulnerability leads to arbitrary file read, not the exposure of sensitive information in error messages.\n*   CWE-668 (Exposure of Resource to Wrong Sphere): This is a high-level CWE and less specific than CWE-22.\n*   CWE-306 (Missing Authentication for Critical Function): Not applicable because the issue is path traversal, not a missing authentication check.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-22 | Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') | 0.9 | Base | Allowed | Primary CWE. The vulnerability allows bypassing intended restrictions on file access due to **improper limitation of pathname**. |\n| CWE-73 | External Control of File Name or Path | 0.7 | Base | Allowed | Secondary CWE. The vulnerability involves user-controlled input influencing file paths, which can lead to unauthorized access. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE selected is CWE-22, which focuses on the **improper limitation of a pathname to a restricted directory**. This is the root cause as the vulnerability allows bypassing the intended restrictions. CWE-73 (External Control of File Name or Path) is a related weakness as it describes how user input can influence file paths. CWE-22 is a parent of CWE-23 (Relative Path Traversal). The relationship is that the **improper** handling leads to path traversal, where an attacker can access files outside the intended directory.\n\n```mermaid\ngraph TD\n    cwe22[\"CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\"]\n    cwe73[\"CWE-73: External Control of File Name or Path\"]\n    cwe23[\"CWE-23: Relative Path Traversal\"]\n    \n    cwe23 -->|CHILDOF| cwe22\n    cwe22 -->|CANFOLLOW| cwe73\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe22 primary\n    class cwe73 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **improper input validation** when handling the URL, specifically the query string. This **improper** handling allows an attacker to bypass intended access restrictions and read arbitrary files on the server.\n\n1.  **Root Cause:** **Improper input validation** (**trailing separators are removed in several places, but are not accounted for in query string regexes**)\n2.  **Weakness:** CWE-22 (Improper Limitation of a Pathname to a Restricted Directory)\n3.  **Impact:** Arbitrary file read, information disclosure\n\n## Summary of Analysis\nThe primary weakness is CWE-22 (Improper Limitation of a Pathname to a Restricted Directory). The evidence clearly supports this, as the vulnerability description states that the `@fs` access denial is bypassed due to **improper handling of trailing separators in the URL**. Specifically, the **rootcause** is that the **trailing separators are removed in several places, but are not accounted for in query string regexes**. This aligns perfectly with CWE-22, which deals with **improper limitation of pathnames to restricted directories**. The retriever results also list CWE-22 as the top result, further supporting this classification.\n\nCWE-73 (External Control of File Name or Path) is added as a secondary CWE because the vulnerability allows user-controlled input (the URL with `?raw??` or `?import&raw??`) to influence the file path being accessed.\n\nOther CWEs were considered but not selected:\n\n*   CWE-1333 (Inefficient Regular Expression Complexity): While the issue involves regular expressions, the primary problem is the **improper** handling of the input, not the complexity of the regex itself.\n*   CWE-863 (Incorrect Authorization): While the vulnerability leads to unauthorized access, the root cause is the **improper limitation** of the pathname, not an authorization flaw.\n*   CWE-209 (Generation of Error Message Containing Sensitive Information): This CWE is not applicable as the vulnerability leads to arbitrary file read, not the exposure of sensitive information in error messages.\n*   CWE-668 (Exposure of Resource to Wrong Sphere): This is a high-level CWE and less specific than CWE-22.\n*   CWE-306 (Missing Authentication for Critical Function): Not applicable because the issue is path traversal, not a missing authentication check.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-22:**\n- 22 (Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "sparse"
      },
      "similarity": 731.9507438084931
    },
    {
      "metadata": {
        "doc_id": "1333",
        "name": "Inefficient Regular Expression Complexity",
        "source": "sparse"
      },
      "similarity": 699.6590600638938
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 698.0187482194669
    },
    {
      "metadata": {
        "doc_id": "209",
        "name": "Generation of Error Message Containing Sensitive Information",
        "source": "sparse"
      },
      "similarity": 697.3487049246776
    },
    {
      "metadata": {
        "doc_id": "668",
        "name": "Exposure of Resource to Wrong Sphere",
        "source": "sparse"
      },
      "similarity": 695.4797661162238
    },
    {
      "metadata": {
        "doc_id": "1390",
        "name": "Weak Authentication",
        "source": "sparse"
      },
      "similarity": 688.0995979815973
    },
    {
      "metadata": {
        "doc_id": "23",
        "name": "Relative Path Traversal",
        "source": "sparse"
      },
      "similarity": 683.565049189034
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 680.1768964926738
    },
    {
      "metadata": {
        "doc_id": "24",
        "name": "Path Traversal: '../filedir'",
        "type": "Variant",
        "original_content": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize \"../\" sequences that can resolve to a location that is outside of that directory.",
        "keyphrase_source": "rootcause:trailing separators are removed in several places",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.5534342140843214
          }
        }
      },
      "similarity": 0.5534342140843214
    },
    {
      "doc_id": "942",
      "text": "CWE-942: Permissive Cross-domain Policy with Untrusted Domains",
      "score": 2.6784000000000003,
      "metadata": {
        "doc_id": "942",
        "name": "Permissive Cross-domain Policy with Untrusted Domains",
        "type": "variant",
        "original_content": "CWE-942: Permissive Cross-domain Policy with Untrusted Domains",
        "relationships": [
          {
            "source_id": "942",
            "target_id": "668",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "942",
            "target_id": "183",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "942",
            "target_id": "923",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "942",
            "target_id": "863",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "923",
            "target_id": "942",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "863",
            "target_id": "942",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "668",
            "target_id": "942",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "183",
            "target_id": "942",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.76,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.2,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "668",
                  "942",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "668"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "863",
                  "942",
                  "PARENTOF"
                ]
              ],
              "score": 0.76,
              "type": "abstraction_path_down",
              "source": "863"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "668",
                  "942",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "668"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "942",
                  "668",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "668"
            }
          }
        },
        "abstraction_level": "variant",
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.6784000000000003
          }
        }
      },
      "similarity": 2.6784000000000003
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-22",
      "CWE-73",
      "CWE-306",
      "CWE-23",
      "CWE-668",
      "CWE-1333",
      "CWE-209"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}