{
  "query": "In the Linux kernel, the following vulnerability has been resolved bpf Call free_htab_elem() after htab_unlock_bucket() For htab of maps, when the map is removed from the htab, it may hold the last reference of the map. bpf_map_fd_put_ptr() will invoke bpf_map_free_id() to free the id of the removed map element. However, bpf_map_fd_put_ptr() is invoked while holding a bucket lock (raw_spin_lock_t), and bpf_map_free_id() attempts to acquire map_idr_lock (spinlock_t), triggering the following lockdep warning ============================= [ BUG Invalid wait context ] 6.11.0-rc4+ #49 Not tainted ----------------------------- test_maps/4881 is trying to lock ffffffff84884578 (map_idr_lock){+...}-{33}, at bpf_map_free_id.part.0+0x21/0x70 other info that might help us debug this context-{55} 2 locks held by test_maps/4881 #0 ffffffff846caf60 (rcu_read_lock){....}-{13}, at bpf_fd_htab_map_update_elem+0xf9/0x270 #1 ffff888149ced148 (&htab->lockdep_key#2){....}-{22}, at htab_map_update_elem+0x178/0xa80 stack backtrace CPU 0 UID 0 PID 4881 Comm test_maps Not tainted 6.11.0-rc4+ #49 Hardware name QEMU Standard PC (i440FX + PIIX, 1996), ... Call Trace dump_stack_lvl+0x6e/0xb0 dump_stack+0x10/0x20 __lock_acquire+0x73e/0x36c0 lock_acquire+0x182/0x450 _raw_spin_lock_irqsave+0x43/0x70 bpf_map_free_id.part.0+0x21/0x70 bpf_map_put+0xcf/0x110 bpf_map_fd_put_ptr+0x9a/0xb0 free_htab_elem+0x69/0xe0 htab_map_update_elem+0x50f/0xa80 bpf_fd_htab_map_update_elem+0x131/0x270 htab_map_update_elem+0x50f/0xa80 bpf_fd_htab_map_update_elem+0x131/0x270 bpf_map_update_value+0x266/0x380 __sys_bpf+0x21bb/0x36b0 __x64_sys_bpf+0x45/0x60 x64_sys_call+0x1b2a/0x20d0 do_syscall_64+0x5d/0x100 entry_SYSCALL_64_after_hwframe+0x76/0x7e One way to fix the lockdep warning is using raw_spinlock_t for map_idr_lock as well. However, bpf_map_alloc_id() invokes idr_alloc_cyclic() after acquiring map_idr_lock, it will trigger a similar lockdep warning because the slabs lock (s->cpu_slab->lock) is still a spinlock. Instead of changing map_idr_locks type, fix the issue by invoking htab_put_fd_value() after htab_unlock_bucket(). However, only deferring the invocation of htab_put_fd_value() is not enough, because the old map pointers in htab of maps can not be saved during batched deletion. Therefore, also defer the invocation of free_htab_elem(), so these to-be-freed elements could be linked together similar to lru map. There are four callers for ->map_fd_put_ptr (1) alloc_htab_elem() (through htab_put_fd_value()) It invokes ->map_fd_put_ptr() under a raw_spinlock_t. The invocation of htab_put_fd_value() can not simply move after htab_unlock_bucket(), because the old element has already been stashed in htab->extra_elems. It may be reused immediately after htab_unlock_bucket() and the invocation of htab_put_fd_value() after htab_unlock_bucket() may release the newly-added element incorrectly. Therefore, saving the map pointer of the old element for htab of maps before unlocking the bucket and releasing the map_ptr after unlock. Beside the map pointer in the old element, should do the same thing for the special fields in the old element as well. (2) free_htab_elem() (through htab_put_fd_value()) Its caller includes __htab_map_lookup_and_delete_elem(), htab_map_delete_elem() and __htab_map_lookup_and_delete_batch(). For htab_map_delete_elem(), simply invoke free_htab_elem() after htab_unlock_bucket(). For __htab_map_lookup_and_delete_batch(), just like lru map, linking the to-be-freed element into node_to_free list and invoking free_htab_elem() for these element after unlock. It is safe to reuse batch_flink as the link for node_to_free, because these elements have been removed from the hash llist. Because htab of maps doesnt support lookup_and_delete operation, __htab_map_lookup_and_delete_elem() doesnt have the problem, so kept it as ---truncated---",
  "keyphrases": {
    "rootcause": [
      "Invalid wait context"
    ]
  },
  "timestamp": "2025-07-13T23:51:06.713988",
  "retriever_config": {
    "weights": {
      "dense": 0.35,
      "sparse": 0.4,
      "graph": 0.25
    },
    "use_graph": true,
    "use_rag": true,
    "use_sparse": true
  },
  "raw_results": {
    "graph": [
      {
        "cwe_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "abstraction": "base",
        "score": 3.8870000000000005,
        "description": "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "abstraction": "base",
        "score": 3.1616,
        "description": "CWE-770: Allocation of Resources Without Limits or Throttling...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "364",
        "name": "Signal Handler Race Condition",
        "abstraction": "base",
        "score": 2.3400000000000003,
        "description": "CWE-364: Signal Handler Race Condition...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1325",
        "name": "Improperly Controlled Sequential Memory Allocation",
        "abstraction": "base",
        "score": 2.3400000000000003,
        "description": "CWE-1325: Improperly Controlled Sequential Memory Allocation...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "772",
        "name": "Missing Release of Resource after Effective Lifetime",
        "abstraction": "base",
        "score": 2.2100000000000004,
        "description": "CWE-772: Missing Release of Resource after Effective Lifetime...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "73",
        "name": "External Control of File Name or Path",
        "abstraction": "base",
        "score": 2.2100000000000004,
        "description": "CWE-73: External Control of File Name or Path...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "456",
        "name": "Missing Initialization of a Variable",
        "abstraction": "variant",
        "score": 1.83936,
        "description": "CWE-456: Missing Initialization of a Variable...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "363",
        "name": "Race Condition Enabling Link Following",
        "abstraction": "base",
        "score": 1.8252000000000006,
        "description": "CWE-363: Race Condition Enabling Link Following...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "123",
        "name": "Write-what-where Condition",
        "abstraction": "base",
        "score": 1.7680000000000005,
        "description": "CWE-123: Write-what-where Condition...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "120",
        "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
        "abstraction": "base",
        "score": 1.7680000000000005,
        "description": "CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')...",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "abstraction": "base",
        "score": 1.7680000000000005,
        "description": "CWE-434: Unrestricted Upload of File with Dangerous Type...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "59",
        "name": "Improper Link Resolution Before File Access ('Link Following')",
        "abstraction": "base",
        "score": 1.7680000000000005,
        "description": "CWE-59: Improper Link Resolution Before File Access ('Link Following')...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "41",
        "name": "Improper Resolution of Path Equivalence",
        "abstraction": "base",
        "score": 1.7680000000000005,
        "description": "CWE-41: Improper Resolution of Path Equivalence...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "826",
        "name": "Premature Release of Resource During Expected Lifetime",
        "abstraction": "base",
        "score": 1.6848000000000003,
        "description": "CWE-826: Premature Release of Resource During Expected Lifetime...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "562",
        "name": "Return of Stack Variable Address",
        "abstraction": "base",
        "score": 1.6848000000000003,
        "description": "CWE-562: Return of Stack Variable Address...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1341",
        "name": "Multiple Releases of Same Resource or Handle",
        "abstraction": "base",
        "score": 1.6848000000000003,
        "description": "CWE-1341: Multiple Releases of Same Resource or Handle...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1265",
        "name": "Unintended Reentrant Invocation of Non-reentrant Code Via Nested Calls",
        "abstraction": "base",
        "score": 1.6848000000000003,
        "description": "CWE-1265: Unintended Reentrant Invocation of Non-reentrant Code Via Nested Calls...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "833",
        "name": "Deadlock",
        "abstraction": "Base",
        "score": 1.680507633593506,
        "description": "The product contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "386",
        "name": "Symbolic Name not Mapping to Correct Object",
        "abstraction": "base",
        "score": 1.6744000000000003,
        "description": "CWE-386: Symbolic Name not Mapping to Correct Object...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "662",
        "name": "Improper Synchronization",
        "abstraction": "class",
        "score": 1.6736000000000002,
        "description": "CWE-662: Improper Synchronization...",
        "mapping_usage": "Discouraged"
      }
    ],
    "dense": [
      {
        "cwe_id": "667",
        "name": "Improper Locking",
        "abstraction": "Class",
        "score": 0.5111993195183306,
        "description": "The product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors....",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "911",
        "name": "Improper Update of Reference Count",
        "abstraction": "Base",
        "score": 0.48466659314621596,
        "description": "The product uses a reference count to manage a resource, but it does not update or incorrectly updates the reference count....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "909",
        "name": "Missing Initialization of Resource",
        "abstraction": "Class",
        "score": 0.4834392381928876,
        "description": "The product does not initialize a critical resource....",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "abstraction": "Class",
        "score": 0.47502677869840926,
        "description": "The product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code ...",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "833",
        "name": "Deadlock",
        "abstraction": "Base",
        "score": 0.46748259137984627,
        "description": "The product contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "416",
        "name": "Use After Free",
        "abstraction": "Variant",
        "score": 0.4668792036771806,
        "description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a locati...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "366",
        "name": "Race Condition within a Thread",
        "abstraction": "Base",
        "score": 0.46674708863947934,
        "description": "If two threads of execution use a resource simultaneously, there exists the possibility that resources may be used while invalid, in turn making the state of execution undefined....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "476",
        "name": "NULL Pointer Dereference",
        "abstraction": "Base",
        "score": 0.4640319610331123,
        "description": "The product dereferences a pointer that it expects to be valid but is NULL....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "126",
        "name": "Buffer Over-read",
        "abstraction": "Variant",
        "score": 0.4640279279447188,
        "description": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "763",
        "name": "Release of Invalid Pointer or Reference",
        "abstraction": "Base",
        "score": 0.4639064541675304,
        "description": "The product attempts to return a memory resource to the system, but it calls the wrong release function or calls the appropriate release function incorrectly....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "401",
        "name": "Missing Release of Memory after Effective Lifetime",
        "abstraction": "Variant",
        "score": 0.4518782881382143,
        "description": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "415",
        "name": "Double Free",
        "abstraction": "Variant",
        "score": 0.447962422713855,
        "description": "The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "131",
        "name": "Incorrect Calculation of Buffer Size",
        "abstraction": "Base",
        "score": 0.44286697787279633,
        "description": "The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "908",
        "name": "Use of Uninitialized Resource",
        "abstraction": "Base",
        "score": 0.4397181550982778,
        "description": "The product uses or accesses a resource that has not been initialized....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "244",
        "name": "Improper Clearing of Heap Memory Before Release ('Heap Inspection')",
        "abstraction": "Variant",
        "score": 0.43759126859225284,
        "description": "Using realloc() to resize buffers that store sensitive information can leave the sensitive information exposed to attack, because it is not removed from memory....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "122",
        "name": "Heap-based Buffer Overflow",
        "abstraction": "Variant",
        "score": 0.43637975262424866,
        "description": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine suc...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "404",
        "name": "Improper Resource Shutdown or Release",
        "abstraction": "Class",
        "score": 0.43508556250196295,
        "description": "The product does not release or incorrectly releases a resource before it is made available for re-use....",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "761",
        "name": "Free of Pointer not at Start of Buffer",
        "abstraction": "Variant",
        "score": 0.4344846592698152,
        "description": "The product calls free() on a pointer to a memory resource that was allocated on the heap, but the pointer is not at the start of the buffer....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "367",
        "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
        "abstraction": "Base",
        "score": 0.4322758494846547,
        "description": "The product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can ca...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "403",
        "name": "Exposure of File Descriptor to Unintended Control Sphere ('File Descriptor Leak')",
        "abstraction": "Base",
        "score": 0.42956456458551734,
        "description": "A process does not close sensitive file descriptors before invoking a child process, which allows the child to perform unauthorized I/O operations using those descriptors....",
        "mapping_usage": "Allowed"
      }
    ],
    "sparse": [
      {
        "cwe_id": "667",
        "name": "Improper Locking",
        "abstraction": "Class",
        "score": 1677.9526894175056,
        "description": "The product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors....",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "abstraction": "Class",
        "score": 1664.6424008866934,
        "description": "The product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code ...",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "674",
        "name": "Uncontrolled Recursion",
        "abstraction": "Class",
        "score": 1636.0753807631363,
        "description": "The product does not properly control the amount of recursion that takes place,  consuming excessive resources, such as allocated memory or the program stack....",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "abstraction": "Base",
        "score": 1634.423950360801,
        "description": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neu...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "abstraction": "Base",
        "score": 1618.5955293780628,
        "description": "The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the in...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "367",
        "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
        "abstraction": "Base",
        "score": 1612.3668460479155,
        "description": "The product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can ca...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "824",
        "name": "Access of Uninitialized Pointer",
        "abstraction": "Base",
        "score": 1612.0286051157548,
        "description": "The product accesses or uses a pointer that has not been initialized....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "226",
        "name": "Sensitive Information in Resource Not Removed Before Reuse",
        "abstraction": "Base",
        "score": 1611.0464753410633,
        "description": "The product releases a resource such as memory or a file so that it can be made available for reuse, but it does not clear or \"zeroize\" the information contained in the resource before the product per...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1390",
        "name": "Weak Authentication",
        "abstraction": "Class",
        "score": 1598.2243243437656,
        "description": "The product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct....",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "863",
        "name": "Incorrect Authorization",
        "abstraction": "Class",
        "score": 1593.099479757156,
        "description": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check....",
        "mapping_usage": "Allowed-with-Review"
      }
    ]
  },
  "score_statistics": {
    "dense": {
      "min": 0.42956456458551734,
      "max": 0.5111993195183306,
      "mean": 0.4567607328639653,
      "median": 0.45789237115287235,
      "count": 20
    },
    "sparse": {
      "min": 1593.099479757156,
      "max": 1677.9526894175056,
      "mean": 1625.8455681411856,
      "median": 1615.4811877129891,
      "count": 10
    },
    "graph": {
      "min": 1.6736000000000002,
      "max": 3.8870000000000005,
      "mean": 2.0210433816796756,
      "median": 1.7680000000000005,
      "count": 20
    }
  }
}