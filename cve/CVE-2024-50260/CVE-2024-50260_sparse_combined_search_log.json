{
  "method": "sparse_combined",
  "query": "In the Linux kernel, the following vulnerability has been resolved sock_map fix a NULL pointer dereference in sock_map_link_update_prog() The following race condition could trigger a NULL pointer dereference sock_map_link_detach() sock_map_link_update_prog() mutex_lock(&sockmap_mutex) ... sockmap_link->map = NULL mutex_unlock(&sockmap_mutex) mutex_lock(&sockmap_mutex) ... sock_map_prog_link_lookup(sockmap_link->map) mutex_unlock(&sockmap_mutex) Fix it by adding a NULL pointer check. In this specific case, it makes no sense to update a link which is being released.",
  "keyphrases": {
    "rootcause": [
      "race condition"
    ],
    "weakness": [
      "NULL pointer dereference"
    ]
  },
  "timestamp": "2025-07-13T19:59:05.772111",
  "results_count": 13,
  "results_summary": [
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 1000.0
    },
    {
      "doc_id": "476",
      "name": "NULL Pointer Dereference",
      "score": 442.6869389654693
    },
    {
      "doc_id": "252",
      "name": "Unchecked Return Value",
      "score": 383.7118822580333
    },
    {
      "doc_id": "665",
      "name": "Improper Initialization",
      "score": 371.80075418005504
    },
    {
      "doc_id": "824",
      "name": "Access of Uninitialized Pointer",
      "score": 364.03507207896376
    }
  ]
}