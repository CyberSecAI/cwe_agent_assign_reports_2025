{
  "cve_id": "CVE-2024-7417",
  "description": "The Royal Elementor Addons and Templates plugin for WordPress is vulnerable to **Information Exposure** in all versions up to, and including, 1.3.986 via the data_fetch. This makes it possible for authenticated attackers, with subscriber-level access and above, to extract data from password protected posts.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "Information Exposure",
    "impact": "extract data from password protected posts",
    "vector": "",
    "attacker": "authenticated attackers with subscriber-level access and above",
    "product": "Royal Elementor Addons and Templates plugin for WordPress",
    "version": "all versions up to and including 1.3.986",
    "component": "data_fetch"
  },
  "reference_content": "Based on the provided information, here's a breakdown of the vulnerability:\n\n**CVE ID:** CVE-2024-7417\n\n**Root Cause of Vulnerability:**\nThe vulnerability stems from insufficient access control checks within the `data_fetch` function of the `WPR_Ajax_Search` class in the Royal Elementor Addons and Templates plugin. Specifically, it allows access to password-protected posts via AJAX requests even when the user should not have permission.\n\n**Weaknesses/Vulnerabilities Present:**\n- **Improper Access Control:** The code does not properly verify if the current user has the necessary permission to view password-protected posts before including them in the search results. This is exposed through the `wpr_data_fetch` AJAX action.\n- **Information Exposure:** The vulnerability leads to the disclosure of sensitive information from password-protected posts.\n\n**Impact of Exploitation:**\n- An attacker with minimal privileges (Subscriber+) can bypass password protection on posts and extract content, potentially including sensitive or private data.\n\n**Attack Vectors:**\n- The vulnerability is exploited via AJAX calls to the `wp_ajax_wpr_data_fetch` or `wp_ajax_nopriv_wpr_data_fetch` action.\n- The attacker sends a crafted AJAX request containing the necessary parameters to trigger the vulnerable code in `wpr-ajax-search.php`, which is the `data_fetch` function, bypassing the access control checks.\n\n**Required Attacker Capabilities/Position:**\n- The attacker must have an account on the WordPress site with at least Subscriber-level access.\n- The attacker needs to be able to send an AJAX request to the WordPress site.\n\n**Technical Details:**\nThe vulnerable code is located in the `data_fetch` function of the `WPR_Ajax_Search` class within the `wpr-ajax-search.php` file.\n\nThe original code (before patch) had a conditional check:\n```php\nif ( 'yes' !== sanitize_text_field($_POST['wpr_show_ps_pt'] ) )\n```\nThis check only considered a setting controlled by the user which intended to hide the password protected posts. The problem was that it did not also check if the user had the `read_private_posts` capability. Thus, if the user had the `read_private_posts` capability, then password protected posts would be included in the search results, regardless of the `wpr_show_ps_pt` setting, meaning a subscriber or higher could bypass this protection.\n\nThe patched code includes an additional check using `current_user_can('read_private_posts')`:\n```php\nif ( ( 'yes' !== sanitize_text_field($_POST['wpr_show_ps_pt'] ) ) || !$can_view_protected_posts )\n```\nAnd also, it added this check on where the data is rendered:\n```php\n<?php if ( !post_password_required() || $can_view_protected_posts ) : ?>\n```\nThis ensures that password-protected posts are only included if the user is authorized to view them or when the post is not password protected.\n\n**Affected Versions:**\n- Royal Elementor Addons and Templates plugin versions <= 1.3.986\n\n**Patched Version:**\n- Royal Elementor Addons and Templates plugin version 1.3.987\n\n**Additional Notes:**\nThe Wordfence article provides additional context, confirming that the vulnerability is an information exposure issue. It also indicates that the vulnerability was discovered and reported by the researcher \"stealthcopter\". The fix involves correctly checking the user's ability to view password-protected posts within the AJAX search functionality.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-862 | Missing Authorization [CWE-862: Missing Authorization] | 0.9 | Class | Primary | Allowed-with-Review |\n| CWE-200 | Exposure of Sensitive Information to an Unauthorized Actor [CWE-200: Exposure of Sensitive Information to an Unauthorized Actor] | 0.8 | Class | Secondary | Discouraged |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is **CWE-862 [CWE-862: Missing Authorization]**, as the vulnerability description and CVE details clearly state that the code **does not properly verify if the current user has the necessary permission** to view password-protected posts before including them in the search results. **CWE-862 [CWE-862: Missing Authorization]** is a Class-level CWE, and while there might be more specific Base or Variant level CWEs, none are provided in the Retriever Results that perfectly capture the **missing authorization** aspect in this particular scenario. The resulting impact of the **missing authorization** is **CWE-200 [CWE-200: Exposure of Sensitive Information to an Unauthorized Actor]**.\n\n```mermaid\ngraph TD\n    cwe862[\"CWE-862: Missing Authorization\"]\n    cwe200[\"CWE-200: Exposure of Sensitive Information to an Unauthorized Actor\"]\n\n    cwe862 -->|CANPRECEDE| cwe200\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe862 primary\n    class cwe200 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **CWE-862 [CWE-862: Missing Authorization]**, where the application **fails to check if the user is authorized** to view password-protected posts. This leads directly to **CWE-200 [CWE-200: Exposure of Sensitive Information to an Unauthorized Actor]**, as sensitive information from those posts is exposed to unauthorized users.\n\n## Summary of Analysis\nThe initial analysis identified **CWE-862 [CWE-862: Missing Authorization]** as the primary weakness due to the **lack of proper authorization checks** for accessing password-protected posts. This directly leads to **CWE-200 [CWE-200: Exposure of Sensitive Information to an Unauthorized Actor]**. The evidence from the CVE description confirms this: \"The vulnerability stems from insufficient access control checks within the `data_fetch` function... Specifically, it allows access to password-protected posts via AJAX requests even when the user should not have permission.\" The provided graph relationships influenced the decision by highlighting potential chains of vulnerabilities, further solidifying the understanding of how the **missing authorization** leads to **information exposure**. The selected CWEs are at the optimal level of specificity because **CWE-862 [CWE-862: Missing Authorization]** accurately captures the root cause, and **CWE-200 [CWE-200: Exposure of Sensitive Information to an Unauthorized Actor]** represents the direct consequence of this **missing authorization**.\n\nRelevant CWE Information:\n*   **CWE-862 [CWE-862: Missing Authorization]:** The product does not perform an authorization check when an actor attempts to access a resource or perform an action.\n*   **CWE-200 [CWE-200: Exposure of Sensitive Information to an Unauthorized Actor]:** The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.\n*   **CWE-284 [CWE-284: Improper Access Control]:** This was considered, but it is too general. **CWE-862 [CWE-862: Missing Authorization]** is a more specific child of this CWE.\n*   **CWE-863 [CWE-863: Incorrect Authorization]:** This was considered, but the issue is a **missing authorization**, not an **incorrect authorization**.\n*   **CWE-359 [CWE-359: Exposure of Private Personal Information to an Unauthorized Actor]:** This was considered, but **CWE-200 [CWE-200: Exposure of Sensitive Information to an Unauthorized Actor]** is a more general form of this CWE, since the information doesn't have to be personal.\n*   **CWE-639 [CWE-639: Authorization Bypass Through User-Controlled Key]:** This was considered, but the bypass is not through user-controlled keys.\n*   **CWE-425 [CWE-425: Direct Request ('Forced Browsing')]:** This was considered, but **CWE-862 [CWE-862: Missing Authorization]** is more specific.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-862 | Missing Authorization [CWE-862: Missing Authorization] | 0.9 | Class | Primary | Allowed-with-Review |\n| CWE-200 | Exposure of Sensitive Information to an Unauthorized Actor [CWE-200: Exposure of Sensitive Information to an Unauthorized Actor] | 0.8 | Class | Secondary | Discouraged |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is **CWE-862 [CWE-862: Missing Authorization]**, as the vulnerability description and CVE details clearly state that the code **does not properly verify if the current user has the necessary permission** to view password-protected posts before including them in the search results. **CWE-862 [CWE-862: Missing Authorization]** is a Class-level CWE, and while there might be more specific Base or Variant level CWEs, none are provided in the Retriever Results that perfectly capture the **missing authorization** aspect in this particular scenario. The resulting impact of the **missing authorization** is **CWE-200 [CWE-200: Exposure of Sensitive Information to an Unauthorized Actor]**.\n\n```mermaid\ngraph TD\n    cwe862[\"CWE-862: Missing Authorization\"]\n    cwe200[\"CWE-200: Exposure of Sensitive Information to an Unauthorized Actor\"]\n\n    cwe862 -->|CANPRECEDE| cwe200\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe862 primary\n    class cwe200 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **CWE-862 [CWE-862: Missing Authorization]**, where the application **fails to check if the user is authorized** to view password-protected posts. This leads directly to **CWE-200 [CWE-200: Exposure of Sensitive Information to an Unauthorized Actor]**, as sensitive information from those posts is exposed to unauthorized users.\n\n## Summary of Analysis\nThe initial analysis identified **CWE-862 [CWE-862: Missing Authorization]** as the primary weakness due to the **lack of proper authorization checks** for accessing password-protected posts. This directly leads to **CWE-200 [CWE-200: Exposure of Sensitive Information to an Unauthorized Actor]**. The evidence from the CVE description confirms this: \"The vulnerability stems from insufficient access control checks within the `data_fetch` function... Specifically, it allows access to password-protected posts via AJAX requests even when the user should not have permission.\" The provided graph relationships influenced the decision by highlighting potential chains of vulnerabilities, further solidifying the understanding of how the **missing authorization** leads to **information exposure**. The selected CWEs are at the optimal level of specificity because **CWE-862 [CWE-862: Missing Authorization]** accurately captures the root cause, and **CWE-200 [CWE-200: Exposure of Sensitive Information to an Unauthorized Actor]** represents the direct consequence of this **missing authorization**.\n\nRelevant CWE Information:\n*   **CWE-862 [CWE-862: Missing Authorization]:** The product does not perform an authorization check when an actor attempts to access a resource or perform an action.\n*   **CWE-200 [CWE-200: Exposure of Sensitive Information to an Unauthorized Actor]:** The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.\n*   **CWE-284 [CWE-284: Improper Access Control]:** This was considered, but it is too general. **CWE-862 [CWE-862: Missing Authorization]** is a more specific child of this CWE.\n*   **CWE-863 [CWE-863: Incorrect Authorization]:** This was considered, but the issue is a **missing authorization**, not an **incorrect authorization**.\n*   **CWE-359 [CWE-359: Exposure of Private Personal Information to an Unauthorized Actor]:** This was considered, but **CWE-200 [CWE-200: Exposure of Sensitive Information to an Unauthorized Actor]** is a more general form of this CWE, since the information doesn't have to be personal.\n*   **CWE-639 [CWE-639: Authorization Bypass Through User-Controlled Key]:** This was considered, but the bypass is not through user-controlled keys.\n*   **CWE-425 [CWE-425: Direct Request ('Forced Browsing')]:** This was considered, but **CWE-862 [CWE-862: Missing Authorization]** is more specific.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-359:**\n- 359 (Exposure of Private Personal Information to an Unauthorized Actor) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "284",
        "name": "Improper Access Control",
        "source": "sparse"
      },
      "similarity": 284.9152375190221
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 284.8256084388319
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 277.0430095554365
    },
    {
      "metadata": {
        "doc_id": "200",
        "name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "source": "sparse"
      },
      "similarity": 268.6375343328301
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 267.5723912257677
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 267.5129628938992
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 258.2425625311394
    },
    {
      "metadata": {
        "doc_id": "639",
        "name": "Authorization Bypass Through User-Controlled Key",
        "source": "sparse"
      },
      "similarity": 257.46429368676127
    },
    {
      "metadata": {
        "doc_id": "359",
        "name": "Exposure of Private Personal Information to an Unauthorized Actor",
        "type": "Base",
        "original_content": "The product does not properly prevent a person's private, personal information from being accessed by actors who either (1) are not explicitly authorized to access the information or (2) do not have the implicit consent of the person about whom the information is collected.",
        "keyphrase_source": "weakness:Information Exposure",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5286729021575378,
            "graph": 1.7138929083606937
          }
        }
      },
      "similarity": 0.5286729021575378
    },
    {
      "doc_id": "471",
      "text": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
      "score": 2.7196000000000002,
      "metadata": {
        "doc_id": "471",
        "name": "Modification of Assumed-Immutable Data (MAID)",
        "type": "base",
        "original_content": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
        "relationships": [
          {
            "source_id": "471",
            "target_id": "621",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "607",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "602",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "473",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "472",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "291",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "1321",
            "label": "CANFOLLOW",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "1282",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "664",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "664",
            "target_id": "471",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "621",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "607",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "602",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "473",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "472",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "291",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1321",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1282",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.5599999999999999,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_up",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "425",
                  "471",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "425"
            },
            "abstraction_path_up": {
              "path": [
                [
                  "472",
                  "471",
                  "CHILDOF"
                ]
              ],
              "score": 0.5599999999999999,
              "type": "abstraction_path_up",
              "source": "472"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "425",
                  "471",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "425"
            }
          }
        },
        "abstraction_level": "base",
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.7196000000000002
          }
        }
      },
      "similarity": 2.7196000000000002
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-359",
      "CWE-862",
      "CWE-639",
      "CWE-284",
      "CWE-200",
      "CWE-425"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}