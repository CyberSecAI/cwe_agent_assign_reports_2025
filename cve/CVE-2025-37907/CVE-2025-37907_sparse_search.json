{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved accel/ivpu Fix locking order in ivpu_job_submit Fix deadlock in job submission and abort handling. When a thread aborts currently executing jobs due to a fault, it first locks the global lock protecting submitted_jobs (#1). After the last job is destroyed, it proceeds to release the related context and locks file_priv (#2). Meanwhile, in the job submission thread, the file_priv lock (#2) is taken first, and then the submitted_jobs lock (#1) is obtained when a job is added to the submitted jobs list. CPU0 CPU1 ---- ---- (for example due to a fault) (jobs submissions keep coming) lock(&vdev->submitted_jobs_lock) #1 ivpu_jobs_abort_all() job_destroy() lock(&file_priv->lock) #2 lock(&vdev->submitted_jobs_lock) #1 file_priv_release() lock(&vdev->context_list_lock) lock(&file_priv->lock) #2 This order of locking causes a deadlock. To resolve this issue, change the order of locking in ivpu_job_submit().",
  "keyphrases": {
    "rootcause": [
      "deadlock"
    ]
  },
  "timestamp": "2025-07-14 21:49:41",
  "cve_id": "CVE-2025-37907",
  "result_count": 10,
  "results": [
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "score": 919.8898293773938,
      "search_source": "rootcause:deadlock"
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "score": 859.440242145269,
      "search_source": "rootcause:deadlock"
    },
    {
      "cwe_id": "764",
      "name": "Multiple Locks of a Critical Resource",
      "score": 727.131334106469,
      "search_source": "rootcause:deadlock"
    },
    {
      "cwe_id": "413",
      "name": "Improper Resource Locking",
      "score": 699.9042360734991,
      "search_source": "rootcause:deadlock"
    },
    {
      "cwe_id": "663",
      "name": "Use of a Non-reentrant Function in a Concurrent Context",
      "score": 677.7632098087965,
      "search_source": "rootcause:deadlock"
    },
    {
      "cwe_id": "412",
      "name": "Unrestricted Externally Accessible Lock",
      "score": 652.4055442529666,
      "search_source": "rootcause:deadlock"
    },
    {
      "cwe_id": "1222",
      "name": "Insufficient Granularity of Address Regions Protected by Register Locks",
      "score": 649.0456908496636,
      "search_source": "rootcause:deadlock"
    },
    {
      "cwe_id": "609",
      "name": "Double-Checked Locking",
      "score": 631.4455918924853,
      "search_source": "rootcause:deadlock"
    },
    {
      "cwe_id": "319",
      "name": "Cleartext Transmission of Sensitive Information",
      "score": 626.6515951574297,
      "search_source": "rootcause:deadlock"
    },
    {
      "cwe_id": "451",
      "name": "User Interface (UI) Misrepresentation of Critical Information",
      "score": 620.2582034648955,
      "search_source": "rootcause:deadlock"
    }
  ]
}