{
  "cve_id": "CVE-2025-31383",
  "description": "Cross-Site Request Forgery (CSRF) vulnerability in FrescoChat Live Chat allows Stored XSS. This issue affects FrescoChat Live Chat from n/a through 3.2.6.",
  "key_phrases": {
    "component": "",
    "rootcause": "",
    "vector": "",
    "weakness": "CSRF vulnerability, XSS",
    "product": "FrescoChat Live Chat",
    "impact": "",
    "attacker": "",
    "version": "through 3.2.6"
  },
  "reference_content": "Root cause of vulnerability:\nThe WordPress FrescoChat Live Chat Plugin is vulnerable to Cross Site Request Forgery (CSRF).\n\nWeaknesses/vulnerabilities present:\nCross Site Request Forgery (CSRF) vulnerability.\n\nImpact of exploitation:\nA malicious actor can force higher privileged users to execute unwanted actions under their current authentication. The impact varies case by case.\n\nAttack vectors:\nNot specified in the content.\n\nRequired attacker capabilities/position:\nUnauthenticated.\n\nMitigation or fix:\nNo official fix available. Patchstack vPatching can auto-mitigate the vulnerability.\n\nAdditional details:\n- Vulnerable versions: <= 3.2.6\n- CVSS score: 7.1 (Low severity)\n- OWASP Top 10: A3: Injection\n- Reported by: johska on March 30, 2025\n- Published by Patchstack on April 9, 2025.\n\nThe content provides more detail than the official CVE description by specifying the vulnerable plugin, versions, and providing a CVSS score.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 0.9 | Compound | Allowed | Primary CWE. The vulnerability description explicitly mentions a \"CSRF vulnerability\". |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.9 | Base | Allowed | Secondary CWE. The vulnerability description indicates that the CSRF vulnerability allows for Stored XSS. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe analysis considered the following relationships:\n  - CWE-79 is a base CWE related to XSS, which is a direct consequence of the **CSRF vulnerability**.\n  - CWE-352 is a compound CWE representing Cross-Site Request Forgery, the root cause of the vulnerability.\n  - The relationship between CSRF leading to XSS is a common attack pattern.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe352 -->|CANPRECEDE| cwe79\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain is as follows:\n  1. The application has a **CSRF vulnerability** (CWE-352).\n  2. An attacker exploits this CSRF vulnerability.\n  3. The exploitation leads to Stored XSS (CWE-79) because the application **does not neutralize input** properly.\n\n## Summary of Analysis\nThe initial analysis focused on identifying the root cause and the resulting weakness. The description clearly states a \"CSRF vulnerability\" which directly leads to Stored XSS. The retriever results also pointed towards both CWE-352 and CWE-79.\n\nThe relationship graph shows that CWE-352 can precede CWE-79, reinforcing the idea that the CSRF is the root cause that allows for XSS.\n\nThe evidence from the vulnerability description: \"Cross-Site Request Forgery (CSRF) vulnerability in FrescoChat Live Chat allows Stored XSS\" was used to justify selecting both CWE-352 and CWE-79.\n\nThe selected CWEs are at the optimal level of specificity because CWE-352 represents the **CSRF vulnerability** and CWE-79 represents the resulting XSS.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n## CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n### Detailed Analysis of Selected CWEs:\n\n*   **CWE-352: Cross-Site Request Forgery (CSRF)**\n    *   **Technical Explanation:** The application is vulnerable to CSRF, meaning an attacker can trick a user into performing actions they did not intend to. This is possible because the application **does not properly verify** the origin of the request.\n    *   **Security Implications:** An attacker can force a user to change settings, modify content, or perform other actions that can compromise the security of the application and other users.\n    *   **Relationship:** This is the root cause of the vulnerability, which leads to XSS.\n    *   **Mapping Guidance:** The usage is \"ALLOWED\".\n*   **CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')**\n    *   **Technical Explanation:** The application **does not properly neutralize** user-supplied input before displaying it on a web page. This allows an attacker to inject malicious scripts into the page, which will be executed by other users who visit the page.\n    *   **Security Implications:** An attacker can steal cookies, redirect users to malicious websites, or deface the website.\n    *   **Relationship:** This is a consequence of the CSRF vulnerability. An attacker exploits the **CSRF vulnerability** to inject malicious scripts.\n    *   **Mapping Guidance:** The usage is \"ALLOWED\".\n\n### CWEs Considered But Not Used:\n\n*   **CWE-116: Improper Encoding or Escaping of Output:** While encoding/escaping issues can contribute to XSS, the primary issue is the **lack of neutralization** which makes CWE-79 a better fit.\n*   **CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS):** This is a more specific variant of CWE-79. While relevant, CWE-79 is a more general description of the vulnerability and is sufficient.\n*   **CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'):** The description mentions XSS, not SQL injection, making this CWE irrelevant.\n*   **CWE-434: Unrestricted Upload of File with Dangerous Type:** This CWE is related to file uploads, which are not mentioned in the vulnerability description.\n*   **CWE-918: Server-Side Request Forgery (SSRF):** This CWE is related to server-side requests, which are not mentioned in the vulnerability description.\n*   **CWE-184: Incomplete List of Disallowed Inputs**: This is not the primary issue, the primary issue is the **lack of neutralization** and **CSRF**.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 0.9 | Compound | Allowed | Primary CWE. The vulnerability description explicitly mentions a \"CSRF vulnerability\". |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.9 | Base | Allowed | Secondary CWE. The vulnerability description indicates that the CSRF vulnerability allows for Stored XSS. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe analysis considered the following relationships:\n  - CWE-79 is a base CWE related to XSS, which is a direct consequence of the **CSRF vulnerability**.\n  - CWE-352 is a compound CWE representing Cross-Site Request Forgery, the root cause of the vulnerability.\n  - The relationship between CSRF leading to XSS is a common attack pattern.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe352 -->|CANPRECEDE| cwe79\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain is as follows:\n  1. The application has a **CSRF vulnerability** (CWE-352).\n  2. An attacker exploits this CSRF vulnerability.\n  3. The exploitation leads to Stored XSS (CWE-79) because the application **does not neutralize input** properly.\n\n## Summary of Analysis\nThe initial analysis focused on identifying the root cause and the resulting weakness. The description clearly states a \"CSRF vulnerability\" which directly leads to Stored XSS. The retriever results also pointed towards both CWE-352 and CWE-79.\n\nThe relationship graph shows that CWE-352 can precede CWE-79, reinforcing the idea that the CSRF is the root cause that allows for XSS.\n\nThe evidence from the vulnerability description: \"Cross-Site Request Forgery (CSRF) vulnerability in FrescoChat Live Chat allows Stored XSS\" was used to justify selecting both CWE-352 and CWE-79.\n\nThe selected CWEs are at the optimal level of specificity because CWE-352 represents the **CSRF vulnerability** and CWE-79 represents the resulting XSS.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n## CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n### Detailed Analysis of Selected CWEs:\n\n*   **CWE-352: Cross-Site Request Forgery (CSRF)**\n    *   **Technical Explanation:** The application is vulnerable to CSRF, meaning an attacker can trick a user into performing actions they did not intend to. This is possible because the application **does not properly verify** the origin of the request.\n    *   **Security Implications:** An attacker can force a user to change settings, modify content, or perform other actions that can compromise the security of the application and other users.\n    *   **Relationship:** This is the root cause of the vulnerability, which leads to XSS.\n    *   **Mapping Guidance:** The usage is \"ALLOWED\".\n*   **CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')**\n    *   **Technical Explanation:** The application **does not properly neutralize** user-supplied input before displaying it on a web page. This allows an attacker to inject malicious scripts into the page, which will be executed by other users who visit the page.\n    *   **Security Implications:** An attacker can steal cookies, redirect users to malicious websites, or deface the website.\n    *   **Relationship:** This is a consequence of the CSRF vulnerability. An attacker exploits the **CSRF vulnerability** to inject malicious scripts.\n    *   **Mapping Guidance:** The usage is \"ALLOWED\".\n\n### CWEs Considered But Not Used:\n\n*   **CWE-116: Improper Encoding or Escaping of Output:** While encoding/escaping issues can contribute to XSS, the primary issue is the **lack of neutralization** which makes CWE-79 a better fit.\n*   **CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS):** This is a more specific variant of CWE-79. While relevant, CWE-79 is a more general description of the vulnerability and is sufficient.\n*   **CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'):** The description mentions XSS, not SQL injection, making this CWE irrelevant.\n*   **CWE-434: Unrestricted Upload of File with Dangerous Type:** This CWE is related to file uploads, which are not mentioned in the vulnerability description.\n*   **CWE-918: Server-Side Request Forgery (SSRF):** This CWE is related to server-side requests, which are not mentioned in the vulnerability description.\n*   **CWE-184: Incomplete List of Disallowed Inputs**: This is not the primary issue, the primary issue is the **lack of neutralization** and **CSRF**.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: XSS",
        "match_reason": "exact_match_compound_part_1"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 208.45334600223265
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 149.55783859393344
    },
    {
      "metadata": {
        "doc_id": "1004",
        "name": "Sensitive Cookie Without 'HttpOnly' Flag",
        "source": "sparse"
      },
      "similarity": 141.94845258030094
    },
    {
      "metadata": {
        "doc_id": "80",
        "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
        "source": "sparse"
      },
      "similarity": 137.89786701927127
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse"
      },
      "similarity": 135.49015125056553
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 132.4447133935014
    },
    {
      "metadata": {
        "doc_id": "918",
        "name": "Server-Side Request Forgery (SSRF)",
        "source": "sparse"
      },
      "similarity": 131.40747982240117
    },
    {
      "metadata": {
        "doc_id": "790",
        "name": "Improper Filtering of Special Elements",
        "type": "Class",
        "original_content": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
        "keyphrase_source": "weakness:XSS",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.5280354325065734
          }
        }
      },
      "similarity": 0.5280354325065734
    },
    {
      "doc_id": "184",
      "text": "CWE-184: Incomplete List of Disallowed Inputs",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "184",
        "name": "Incomplete List of Disallowed Inputs",
        "type": "base",
        "original_content": "CWE-184: Incomplete List of Disallowed Inputs",
        "relationships": [
          {
            "source_id": "184",
            "target_id": "692",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "434",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "78",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "79",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "1023",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "693",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "86",
            "target_id": "184",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "78",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "693",
            "target_id": "184",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "692",
            "target_id": "184",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "692",
            "target_id": "184",
            "label": "STARTSWITH",
            "properties": {
              "view_id": "709"
            }
          },
          {
            "source_id": "625",
            "target_id": "184",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "434",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "186",
            "target_id": "184",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1023",
            "target_id": "184",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "79",
                  "184",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "79"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "79",
                  "184",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "79"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "184",
                  "79",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "79"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-116",
      "CWE-80",
      "CWE-79",
      "CWE-352",
      "CWE-184",
      "CWE-918",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}