{
  "query": "matrix-js-sdk is the Matrix Client-Server SDK for JavaScript and TypeScript. In matrix-js-sdk versions versions 9.11.0 through 34.7.0, the method `MatrixClient.sendSharedHistoryKeys` is vulnerable to interception by malicious homeservers. The method was introduced by MSC3061) and is commonly used to share historical message keys with newly invited users, granting them access to past messages in the room. However, it unconditionally sends these shared keys to all of the invited users devices, regardless of whether the users cryptographic identity is verified or whether the users devices are signed by that identity. This allows the attacker to potentially inject its own devices to receive sensitive historical keys without proper security checks. Note that this only affects clients running the SDK with the legacy crypto stack. Clients using the new Rust cryptography stack (i.e. those that call `MatrixClient.initRustCrypto()` instead of `MatrixClient.initCrypto()`) are unaffected by this vulnerability, because `MatrixClient.sendSharedHistoryKeys()` raises an exception in such environments. The vulnerability was fixed in matrix-js-sdk 34.8.0 by removing the vulnerable functionality. As a workaround, remove use of affected functionality from clients.",
  "count": 10,
  "results": [
    {
      "cwe_id": "290",
      "name": "Authentication Bypass by Spoofing",
      "abstraction": "Base",
      "score": 1058.357586617558,
      "original_score": 1058.357586617558,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "327",
      "name": "Use of a Broken or Risky Cryptographic Algorithm",
      "abstraction": "Class",
      "score": 930.470546960634,
      "original_score": 930.470546960634,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "abstraction": "Base",
      "score": 929.9585126347754,
      "original_score": 929.9585126347754,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "347",
      "name": "Improper Verification of Cryptographic Signature",
      "abstraction": "Base",
      "score": 928.8923435062529,
      "original_score": 928.8923435062529,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "abstraction": "Class",
      "score": 912.6935260934756,
      "original_score": 912.6935260934756,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "306",
      "name": "Missing Authentication for Critical Function",
      "abstraction": "Base",
      "score": 877.8678513465334,
      "original_score": 877.8678513465334,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "abstraction": "Base",
      "score": 877.4151917070787,
      "original_score": 877.4151917070787,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "522",
      "name": "Insufficiently Protected Credentials",
      "abstraction": "Class",
      "score": 870.1981952876936,
      "original_score": 870.1981952876936,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "79",
      "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "abstraction": "Base",
      "score": 869.598368436265,
      "original_score": 869.598368436265,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "668",
      "name": "Exposure of Resource to Wrong Sphere",
      "abstraction": "Class",
      "score": 867.2734385097979,
      "original_score": 867.2734385097979,
      "mapping_usage": "Discouraged"
    }
  ],
  "statistics": {
    "min": 867.2734385097979,
    "max": 1058.357586617558,
    "mean": 912.2725561100063,
    "median": 895.2806887200045,
    "count": 10
  }
}