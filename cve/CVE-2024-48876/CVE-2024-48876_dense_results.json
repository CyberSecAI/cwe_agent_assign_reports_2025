{
  "query": "In the Linux kernel, the following vulnerability has been resolved stackdepot fix stack_depot_save_flags() in NMI context Per documentation, stack_depot_save_flags() was meant to be usable from NMI context if STACK_DEPOT_FLAG_CAN_ALLOC is unset. However, it still would try to take the pool_lock in an attempt to save a stack trace in the current pool (if space is available). This could result in deadlock if an NMI is handled while pool_lock is already held. To avoid deadlock, only try to take the lock in NMI context and give up if unsuccessful. The documentation is fixed to clearly convey this.",
  "count": 20,
  "results": [
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "abstraction": "Base",
      "score": 0.4687774726412277,
      "original_score": 0.4687774726412277,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "562",
      "name": "Return of Stack Variable Address",
      "abstraction": "Base",
      "score": 0.45418527059573216,
      "original_score": 0.45418527059573216,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "413",
      "name": "Improper Resource Locking",
      "abstraction": "Base",
      "score": 0.44521519693954575,
      "original_score": 0.44521519693954575,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "abstraction": "Class",
      "score": 0.44314644607338316,
      "original_score": 0.44314644607338316,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "1325",
      "name": "Improperly Controlled Sequential Memory Allocation",
      "abstraction": "Base",
      "score": 0.4411317077444019,
      "original_score": 0.4411317077444019,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1260",
      "name": "Improper Handling of Overlap Between Protected Memory Ranges",
      "abstraction": "Base",
      "score": 0.4391580042295776,
      "original_score": 0.4391580042295776,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1231",
      "name": "Improper Prevention of Lock Bit Modification",
      "abstraction": "Base",
      "score": 0.42688836924672957,
      "original_score": 0.42688836924672957,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "abstraction": "Class",
      "score": 0.4268426498020909,
      "original_score": 0.4268426498020909,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "591",
      "name": "Sensitive Data Storage in Improperly Locked Memory",
      "abstraction": "Variant",
      "score": 0.4262499856124484,
      "original_score": 0.4262499856124484,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "abstraction": "Base",
      "score": 0.42406364059974744,
      "original_score": 0.42406364059974744,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "121",
      "name": "Stack-based Buffer Overflow",
      "abstraction": "Variant",
      "score": 0.4191778353656349,
      "original_score": 0.4191778353656349,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "244",
      "name": "Improper Clearing of Heap Memory Before Release ('Heap Inspection')",
      "abstraction": "Variant",
      "score": 0.41856965496269394,
      "original_score": 0.41856965496269394,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1342",
      "name": "Information Exposure through Microarchitectural State after Transient Execution",
      "abstraction": "Base",
      "score": 0.4172878838243179,
      "original_score": 0.4172878838243179,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "abstraction": "Variant",
      "score": 0.4165789174362984,
      "original_score": 0.4165789174362984,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 0.41469773829957723,
      "original_score": 0.41469773829957723,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "126",
      "name": "Buffer Over-read",
      "abstraction": "Variant",
      "score": 0.41468248279672204,
      "original_score": 0.41468248279672204,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1264",
      "name": "Hardware Logic with Insecure De-Synchronization between Control and Data Channels",
      "abstraction": "Base",
      "score": 0.4145799297684015,
      "original_score": 0.4145799297684015,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "674",
      "name": "Uncontrolled Recursion",
      "abstraction": "Class",
      "score": 0.41226835344658525,
      "original_score": 0.41226835344658525,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "1222",
      "name": "Insufficient Granularity of Address Regions Protected by Register Locks",
      "abstraction": "Variant",
      "score": 0.4116758803726572,
      "original_score": 0.4116758803726572,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1233",
      "name": "Security-Sensitive Hardware Controls with Missing Lock Bit Protection",
      "abstraction": "Base",
      "score": 0.41108937992388495,
      "original_score": 0.41108937992388495,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 0.41108937992388495,
    "max": 0.4687774726412277,
    "mean": 0.42731333998408283,
    "median": 0.4216207379826912,
    "count": 20
  }
}