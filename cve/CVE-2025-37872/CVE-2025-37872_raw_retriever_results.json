{
  "query": "In the Linux kernel, the following vulnerability has been resolved net txgbe fix memory leak in txgbe_probe() error path When txgbe_sw_init() is called, memory is allocated for wx->rss_key in wx_init_rss_key(). However, in txgbe_probe() function, the subsequent error paths after txgbe_sw_init() dont free the rss_key. Fix that by freeing it in error path along with wx->mac_table. Also change the label to which execution jumps when txgbe_sw_init() fails, because otherwise, it could lead to a double free for rss_key, when the mac_table allocation fails in wx_sw_init().",
  "keyphrases": {
    "rootcause": [
      "dont free rss_key in error path after txgbe_sw_init"
    ],
    "weakness": [
      "memory leak",
      "double free"
    ]
  },
  "timestamp": "2025-07-14T21:44:09.740193",
  "retriever_config": {
    "weights": {
      "dense": 0.35,
      "sparse": 0.4,
      "graph": 0.25
    },
    "use_graph": true,
    "use_rag": true,
    "use_sparse": true
  },
  "raw_results": {
    "graph": [
      {
        "cwe_id": "364",
        "name": "Signal Handler Race Condition",
        "abstraction": "base",
        "score": 2.8651999999999997,
        "description": "CWE-364: Signal Handler Race Condition...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "123",
        "name": "Write-what-where Condition",
        "abstraction": "base",
        "score": 2.4700000000000006,
        "description": "CWE-123: Write-what-where Condition...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "390",
        "name": "Detection of Error Condition Without Action",
        "abstraction": "base",
        "score": 2.2100000000000004,
        "description": "CWE-390: Detection of Error Condition Without Action...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "129",
        "name": "Improper Validation of Array Index",
        "abstraction": "variant",
        "score": 2.04,
        "description": "CWE-129: Improper Validation of Array Index...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "789",
        "name": "Memory Allocation with Excessive Size Value",
        "abstraction": "Variant",
        "score": 1.855404317947969,
        "description": "The product allocates memory based on an untrusted, large size value, but it does not ensure that the size is within expected limits, allowing arbitrary amounts of memory to be allocated....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "416",
        "name": "Use After Free",
        "abstraction": "Variant",
        "score": 1.79782876941265,
        "description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a locati...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "120",
        "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
        "abstraction": "base",
        "score": 1.7680000000000005,
        "description": "CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')...",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "823",
        "name": "Use of Out-of-range Pointer Offset",
        "abstraction": "base",
        "score": 1.7680000000000005,
        "description": "CWE-823: Use of Out-of-range Pointer Offset...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "826",
        "name": "Premature Release of Resource During Expected Lifetime",
        "abstraction": "base",
        "score": 1.6848000000000003,
        "description": "CWE-826: Premature Release of Resource During Expected Lifetime...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "562",
        "name": "Return of Stack Variable Address",
        "abstraction": "base",
        "score": 1.6848000000000003,
        "description": "CWE-562: Return of Stack Variable Address...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1341",
        "name": "Multiple Releases of Same Resource or Handle",
        "abstraction": "base",
        "score": 1.6848000000000003,
        "description": "CWE-1341: Multiple Releases of Same Resource or Handle...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1265",
        "name": "Unintended Reentrant Invocation of Non-reentrant Code Via Nested Calls",
        "abstraction": "base",
        "score": 1.6848000000000003,
        "description": "CWE-1265: Unintended Reentrant Invocation of Non-reentrant Code Via Nested Calls...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "386",
        "name": "Symbolic Name not Mapping to Correct Object",
        "abstraction": "base",
        "score": 1.6744000000000003,
        "description": "CWE-386: Symbolic Name not Mapping to Correct Object...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "415",
        "name": "Double Free",
        "abstraction": "Variant",
        "score": 1.6516234360763047,
        "description": "The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1325",
        "name": "Improperly Controlled Sequential Memory Allocation",
        "abstraction": "Base",
        "score": 1.6131952252105677,
        "description": "The product manages a group of objects or resources and performs a separate memory allocation for each object, but it does not properly limit the total amount of memory that is consumed by all of the ...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "61",
        "name": "UNIX Symbolic Link (Symlink) Following",
        "abstraction": "compound",
        "score": 1.61,
        "description": "CWE-61: UNIX Symbolic Link (Symlink) Following...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "787",
        "name": "Out-of-bounds Write",
        "abstraction": "base",
        "score": 1.6016000000000004,
        "description": "CWE-787: Out-of-bounds Write...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "456",
        "name": "Missing Initialization of a Variable",
        "abstraction": "variant",
        "score": 1.51536,
        "description": "CWE-456: Missing Initialization of a Variable...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "908",
        "name": "Use of Uninitialized Resource",
        "abstraction": "Base",
        "score": 1.5146277051686936,
        "description": "The product uses or accesses a resource that has not been initialized....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "476",
        "name": "NULL Pointer Dereference",
        "abstraction": "Base",
        "score": 1.5073036119485828,
        "description": "The product dereferences a pointer that it expects to be valid but is NULL....",
        "mapping_usage": "Allowed"
      }
    ],
    "dense": [
      {
        "cwe_id": "401",
        "name": "Missing Release of Memory after Effective Lifetime",
        "abstraction": "Variant",
        "score": 0.5034982537803857,
        "description": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "909",
        "name": "Missing Initialization of Resource",
        "abstraction": "Class",
        "score": 0.4810172202408423,
        "description": "The product does not initialize a critical resource....",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "415",
        "name": "Double Free",
        "abstraction": "Variant",
        "score": 0.47858715181718303,
        "description": "The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "789",
        "name": "Memory Allocation with Excessive Size Value",
        "abstraction": "Variant",
        "score": 0.4596697550904148,
        "description": "The product allocates memory based on an untrusted, large size value, but it does not ensure that the size is within expected limits, allowing arbitrary amounts of memory to be allocated....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "911",
        "name": "Improper Update of Reference Count",
        "abstraction": "Base",
        "score": 0.44824200898751176,
        "description": "The product uses a reference count to manage a resource, but it does not update or incorrectly updates the reference count....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "126",
        "name": "Buffer Over-read",
        "abstraction": "Variant",
        "score": 0.44249685288258606,
        "description": "The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "763",
        "name": "Release of Invalid Pointer or Reference",
        "abstraction": "Base",
        "score": 0.4378914947669871,
        "description": "The product attempts to return a memory resource to the system, but it calls the wrong release function or calls the appropriate release function incorrectly....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "226",
        "name": "Sensitive Information in Resource Not Removed Before Reuse",
        "abstraction": "Base",
        "score": 0.43571772087441296,
        "description": "The product releases a resource such as memory or a file so that it can be made available for reuse, but it does not clear or \"zeroize\" the information contained in the resource before the product per...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "122",
        "name": "Heap-based Buffer Overflow",
        "abstraction": "Variant",
        "score": 0.43320579699219963,
        "description": "A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine suc...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "416",
        "name": "Use After Free",
        "abstraction": "Variant",
        "score": 0.43274103449950513,
        "description": "The product reuses or references memory after it has been freed. At some point afterward, the memory may be allocated again and saved in another pointer, while the original pointer references a locati...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "908",
        "name": "Use of Uninitialized Resource",
        "abstraction": "Base",
        "score": 0.4220189191575159,
        "description": "The product uses or accesses a resource that has not been initialized....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "abstraction": "Class",
        "score": 0.4095068933919124,
        "description": "The product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code ...",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "121",
        "name": "Stack-based Buffer Overflow",
        "abstraction": "Variant",
        "score": 0.408451178304747,
        "description": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function)....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "805",
        "name": "Buffer Access with Incorrect Length Value",
        "abstraction": "Base",
        "score": 0.4080922948191563,
        "description": "The product uses a sequential operation to read or write a buffer, but it uses an incorrect length value that causes it to access memory that is outside of the bounds of the buffer....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1285",
        "name": "Improper Validation of Specified Index, Position, or Offset in Input",
        "abstraction": "Base",
        "score": 0.40680521683423,
        "description": "The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the spe...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "131",
        "name": "Incorrect Calculation of Buffer Size",
        "abstraction": "Base",
        "score": 0.40062399414011907,
        "description": "The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "771",
        "name": "Missing Reference to Active Allocated Resource",
        "abstraction": "Base",
        "score": 0.40028622635987005,
        "description": "The product does not properly maintain a reference to a resource that has been allocated, which prevents the resource from being reclaimed....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "665",
        "name": "Improper Initialization",
        "abstraction": "Class",
        "score": 0.39860291731218817,
        "description": "The product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used....",
        "mapping_usage": "Discouraged"
      },
      {
        "cwe_id": "667",
        "name": "Improper Locking",
        "abstraction": "Class",
        "score": 0.39831543090319016,
        "description": "The product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors....",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "190",
        "name": "Integer Overflow or Wraparound",
        "abstraction": "Base",
        "score": 0.3982900692941088,
        "description": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original...",
        "mapping_usage": "Allowed"
      }
    ],
    "sparse": [
      {
        "cwe_id": "401",
        "name": "Missing Release of Memory after Effective Lifetime",
        "abstraction": "Variant",
        "score": 1000.0,
        "description": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "415",
        "name": "Double Free",
        "abstraction": "Variant",
        "score": 539.4336276342751,
        "description": "The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "abstraction": "Class",
        "score": 508.091557720192,
        "description": "The product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code ...",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "911",
        "name": "Improper Update of Reference Count",
        "abstraction": "Base",
        "score": 460.08741552966933,
        "description": "The product uses a reference count to manage a resource, but it does not update or incorrectly updates the reference count....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "909",
        "name": "Missing Initialization of Resource",
        "abstraction": "Class",
        "score": 457.8257857381211,
        "description": "The product does not initialize a critical resource....",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "667",
        "name": "Improper Locking",
        "abstraction": "Class",
        "score": 455.36907583229686,
        "description": "The product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors....",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "364",
        "name": "Signal Handler Race Condition",
        "abstraction": "Base",
        "score": 446.15060749484104,
        "description": "The product uses a signal handler that introduces a race condition....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "59",
        "name": "Improper Link Resolution Before File Access ('Link Following')",
        "abstraction": "Base",
        "score": 426.0929203065451,
        "description": "The product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "252",
        "name": "Unchecked Return Value",
        "abstraction": "Base",
        "score": 423.19359806494896,
        "description": "The product does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "789",
        "name": "Memory Allocation with Excessive Size Value",
        "abstraction": "Variant",
        "score": 422.7807600044489,
        "description": "The product allocates memory based on an untrusted, large size value, but it does not ensure that the size is within expected limits, allowing arbitrary amounts of memory to be allocated....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "190",
        "name": "Integer Overflow or Wraparound",
        "abstraction": "Base",
        "score": 385.13347736213746,
        "description": "The product performs a calculation that can\n         produce an integer overflow or wraparound when the logic\n         assumes that the resulting value will always be larger than\n         the original...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "908",
        "name": "Use of Uninitialized Resource",
        "abstraction": "Base",
        "score": 377.8007209520141,
        "description": "The product uses or accesses a resource that has not been initialized....",
        "mapping_usage": "Allowed"
      }
    ]
  },
  "score_statistics": {
    "dense": {
      "min": 0.3982900692941088,
      "max": 0.5034982537803857,
      "mean": 0.4302030215224534,
      "median": 0.4273799768285105,
      "count": 20
    },
    "sparse": {
      "min": 377.8007209520141,
      "max": 1000.0,
      "mean": 491.82996221995745,
      "median": 450.759841663569,
      "count": 12
    },
    "graph": {
      "min": 1.5073036119485828,
      "max": 2.8651999999999997,
      "mean": 1.8100871532882388,
      "median": 1.6848000000000003,
      "count": 20
    }
  }
}