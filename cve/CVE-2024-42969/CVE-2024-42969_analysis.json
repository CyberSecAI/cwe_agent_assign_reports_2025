{
  "cve_id": "CVE-2024-42969",
  "description": "Tenda FH1206 v02.03.01.35 was discovered to contain a **stack overflow** via the page parameter in the fromSafeUrlFilter function. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted POST request.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "stack overflow",
    "impact": "Denial of Service (DoS)",
    "vector": "crafted POST request",
    "attacker": "attackers",
    "product": "Tenda FH1206",
    "version": "v02.03.01.35",
    "component": "fromSafeUrlFilter function"
  },
  "reference_content": "The provided content describes a stack overflow vulnerability in Tenda FH1206 router firmware.\n\n**Root cause of vulnerability:**\n- A stack buffer overflow exists in the `fromSafeUrlFilter` function due to the use of `sprintf` with a user-controlled `page` parameter without proper bounds checking.\n\n**Weaknesses/vulnerabilities present:**\n- Stack buffer overflow.\n- Unsafe use of `sprintf`.\n\n**Impact of exploitation:**\n- The stack overflow can allow an attacker to potentially execute arbitrary code by overwriting return addresses or other sensitive data on the stack. This could lead to full control of the device, potentially allowing the attacker to modify firmware settings or eavesdrop on traffic.\n\n**Attack vectors:**\n- The vulnerability is triggered by sending a POST request to the `/goform/SafeMacFilter` endpoint with a large value in the `page` parameter.\n\n**Required attacker capabilities/position:**\n- The attacker needs to be able to send HTTP POST requests to the router. This generally implies the attacker is on the same local network as the vulnerable device.\n- The attacker doesn't require prior authentication.\n\n**Additional Details:**\n- The vulnerable function is `fromSafeUrlFilter`\n- The vulnerable firmware version is FH1206 V02.03.01.35\n- The vulnerable code snippet is `sprintf(v11, \"firewall_mac.asp?page=%s\", v8);`\n- A proof of concept exploit is provided using a python script and sends 1000 'a' characters in the page parameter.",
  "similar_info": {
    "cwe_distribution": {
      "95": {
        "cwe_counts": {
          "CWE-787": 5
        },
        "total_samples": 5,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 5,
            "proportion": 1.0
          }
        ]
      },
      "90": {
        "cwe_counts": {
          "CWE-787": 29
        },
        "total_samples": 29,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 29,
            "proportion": 1.0
          }
        ]
      },
      "85": {
        "cwe_counts": {
          "CWE-787": 29
        },
        "total_samples": 29,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 29,
            "proportion": 1.0
          }
        ]
      },
      "80": {
        "cwe_counts": {
          "CWE-787": 21,
          "CWE-120": 4
        },
        "total_samples": 25,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 21,
            "proportion": 0.84
          },
          {
            "cwes": [
              "CWE-120"
            ],
            "frequency": 4,
            "proportion": 0.16
          }
        ]
      },
      "75": {
        "cwe_counts": {
          "CWE-787": 35
        },
        "total_samples": 35,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 35,
            "proportion": 1.0
          }
        ]
      },
      "70": {
        "cwe_counts": {
          "CWE-787": 30
        },
        "total_samples": 31,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 30,
            "proportion": 0.968
          },
          {
            "cwes": [],
            "frequency": 1,
            "proportion": 0.032
          }
        ]
      }
    },
    "cwe_consensus": "CWE-787",
    "similarity_stats": {
      "thresholds": [
        95,
        90,
        85,
        80,
        75,
        70
      ],
      "total_samples_by_threshold": {
        "95": 5,
        "90": 29,
        "85": 29,
        "80": 25,
        "75": 35,
        "70": 31
      },
      "top_cwes_by_threshold": {
        "95": [
          [
            "CWE-787",
            5
          ]
        ],
        "90": [
          [
            "CWE-787",
            29
          ]
        ],
        "85": [
          [
            "CWE-787",
            29
          ]
        ],
        "80": [
          [
            "CWE-787",
            21
          ],
          [
            "CWE-120",
            4
          ]
        ],
        "75": [
          [
            "CWE-787",
            35
          ]
        ],
        "70": [
          [
            "CWE-787",
            30
          ]
        ]
      }
    },
    "raw_matches": [
      {
        "similarity": 95,
        "cwes": [
          "787"
        ],
        "total": 5,
        "frequency": 5,
        "proportion": 1.0
      },
      {
        "similarity": 90,
        "cwes": [
          "787"
        ],
        "total": 29,
        "frequency": 29,
        "proportion": 1.0
      },
      {
        "similarity": 85,
        "cwes": [
          "787"
        ],
        "total": 29,
        "frequency": 29,
        "proportion": 1.0
      },
      {
        "similarity": 80,
        "cwes": [
          "787"
        ],
        "total": 25,
        "frequency": 21,
        "proportion": 0.84
      },
      {
        "similarity": 80,
        "cwes": [
          "120"
        ],
        "total": 25,
        "frequency": 4,
        "proportion": 0.16
      },
      {
        "similarity": 75,
        "cwes": [
          "787"
        ],
        "total": 35,
        "frequency": 35,
        "proportion": 1.0
      },
      {
        "similarity": 70,
        "cwes": [
          "787"
        ],
        "total": 31,
        "frequency": 30,
        "proportion": 0.968
      },
      {
        "similarity": 70,
        "cwes": [],
        "total": 31,
        "frequency": 1,
        "proportion": 0.032
      }
    ]
  },
  "similarity_summary": {
    "consensus_cwe": "CWE-787",
    "top_cwes": [
      [
        "CWE-787",
        149
      ],
      [
        "CWE-120",
        4
      ]
    ],
    "confidence_levels": {
      "high": [],
      "medium": [],
      "low": []
    },
    "total_samples": 154
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-121 | Stack-based Buffer Overflow | 1.0 | Variant | Allowed | Primary CWE. The vulnerability description explicitly states a \"stack overflow\". |\n| CWE-787 | Out-of-bounds Write | 0.7 | Base | Allowed | The stack overflow leads to an out-of-bounds write. |\n| CWE-119 | Improper Restriction of Operations within the Bounds of a Memory Buffer | 0.6 | Class | Allowed | CWE-119 is a parent of CWE-121 and CWE-787. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary weakness is a stack-based buffer overflow (CWE-121). This is a specific type of buffer overflow where the buffer resides on the stack. The overflow results in an out-of-bounds write (CWE-787), as the write operation goes beyond the allocated buffer size. Both CWE-121 and CWE-787 are children of CWE-119, which represents the more general class of improper restriction of operations within the bounds of a memory buffer.\n\n```mermaid\ngraph TD\n    cwe121[\"CWE-121: Stack-based Buffer Overflow\"]\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations\"]\n    \n    cwe121 -->|CHILDOF| cwe119\n    cwe787 -->|CHILDOF| cwe119\n    cwe121 -->|CANPRECEDE| cwe787\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe121 primary\n    class cwe787,cwe119 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with the **stack overflow** (CWE-121), caused by **improper** use of `sprintf` without proper bounds checking. This leads to an out-of-bounds write (CWE-787), which can result in a denial-of-service (DoS) due to the overwritten stack.\n\n## Summary of Analysis\n\nThe analysis is based on the vulnerability description and the provided CVE reference link content summary. The description clearly indicates a **stack overflow** vulnerability. The CVE reference provides the root cause by saying \"A stack buffer overflow exists in the `fromSafeUrlFilter` function due to the use of `sprintf` with a user-controlled `page` parameter without proper bounds checking.\".\nThe retriever results also list CWE-121 as the top candidate.\nThe CWE-121 is at the Variant level, which is the preferred level of abstraction.\nCWE-787 is included because the overflow leads to an out-of-bounds write.\nCWE-119 is included as the parent class, but is not the primary cause.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-121: Stack-based Buffer Overflow\n**Abstraction Level**: Variant\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nA stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-134: Use of Externally-Controlled Format String\nThis was considered, but the root cause is not directly related to a format string vulnerability, but the lack of bounds checking when using `sprintf`.\n\n## CWE-790: Improper Filtering of Special Elements\nNot relevant, as the issue is not about filtering special elements.\n\n## CWE-755: Improper Handling of Exceptional Conditions\nToo generic, not the primary cause.\n\n## CWE-425: Direct Request ('Forced Browsing')\nNot relevant, as this is not an authorization issue.\n\n## CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')\nNot relevant, as this is not about OS command injection.\n\n## CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')\nNot relevant, as this is not about HTTP header manipulation.\n\n## CWE-193: Off-by-one Error\nNot applicable, as the vulnerability is not specifically an off-by-one error.\n\n## CWE-131: Incorrect Calculation of Buffer Size\nThis could be related, but the immediate cause is the use of sprintf without checking input size.\n\n## CWE-1285: Improper Validation of Specified Index, Position, or Offset in Input\nNot the primary cause.\n\n## CWE-190: Integer Overflow or Wraparound\nNot directly related, but an integer overflow could potentially lead to a buffer overflow. However, the root cause is the use of sprintf without bounds checking.\n\n## CWE-1284: Improper Validation of Specified Quantity in Input\nCould be considered, but the root cause is the use of sprintf without checking input size.\n\n## CWE-125: Out-of-bounds Read\nNot directly involved, as the issue is primarily an out-of-bounds write.\n\n## CWE-122: Heap-based Buffer Overflow\nNot applicable, as the overflow is stack-based.\n\n## CWE-128: Wrap-around Error\nNot applicable.\n\n## CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')\nWhile related, CWE-121 is more specific as it is stack-based.\n\n## CWE-770: Allocation of Resources Without Limits or Throttling\nNot applicable.\n\n## CWE-787: Out-of-bounds Write\nA result of CWE-121.\n\n## CWE-123: Write-what-where Condition\nPotentially applicable if the attacker has some control over what is being written and where. However, the provided information does not confirm that.\n\n## CWE-134: Use of Externally-Controlled Format String\nNot directly applicable, the **vulnerability** is not about a format string **weakness** itself, but rather the `sprintf` usage.\n\n## CWE-124: Buffer Underwrite ('Buffer Underflow')\nNot applicable.\n\n## CWE-130: Improper Handling of Length Parameter Inconsistency\nNot the primary cause.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-121 | Stack-based Buffer Overflow | 1.0 | Variant | Allowed | Primary CWE. The vulnerability description explicitly states a \"stack overflow\". |\n| CWE-787 | Out-of-bounds Write | 0.7 | Base | Allowed | The stack overflow leads to an out-of-bounds write. |\n| CWE-119 | Improper Restriction of Operations within the Bounds of a Memory Buffer | 0.6 | Class | Allowed | CWE-119 is a parent of CWE-121 and CWE-787. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary weakness is a stack-based buffer overflow (CWE-121). This is a specific type of buffer overflow where the buffer resides on the stack. The overflow results in an out-of-bounds write (CWE-787), as the write operation goes beyond the allocated buffer size. Both CWE-121 and CWE-787 are children of CWE-119, which represents the more general class of improper restriction of operations within the bounds of a memory buffer.\n\n```mermaid\ngraph TD\n    cwe121[\"CWE-121: Stack-based Buffer Overflow\"]\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations\"]\n    \n    cwe121 -->|CHILDOF| cwe119\n    cwe787 -->|CHILDOF| cwe119\n    cwe121 -->|CANPRECEDE| cwe787\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe121 primary\n    class cwe787,cwe119 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with the **stack overflow** (CWE-121), caused by **improper** use of `sprintf` without proper bounds checking. This leads to an out-of-bounds write (CWE-787), which can result in a denial-of-service (DoS) due to the overwritten stack.\n\n## Summary of Analysis\n\nThe analysis is based on the vulnerability description and the provided CVE reference link content summary. The description clearly indicates a **stack overflow** vulnerability. The CVE reference provides the root cause by saying \"A stack buffer overflow exists in the `fromSafeUrlFilter` function due to the use of `sprintf` with a user-controlled `page` parameter without proper bounds checking.\".\nThe retriever results also list CWE-121 as the top candidate.\nThe CWE-121 is at the Variant level, which is the preferred level of abstraction.\nCWE-787 is included because the overflow leads to an out-of-bounds write.\nCWE-119 is included as the parent class, but is not the primary cause.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-121: Stack-based Buffer Overflow\n**Abstraction Level**: Variant\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nA stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-134: Use of Externally-Controlled Format String\nThis was considered, but the root cause is not directly related to a format string vulnerability, but the lack of bounds checking when using `sprintf`.\n\n## CWE-790: Improper Filtering of Special Elements\nNot relevant, as the issue is not about filtering special elements.\n\n## CWE-755: Improper Handling of Exceptional Conditions\nToo generic, not the primary cause.\n\n## CWE-425: Direct Request ('Forced Browsing')\nNot relevant, as this is not an authorization issue.\n\n## CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')\nNot relevant, as this is not about OS command injection.\n\n## CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')\nNot relevant, as this is not about HTTP header manipulation.\n\n## CWE-193: Off-by-one Error\nNot applicable, as the vulnerability is not specifically an off-by-one error.\n\n## CWE-131: Incorrect Calculation of Buffer Size\nThis could be related, but the immediate cause is the use of sprintf without checking input size.\n\n## CWE-1285: Improper Validation of Specified Index, Position, or Offset in Input\nNot the primary cause.\n\n## CWE-190: Integer Overflow or Wraparound\nNot directly related, but an integer overflow could potentially lead to a buffer overflow. However, the root cause is the use of sprintf without bounds checking.\n\n## CWE-1284: Improper Validation of Specified Quantity in Input\nCould be considered, but the root cause is the use of sprintf without checking input size.\n\n## CWE-125: Out-of-bounds Read\nNot directly involved, as the issue is primarily an out-of-bounds write.\n\n## CWE-122: Heap-based Buffer Overflow\nNot applicable, as the overflow is stack-based.\n\n## CWE-128: Wrap-around Error\nNot applicable.\n\n## CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')\nWhile related, CWE-121 is more specific as it is stack-based.\n\n## CWE-770: Allocation of Resources Without Limits or Throttling\nNot applicable.\n\n## CWE-787: Out-of-bounds Write\nA result of CWE-121.\n\n## CWE-123: Write-what-where Condition\nPotentially applicable if the attacker has some control over what is being written and where. However, the provided information does not confirm that.\n\n## CWE-134: Use of Externally-Controlled Format String\nNot directly applicable, the **vulnerability** is not about a format string **weakness** itself, but rather the `sprintf` usage.\n\n## CWE-124: Buffer Underwrite ('Buffer Underflow')\nNot applicable.\n\n## CWE-130: Improper Handling of Length Parameter Inconsistency\nNot the primary cause.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-130:**\n- 130 (Improper Handling of Length Parameter Inconsistency) - ROOT\n\n\n**Chain starting from CWE-770:**\n- 770 (Allocation of Resources Without Limits or Throttling) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "121",
        "name": "Stack-based Buffer Overflow",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Stack Overflow",
        "match_reason": "exact_match_whole_phrase"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "190",
        "name": "Integer Overflow or Wraparound",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Overflow",
        "match_reason": "term_in_phrase_whole_phrase"
      },
      "similarity": 800.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "674",
        "name": "Uncontrolled Recursion",
        "source": "sparse"
      },
      "similarity": 236.00419475280958
    },
    {
      "metadata": {
        "doc_id": "122",
        "name": "Heap-based Buffer Overflow",
        "source": "sparse"
      },
      "similarity": 212.89536857940547
    },
    {
      "metadata": {
        "doc_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "source": "sparse"
      },
      "similarity": 212.42419299278896
    },
    {
      "metadata": {
        "doc_id": "770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "source": "sparse"
      },
      "similarity": 210.98540543542276
    },
    {
      "metadata": {
        "doc_id": "125",
        "name": "Out-of-bounds Read",
        "source": "sparse"
      },
      "similarity": 208.15532738768582
    },
    {
      "metadata": {
        "doc_id": "130",
        "name": "Improper Handling of Length Parameter Inconsistency",
        "source": "sparse"
      },
      "similarity": 207.93593785651296
    },
    {
      "metadata": {
        "doc_id": "78",
        "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "type": "Base",
        "original_content": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
        "keyphrase_source": "weakness:stack overflow",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5638437899193767,
            "sparse": 70.21338914563
          }
        }
      },
      "similarity": 0.5638437899193767
    },
    {
      "doc_id": "128",
      "text": "CWE-128: Wrap-around Error",
      "score": 2.2698,
      "metadata": {
        "doc_id": "128",
        "name": "Wrap-around Error",
        "type": "base",
        "original_content": "CWE-128: Wrap-around Error",
        "relationships": [
          {
            "source_id": "128",
            "target_id": "190",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "128",
            "target_id": "119",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "128",
            "target_id": "682",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "682",
            "target_id": "128",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "119",
            "target_id": "128",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 0.7,
          "sequence_path": 0.7200000000000001,
          "peer_group": 0.9
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "peer_relationship"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "128",
                  "190",
                  "PEEROF"
                ]
              ],
              "score": 0.7,
              "type": "relationship_chain",
              "source": "190"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "190",
                  "119",
                  "CANPRECEDE"
                ],
                [
                  "119",
                  "128",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.7200000000000001,
              "type": "vulnerability_sequence_forward",
              "source": "190"
            },
            "peer_relationship": {
              "path": [
                [
                  "128",
                  "190",
                  "PEEROF"
                ]
              ],
              "score": 0.9,
              "type": "peer_relationship",
              "source": "190"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2698
          }
        }
      },
      "similarity": 2.2698
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-130",
      "CWE-770",
      "CWE-125",
      "CWE-131",
      "CWE-787",
      "CWE-113",
      "CWE-790",
      "CWE-193",
      "CWE-123",
      "CWE-120",
      "CWE-425",
      "CWE-128",
      "CWE-1285",
      "CWE-122",
      "CWE-755",
      "CWE-78",
      "CWE-121",
      "CWE-1284",
      "CWE-190",
      "CWE-124",
      "CWE-119",
      "CWE-134"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}