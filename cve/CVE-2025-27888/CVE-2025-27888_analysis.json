{
  "cve_id": "CVE-2025-27888",
  "description": "Severity medium (5.8) / important **Server-Side Request Forgery** (SSRF), **Improper Neutralization of Input During Web Page Generation** (Cross-site Scripting), URL Redirection to Untrusted Site (Open Redirect) vulnerability in Apache Druid. This issue affects all previous Druid versions. When using the Druid management proxy, a request that has a specially crafted URL could be used to redirect the request to an arbitrary server instead. This has the potential for XSS or XSRF. The user is required to be authenticated for this exploit. The management proxy is enabled in Druids out-of-box configuration. It may be disabled to mitigate this vulnerability. If the management proxy is disabled, some web console features will not work properly, but core functionality is unaffected. Users are recommended to upgrade to Druid 31.0.2 or Druid 32.0.1, which fixes the issue.",
  "key_phrases": {
    "rootcause": [
      "Improper Neutralization of Input During Web Page Generation",
      "URL redirection to untrusted site",
      "improper input neutralization"
    ],
    "weakness": [
      "Server-Side Request Forgery",
      "URL redirection"
    ],
    "impact": [
      "XSRF",
      "XSS"
    ],
    "vector": "specially crafted URL",
    "attacker": "",
    "product": "Apache Druid",
    "version": "",
    "component": "Druid management proxy"
  },
  "reference_content": "Here's an analysis of the provided content related to CVE-2025-27888:\n\n**Analysis of content from www.openwall.com_63a41e01_20250624_162834.html:**\n\n*   **UNRELATED**\n\n**Analysis of content from www.openwall.com_ff0141a7_20250624_205252.html:**\n\n*   **UNRELATED**\n\n**Analysis of content from lists.openwall.net_ae5d8845_20250624_205252.html:**\n\n*   **UNRELATED**\n\n**Analysis of content from druid.apache.org_3036ad81_20250624_205252.html:**\n\n*   **UNRELATED**\n\n**Analysis of content from lists.apache.org_7139568f_20250624_162835.html:**\n\n*   **UNRELATED**\n\n**Analysis of content from the email:**\n\n*   **Relevant**\n    *   **Weaknesses/vulnerabilities present:** Server-Side Request Forgery (SSRF), Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'), URL Redirection to Untrusted Site ('Open Redirect').\n    *   **Impact of exploitation:** Potential for XSS or XSRF.\n    *   **Attack vectors:** A request with a specially crafted URL.\n    *   **Required attacker capabilities/position:** The user is required to be authenticated for this exploit.\n    *   **Mitigation or fix:** Upgrade to Druid 31.0.2 or Druid 32.0.1. The management proxy may be disabled as a mitigation, but some web console features will not work properly.\n    *   **More detail than the official CVE description:** Yes, the email provides more details regarding the impact of the vulnerability (XSS or XSRF) and the required attacker capabilities.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID  | CWE Name  | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-918 | Server-Side Request Forgery (SSRF) | 0.9 | Base | Primary | Allowed |\n| CWE-601 | URL Redirection to Untrusted Site ('Open Redirect') | 0.8 | Base | Secondary | Allowed |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.7 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship to consider is the chain of events that leads to the vulnerability. The **Server-Side Request Forgery** (SSRF) vulnerability (CWE-918) can lead to an **Open Redirect** (CWE-601) if the server blindly redirects the user to a URL fetched from an external source. Additionally, if the server fails to neutralize input used in generating web pages, it could lead to **Cross-Site Scripting** (XSS) (CWE-79). CWE-601 is a child of CWE-610 (Externally Controlled Reference to a Resource in Another Sphere), but CWE-601 is more specific and thus more appropriate.\n\n```mermaid\ngraph TD\n    cwe918[\"CWE-918: Server-Side Request Forgery (SSRF)\"]\n    cwe601[\"CWE-601: URL Redirection to Untrusted Site ('Open Redirect')\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n\n    cwe918 -->|CANLEADTO| cwe601\n    cwe918 -->|CANLEADTO| cwe79\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe918 primary\n    class cwe601,cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **Server-Side Request Forgery (SSRF)** (CWE-918) where a specially crafted URL is used to redirect the request to an arbitrary server. This can then lead to:\n1.  **URL Redirection to Untrusted Site ('Open Redirect')** (CWE-601): If the application redirects the user to the untrusted site specified in the crafted URL.\n2.  **Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')** (CWE-79): If the response from the arbitrary server is not properly neutralized when included in a web page, it can lead to XSS.\n\nThe root cause is the **improper handling of URLs** which allows for the **Server-Side Request Forgery**. The impacts are the **Open Redirect** and **Cross-site Scripting**.\n\n## Summary of Analysis\nThe primary vulnerability is **Server-Side Request Forgery (SSRF)** (CWE-918), as the application **does not sufficiently ensure that the request is being sent to the expected destination**. This allows for a specially crafted URL to redirect requests to arbitrary servers.\n\nThe secondary vulnerabilities are **URL Redirection to Untrusted Site ('Open Redirect')** (CWE-601) and **Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')** (CWE-79). The **Open Redirect** occurs when the server redirects the user to the URL obtained through the **SSRF**. The **Cross-site Scripting** occurs when the response from the arbitrary server is included in a web page without proper neutralization.\n\nThe evidence supporting this analysis is the vulnerability description: \"**a request that has a specially crafted URL could be used to redirect the request to an arbitrary server instead. This has the potential for XSS or XSRF**\".\n\nThe hierarchical relationships support choosing the more specific CWE-601 over CWE-610.\n\nThe selected CWEs are at the optimal level of specificity because they directly represent the weaknesses described in the vulnerability. CWE-918 captures the root cause, while CWE-601 and CWE-79 represent the potential impacts.\n\nRelevant CWE Information:\n*   **CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')** - The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.\n*   **CWE-601: URL Redirection to Untrusted Site ('Open Redirect')** - The web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a redirect.\n*   **CWE-610: Externally Controlled Reference to a Resource in Another Sphere** - The product uses an externally controlled name or reference that resolves to a resource that is outside of the intended control sphere.\n*   **CWE-918: Server-Side Request Forgery (SSRF)** - The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.\n*   **CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')** - The product receives data from an HTTP agent/component (e.g., web server, proxy, browser, etc.), but it does not neutralize or incorrectly neutralizes CR and LF characters before the data is included in outgoing HTTP headers.\n*   **CWE-352: Cross-Site Request Forgery (CSRF)** - The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n*   **CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')** - The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n*   **CWE-863: Incorrect Authorization** - The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.",
  "analysis_with_relationships": "# Summary\n| CWE ID  | CWE Name  | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-918 | Server-Side Request Forgery (SSRF) | 0.9 | Base | Primary | Allowed |\n| CWE-601 | URL Redirection to Untrusted Site ('Open Redirect') | 0.8 | Base | Secondary | Allowed |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.7 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship to consider is the chain of events that leads to the vulnerability. The **Server-Side Request Forgery** (SSRF) vulnerability (CWE-918) can lead to an **Open Redirect** (CWE-601) if the server blindly redirects the user to a URL fetched from an external source. Additionally, if the server fails to neutralize input used in generating web pages, it could lead to **Cross-Site Scripting** (XSS) (CWE-79). CWE-601 is a child of CWE-610 (Externally Controlled Reference to a Resource in Another Sphere), but CWE-601 is more specific and thus more appropriate.\n\n```mermaid\ngraph TD\n    cwe918[\"CWE-918: Server-Side Request Forgery (SSRF)\"]\n    cwe601[\"CWE-601: URL Redirection to Untrusted Site ('Open Redirect')\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n\n    cwe918 -->|CANLEADTO| cwe601\n    cwe918 -->|CANLEADTO| cwe79\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe918 primary\n    class cwe601,cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **Server-Side Request Forgery (SSRF)** (CWE-918) where a specially crafted URL is used to redirect the request to an arbitrary server. This can then lead to:\n1.  **URL Redirection to Untrusted Site ('Open Redirect')** (CWE-601): If the application redirects the user to the untrusted site specified in the crafted URL.\n2.  **Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')** (CWE-79): If the response from the arbitrary server is not properly neutralized when included in a web page, it can lead to XSS.\n\nThe root cause is the **improper handling of URLs** which allows for the **Server-Side Request Forgery**. The impacts are the **Open Redirect** and **Cross-site Scripting**.\n\n## Summary of Analysis\nThe primary vulnerability is **Server-Side Request Forgery (SSRF)** (CWE-918), as the application **does not sufficiently ensure that the request is being sent to the expected destination**. This allows for a specially crafted URL to redirect requests to arbitrary servers.\n\nThe secondary vulnerabilities are **URL Redirection to Untrusted Site ('Open Redirect')** (CWE-601) and **Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')** (CWE-79). The **Open Redirect** occurs when the server redirects the user to the URL obtained through the **SSRF**. The **Cross-site Scripting** occurs when the response from the arbitrary server is included in a web page without proper neutralization.\n\nThe evidence supporting this analysis is the vulnerability description: \"**a request that has a specially crafted URL could be used to redirect the request to an arbitrary server instead. This has the potential for XSS or XSRF**\".\n\nThe hierarchical relationships support choosing the more specific CWE-601 over CWE-610.\n\nThe selected CWEs are at the optimal level of specificity because they directly represent the weaknesses described in the vulnerability. CWE-918 captures the root cause, while CWE-601 and CWE-79 represent the potential impacts.\n\nRelevant CWE Information:\n*   **CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')** - The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.\n*   **CWE-601: URL Redirection to Untrusted Site ('Open Redirect')** - The web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a redirect.\n*   **CWE-610: Externally Controlled Reference to a Resource in Another Sphere** - The product uses an externally controlled name or reference that resolves to a resource that is outside of the intended control sphere.\n*   **CWE-918: Server-Side Request Forgery (SSRF)** - The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.\n*   **CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')** - The product receives data from an HTTP agent/component (e.g., web server, proxy, browser, etc.), but it does not neutralize or incorrectly neutralizes CR and LF characters before the data is included in outgoing HTTP headers.\n*   **CWE-352: Cross-Site Request Forgery (CSRF)** - The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n*   **CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')** - The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n*   **CWE-863: Incorrect Authorization** - The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse",
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "keyphrase_sources": [
          {
            "id": "rootcause:Improper Neutralization of Input During Web Page Generation",
            "keyphrase": "Improper Neutralization of Input During Web Page Generation",
            "type": "rootcause"
          },
          {
            "id": "rootcause:URL redirection to untrusted site",
            "keyphrase": "URL redirection to untrusted site",
            "type": "rootcause"
          },
          {
            "id": "rootcause:improper input neutralization",
            "keyphrase": "improper input neutralization",
            "type": "rootcause"
          },
          {
            "id": "weakness:Server-Side Request Forgery",
            "keyphrase": "Server-Side Request Forgery",
            "type": "weakness"
          },
          {
            "id": "weakness:URL redirection",
            "keyphrase": "URL redirection",
            "type": "weakness"
          },
          {
            "id": "impact:XSRF",
            "keyphrase": "XSRF",
            "type": "impact"
          },
          {
            "id": "impact:XSS",
            "keyphrase": "XSS",
            "type": "impact"
          },
          {
            "id": "vector:specially crafted URL",
            "keyphrase": "specially crafted URL",
            "type": "vector"
          },
          {
            "id": "product:Apache Druid",
            "keyphrase": "Apache Druid",
            "type": "product"
          },
          {
            "id": "component:Druid management proxy",
            "keyphrase": "Druid management proxy",
            "type": "component"
          }
        ]
      },
      "similarity": 904.470742449667
    },
    {
      "metadata": {
        "doc_id": "601",
        "name": "URL Redirection to Untrusted Site ('Open Redirect')",
        "source": "sparse",
        "original_content": "The web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a redirect.",
        "keyphrase_sources": [
          {
            "id": "rootcause:URL redirection to untrusted site",
            "keyphrase": "URL redirection to untrusted site",
            "type": "rootcause"
          },
          {
            "id": "weakness:Server-Side Request Forgery",
            "keyphrase": "Server-Side Request Forgery",
            "type": "weakness"
          },
          {
            "id": "weakness:URL redirection",
            "keyphrase": "URL redirection",
            "type": "weakness"
          }
        ]
      },
      "similarity": 863.8062258949005
    },
    {
      "metadata": {
        "doc_id": "610",
        "name": "Externally Controlled Reference to a Resource in Another Sphere",
        "source": "sparse",
        "original_content": "The product uses an externally controlled name or reference that resolves to a resource that is outside of the intended control sphere.",
        "keyphrase_sources": [
          {
            "id": "rootcause:Improper Neutralization of Input During Web Page Generation",
            "keyphrase": "Improper Neutralization of Input During Web Page Generation",
            "type": "rootcause"
          },
          {
            "id": "rootcause:URL redirection to untrusted site",
            "keyphrase": "URL redirection to untrusted site",
            "type": "rootcause"
          },
          {
            "id": "rootcause:improper input neutralization",
            "keyphrase": "improper input neutralization",
            "type": "rootcause"
          },
          {
            "id": "weakness:Server-Side Request Forgery",
            "keyphrase": "Server-Side Request Forgery",
            "type": "weakness"
          },
          {
            "id": "weakness:URL redirection",
            "keyphrase": "URL redirection",
            "type": "weakness"
          },
          {
            "id": "impact:XSRF",
            "keyphrase": "XSRF",
            "type": "impact"
          },
          {
            "id": "impact:XSS",
            "keyphrase": "XSS",
            "type": "impact"
          },
          {
            "id": "vector:specially crafted URL",
            "keyphrase": "specially crafted URL",
            "type": "vector"
          },
          {
            "id": "product:Apache Druid",
            "keyphrase": "Apache Druid",
            "type": "product"
          },
          {
            "id": "component:Druid management proxy",
            "keyphrase": "Druid management proxy",
            "type": "component"
          }
        ]
      },
      "similarity": 825.5368075753795
    },
    {
      "metadata": {
        "doc_id": "918",
        "name": "Server-Side Request Forgery (SSRF)",
        "source": "sparse",
        "original_content": "The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.",
        "keyphrase_sources": [
          {
            "id": "rootcause:URL redirection to untrusted site",
            "keyphrase": "URL redirection to untrusted site",
            "type": "rootcause"
          },
          {
            "id": "rootcause:improper input neutralization",
            "keyphrase": "improper input neutralization",
            "type": "rootcause"
          },
          {
            "id": "weakness:Server-Side Request Forgery",
            "keyphrase": "Server-Side Request Forgery",
            "type": "weakness"
          },
          {
            "id": "weakness:URL redirection",
            "keyphrase": "URL redirection",
            "type": "weakness"
          },
          {
            "id": "impact:XSRF",
            "keyphrase": "XSRF",
            "type": "impact"
          },
          {
            "id": "impact:XSS",
            "keyphrase": "XSS",
            "type": "impact"
          },
          {
            "id": "vector:specially crafted URL",
            "keyphrase": "specially crafted URL",
            "type": "vector"
          },
          {
            "id": "product:Apache Druid",
            "keyphrase": "Apache Druid",
            "type": "product"
          },
          {
            "id": "component:Druid management proxy",
            "keyphrase": "Druid management proxy",
            "type": "component"
          }
        ]
      },
      "similarity": 824.4296640585644
    },
    {
      "metadata": {
        "doc_id": "113",
        "name": "Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')",
        "source": "sparse",
        "original_content": "The product receives data from an HTTP agent/component (e.g., web server, proxy, browser, etc.), but it does not neutralize or incorrectly neutralizes CR and LF characters before the data is included in outgoing HTTP headers.",
        "keyphrase_sources": [
          {
            "id": "rootcause:Improper Neutralization of Input During Web Page Generation",
            "keyphrase": "Improper Neutralization of Input During Web Page Generation",
            "type": "rootcause"
          },
          {
            "id": "rootcause:improper input neutralization",
            "keyphrase": "improper input neutralization",
            "type": "rootcause"
          },
          {
            "id": "impact:XSRF",
            "keyphrase": "XSRF",
            "type": "impact"
          },
          {
            "id": "impact:XSS",
            "keyphrase": "XSS",
            "type": "impact"
          },
          {
            "id": "vector:specially crafted URL",
            "keyphrase": "specially crafted URL",
            "type": "vector"
          },
          {
            "id": "component:Druid management proxy",
            "keyphrase": "Druid management proxy",
            "type": "component"
          }
        ]
      },
      "similarity": 815.9854253575643
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_sources": [
          {
            "id": "rootcause:Improper Neutralization of Input During Web Page Generation",
            "keyphrase": "Improper Neutralization of Input During Web Page Generation",
            "type": "rootcause"
          },
          {
            "id": "rootcause:URL redirection to untrusted site",
            "keyphrase": "URL redirection to untrusted site",
            "type": "rootcause"
          },
          {
            "id": "rootcause:improper input neutralization",
            "keyphrase": "improper input neutralization",
            "type": "rootcause"
          },
          {
            "id": "weakness:Server-Side Request Forgery",
            "keyphrase": "Server-Side Request Forgery",
            "type": "weakness"
          },
          {
            "id": "weakness:URL redirection",
            "keyphrase": "URL redirection",
            "type": "weakness"
          },
          {
            "id": "impact:XSRF",
            "keyphrase": "XSRF",
            "type": "impact"
          },
          {
            "id": "impact:XSS",
            "keyphrase": "XSS",
            "type": "impact"
          },
          {
            "id": "vector:specially crafted URL",
            "keyphrase": "specially crafted URL",
            "type": "vector"
          },
          {
            "id": "product:Apache Druid",
            "keyphrase": "Apache Druid",
            "type": "product"
          },
          {
            "id": "component:Druid management proxy",
            "keyphrase": "Druid management proxy",
            "type": "component"
          }
        ]
      },
      "similarity": 811.4206472965532
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "keyphrase_sources": [
          {
            "id": "rootcause:Improper Neutralization of Input During Web Page Generation",
            "keyphrase": "Improper Neutralization of Input During Web Page Generation",
            "type": "rootcause"
          }
        ]
      },
      "similarity": 796.309232859682
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse",
        "original_content": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.",
        "keyphrase_sources": [
          {
            "id": "product:Apache Druid",
            "keyphrase": "Apache Druid",
            "type": "product"
          }
        ]
      },
      "similarity": 250.96849402651162
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-863",
      "CWE-610",
      "CWE-601",
      "CWE-79",
      "CWE-113",
      "CWE-352",
      "CWE-918"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "79": [
      {
        "id": "rootcause:Improper Neutralization of Input During Web Page Generation",
        "keyphrase": "Improper Neutralization of Input During Web Page Generation",
        "type": "rootcause"
      },
      {
        "id": "rootcause:URL redirection to untrusted site",
        "keyphrase": "URL redirection to untrusted site",
        "type": "rootcause"
      },
      {
        "id": "rootcause:improper input neutralization",
        "keyphrase": "improper input neutralization",
        "type": "rootcause"
      },
      {
        "id": "weakness:Server-Side Request Forgery",
        "keyphrase": "Server-Side Request Forgery",
        "type": "weakness"
      },
      {
        "id": "weakness:URL redirection",
        "keyphrase": "URL redirection",
        "type": "weakness"
      },
      {
        "id": "impact:XSRF",
        "keyphrase": "XSRF",
        "type": "impact"
      },
      {
        "id": "impact:XSS",
        "keyphrase": "XSS",
        "type": "impact"
      },
      {
        "id": "vector:specially crafted URL",
        "keyphrase": "specially crafted URL",
        "type": "vector"
      },
      {
        "id": "product:Apache Druid",
        "keyphrase": "Apache Druid",
        "type": "product"
      },
      {
        "id": "component:Druid management proxy",
        "keyphrase": "Druid management proxy",
        "type": "component"
      }
    ],
    "610": [
      {
        "id": "rootcause:Improper Neutralization of Input During Web Page Generation",
        "keyphrase": "Improper Neutralization of Input During Web Page Generation",
        "type": "rootcause"
      },
      {
        "id": "rootcause:URL redirection to untrusted site",
        "keyphrase": "URL redirection to untrusted site",
        "type": "rootcause"
      },
      {
        "id": "rootcause:improper input neutralization",
        "keyphrase": "improper input neutralization",
        "type": "rootcause"
      },
      {
        "id": "weakness:Server-Side Request Forgery",
        "keyphrase": "Server-Side Request Forgery",
        "type": "weakness"
      },
      {
        "id": "weakness:URL redirection",
        "keyphrase": "URL redirection",
        "type": "weakness"
      },
      {
        "id": "impact:XSRF",
        "keyphrase": "XSRF",
        "type": "impact"
      },
      {
        "id": "impact:XSS",
        "keyphrase": "XSS",
        "type": "impact"
      },
      {
        "id": "vector:specially crafted URL",
        "keyphrase": "specially crafted URL",
        "type": "vector"
      },
      {
        "id": "product:Apache Druid",
        "keyphrase": "Apache Druid",
        "type": "product"
      },
      {
        "id": "component:Druid management proxy",
        "keyphrase": "Druid management proxy",
        "type": "component"
      }
    ],
    "113": [
      {
        "id": "rootcause:Improper Neutralization of Input During Web Page Generation",
        "keyphrase": "Improper Neutralization of Input During Web Page Generation",
        "type": "rootcause"
      },
      {
        "id": "rootcause:improper input neutralization",
        "keyphrase": "improper input neutralization",
        "type": "rootcause"
      },
      {
        "id": "impact:XSRF",
        "keyphrase": "XSRF",
        "type": "impact"
      },
      {
        "id": "impact:XSS",
        "keyphrase": "XSS",
        "type": "impact"
      },
      {
        "id": "vector:specially crafted URL",
        "keyphrase": "specially crafted URL",
        "type": "vector"
      },
      {
        "id": "component:Druid management proxy",
        "keyphrase": "Druid management proxy",
        "type": "component"
      }
    ],
    "352": [
      {
        "id": "rootcause:Improper Neutralization of Input During Web Page Generation",
        "keyphrase": "Improper Neutralization of Input During Web Page Generation",
        "type": "rootcause"
      },
      {
        "id": "rootcause:URL redirection to untrusted site",
        "keyphrase": "URL redirection to untrusted site",
        "type": "rootcause"
      },
      {
        "id": "rootcause:improper input neutralization",
        "keyphrase": "improper input neutralization",
        "type": "rootcause"
      },
      {
        "id": "weakness:Server-Side Request Forgery",
        "keyphrase": "Server-Side Request Forgery",
        "type": "weakness"
      },
      {
        "id": "weakness:URL redirection",
        "keyphrase": "URL redirection",
        "type": "weakness"
      },
      {
        "id": "impact:XSRF",
        "keyphrase": "XSRF",
        "type": "impact"
      },
      {
        "id": "impact:XSS",
        "keyphrase": "XSS",
        "type": "impact"
      },
      {
        "id": "vector:specially crafted URL",
        "keyphrase": "specially crafted URL",
        "type": "vector"
      },
      {
        "id": "product:Apache Druid",
        "keyphrase": "Apache Druid",
        "type": "product"
      },
      {
        "id": "component:Druid management proxy",
        "keyphrase": "Druid management proxy",
        "type": "component"
      }
    ],
    "89": [
      {
        "id": "rootcause:Improper Neutralization of Input During Web Page Generation",
        "keyphrase": "Improper Neutralization of Input During Web Page Generation",
        "type": "rootcause"
      }
    ],
    "601": [
      {
        "id": "rootcause:URL redirection to untrusted site",
        "keyphrase": "URL redirection to untrusted site",
        "type": "rootcause"
      },
      {
        "id": "weakness:Server-Side Request Forgery",
        "keyphrase": "Server-Side Request Forgery",
        "type": "weakness"
      },
      {
        "id": "weakness:URL redirection",
        "keyphrase": "URL redirection",
        "type": "weakness"
      }
    ],
    "918": [
      {
        "id": "rootcause:URL redirection to untrusted site",
        "keyphrase": "URL redirection to untrusted site",
        "type": "rootcause"
      },
      {
        "id": "rootcause:improper input neutralization",
        "keyphrase": "improper input neutralization",
        "type": "rootcause"
      },
      {
        "id": "weakness:Server-Side Request Forgery",
        "keyphrase": "Server-Side Request Forgery",
        "type": "weakness"
      },
      {
        "id": "weakness:URL redirection",
        "keyphrase": "URL redirection",
        "type": "weakness"
      },
      {
        "id": "impact:XSRF",
        "keyphrase": "XSRF",
        "type": "impact"
      },
      {
        "id": "impact:XSS",
        "keyphrase": "XSS",
        "type": "impact"
      },
      {
        "id": "vector:specially crafted URL",
        "keyphrase": "specially crafted URL",
        "type": "vector"
      },
      {
        "id": "product:Apache Druid",
        "keyphrase": "Apache Druid",
        "type": "product"
      },
      {
        "id": "component:Druid management proxy",
        "keyphrase": "Druid management proxy",
        "type": "component"
      }
    ],
    "863": [
      {
        "id": "product:Apache Druid",
        "keyphrase": "Apache Druid",
        "type": "product"
      }
    ]
  }
}