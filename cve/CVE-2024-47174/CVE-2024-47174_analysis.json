{
  "cve_id": "CVE-2024-47174",
  "description": "Nix is a package manager for Linux and other Unix systems. Starting in version 1.11 and prior to versions 2.18.8 and 2.24.8, `` **did not verify TLS certificates on HTTPS connections**. This could lead to connection details such as full URLs or credentials leaking in case of a man-in-the-middle (MITM) attack. `` is also known as the builtin derivation builder `builtinfetchurl`. Its not to be confused with the evaluation-time function `builtins.fetchurl`, which was not affected by this issue. A user may be affected by the risk of leaking credentials if they have a `netrc` file for authentication, or rely on derivations with `impureEnvVars` set to use credentials from the environment. In addition, the commonplace trust-on-first-use (TOFU) technique of updating dependencies by specifying an invalid hash and obtaining it from a remote store was also vulnerable to a MITM injecting arbitrary store objects. This also applied to the impure derivations experimental feature. Note that this may also happen when using Nixpkgs fetchers to obtain new hashes when not using the fake hash method, although that mechanism is not implemented in Nix itself but rather in Nixpkgs using a fixed-output derivation. The behavior was introduced in version 1.11 to make it consistent with the Nixpkgs `pkgs.fetchurl` and to make `` work in the derivation builder sandbox, which back then did not have access to the CA bundles by default. Nowadays, CA bundl",
  "key_phrases": {
    "rootcause": "did not verify TLS certificates on HTTPS connections",
    "weakness": "",
    "impact": "connection details such as full URLs or credentials leaking",
    "vector": "man-in-the-middle (MITM) attack",
    "attacker": "",
    "product": "Nix",
    "version": "1.11 to 2.18.8 and 2.24.8",
    "component": ""
  },
  "reference_content": "Based on the provided content, here's an analysis of CVE-2024-47174:\n\n**Root Cause of Vulnerability:**\nThe vulnerability stems from the historical behavior of `<nix/fetchurl.nix>` (also known as `builtin:fetchurl`) not verifying TLS certificates when establishing HTTPS connections. This was initially done to align with Nixpkgs' `pkgs.fetchurl` and because the Nix sandbox didn't have access to CA bundles. This decision was based on the assumption that the hash of the fetched file was always checked, providing integrity. However, this assumption was invalidated with the introduction of features like impure derivations.\n\n**Weaknesses/Vulnerabilities Present:**\n- **Lack of TLS Verification:** The primary vulnerability is the absence of TLS certificate verification, making connections susceptible to Man-in-the-Middle (MITM) attacks.\n- **Credential Leakage:** Without TLS verification, sensitive information like full URLs and authentication credentials stored in `.netrc` files, or passed through environment variables (`impureEnvVars`), could be exposed to an attacker intercepting the connection.\n- **TOFU Vulnerability:** The trust-on-first-use (TOFU) mechanism commonly used to update dependencies by specifying an invalid hash became vulnerable. An attacker could inject arbitrary store objects by performing a MITM attack while the system is attempting to obtain the correct hash.\n- **Impure Derivations:** The use of impure derivations which don't always check hashes, further exposed the vulnerability.\n\n**Impact of Exploitation:**\n- **Confidentiality Breach:** An attacker can intercept and potentially steal sensitive information like authentication credentials and URLs.\n- **Arbitrary Code Injection:** An attacker can inject malicious store objects into the system via MITM, potentially leading to arbitrary code execution.\n- **Compromised Builds:**  Compromised dependencies could lead to compromised builds if the user relies on TOFU.\n\n**Attack Vectors:**\n- **Man-in-the-Middle (MITM) Attack:** The attack vector is a network-based MITM attack, where an attacker intercepts network traffic between the user and the server providing the fetched resource.\n\n**Required Attacker Capabilities/Position:**\n- **Network Access:** The attacker must be positioned to intercept network traffic between the user's machine and the server hosting the resource being fetched by `fetchurl`.\n- **No User Interaction:** Exploitation of this vulnerability doesn't require any user interaction.\n- **No Privileges Required:** The attacker does not need special privileges on the user's system to carry out the attack.\n\n**Additional Notes:**\n- The fix for this issue involves re-enabling TLS verification in `<nix/fetchurl.nix>`.\n- The vulnerability is specific to the `builtin:fetchurl` and not the evaluation-time function `builtins.fetchurl`.\n- The vulnerability also affects the trust-on-first-use (TOFU) mechanism when using invalid hashes.\n- The issue was addressed in Nix versions 2.18.8 and 2.24.8.\n- The vulnerability has a CVSS score of 5.9, considered a \"Moderate\" severity.\n\nThis is a more detailed description than the official CVE description, as it provides specific details about the affected components and attack scenarios.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n\n| CWE ID   | CWE Name                                                                          | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| -------- | --------------------------------------------------------------------------------- | ---------- | --------------------- | ------------------------------- | ------------------------------- |\n| CWE-295  | Improper Certificate Validation                                                   | 1          | Base                  | Primary                         | Allowed                         |\n| CWE-319  | Cleartext Transmission of Sensitive Information                                   | 0.7        | Base                  | Secondary                       | Allowed                         |\n| CWE-306 | Missing Authentication for Critical Function                                    | 0.6        | Base                  | Secondary                       | Allowed                         |\n| CWE-201  | Insertion of Sensitive Information Into Sent Data                                   | 0.5        | Base                  | Secondary                       | Allowed                         |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary CWE is CWE-295, which focuses on the **improper validation of certificates**. The other CWEs considered are related to the consequences of this **improper validation**, such as the transmission of sensitive information in cleartext (CWE-319), missing authentication for critical functions (CWE-306) and insertion of sensitive information into sent data (CWE-201). These are all base-level CWEs, providing a good level of specificity.\n\n```mermaid\ngraph TD\n    cwe295[\"CWE-295: Improper Certificate Validation\"]\n    cwe319[\"CWE-319: Cleartext Transmission of Sensitive Information\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    cwe201[\"CWE-201: Insertion of Sensitive Information Into Sent Data\"]\n    \n    cwe319 -->|CANFOLLOW| cwe295\n    cwe306 -->|CANFOLLOW| cwe295\n    cwe201 -->|CANFOLLOW| cwe295\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe295 primary\n    class cwe319,cwe306,cwe201 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with **CWE-295 (Improper Certificate Validation)**, which leads to the possibility of a man-in-the-middle attack. Due to the MITM attack, sensitive information may be transmitted in cleartext (**CWE-319**), authentication may be bypassed (**CWE-306**), and sensitive data may be inserted into the sent data (**CWE-201**).\n\n## Summary of Analysis\n\nBased on the evidence provided, the primary vulnerability is the **failure to validate TLS certificates** in `fetchurl`. This aligns directly with **CWE-295 (Improper Certificate Validation)**, which is a base-level CWE and therefore appropriately specific. The other CWEs considered represent potential consequences of this **missing validation**, such as **leaking credentials** due to transmission over an unencrypted channel (**CWE-319**), or **bypassing authentication** when relying on a secure connection (**CWE-306**). **CWE-201** represents the general case of sending sensitive information.\n\nThe evidence supporting **CWE-295** is strong. The \"Vulnerability Description Key Phrases\" mention \"**did not verify TLS certificates on HTTPS connections**\" The \"CVE Reference Links Content Summary\" section explicitly states: \"The primary vulnerability is the absence of TLS certificate verification, making connections susceptible to Man-in-the-Middle (MITM) attacks.\"\n\nOther CWEs, such as CWE-863 (Incorrect Authorization) and CWE-306 (Missing Authentication for Critical Function), were considered but deemed secondary because the primary issue is the **lack of certificate validation**. The guidance also suggests that if you can determine whether identity was checked, assume it\u2019s authorization and consider 862 or 863.\n\n**CWE-923 (Improper Restriction of Communication Channel to Intended Endpoints)** was also considered, but the issue is less about the restriction of the channel and more about the **lack of validation** of the certificate.\n\nRelevant CWE Information:\n\n**CWE-295: Improper Certificate Validation**\nThe product does not validate, or incorrectly validates, a certificate.\n\n**CWE-319: Cleartext Transmission of Sensitive Information**\nThe product transmits sensitive information in cleartext over a communication channel that is not protected by encryption. This can expose the information to eavesdropping, which could result in information disclosure, system compromise, or other attacks.\n\n**CWE-306: Missing Authentication for Critical Function**\nThe product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.\n\n**CWE-201: Insertion of Sensitive Information Into Sent Data**\nThe product includes sensitive information in the data it sends to other components or systems.\n\n---",
  "analysis_with_relationships": "# Summary\n\n| CWE ID   | CWE Name                                                                          | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| -------- | --------------------------------------------------------------------------------- | ---------- | --------------------- | ------------------------------- | ------------------------------- |\n| CWE-295  | Improper Certificate Validation                                                   | 1          | Base                  | Primary                         | Allowed                         |\n| CWE-319  | Cleartext Transmission of Sensitive Information                                   | 0.7        | Base                  | Secondary                       | Allowed                         |\n| CWE-306 | Missing Authentication for Critical Function                                    | 0.6        | Base                  | Secondary                       | Allowed                         |\n| CWE-201  | Insertion of Sensitive Information Into Sent Data                                   | 0.5        | Base                  | Secondary                       | Allowed                         |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary CWE is CWE-295, which focuses on the **improper validation of certificates**. The other CWEs considered are related to the consequences of this **improper validation**, such as the transmission of sensitive information in cleartext (CWE-319), missing authentication for critical functions (CWE-306) and insertion of sensitive information into sent data (CWE-201). These are all base-level CWEs, providing a good level of specificity.\n\n```mermaid\ngraph TD\n    cwe295[\"CWE-295: Improper Certificate Validation\"]\n    cwe319[\"CWE-319: Cleartext Transmission of Sensitive Information\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    cwe201[\"CWE-201: Insertion of Sensitive Information Into Sent Data\"]\n    \n    cwe319 -->|CANFOLLOW| cwe295\n    cwe306 -->|CANFOLLOW| cwe295\n    cwe201 -->|CANFOLLOW| cwe295\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe295 primary\n    class cwe319,cwe306,cwe201 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with **CWE-295 (Improper Certificate Validation)**, which leads to the possibility of a man-in-the-middle attack. Due to the MITM attack, sensitive information may be transmitted in cleartext (**CWE-319**), authentication may be bypassed (**CWE-306**), and sensitive data may be inserted into the sent data (**CWE-201**).\n\n## Summary of Analysis\n\nBased on the evidence provided, the primary vulnerability is the **failure to validate TLS certificates** in `fetchurl`. This aligns directly with **CWE-295 (Improper Certificate Validation)**, which is a base-level CWE and therefore appropriately specific. The other CWEs considered represent potential consequences of this **missing validation**, such as **leaking credentials** due to transmission over an unencrypted channel (**CWE-319**), or **bypassing authentication** when relying on a secure connection (**CWE-306**). **CWE-201** represents the general case of sending sensitive information.\n\nThe evidence supporting **CWE-295** is strong. The \"Vulnerability Description Key Phrases\" mention \"**did not verify TLS certificates on HTTPS connections**\" The \"CVE Reference Links Content Summary\" section explicitly states: \"The primary vulnerability is the absence of TLS certificate verification, making connections susceptible to Man-in-the-Middle (MITM) attacks.\"\n\nOther CWEs, such as CWE-863 (Incorrect Authorization) and CWE-306 (Missing Authentication for Critical Function), were considered but deemed secondary because the primary issue is the **lack of certificate validation**. The guidance also suggests that if you can determine whether identity was checked, assume it\u2019s authorization and consider 862 or 863.\n\n**CWE-923 (Improper Restriction of Communication Channel to Intended Endpoints)** was also considered, but the issue is less about the restriction of the channel and more about the **lack of validation** of the certificate.\n\nRelevant CWE Information:\n\n**CWE-295: Improper Certificate Validation**\nThe product does not validate, or incorrectly validates, a certificate.\n\n**CWE-319: Cleartext Transmission of Sensitive Information**\nThe product transmits sensitive information in cleartext over a communication channel that is not protected by encryption. This can expose the information to eavesdropping, which could result in information disclosure, system compromise, or other attacks.\n\n**CWE-306: Missing Authentication for Critical Function**\nThe product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.\n\n**CWE-201: Insertion of Sensitive Information Into Sent Data**\nThe product includes sensitive information in the data it sends to other components or systems.\n\n---\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-319:**\n- 319 (Cleartext Transmission of Sensitive Information) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "295",
        "name": "Improper Certificate Validation",
        "source": "sparse"
      },
      "similarity": 1327.2188062366217
    },
    {
      "metadata": {
        "doc_id": "923",
        "name": "Improper Restriction of Communication Channel to Intended Endpoints",
        "source": "sparse"
      },
      "similarity": 1275.3995467465606
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 1256.0022396097847
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 1249.8052614453125
    },
    {
      "metadata": {
        "doc_id": "319",
        "name": "Cleartext Transmission of Sensitive Information",
        "source": "sparse"
      },
      "similarity": 1244.7933936735506
    },
    {
      "metadata": {
        "doc_id": "327",
        "name": "Use of a Broken or Risky Cryptographic Algorithm",
        "source": "sparse"
      },
      "similarity": 1242.9741133281368
    },
    {
      "metadata": {
        "doc_id": "522",
        "name": "Insufficiently Protected Credentials",
        "source": "sparse"
      },
      "similarity": 1238.1417831962056
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 1232.3699569547189
    },
    {
      "metadata": {
        "doc_id": "297",
        "name": "Improper Validation of Certificate with Host Mismatch",
        "type": "Variant",
        "original_content": "The product communicates with a host that provides a certificate, but the product does not properly ensure that the certificate is actually associated with that host.",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.49493895959457257,
            "graph": 1.7879679301099172
          }
        }
      },
      "similarity": 0.49493895959457257
    },
    {
      "doc_id": "322",
      "text": "CWE-322: Key Exchange without Entity Authentication",
      "score": 2.9120000000000004,
      "metadata": {
        "doc_id": "322",
        "name": "Key Exchange without Entity Authentication",
        "type": "base",
        "original_content": "CWE-322: Key Exchange without Entity Authentication",
        "relationships": [
          {
            "source_id": "322",
            "target_id": "295",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "322",
            "target_id": "923",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "322",
            "target_id": "306",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "923",
            "target_id": "322",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "306",
            "target_id": "322",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "295",
            "target_id": "322",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0,
          "peer_group": 0.9
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward",
            "peer_relationship"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "923",
                  "322",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "923"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "923",
                  "322",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "923"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "322",
                  "923",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "923"
            },
            "peer_relationship": {
              "path": [
                [
                  "295",
                  "322",
                  "PEEROF"
                ]
              ],
              "score": 0.9,
              "type": "peer_relationship",
              "source": "295"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.9120000000000004
          }
        }
      },
      "similarity": 2.9120000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-319",
      "CWE-306",
      "CWE-201",
      "CWE-923",
      "CWE-295"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}