{
  "method": "sparse_base",
  "query": "In the Linux kernel, the following vulnerability has been resolved net stmmac fix TSO DMA API usage causing oops Commit 66600fac7a98 (net stmmac TSO Fix unbalanced DMA map/unmap for non-paged SKB data) moved the assignment of tx_skbuff_dma[]s members to be later in stmmac_tso_xmit(). The buf (dma cookie) and len stored in this structure are passed to dma_unmap_single() by stmmac_tx_clean(). The DMA API requires that the dma cookie passed to dma_unmap_single() is the same as the value returned from dma_map_single(). However, by moving the assignment later, this is not the case when priv->dma_cap.addr64 > 32 as des is offset by proto_hdr_len. This causes problems such as dwc-eth-dwmac 2490000.ethernet eth0 Tx DMA map failed and with DMA_API_DEBUG enabled DMA-API dwc-eth-dwmac 2490000.ethernet device driver tries to +free DMA memory it has not allocated [device address=0x000000ffffcf65c0] [size=66 bytes] Fix this by maintaining des as the original DMA cookie, and use tso_des to pass the offset DMA cookie to stmmac_tso_allocator(). Full details of the crashes can be found at https//lore.kernel.org/all/d8112193-0386-4e14-b516-37c2d838171a@nvidia.com/ https//lore.kernel.org/all/klkzp5yn5kq5efgtrow6wbvnc46bcqfxs65nz3qy77ujr5turc@bwwhelz2l4dw/",
  "keyphrases": {
    "base_query": "In the Linux kernel, the following vulnerability has been resolved net stmmac fix TSO DMA API usage causing oops Commit 66600fac7a98 (net stmmac TSO Fix unbalanced DMA map/unmap for non-paged SKB data) moved the assignment of tx_skbuff_dma[]s members to be later in stmmac_tso_xmit(). The buf (dma cookie) and len stored in this structure are passed to dma_unmap_single() by stmmac_tx_clean(). The DMA API requires that the dma cookie passed to dma_unmap_single() is the same as the value returned from dma_map_single(). However, by moving the assignment later, this is not the case when priv->dma_cap.addr64 > 32 as des is offset by proto_hdr_len. This causes problems such as dwc-eth-dwmac 2490000.ethernet eth0 Tx DMA map failed and with DMA_API_DEBUG enabled DMA-API dwc-eth-dwmac 2490000.ethernet device driver tries to +free DMA memory it has not allocated [device address=0x000000ffffcf65c0] [size=66 bytes] Fix this by maintaining des as the original DMA cookie, and use tso_des to pass the offset DMA cookie to stmmac_tso_allocator(). Full details of the crashes can be found at https//lore.kernel.org/all/d8112193-0386-4e14-b516-37c2d838171a@nvidia.com/ https//lore.kernel.org/all/klkzp5yn5kq5efgtrow6wbvnc46bcqfxs65nz3qy77ujr5turc@bwwhelz2l4dw/"
  },
  "timestamp": "2025-07-13T23:56:14.168892",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 315.91291316554504
    },
    {
      "doc_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "score": 279.8406239788118
    },
    {
      "doc_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "score": 275.21958693330185
    },
    {
      "doc_id": "787",
      "name": "Out-of-bounds Write",
      "score": 267.5206802400085
    },
    {
      "doc_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "score": 266.8307033120602
    }
  ]
}