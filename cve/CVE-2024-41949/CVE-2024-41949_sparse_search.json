{
  "retriever": "sparse",
  "query": "biscuit-rust is the Rust implementation of Biscuit, an authentication and authorization token for microservices architectures. Third-party blocks can be generated without transferring the whole token to the third-party authority. Instead, a ThirdPartyBlock request can be sent, providing only the necessary info to generate a third-party block and to sign it, which includes the public key of the previous block (used in the signature) and the public keys part of the token symbol table (for public key interning in datalog expressions). A third-part block request forged by a malicious user can trick the third-party authority into generating datalog trusting the wrong keypair.",
  "keyphrases": {
    "weakness": [
      "generating Third-party blocks without transferring the whole token"
    ]
  },
  "timestamp": "2025-07-13 13:32:25",
  "cve_id": "CVE-2024-41949",
  "result_count": 10,
  "results": [
    {
      "cwe_id": "201",
      "name": "Insertion of Sensitive Information Into Sent Data",
      "score": 610.2512651059179,
      "search_source": "weakness:generating Third-party blocks without transferring the whole token"
    },
    {
      "cwe_id": "335",
      "name": "Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)",
      "score": 590.0948136935275,
      "search_source": "weakness:generating Third-party blocks without transferring the whole token"
    },
    {
      "cwe_id": "99",
      "name": "Improper Control of Resource Identifiers ('Resource Injection')",
      "score": 586.1144840440663,
      "search_source": "weakness:generating Third-party blocks without transferring the whole token"
    },
    {
      "cwe_id": "1391",
      "name": "Use of Weak Credentials",
      "score": 573.6566930498965,
      "search_source": "weakness:generating Third-party blocks without transferring the whole token"
    },
    {
      "cwe_id": "321",
      "name": "Use of Hard-coded Cryptographic Key",
      "score": 555.5626110012095,
      "search_source": "weakness:generating Third-party blocks without transferring the whole token"
    },
    {
      "cwe_id": "295",
      "name": "Improper Certificate Validation",
      "score": 552.7425086162109,
      "search_source": "weakness:generating Third-party blocks without transferring the whole token"
    },
    {
      "cwe_id": "208",
      "name": "Observable Timing Discrepancy",
      "score": 551.4984774328321,
      "search_source": "weakness:generating Third-party blocks without transferring the whole token"
    },
    {
      "cwe_id": "668",
      "name": "Exposure of Resource to Wrong Sphere",
      "score": 547.1101737129563,
      "search_source": "weakness:generating Third-party blocks without transferring the whole token"
    },
    {
      "cwe_id": "212",
      "name": "Improper Removal of Sensitive Information Before Storage or Transfer",
      "score": 542.5696389413171,
      "search_source": "weakness:generating Third-party blocks without transferring the whole token"
    },
    {
      "cwe_id": "327",
      "name": "Use of a Broken or Risky Cryptographic Algorithm",
      "score": 534.5411725023488,
      "search_source": "weakness:generating Third-party blocks without transferring the whole token"
    }
  ]
}