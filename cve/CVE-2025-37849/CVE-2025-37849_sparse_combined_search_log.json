{
  "method": "sparse_combined",
  "query": "In the Linux kernel, the following vulnerability has been resolved KVM arm64 Tear down vGIC on failed vCPU creation If kvm_arch_vcpu_create() fails to share the vCPU page with the hypervisor, we propagate the error back to the ioctl but leave the vGIC vCPU data initialised. Note only does this leak the corresponding memory when the vCPU is destroyed but it can also lead to use-after-free if the redistributor device handling tries to walk into the vCPU. Add the missing cleanup to kvm_arch_vcpu_create(), ensuring that the vGIC vCPU structures are destroyed on error.",
  "keyphrases": {
    "rootcause": [
      "use-after-free"
    ]
  },
  "timestamp": "2025-07-14T21:36:43.375264",
  "results_count": 13,
  "results_summary": [
    {
      "doc_id": "416",
      "name": "Use After Free",
      "score": 1000.0
    },
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 482.1857714724701
    },
    {
      "doc_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "score": 470.56665773275944
    },
    {
      "doc_id": "909",
      "name": "Missing Initialization of Resource",
      "score": 468.38249863081296
    },
    {
      "doc_id": "415",
      "name": "Double Free",
      "score": 464.965072917064
    }
  ]
}