{
  "cve_id": "CVE-2024-45171",
  "description": "An issue was discovered in za-internet C-MOR Video Surveillance 5.2401. Due to **improper user input validation**, it is possible to upload dangerous files, for instance PHP code, to the C-MOR system. By analyzing the C-MOR web interface, it was found out that the upload functionality for backup files allows an authenticated user to upload arbitrary files. The only condition is that the filename contains a .cbkf string. Therefore, webshell.cbkf.php is considered a valid file name for the C-MOR web application. Uploaded files are stored within the directory /srv/www/backups on the C-MOR system, and can thus be accessed via the URL https///backup/upload_. Due to broken access control, low-privileged authenticated users can also use this file upload functionality.",
  "key_phrases": {
    "rootcause": "improper user input validation",
    "weakness": "",
    "impact": "upload dangerous files",
    "vector": "",
    "attacker": "authenticated user",
    "product": "za-internet C-MOR Video Surveillance",
    "version": "5.2401",
    "component": ""
  },
  "reference_content": "Based on the provided content, here's a breakdown of the vulnerability:\n\n**CVE ID:** CVE-2024-45171\n\n**Root Cause:** Improper user input validation in the C-MOR Video Surveillance web interface's backup file upload functionality.\n\n**Weaknesses/Vulnerabilities:**\n*   **Unrestricted File Upload (CWE-434):** The system allows uploading files with dangerous types, such as PHP code, without proper validation of the file content or type.\n*   **Insufficient File Name Validation:** The only validation is that the file name contains the string \".cbkf\".\n*   **Broken Access Control:** Low-privileged authenticated users can also use this file upload functionality (as described in SYSS-2024-024).\n\n**Impact of Exploitation:**\n*   **Arbitrary Code Execution:** An attacker can upload a PHP web shell to the server and execute arbitrary OS commands.\n*   **System Compromise:** Successful exploitation can lead to complete system compromise of the C-MOR video surveillance system.\n\n**Attack Vectors:**\n*   **Web Interface:** The vulnerability is exploitable through the C-MOR web interface's backup file upload feature.\n*   **Network Access:** The web interface is accessible via the network and the internet.\n\n**Required Attacker Capabilities/Position:**\n*   **Authentication:** The attacker needs to be an authenticated user (even a low-privileged one).\n*   **Network Access:** The attacker needs network access to the C-MOR system's web interface.\n\n**Technical Details:**\n*   The upload functionality for backup files allows the upload of arbitrary files if the filename contains \".cbkf\"\n*   Uploaded files are stored in the `/srv/www/backups` directory on the C-MOR system.\n*   The uploaded files can be accessed via the URL `https://<HOST>/backup/upload_<FILENAME>`.\n*   The provided proof of concept (PoC) uses a simple PHP web shell for command execution.\n\n**Mitigation:**\n*   Upgrade to C-MOR Video Surveillance version 6.00PL1.\n\nThis information is more detailed than the basic description usually found in a CVE record. It provides a clear picture of how the vulnerability can be exploited and the impact it can have on a vulnerable system.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n\n| CWE ID  | CWE Name                                                                                  | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| ------- | ----------------------------------------------------------------------------------------- | ---------- | ----------------------- | ------------------------------- | ----------------------------- |\n| CWE-434 | Unrestricted Upload of File with Dangerous Type                                           | 0.9        | Base                    | Primary                         | Allowed                       |\n| CWE-306 | Missing Authentication for Critical Function                                           | 0.6        | Base                    | Secondary                         | Allowed                       |\n| CWE-20 | Improper Input Validation                                                                   | 0.5        | Class                   | Secondary                         | Discouraged                  |\n| CWE-646 | Reliance on File Name or Extension of Externally-Supplied File | 0.4        | Variant                   | Secondary                         | Allowed                       |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary weakness is CWE-434 [Unrestricted Upload of File with Dangerous Type], which is a base-level CWE. It is related to CWE-73 [External Control of File Name or Path] and can be preceded by it. CWE-20 [Improper Input Validation] is a parent of CWE-1284 [Improper Validation of Specified Quantity in Input]. CWE-306 [Missing Authentication for Critical Function] is a base level CWE, and child of CWE-287 [Improper Authentication].\nCWE-434 is a peer of CWE-430 [Insufficient Qualification of File Name] and CWE-436 [Unvalidated Uncompressed Data].\n\n```mermaid\ngraph TD\n    cwe434[\"CWE-434: Unrestricted Upload of File with Dangerous Type\"]\n    cwe73[\"CWE-73: External Control of File Name or Path\"]\n    cwe20[\"CWE-20: Improper Input Validation\"]\n    cwe1284[\"CWE-1284: Improper Validation of Specified Quantity in Input\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    cwe287[\"CWE-287: Improper Authentication\"]\n    \n    cwe434 -->|CANFOLLOW| cwe73\n    cwe1284 -->|CHILDOF| cwe20\n    cwe306 -->|CHILDOF| cwe287\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe434 primary\n    class cwe73,cwe20,cwe1284,cwe306,cwe287 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with **improper input validation**, leading to the **unrestricted upload of a file with a dangerous type**. This allows for arbitrary code execution and potential system compromise.\nThe missing authentication could also be a starting point for this vulnerability.\n\n## Summary of Analysis\n\nThe primary vulnerability is CWE-434 [Unrestricted Upload of File with Dangerous Type], supported by the evidence \"it is possible to upload dangerous files, for instance PHP code, to the C-MOR system\". The system **does not properly validate the content or type of the uploaded file**, allowing an attacker to upload a PHP web shell and execute arbitrary commands. The fact that the filename only needs to contain \".cbkf\" to be considered valid is a clear indicator of insufficient validation.\nThe root cause is the **improper user input validation**.\n\nCWE-306 [Missing Authentication for Critical Function] is considered because the vulnerability description mentions \"low-privileged authenticated users can also use this file upload functionality\". This indicates a potential lack of proper authentication checks, where even users with minimal privileges can exploit the upload feature.\n\nCWE-20 [Improper Input Validation] is also relevant as a more general weakness, because the root cause is **improper user input validation**. However, CWE-434 [Unrestricted Upload of File with Dangerous Type] is a more precise classification in this instance. The vulnerability description mentions that the only condition for a valid filename is that it contains a .cbkf string, which indicates **improper input validation**.\n\nCWE-646 [Reliance on File Name or Extension of Externally-Supplied File] is considered because the vulnerability relies on the \".cbkf\" string in the filename.\n\nThe primary decision is based on the evidence from the CVE summary, specifically the \"Unrestricted File Upload (CWE-434)\" and \"Insufficient File Name Validation\" points. These details align strongly with the characteristics of CWE-434.\n\nThe selected CWEs are at the optimal level of specificity, with CWE-434 being a Base-level CWE that directly addresses the unrestricted file upload vulnerability. CWE-306 is a Base-level CWE that addresses the lack of proper authentication.\n\n**CWEs Considered But Not Used**\n\n*   CWE-22 [Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')]: While the uploaded files are stored in a specific directory, the primary issue is not about path traversal.\n*   CWE-73 [External Control of File Name or Path]: While the filename is externally controlled, the core issue is the unrestricted upload of dangerous file types.\n*   CWE-88 [Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')]: This CWE is not applicable as the vulnerability does not involve argument injection.\n* CWE-425 [Direct Request ('Forced Browsing')]: The primary issue is not about forced browsing, but about unrestricted file uploads and broken access control.",
  "analysis_with_relationships": "# Summary\n\n| CWE ID  | CWE Name                                                                                  | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| ------- | ----------------------------------------------------------------------------------------- | ---------- | ----------------------- | ------------------------------- | ----------------------------- |\n| CWE-434 | Unrestricted Upload of File with Dangerous Type                                           | 0.9        | Base                    | Primary                         | Allowed                       |\n| CWE-306 | Missing Authentication for Critical Function                                           | 0.6        | Base                    | Secondary                         | Allowed                       |\n| CWE-20 | Improper Input Validation                                                                   | 0.5        | Class                   | Secondary                         | Discouraged                  |\n| CWE-646 | Reliance on File Name or Extension of Externally-Supplied File | 0.4        | Variant                   | Secondary                         | Allowed                       |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary weakness is CWE-434 [Unrestricted Upload of File with Dangerous Type], which is a base-level CWE. It is related to CWE-73 [External Control of File Name or Path] and can be preceded by it. CWE-20 [Improper Input Validation] is a parent of CWE-1284 [Improper Validation of Specified Quantity in Input]. CWE-306 [Missing Authentication for Critical Function] is a base level CWE, and child of CWE-287 [Improper Authentication].\nCWE-434 is a peer of CWE-430 [Insufficient Qualification of File Name] and CWE-436 [Unvalidated Uncompressed Data].\n\n```mermaid\ngraph TD\n    cwe434[\"CWE-434: Unrestricted Upload of File with Dangerous Type\"]\n    cwe73[\"CWE-73: External Control of File Name or Path\"]\n    cwe20[\"CWE-20: Improper Input Validation\"]\n    cwe1284[\"CWE-1284: Improper Validation of Specified Quantity in Input\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    cwe287[\"CWE-287: Improper Authentication\"]\n    \n    cwe434 -->|CANFOLLOW| cwe73\n    cwe1284 -->|CHILDOF| cwe20\n    cwe306 -->|CHILDOF| cwe287\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe434 primary\n    class cwe73,cwe20,cwe1284,cwe306,cwe287 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with **improper input validation**, leading to the **unrestricted upload of a file with a dangerous type**. This allows for arbitrary code execution and potential system compromise.\nThe missing authentication could also be a starting point for this vulnerability.\n\n## Summary of Analysis\n\nThe primary vulnerability is CWE-434 [Unrestricted Upload of File with Dangerous Type], supported by the evidence \"it is possible to upload dangerous files, for instance PHP code, to the C-MOR system\". The system **does not properly validate the content or type of the uploaded file**, allowing an attacker to upload a PHP web shell and execute arbitrary commands. The fact that the filename only needs to contain \".cbkf\" to be considered valid is a clear indicator of insufficient validation.\nThe root cause is the **improper user input validation**.\n\nCWE-306 [Missing Authentication for Critical Function] is considered because the vulnerability description mentions \"low-privileged authenticated users can also use this file upload functionality\". This indicates a potential lack of proper authentication checks, where even users with minimal privileges can exploit the upload feature.\n\nCWE-20 [Improper Input Validation] is also relevant as a more general weakness, because the root cause is **improper user input validation**. However, CWE-434 [Unrestricted Upload of File with Dangerous Type] is a more precise classification in this instance. The vulnerability description mentions that the only condition for a valid filename is that it contains a .cbkf string, which indicates **improper input validation**.\n\nCWE-646 [Reliance on File Name or Extension of Externally-Supplied File] is considered because the vulnerability relies on the \".cbkf\" string in the filename.\n\nThe primary decision is based on the evidence from the CVE summary, specifically the \"Unrestricted File Upload (CWE-434)\" and \"Insufficient File Name Validation\" points. These details align strongly with the characteristics of CWE-434.\n\nThe selected CWEs are at the optimal level of specificity, with CWE-434 being a Base-level CWE that directly addresses the unrestricted file upload vulnerability. CWE-306 is a Base-level CWE that addresses the lack of proper authentication.\n\n**CWEs Considered But Not Used**\n\n*   CWE-22 [Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')]: While the uploaded files are stored in a specific directory, the primary issue is not about path traversal.\n*   CWE-73 [External Control of File Name or Path]: While the filename is externally controlled, the core issue is the unrestricted upload of dangerous file types.\n*   CWE-88 [Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')]: This CWE is not applicable as the vulnerability does not involve argument injection.\n* CWE-425 [Direct Request ('Forced Browsing')]: The primary issue is not about forced browsing, but about unrestricted file uploads and broken access control.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-1284:**\n- 1284 (Improper Validation of Specified Quantity in Input) - ROOT\n\n\n**Chain starting from CWE-88:**\n- 88 (Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse"
      },
      "similarity": 722.5381166749082
    },
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "sparse"
      },
      "similarity": 672.1189963764175
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 656.7721015312309
    },
    {
      "metadata": {
        "doc_id": "138",
        "name": "Improper Neutralization of Special Elements",
        "source": "sparse"
      },
      "similarity": 651.9526651970955
    },
    {
      "metadata": {
        "doc_id": "20",
        "name": "Improper Input Validation",
        "source": "sparse"
      },
      "similarity": 631.2199900105877
    },
    {
      "metadata": {
        "doc_id": "88",
        "name": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
        "source": "sparse"
      },
      "similarity": 627.2757595721806
    },
    {
      "metadata": {
        "doc_id": "287",
        "name": "Improper Authentication",
        "source": "sparse"
      },
      "similarity": 626.0825812302105
    },
    {
      "metadata": {
        "doc_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "source": "sparse"
      },
      "similarity": 621.3921055625102
    },
    {
      "metadata": {
        "doc_id": "646",
        "name": "Reliance on File Name or Extension of Externally-Supplied File",
        "type": "Variant",
        "original_content": "The product allows a file to be uploaded, but it relies on the file name or extension of the file to determine the appropriate behaviors. This could be used by attackers to cause the file to be misclassified and processed in a dangerous fashion.",
        "keyphrase_source": "rootcause:improper user input validation",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.5736353347455534
          }
        }
      },
      "similarity": 0.5736353347455534
    },
    {
      "doc_id": "425",
      "text": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
      "score": 0.5974336440789696,
      "metadata": {
        "doc_id": "425",
        "name": "Direct Request ('Forced Browsing')",
        "type": "Base",
        "extended_description": "Web applications susceptible to direct request attacks often make the false assumption that such resources can only be reached through a given navigation path and so only apply authorization at certain points in the path.",
        "alternate_terms": [
          "forced browsing"
        ],
        "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
        "relationships": [
          {
            "source_id": "425",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "424",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "288",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "862",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "425",
            "target_id": "862",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "862",
            "target_id": "425",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "424",
            "target_id": "425",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "288",
            "target_id": "425",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "source": "graph",
        "sources": [
          "vector",
          "graph"
        ],
        "vector_score": 0.5974336440789696,
        "graph_score": 3.4200400000000006,
        "score_components": {
          "relationship_chain": 0.6,
          "explicit_mention": 1.0,
          "abstraction_path": 0.9,
          "sequence_path": 0.5760000000000002
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "22",
                  "73",
                  "CANFOLLOW"
                ],
                [
                  "73",
                  "98",
                  "CANPRECEDE"
                ],
                [
                  "98",
                  "425",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.6,
              "type": "relationship_chain",
              "source": "22"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "434",
                  "73",
                  "CANFOLLOW"
                ],
                [
                  "73",
                  "98",
                  "CANPRECEDE"
                ],
                [
                  "98",
                  "425",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.5760000000000002,
              "type": "vulnerability_sequence_forward",
              "source": "434"
            }
          }
        },
        "is_explicit": true,
        "abstraction_level": "base",
        "position": "after",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5612806794004619,
            "graph": 2.290997457631588
          }
        }
      },
      "similarity": 2.290997457631588
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-1284",
      "CWE-88",
      "CWE-646",
      "CWE-22",
      "CWE-73",
      "CWE-306",
      "CWE-20",
      "CWE-436",
      "CWE-287",
      "CWE-425",
      "CWE-430",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}