{
  "query": "In the Linux kernel, the following vulnerability has been resolved drm/vmwgfx Fix a deadlock in dma buf fence polling Introduce a version of the fence ops that on release doesnt remove the fence from the pending list, and thus doesnt require a lock to fix poll->fence wait->fence unref deadlocks. vmwgfx overwrites the wait callback to iterate over the list of all fences and update their status, to do that it holds a lock to prevent the list modifcations from other threads. The fence destroy callback both deletes the fence and removes it from the list of pending fences, for which it holds a lock. dma buf polling cb unrefs a fence after its been signaled so the poll calls the wait, which signals the fences, which are being destroyed. The destruction tries to acquire the lock on the pending fences list which it can never get because its held by the wait from which it was called. Old bug, but not a lot of userspace apps were using dma-buf polling interfaces. Fix those, in particular this fixes KDE stalls/deadlock.",
  "count": 20,
  "results": [
    {
      "cwe_id": "1325",
      "name": "Improperly Controlled Sequential Memory Allocation",
      "abstraction": "base",
      "score": 2.3400000000000003,
      "original_score": 2.3400000000000003,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "abstraction": "base",
      "score": 2.3295999999999997,
      "original_score": 2.3295999999999997,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "22",
      "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
      "abstraction": "base",
      "score": 1.7680000000000005,
      "original_score": 1.7680000000000005,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "41",
      "name": "Improper Resolution of Path Equivalence",
      "abstraction": "base",
      "score": 1.7680000000000005,
      "original_score": 1.7680000000000005,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "120",
      "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
      "abstraction": "base",
      "score": 1.7680000000000005,
      "original_score": 1.7680000000000005,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "123",
      "name": "Write-what-where Condition",
      "abstraction": "base",
      "score": 1.7680000000000005,
      "original_score": 1.7680000000000005,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "364",
      "name": "Signal Handler Race Condition",
      "abstraction": "base",
      "score": 1.7550000000000001,
      "original_score": 1.7550000000000001,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "abstraction": "Base",
      "score": 1.7146664864128003,
      "original_score": 1.7146664864128003,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1265",
      "name": "Unintended Reentrant Invocation of Non-reentrant Code Via Nested Calls",
      "abstraction": "base",
      "score": 1.6848000000000003,
      "original_score": 1.6848000000000003,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "386",
      "name": "Symbolic Name not Mapping to Correct Object",
      "abstraction": "base",
      "score": 1.6744000000000003,
      "original_score": 1.6744000000000003,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "662",
      "name": "Improper Synchronization",
      "abstraction": "class",
      "score": 1.6736000000000002,
      "original_score": 1.6736000000000002,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "61",
      "name": "UNIX Symbolic Link (Symlink) Following",
      "abstraction": "compound",
      "score": 1.61,
      "original_score": 1.61,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "abstraction": "Base",
      "score": 1.537676635646068,
      "original_score": 1.537676635646068,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "abstraction": "Base",
      "score": 1.5363454718200953,
      "original_score": 1.5363454718200953,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "abstraction": "Variant",
      "score": 1.5272068896821525,
      "original_score": 1.5272068896821525,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "456",
      "name": "Missing Initialization of a Variable",
      "abstraction": "variant",
      "score": 1.51536,
      "original_score": 1.51536,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "abstraction": "Variant",
      "score": 1.4275129605745769,
      "original_score": 1.4275129605745769,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "129",
      "name": "Improper Validation of Array Index",
      "abstraction": "variant",
      "score": 1.4169600000000002,
      "original_score": 1.4169600000000002,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "20",
      "name": "Improper Input Validation",
      "abstraction": "class",
      "score": 1.3600000000000003,
      "original_score": 1.3600000000000003,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "689",
      "name": "Permission Race Condition During Resource Copy",
      "abstraction": "compound",
      "score": 1.3388000000000002,
      "original_score": 1.3388000000000002,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 1.3388000000000002,
    "max": 2.3400000000000003,
    "mean": 1.6756964222067847,
    "median": 1.6740000000000004,
    "count": 20
  }
}