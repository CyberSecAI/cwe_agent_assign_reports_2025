{
  "method": "sparse_base",
  "query": "In the Linux kernel, the following vulnerability has been resolved netpoll Fix race condition in netpoll_owner_active KCSAN detected a race condition in netpoll BUG KCSAN data-race in net_rx_action / netpoll_send_skb write (marked) to 0xffff8881164168b0 of 4 bytes by interrupt on cpu 10 net_rx_action (./include/linux/netpoll.h90 net/core/dev.c6712 net/core/dev.c6822) read to 0xffff8881164168b0 of 4 bytes by task 1 on cpu 2 netpoll_send_skb (net/core/netpoll.c319 net/core/netpoll.c345 net/core/netpoll.c393) netpoll_send_udp (net/core/netpoll.c?) value changed 0x0000000a -> 0xffffffff This happens because netpoll_owner_active() needs to check if the current CPU is the owner of the lock, touching napi->poll_owner non atomically. The ->poll_owner field contains the current CPU holding the lock. Use an atomic read to check if the poll owner is the current CPU.",
  "keyphrases": {
    "base_query": "In the Linux kernel, the following vulnerability has been resolved netpoll Fix race condition in netpoll_owner_active KCSAN detected a race condition in netpoll BUG KCSAN data-race in net_rx_action / netpoll_send_skb write (marked) to 0xffff8881164168b0 of 4 bytes by interrupt on cpu 10 net_rx_action (./include/linux/netpoll.h90 net/core/dev.c6712 net/core/dev.c6822) read to 0xffff8881164168b0 of 4 bytes by task 1 on cpu 2 netpoll_send_skb (net/core/netpoll.c319 net/core/netpoll.c345 net/core/netpoll.c393) netpoll_send_udp (net/core/netpoll.c?) value changed 0x0000000a -> 0xffffffff This happens because netpoll_owner_active() needs to check if the current CPU is the owner of the lock, touching napi->poll_owner non atomically. The ->poll_owner field contains the current CPU holding the lock. Use an atomic read to check if the poll owner is the current CPU."
  },
  "timestamp": "2025-07-13T12:48:00.801560",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "833",
      "name": "Deadlock",
      "score": 247.45917062503327
    },
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 200.88877323277384
    },
    {
      "doc_id": "667",
      "name": "Improper Locking",
      "score": 200.53305806954873
    },
    {
      "doc_id": "674",
      "name": "Uncontrolled Recursion",
      "score": 193.61113501937353
    },
    {
      "doc_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "score": 187.09009172839131
    }
  ]
}