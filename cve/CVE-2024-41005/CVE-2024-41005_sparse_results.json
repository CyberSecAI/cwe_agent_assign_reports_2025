{
  "query": "In the Linux kernel, the following vulnerability has been resolved netpoll Fix race condition in netpoll_owner_active KCSAN detected a race condition in netpoll BUG KCSAN data-race in net_rx_action / netpoll_send_skb write (marked) to 0xffff8881164168b0 of 4 bytes by interrupt on cpu 10 net_rx_action (./include/linux/netpoll.h90 net/core/dev.c6712 net/core/dev.c6822) read to 0xffff8881164168b0 of 4 bytes by task 1 on cpu 2 netpoll_send_skb (net/core/netpoll.c319 net/core/netpoll.c345 net/core/netpoll.c393) netpoll_send_udp (net/core/netpoll.c?) value changed 0x0000000a -> 0xffffffff This happens because netpoll_owner_active() needs to check if the current CPU is the owner of the lock, touching napi->poll_owner non atomically. The ->poll_owner field contains the current CPU holding the lock. Use an atomic read to check if the poll owner is the current CPU.",
  "count": 11,
  "results": [
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 800.0,
      "original_score": 800.0,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "abstraction": "Base",
      "score": 768.6812645096818,
      "original_score": 768.6812645096818,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "abstraction": "Class",
      "score": 637.25878922798,
      "original_score": 637.25878922798,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "abstraction": "Base",
      "score": 602.5129244507422,
      "original_score": 602.5129244507422,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "674",
      "name": "Uncontrolled Recursion",
      "abstraction": "Class",
      "score": 598.5416807829197,
      "original_score": 598.5416807829197,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "787",
      "name": "Out-of-bounds Write",
      "abstraction": "Base",
      "score": 579.7304835480626,
      "original_score": 579.7304835480626,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "502",
      "name": "Deserialization of Untrusted Data",
      "abstraction": "Base",
      "score": 568.1405559335665,
      "original_score": 568.1405559335665,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "119",
      "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
      "abstraction": "Class",
      "score": 561.099899495631,
      "original_score": 561.099899495631,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "400",
      "name": "Uncontrolled Resource Consumption",
      "abstraction": "Class",
      "score": 559.2365083304668,
      "original_score": 559.2365083304668,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "abstraction": "Base",
      "score": 556.0783188411626,
      "original_score": 556.0783188411626,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "abstraction": "Class",
      "score": 181.22827764519755,
      "original_score": 181.22827764519755,
      "mapping_usage": "Allowed-with-Review"
    }
  ],
  "statistics": {
    "min": 181.22827764519755,
    "max": 800.0,
    "mean": 582.9553366150373,
    "median": 579.7304835480626,
    "count": 11
  }
}