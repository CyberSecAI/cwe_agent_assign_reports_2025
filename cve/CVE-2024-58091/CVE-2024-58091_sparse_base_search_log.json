{
  "method": "sparse_base",
  "query": "In the Linux kernel, the following vulnerability has been resolved drm/fbdev-dma Add shadow buffering for deferred I/O DMA areas are not necessarily backed by struct page, so we cannot rely on it for deferred I/O. Allocate a shadow buffer for drivers that require deferred I/O and use it as framebuffer memory. Fixes driver errors about being Unable to handle kernel NULL pointer dereference at virtual address or Unable to handle kernel paging request at virtual address. The patch splits drm_fbdev_dma_driver_fbdev_probe() in an initial allocation, which creates the DMA-backed buffer object, and a tail that sets up the fbdev data structures. There is a tail function for direct memory mappings and a tail function for deferred I/O with the shadow buffer. It is no longer possible to use deferred I/O without shadow buffer. It can be re-added if there exists a reliably test for usable struct page in the allocated DMA-backed buffer object.",
  "keyphrases": {
    "base_query": "In the Linux kernel, the following vulnerability has been resolved drm/fbdev-dma Add shadow buffering for deferred I/O DMA areas are not necessarily backed by struct page, so we cannot rely on it for deferred I/O. Allocate a shadow buffer for drivers that require deferred I/O and use it as framebuffer memory. Fixes driver errors about being Unable to handle kernel NULL pointer dereference at virtual address or Unable to handle kernel paging request at virtual address. The patch splits drm_fbdev_dma_driver_fbdev_probe() in an initial allocation, which creates the DMA-backed buffer object, and a tail that sets up the fbdev data structures. There is a tail function for direct memory mappings and a tail function for deferred I/O with the shadow buffer. It is no longer possible to use deferred I/O without shadow buffer. It can be re-added if there exists a reliably test for usable struct page in the allocated DMA-backed buffer object."
  },
  "timestamp": "2025-07-14T00:48:06.937171",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "909",
      "name": "Missing Initialization of Resource",
      "score": 294.92672380302383
    },
    {
      "doc_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 277.9291168748787
    },
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 274.60112588858937
    },
    {
      "doc_id": "908",
      "name": "Use of Uninitialized Resource",
      "score": 267.1463512686167
    },
    {
      "doc_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 251.40712016953358
    }
  ]
}