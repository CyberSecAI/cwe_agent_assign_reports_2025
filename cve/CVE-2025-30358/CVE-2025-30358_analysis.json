{
  "cve_id": "CVE-2025-30358",
  "description": "Mesop is a Python-based UI framework that allows users to build web applications. A class pollution vulnerability in Mesop prior to version 0.14.1 allows attackers to overwrite global variables and class attributes in certain Mesop modules during runtime. This vulnerability could directly lead to a denial of service (DoS) attack against the server. Additionally, it could also result in other severe consequences given the applications implementation, such as identity confusion, where an attacker could impersonate an assistant or system role within conversations. This impersonation could potentially enable jailbreak attacks when interacting with large language models (LLMs). Just like the Javascripts prototype pollution, this vulnerability could leave a way for attackers to manipulate the intended data-flow or control-flow of the application at runtime and lead to severe consequences like remote code execution when gadgets are available. Users should upgrade to version 0.14.1 to obtain a fix for the issue.",
  "key_phrases": {
    "component": "",
    "rootcause": "",
    "vector": "",
    "weakness": "class pollution, prototype pollution",
    "product": "Mesop",
    "impact": "denial of service, identity confusion, impersonation, jailbreak attacks, overwrite global variables, remote code execution",
    "attacker": "attackers",
    "version": "prior to version 0.14.1"
  },
  "reference_content": "```\nRoot cause of vulnerability:\nClass pollution vulnerability in Mesop application that allows attackers to overwrite global variables and class attributes in certain Mesop modules during runtime.\n\nWeaknesses/vulnerabilities present:\n- Class pollution\n- Denial of service (DoS)\n- Identity confusion\n- Jailbreak attacks\n\nImpact of exploitation:\n- Denial of service (DoS) attack\n- Identity confusion, where an attacker could impersonate an assistant or system role within conversations.\n- Jailbreak attacks when interacting with large language models (LLMs).\n- RCE when gadgets are available.\n\nAttack vectors:\nManipulating the intended data-flow or control-flow of the application at runtime.\n\nRequired attacker capabilities/position:\nLow privileges\n\nMitigation or fix:\nPatched in version 0.14.1.\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-1321 | Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution') | 1.0 | Variant | Allowed | Primary CWE. This CWE accurately describes the root cause of the vulnerability, which involves the **improperly controlled modification of object prototype attributes**. |\n| CWE-471 | Modification of Assumed-Immutable Data (MAID) | 0.5 | Base | Allowed | Secondary. This CWE relates to the broader concept of modifying data assumed to be immutable, which is a consequence of prototype pollution. |\n| CWE-843 | Access of Resource Using Incompatible Type ('Type Confusion') | 0.4 | Base | Allowed | Secondary. This CWE is a potential impact in the vulnerability chain, where the attacker manipulates the application to access resources using incompatible types, ultimately leading to remote code execution. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-1321, which is a Variant of higher-level Class CWEs related to object modification. CWE-471 (Modification of Assumed-Immutable Data) is a parent of CWE-1321 and represents the broader category of weaknesses related to modification of immutable data. CWE-843 (Access of Resource Using Incompatible Type) can be a consequence of CWE-1321, where the attacker manipulates the application to access resources using incompatible types.\n\n```mermaid\ngraph TD\n    cwe1321[\"CWE-1321: Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')\"]\n    cwe471[\"CWE-471: Modification of Assumed-Immutable Data (MAID)\"]\n    cwe843[\"CWE-843: Access of Resource Using Incompatible Type ('Type Confusion')\"]\n    cwe913[\"CWE-913: Improper Control of Dynamically-Managed Code Resources\"]\n    cwe915[\"CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes\"]\n\n    cwe1321 -->|CHILDOF| cwe913\n    cwe1321 -->|CHILDOF| cwe915\n    cwe471 -->|CANFOLLOW| cwe843\n    cwe1321 -->|CANPRECEDE| cwe471\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe1321 primary\n    class cwe471,cwe843 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain begins with **CWE-1321**: Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution'). This allows attackers to overwrite global variables and class attributes. This can lead to **CWE-471**: Modification of Assumed-Immutable Data (MAID) and potentially **CWE-843**: Access of Resource Using Incompatible Type ('Type Confusion'), ultimately leading to impacts like denial of service (DoS), identity confusion, jailbreak attacks, and remote code execution.\n\n## Summary of Analysis\nThe analysis is based on the provided evidence, specifically the vulnerability description and CVE reference summary. The primary weakness is identified as **class pollution**, which is directly related to **prototype pollution**.\n\nThe selection of CWE-1321 is justified as it is a Variant-level CWE that accurately describes the root cause of the vulnerability. The vulnerability description mentions \"**class pollution, prototype pollution**\" and the ability to \"**overwrite global variables and class attributes**\". This directly aligns with the description of CWE-1321: \"The product receives input from an upstream component that specifies attributes that are to be initialized or updated in an object, but it does not properly control modifications of attributes of the object prototype.\"\n\nCWE-471 is considered as a secondary CWE because it represents a broader category of weaknesses related to modification of immutable data. While relevant, it is not as specific as CWE-1321.\n\nCWE-843 is considered as a tertiary CWE since it is a potential result of the attacker being able to manipulate the application, but not necessarily the root cause.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-1321 | Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution') | 1.0 | Variant | Allowed | Primary CWE. This CWE accurately describes the root cause of the vulnerability, which involves the **improperly controlled modification of object prototype attributes**. |\n| CWE-471 | Modification of Assumed-Immutable Data (MAID) | 0.5 | Base | Allowed | Secondary. This CWE relates to the broader concept of modifying data assumed to be immutable, which is a consequence of prototype pollution. |\n| CWE-843 | Access of Resource Using Incompatible Type ('Type Confusion') | 0.4 | Base | Allowed | Secondary. This CWE is a potential impact in the vulnerability chain, where the attacker manipulates the application to access resources using incompatible types, ultimately leading to remote code execution. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-1321, which is a Variant of higher-level Class CWEs related to object modification. CWE-471 (Modification of Assumed-Immutable Data) is a parent of CWE-1321 and represents the broader category of weaknesses related to modification of immutable data. CWE-843 (Access of Resource Using Incompatible Type) can be a consequence of CWE-1321, where the attacker manipulates the application to access resources using incompatible types.\n\n```mermaid\ngraph TD\n    cwe1321[\"CWE-1321: Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')\"]\n    cwe471[\"CWE-471: Modification of Assumed-Immutable Data (MAID)\"]\n    cwe843[\"CWE-843: Access of Resource Using Incompatible Type ('Type Confusion')\"]\n    cwe913[\"CWE-913: Improper Control of Dynamically-Managed Code Resources\"]\n    cwe915[\"CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes\"]\n\n    cwe1321 -->|CHILDOF| cwe913\n    cwe1321 -->|CHILDOF| cwe915\n    cwe471 -->|CANFOLLOW| cwe843\n    cwe1321 -->|CANPRECEDE| cwe471\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe1321 primary\n    class cwe471,cwe843 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain begins with **CWE-1321**: Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution'). This allows attackers to overwrite global variables and class attributes. This can lead to **CWE-471**: Modification of Assumed-Immutable Data (MAID) and potentially **CWE-843**: Access of Resource Using Incompatible Type ('Type Confusion'), ultimately leading to impacts like denial of service (DoS), identity confusion, jailbreak attacks, and remote code execution.\n\n## Summary of Analysis\nThe analysis is based on the provided evidence, specifically the vulnerability description and CVE reference summary. The primary weakness is identified as **class pollution**, which is directly related to **prototype pollution**.\n\nThe selection of CWE-1321 is justified as it is a Variant-level CWE that accurately describes the root cause of the vulnerability. The vulnerability description mentions \"**class pollution, prototype pollution**\" and the ability to \"**overwrite global variables and class attributes**\". This directly aligns with the description of CWE-1321: \"The product receives input from an upstream component that specifies attributes that are to be initialized or updated in an object, but it does not properly control modifications of attributes of the object prototype.\"\n\nCWE-471 is considered as a secondary CWE because it represents a broader category of weaknesses related to modification of immutable data. While relevant, it is not as specific as CWE-1321.\n\nCWE-843 is considered as a tertiary CWE since it is a potential result of the attacker being able to manipulate the application, but not necessarily the root cause.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-471:**\n- 471 (Modification of Assumed-Immutable Data (MAID)) - ROOT\n\n\n**Chain starting from CWE-1321:**\n- 1321 (Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "1321",
        "name": "Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')",
        "source": "sparse"
      },
      "similarity": 787.9335136692886
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 671.56121745082
    },
    {
      "metadata": {
        "doc_id": "1390",
        "name": "Weak Authentication",
        "source": "sparse"
      },
      "similarity": 663.7305249573224
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 652.3707366210695
    },
    {
      "metadata": {
        "doc_id": "1333",
        "name": "Inefficient Regular Expression Complexity",
        "source": "sparse"
      },
      "similarity": 651.0397586601438
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 648.7775428612641
    },
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "sparse"
      },
      "similarity": 640.9263497447849
    },
    {
      "metadata": {
        "doc_id": "843",
        "name": "Access of Resource Using Incompatible Type ('Type Confusion')",
        "source": "sparse"
      },
      "similarity": 638.2409015902658
    },
    {
      "metadata": {
        "doc_id": "472",
        "name": "External Control of Assumed-Immutable Web Parameter",
        "type": "Base",
        "original_content": "The web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.4931896382269526,
            "graph": 1.9072120043239555
          }
        }
      },
      "similarity": 0.4931896382269526
    },
    {
      "doc_id": "471",
      "text": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
      "score": 2.7196000000000002,
      "metadata": {
        "doc_id": "471",
        "name": "Modification of Assumed-Immutable Data (MAID)",
        "type": "base",
        "original_content": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
        "relationships": [
          {
            "source_id": "471",
            "target_id": "621",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "607",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "602",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "473",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "472",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "291",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "1321",
            "label": "CANFOLLOW",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "1282",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "664",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "664",
            "target_id": "471",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "621",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "607",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "602",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "473",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "472",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "291",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1321",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1282",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.5599999999999999,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_up",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "1321",
                  "471",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "1321"
            },
            "abstraction_path_up": {
              "path": [
                [
                  "472",
                  "471",
                  "CHILDOF"
                ]
              ],
              "score": 0.5599999999999999,
              "type": "abstraction_path_up",
              "source": "472"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "1321",
                  "471",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "1321"
            }
          }
        },
        "abstraction_level": "base",
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.7196000000000002
          }
        }
      },
      "similarity": 2.7196000000000002
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-471",
      "CWE-1321",
      "CWE-915",
      "CWE-913",
      "CWE-843"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}