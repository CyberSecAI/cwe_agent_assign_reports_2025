{
  "cve_id": "CVE-2024-43301",
  "description": "Cross-Site Request Forgery (CSRF) vulnerability in Fonts Plugin Fonts allows Stored **XSS**.This issue affects Fonts from n/a through 3.7.7.",
  "key_phrases": {
    "rootcause": "lack of CSRF protection",
    "weakness": [
      "XSS",
      "cross-site scripting"
    ],
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": "Fonts Plugin",
    "version": "n/a through 3.7.7",
    "component": ""
  },
  "reference_content": "- **Root cause of vulnerability**: The WordPress Fonts plugin (versions 3.7.7 and earlier) is vulnerable to Cross-Site Request Forgery (CSRF).\n- **Weaknesses/vulnerabilities present**: The plugin lacks proper CSRF protection, allowing attackers to forge requests on behalf of authenticated users.\n- **Impact of exploitation**: A successful CSRF attack could allow a malicious actor to force higher privileged users to execute unwanted actions under their current authentication.\n- **Attack vectors**:  An attacker would need to trick a logged-in administrator into clicking a malicious link or visiting a malicious webpage. This would then execute an unwanted action on the WordPress site via the fonts plugin, as if it were executed by the administrator.\n- **Required attacker capabilities/position**: The attacker needs to be able to craft a malicious request and successfully deliver it to a logged-in administrator. The attacker does not need to be authenticated to the WordPress site itself.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID  | CWE Name                                                                 | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :----------------------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-352   | Cross-Site Request Forgery (CSRF)                                      | 1.0        | Compound              | Primary                         | Allowed                         |\n| CWE-79    | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.9        | Base                  | Secondary                       | Allowed                         |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.95\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is the **lack of CSRF protection** (CWE-352), which allows an attacker to induce users into performing actions they did not intend. The secondary weakness, Stored **XSS** (CWE-79), arises when malicious input isn't neutralized properly, leading to script injection. CWE-352 can be considered a prerequisite for Stored **XSS** in this scenario because a successful CSRF attack might be used to inject the malicious script. Both CWE-352 and CWE-79 are base-level weaknesses, providing an appropriate level of granularity.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe352 -->|CANPRECEDE| cwe79\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain begins with the **lack of CSRF protection** (CWE-352). An attacker exploits this weakness to perform actions on behalf of a user, such as injecting malicious scripts. The injected script is then stored and executed, leading to Stored **XSS** (CWE-79).\n  - CWE-352 (Root Cause): **Lack of CSRF protection** allows unauthorized requests.\n  - CWE-79 (Impact): Stored **XSS** due to improper neutralization of input.\n\n## Summary of Analysis\nThe primary focus is on the **lack of CSRF protection**, which is the root cause that enables the Stored **XSS** vulnerability. The description clearly states a Cross-Site Request Forgery (CSRF) vulnerability in Fonts Plugin Fonts allows Stored **XSS**. This indicates that the absence of CSRF protection is the initial flaw. The retriever results strongly suggest CWE-352 for the \"lack of CSRF protection\" keyphrase. I am also considering CWE-79 since the description says this leads to stored **XSS**.\n\nThe relationships show that CWE-352 can precede CWE-79. Because the description specifically mentions **lack of CSRF protection**, I am confident in selecting CWE-352 as the primary CWE.\n\nRelevant evidence:\n*   \"ROOTCAUSE: '**lack of CSRF protection**'\"\n*   \"Cross-Site Request Forgery (CSRF) vulnerability in Fonts Plugin Fonts allows Stored **XSS**.\"\n\nCWE-434, CWE-116, CWE-89, CWE-862, CWE-1004, CWE-22 and CWE-611 were considered but do not accurately represent the root cause or the specific weakness described in the vulnerability. They were rejected because they address different types of vulnerabilities such as unrestricted file uploads, improper encoding, SQL injection, missing authorization, sensitive cookies, path traversal and XML external entity references. None of these match the given vulnerability description of CSRF leading to Stored XSS.\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 292.78\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 219.69\n**Source**: dense\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 210.99\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n**Abstraction Level**: Base\n**Similarity Score**: 205.19\n**Source**: dense\n\n**Description**:\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-862: Missing Authorization\n**Abstraction Level**: Base\n**Similarity Score**: 193.26\n**Source**: dense\n\n**Description**:\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag\n**Abstraction Level**: Base\n**Similarity Score**: 154.93\n**Source**: dense\n\n**Description**:\nThe product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\n**Abstraction Level**: Base\n**Similarity Score**: 71.44\n**Source**: dense\n\n**Description**:\nThe product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of that restricted directory.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-611: Improper Restriction of XML External Entity Reference\n**Abstraction Level**: Base\n**Similarity Score**: 70.74\n**Source**: dense\n\n**Description**:\nThe product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
  "analysis_with_relationships": "# Summary\n| CWE ID  | CWE Name                                                                 | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :----------------------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-352   | Cross-Site Request Forgery (CSRF)                                      | 1.0        | Compound              | Primary                         | Allowed                         |\n| CWE-79    | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.9        | Base                  | Secondary                       | Allowed                         |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.95\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is the **lack of CSRF protection** (CWE-352), which allows an attacker to induce users into performing actions they did not intend. The secondary weakness, Stored **XSS** (CWE-79), arises when malicious input isn't neutralized properly, leading to script injection. CWE-352 can be considered a prerequisite for Stored **XSS** in this scenario because a successful CSRF attack might be used to inject the malicious script. Both CWE-352 and CWE-79 are base-level weaknesses, providing an appropriate level of granularity.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe352 -->|CANPRECEDE| cwe79\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain begins with the **lack of CSRF protection** (CWE-352). An attacker exploits this weakness to perform actions on behalf of a user, such as injecting malicious scripts. The injected script is then stored and executed, leading to Stored **XSS** (CWE-79).\n  - CWE-352 (Root Cause): **Lack of CSRF protection** allows unauthorized requests.\n  - CWE-79 (Impact): Stored **XSS** due to improper neutralization of input.\n\n## Summary of Analysis\nThe primary focus is on the **lack of CSRF protection**, which is the root cause that enables the Stored **XSS** vulnerability. The description clearly states a Cross-Site Request Forgery (CSRF) vulnerability in Fonts Plugin Fonts allows Stored **XSS**. This indicates that the absence of CSRF protection is the initial flaw. The retriever results strongly suggest CWE-352 for the \"lack of CSRF protection\" keyphrase. I am also considering CWE-79 since the description says this leads to stored **XSS**.\n\nThe relationships show that CWE-352 can precede CWE-79. Because the description specifically mentions **lack of CSRF protection**, I am confident in selecting CWE-352 as the primary CWE.\n\nRelevant evidence:\n*   \"ROOTCAUSE: '**lack of CSRF protection**'\"\n*   \"Cross-Site Request Forgery (CSRF) vulnerability in Fonts Plugin Fonts allows Stored **XSS**.\"\n\nCWE-434, CWE-116, CWE-89, CWE-862, CWE-1004, CWE-22 and CWE-611 were considered but do not accurately represent the root cause or the specific weakness described in the vulnerability. They were rejected because they address different types of vulnerabilities such as unrestricted file uploads, improper encoding, SQL injection, missing authorization, sensitive cookies, path traversal and XML external entity references. None of these match the given vulnerability description of CSRF leading to Stored XSS.\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 292.78\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 219.69\n**Source**: dense\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 210.99\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n**Abstraction Level**: Base\n**Similarity Score**: 205.19\n**Source**: dense\n\n**Description**:\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-862: Missing Authorization\n**Abstraction Level**: Base\n**Similarity Score**: 193.26\n**Source**: dense\n\n**Description**:\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag\n**Abstraction Level**: Base\n**Similarity Score**: 154.93\n**Source**: dense\n\n**Description**:\nThe product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\n**Abstraction Level**: Base\n**Similarity Score**: 71.44\n**Source**: dense\n\n**Description**:\nThe product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of that restricted directory.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-611: Improper Restriction of XML External Entity Reference\n**Abstraction Level**: Base\n**Similarity Score**: 70.74\n**Source**: dense\n\n**Description**:\nThe product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n**Chain starting from CWE-611:**\n- 611 (Improper Restriction of XML External Entity Reference) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_sources": [
          {
            "id": "rootcause:lack of CSRF protection",
            "keyphrase": "lack of CSRF protection",
            "type": "rootcause"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "product:Fonts Plugin",
            "keyphrase": "Fonts Plugin",
            "type": "product"
          },
          {
            "id": "version:n/a through 3.7.7",
            "keyphrase": "n/a through 3.7.7",
            "type": "version"
          }
        ]
      },
      "similarity": 292.7757117544897
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse",
        "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
        "keyphrase_sources": [
          {
            "id": "rootcause:lack of CSRF protection",
            "keyphrase": "lack of CSRF protection",
            "type": "rootcause"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "product:Fonts Plugin",
            "keyphrase": "Fonts Plugin",
            "type": "product"
          },
          {
            "id": "version:n/a through 3.7.7",
            "keyphrase": "n/a through 3.7.7",
            "type": "version"
          }
        ]
      },
      "similarity": 219.6898381520877
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "keyphrase_sources": [
          {
            "id": "rootcause:lack of CSRF protection",
            "keyphrase": "lack of CSRF protection",
            "type": "rootcause"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "product:Fonts Plugin",
            "keyphrase": "Fonts Plugin",
            "type": "product"
          }
        ]
      },
      "similarity": 210.99021805371362
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse",
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "keyphrase_sources": [
          {
            "id": "rootcause:lack of CSRF protection",
            "keyphrase": "lack of CSRF protection",
            "type": "rootcause"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "product:Fonts Plugin",
            "keyphrase": "Fonts Plugin",
            "type": "product"
          },
          {
            "id": "version:n/a through 3.7.7",
            "keyphrase": "n/a through 3.7.7",
            "type": "version"
          }
        ]
      },
      "similarity": 205.1917862719818
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "keyphrase_sources": [
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "product:Fonts Plugin",
            "keyphrase": "Fonts Plugin",
            "type": "product"
          }
        ]
      },
      "similarity": 198.02134335080018
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse",
        "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
        "keyphrase_sources": [
          {
            "id": "rootcause:lack of CSRF protection",
            "keyphrase": "lack of CSRF protection",
            "type": "rootcause"
          }
        ]
      },
      "similarity": 193.25631045905595
    },
    {
      "metadata": {
        "doc_id": "1004",
        "name": "Sensitive Cookie Without 'HttpOnly' Flag",
        "source": "sparse",
        "original_content": "The product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag.",
        "keyphrase_sources": [
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          }
        ]
      },
      "similarity": 154.9338369221448
    },
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "sparse",
        "original_content": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
        "keyphrase_sources": [
          {
            "id": "version:n/a through 3.7.7",
            "keyphrase": "n/a through 3.7.7",
            "type": "version"
          }
        ]
      },
      "similarity": 71.43836542703652
    },
    {
      "metadata": {
        "doc_id": "611",
        "name": "Improper Restriction of XML External Entity Reference",
        "source": "sparse",
        "original_content": "The product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",
        "keyphrase_sources": [
          {
            "id": "version:n/a through 3.7.7",
            "keyphrase": "n/a through 3.7.7",
            "type": "version"
          }
        ]
      },
      "similarity": 70.74129156080917
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-611",
      "CWE-116",
      "CWE-862",
      "CWE-22",
      "CWE-79",
      "CWE-1004",
      "CWE-352",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "352": [
      {
        "id": "rootcause:lack of CSRF protection",
        "keyphrase": "lack of CSRF protection",
        "type": "rootcause"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "product:Fonts Plugin",
        "keyphrase": "Fonts Plugin",
        "type": "product"
      },
      {
        "id": "version:n/a through 3.7.7",
        "keyphrase": "n/a through 3.7.7",
        "type": "version"
      }
    ],
    "434": [
      {
        "id": "rootcause:lack of CSRF protection",
        "keyphrase": "lack of CSRF protection",
        "type": "rootcause"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "product:Fonts Plugin",
        "keyphrase": "Fonts Plugin",
        "type": "product"
      },
      {
        "id": "version:n/a through 3.7.7",
        "keyphrase": "n/a through 3.7.7",
        "type": "version"
      }
    ],
    "116": [
      {
        "id": "rootcause:lack of CSRF protection",
        "keyphrase": "lack of CSRF protection",
        "type": "rootcause"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "product:Fonts Plugin",
        "keyphrase": "Fonts Plugin",
        "type": "product"
      }
    ],
    "79": [
      {
        "id": "rootcause:lack of CSRF protection",
        "keyphrase": "lack of CSRF protection",
        "type": "rootcause"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "product:Fonts Plugin",
        "keyphrase": "Fonts Plugin",
        "type": "product"
      },
      {
        "id": "version:n/a through 3.7.7",
        "keyphrase": "n/a through 3.7.7",
        "type": "version"
      }
    ],
    "862": [
      {
        "id": "rootcause:lack of CSRF protection",
        "keyphrase": "lack of CSRF protection",
        "type": "rootcause"
      }
    ],
    "1004": [
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      }
    ],
    "89": [
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "product:Fonts Plugin",
        "keyphrase": "Fonts Plugin",
        "type": "product"
      }
    ],
    "22": [
      {
        "id": "version:n/a through 3.7.7",
        "keyphrase": "n/a through 3.7.7",
        "type": "version"
      }
    ],
    "611": [
      {
        "id": "version:n/a through 3.7.7",
        "keyphrase": "n/a through 3.7.7",
        "type": "version"
      }
    ]
  }
}