{
  "cve_id": "CVE-2025-48064",
  "description": "GitHub Desktop is an open-source, Electron-based GitHub app designed for git development. Prior to version 3.4.20-beta3, an attacker convincing a user to view a file in a commit of their making in the history view can cause information disclosure by means of Git attempting to access a network share. This affects GitHub Desktop users on Windows that view malicious commits in the history view. macOS users are not affected. When viewing a file diff in the history view GitHub Desktop will call `git log` or `git diff` with the object id (SHA) of the commit, the name of the file, and the old name of the file if the file has been renamed. As a security precaution Git will attempt to fully resolve the old and new path via `realpath`, traversing symlinks, to ensure that the resolved paths reside within the repository working directory. This can lead to Git attempting to access a path that resides on a network share (UNC path) and in doing so Windows will attempt to perform NTLM authentication which passes information such as the computer name, the currently signed in (Windows) user name, and an NTLM hash. GitHub Desktop 3.4.20 and later fix this vulnerability. The beta channel includes the fix in 3.4.20-beta3. As a workaround to use until upgrading is possible, only browse commits in the history view that comes from trusted sources.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "",
    "impact": "information disclosure",
    "vector": "",
    "attacker": "",
    "product": "GitHub Desktop",
    "version": "Prior to version 3.4.20-beta3",
    "component": ""
  },
  "reference_content": "## CVE-2025-48064 Analysis\n\nThis content is **RELEVANT** to CVE-2025-48064. It provides detailed information about the vulnerability.\n\n**Root cause of vulnerability:**\n\nGit attempting to fully resolve old and new paths via `realpath`, traversing symlinks, to ensure the resolved paths reside within the repository working directory. This can lead to Git attempting to access a path that resides on a network share (UNC path).\n\n**Weaknesses/vulnerabilities present:**\n\n* CWE-200: Improper Input Validation. Specifically, maliciously crafted file renames.\n\n**Impact of exploitation:**\n\nInformation disclosure. Windows will attempt to perform NTLM authentication, potentially revealing the computer name, currently signed-in Windows user name, and an NTLM hash.\n\n**Attack vectors:**\n\nAn attacker convinces a user to view a file in a commit of their making in the history view.\n\n**Required attacker capabilities/position:**\n\nThe attacker needs to be able to create a malicious commit and convince the user to view it.\n\n**Mitigation or fix:**\n\n*   Update to GitHub Desktop 3.4.20 or later.\n*   If using the beta channel, update to 3.4.20-beta3.\n*   Workaround: Only browse commits in the history view that come from trusted sources until upgrading.\n\n**Additional Details (more than official CVE description):**\n\n*   The vulnerability affects GitHub Desktop users on Windows only; macOS users are not affected.\n*   The vulnerability is triggered when viewing a file diff in the history view.\n*   CVSS v3 base metrics are provided: AV:L/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:N\n*   Severity is rated as Low (3.3/10).",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-200 | Exposure of Sensitive Information | 0.9 | Base | Allowed | Primary CWE. The application exposes sensitive information (computer name, username, NTLM hash) when attempting to access a network share. |\n| CWE-59 | Improper Link Resolution Before File Access ('Link Following') | 0.7 | Base | Allowed | Secondary CWE. The vulnerability involves Git attempting to access a network share due to path resolution, which aligns with the concept of improper link resolution. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-200, representing the information disclosure vulnerability. CWE-59 is a related weakness where improper link resolution leads to unintended resource access. CWE-200 can be triggered by weaknesses like CWE-59, indicating a chain relationship. The abstraction levels are both Base, which is the preferred level.\n\n```mermaid\ngraph TD\n    cwe200[\"CWE-200: Exposure of Sensitive Information\"]\n    cwe59[\"CWE-59: Improper Link Resolution Before File Access ('Link Following')\"]\n    \n    cwe59 -->|CANPRECEDE| cwe200\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe200 primary\n    class cwe59 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with a user viewing a malicious commit, which causes Git to attempt to resolve paths. This **improper** path resolution (CWE-59) leads to Git attempting to access a network share, triggering NTLM authentication, and ultimately resulting in the **exposure of sensitive information** (CWE-200).\n\n## Summary of Analysis\nThe analysis identifies CWE-200 as the primary weakness due to the information disclosure impact. The vulnerability description and CVE details provide strong evidence for this classification. The retriever results and relationship analysis support this selection, with CWE-59 as a secondary weakness. The chosen CWEs are at the Base level of abstraction, providing the optimal level of specificity.\n\nThe vulnerability description clearly states that the **impact** is \"information disclosure\" when Git attempts to access a network share, which matches CWE-200. The CVE Reference Links Content Summary reinforces this by stating the **root cause** is \"Git attempting to fully resolve old and new paths via `realpath`, traversing symlinks... This can lead to Git attempting to access a path that resides on a network share (UNC path)...\" and that the **impact** is \"Information disclosure. Windows will attempt to perform NTLM authentication, potentially revealing the computer name, currently signed-in Windows user name, and an NTLM hash.\"\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.81\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-59: Improper Link Resolution Before File Access ('Link Following')\n**Abstraction Level**: Base\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nThe product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-200: Insertion of Sensitive Information Into Sent Data\n**Abstraction Level**: base\n**Similarity Score**: 4.33\n**Source**: graph\n\n**Description**:\nCWE-200: Insertion of Sensitive Information Into Sent Data\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**Relationships**:\n- PARENTOF -> CWE-598\n- CANFOLLOW -> CWE-226\n- CANFOLLOW -> CWE-212\n- CANALSOBE -> CWE-202\n- CANALSOBE -> CWE-209\n\n---\nCWE-212 was considered but not used because the sensitive information is not stored or transferred in a way that makes it available to unauthorized actors. Instead, the sensitive information is exposed during the authentication attempt.\n\nCWE-427 (Uncontrolled Search Path Element) and CWE-78 (Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')) were considered but not selected because the vulnerability isn't directly related to manipulating the search path or injecting commands. The core issue is the exposure of sensitive information when Git attempts to access a network share due to **improper** path resolution.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-200 | Exposure of Sensitive Information | 0.9 | Base | Allowed | Primary CWE. The application exposes sensitive information (computer name, username, NTLM hash) when attempting to access a network share. |\n| CWE-59 | Improper Link Resolution Before File Access ('Link Following') | 0.7 | Base | Allowed | Secondary CWE. The vulnerability involves Git attempting to access a network share due to path resolution, which aligns with the concept of improper link resolution. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-200, representing the information disclosure vulnerability. CWE-59 is a related weakness where improper link resolution leads to unintended resource access. CWE-200 can be triggered by weaknesses like CWE-59, indicating a chain relationship. The abstraction levels are both Base, which is the preferred level.\n\n```mermaid\ngraph TD\n    cwe200[\"CWE-200: Exposure of Sensitive Information\"]\n    cwe59[\"CWE-59: Improper Link Resolution Before File Access ('Link Following')\"]\n    \n    cwe59 -->|CANPRECEDE| cwe200\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe200 primary\n    class cwe59 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with a user viewing a malicious commit, which causes Git to attempt to resolve paths. This **improper** path resolution (CWE-59) leads to Git attempting to access a network share, triggering NTLM authentication, and ultimately resulting in the **exposure of sensitive information** (CWE-200).\n\n## Summary of Analysis\nThe analysis identifies CWE-200 as the primary weakness due to the information disclosure impact. The vulnerability description and CVE details provide strong evidence for this classification. The retriever results and relationship analysis support this selection, with CWE-59 as a secondary weakness. The chosen CWEs are at the Base level of abstraction, providing the optimal level of specificity.\n\nThe vulnerability description clearly states that the **impact** is \"information disclosure\" when Git attempts to access a network share, which matches CWE-200. The CVE Reference Links Content Summary reinforces this by stating the **root cause** is \"Git attempting to fully resolve old and new paths via `realpath`, traversing symlinks... This can lead to Git attempting to access a path that resides on a network share (UNC path)...\" and that the **impact** is \"Information disclosure. Windows will attempt to perform NTLM authentication, potentially revealing the computer name, currently signed-in Windows user name, and an NTLM hash.\"\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.81\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-59: Improper Link Resolution Before File Access ('Link Following')\n**Abstraction Level**: Base\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nThe product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-200: Insertion of Sensitive Information Into Sent Data\n**Abstraction Level**: base\n**Similarity Score**: 4.33\n**Source**: graph\n\n**Description**:\nCWE-200: Insertion of Sensitive Information Into Sent Data\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**Relationships**:\n- PARENTOF -> CWE-598\n- CANFOLLOW -> CWE-226\n- CANFOLLOW -> CWE-212\n- CANALSOBE -> CWE-202\n- CANALSOBE -> CWE-209\n\n---\nCWE-212 was considered but not used because the sensitive information is not stored or transferred in a way that makes it available to unauthorized actors. Instead, the sensitive information is exposed during the authentication attempt.\n\nCWE-427 (Uncontrolled Search Path Element) and CWE-78 (Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')) were considered but not selected because the vulnerability isn't directly related to manipulating the search path or injecting commands. The core issue is the exposure of sensitive information when Git attempts to access a network share due to **improper** path resolution.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-427:**\n- 427 (Uncontrolled Search Path Element) - ROOT\n\n\n**Chain starting from CWE-226:**\n- 226 (Sensitive Information in Resource Not Removed Before Reuse) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "427",
        "name": "Uncontrolled Search Path Element",
        "source": "sparse"
      },
      "similarity": 443.0233480981475
    },
    {
      "metadata": {
        "doc_id": "378",
        "name": "Creation of Temporary File With Insecure Permissions",
        "source": "sparse"
      },
      "similarity": 426.4411642706267
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 422.4219869841127
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 421.44872550876835
    },
    {
      "metadata": {
        "doc_id": "88",
        "name": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
        "source": "sparse"
      },
      "similarity": 420.8741615473002
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 412.34547524978916
    },
    {
      "metadata": {
        "doc_id": "639",
        "name": "Authorization Bypass Through User-Controlled Key",
        "source": "sparse"
      },
      "similarity": 411.9526715136305
    },
    {
      "metadata": {
        "doc_id": "61",
        "name": "UNIX Symbolic Link (Symlink) Following",
        "source": "sparse"
      },
      "similarity": 410.62669671025685
    },
    {
      "metadata": {
        "doc_id": "451",
        "name": "User Interface (UI) Misrepresentation of Critical Information",
        "type": "Class",
        "original_content": "The user interface (UI) does not properly represent critical information to the user, allowing the information - or its source - to be obscured or spoofed. This is often a component in phishing attacks.",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.4419830334291317,
            "graph": 1.0868380132487823
          }
        }
      },
      "similarity": 0.4419830334291317
    },
    {
      "doc_id": "226",
      "text": "CWE-226: Sensitive Information in Resource Not Removed Before Reuse",
      "score": 2.8651999999999997,
      "metadata": {
        "doc_id": "226",
        "name": "Sensitive Information in Resource Not Removed Before Reuse",
        "type": "base",
        "original_content": "CWE-226: Sensitive Information in Resource Not Removed Before Reuse",
        "relationships": [
          {
            "source_id": "226",
            "target_id": "244",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "1342",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "1301",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "1272",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "1239",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "201",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "212",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "459",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "459",
            "target_id": "226",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "244",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "212",
            "target_id": "226",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "201",
            "target_id": "226",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1342",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1194"
            }
          },
          {
            "source_id": "1342",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1301",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1272",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1239",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1194"
            }
          },
          {
            "source_id": "1239",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.7200000000000001,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "201",
                  "226",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "201"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "212",
                  "226",
                  "PARENTOF"
                ]
              ],
              "score": 0.7200000000000001,
              "type": "abstraction_path_down",
              "source": "212"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "201",
                  "226",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "201"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "226",
                  "201",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "201"
            }
          }
        },
        "abstraction_level": "base",
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.8651999999999997
          }
        }
      },
      "similarity": 2.8651999999999997
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-427",
      "CWE-226",
      "CWE-59",
      "CWE-209",
      "CWE-202",
      "CWE-78",
      "CWE-598",
      "CWE-200",
      "CWE-212"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}