{
  "query": "In the Linux kernel, the following vulnerability has been resolved drm/v3d Assign job pointer to NULL before signaling the fence In commit e4b5ccd392b9 (drm/v3d Ensure job pointer is set to NULL after job completion), we introduced a change to assign the job pointer to NULL after completing a job, indicating job completion. However, this approach created a race condition between the DRM scheduler workqueue and the IRQ execution thread. As soon as the fence is signaled in the IRQ execution thread, a new job starts to be executed. This results in a race condition where the IRQ execution thread sets the job pointer to NULL simultaneously as the `run_job()` function assigns a new job to the pointer. This race condition can lead to a NULL pointer dereference if the IRQ execution thread sets the job pointer to NULL after `run_job()` assigns it to the new job. When the new job completes and the GPU emits an interrupt, `v3d_irq()` is triggered, potentially causing a crash. [ 466.310099] Unable to handle kernel NULL pointer dereference at virtual address 00000000000000c0 [ 466.318928] Mem abort info [ 466.321723] ESR = 0x0000000096000005 [ 466.325479] EC = 0x25 DABT (current EL), IL = 32 bits [ 466.330807] SET = 0, FnV = 0 [ 466.333864] EA = 0, S1PTW = 0 [ 466.337010] FSC = 0x05 level 1 translation fault [ 466.341900] Data abort info [ 466.344783] ISV = 0, ISS = 0x00000005, ISS2 = 0x00000000 [ 466.350285] CM = 0, WnR = 0, TnD = 0, TagAccess = 0 [ 466.355350] GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0 [ 466.360677] user pgtable 4k pages, 39-bit VAs, pgdp=0000000089772000 [ 466.367140] [00000000000000c0] pgd=0000000000000000, p4d=0000000000000000, pud=0000000000000000 [ 466.375875] Internal error Oops 0000000096000005",
  "count": 20,
  "results": [
    {
      "cwe_id": "822",
      "name": "Untrusted Pointer Dereference",
      "abstraction": "Base",
      "score": 0.5426399803967714,
      "original_score": 0.5426399803967714,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "abstraction": "Base",
      "score": 0.5424672151047306,
      "original_score": 0.5424672151047306,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "abstraction": "Class",
      "score": 0.5423927452188317,
      "original_score": 0.5423927452188317,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 0.5380877677831581,
      "original_score": 0.5380877677831581,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "abstraction": "Base",
      "score": 0.5291046992791659,
      "original_score": 0.5291046992791659,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "abstraction": "Class",
      "score": 0.5233763256236444,
      "original_score": 0.5233763256236444,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 0.5207715902291374,
      "original_score": 0.5207715902291374,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "abstraction": "Base",
      "score": 0.5108534492524661,
      "original_score": 0.5108534492524661,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "119",
      "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
      "abstraction": "Class",
      "score": 0.503418498167072,
      "original_score": 0.503418498167072,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "abstraction": "Base",
      "score": 0.5027044296601026,
      "original_score": 0.5027044296601026,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "823",
      "name": "Use of Out-of-range Pointer Offset",
      "abstraction": "Base",
      "score": 0.497993231074099,
      "original_score": 0.497993231074099,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "366",
      "name": "Race Condition within a Thread",
      "abstraction": "Base",
      "score": 0.4977643256932434,
      "original_score": 0.4977643256932434,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "787",
      "name": "Out-of-bounds Write",
      "abstraction": "Base",
      "score": 0.484570140394308,
      "original_score": 0.484570140394308,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "763",
      "name": "Release of Invalid Pointer or Reference",
      "abstraction": "Base",
      "score": 0.4838654408766396,
      "original_score": 0.4838654408766396,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "126",
      "name": "Buffer Over-read",
      "abstraction": "Variant",
      "score": 0.48333762431587285,
      "original_score": 0.48333762431587285,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "abstraction": "Variant",
      "score": 0.4829494051455664,
      "original_score": 0.4829494051455664,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "824",
      "name": "Access of Uninitialized Pointer",
      "abstraction": "Base",
      "score": 0.4829072927733319,
      "original_score": 0.4829072927733319,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1342",
      "name": "Information Exposure through Microarchitectural State after Transient Execution",
      "abstraction": "Base",
      "score": 0.4816802283563883,
      "original_score": 0.4816802283563883,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "122",
      "name": "Heap-based Buffer Overflow",
      "abstraction": "Variant",
      "score": 0.4795343439984745,
      "original_score": 0.4795343439984745,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "665",
      "name": "Improper Initialization",
      "abstraction": "Class",
      "score": 0.47595118060099634,
      "original_score": 0.47595118060099634,
      "mapping_usage": "Discouraged"
    }
  ],
  "statistics": {
    "min": 0.47595118060099634,
    "max": 0.5426399803967714,
    "mean": 0.5053184956972,
    "median": 0.5003488303671009,
    "count": 20
  }
}