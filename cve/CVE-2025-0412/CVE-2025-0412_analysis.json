{
  "cve_id": "CVE-2025-0412",
  "description": "Luxion KeyShot Viewer KSP File Parsing Memory Corruption Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Luxion KeyShot Viewer. User interaction is required to exploit this vulnerability in that the target must visit a malicious page or open a malicious file. The specific flaw exists within the processing of KSP files. The issue results from the **lack of proper validation of user-supplied data**, which can result in a **memory corruption** condition. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-22139.",
  "key_phrases": {
    "rootcause": "lack of proper validation of user-supplied data",
    "weakness": "memory corruption",
    "impact": [
      "execute code in the context of the current process",
      "execute arbitrary code",
      "Remote Code Execution"
    ],
    "vector": "",
    "attacker": "remote attackers",
    "product": "Luxion KeyShot Viewer",
    "version": "",
    "component": "KSP File Parsing"
  },
  "reference_content": "## Analysis of CVE-2025-0412 based on provided content:\n\nThe provided content is directly related to CVE-2025-0412. It provides detailed information about the vulnerability.\n\n**Root cause of vulnerability:**\n\n*   Lack of proper validation of user-supplied data when processing KSP files.\n\n**Weaknesses/vulnerabilities present:**\n\n*   Improper Input Validation (CWE-20)\n*   Memory Corruption\n\n**Impact of exploitation:**\n\n*   Remote code execution in the context of the current process.\n*   Potential for high impact on Confidentiality, Integrity, and Availability (CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H)\n\n**Attack vectors:**\n\n*   Opening malicious KeyShot project files (.ksp, .bip).\n*   Visiting a malicious page or opening a malicious file (requires user interaction).\n\n**Required attacker capabilities/position:**\n\n*   Remote attacker.\n*   Requires user interaction to open a malicious file or visit a malicious page.\n\n**Mitigation or fix:**\n\n*   Upgrade to KeyShot Studio or KeyShot Viewer version 2023.3 or later.\n\n**Additional Details (more detail than official CVE description):**\n\n*   The vulnerability was discovered by Simon Janz (@esj4y) and reported through the Trend Micro Zero Day Initiative (ZDI).\n*   ZDI-CAN-22139 is the ZDI advisory ID for this vulnerability.\n*   Disclosure timeline is provided: reported 2023-10-03, public release 2023-11-16, advisory updated 2025-01-19.\n*   Affected products are KeyShot Studio and KeyShot Viewer (all versions before 2023.3).\n*   The vulnerability exists within the processing of KSP files.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-787 | Out-of-bounds Write | 1.0 | Base |  Primary | Allowed |\n| CWE-20 | Improper Input Validation | 0.7 | Class | Secondary | Discouraged |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-787 **Out-of-bounds Write**, which is a Base level CWE. The secondary CWE is CWE-20 **Improper Input Validation**, which is a Class level CWE. CWE-787 is a child of CWE-119 **Improper Restriction of Operations within the Bounds of a Memory Buffer**. CWE-20 can be a parent of many other CWEs including CWE-1284 **Improper Validation of Specified Quantity in Input**, CWE-190 **Integer Overflow or Wraparound** and CWE-113 **Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')**.\n\n```mermaid\ngraph TD\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe20[\"CWE-20: Improper Input Validation\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\"]\n    cwe1284[\"CWE-1284: Improper Validation of Specified Quantity in Input\"]\n    cwe190[\"CWE-190: Integer Overflow or Wraparound\"]\n    cwe113[\"CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers\"]\n    \n    cwe787 -->|CHILDOF| cwe119\n    cwe20 -->|PARENTOF| cwe1284\n    cwe20 -->|CHILDOF| cwe190\n    cwe20 -->|CHILDOF| cwe113\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe787 primary\n    class cwe20 secondary\n    class cwe119,cwe1284,cwe190,cwe113 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **lack of proper validation of user-supplied data** (CWE-20). This leads to a **memory corruption** condition, specifically an **Out-of-bounds Write** (CWE-787), which can then result in remote code execution.\n\n## Summary of Analysis\nThe primary weakness is the **Out-of-bounds Write** (CWE-787) due to the **lack of proper validation of user-supplied data** (CWE-20). The vulnerability description and CVE Reference Links Content Summary both highlight the **lack of proper validation** as the root cause. The description also mentions that this leads to **memory corruption**, and the Content Summary explicitly mentions that this could be an **Out-of-bounds Write**. The final impact is that an attacker can leverage this vulnerability to execute code in the context of the current process.\n\nCWE-787 is chosen as the primary CWE because the vulnerability ultimately results in writing data outside the intended buffer. CWE-20 is added as a secondary CWE to represent the root cause of **lack of proper validation**. While CWE-20 is generally discouraged, it is useful to identify the **lack of proper validation of user-supplied data** as the initial cause of the vulnerability. The retriever results support the choice of CWE-787 and CWE-20 with high scores.\n\nOther CWEs considered but not used:\n*   CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer - While CWE-787 is a child of CWE-119, CWE-787 is more specific to the nature of this vulnerability.\n*   CWE-121 and CWE-122: Stack-based Buffer Overflow and Heap-based Buffer Overflow - There isn't sufficient evidence to determine whether the buffer is allocated on the stack or the heap, so a more general CWE-787 is selected.\n*   CWE-1284: Improper Validation of Specified Quantity in Input - While this is related to input validation, the description doesn't specify that it's related to a quantity, so CWE-20 is preferred.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-787 | Out-of-bounds Write | 1.0 | Base |  Primary | Allowed |\n| CWE-20 | Improper Input Validation | 0.7 | Class | Secondary | Discouraged |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-787 **Out-of-bounds Write**, which is a Base level CWE. The secondary CWE is CWE-20 **Improper Input Validation**, which is a Class level CWE. CWE-787 is a child of CWE-119 **Improper Restriction of Operations within the Bounds of a Memory Buffer**. CWE-20 can be a parent of many other CWEs including CWE-1284 **Improper Validation of Specified Quantity in Input**, CWE-190 **Integer Overflow or Wraparound** and CWE-113 **Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')**.\n\n```mermaid\ngraph TD\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe20[\"CWE-20: Improper Input Validation\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\"]\n    cwe1284[\"CWE-1284: Improper Validation of Specified Quantity in Input\"]\n    cwe190[\"CWE-190: Integer Overflow or Wraparound\"]\n    cwe113[\"CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers\"]\n    \n    cwe787 -->|CHILDOF| cwe119\n    cwe20 -->|PARENTOF| cwe1284\n    cwe20 -->|CHILDOF| cwe190\n    cwe20 -->|CHILDOF| cwe113\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe787 primary\n    class cwe20 secondary\n    class cwe119,cwe1284,cwe190,cwe113 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **lack of proper validation of user-supplied data** (CWE-20). This leads to a **memory corruption** condition, specifically an **Out-of-bounds Write** (CWE-787), which can then result in remote code execution.\n\n## Summary of Analysis\nThe primary weakness is the **Out-of-bounds Write** (CWE-787) due to the **lack of proper validation of user-supplied data** (CWE-20). The vulnerability description and CVE Reference Links Content Summary both highlight the **lack of proper validation** as the root cause. The description also mentions that this leads to **memory corruption**, and the Content Summary explicitly mentions that this could be an **Out-of-bounds Write**. The final impact is that an attacker can leverage this vulnerability to execute code in the context of the current process.\n\nCWE-787 is chosen as the primary CWE because the vulnerability ultimately results in writing data outside the intended buffer. CWE-20 is added as a secondary CWE to represent the root cause of **lack of proper validation**. While CWE-20 is generally discouraged, it is useful to identify the **lack of proper validation of user-supplied data** as the initial cause of the vulnerability. The retriever results support the choice of CWE-787 and CWE-20 with high scores.\n\nOther CWEs considered but not used:\n*   CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer - While CWE-787 is a child of CWE-119, CWE-787 is more specific to the nature of this vulnerability.\n*   CWE-121 and CWE-122: Stack-based Buffer Overflow and Heap-based Buffer Overflow - There isn't sufficient evidence to determine whether the buffer is allocated on the stack or the heap, so a more general CWE-787 is selected.\n*   CWE-1284: Improper Validation of Specified Quantity in Input - While this is related to input validation, the description doesn't specify that it's related to a quantity, so CWE-20 is preferred.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-1284:**\n- 1284 (Improper Validation of Specified Quantity in Input) - ROOT\n\n\n**Chain starting from CWE-121:**\n- 121 (Stack-based Buffer Overflow) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "787",
        "name": "Out-of-bounds Write",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Memory Corruption",
        "match_reason": "exact_match_whole_phrase"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "20",
        "name": "Improper Input Validation",
        "source": "sparse"
      },
      "similarity": 703.3061819836262
    },
    {
      "metadata": {
        "doc_id": "121",
        "name": "Stack-based Buffer Overflow",
        "source": "sparse"
      },
      "similarity": 638.2773762323001
    },
    {
      "metadata": {
        "doc_id": "822",
        "name": "Untrusted Pointer Dereference",
        "source": "sparse"
      },
      "similarity": 622.412650216505
    },
    {
      "metadata": {
        "doc_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "source": "sparse"
      },
      "similarity": 621.3241604137472
    },
    {
      "metadata": {
        "doc_id": "122",
        "name": "Heap-based Buffer Overflow",
        "source": "sparse"
      },
      "similarity": 620.0918858783615
    },
    {
      "metadata": {
        "doc_id": "119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "source": "sparse"
      },
      "similarity": 603.4066362625927
    },
    {
      "metadata": {
        "doc_id": "367",
        "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
        "source": "sparse"
      },
      "similarity": 584.9389825970095
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "type": "Base",
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.4949875112690956,
            "graph": 2.049851340126203
          }
        }
      },
      "similarity": 0.4949875112690956
    },
    {
      "doc_id": "113",
      "text": "CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')",
      "score": 2.6784000000000003,
      "metadata": {
        "doc_id": "113",
        "name": "Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')",
        "type": "variant",
        "original_content": "CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')",
        "relationships": [
          {
            "source_id": "113",
            "target_id": "436",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "113",
            "target_id": "20",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "700"
            }
          },
          {
            "source_id": "113",
            "target_id": "79",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "113",
            "target_id": "93",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "93",
            "target_id": "113",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "113",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "436",
            "target_id": "113",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "20",
            "target_id": "113",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "700"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.76,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.2,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "79",
                  "113",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "79"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "20",
                  "113",
                  "PARENTOF"
                ]
              ],
              "score": 0.76,
              "type": "abstraction_path_down",
              "source": "20"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "79",
                  "113",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "79"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "113",
                  "79",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "79"
            }
          }
        },
        "abstraction_level": "variant",
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.6784000000000003
          }
        }
      },
      "similarity": 2.6784000000000003
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-1284",
      "CWE-121",
      "CWE-787",
      "CWE-113",
      "CWE-190",
      "CWE-122",
      "CWE-20",
      "CWE-119"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}