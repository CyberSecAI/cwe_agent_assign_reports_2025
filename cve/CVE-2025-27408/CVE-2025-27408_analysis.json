{
  "cve_id": "CVE-2025-27408",
  "description": "Manifest offers users a one-file micro back end. Prior to version 4.9.2, Manifest employs a **weak password hashing implementation** that uses SHA3 without a salt. This exposes user passwords to a higher risk of being cracked if an attacker gains access to the database. Without the use of a salt, identical passwords across multiple users will result in the same hash, making it easier for attackers to identify and exploit patterns, thereby accelerating the cracking process. Version 4.9.2 fixes the issue.",
  "key_phrases": {
    "rootcause": "weak password hashing implementation",
    "weakness": "",
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": "Manifest",
    "version": "Prior to version 4.9.2",
    "component": ""
  },
  "reference_content": "## Analysis of CVE-2025-27408 Content\n\nHere's an analysis of the provided content, focusing on details relevant to CVE-2025-27408, as described in the prompt's guidelines:\n\n**1. Verification:**\n\nThe content directly relates to CVE-2025-27408, as it explicitly mentions the CVE ID. The description details a vulnerability concerning weak password hashing in the \"manifest\" package.\n\n**2. Extracted Information:**\n\n*   **Root cause of vulnerability:** The application uses SHA3 for password hashing *without* a salt.\n*   **Weaknesses/vulnerabilities present:**\n    *   Use of a one-way hash (SHA3) without a salt.\n    *   Deterministic password hashes (identical passwords result in identical hashes).\n    *   Cryptographic weakness.\n*   **Impact of exploitation:**\n    *   Increased risk of password cracking if the database is compromised.\n    *   Attackers can use precomputed hash databases (Rainbow Tables) or brute-force attacks more effectively.\n    *   Compromised accounts and potential for further system exploitation.\n*   **Attack vectors:**\n    *   Database breach (attacker gains access to the password hashes).\n*   **Required attacker capabilities/position:**\n    *   Access to the application's database.\n    *   Knowledge of password cracking techniques.\n*   **Mitigation or fix:** The advisory does not specify a fix, but implies that implementing a salted hash function (like bcrypt, as mentioned in the first commit analyzed) is the solution.\n\n**3. Additional Details (More than CVE Description):**\n\n*   **Affected versions:** `< 4.9.2`\n*   **CVSS Score:** 4.8 (Moderate)\n*   **CVSS Vector:** CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N\n*   **Credits:** The vulnerability was reported by @prokofitch.\n*   **Proof of Concept (PoC):** The advisory provides a PoC: create two users with the same password, extract their hashes, and verify they are identical.\n*   **CWE ID:** CWE-759 (Missing Authentication for Critical Function)\n\n**4. Content Source:**\n\nThe information is sourced from a GitHub security advisory for the \"manifest\" package.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-759 | Use of a One-Way Hash without a Salt | 1.0 | Variant | Allowed | Primary CWE |\n| CWE-328 | Use of Weak Hash | 0.8 | Base | Allowed | Secondary Candidate |\n| CWE-916 | Use of Password Hash With Insufficient Computational Effort | 0.7 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-759, which is a variant-level CWE and a child of several class-level CWEs, including CWE-327 (Use of a Broken or Risky Cryptographic Algorithm), CWE-328 (Use of Weak Hash), and CWE-916 (Use of Password Hash With Insufficient Computational Effort). This indicates that the use of a one-way hash without a salt is a specific type of cryptographic weakness. CWE-328 and CWE-916 were considered as broader classifications but were deemed less specific than CWE-759 based on the provided evidence.\n\n```mermaid\ngraph TD\n    cwe759[\"CWE-759: Use of a One-Way Hash without a Salt\"]\n    cwe327[\"CWE-327: Use of a Broken or Risky Cryptographic Algorithm\"]\n    cwe328[\"CWE-328: Use of Weak Hash\"]\n    cwe916[\"CWE-916: Use of Password Hash With Insufficient Computational Effort\"]\n    \n    cwe759 -->|CHILDOF| cwe327\n    cwe759 -->|CHILDOF| cwe328\n    cwe759 -->|CHILDOF| cwe916\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe759 primary\n    class cwe327,cwe328,cwe916 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **weak password hashing implementation** using SHA3 without a salt (CWE-759). This leads to a higher risk of password cracking if an attacker gains access to the database, potentially compromising user accounts and system security.\n\n## Summary of Analysis\nThe primary CWE is CWE-759 (Use of a One-Way Hash without a Salt), which accurately describes the vulnerability. The vulnerability description explicitly states that Manifest employs a **weak password hashing implementation** that uses SHA3 without a salt, exposing user passwords to a higher risk of being cracked. This aligns directly with the characteristics of CWE-759. The retriever results also list CWE-759 as a highly relevant CWE.\n\nCWE-328 (Use of Weak Hash) and CWE-916 (Use of Password Hash With Insufficient Computational Effort) were considered as secondary CWEs because they represent broader categories of cryptographic weaknesses. However, CWE-759 is a more specific variant that accurately captures the **root cause** of the vulnerability.\n\nThe choice of CWE-759 is based on direct evidence from the vulnerability description and aligns with the MITRE mapping guidance for selecting the most specific CWE. The confidence score is high (0.9) due to the clear match between the vulnerability description and the CWE characteristics.\nThe evidence includes: \"Manifest employs a **weak password hashing implementation** that uses SHA3 without a salt.\"\nCWE-759 is the optimal level of specificity because it directly addresses the **root cause** of the vulnerability \u2013 the use of a one-way hash without a salt. Other CWEs, such as CWE-328 and CWE-916, are more general and do not capture the specific weakness.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-759 | Use of a One-Way Hash without a Salt | 1.0 | Variant | Allowed | Primary CWE |\n| CWE-328 | Use of Weak Hash | 0.8 | Base | Allowed | Secondary Candidate |\n| CWE-916 | Use of Password Hash With Insufficient Computational Effort | 0.7 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-759, which is a variant-level CWE and a child of several class-level CWEs, including CWE-327 (Use of a Broken or Risky Cryptographic Algorithm), CWE-328 (Use of Weak Hash), and CWE-916 (Use of Password Hash With Insufficient Computational Effort). This indicates that the use of a one-way hash without a salt is a specific type of cryptographic weakness. CWE-328 and CWE-916 were considered as broader classifications but were deemed less specific than CWE-759 based on the provided evidence.\n\n```mermaid\ngraph TD\n    cwe759[\"CWE-759: Use of a One-Way Hash without a Salt\"]\n    cwe327[\"CWE-327: Use of a Broken or Risky Cryptographic Algorithm\"]\n    cwe328[\"CWE-328: Use of Weak Hash\"]\n    cwe916[\"CWE-916: Use of Password Hash With Insufficient Computational Effort\"]\n    \n    cwe759 -->|CHILDOF| cwe327\n    cwe759 -->|CHILDOF| cwe328\n    cwe759 -->|CHILDOF| cwe916\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe759 primary\n    class cwe327,cwe328,cwe916 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **weak password hashing implementation** using SHA3 without a salt (CWE-759). This leads to a higher risk of password cracking if an attacker gains access to the database, potentially compromising user accounts and system security.\n\n## Summary of Analysis\nThe primary CWE is CWE-759 (Use of a One-Way Hash without a Salt), which accurately describes the vulnerability. The vulnerability description explicitly states that Manifest employs a **weak password hashing implementation** that uses SHA3 without a salt, exposing user passwords to a higher risk of being cracked. This aligns directly with the characteristics of CWE-759. The retriever results also list CWE-759 as a highly relevant CWE.\n\nCWE-328 (Use of Weak Hash) and CWE-916 (Use of Password Hash With Insufficient Computational Effort) were considered as secondary CWEs because they represent broader categories of cryptographic weaknesses. However, CWE-759 is a more specific variant that accurately captures the **root cause** of the vulnerability.\n\nThe choice of CWE-759 is based on direct evidence from the vulnerability description and aligns with the MITRE mapping guidance for selecting the most specific CWE. The confidence score is high (0.9) due to the clear match between the vulnerability description and the CWE characteristics.\nThe evidence includes: \"Manifest employs a **weak password hashing implementation** that uses SHA3 without a salt.\"\nCWE-759 is the optimal level of specificity because it directly addresses the **root cause** of the vulnerability \u2013 the use of a one-way hash without a salt. Other CWEs, such as CWE-328 and CWE-916, are more general and do not capture the specific weakness.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-328:**\n- 328 (Use of Weak Hash) - ROOT\n\n\n**Chain starting from CWE-916:**\n- 916 (Use of Password Hash With Insufficient Computational Effort) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "916",
        "name": "Use of Password Hash With Insufficient Computational Effort",
        "source": "sparse"
      },
      "similarity": 576.2032690729301
    },
    {
      "metadata": {
        "doc_id": "328",
        "name": "Use of Weak Hash",
        "source": "sparse"
      },
      "similarity": 544.052116237408
    },
    {
      "metadata": {
        "doc_id": "327",
        "name": "Use of a Broken or Risky Cryptographic Algorithm",
        "source": "sparse"
      },
      "similarity": 492.4389781241886
    },
    {
      "metadata": {
        "doc_id": "330",
        "name": "Use of Insufficiently Random Values",
        "source": "sparse"
      },
      "similarity": 491.1004518775244
    },
    {
      "metadata": {
        "doc_id": "1390",
        "name": "Weak Authentication",
        "source": "sparse"
      },
      "similarity": 490.73504580043254
    },
    {
      "metadata": {
        "doc_id": "259",
        "name": "Use of Hard-coded Password",
        "source": "sparse"
      },
      "similarity": 476.0837474421022
    },
    {
      "metadata": {
        "doc_id": "759",
        "name": "Use of a One-Way Hash without a Salt",
        "source": "sparse"
      },
      "similarity": 460.8515682648662
    },
    {
      "metadata": {
        "doc_id": "760",
        "name": "Use of a One-Way Hash with a Predictable Salt",
        "source": "sparse"
      },
      "similarity": 447.5701112024252
    },
    {
      "metadata": {
        "doc_id": "836",
        "name": "Use of Password Hash Instead of Password for Authentication",
        "type": "Base",
        "original_content": "The product records password hashes in a data store, receives a hash of a password from a client, and compares the supplied hash to the hash obtained from the data store.",
        "keyphrase_source": "rootcause:weak password hashing implementation",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5206128400892402,
            "graph": 1.704771749865648
          }
        }
      },
      "similarity": 0.5206128400892402
    },
    {
      "doc_id": "804",
      "text": "CWE-804: Guessable CAPTCHA",
      "score": 2.8651999999999997,
      "metadata": {
        "doc_id": "804",
        "name": "Guessable CAPTCHA",
        "type": "base",
        "original_content": "CWE-804: Guessable CAPTCHA",
        "relationships": [
          {
            "source_id": "804",
            "target_id": "330",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "804",
            "target_id": "1390",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "804",
            "target_id": "863",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "863",
            "target_id": "804",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "330",
            "target_id": "804",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1390",
            "target_id": "804",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.7200000000000001,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "330",
                  "804",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "330"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "1390",
                  "804",
                  "PARENTOF"
                ]
              ],
              "score": 0.7200000000000001,
              "type": "abstraction_path_down",
              "source": "1390"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "330",
                  "804",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "330"
            }
          }
        },
        "abstraction_level": "base",
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.8651999999999997
          }
        }
      },
      "similarity": 2.8651999999999997
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-328",
      "CWE-916",
      "CWE-327",
      "CWE-759"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}