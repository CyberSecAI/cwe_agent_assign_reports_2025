{
  "cve_id": "CVE-2024-36460",
  "description": "The front-end audit log allows viewing of **unprotected plaintext passwords**, where the passwords are displayed in plain text.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "unprotected plaintext passwords",
    "impact": "view unprotected plaintext passwords",
    "vector": "",
    "attacker": "",
    "product": "",
    "version": "",
    "component": "front-end audit log"
  },
  "reference_content": "Based on the provided information, here's an analysis of CVE-2024-36460:\n\n**Root Cause of Vulnerability:**\nThe vulnerability stems from the Zabbix frontend audit log storing passwords in plaintext. This occurs because the system does not properly mask or protect sensitive password data before logging it.\n\n**Weaknesses/Vulnerabilities Present:**\n- **Plaintext Storage of Passwords (CWE-256):**  The core issue is that passwords are not hashed or encrypted before being written to the audit log. This directly violates security best practices.\n- **Exposure of Sensitive Data:** The audit log, designed to track actions, inadvertently exposes sensitive credentials.\n\n**Impact of Exploitation:**\n- **Credential Compromise:** Attackers who gain access to the audit log can easily retrieve plaintext passwords.\n- **Impersonation Attacks:** Stolen passwords can be used to impersonate legitimate users, potentially gaining unauthorized access to the Zabbix system and its connected resources.\n- **Privilege Escalation**: If an administrator password is compromised, it could give an attacker complete control of the Zabbix system.\n\n**Attack Vectors:**\n- **Access to Audit Logs:** An attacker needs to gain access to the Zabbix frontend audit logs. This could be achieved through:\n    - Exploiting a separate vulnerability on the system hosting Zabbix\n    - Social engineering\n    - Brute-forcing or credential stuffing of the Zabbix front end.\n    - Internal compromised users.\n\n**Required Attacker Capabilities/Position:**\n- **Access to Zabbix Frontend**: The attacker must have access to the Zabbix frontend, specifically the audit logs.\n- **Privilege Level:** Depending on the access control of the audit log functionality, the attacker may need only limited privileges on the Zabbix instance.\n- **Technical Knowledge:** Basic knowledge of accessing and navigating Zabbix and understanding of log files is required.\n\n**Additional Information:**\n- **CVSS Score:** The vulnerability has a CVSS score of 8.1, indicating a \"High\" severity.\n- **Affected Versions:** Zabbix versions 5.0.0 through 5.0.42, 6.0.0 through 6.0.30, 6.4.0 through 6.4.15, and 7.0.0alpha1 through 7.0.0 are affected.\n- **Fixed Versions:** This issue is resolved in versions 5.0.43rc1, 6.0.31rc1, 6.4.16rc1, 7.0.1rc1, and 7.2.0alpha1.\n- **Mitigation:**  The resolution involves masking or otherwise protecting passwords in the audit log output.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID  | CWE Name                                                 | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-256   | Plaintext Storage of a Password                        | 1          | Base                  | Primary                         | Allowed                         |\n| CWE-532   | Insertion of Sensitive Information into Log File        | 0.9        | Base                  | Secondary                       | Allowed                         |\n| CWE-522   | Insufficiently Protected Credentials                   | 0.7        | Class                 | Secondary                       | Allowed-with-Review             |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.95\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship influencing the CWE selection is the parent-child relationship, particularly how CWE-256 *Plaintext Storage of a Password* is a child of CWE-522 *Insufficiently Protected Credentials*. Additionally, CWE-532 *Insertion of Sensitive Information into Log File* is related as sensitive information is being stored, although this is secondary to the primary weakness of the password being in plaintext. The abstraction levels were also considered, with the preference being given to the base level CWEs where appropriate.\n\n```mermaid\ngraph TD\n    cwe256[\"CWE-256: Plaintext Storage of a Password\"]\n    cwe522[\"CWE-522: Insufficiently Protected Credentials\"]\n    cwe532[\"CWE-532: Insertion of Sensitive Information into Log File\"]\n    \n    cwe256 -->|CHILDOF| cwe522\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe256 primary\n    class cwe522,cwe532 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **root cause**: the system's failure to protect passwords before logging them. This leads directly to the **weakness**: storing passwords in plaintext. The final impact is the potential compromise of credentials due to the accessibility of the unprotected passwords in the audit log.\n\n## Summary of Analysis\nThe analysis is strongly based on the provided evidence, specifically the statements: \"The front-end audit log allows viewing of **unprotected plaintext passwords**, where the passwords are displayed in plain text\" and \"The vulnerability stems from the Zabbix frontend audit log storing passwords in plaintext. This occurs because the system does not properly mask or protect sensitive password data before logging it.\" The primary CWE, CWE-256, is the most specific and directly reflects the core issue. The graph relationships helped clarify that while CWE-522 is related, CWE-256 is a more precise classification. The selected CWEs are at the optimal level of specificity because they accurately describe the **root cause** and the immediate consequences of the vulnerability.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-256: Plaintext Storage of a Password\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nStoring a password in plaintext may result in a system compromise.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**Rationale**: This CWE perfectly matches the vulnerability description, where **passwords are stored in plaintext** within the audit log. The evidence is the vulnerability description and CVE reference links.\n**CWE-256** is the best choice since it describes **unprotected passwords** being stored in the audit logs. The abstraction level is Base, which is desired. The usage is ALLOWED.\nConfidence Level: 1\n\n## CWE-532: Insertion of Sensitive Information into Log File\n**Abstraction Level**: Base\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe product writes sensitive information to a log file.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**Rationale**: This CWE applies as the **plaintext passwords**, which are sensitive information, are being inserted into the log file. This is related since the **passwords are being stored in plaintext** into the log, although the passwords being in plaintext is the primary issue. The evidence is the vulnerability description and CVE reference links.\n**CWE-532** is a secondary candidate since sensitive information in the form of **plaintext passwords** is being inserted into the log files. The abstraction level is Base, which is desired. The usage is ALLOWED.\nConfidence Level: 0.9\n\n## CWE-522: Insufficiently Protected Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n**Rationale**: This CWE applies since the authentication credentials are not protected with encryption or masking. However, it is not as specific as CWE-256. The evidence is the vulnerability description and CVE reference links.\n**CWE-522** is a candidate since the credentials are not sufficiently protected. However, there are more specific base level CWEs such as CWE-256. The abstraction level is Class, but the Rationale specifically says there might be more appropriate Base-level children. The usage is ALLOWED-with-Review.\nConfidence Level: 0.7\n\n## Other Considerations:\nCWE-312: Cleartext Storage of Sensitive Information was considered but not used because CWE-256 is more specific to passwords.\nCWE-916: Use of Password Hash With Insufficient Computational Effort was considered but not used since there was no evidence provided the passwords were being hashed.\nCWE-260: Password in Configuration File was considered but not used as the passwords were not stored in a configuration file.\nCWE-319: Cleartext Transmission of Sensitive Information was considered but not used since the passwords were not being transmitted.\nCWE-257: Storing Passwords in a Recoverable Format was considered but not used since there was no evidence the passwords were being stored in an encrypted, but recoverable format.\nCWE-778: Insufficient Logging was considered but not used since the vulnerability is that the passwords were **unprotected** and in **plaintext**, and is not that the logging was insufficient.\nCWE-261: Weak Encoding for Password was considered but not used since there was no evidence that the password was being encoded with a weak encoding.",
  "analysis_with_relationships": "# Summary\n| CWE ID  | CWE Name                                                 | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-256   | Plaintext Storage of a Password                        | 1          | Base                  | Primary                         | Allowed                         |\n| CWE-532   | Insertion of Sensitive Information into Log File        | 0.9        | Base                  | Secondary                       | Allowed                         |\n| CWE-522   | Insufficiently Protected Credentials                   | 0.7        | Class                 | Secondary                       | Allowed-with-Review             |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.95\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship influencing the CWE selection is the parent-child relationship, particularly how CWE-256 *Plaintext Storage of a Password* is a child of CWE-522 *Insufficiently Protected Credentials*. Additionally, CWE-532 *Insertion of Sensitive Information into Log File* is related as sensitive information is being stored, although this is secondary to the primary weakness of the password being in plaintext. The abstraction levels were also considered, with the preference being given to the base level CWEs where appropriate.\n\n```mermaid\ngraph TD\n    cwe256[\"CWE-256: Plaintext Storage of a Password\"]\n    cwe522[\"CWE-522: Insufficiently Protected Credentials\"]\n    cwe532[\"CWE-532: Insertion of Sensitive Information into Log File\"]\n    \n    cwe256 -->|CHILDOF| cwe522\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe256 primary\n    class cwe522,cwe532 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **root cause**: the system's failure to protect passwords before logging them. This leads directly to the **weakness**: storing passwords in plaintext. The final impact is the potential compromise of credentials due to the accessibility of the unprotected passwords in the audit log.\n\n## Summary of Analysis\nThe analysis is strongly based on the provided evidence, specifically the statements: \"The front-end audit log allows viewing of **unprotected plaintext passwords**, where the passwords are displayed in plain text\" and \"The vulnerability stems from the Zabbix frontend audit log storing passwords in plaintext. This occurs because the system does not properly mask or protect sensitive password data before logging it.\" The primary CWE, CWE-256, is the most specific and directly reflects the core issue. The graph relationships helped clarify that while CWE-522 is related, CWE-256 is a more precise classification. The selected CWEs are at the optimal level of specificity because they accurately describe the **root cause** and the immediate consequences of the vulnerability.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-256: Plaintext Storage of a Password\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nStoring a password in plaintext may result in a system compromise.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**Rationale**: This CWE perfectly matches the vulnerability description, where **passwords are stored in plaintext** within the audit log. The evidence is the vulnerability description and CVE reference links.\n**CWE-256** is the best choice since it describes **unprotected passwords** being stored in the audit logs. The abstraction level is Base, which is desired. The usage is ALLOWED.\nConfidence Level: 1\n\n## CWE-532: Insertion of Sensitive Information into Log File\n**Abstraction Level**: Base\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe product writes sensitive information to a log file.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**Rationale**: This CWE applies as the **plaintext passwords**, which are sensitive information, are being inserted into the log file. This is related since the **passwords are being stored in plaintext** into the log, although the passwords being in plaintext is the primary issue. The evidence is the vulnerability description and CVE reference links.\n**CWE-532** is a secondary candidate since sensitive information in the form of **plaintext passwords** is being inserted into the log files. The abstraction level is Base, which is desired. The usage is ALLOWED.\nConfidence Level: 0.9\n\n## CWE-522: Insufficiently Protected Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n**Rationale**: This CWE applies since the authentication credentials are not protected with encryption or masking. However, it is not as specific as CWE-256. The evidence is the vulnerability description and CVE reference links.\n**CWE-522** is a candidate since the credentials are not sufficiently protected. However, there are more specific base level CWEs such as CWE-256. The abstraction level is Class, but the Rationale specifically says there might be more appropriate Base-level children. The usage is ALLOWED-with-Review.\nConfidence Level: 0.7\n\n## Other Considerations:\nCWE-312: Cleartext Storage of Sensitive Information was considered but not used because CWE-256 is more specific to passwords.\nCWE-916: Use of Password Hash With Insufficient Computational Effort was considered but not used since there was no evidence provided the passwords were being hashed.\nCWE-260: Password in Configuration File was considered but not used as the passwords were not stored in a configuration file.\nCWE-319: Cleartext Transmission of Sensitive Information was considered but not used since the passwords were not being transmitted.\nCWE-257: Storing Passwords in a Recoverable Format was considered but not used since there was no evidence the passwords were being stored in an encrypted, but recoverable format.\nCWE-778: Insufficient Logging was considered but not used since the vulnerability is that the passwords were **unprotected** and in **plaintext**, and is not that the logging was insufficient.\nCWE-261: Weak Encoding for Password was considered but not used since there was no evidence that the password was being encoded with a weak encoding.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-260:**\n- 260 (Password in Configuration File) - ROOT\n\n\n**Chain starting from CWE-916:**\n- 916 (Use of Password Hash With Insufficient Computational Effort) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "256",
        "name": "Plaintext Storage of a Password",
        "source": "sparse"
      },
      "similarity": 196.98313614211372
    },
    {
      "metadata": {
        "doc_id": "532",
        "name": "Insertion of Sensitive Information into Log File",
        "source": "sparse"
      },
      "similarity": 157.39988808621962
    },
    {
      "metadata": {
        "doc_id": "522",
        "name": "Insufficiently Protected Credentials",
        "source": "sparse"
      },
      "similarity": 153.34632843456498
    },
    {
      "metadata": {
        "doc_id": "312",
        "name": "Cleartext Storage of Sensitive Information",
        "source": "sparse"
      },
      "similarity": 141.33181219750315
    },
    {
      "metadata": {
        "doc_id": "260",
        "name": "Password in Configuration File",
        "source": "sparse"
      },
      "similarity": 133.9553217677204
    },
    {
      "metadata": {
        "doc_id": "916",
        "name": "Use of Password Hash With Insufficient Computational Effort",
        "source": "sparse"
      },
      "similarity": 128.922896477892
    },
    {
      "metadata": {
        "doc_id": "319",
        "name": "Cleartext Transmission of Sensitive Information",
        "source": "sparse"
      },
      "similarity": 128.61550644577062
    },
    {
      "metadata": {
        "doc_id": "257",
        "name": "Storing Passwords in a Recoverable Format",
        "source": "sparse"
      },
      "similarity": 119.3254645103928
    },
    {
      "metadata": {
        "doc_id": "778",
        "name": "Insufficient Logging",
        "type": "Base",
        "original_content": "When a security-critical event occurs, the product either does not record the event or omits important details about the event when logging it.",
        "keyphrase_source": "weakness:unprotected plaintext passwords",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.491739326955239,
            "graph": 1.5032543715423898
          }
        }
      },
      "similarity": 0.491739326955239
    },
    {
      "doc_id": "261",
      "text": "Obscuring a password with a trivial encoding does not protect the password.",
      "score": 0.5799815704492044,
      "metadata": {
        "doc_id": "261",
        "name": "Weak Encoding for Password",
        "type": "Base",
        "extended_description": "Password management issues occur when a password is stored in plaintext in an application's properties or configuration file. A programmer can attempt to remedy the password management problem by obscuring the password with an encoding function, such as base 64 encoding, but this effort does not adequately protect the password.",
        "alternate_terms": [],
        "original_content": "Obscuring a password with a trivial encoding does not protect the password.",
        "relationships": [
          {
            "source_id": "261",
            "target_id": "522",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "522",
            "target_id": "261",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "source": "graph",
        "sources": [
          "vector",
          "graph"
        ],
        "vector_score": 0.5799815704492044,
        "graph_score": 2.4699999999999998,
        "score_components": {
          "relationship_chain": 0.3,
          "explicit_mention": 1.0,
          "abstraction_path": 0.9
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "522",
                  "261",
                  "PARENTOF"
                ]
              ],
              "score": 0.3,
              "type": "relationship_chain",
              "source": "522"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "522",
                  "261",
                  "PARENTOF"
                ]
              ],
              "score": 0.7200000000000001,
              "type": "abstraction_path_down",
              "source": "522"
            }
          }
        },
        "is_explicit": true,
        "abstraction_level": "base",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.4911606961432248,
            "graph": 1.7139926281796816
          }
        }
      },
      "similarity": 1.7139926281796816
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-260",
      "CWE-916",
      "CWE-319",
      "CWE-257",
      "CWE-256",
      "CWE-312",
      "CWE-778",
      "CWE-261",
      "CWE-522",
      "CWE-532"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}