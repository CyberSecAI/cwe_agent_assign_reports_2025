{
  "method": "sparse_base",
  "query": "In the Linux kernel, the following vulnerability has been resolved ext4 do not create EA inode under buffer lock ext4_xattr_set_entry() creates new EA inodes while holding buffer lock on the external xattr block. This is problematic as it nests all the allocation locking (which acquires locks on other buffers) under the buffer lock. This can even deadlock when the filesystem is corrupted and e.g. quota file is setup to contain xattr block as data block. Move the allocation of EA inode out of ext4_xattr_set_entry() into the callers.",
  "keyphrases": {
    "base_query": "In the Linux kernel, the following vulnerability has been resolved ext4 do not create EA inode under buffer lock ext4_xattr_set_entry() creates new EA inodes while holding buffer lock on the external xattr block. This is problematic as it nests all the allocation locking (which acquires locks on other buffers) under the buffer lock. This can even deadlock when the filesystem is corrupted and e.g. quota file is setup to contain xattr block as data block. Move the allocation of EA inode out of ext4_xattr_set_entry() into the callers."
  },
  "timestamp": "2025-07-13T12:45:07.725930",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "667",
      "name": "Improper Locking",
      "score": 147.71772209741897
    },
    {
      "doc_id": "833",
      "name": "Deadlock",
      "score": 145.68510560208958
    },
    {
      "doc_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 138.8761572930548
    },
    {
      "doc_id": "190",
      "name": "Integer Overflow or Wraparound",
      "score": 137.9905493196042
    },
    {
      "doc_id": "226",
      "name": "Sensitive Information in Resource Not Removed Before Reuse",
      "score": 132.04652230100544
    }
  ]
}