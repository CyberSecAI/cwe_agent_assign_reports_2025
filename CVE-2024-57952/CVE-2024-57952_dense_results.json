{
  "query": "In the Linux kernel, the following vulnerability has been resolved Revert libfs fix infinite directory reads for offset dir The current directory offset allocator (based on mtree_alloc_cyclic) stores the next offset value to return in octx->next_offset. This mechanism typically returns values that increase monotonically over time. Eventually, though, the newly allocated offset value wraps back to a low number (say, 2) which is smaller than other already- allocated offset values. Yu Kuai reports that, after commit 64a7ce76fb90 (libfs fix infinite directory reads for offset dir), if a directorys offset allocator wraps, existing entries are no longer visible via readdir/getdents because offset_readdir() stops listing entries once an entrys offset is larger than octx->next_offset. These entries vanish persistently -- they can be looked up, but will never again appear in readdir(3) output. The reason for this is that the commit treats directory offsets as monotonically increasing integer values rather than opaque cookies, and introduces this comparison if (dentry2offset(dentry) >= last_index) { On 64-bit platforms, the directory offset value upper bound is 2^63 - 1. Directory offsets will monotonically increase for millions of years without wrapping. On 32-bit platforms, however, LONG_MAX is 2^31 - 1. The allocator can wrap after only a few weeks (at worst). Revert commit 64a7ce76fb90 (libfs fix infinite directory reads for offset dir) to prepare for a fix that can work properly on 32-bit systems and might apply to recent LTS kernels where shmem employs the simple_offset mechanism.",
  "count": 20,
  "results": [
    {
      "cwe_id": "823",
      "name": "Use of Out-of-range Pointer Offset",
      "abstraction": "Base",
      "score": 0.5098277114807415,
      "original_score": 0.5098277114807415,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "abstraction": "Base",
      "score": 0.4966059238748697,
      "original_score": 0.4966059238748697,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 0.4841027783402662,
      "original_score": 0.4841027783402662,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "911",
      "name": "Improper Update of Reference Count",
      "abstraction": "Base",
      "score": 0.47772885100207724,
      "original_score": 0.47772885100207724,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "abstraction": "Base",
      "score": 0.4724987310667533,
      "original_score": 0.4724987310667533,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "126",
      "name": "Buffer Over-read",
      "abstraction": "Variant",
      "score": 0.47067074989827307,
      "original_score": 0.47067074989827307,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "abstraction": "Class",
      "score": 0.4695070929964058,
      "original_score": 0.4695070929964058,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 0.46935774814708014,
      "original_score": 0.46935774814708014,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "62",
      "name": "UNIX Hard Link",
      "abstraction": "Variant",
      "score": 0.46791897821146317,
      "original_score": 0.46791897821146317,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "193",
      "name": "Off-by-one Error",
      "abstraction": "Base",
      "score": 0.4670758781635229,
      "original_score": 0.4670758781635229,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "122",
      "name": "Heap-based Buffer Overflow",
      "abstraction": "Variant",
      "score": 0.459625931164676,
      "original_score": 0.459625931164676,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "277",
      "name": "Insecure Inherited Permissions",
      "abstraction": "Variant",
      "score": 0.4584518595263493,
      "original_score": 0.4584518595263493,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "abstraction": "Class",
      "score": 0.45666411894290543,
      "original_score": 0.45666411894290543,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "abstraction": "Base",
      "score": 0.4544527766928781,
      "original_score": 0.4544527766928781,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "775",
      "name": "Missing Release of File Descriptor or Handle after Effective Lifetime",
      "abstraction": "Variant",
      "score": 0.45410122270080067,
      "original_score": 0.45410122270080067,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1260",
      "name": "Improper Handling of Overlap Between Protected Memory Ranges",
      "abstraction": "Base",
      "score": 0.45327087202749755,
      "original_score": 0.45327087202749755,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "abstraction": "Base",
      "score": 0.452878687410211,
      "original_score": 0.452878687410211,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "abstraction": "Variant",
      "score": 0.4501757092946579,
      "original_score": 0.4501757092946579,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "abstraction": "Base",
      "score": 0.44849589703171844,
      "original_score": 0.44849589703171844,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "abstraction": "Base",
      "score": 0.4463648034189589,
      "original_score": 0.4463648034189589,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 0.4463648034189589,
    "max": 0.5098277114807415,
    "mean": 0.46598881606960524,
    "median": 0.46335090466409945,
    "count": 20
  }
}