{
  "cve_id": "CVE-2024-10634",
  "description": "The Nokaut Offers Box WordPress plugin through 1.4.0 **does not have CSRF check** in place when updating its settings, which could allow attackers to make a logged in admin reset the Nokaut Offers Box WordPress plugin through 1.4.0 via a CSRF attack",
  "key_phrases": {
    "rootcause": [
      "does not have CSRF check",
      "lack of CSRF check"
    ],
    "weakness": "",
    "impact": "reset Nokaut Offers Box plugin settings",
    "vector": "CSRF attack",
    "attacker": "attackers",
    "product": "Nokaut Offers Box WordPress plugin",
    "version": "through 1.4.0",
    "component": ""
  },
  "reference_content": "## Analysis of CVE-2024-10634 Content\n\nThe provided content is **RELEVANT** to CVE-2024-10634 and provides more detail than the placeholder description. Here's an extraction of the relevant information:\n\n**Root cause of vulnerability:**\n\nThe plugin does not have CSRF (Cross-Site Request Forgery) checks in place when updating its settings.\n\n**Weaknesses/vulnerabilities present:**\n\n*   CSRF vulnerability\n*   Lack of CSRF protection on settings update\n\n**Impact of exploitation:**\n\nAttackers can make a logged-in administrator reset the plugin via a CSRF attack.\n\n**Attack vectors:**\n\n*   CSRF attack - an attacker crafts a malicious request that is executed by an authenticated user.\n\n**Required attacker capabilities/position:**\n\n*   The attacker does not need to be authenticated. They need to trick a logged-in administrator into triggering the malicious request.\n\n**Mitigation or fix:**\n\n*   No known fix as of the provided content's last update (2024-11-22). Implementing CSRF protection is the recommended mitigation.\n\n**Additional Details:**\n\n*   **Affected Plugin:** Nokaut Offers Box <= 1.4.0\n*   **Proof of Concept:** `https://example.com/wp-admin/options-general.php?page=nokaut-offers-box-config&nokaut-offers-box-options-reset=1`\n*   **CVSS Score:** 4.3 (Medium)\n*   **References:**\n    *   CVE: [https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-10634](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-10634)\n*   **WPVDB ID:** 97de2ca3-ee64-480b-a5b0-7549533c2936\n*   **Original Researcher:** Bob Matyas\n*   **Verified:** Yes",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 1.0 | Compound | Primary | Allowed |\n| CWE-862 | Missing Authorization | 0.7 | Class | Secondary | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship is that CWE-352 [Cross-Site Request Forgery (CSRF)] is a compound weakness, which often stems from **missing** or **improper** authorization checks. CWE-862 [Missing Authorization] is a class-level CWE, and while it is related to CSRF, it's less specific in this case. The vulnerability description explicitly mentions the **lack of CSRF protection**, making CWE-352 the most relevant choice.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe862[\"CWE-862: Missing Authorization\"]\n    \n    cwe352 -->|RELATED_TO| cwe862\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe352 primary\n    class cwe862 secondary\n```\n\n## Vulnerability Chain\nThe chain of events for this vulnerability is as follows:\n1.  **ROOT CAUSE**: **Missing CSRF check** (CWE-352). The Nokaut Offers Box WordPress plugin through 1.4.0 **does not have CSRF check** in place.\n2.  **IMPACT**: Attackers can make a logged-in admin reset the plugin settings. This is achieved via a CSRF attack.\n\n## Summary of Analysis\nThe analysis is strongly based on the provided evidence, particularly the explicit mention of the **lack of CSRF check** in the vulnerability description. This directly aligns with the definition of CWE-352 [Cross-Site Request Forgery (CSRF)]. While other CWEs like CWE-862 [Missing Authorization] were considered, CWE-352 is the most specific and appropriate classification given the available information.\n\nThe vulnerability description clearly indicates that the primary issue is the **absence of CSRF protection**. The impact is that an attacker can exploit this **missing check** to force an administrator to perform actions they did not intend to, such as resetting the plugin settings.\n\nThe selection of CWE-352 [Cross-Site Request Forgery (CSRF)] is at the optimal level of specificity because it precisely describes the **missing security mechanism** that leads to the vulnerability.\nCWE-862 [Missing Authorization] could be a secondary weakness, but it is not the most precise representation of the vulnerability.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n\n\n## CWE-184: Incomplete List of Disallowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 0.69\n**Source**: dense\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-807: Reliance on Untrusted Inputs in a Security Decision\n**Abstraction Level**: Base\n**Similarity Score**: 0.69\n**Source**: dense\n\n**Description**:\nThe product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.69\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-294: Authentication Bypass by Capture-replay\n**Abstraction Level**: Base\n**Similarity Score**: 0.69\n**Source**: dense\n\n**Description**:\nA capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-639: Authorization Bypass Through User-Controlled Key\n**Abstraction Level**: Base\n**Similarity Score**: 0.69\n**Source**: dense\n\n**Description**:\nThe system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 2665.63\n**Source**: sparse\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 2631.05\n**Source**: sparse\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 1.0 | Compound | Primary | Allowed |\n| CWE-862 | Missing Authorization | 0.7 | Class | Secondary | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship is that CWE-352 [Cross-Site Request Forgery (CSRF)] is a compound weakness, which often stems from **missing** or **improper** authorization checks. CWE-862 [Missing Authorization] is a class-level CWE, and while it is related to CSRF, it's less specific in this case. The vulnerability description explicitly mentions the **lack of CSRF protection**, making CWE-352 the most relevant choice.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe862[\"CWE-862: Missing Authorization\"]\n    \n    cwe352 -->|RELATED_TO| cwe862\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe352 primary\n    class cwe862 secondary\n```\n\n## Vulnerability Chain\nThe chain of events for this vulnerability is as follows:\n1.  **ROOT CAUSE**: **Missing CSRF check** (CWE-352). The Nokaut Offers Box WordPress plugin through 1.4.0 **does not have CSRF check** in place.\n2.  **IMPACT**: Attackers can make a logged-in admin reset the plugin settings. This is achieved via a CSRF attack.\n\n## Summary of Analysis\nThe analysis is strongly based on the provided evidence, particularly the explicit mention of the **lack of CSRF check** in the vulnerability description. This directly aligns with the definition of CWE-352 [Cross-Site Request Forgery (CSRF)]. While other CWEs like CWE-862 [Missing Authorization] were considered, CWE-352 is the most specific and appropriate classification given the available information.\n\nThe vulnerability description clearly indicates that the primary issue is the **absence of CSRF protection**. The impact is that an attacker can exploit this **missing check** to force an administrator to perform actions they did not intend to, such as resetting the plugin settings.\n\nThe selection of CWE-352 [Cross-Site Request Forgery (CSRF)] is at the optimal level of specificity because it precisely describes the **missing security mechanism** that leads to the vulnerability.\nCWE-862 [Missing Authorization] could be a secondary weakness, but it is not the most precise representation of the vulnerability.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n\n\n## CWE-184: Incomplete List of Disallowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 0.69\n**Source**: dense\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-807: Reliance on Untrusted Inputs in a Security Decision\n**Abstraction Level**: Base\n**Similarity Score**: 0.69\n**Source**: dense\n\n**Description**:\nThe product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.69\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-294: Authentication Bypass by Capture-replay\n**Abstraction Level**: Base\n**Similarity Score**: 0.69\n**Source**: dense\n\n**Description**:\nA capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-639: Authorization Bypass Through User-Controlled Key\n**Abstraction Level**: Base\n**Similarity Score**: 0.69\n**Source**: dense\n\n**Description**:\nThe system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 2665.63\n**Source**: sparse\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 2631.05\n**Source**: sparse\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n**Chain starting from CWE-862:**\n- 862 (Missing Authorization) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_sources": [
          {
            "id": "rootcause:does not have CSRF check",
            "keyphrase": "does not have CSRF check",
            "type": "rootcause"
          },
          {
            "id": "rootcause:lack of CSRF check",
            "keyphrase": "lack of CSRF check",
            "type": "rootcause"
          },
          {
            "id": "impact:reset Nokaut Offers Box plugin settings",
            "keyphrase": "reset Nokaut Offers Box plugin settings",
            "type": "impact"
          },
          {
            "id": "vector:CSRF attack",
            "keyphrase": "CSRF attack",
            "type": "vector"
          },
          {
            "id": "attacker:attackers",
            "keyphrase": "attackers",
            "type": "attacker"
          },
          {
            "id": "product:Nokaut Offers Box WordPress plugin",
            "keyphrase": "Nokaut Offers Box WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:through 1.4.0",
            "keyphrase": "through 1.4.0",
            "type": "version"
          }
        ]
      },
      "similarity": 507.14382527481047
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse",
        "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
        "keyphrase_sources": [
          {
            "id": "rootcause:does not have CSRF check",
            "keyphrase": "does not have CSRF check",
            "type": "rootcause"
          },
          {
            "id": "rootcause:lack of CSRF check",
            "keyphrase": "lack of CSRF check",
            "type": "rootcause"
          },
          {
            "id": "impact:reset Nokaut Offers Box plugin settings",
            "keyphrase": "reset Nokaut Offers Box plugin settings",
            "type": "impact"
          },
          {
            "id": "vector:CSRF attack",
            "keyphrase": "CSRF attack",
            "type": "vector"
          },
          {
            "id": "attacker:attackers",
            "keyphrase": "attackers",
            "type": "attacker"
          },
          {
            "id": "product:Nokaut Offers Box WordPress plugin",
            "keyphrase": "Nokaut Offers Box WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:through 1.4.0",
            "keyphrase": "through 1.4.0",
            "type": "version"
          }
        ]
      },
      "similarity": 378.40002357874846
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "keyphrase_sources": [
          {
            "id": "rootcause:does not have CSRF check",
            "keyphrase": "does not have CSRF check",
            "type": "rootcause"
          },
          {
            "id": "rootcause:lack of CSRF check",
            "keyphrase": "lack of CSRF check",
            "type": "rootcause"
          },
          {
            "id": "impact:reset Nokaut Offers Box plugin settings",
            "keyphrase": "reset Nokaut Offers Box plugin settings",
            "type": "impact"
          },
          {
            "id": "vector:CSRF attack",
            "keyphrase": "CSRF attack",
            "type": "vector"
          },
          {
            "id": "attacker:attackers",
            "keyphrase": "attackers",
            "type": "attacker"
          },
          {
            "id": "product:Nokaut Offers Box WordPress plugin",
            "keyphrase": "Nokaut Offers Box WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:through 1.4.0",
            "keyphrase": "through 1.4.0",
            "type": "version"
          }
        ]
      },
      "similarity": 368.02461814147864
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse",
        "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
        "keyphrase_sources": [
          {
            "id": "rootcause:does not have CSRF check",
            "keyphrase": "does not have CSRF check",
            "type": "rootcause"
          },
          {
            "id": "rootcause:lack of CSRF check",
            "keyphrase": "lack of CSRF check",
            "type": "rootcause"
          },
          {
            "id": "impact:reset Nokaut Offers Box plugin settings",
            "keyphrase": "reset Nokaut Offers Box plugin settings",
            "type": "impact"
          },
          {
            "id": "vector:CSRF attack",
            "keyphrase": "CSRF attack",
            "type": "vector"
          },
          {
            "id": "attacker:attackers",
            "keyphrase": "attackers",
            "type": "attacker"
          },
          {
            "id": "product:Nokaut Offers Box WordPress plugin",
            "keyphrase": "Nokaut Offers Box WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:through 1.4.0",
            "keyphrase": "through 1.4.0",
            "type": "version"
          }
        ]
      },
      "similarity": 362.0437086225996
    },
    {
      "metadata": {
        "doc_id": "425",
        "name": "Direct Request ('Forced Browsing')",
        "source": "sparse",
        "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
        "keyphrase_sources": [
          {
            "id": "rootcause:does not have CSRF check",
            "keyphrase": "does not have CSRF check",
            "type": "rootcause"
          },
          {
            "id": "rootcause:lack of CSRF check",
            "keyphrase": "lack of CSRF check",
            "type": "rootcause"
          },
          {
            "id": "impact:reset Nokaut Offers Box plugin settings",
            "keyphrase": "reset Nokaut Offers Box plugin settings",
            "type": "impact"
          },
          {
            "id": "vector:CSRF attack",
            "keyphrase": "CSRF attack",
            "type": "vector"
          },
          {
            "id": "attacker:attackers",
            "keyphrase": "attackers",
            "type": "attacker"
          },
          {
            "id": "product:Nokaut Offers Box WordPress plugin",
            "keyphrase": "Nokaut Offers Box WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:through 1.4.0",
            "keyphrase": "through 1.4.0",
            "type": "version"
          }
        ]
      },
      "similarity": 326.3916990768503
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-116",
      "CWE-862",
      "CWE-639",
      "CWE-472",
      "CWE-352",
      "CWE-74",
      "CWE-303",
      "CWE-294",
      "CWE-184",
      "CWE-807",
      "CWE-425",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "352": [
      {
        "id": "rootcause:does not have CSRF check",
        "keyphrase": "does not have CSRF check",
        "type": "rootcause"
      },
      {
        "id": "rootcause:lack of CSRF check",
        "keyphrase": "lack of CSRF check",
        "type": "rootcause"
      },
      {
        "id": "impact:reset Nokaut Offers Box plugin settings",
        "keyphrase": "reset Nokaut Offers Box plugin settings",
        "type": "impact"
      },
      {
        "id": "vector:CSRF attack",
        "keyphrase": "CSRF attack",
        "type": "vector"
      },
      {
        "id": "attacker:attackers",
        "keyphrase": "attackers",
        "type": "attacker"
      },
      {
        "id": "product:Nokaut Offers Box WordPress plugin",
        "keyphrase": "Nokaut Offers Box WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:through 1.4.0",
        "keyphrase": "through 1.4.0",
        "type": "version"
      }
    ],
    "862": [
      {
        "id": "rootcause:does not have CSRF check",
        "keyphrase": "does not have CSRF check",
        "type": "rootcause"
      },
      {
        "id": "rootcause:lack of CSRF check",
        "keyphrase": "lack of CSRF check",
        "type": "rootcause"
      },
      {
        "id": "impact:reset Nokaut Offers Box plugin settings",
        "keyphrase": "reset Nokaut Offers Box plugin settings",
        "type": "impact"
      },
      {
        "id": "vector:CSRF attack",
        "keyphrase": "CSRF attack",
        "type": "vector"
      },
      {
        "id": "attacker:attackers",
        "keyphrase": "attackers",
        "type": "attacker"
      },
      {
        "id": "product:Nokaut Offers Box WordPress plugin",
        "keyphrase": "Nokaut Offers Box WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:through 1.4.0",
        "keyphrase": "through 1.4.0",
        "type": "version"
      }
    ],
    "116": [
      {
        "id": "rootcause:does not have CSRF check",
        "keyphrase": "does not have CSRF check",
        "type": "rootcause"
      },
      {
        "id": "rootcause:lack of CSRF check",
        "keyphrase": "lack of CSRF check",
        "type": "rootcause"
      },
      {
        "id": "impact:reset Nokaut Offers Box plugin settings",
        "keyphrase": "reset Nokaut Offers Box plugin settings",
        "type": "impact"
      },
      {
        "id": "vector:CSRF attack",
        "keyphrase": "CSRF attack",
        "type": "vector"
      },
      {
        "id": "attacker:attackers",
        "keyphrase": "attackers",
        "type": "attacker"
      },
      {
        "id": "product:Nokaut Offers Box WordPress plugin",
        "keyphrase": "Nokaut Offers Box WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:through 1.4.0",
        "keyphrase": "through 1.4.0",
        "type": "version"
      }
    ],
    "434": [
      {
        "id": "rootcause:does not have CSRF check",
        "keyphrase": "does not have CSRF check",
        "type": "rootcause"
      },
      {
        "id": "rootcause:lack of CSRF check",
        "keyphrase": "lack of CSRF check",
        "type": "rootcause"
      },
      {
        "id": "impact:reset Nokaut Offers Box plugin settings",
        "keyphrase": "reset Nokaut Offers Box plugin settings",
        "type": "impact"
      },
      {
        "id": "vector:CSRF attack",
        "keyphrase": "CSRF attack",
        "type": "vector"
      },
      {
        "id": "attacker:attackers",
        "keyphrase": "attackers",
        "type": "attacker"
      },
      {
        "id": "product:Nokaut Offers Box WordPress plugin",
        "keyphrase": "Nokaut Offers Box WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:through 1.4.0",
        "keyphrase": "through 1.4.0",
        "type": "version"
      }
    ],
    "425": [
      {
        "id": "rootcause:does not have CSRF check",
        "keyphrase": "does not have CSRF check",
        "type": "rootcause"
      },
      {
        "id": "rootcause:lack of CSRF check",
        "keyphrase": "lack of CSRF check",
        "type": "rootcause"
      },
      {
        "id": "impact:reset Nokaut Offers Box plugin settings",
        "keyphrase": "reset Nokaut Offers Box plugin settings",
        "type": "impact"
      },
      {
        "id": "vector:CSRF attack",
        "keyphrase": "CSRF attack",
        "type": "vector"
      },
      {
        "id": "attacker:attackers",
        "keyphrase": "attackers",
        "type": "attacker"
      },
      {
        "id": "product:Nokaut Offers Box WordPress plugin",
        "keyphrase": "Nokaut Offers Box WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:through 1.4.0",
        "keyphrase": "through 1.4.0",
        "type": "version"
      }
    ]
  }
}