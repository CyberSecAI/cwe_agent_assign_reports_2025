{
  "query": "In the Linux kernel, the following vulnerability has been resolved nilfs2 fix potential hang in nilfs_detach_log_writer() Syzbot has reported a potential hang in nilfs_detach_log_writer() called during nilfs2 unmount. Analysis revealed that this is because nilfs_segctor_sync(), which synchronizes with the log writer thread, can be called after nilfs_segctor_destroy() terminates that thread, as shown in the call trace below nilfs_detach_log_writer nilfs_segctor_destroy nilfs_segctor_kill_thread --> Shut down log writer thread flush_work nilfs_iput_work_func nilfs_dispose_list iput nilfs_evict_inode nilfs_transaction_commit nilfs_construct_segment (if inode needs sync) nilfs_segctor_sync --> Attempt to synchronize with log writer thread *** DEADLOCK *** Fix this issue by changing nilfs_segctor_sync() so that the log writer thread returns normally without synchronizing after it terminates, and by forcing tasks that are already waiting to complete once after the thread terminates. The skipped inode metadata flushout will then be processed together in the subsequent cleanup work in nilfs_segctor_destroy().",
  "count": 20,
  "results": [
    {
      "cwe_id": "609",
      "name": "Double-Checked Locking",
      "abstraction": "base",
      "score": 2.8651999999999997,
      "original_score": 2.8651999999999997,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "386",
      "name": "Symbolic Name not Mapping to Correct Object",
      "abstraction": "base",
      "score": 2.7950000000000004,
      "original_score": 2.7950000000000004,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1322",
      "name": "Use of Blocking Code in Single-threaded, Non-blocking Context",
      "abstraction": "base",
      "score": 2.2100000000000004,
      "original_score": 2.2100000000000004,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "abstraction": "Base",
      "score": 1.9948290920623999,
      "original_score": 1.9948290920623999,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "123",
      "name": "Write-what-where Condition",
      "abstraction": "base",
      "score": 1.7680000000000005,
      "original_score": 1.7680000000000005,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "120",
      "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
      "abstraction": "base",
      "score": 1.7680000000000005,
      "original_score": 1.7680000000000005,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "364",
      "name": "Signal Handler Race Condition",
      "abstraction": "base",
      "score": 1.7550000000000001,
      "original_score": 1.7550000000000001,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "61",
      "name": "UNIX Symbolic Link (Symlink) Following",
      "abstraction": "Compound",
      "score": 1.7443130731526082,
      "original_score": 1.7443130731526082,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1265",
      "name": "Unintended Reentrant Invocation of Non-reentrant Code Via Nested Calls",
      "abstraction": "base",
      "score": 1.6848000000000003,
      "original_score": 1.6848000000000003,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1325",
      "name": "Improperly Controlled Sequential Memory Allocation",
      "abstraction": "base",
      "score": 1.6848000000000003,
      "original_score": 1.6848000000000003,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "662",
      "name": "Improper Synchronization",
      "abstraction": "class",
      "score": 1.6736000000000002,
      "original_score": 1.6736000000000002,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "abstraction": "Base",
      "score": 1.6669966841132942,
      "original_score": 1.6669966841132942,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 1.6642821066480462,
      "original_score": 1.6642821066480462,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "689",
      "name": "Permission Race Condition During Resource Copy",
      "abstraction": "compound",
      "score": 1.616,
      "original_score": 1.616,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "363",
      "name": "Race Condition Enabling Link Following",
      "abstraction": "base",
      "score": 1.5912000000000004,
      "original_score": 1.5912000000000004,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "abstraction": "Base",
      "score": 1.5022009090404094,
      "original_score": 1.5022009090404094,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "415",
      "name": "Double Free",
      "abstraction": "variant",
      "score": 1.4784000000000002,
      "original_score": 1.4784000000000002,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "abstraction": "Base",
      "score": 1.4500426656894452,
      "original_score": 1.4500426656894452,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "abstraction": "Variant",
      "score": 1.387680599102961,
      "original_score": 1.387680599102961,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "384",
      "name": "Session Fixation",
      "abstraction": "compound",
      "score": 1.3600000000000003,
      "original_score": 1.3600000000000003,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 1.3600000000000003,
    "max": 2.8651999999999997,
    "mean": 1.7830172564904587,
    "median": 1.6792000000000002,
    "count": 20
  }
}