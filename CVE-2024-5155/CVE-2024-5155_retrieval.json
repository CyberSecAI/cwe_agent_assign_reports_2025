{
  "vulnerability_info": "VulnerabilityInfo(cve_id='CVE-2024-5155', description='The Inquiry cart WordPress plugin through 3.4.2 **does not have CSRF check** in some places, and is missing **sanitisation** as well as escaping, which could allow attackers to make logged in admin add Stored **XSS** payloads via a CSRF attack', key_phrases={'rootcause': ['and escaping', 'does not have CSRF check', 'missing CSRF check', 'sanitisation'], 'weakness': ['XSS', 'cross-site scripting'], 'impact': 'Stored XSS payloads', 'vector': '', 'attacker': 'attackers', 'product': 'Inquiry cart WordPress plugin', 'version': 'through 3.4.2', 'component': ''}, reference_content='Based on the provided content, here\\'s a breakdown of the vulnerability:\\n\\n**CVE ID:** CVE-2024-5155\\n\\n**Root Cause of Vulnerability:**\\n*   The WordPress plugin \"Inquiry Cart\" lacks CSRF (Cross-Site Request Forgery) checks in certain areas.\\n*   It also suffers from missing sanitization and escaping of user-supplied input.\\n\\n**Weaknesses/Vulnerabilities Present:**\\n*   **Stored Cross-Site Scripting (XSS):** The combination of missing CSRF checks and lack of input sanitization allows an attacker to inject malicious JavaScript code into the plugin\\'s settings, which will be stored in the database and executed when an administrator views the settings page.\\n*  **CSRF (Cross-Site Request Forgery):** The plugin does not validate the origin of the requests, allowing an attacker to trick a logged-in administrator into performing actions they didn\\'t intend to perform.\\n\\n**Impact of Exploitation:**\\n*   An attacker can inject malicious JavaScript code that will be executed in the browser of any administrator who views the plugin\\'s settings page. This allows an attacker to perform malicious actions as the administrator including but not limited to data theft, modification or deletion, and complete control over the website.\\n\\n**Attack Vectors:**\\n*   **CSRF Attack:** The attacker crafts a malicious HTML page containing a form that, when submitted, will send a request to the vulnerable plugin\\'s settings page on behalf of the logged-in administrator.\\n*   **Stored XSS:** The injected JavaScript payload is stored in the plugin\\'s settings. When the administrator visits the settings page, the payload will be executed.\\n\\n**Required Attacker Capabilities/Position:**\\n*   The attacker needs to trick a logged-in WordPress administrator into visiting a malicious web page (or execute a similar CSRF attack).\\n*   The attacker does not need any specific privileges on the target WordPress site, but they do need a target logged in as an administrator.\\n\\n**Additional Notes:**\\n*   The provided proof of concept demonstrates how an attacker can use CSRF to inject XSS into the \"send-message-to\" field via a POST request.\\n*   The affected plugin version is <= 3.4.2.\\n*   The vulnerability is classified as CWE-79 (Cross-site Scripting).\\n*   The CVSS score is 7.1 (High).\\n*   There is no known fix available.', similar_info={'cwe_distribution': {}, 'cwe_consensus': '', 'similarity_stats': {'thresholds': [], 'total_samples_by_threshold': {}, 'top_cwes_by_threshold': {}}}, similarity_summary=SimilarityInsight(consensus_cwe='', top_cwes=[], confidence_levels={}, total_samples=0), analysis='', analysis_with_relationships='', criticism='', resolution='', relevant_cwes=[{'metadata': {'doc_id': '352', 'name': 'Cross-Site Request Forgery (CSRF)', 'source': 'sparse', 'original_content': 'The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.', 'keyphrase_sources': [{'id': 'rootcause:and escaping', 'keyphrase': 'and escaping', 'type': 'rootcause'}, {'id': 'rootcause:does not have CSRF check', 'keyphrase': 'does not have CSRF check', 'type': 'rootcause'}, {'id': 'rootcause:missing CSRF check', 'keyphrase': 'missing CSRF check', 'type': 'rootcause'}, {'id': 'rootcause:sanitisation', 'keyphrase': 'sanitisation', 'type': 'rootcause'}, {'id': 'weakness:XSS', 'keyphrase': 'XSS', 'type': 'weakness'}, {'id': 'weakness:cross-site scripting', 'keyphrase': 'cross-site scripting', 'type': 'weakness'}, {'id': 'impact:Stored XSS payloads', 'keyphrase': 'Stored XSS payloads', 'type': 'impact'}, {'id': 'attacker:attackers', 'keyphrase': 'attackers', 'type': 'attacker'}, {'id': 'product:Inquiry cart WordPress plugin', 'keyphrase': 'Inquiry cart WordPress plugin', 'type': 'product'}, {'id': 'version:through 3.4.2', 'keyphrase': 'through 3.4.2', 'type': 'version'}]}, 'similarity': np.float64(482.3180627737421)}, {'metadata': {'doc_id': '116', 'name': 'Improper Encoding or Escaping of Output', 'source': 'sparse', 'original_content': 'The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.', 'keyphrase_sources': [{'id': 'rootcause:and escaping', 'keyphrase': 'and escaping', 'type': 'rootcause'}, {'id': 'rootcause:does not have CSRF check', 'keyphrase': 'does not have CSRF check', 'type': 'rootcause'}, {'id': 'rootcause:missing CSRF check', 'keyphrase': 'missing CSRF check', 'type': 'rootcause'}, {'id': 'rootcause:sanitisation', 'keyphrase': 'sanitisation', 'type': 'rootcause'}, {'id': 'weakness:XSS', 'keyphrase': 'XSS', 'type': 'weakness'}, {'id': 'weakness:cross-site scripting', 'keyphrase': 'cross-site scripting', 'type': 'weakness'}, {'id': 'impact:Stored XSS payloads', 'keyphrase': 'Stored XSS payloads', 'type': 'impact'}, {'id': 'attacker:attackers', 'keyphrase': 'attackers', 'type': 'attacker'}, {'id': 'product:Inquiry cart WordPress plugin', 'keyphrase': 'Inquiry cart WordPress plugin', 'type': 'product'}, {'id': 'version:through 3.4.2', 'keyphrase': 'through 3.4.2', 'type': 'version'}]}, 'similarity': np.float64(379.0047455772418)}, {'metadata': {'doc_id': '862', 'name': 'Missing Authorization', 'source': 'sparse', 'original_content': 'The product does not perform an authorization check when an actor attempts to access a resource or perform an action.', 'keyphrase_sources': [{'id': 'rootcause:and escaping', 'keyphrase': 'and escaping', 'type': 'rootcause'}, {'id': 'rootcause:does not have CSRF check', 'keyphrase': 'does not have CSRF check', 'type': 'rootcause'}, {'id': 'rootcause:missing CSRF check', 'keyphrase': 'missing CSRF check', 'type': 'rootcause'}, {'id': 'rootcause:sanitisation', 'keyphrase': 'sanitisation', 'type': 'rootcause'}, {'id': 'weakness:XSS', 'keyphrase': 'XSS', 'type': 'weakness'}, {'id': 'weakness:cross-site scripting', 'keyphrase': 'cross-site scripting', 'type': 'weakness'}, {'id': 'impact:Stored XSS payloads', 'keyphrase': 'Stored XSS payloads', 'type': 'impact'}, {'id': 'attacker:attackers', 'keyphrase': 'attackers', 'type': 'attacker'}, {'id': 'product:Inquiry cart WordPress plugin', 'keyphrase': 'Inquiry cart WordPress plugin', 'type': 'product'}, {'id': 'version:through 3.4.2', 'keyphrase': 'through 3.4.2', 'type': 'version'}]}, 'similarity': np.float64(330.0099843622212)}, {'metadata': {'doc_id': '425', 'name': \"Direct Request ('Forced Browsing')\", 'source': 'sparse', 'original_content': 'The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.', 'keyphrase_sources': [{'id': 'rootcause:does not have CSRF check', 'keyphrase': 'does not have CSRF check', 'type': 'rootcause'}, {'id': 'rootcause:missing CSRF check', 'keyphrase': 'missing CSRF check', 'type': 'rootcause'}, {'id': 'attacker:attackers', 'keyphrase': 'attackers', 'type': 'attacker'}]}, 'similarity': np.float64(297.86667888592865)}, {'metadata': {'doc_id': '434', 'name': 'Unrestricted Upload of File with Dangerous Type', 'source': 'sparse', 'original_content': 'The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.', 'keyphrase_sources': [{'id': 'rootcause:and escaping', 'keyphrase': 'and escaping', 'type': 'rootcause'}, {'id': 'rootcause:does not have CSRF check', 'keyphrase': 'does not have CSRF check', 'type': 'rootcause'}, {'id': 'rootcause:missing CSRF check', 'keyphrase': 'missing CSRF check', 'type': 'rootcause'}, {'id': 'rootcause:sanitisation', 'keyphrase': 'sanitisation', 'type': 'rootcause'}, {'id': 'weakness:XSS', 'keyphrase': 'XSS', 'type': 'weakness'}, {'id': 'weakness:cross-site scripting', 'keyphrase': 'cross-site scripting', 'type': 'weakness'}, {'id': 'impact:Stored XSS payloads', 'keyphrase': 'Stored XSS payloads', 'type': 'impact'}, {'id': 'attacker:attackers', 'keyphrase': 'attackers', 'type': 'attacker'}, {'id': 'product:Inquiry cart WordPress plugin', 'keyphrase': 'Inquiry cart WordPress plugin', 'type': 'product'}, {'id': 'version:through 3.4.2', 'keyphrase': 'through 3.4.2', 'type': 'version'}]}, 'similarity': np.float64(288.37841390365315)}, {'metadata': {'doc_id': '89', 'name': \"Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\", 'source': 'sparse', 'original_content': 'The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.', 'keyphrase_sources': [{'id': 'rootcause:and escaping', 'keyphrase': 'and escaping', 'type': 'rootcause'}, {'id': 'rootcause:sanitisation', 'keyphrase': 'sanitisation', 'type': 'rootcause'}]}, 'similarity': np.float64(266.82825322206463)}, {'metadata': {'doc_id': '79', 'name': \"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\", 'source': 'sparse', 'original_content': 'The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.', 'keyphrase_sources': [{'id': 'weakness:XSS', 'keyphrase': 'XSS', 'type': 'weakness'}, {'id': 'weakness:cross-site scripting', 'keyphrase': 'cross-site scripting', 'type': 'weakness'}, {'id': 'impact:Stored XSS payloads', 'keyphrase': 'Stored XSS payloads', 'type': 'impact'}, {'id': 'version:through 3.4.2', 'keyphrase': 'through 3.4.2', 'type': 'version'}]}, 'similarity': np.float64(249.38655408005107)}, {'metadata': {'doc_id': '472', 'name': 'External Control of Assumed-Immutable Web Parameter', 'source': 'sparse', 'original_content': 'The web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.', 'keyphrase_sources': [{'id': 'product:Inquiry cart WordPress plugin', 'keyphrase': 'Inquiry cart WordPress plugin', 'type': 'product'}]}, 'similarity': np.float64(103.50036171298096)}], identified_cwes={'analyzer': [], 'critic_additional': []})",
  "retrieval_results": {
    "has_multiple_keyphrases": true,
    "keyphrase_cwe_sets": {
      "rootcause:and escaping": {
        "keyphrase": "and escaping",
        "type": "rootcause",
        "cwes": [
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
              "keyphrase_sources": [
                {
                  "id": "rootcause:and escaping",
                  "keyphrase": "and escaping",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:does not have CSRF check",
                  "keyphrase": "does not have CSRF check",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:missing CSRF check",
                  "keyphrase": "missing CSRF check",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:sanitisation",
                  "keyphrase": "sanitisation",
                  "type": "rootcause"
                },
                {
                  "id": "weakness:XSS",
                  "keyphrase": "XSS",
                  "type": "weakness"
                },
                {
                  "id": "weakness:cross-site scripting",
                  "keyphrase": "cross-site scripting",
                  "type": "weakness"
                },
                {
                  "id": "impact:Stored XSS payloads",
                  "keyphrase": "Stored XSS payloads",
                  "type": "impact"
                },
                {
                  "id": "attacker:attackers",
                  "keyphrase": "attackers",
                  "type": "attacker"
                },
                {
                  "id": "product:Inquiry cart WordPress plugin",
                  "keyphrase": "Inquiry cart WordPress plugin",
                  "type": "product"
                },
                {
                  "id": "version:through 3.4.2",
                  "keyphrase": "through 3.4.2",
                  "type": "version"
                }
              ]
            },
            "similarity": 482.3180627737421
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
              "keyphrase_sources": [
                {
                  "id": "rootcause:and escaping",
                  "keyphrase": "and escaping",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:does not have CSRF check",
                  "keyphrase": "does not have CSRF check",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:missing CSRF check",
                  "keyphrase": "missing CSRF check",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:sanitisation",
                  "keyphrase": "sanitisation",
                  "type": "rootcause"
                },
                {
                  "id": "weakness:XSS",
                  "keyphrase": "XSS",
                  "type": "weakness"
                },
                {
                  "id": "weakness:cross-site scripting",
                  "keyphrase": "cross-site scripting",
                  "type": "weakness"
                },
                {
                  "id": "impact:Stored XSS payloads",
                  "keyphrase": "Stored XSS payloads",
                  "type": "impact"
                },
                {
                  "id": "attacker:attackers",
                  "keyphrase": "attackers",
                  "type": "attacker"
                },
                {
                  "id": "product:Inquiry cart WordPress plugin",
                  "keyphrase": "Inquiry cart WordPress plugin",
                  "type": "product"
                },
                {
                  "id": "version:through 3.4.2",
                  "keyphrase": "through 3.4.2",
                  "type": "version"
                }
              ]
            },
            "similarity": 379.0047455772418
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
              "keyphrase_sources": [
                {
                  "id": "rootcause:and escaping",
                  "keyphrase": "and escaping",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:does not have CSRF check",
                  "keyphrase": "does not have CSRF check",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:missing CSRF check",
                  "keyphrase": "missing CSRF check",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:sanitisation",
                  "keyphrase": "sanitisation",
                  "type": "rootcause"
                },
                {
                  "id": "weakness:XSS",
                  "keyphrase": "XSS",
                  "type": "weakness"
                },
                {
                  "id": "weakness:cross-site scripting",
                  "keyphrase": "cross-site scripting",
                  "type": "weakness"
                },
                {
                  "id": "impact:Stored XSS payloads",
                  "keyphrase": "Stored XSS payloads",
                  "type": "impact"
                },
                {
                  "id": "attacker:attackers",
                  "keyphrase": "attackers",
                  "type": "attacker"
                },
                {
                  "id": "product:Inquiry cart WordPress plugin",
                  "keyphrase": "Inquiry cart WordPress plugin",
                  "type": "product"
                },
                {
                  "id": "version:through 3.4.2",
                  "keyphrase": "through 3.4.2",
                  "type": "version"
                }
              ]
            },
            "similarity": 330.0099843622212
          },
          {
            "metadata": {
              "doc_id": "434",
              "name": "Unrestricted Upload of File with Dangerous Type",
              "source": "sparse",
              "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
              "keyphrase_sources": [
                {
                  "id": "rootcause:and escaping",
                  "keyphrase": "and escaping",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:does not have CSRF check",
                  "keyphrase": "does not have CSRF check",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:missing CSRF check",
                  "keyphrase": "missing CSRF check",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:sanitisation",
                  "keyphrase": "sanitisation",
                  "type": "rootcause"
                },
                {
                  "id": "weakness:XSS",
                  "keyphrase": "XSS",
                  "type": "weakness"
                },
                {
                  "id": "weakness:cross-site scripting",
                  "keyphrase": "cross-site scripting",
                  "type": "weakness"
                },
                {
                  "id": "impact:Stored XSS payloads",
                  "keyphrase": "Stored XSS payloads",
                  "type": "impact"
                },
                {
                  "id": "attacker:attackers",
                  "keyphrase": "attackers",
                  "type": "attacker"
                },
                {
                  "id": "product:Inquiry cart WordPress plugin",
                  "keyphrase": "Inquiry cart WordPress plugin",
                  "type": "product"
                },
                {
                  "id": "version:through 3.4.2",
                  "keyphrase": "through 3.4.2",
                  "type": "version"
                }
              ]
            },
            "similarity": 288.37841390365315
          },
          {
            "metadata": {
              "doc_id": "89",
              "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
              "keyphrase_sources": [
                {
                  "id": "rootcause:and escaping",
                  "keyphrase": "and escaping",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:sanitisation",
                  "keyphrase": "sanitisation",
                  "type": "rootcause"
                }
              ]
            },
            "similarity": 266.82825322206463
          }
        ]
      },
      "rootcause:does not have CSRF check": {
        "keyphrase": "does not have CSRF check",
        "type": "rootcause",
        "cwes": [
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 532.349239212812
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 399.59991290659013
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action."
            },
            "similarity": 388.363499539954
          },
          {
            "metadata": {
              "doc_id": "434",
              "name": "Unrestricted Upload of File with Dangerous Type",
              "source": "sparse",
              "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment."
            },
            "similarity": 355.8878697474871
          },
          {
            "metadata": {
              "doc_id": "425",
              "name": "Direct Request ('Forced Browsing')",
              "source": "sparse",
              "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
              "keyphrase_sources": [
                {
                  "id": "rootcause:does not have CSRF check",
                  "keyphrase": "does not have CSRF check",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:missing CSRF check",
                  "keyphrase": "missing CSRF check",
                  "type": "rootcause"
                },
                {
                  "id": "attacker:attackers",
                  "keyphrase": "attackers",
                  "type": "attacker"
                }
              ]
            },
            "similarity": 297.86667888592865
          }
        ]
      },
      "rootcause:missing CSRF check": {
        "keyphrase": "missing CSRF check",
        "type": "rootcause",
        "cwes": [
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 496.1855541174924
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action."
            },
            "similarity": 367.81013364840817
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 366.59571178952336
          },
          {
            "metadata": {
              "doc_id": "434",
              "name": "Unrestricted Upload of File with Dangerous Type",
              "source": "sparse",
              "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment."
            },
            "similarity": 323.46252086291736
          },
          {
            "metadata": {
              "doc_id": "425",
              "name": "Direct Request ('Forced Browsing')",
              "source": "sparse",
              "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files."
            },
            "similarity": 268.90888746793973
          }
        ]
      },
      "rootcause:sanitisation": {
        "keyphrase": "sanitisation",
        "type": "rootcause",
        "cwes": [
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 475.3488899712977
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 330.0033614291179
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action."
            },
            "similarity": 312.4369955017197
          },
          {
            "metadata": {
              "doc_id": "434",
              "name": "Unrestricted Upload of File with Dangerous Type",
              "source": "sparse",
              "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment."
            },
            "similarity": 267.6910224383174
          },
          {
            "metadata": {
              "doc_id": "89",
              "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data."
            },
            "similarity": 245.70473904464396
          }
        ]
      },
      "weakness:XSS": {
        "keyphrase": "XSS",
        "type": "weakness",
        "cwes": [
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 415.13538095544317
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 316.8382642967047
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action."
            },
            "similarity": 274.50443622618786
          },
          {
            "metadata": {
              "doc_id": "434",
              "name": "Unrestricted Upload of File with Dangerous Type",
              "source": "sparse",
              "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment."
            },
            "similarity": 270.95065816389666
          },
          {
            "metadata": {
              "doc_id": "79",
              "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
              "source": "sparse",
              "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
              "keyphrase_sources": [
                {
                  "id": "weakness:XSS",
                  "keyphrase": "XSS",
                  "type": "weakness"
                },
                {
                  "id": "weakness:cross-site scripting",
                  "keyphrase": "cross-site scripting",
                  "type": "weakness"
                },
                {
                  "id": "impact:Stored XSS payloads",
                  "keyphrase": "Stored XSS payloads",
                  "type": "impact"
                },
                {
                  "id": "version:through 3.4.2",
                  "keyphrase": "through 3.4.2",
                  "type": "version"
                }
              ]
            },
            "similarity": 249.38655408005107
          }
        ]
      },
      "weakness:cross-site scripting": {
        "keyphrase": "cross-site scripting",
        "type": "weakness",
        "cwes": [
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 483.1585262315792
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 364.0084921808651
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action."
            },
            "similarity": 315.48982128456515
          },
          {
            "metadata": {
              "doc_id": "79",
              "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
              "source": "sparse",
              "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."
            },
            "similarity": 311.3513454369372
          },
          {
            "metadata": {
              "doc_id": "434",
              "name": "Unrestricted Upload of File with Dangerous Type",
              "source": "sparse",
              "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment."
            },
            "similarity": 309.55922331217346
          }
        ]
      },
      "impact:Stored XSS payloads": {
        "keyphrase": "Stored XSS payloads",
        "type": "impact",
        "cwes": [
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 164.3478669638352
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 126.9067283796765
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action."
            },
            "similarity": 106.75208689423224
          },
          {
            "metadata": {
              "doc_id": "434",
              "name": "Unrestricted Upload of File with Dangerous Type",
              "source": "sparse",
              "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment."
            },
            "similarity": 102.76927164429131
          },
          {
            "metadata": {
              "doc_id": "79",
              "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
              "source": "sparse",
              "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."
            },
            "similarity": 96.39532666606362
          }
        ]
      },
      "attacker:attackers": {
        "keyphrase": "attackers",
        "type": "attacker",
        "cwes": [
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 141.0196733261769
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 106.10831397400308
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action."
            },
            "similarity": 99.16233767910299
          },
          {
            "metadata": {
              "doc_id": "434",
              "name": "Unrestricted Upload of File with Dangerous Type",
              "source": "sparse",
              "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment."
            },
            "similarity": 91.0699908189219
          },
          {
            "metadata": {
              "doc_id": "425",
              "name": "Direct Request ('Forced Browsing')",
              "source": "sparse",
              "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files."
            },
            "similarity": 80.2609323663894
          }
        ]
      },
      "product:Inquiry cart WordPress plugin": {
        "keyphrase": "Inquiry cart WordPress plugin",
        "type": "product",
        "cwes": [
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 161.17154051423697
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 121.16153098299212
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action."
            },
            "similarity": 117.08885423944272
          },
          {
            "metadata": {
              "doc_id": "434",
              "name": "Unrestricted Upload of File with Dangerous Type",
              "source": "sparse",
              "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment."
            },
            "similarity": 113.13669968037568
          },
          {
            "metadata": {
              "doc_id": "472",
              "name": "External Control of Assumed-Immutable Web Parameter",
              "source": "sparse",
              "original_content": "The web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.",
              "keyphrase_sources": [
                {
                  "id": "product:Inquiry cart WordPress plugin",
                  "keyphrase": "Inquiry cart WordPress plugin",
                  "type": "product"
                }
              ]
            },
            "similarity": 103.50036171298096
          }
        ]
      },
      "version:through 3.4.2": {
        "keyphrase": "through 3.4.2",
        "type": "version",
        "cwes": [
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 149.79188694252284
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 113.4553179453806
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action."
            },
            "similarity": 106.79920619067843
          },
          {
            "metadata": {
              "doc_id": "434",
              "name": "Unrestricted Upload of File with Dangerous Type",
              "source": "sparse",
              "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment."
            },
            "similarity": 98.76972702672361
          },
          {
            "metadata": {
              "doc_id": "79",
              "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
              "source": "sparse",
              "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."
            },
            "similarity": 88.79333829448734
          }
        ]
      }
    },
    "keyphrase_mapping": {
      "352": [
        {
          "id": "rootcause:and escaping",
          "keyphrase": "and escaping",
          "type": "rootcause"
        },
        {
          "id": "rootcause:does not have CSRF check",
          "keyphrase": "does not have CSRF check",
          "type": "rootcause"
        },
        {
          "id": "rootcause:missing CSRF check",
          "keyphrase": "missing CSRF check",
          "type": "rootcause"
        },
        {
          "id": "rootcause:sanitisation",
          "keyphrase": "sanitisation",
          "type": "rootcause"
        },
        {
          "id": "weakness:XSS",
          "keyphrase": "XSS",
          "type": "weakness"
        },
        {
          "id": "weakness:cross-site scripting",
          "keyphrase": "cross-site scripting",
          "type": "weakness"
        },
        {
          "id": "impact:Stored XSS payloads",
          "keyphrase": "Stored XSS payloads",
          "type": "impact"
        },
        {
          "id": "attacker:attackers",
          "keyphrase": "attackers",
          "type": "attacker"
        },
        {
          "id": "product:Inquiry cart WordPress plugin",
          "keyphrase": "Inquiry cart WordPress plugin",
          "type": "product"
        },
        {
          "id": "version:through 3.4.2",
          "keyphrase": "through 3.4.2",
          "type": "version"
        }
      ],
      "116": [
        {
          "id": "rootcause:and escaping",
          "keyphrase": "and escaping",
          "type": "rootcause"
        },
        {
          "id": "rootcause:does not have CSRF check",
          "keyphrase": "does not have CSRF check",
          "type": "rootcause"
        },
        {
          "id": "rootcause:missing CSRF check",
          "keyphrase": "missing CSRF check",
          "type": "rootcause"
        },
        {
          "id": "rootcause:sanitisation",
          "keyphrase": "sanitisation",
          "type": "rootcause"
        },
        {
          "id": "weakness:XSS",
          "keyphrase": "XSS",
          "type": "weakness"
        },
        {
          "id": "weakness:cross-site scripting",
          "keyphrase": "cross-site scripting",
          "type": "weakness"
        },
        {
          "id": "impact:Stored XSS payloads",
          "keyphrase": "Stored XSS payloads",
          "type": "impact"
        },
        {
          "id": "attacker:attackers",
          "keyphrase": "attackers",
          "type": "attacker"
        },
        {
          "id": "product:Inquiry cart WordPress plugin",
          "keyphrase": "Inquiry cart WordPress plugin",
          "type": "product"
        },
        {
          "id": "version:through 3.4.2",
          "keyphrase": "through 3.4.2",
          "type": "version"
        }
      ],
      "862": [
        {
          "id": "rootcause:and escaping",
          "keyphrase": "and escaping",
          "type": "rootcause"
        },
        {
          "id": "rootcause:does not have CSRF check",
          "keyphrase": "does not have CSRF check",
          "type": "rootcause"
        },
        {
          "id": "rootcause:missing CSRF check",
          "keyphrase": "missing CSRF check",
          "type": "rootcause"
        },
        {
          "id": "rootcause:sanitisation",
          "keyphrase": "sanitisation",
          "type": "rootcause"
        },
        {
          "id": "weakness:XSS",
          "keyphrase": "XSS",
          "type": "weakness"
        },
        {
          "id": "weakness:cross-site scripting",
          "keyphrase": "cross-site scripting",
          "type": "weakness"
        },
        {
          "id": "impact:Stored XSS payloads",
          "keyphrase": "Stored XSS payloads",
          "type": "impact"
        },
        {
          "id": "attacker:attackers",
          "keyphrase": "attackers",
          "type": "attacker"
        },
        {
          "id": "product:Inquiry cart WordPress plugin",
          "keyphrase": "Inquiry cart WordPress plugin",
          "type": "product"
        },
        {
          "id": "version:through 3.4.2",
          "keyphrase": "through 3.4.2",
          "type": "version"
        }
      ],
      "434": [
        {
          "id": "rootcause:and escaping",
          "keyphrase": "and escaping",
          "type": "rootcause"
        },
        {
          "id": "rootcause:does not have CSRF check",
          "keyphrase": "does not have CSRF check",
          "type": "rootcause"
        },
        {
          "id": "rootcause:missing CSRF check",
          "keyphrase": "missing CSRF check",
          "type": "rootcause"
        },
        {
          "id": "rootcause:sanitisation",
          "keyphrase": "sanitisation",
          "type": "rootcause"
        },
        {
          "id": "weakness:XSS",
          "keyphrase": "XSS",
          "type": "weakness"
        },
        {
          "id": "weakness:cross-site scripting",
          "keyphrase": "cross-site scripting",
          "type": "weakness"
        },
        {
          "id": "impact:Stored XSS payloads",
          "keyphrase": "Stored XSS payloads",
          "type": "impact"
        },
        {
          "id": "attacker:attackers",
          "keyphrase": "attackers",
          "type": "attacker"
        },
        {
          "id": "product:Inquiry cart WordPress plugin",
          "keyphrase": "Inquiry cart WordPress plugin",
          "type": "product"
        },
        {
          "id": "version:through 3.4.2",
          "keyphrase": "through 3.4.2",
          "type": "version"
        }
      ],
      "89": [
        {
          "id": "rootcause:and escaping",
          "keyphrase": "and escaping",
          "type": "rootcause"
        },
        {
          "id": "rootcause:sanitisation",
          "keyphrase": "sanitisation",
          "type": "rootcause"
        }
      ],
      "425": [
        {
          "id": "rootcause:does not have CSRF check",
          "keyphrase": "does not have CSRF check",
          "type": "rootcause"
        },
        {
          "id": "rootcause:missing CSRF check",
          "keyphrase": "missing CSRF check",
          "type": "rootcause"
        },
        {
          "id": "attacker:attackers",
          "keyphrase": "attackers",
          "type": "attacker"
        }
      ],
      "79": [
        {
          "id": "weakness:XSS",
          "keyphrase": "XSS",
          "type": "weakness"
        },
        {
          "id": "weakness:cross-site scripting",
          "keyphrase": "cross-site scripting",
          "type": "weakness"
        },
        {
          "id": "impact:Stored XSS payloads",
          "keyphrase": "Stored XSS payloads",
          "type": "impact"
        },
        {
          "id": "version:through 3.4.2",
          "keyphrase": "through 3.4.2",
          "type": "version"
        }
      ],
      "472": [
        {
          "id": "product:Inquiry cart WordPress plugin",
          "keyphrase": "Inquiry cart WordPress plugin",
          "type": "product"
        }
      ]
    },
    "relevant_cwes": [
      {
        "metadata": {
          "doc_id": "352",
          "name": "Cross-Site Request Forgery (CSRF)",
          "source": "sparse",
          "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
          "keyphrase_sources": [
            {
              "id": "rootcause:and escaping",
              "keyphrase": "and escaping",
              "type": "rootcause"
            },
            {
              "id": "rootcause:does not have CSRF check",
              "keyphrase": "does not have CSRF check",
              "type": "rootcause"
            },
            {
              "id": "rootcause:missing CSRF check",
              "keyphrase": "missing CSRF check",
              "type": "rootcause"
            },
            {
              "id": "rootcause:sanitisation",
              "keyphrase": "sanitisation",
              "type": "rootcause"
            },
            {
              "id": "weakness:XSS",
              "keyphrase": "XSS",
              "type": "weakness"
            },
            {
              "id": "weakness:cross-site scripting",
              "keyphrase": "cross-site scripting",
              "type": "weakness"
            },
            {
              "id": "impact:Stored XSS payloads",
              "keyphrase": "Stored XSS payloads",
              "type": "impact"
            },
            {
              "id": "attacker:attackers",
              "keyphrase": "attackers",
              "type": "attacker"
            },
            {
              "id": "product:Inquiry cart WordPress plugin",
              "keyphrase": "Inquiry cart WordPress plugin",
              "type": "product"
            },
            {
              "id": "version:through 3.4.2",
              "keyphrase": "through 3.4.2",
              "type": "version"
            }
          ]
        },
        "similarity": 482.3180627737421
      },
      {
        "metadata": {
          "doc_id": "116",
          "name": "Improper Encoding or Escaping of Output",
          "source": "sparse",
          "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
          "keyphrase_sources": [
            {
              "id": "rootcause:and escaping",
              "keyphrase": "and escaping",
              "type": "rootcause"
            },
            {
              "id": "rootcause:does not have CSRF check",
              "keyphrase": "does not have CSRF check",
              "type": "rootcause"
            },
            {
              "id": "rootcause:missing CSRF check",
              "keyphrase": "missing CSRF check",
              "type": "rootcause"
            },
            {
              "id": "rootcause:sanitisation",
              "keyphrase": "sanitisation",
              "type": "rootcause"
            },
            {
              "id": "weakness:XSS",
              "keyphrase": "XSS",
              "type": "weakness"
            },
            {
              "id": "weakness:cross-site scripting",
              "keyphrase": "cross-site scripting",
              "type": "weakness"
            },
            {
              "id": "impact:Stored XSS payloads",
              "keyphrase": "Stored XSS payloads",
              "type": "impact"
            },
            {
              "id": "attacker:attackers",
              "keyphrase": "attackers",
              "type": "attacker"
            },
            {
              "id": "product:Inquiry cart WordPress plugin",
              "keyphrase": "Inquiry cart WordPress plugin",
              "type": "product"
            },
            {
              "id": "version:through 3.4.2",
              "keyphrase": "through 3.4.2",
              "type": "version"
            }
          ]
        },
        "similarity": 379.0047455772418
      },
      {
        "metadata": {
          "doc_id": "862",
          "name": "Missing Authorization",
          "source": "sparse",
          "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
          "keyphrase_sources": [
            {
              "id": "rootcause:and escaping",
              "keyphrase": "and escaping",
              "type": "rootcause"
            },
            {
              "id": "rootcause:does not have CSRF check",
              "keyphrase": "does not have CSRF check",
              "type": "rootcause"
            },
            {
              "id": "rootcause:missing CSRF check",
              "keyphrase": "missing CSRF check",
              "type": "rootcause"
            },
            {
              "id": "rootcause:sanitisation",
              "keyphrase": "sanitisation",
              "type": "rootcause"
            },
            {
              "id": "weakness:XSS",
              "keyphrase": "XSS",
              "type": "weakness"
            },
            {
              "id": "weakness:cross-site scripting",
              "keyphrase": "cross-site scripting",
              "type": "weakness"
            },
            {
              "id": "impact:Stored XSS payloads",
              "keyphrase": "Stored XSS payloads",
              "type": "impact"
            },
            {
              "id": "attacker:attackers",
              "keyphrase": "attackers",
              "type": "attacker"
            },
            {
              "id": "product:Inquiry cart WordPress plugin",
              "keyphrase": "Inquiry cart WordPress plugin",
              "type": "product"
            },
            {
              "id": "version:through 3.4.2",
              "keyphrase": "through 3.4.2",
              "type": "version"
            }
          ]
        },
        "similarity": 330.0099843622212
      },
      {
        "metadata": {
          "doc_id": "425",
          "name": "Direct Request ('Forced Browsing')",
          "source": "sparse",
          "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
          "keyphrase_sources": [
            {
              "id": "rootcause:does not have CSRF check",
              "keyphrase": "does not have CSRF check",
              "type": "rootcause"
            },
            {
              "id": "rootcause:missing CSRF check",
              "keyphrase": "missing CSRF check",
              "type": "rootcause"
            },
            {
              "id": "attacker:attackers",
              "keyphrase": "attackers",
              "type": "attacker"
            }
          ]
        },
        "similarity": 297.86667888592865
      },
      {
        "metadata": {
          "doc_id": "434",
          "name": "Unrestricted Upload of File with Dangerous Type",
          "source": "sparse",
          "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
          "keyphrase_sources": [
            {
              "id": "rootcause:and escaping",
              "keyphrase": "and escaping",
              "type": "rootcause"
            },
            {
              "id": "rootcause:does not have CSRF check",
              "keyphrase": "does not have CSRF check",
              "type": "rootcause"
            },
            {
              "id": "rootcause:missing CSRF check",
              "keyphrase": "missing CSRF check",
              "type": "rootcause"
            },
            {
              "id": "rootcause:sanitisation",
              "keyphrase": "sanitisation",
              "type": "rootcause"
            },
            {
              "id": "weakness:XSS",
              "keyphrase": "XSS",
              "type": "weakness"
            },
            {
              "id": "weakness:cross-site scripting",
              "keyphrase": "cross-site scripting",
              "type": "weakness"
            },
            {
              "id": "impact:Stored XSS payloads",
              "keyphrase": "Stored XSS payloads",
              "type": "impact"
            },
            {
              "id": "attacker:attackers",
              "keyphrase": "attackers",
              "type": "attacker"
            },
            {
              "id": "product:Inquiry cart WordPress plugin",
              "keyphrase": "Inquiry cart WordPress plugin",
              "type": "product"
            },
            {
              "id": "version:through 3.4.2",
              "keyphrase": "through 3.4.2",
              "type": "version"
            }
          ]
        },
        "similarity": 288.37841390365315
      },
      {
        "metadata": {
          "doc_id": "89",
          "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
          "source": "sparse",
          "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
          "keyphrase_sources": [
            {
              "id": "rootcause:and escaping",
              "keyphrase": "and escaping",
              "type": "rootcause"
            },
            {
              "id": "rootcause:sanitisation",
              "keyphrase": "sanitisation",
              "type": "rootcause"
            }
          ]
        },
        "similarity": 266.82825322206463
      },
      {
        "metadata": {
          "doc_id": "79",
          "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
          "source": "sparse",
          "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
          "keyphrase_sources": [
            {
              "id": "weakness:XSS",
              "keyphrase": "XSS",
              "type": "weakness"
            },
            {
              "id": "weakness:cross-site scripting",
              "keyphrase": "cross-site scripting",
              "type": "weakness"
            },
            {
              "id": "impact:Stored XSS payloads",
              "keyphrase": "Stored XSS payloads",
              "type": "impact"
            },
            {
              "id": "version:through 3.4.2",
              "keyphrase": "through 3.4.2",
              "type": "version"
            }
          ]
        },
        "similarity": 249.38655408005107
      },
      {
        "metadata": {
          "doc_id": "472",
          "name": "External Control of Assumed-Immutable Web Parameter",
          "source": "sparse",
          "original_content": "The web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.",
          "keyphrase_sources": [
            {
              "id": "product:Inquiry cart WordPress plugin",
              "keyphrase": "Inquiry cart WordPress plugin",
              "type": "product"
            }
          ]
        },
        "similarity": 103.50036171298096
      }
    ],
    "enhanced_query": "# Vulnerability Description\n\n    The Inquiry cart WordPress plugin through 3.4.2 **does not have CSRF check** in some places, and is missing **sanitisation** as well as escaping, which could allow attackers to make logged in admin add Stored **XSS** payloads via a CSRF attack\n\n    # Keyphrase-Specific CWE Analysis\n    This vulnerability contains multiple keyphrases that may map to different CWEs. \n    Please analyze each keyphrase separately and determine the most appropriate CWE(s) for each.\n\n    ## ROOTCAUSE: 'and escaping'\n\nRelevant CWEs for this ROOTCAUSE:\n\n### 1. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 482.32)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 2. CWE-116: Improper Encoding or Escaping of Output (Score: 379.00)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 3. CWE-862: Missing Authorization (Score: 330.01)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n### 4. CWE-434: Unrestricted Upload of File with Dangerous Type (Score: 288.38)\n\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment....\n\n### 5. CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (Score: 266.83)\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal o...\n\n## ROOTCAUSE: 'does not have CSRF check'\n\nRelevant CWEs for this ROOTCAUSE:\n\n### 1. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 482.32)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 2. CWE-116: Improper Encoding or Escaping of Output (Score: 379.00)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 3. CWE-862: Missing Authorization (Score: 330.01)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n### 4. CWE-425: Direct Request ('Forced Browsing') (Score: 297.87)\n\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files....\n\n### 5. CWE-434: Unrestricted Upload of File with Dangerous Type (Score: 288.38)\n\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment....\n\n## ROOTCAUSE: 'missing CSRF check'\n\nRelevant CWEs for this ROOTCAUSE:\n\n### 1. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 482.32)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 2. CWE-116: Improper Encoding or Escaping of Output (Score: 379.00)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 3. CWE-862: Missing Authorization (Score: 330.01)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n### 4. CWE-425: Direct Request ('Forced Browsing') (Score: 297.87)\n\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files....\n\n### 5. CWE-434: Unrestricted Upload of File with Dangerous Type (Score: 288.38)\n\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment....\n\n## ROOTCAUSE: 'sanitisation'\n\nRelevant CWEs for this ROOTCAUSE:\n\n### 1. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 482.32)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 2. CWE-116: Improper Encoding or Escaping of Output (Score: 379.00)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 3. CWE-862: Missing Authorization (Score: 330.01)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n### 4. CWE-434: Unrestricted Upload of File with Dangerous Type (Score: 288.38)\n\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment....\n\n### 5. CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (Score: 266.83)\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal o...\n\n## WEAKNESS: 'XSS'\n\nRelevant CWEs for this WEAKNESS:\n\n### 1. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 482.32)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 2. CWE-116: Improper Encoding or Escaping of Output (Score: 379.00)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 3. CWE-862: Missing Authorization (Score: 330.01)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n### 4. CWE-434: Unrestricted Upload of File with Dangerous Type (Score: 288.38)\n\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment....\n\n### 5. CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (Score: 249.39)\n\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users....\n\n## WEAKNESS: 'cross-site scripting'\n\nRelevant CWEs for this WEAKNESS:\n\n### 1. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 482.32)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 2. CWE-116: Improper Encoding or Escaping of Output (Score: 379.00)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 3. CWE-862: Missing Authorization (Score: 330.01)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n### 4. CWE-434: Unrestricted Upload of File with Dangerous Type (Score: 288.38)\n\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment....\n\n### 5. CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (Score: 249.39)\n\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users....\n\n## IMPACT: 'Stored XSS payloads'\n\nRelevant CWEs for this IMPACT:\n\n### 1. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 482.32)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 2. CWE-116: Improper Encoding or Escaping of Output (Score: 379.00)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 3. CWE-862: Missing Authorization (Score: 330.01)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n### 4. CWE-434: Unrestricted Upload of File with Dangerous Type (Score: 288.38)\n\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment....\n\n### 5. CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (Score: 249.39)\n\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users....\n\n## ATTACKER: 'attackers'\n\nRelevant CWEs for this ATTACKER:\n\n### 1. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 482.32)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 2. CWE-116: Improper Encoding or Escaping of Output (Score: 379.00)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 3. CWE-862: Missing Authorization (Score: 330.01)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n### 4. CWE-425: Direct Request ('Forced Browsing') (Score: 297.87)\n\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files....\n\n### 5. CWE-434: Unrestricted Upload of File with Dangerous Type (Score: 288.38)\n\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment....\n\n## PRODUCT: 'Inquiry cart WordPress plugin'\n\nRelevant CWEs for this PRODUCT:\n\n### 1. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 482.32)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 2. CWE-116: Improper Encoding or Escaping of Output (Score: 379.00)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 3. CWE-862: Missing Authorization (Score: 330.01)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n### 4. CWE-434: Unrestricted Upload of File with Dangerous Type (Score: 288.38)\n\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment....\n\n### 5. CWE-472: External Control of Assumed-Immutable Web Parameter (Score: 103.50)\n\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields....\n\n## VERSION: 'through 3.4.2'\n\nRelevant CWEs for this VERSION:\n\n### 1. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 482.32)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 2. CWE-116: Improper Encoding or Escaping of Output (Score: 379.00)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 3. CWE-862: Missing Authorization (Score: 330.01)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n### 4. CWE-434: Unrestricted Upload of File with Dangerous Type (Score: 288.38)\n\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment....\n\n### 5. CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (Score: 249.39)\n\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users....\n\n\n    # Analysis Instructions\n    1. For each keyphrase, identify the most appropriate CWE(s) that represent the weakness.\n    2. Consider how the different keyphrases might relate to each other in the vulnerability chain.\n    3. Provide a final determination of primary CWE(s) and any secondary CWEs.\n    4. Format your response using the standard analysis template.\n\n    Please analyze how these different weaknesses interact and provide a comprehensive CWE classification.\n    "
  },
  "retrieval_time": 1.3190274238586426
}