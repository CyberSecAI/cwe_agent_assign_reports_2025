{
  "cve_id": "CVE-2025-2851",
  "description": "A vulnerability classified as critical has been found in GL.iNet GL-A1300 Slate Plus, GL-AR300M16 Shadow, GL-AR300M Shadow, GL-AR750 Creta, GL-AR750S-EXT Slate, GL-AX1800 Flint, GL-AXT1800 Slate AX, GL-B1300 Convexa-B, GL-B3000 Marble, GL-BE3600 Slate 7, GL-E750, GL-E750V2 Mudi, GL-MT300N-V2 Mango, GL-MT1300 Beryl, GL-MT2500 Brume 2, GL-MT3000 Beryl AX, GL-MT6000 Flint 2, GL-SFT1200 Opal, GL-X300B Collie, GL-X750 Spitz, GL-X3000 Spitz AX, GL-XE300 Puli and GL-XE3000 Puli AX 4.x. Affected is an unknown function of the file plugins.so of the component RPC Handler. The manipulation leads to **buffer overflow**. It is recommended to upgrade the affected component.",
  "key_phrases": {
    "component": "plugins.so of the component RPC Handler",
    "rootcause": "",
    "vector": "",
    "weakness": "buffer overflow",
    "product": "GL.iNet GL-A1300 Slate Plus, GL-AR300M16 Shadow, GL-AR300M Shadow, GL-AR750 Creta, GL-AR750S-EXT Slate, GL-AX1800 Flint, GL-AXT1800 Slate AX, GL-B1300 Convexa-B, GL-B3000 Marble, GL-BE3600 Slate 7, GL-E750, GL-E750V2 Mudi, GL-MT300N-V2 Mango, GL-MT1300 Beryl, GL-MT2500 Brume 2, GL-MT3000 Beryl AX, GL-MT6000 Flint 2, GL-SFT1200 Opal, GL-X300B Collie, GL-X750 Spitz, GL-X3000 Spitz AX, GL-XE300 Puli and GL-XE3000 Puli AX",
    "impact": "",
    "attacker": "",
    "version": "4.x"
  },
  "reference_content": "## Analysis of CVE-2025-2851 based on provided content:\n\n**CVE ID:** CVE-2025-2851\n\n**Root cause of vulnerability:** Buffer overflow vulnerability in the `plugins.so` library via the `rpc` mechanism.\n\n**Weaknesses/vulnerabilities present:** Buffer overflow.\n\n**Impact of exploitation:** Not explicitly stated, but a buffer overflow can lead to code execution or denial of service.\n\n**Attack vectors:** Exploitation occurs via the `rpc` interface within the `plugins.so` library.\n\n**Required attacker capabilities/position:** Not specified, but likely requires the ability to interact with the `rpc` interface.\n\n**Mitigation or fix:** Upgrade the router firmware to a resolved version. The advisory lists specific resolved firmware versions for various models (e.g., V4.7.1 for GL-BE3600 Slate 7).\n\n**Additional Details (compared to a hypothetical official CVE description):**\n\n*   The content provides credit to researchers who discovered the vulnerability: gan3f and Sta8r9 (github.com/isstabber).\n*   It lists affected and resolved firmware versions for multiple GL.iNet router models.\n*   It provides a contact email (security@gl-inet.com) for reporting security bugs.\n*   It mentions a 90-day vulnerability disclosure policy.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-120 | Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') | 0.9 | Base | Allowed-with-Review | Primary CWE. The vulnerability description explicitly states \"**buffer overflow**\" due to manipulation of the `plugins.so` component via the RPC Handler. |\n| CWE-119 | Improper Restriction of Operations within the Bounds of a Memory Buffer | 0.7 | Class | Discouraged | Secondary candidate. This is a broader category that encompasses buffer overflows, but CWE-120 is more specific. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship that influenced the decision was the parent-child relationship between CWE-119 and CWE-120. CWE-120 is a specific type of CWE-119. The vulnerability description mentions \"**buffer overflow**\", making CWE-120 the more precise and preferred choice. While CWE-119 is a broader class, the specific nature of the vulnerability, as evidenced by the \"**buffer overflow**\" keyword, warrants the selection of CWE-120.\n\n```mermaid\ngraph TD\n    cwe120[\"CWE-120: Buffer Copy without Checking Size of Input\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\"]\n    \n    cwe120 -->|CHILDOF| cwe119\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe120 primary\n    class cwe119 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **buffer overflow** in the `plugins.so` library due to **missing size checking** when copying data into a buffer. This leads to an exploitable condition that can result in code execution or denial of service.\n  - Root Cause: CWE-120 Buffer Copy without Checking Size of Input ('Classic Buffer Overflow').\n  - Impact: Code execution or denial of service.\n\n## Summary of Analysis\nThe analysis is based on the provided vulnerability description and the CVE Reference Links Content Summary, which clearly indicate a \"**buffer overflow**\" vulnerability in the `plugins.so` component. The Retriever Results also list CWE-120 as a strong candidate. CWE-120 is preferred over the more general CWE-119 because it provides a more specific description of the **buffer overflow** occurring due to missing size checks during a buffer copy operation. The vulnerability is classified as CWE-120 with high confidence (0.9) due to the explicit mention of \"**buffer overflow**\" and the role of `plugins.so` component. The description clearly states that a manipulation leads to a **buffer overflow**, which is the root cause.\n\nCWEs Considered but Not Used:\n\n*   CWE-119: While related, it's a broader category than CWE-120.\n*   CWE-190: Integer Overflow or Wraparound: Not directly related to the provided vulnerability description.\n*   CWE-125: Out-of-bounds Read: The vulnerability is a **buffer overflow**, which is a write issue, not a read issue.\n*   CWE-20: Improper Input Validation: While this might be a contributing factor, the core issue is the unchecked buffer copy, making CWE-120 more relevant.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-120 | Buffer Copy without Checking Size of Input ('Classic Buffer Overflow') | 0.9 | Base | Allowed-with-Review | Primary CWE. The vulnerability description explicitly states \"**buffer overflow**\" due to manipulation of the `plugins.so` component via the RPC Handler. |\n| CWE-119 | Improper Restriction of Operations within the Bounds of a Memory Buffer | 0.7 | Class | Discouraged | Secondary candidate. This is a broader category that encompasses buffer overflows, but CWE-120 is more specific. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship that influenced the decision was the parent-child relationship between CWE-119 and CWE-120. CWE-120 is a specific type of CWE-119. The vulnerability description mentions \"**buffer overflow**\", making CWE-120 the more precise and preferred choice. While CWE-119 is a broader class, the specific nature of the vulnerability, as evidenced by the \"**buffer overflow**\" keyword, warrants the selection of CWE-120.\n\n```mermaid\ngraph TD\n    cwe120[\"CWE-120: Buffer Copy without Checking Size of Input\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\"]\n    \n    cwe120 -->|CHILDOF| cwe119\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe120 primary\n    class cwe119 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **buffer overflow** in the `plugins.so` library due to **missing size checking** when copying data into a buffer. This leads to an exploitable condition that can result in code execution or denial of service.\n  - Root Cause: CWE-120 Buffer Copy without Checking Size of Input ('Classic Buffer Overflow').\n  - Impact: Code execution or denial of service.\n\n## Summary of Analysis\nThe analysis is based on the provided vulnerability description and the CVE Reference Links Content Summary, which clearly indicate a \"**buffer overflow**\" vulnerability in the `plugins.so` component. The Retriever Results also list CWE-120 as a strong candidate. CWE-120 is preferred over the more general CWE-119 because it provides a more specific description of the **buffer overflow** occurring due to missing size checks during a buffer copy operation. The vulnerability is classified as CWE-120 with high confidence (0.9) due to the explicit mention of \"**buffer overflow**\" and the role of `plugins.so` component. The description clearly states that a manipulation leads to a **buffer overflow**, which is the root cause.\n\nCWEs Considered but Not Used:\n\n*   CWE-119: While related, it's a broader category than CWE-120.\n*   CWE-190: Integer Overflow or Wraparound: Not directly related to the provided vulnerability description.\n*   CWE-125: Out-of-bounds Read: The vulnerability is a **buffer overflow**, which is a write issue, not a read issue.\n*   CWE-20: Improper Input Validation: While this might be a contributing factor, the core issue is the unchecked buffer copy, making CWE-120 more relevant.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-125:**\n- 125 (Out-of-bounds Read) - ROOT\n\n\n**Chain starting from CWE-190:**\n- 190 (Integer Overflow or Wraparound) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Buffer Overflow",
        "match_reason": "exact_match_whole_phrase"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "190",
        "name": "Integer Overflow or Wraparound",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Overflow",
        "match_reason": "term_in_phrase_whole_phrase"
      },
      "similarity": 800.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "120",
        "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Classic Buffer Overflow",
        "match_reason": "phrase_in_term_whole_phrase"
      },
      "similarity": 700.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 307.56578375777605
    },
    {
      "metadata": {
        "doc_id": "125",
        "name": "Out-of-bounds Read",
        "source": "sparse"
      },
      "similarity": 302.04236934882505
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 289.5488789268488
    },
    {
      "metadata": {
        "doc_id": "674",
        "name": "Uncontrolled Recursion",
        "source": "sparse"
      },
      "similarity": 285.7066354621038
    },
    {
      "metadata": {
        "doc_id": "20",
        "name": "Improper Input Validation",
        "source": "sparse"
      },
      "similarity": 285.3308559875906
    },
    {
      "metadata": {
        "doc_id": "121",
        "name": "Stack-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
        "keyphrase_source": "weakness:buffer overflow",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.6585741733525237,
            "sparse": 284.52928443875714
          }
        }
      },
      "similarity": 0.6585741733525237
    },
    {
      "doc_id": "128",
      "text": "CWE-128: Wrap-around Error",
      "score": 2.9120000000000004,
      "metadata": {
        "doc_id": "128",
        "name": "Wrap-around Error",
        "type": "base",
        "original_content": "CWE-128: Wrap-around Error",
        "relationships": [
          {
            "source_id": "128",
            "target_id": "190",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "128",
            "target_id": "119",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "128",
            "target_id": "682",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "682",
            "target_id": "128",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "119",
            "target_id": "128",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0,
          "peer_group": 0.9
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward",
            "peer_relationship"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "119",
                  "128",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "119"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "119",
                  "128",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "119"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "128",
                  "119",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "119"
            },
            "peer_relationship": {
              "path": [
                [
                  "128",
                  "190",
                  "PEEROF"
                ]
              ],
              "score": 0.9,
              "type": "peer_relationship",
              "source": "190"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.9120000000000004
          }
        }
      },
      "similarity": 2.9120000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-125",
      "CWE-190",
      "CWE-20",
      "CWE-119",
      "CWE-120"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}