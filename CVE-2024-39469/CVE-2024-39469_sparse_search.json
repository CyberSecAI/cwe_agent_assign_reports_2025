{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved nilfs2 fix nilfs_empty_dir() misjudgment and long loop on I/O errors The error handling in nilfs_empty_dir() when a directory folio/page read fails is incorrect, as in the old ext2 implementation, and if the folio/page cannot be read or nilfs_check_folio() fails, it will falsely determine the directory as empty and corrupt the file system. In addition, since nilfs_empty_dir() does not immediately return on a failed folio/page read, but continues to loop, this can cause a long loop with I/O if i_size of the directorys inode is also corrupted, causing the log writer thread to wait and hang, as reported by syzbot. Fix these issues by making nilfs_empty_dir() immediately return a false value (0) if it fails to get a directory folio/page.",
  "keyphrases": {
    "rootcause": [
      "incorrect error handling in nilfs_empty_dir()"
    ]
  },
  "timestamp": "2025-07-12 02:55:15",
  "cve_id": "CVE-2024-39469",
  "result_count": 11,
  "results": [
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 699.4324965885421,
      "search_source": "rootcause:incorrect error handling in nilfs_empty_dir()"
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "score": 661.0345241130551,
      "search_source": "rootcause:incorrect error handling in nilfs_empty_dir()"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 660.5586219811087,
      "search_source": "rootcause:incorrect error handling in nilfs_empty_dir()"
    },
    {
      "cwe_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "score": 655.7462213439824,
      "search_source": "rootcause:incorrect error handling in nilfs_empty_dir()"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "score": 655.4005080741165,
      "search_source": "rootcause:incorrect error handling in nilfs_empty_dir()"
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "score": 649.3297521059832,
      "search_source": "rootcause:incorrect error handling in nilfs_empty_dir()"
    },
    {
      "cwe_id": "193",
      "name": "Off-by-one Error",
      "score": 645.24158206058,
      "search_source": "rootcause:incorrect error handling in nilfs_empty_dir()"
    },
    {
      "cwe_id": "22",
      "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
      "score": 644.9809696345986,
      "search_source": "rootcause:incorrect error handling in nilfs_empty_dir()"
    },
    {
      "cwe_id": "923",
      "name": "Improper Restriction of Communication Channel to Intended Endpoints",
      "score": 637.3238283945168,
      "search_source": "rootcause:incorrect error handling in nilfs_empty_dir()"
    },
    {
      "cwe_id": "191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "score": 635.0144329579292,
      "search_source": "rootcause:incorrect error handling in nilfs_empty_dir()"
    },
    {
      "cwe_id": "59",
      "name": "Improper Link Resolution Before File Access ('Link Following')",
      "score": 205.80499537851915,
      "search_source": "base_query"
    }
  ]
}