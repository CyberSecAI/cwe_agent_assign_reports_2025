{
  "cve_id": "CVE-2025-23720",
  "description": "Cross-Site Request Forgery (CSRF) vulnerability in Mozilla Web Push allows Stored XSS.This issue affects Web Push from n/a through 1.4.0.",
  "key_phrases": {
    "component": "",
    "rootcause": "missing CSRF protection",
    "vector": "",
    "weakness": "XSS, cross-site scripting",
    "product": "Mozilla Web Push",
    "impact": "cross-site scripting",
    "attacker": "",
    "version": "n/a through 1.4.0"
  },
  "reference_content": "Root cause of vulnerability:\nCross Site Request Forgery (CSRF) vulnerability.\n\nWeaknesses/vulnerabilities present:\nCSRF allows a malicious actor to force higher privileged users to execute unwanted actions under their current authentication.\n\nImpact of exploitation:\nA malicious actor can force higher privileged users to execute unwanted actions. Specific impact varies case by case.\n\nAttack vectors:\nNot specified beyond the general nature of CSRF.\n\nRequired attacker capabilities/position:\nUnauthenticated.\n\nMitigation or fix:\nNo official fix available. Patchstack vPatching can auto-mitigate the vulnerability.\n\nAdditional details:\n- Affected Software: Web Push WordPress Plugin\n- Vulnerable versions: <= 1.4.0\n- CVSS score: 7.1 (Low severity)\n- OWASP Top 10: A1: Broken Access Control\n- Reported by: SOPROBRO\n- Published by Patchstack: 16 January 2025\n- PSID: 77314a370195\n\nThe content provides more detail than the placeholder CVE description.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 1.0 | Compound | Primary | Allowed |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is identified as CWE-352 [Cross-Site Request Forgery (CSRF)], a compound weakness where the application does not sufficiently verify the request's origin. The secondary weakness is CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')], caused due to the **missing CSRF protection**, leading to stored XSS.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe441[\"CWE-441: Unintended Proxy or Intermediary ('Confused Deputy')\"]\n    cwe613[\"CWE-613: Insufficient Session Expiration\"]\n    cwe642[\"CWE-642: External Control of Critical State Data\"]\n    cwe346[\"CWE-346: Origin Validation Error\"]\n\n    cwe352 -->|REQUIRES| cwe613\n    cwe352 -->|REQUIRES| cwe642\n    cwe352 -->|REQUIRES| cwe441\n    cwe352 -->|REQUIRES| cwe346\n    cwe79 -->|CANFOLLOW| cwe352\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe352 primary\n    class cwe79 secondary\n    class cwe441,cwe613,cwe642,cwe346 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **missing CSRF protection** (CWE-352), which allows an attacker to inject malicious scripts. This leads to the **XSS** vulnerability (CWE-79) because the application **does not properly neutralize** user-controllable input.\n\n## Summary of Analysis\nThe primary issue is the **missing CSRF protection**, which is explicitly stated in the \"Vulnerability Description Key Phrases\" section. The presence of the CSRF vulnerability allows for XSS.\n\nThe evidence is:\n*   **rootcause:** **missing CSRF protection**\n*   **weakness:** **XSS, cross-site scripting**\n*   **CVE Reference Links Content Summary**: Root cause of vulnerability: Cross Site Request Forgery (CSRF) vulnerability.\n\nCWE-352 [Cross-Site Request Forgery (CSRF)] is the best fit for the **root cause** and is a Compound type.\n\nCWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] accurately describes the resulting **XSS** vulnerability, due to the **missing CSRF protection**.\n\nOther CWEs Considered:\n\n*   CWE-80 [Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)]: While related to XSS, CWE-79 is more general and appropriate as it covers the broad issue of improper neutralization.\n*   CWE-116 [Improper Encoding or Escaping of Output]: This is related to output encoding but doesn't capture the **root cause** of the CSRF vulnerability.\n*   CWE-918 [Server-Side Request Forgery (SSRF)]: Not relevant as the vulnerability is client-side.\n*   CWE-434 [Unrestricted Upload of File with Dangerous Type]: Not relevant as the vulnerability is not related to file uploads.\n*   CWE-1385 [Missing Origin Validation in WebSockets]: Not relevant as the vulnerability is not specific to WebSockets.\n*   CWE-494 [Download of Code Without Integrity Check]: Not relevant as the vulnerability is not related to code downloads.\n*   CWE-89 [Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')]: Not relevant as there's no indication of SQL injection.\n\nThe final selection of CWE-352 and CWE-79 provides the most accurate and specific classification of the vulnerability, addressing both the root cause (CSRF) and the resulting weakness (XSS).",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 1.0 | Compound | Primary | Allowed |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is identified as CWE-352 [Cross-Site Request Forgery (CSRF)], a compound weakness where the application does not sufficiently verify the request's origin. The secondary weakness is CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')], caused due to the **missing CSRF protection**, leading to stored XSS.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe441[\"CWE-441: Unintended Proxy or Intermediary ('Confused Deputy')\"]\n    cwe613[\"CWE-613: Insufficient Session Expiration\"]\n    cwe642[\"CWE-642: External Control of Critical State Data\"]\n    cwe346[\"CWE-346: Origin Validation Error\"]\n\n    cwe352 -->|REQUIRES| cwe613\n    cwe352 -->|REQUIRES| cwe642\n    cwe352 -->|REQUIRES| cwe441\n    cwe352 -->|REQUIRES| cwe346\n    cwe79 -->|CANFOLLOW| cwe352\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe352 primary\n    class cwe79 secondary\n    class cwe441,cwe613,cwe642,cwe346 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **missing CSRF protection** (CWE-352), which allows an attacker to inject malicious scripts. This leads to the **XSS** vulnerability (CWE-79) because the application **does not properly neutralize** user-controllable input.\n\n## Summary of Analysis\nThe primary issue is the **missing CSRF protection**, which is explicitly stated in the \"Vulnerability Description Key Phrases\" section. The presence of the CSRF vulnerability allows for XSS.\n\nThe evidence is:\n*   **rootcause:** **missing CSRF protection**\n*   **weakness:** **XSS, cross-site scripting**\n*   **CVE Reference Links Content Summary**: Root cause of vulnerability: Cross Site Request Forgery (CSRF) vulnerability.\n\nCWE-352 [Cross-Site Request Forgery (CSRF)] is the best fit for the **root cause** and is a Compound type.\n\nCWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] accurately describes the resulting **XSS** vulnerability, due to the **missing CSRF protection**.\n\nOther CWEs Considered:\n\n*   CWE-80 [Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)]: While related to XSS, CWE-79 is more general and appropriate as it covers the broad issue of improper neutralization.\n*   CWE-116 [Improper Encoding or Escaping of Output]: This is related to output encoding but doesn't capture the **root cause** of the CSRF vulnerability.\n*   CWE-918 [Server-Side Request Forgery (SSRF)]: Not relevant as the vulnerability is client-side.\n*   CWE-434 [Unrestricted Upload of File with Dangerous Type]: Not relevant as the vulnerability is not related to file uploads.\n*   CWE-1385 [Missing Origin Validation in WebSockets]: Not relevant as the vulnerability is not specific to WebSockets.\n*   CWE-494 [Download of Code Without Integrity Check]: Not relevant as the vulnerability is not related to code downloads.\n*   CWE-89 [Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')]: Not relevant as there's no indication of SQL injection.\n\nThe final selection of CWE-352 and CWE-79 provides the most accurate and specific classification of the vulnerability, addressing both the root cause (CSRF) and the resulting weakness (XSS).\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: XSS",
        "match_reason": "exact_match_compound_part_0"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 211.4263203874046
    },
    {
      "metadata": {
        "doc_id": "1004",
        "name": "Sensitive Cookie Without 'HttpOnly' Flag",
        "source": "sparse"
      },
      "similarity": 164.11037304994042
    },
    {
      "metadata": {
        "doc_id": "80",
        "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
        "source": "sparse"
      },
      "similarity": 163.3132301021047
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 157.85395602762412
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 157.81574309621362
    },
    {
      "metadata": {
        "doc_id": "918",
        "name": "Server-Side Request Forgery (SSRF)",
        "source": "sparse"
      },
      "similarity": 153.84002207476624
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse"
      },
      "similarity": 153.70093112856074
    },
    {
      "metadata": {
        "doc_id": "1385",
        "name": "Missing Origin Validation in WebSockets",
        "type": "Variant",
        "original_content": "The product uses a WebSocket, but it does not properly verify that the source of data or communication is valid.",
        "keyphrase_source": "weakness:XSS",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.5966477321686713
          }
        }
      },
      "similarity": 0.5966477321686713
    },
    {
      "doc_id": "494",
      "text": "CWE-494: Download of Code Without Integrity Check",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "494",
        "name": "Download of Code Without Integrity Check",
        "type": "base",
        "original_content": "CWE-494: Download of Code Without Integrity Check",
        "relationships": [
          {
            "source_id": "494",
            "target_id": "79",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "494",
            "target_id": "669",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "494",
            "target_id": "669",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "494",
            "target_id": "345",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "494",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "669",
            "target_id": "494",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "345",
            "target_id": "494",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "79",
                  "494",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "79"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "79",
                  "494",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "79"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-116",
      "CWE-494",
      "CWE-346",
      "CWE-80",
      "CWE-79",
      "CWE-441",
      "CWE-613",
      "CWE-642",
      "CWE-352",
      "CWE-1385",
      "CWE-918",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}