{
  "cve_id": "CVE-2024-12294",
  "description": "The Last Viewed Posts by WPBeginner plugin for WordPress is vulnerable to **Sensitive Information Exposure** in all versions up to, and including, 1.0.1 via the get_legacy_cookies function. This makes it possible for unauthenticated attackers to extract sensitive data including titles and permalinks of private, password-protected, pending, and draft posts.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "Sensitive Information Exposure",
    "impact": "extract sensitive data including titles and permalinks of private, password-protected, pending, and draft posts",
    "vector": "get_legacy_cookies function",
    "attacker": "unauthenticated attackers",
    "product": "Last Viewed Posts by WPBeginner plugin for WordPress",
    "version": "all versions up to and including 1.0.1",
    "component": ""
  },
  "reference_content": "Based on the provided content, here's the breakdown of the vulnerability:\n\n**Root Cause:**\nThe vulnerability stems from the `get_legacy_cookies` function in the Last Viewed Posts plugin. This function retrieves and processes data from a legacy cookie (`WP-LastViewedPosts`), which stores IDs of recently viewed posts. This data is then used to extract post information, including titles and permalinks. The issue is that the function doesn't properly check the post status before extracting information, leading to the exposure of sensitive data.\n\n**Weaknesses/Vulnerabilities:**\n-   **Sensitive Information Exposure:** The plugin exposes titles and permalinks of private, password-protected, pending, and draft posts to unauthenticated users.\n-   **Improper Access Control:** The `get_legacy_cookies` function does not enforce access controls, allowing unauthorized access to post information.\n\n**Impact of Exploitation:**\n-   **Information Disclosure:** Attackers can gather information about unpublished or restricted content on the WordPress site, potentially gaining insights into upcoming content, internal communications, or sensitive data that was not intended for public view.\n\n**Attack Vectors:**\n-   The vulnerability is exploitable over the network.\n-   Attackers can trigger the vulnerable code by accessing a page on the target website, which will run the plugin's code.\n\n**Required Attacker Capabilities/Position:**\n-   **Unauthenticated Access:** The attacker does not need to be logged into the WordPress site to exploit the vulnerability.\n-   **Network Access:** The attacker needs to be able to make HTTP requests to the target WordPress site.\n-   **No Special Privileges:** The attacker does not need any administrative or user privileges on the target website.\n\n**Additional Notes:**\n- The vulnerability is present in versions 1.0.1 and earlier of the plugin.\n- The plugin maintainers have released version 1.0.2 to address this vulnerability by removing the legacy cookie functionality.\n- The vulnerable code is located within the `inc/namespace.php` file, specifically the `get_legacy_cookies` function.\n- The fix involved removing the legacy cookie-related code.\n\nThis information provides a more detailed understanding of the vulnerability than the provided CVE description, especially when considering the context of the code changes in the provided diffs.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID  | CWE Name                                                                   | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---------|----------------------------------------------------------------------------|------------|-----------------------|---------------------------------|---------------------------------|\n| CWE-200 | Exposure of Sensitive Information to an Unauthorized Actor                                | 1          | Class                 | Primary                           | Allowed                       |\n| CWE-306 | Missing Authentication for Critical Function                                   | 0.7        | Base                  | Secondary                         | Allowed                       |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship influencing the decision is the parent-child relationship between CWE-200 (Exposure of Sensitive Information to an Unauthorized Actor) and its potential children which describe more specific types of information exposure. However, the description does not provide enough detail to select a more specific child. CWE-306 (Missing Authentication for Critical Function) is related because the sensitive information is exposed due to the missing authentication on the `get_legacy_cookies` function, but it is not the direct cause of the exposure, so it is listed as a secondary CWE. The abstraction levels were considered, favoring the more specific Base level CWE-306 over Class or Pillar level options when supported by the evidence.\n\n```mermaid\ngraph TD\n    cwe200[\"CWE-200: Exposure of Sensitive Information to an Unauthorized Actor\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    \n    cwe306 -->|CANPRECEDE| cwe200\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe200 primary\n    class cwe306 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with a **missing authentication** check on the `get_legacy_cookies` function (CWE-306), which allows an unauthenticated attacker to access the function. This then leads to the **exposure of sensitive information** (CWE-200) such as titles and permalinks of private, password-protected, pending, and draft posts.\n\n## Summary of Analysis\nThe initial analysis focused on the **Sensitive Information Exposure** aspect of the vulnerability, which aligns directly with CWE-200 (Exposure of Sensitive Information to an Unauthorized Actor). The evidence from the vulnerability description states: \"This makes it possible for unauthenticated attackers to extract sensitive data including titles and permalinks of private, password-protected, pending, and draft posts.\" This clearly indicates that sensitive information is being exposed. The lack of authentication is a contributing factor, but the primary weakness is the exposure itself. The graph relationships influenced the decision to include CWE-306 as a secondary CWE because the missing authentication allows the exposure to occur. CWE-200 is chosen because it is a more direct representation of the vulnerability. The selected CWEs are at the optimal level of specificity because the description does not provide enough detail to choose a more specific child of CWE-200, such as CWE-532 (Insertion of Sensitive Information into Log File) or CWE-201 (Insertion of Sensitive Information Into Sent Data).\n\nRelevant CWE Information:\n- **CWE-200: Exposure of Sensitive Information to an Unauthorized Actor**: The code transmits data to another actor, but a portion of the data includes sensitive information that should not be accessible to that actor.\n- **CWE-306: Missing Authentication for Critical Function**: The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.",
  "analysis_with_relationships": "# Summary\n| CWE ID  | CWE Name                                                                   | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---------|----------------------------------------------------------------------------|------------|-----------------------|---------------------------------|---------------------------------|\n| CWE-200 | Exposure of Sensitive Information to an Unauthorized Actor                                | 1          | Class                 | Primary                           | Allowed                       |\n| CWE-306 | Missing Authentication for Critical Function                                   | 0.7        | Base                  | Secondary                         | Allowed                       |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship influencing the decision is the parent-child relationship between CWE-200 (Exposure of Sensitive Information to an Unauthorized Actor) and its potential children which describe more specific types of information exposure. However, the description does not provide enough detail to select a more specific child. CWE-306 (Missing Authentication for Critical Function) is related because the sensitive information is exposed due to the missing authentication on the `get_legacy_cookies` function, but it is not the direct cause of the exposure, so it is listed as a secondary CWE. The abstraction levels were considered, favoring the more specific Base level CWE-306 over Class or Pillar level options when supported by the evidence.\n\n```mermaid\ngraph TD\n    cwe200[\"CWE-200: Exposure of Sensitive Information to an Unauthorized Actor\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    \n    cwe306 -->|CANPRECEDE| cwe200\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe200 primary\n    class cwe306 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with a **missing authentication** check on the `get_legacy_cookies` function (CWE-306), which allows an unauthenticated attacker to access the function. This then leads to the **exposure of sensitive information** (CWE-200) such as titles and permalinks of private, password-protected, pending, and draft posts.\n\n## Summary of Analysis\nThe initial analysis focused on the **Sensitive Information Exposure** aspect of the vulnerability, which aligns directly with CWE-200 (Exposure of Sensitive Information to an Unauthorized Actor). The evidence from the vulnerability description states: \"This makes it possible for unauthenticated attackers to extract sensitive data including titles and permalinks of private, password-protected, pending, and draft posts.\" This clearly indicates that sensitive information is being exposed. The lack of authentication is a contributing factor, but the primary weakness is the exposure itself. The graph relationships influenced the decision to include CWE-306 as a secondary CWE because the missing authentication allows the exposure to occur. CWE-200 is chosen because it is a more direct representation of the vulnerability. The selected CWEs are at the optimal level of specificity because the description does not provide enough detail to choose a more specific child of CWE-200, such as CWE-532 (Insertion of Sensitive Information into Log File) or CWE-201 (Insertion of Sensitive Information Into Sent Data).\n\nRelevant CWE Information:\n- **CWE-200: Exposure of Sensitive Information to an Unauthorized Actor**: The code transmits data to another actor, but a portion of the data includes sensitive information that should not be accessible to that actor.\n- **CWE-306: Missing Authentication for Critical Function**: The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-200:**\n- 200 (Exposure of Sensitive Information to an Unauthorized Actor) - ROOT\n\n\n**Chain starting from CWE-201:**\n- 201 (Insertion of Sensitive Information Into Sent Data) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "522",
        "name": "Insufficiently Protected Credentials",
        "source": "sparse"
      },
      "similarity": 296.05000708740874
    },
    {
      "metadata": {
        "doc_id": "200",
        "name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "source": "sparse"
      },
      "similarity": 293.6246674531711
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 293.50982314279054
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 283.71147304122155
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 277.7798056400253
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 274.4198470628317
    },
    {
      "metadata": {
        "doc_id": "639",
        "name": "Authorization Bypass Through User-Controlled Key",
        "source": "sparse"
      },
      "similarity": 272.9006095255474
    },
    {
      "metadata": {
        "doc_id": "532",
        "name": "Insertion of Sensitive Information into Log File",
        "source": "sparse"
      },
      "similarity": 268.20735924688177
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "type": "Compound",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_source": "weakness:Sensitive Information Exposure",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.",
          "comments": "While attack-oriented composites are supported in CWE, they have not been a focus of research. There is a chance that future research or CWE scope clarifications will change or deprecate them. Perform root-cause analysis to determine if other weaknesses allow CSRF attacks to occur, and map to those weaknesses. For example, predictable CSRF tokens might allow bypass of CSRF protection mechanisms; if this occurs, they might be better characterized as randomness/predictability weaknesses.",
          "reasons": [
            "Other"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.554565178832604,
            "sparse": 266.96458970931616
          }
        }
      },
      "similarity": 0.554565178832604
    },
    {
      "doc_id": "471",
      "text": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
      "score": 2.7196000000000002,
      "metadata": {
        "doc_id": "471",
        "name": "Modification of Assumed-Immutable Data (MAID)",
        "type": "base",
        "original_content": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
        "relationships": [
          {
            "source_id": "471",
            "target_id": "621",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "607",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "602",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "473",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "472",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "291",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "1321",
            "label": "CANFOLLOW",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "1282",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "664",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "664",
            "target_id": "471",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "621",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "607",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "602",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "473",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "472",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "291",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1321",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1282",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.5599999999999999,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_up",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "425",
                  "471",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "425"
            },
            "abstraction_path_up": {
              "path": [
                [
                  "472",
                  "471",
                  "CHILDOF"
                ]
              ],
              "score": 0.5599999999999999,
              "type": "abstraction_path_up",
              "source": "472"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "425",
                  "471",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "425"
            }
          }
        },
        "abstraction_level": "base",
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.7196000000000002
          }
        }
      },
      "similarity": 2.7196000000000002
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-200",
      "CWE-201",
      "CWE-306",
      "CWE-532"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}