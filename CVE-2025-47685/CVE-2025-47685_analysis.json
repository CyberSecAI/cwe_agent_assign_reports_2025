{
  "cve_id": "CVE-2025-47685",
  "description": "Cross-Site Request Forgery (CSRF) vulnerability in Moloni Contribuinte Checkout allows Stored **XSS**. This issue affects Contribuinte Checkout from n/a through 2.0.02.",
  "key_phrases": {
    "rootcause": "lack of CSRF protection",
    "weakness": "XSS",
    "impact": "cross-site scripting",
    "vector": "",
    "attacker": "",
    "product": "Moloni Contribuinte Checkout",
    "version": "n/a through 2.0.02",
    "component": ""
  },
  "reference_content": "The content relates to CVE-2025-47685.\n\n**Root cause of vulnerability:**\nCross Site Request Forgery (CSRF) vulnerability.\n\n**Weaknesses/vulnerabilities present:**\nCSRF - allows a malicious actor to force higher privileged users to execute unwanted actions under their current authentication.\n\n**Impact of exploitation:**\nA malicious actor can force higher privileged users to execute unwanted actions. The specific impact varies case by case.\n\n**Attack vectors:**\nCross-Site Request Forgery (CSRF) attack.\n\n**Required attacker capabilities/position:**\nUnauthenticated.\n\n**Mitigation or fix:**\nUpdate to version 2.0.04 or later. Patchstack users can enable auto-update for vulnerable plugins.\n\n**Additional details (more than official CVE description):**\n*   **CVSS Score:** 7.1 (Low severity)\n*   **OWASP Top 10:** A1: Broken Access Control\n*   **Vulnerable versions:** <= 2.0.03\n*   **Fixed in:** 2.0.04\n*   **Reported by:** Nguyen Xuan Chien\n*   **Published by:** Patchstack on May 7, 2025\n*   The issue is considered low priority and unlikely to be exploited.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 0.9 | Compound | Primary | Allowed |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.8 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is CWE-352 [Cross-Site Request Forgery (CSRF)], which is a compound weakness. The secondary weakness is CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')], which is caused by the **lack of CSRF protection**. This relationship indicates that the **lack of CSRF protection** allows for XSS attacks.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe79 --\"Caused By\"--> cwe352\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **lack of CSRF protection** (CWE-352) which allows for Stored **XSS** (CWE-79).\n\n## Summary of Analysis\nThe primary weakness is the **lack of CSRF protection** (CWE-352). The vulnerability description explicitly mentions \"Cross-Site Request Forgery (CSRF) vulnerability\" and the \"rootcause: **lack of CSRF protection**\". This aligns with the definition of CWE-352. The **XSS** (CWE-79) is a secondary weakness that can be exploited due to the **lack of CSRF protection**. The \"weakness: **XSS**\" and \"impact: cross-site scripting\" found in the Vulnerability Description Key Phrases also supports the inclusion of CWE-79. The evidence directly supports the selection of CWE-352 as the primary weakness and CWE-79 as a secondary weakness, and both are at the optimal level of specificity.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## Technical Explanation for CWE-352\n*   **How the vulnerability's details match the CWE's characteristics:** The vulnerability description explicitly mentions \"Cross-Site Request Forgery (CSRF) vulnerability\" and the \"rootcause: **lack of CSRF protection**\". This aligns directly with the definition of CWE-352, which involves insufficient verification of whether a request was intentionally provided by the user.\n*   **The security implications and potential impact:** A successful CSRF attack can force a user to perform actions they did not intend to, potentially leading to unauthorized access, data modification, or other harmful consequences.\n*   **Any parent-child relationships or chain patterns that influenced your mapping:** N/A\n*   **Whether the weakness is primary or secondary in the vulnerability:** Primary.\n*   **How the official MITRE mapping guidance influenced your decision:** The MITRE mapping guidance allows for the use of CWE-352, even though it is a Compound weakness. The rationale states that it is a well-known composite of multiple weaknesses that must all occur simultaneously.\n\n## Technical Explanation for CWE-79\n*   **How the vulnerability's details match the CWE's characteristics:** The **lack of CSRF protection** allows for the exploitation of Stored **XSS**, which means user-controllable input is not properly neutralized before being placed in a web page, as stated by the vulnerability description.\n*   **The security implications and potential impact:** **XSS** can lead to arbitrary code execution in the user's browser, session hijacking, or defacement of the website.\n*   **Any parent-child relationships or chain patterns that influenced your mapping:** CWE-79 is a consequence of the **lack of CSRF protection** (CWE-352).\n*   **Whether the weakness is primary or secondary in the vulnerability:** Secondary.\n*   **How the official MITRE mapping guidance influenced your decision:** The MITRE mapping guidance allows for the use of CWE-79, as it is a Base weakness.\n\n## CWEs Considered but Not Used\n*   CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS) - Considered but CWE-79 is more general and accurately describes the vulnerability.\n*   CWE-434: Unrestricted Upload of File with Dangerous Type - Not applicable as the vulnerability does not involve file uploads.\n*   CWE-116: Improper Encoding or Escaping of Output - While encoding issues might be present, the primary cause is **lack of CSRF protection** leading to **XSS**, making CWE-79 a better fit.\n*   CWE-601: URL Redirection to Untrusted Site ('Open Redirect') - Not applicable as the vulnerability does not involve URL redirection.\n*   CWE-918: Server-Side Request Forgery (SSRF) - Not applicable as the vulnerability does not involve server-side requests.\n*   CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') - Not applicable as the vulnerability does not involve SQL commands.\n*   CWE-73: External Control of File Name or Path - Not applicable as the vulnerability does not involve file paths.\n*   CWE-425: Direct Request ('Forced Browsing') - Not directly applicable. While CSRF involves unauthorized actions, it is specifically about forcing a user to perform actions they didn't intend, making CWE-352 a better fit.\n*   CWE-472: External Control of Assumed-Immutable Web Parameter - While potentially related, the core issue is the **lack of CSRF protection**, not the external control of parameters.\n*   CWE-1336: Improper Neutralization of Special Elements Used in a Template Engine - Not applicable as there is no mention of Template engine usage.\n*   CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag - Not applicable as there is no mention of cookies being used.\n*   CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection') - Not applicable as the vulnerability does not involve CRLF injection.\n*   CWE-494: Download of Code Without Integrity Check - Not applicable as the vulnerability does not involve downloads.\n*   CWE-184: Incomplete List of Disallowed Inputs - Not applicable as the vulnerability does not involve blacklisting.\n*   CWE-183: Permissive List of Allowed Inputs - Not applicable as the vulnerability does not involve whitelisting.\n*   CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') - Not applicable as the vulnerability does not involve file paths.\n*   CWE-41: Improper Resolution of Path Equivalence - Not applicable as the vulnerability does not involve file paths.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 0.9 | Compound | Primary | Allowed |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.8 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is CWE-352 [Cross-Site Request Forgery (CSRF)], which is a compound weakness. The secondary weakness is CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')], which is caused by the **lack of CSRF protection**. This relationship indicates that the **lack of CSRF protection** allows for XSS attacks.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe79 --\"Caused By\"--> cwe352\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **lack of CSRF protection** (CWE-352) which allows for Stored **XSS** (CWE-79).\n\n## Summary of Analysis\nThe primary weakness is the **lack of CSRF protection** (CWE-352). The vulnerability description explicitly mentions \"Cross-Site Request Forgery (CSRF) vulnerability\" and the \"rootcause: **lack of CSRF protection**\". This aligns with the definition of CWE-352. The **XSS** (CWE-79) is a secondary weakness that can be exploited due to the **lack of CSRF protection**. The \"weakness: **XSS**\" and \"impact: cross-site scripting\" found in the Vulnerability Description Key Phrases also supports the inclusion of CWE-79. The evidence directly supports the selection of CWE-352 as the primary weakness and CWE-79 as a secondary weakness, and both are at the optimal level of specificity.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## Technical Explanation for CWE-352\n*   **How the vulnerability's details match the CWE's characteristics:** The vulnerability description explicitly mentions \"Cross-Site Request Forgery (CSRF) vulnerability\" and the \"rootcause: **lack of CSRF protection**\". This aligns directly with the definition of CWE-352, which involves insufficient verification of whether a request was intentionally provided by the user.\n*   **The security implications and potential impact:** A successful CSRF attack can force a user to perform actions they did not intend to, potentially leading to unauthorized access, data modification, or other harmful consequences.\n*   **Any parent-child relationships or chain patterns that influenced your mapping:** N/A\n*   **Whether the weakness is primary or secondary in the vulnerability:** Primary.\n*   **How the official MITRE mapping guidance influenced your decision:** The MITRE mapping guidance allows for the use of CWE-352, even though it is a Compound weakness. The rationale states that it is a well-known composite of multiple weaknesses that must all occur simultaneously.\n\n## Technical Explanation for CWE-79\n*   **How the vulnerability's details match the CWE's characteristics:** The **lack of CSRF protection** allows for the exploitation of Stored **XSS**, which means user-controllable input is not properly neutralized before being placed in a web page, as stated by the vulnerability description.\n*   **The security implications and potential impact:** **XSS** can lead to arbitrary code execution in the user's browser, session hijacking, or defacement of the website.\n*   **Any parent-child relationships or chain patterns that influenced your mapping:** CWE-79 is a consequence of the **lack of CSRF protection** (CWE-352).\n*   **Whether the weakness is primary or secondary in the vulnerability:** Secondary.\n*   **How the official MITRE mapping guidance influenced your decision:** The MITRE mapping guidance allows for the use of CWE-79, as it is a Base weakness.\n\n## CWEs Considered but Not Used\n*   CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS) - Considered but CWE-79 is more general and accurately describes the vulnerability.\n*   CWE-434: Unrestricted Upload of File with Dangerous Type - Not applicable as the vulnerability does not involve file uploads.\n*   CWE-116: Improper Encoding or Escaping of Output - While encoding issues might be present, the primary cause is **lack of CSRF protection** leading to **XSS**, making CWE-79 a better fit.\n*   CWE-601: URL Redirection to Untrusted Site ('Open Redirect') - Not applicable as the vulnerability does not involve URL redirection.\n*   CWE-918: Server-Side Request Forgery (SSRF) - Not applicable as the vulnerability does not involve server-side requests.\n*   CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') - Not applicable as the vulnerability does not involve SQL commands.\n*   CWE-73: External Control of File Name or Path - Not applicable as the vulnerability does not involve file paths.\n*   CWE-425: Direct Request ('Forced Browsing') - Not directly applicable. While CSRF involves unauthorized actions, it is specifically about forcing a user to perform actions they didn't intend, making CWE-352 a better fit.\n*   CWE-472: External Control of Assumed-Immutable Web Parameter - While potentially related, the core issue is the **lack of CSRF protection**, not the external control of parameters.\n*   CWE-1336: Improper Neutralization of Special Elements Used in a Template Engine - Not applicable as there is no mention of Template engine usage.\n*   CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag - Not applicable as there is no mention of cookies being used.\n*   CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection') - Not applicable as the vulnerability does not involve CRLF injection.\n*   CWE-494: Download of Code Without Integrity Check - Not applicable as the vulnerability does not involve downloads.\n*   CWE-184: Incomplete List of Disallowed Inputs - Not applicable as the vulnerability does not involve blacklisting.\n*   CWE-183: Permissive List of Allowed Inputs - Not applicable as the vulnerability does not involve whitelisting.\n*   CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') - Not applicable as the vulnerability does not involve file paths.\n*   CWE-41: Improper Resolution of Path Equivalence - Not applicable as the vulnerability does not involve file paths.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-93:**\n- 93 (Improper Neutralization of CRLF Sequences ('CRLF Injection')) - ROOT\n\n\n**Chain starting from CWE-80:**\n- 80 (Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: XSS",
        "match_reason": "exact_match_whole_phrase"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 215.84891545195623
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse"
      },
      "similarity": 159.93828718730842
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 155.06000377770803
    },
    {
      "metadata": {
        "doc_id": "1004",
        "name": "Sensitive Cookie Without 'HttpOnly' Flag",
        "source": "sparse"
      },
      "similarity": 151.81896145065653
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 148.03937529128973
    },
    {
      "metadata": {
        "doc_id": "601",
        "name": "URL Redirection to Untrusted Site ('Open Redirect')",
        "source": "sparse"
      },
      "similarity": 138.4017991953427
    },
    {
      "metadata": {
        "doc_id": "918",
        "name": "Server-Side Request Forgery (SSRF)",
        "source": "sparse"
      },
      "similarity": 136.43332067338312
    },
    {
      "metadata": {
        "doc_id": "80",
        "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
        "type": "Variant",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.",
        "keyphrase_source": "weakness:XSS",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "retriever_count": 3,
          "normalized_scores": {
            "dense": 0.575447774108405,
            "sparse": 121.96566499149489,
            "graph": 1.5357553480990949
          }
        }
      },
      "similarity": 0.575447774108405
    },
    {
      "doc_id": "73",
      "text": "CWE-73: External Control of File Name or Path",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "73",
        "name": "External Control of File Name or Path",
        "type": "base",
        "original_content": "CWE-73: External Control of File Name or Path",
        "relationships": [
          {
            "source_id": "73",
            "target_id": "114",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "59",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "434",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "41",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "22",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "20",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "700"
            }
          },
          {
            "source_id": "73",
            "target_id": "610",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "642",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "99",
            "target_id": "73",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "642",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "610",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "59",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "434",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "22",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "20",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "700"
            }
          },
          {
            "source_id": "114",
            "target_id": "73",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "434",
                  "73",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "434"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "434",
                  "73",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "434"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "73",
                  "434",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "434"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-93",
      "CWE-80",
      "CWE-494",
      "CWE-79",
      "CWE-1336",
      "CWE-184",
      "CWE-183",
      "CWE-89",
      "CWE-601",
      "CWE-73",
      "CWE-1004",
      "CWE-352",
      "CWE-918",
      "CWE-425",
      "CWE-41",
      "CWE-434",
      "CWE-116",
      "CWE-22",
      "CWE-472"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}