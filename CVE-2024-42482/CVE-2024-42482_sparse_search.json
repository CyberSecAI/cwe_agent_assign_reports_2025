{
  "retriever": "sparse",
  "query": "fish-shop/syntax-check is a GitHub action for syntax checking fish shell files. Improper neutralization of delimiters in the `pattern` input (specifically the command separator `` and command substitution characters `(` and `)`) mean that arbitrary command injection is possible by modification of the input value used in a workflow. This has the potential for exposure or exfiltration of sensitive information from the workflow runner, such as might be achieved by sending environment variables to an external entity. It is recommended that users update to the patched version `v1.6.12` or the latest release version `v2.0.0`, however remediation may be possible through careful control of workflows and the `pattern` input value used by this action.",
  "keyphrases": {
    "rootcause": [
      "Improper input sanitization"
    ],
    "weakness": [
      "command injection"
    ]
  },
  "timestamp": "2025-07-12 03:46:14",
  "cve_id": "CVE-2024-42482",
  "result_count": 12,
  "results": [
    {
      "cwe_id": "77",
      "name": "Improper Neutralization of Special Elements used in a Command ('Command Injection')",
      "score": 1000.0,
      "search_source": "alternate_term_match"
    },
    {
      "cwe_id": "78",
      "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
      "score": 700.0,
      "search_source": "alternate_term_match"
    },
    {
      "cwe_id": "138",
      "name": "Improper Neutralization of Special Elements",
      "score": 672.8591305359,
      "search_source": "rootcause:Improper input sanitization"
    },
    {
      "cwe_id": "116",
      "name": "Improper Encoding or Escaping of Output",
      "score": 642.3966237109671,
      "search_source": "rootcause:Improper input sanitization"
    },
    {
      "cwe_id": "1336",
      "name": "Improper Neutralization of Special Elements Used in a Template Engine",
      "score": 628.5795625855515,
      "search_source": "rootcause:Improper input sanitization"
    },
    {
      "cwe_id": "214",
      "name": "Invocation of Process Using Visible Sensitive Information",
      "score": 626.0412937679448,
      "search_source": "rootcause:Improper input sanitization"
    },
    {
      "cwe_id": "74",
      "name": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')",
      "score": 620.9540723423064,
      "search_source": "rootcause:Improper input sanitization"
    },
    {
      "cwe_id": "94",
      "name": "Improper Control of Generation of Code ('Code Injection')",
      "score": 619.0094249207908,
      "search_source": "rootcause:Improper input sanitization"
    },
    {
      "cwe_id": "89",
      "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
      "score": 618.4775268846996,
      "search_source": "rootcause:Improper input sanitization"
    },
    {
      "cwe_id": "1333",
      "name": "Inefficient Regular Expression Complexity",
      "score": 616.9661944693436,
      "search_source": "rootcause:Improper input sanitization"
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "score": 616.2243916626518,
      "search_source": "rootcause:Improper input sanitization"
    },
    {
      "cwe_id": "88",
      "name": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
      "score": 586.3991452327047,
      "search_source": "weakness:command injection"
    }
  ]
}