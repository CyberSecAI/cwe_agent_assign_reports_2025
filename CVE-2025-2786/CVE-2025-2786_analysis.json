{
  "cve_id": "CVE-2025-2786",
  "description": "A flaw was found in Tempo Operator, where it **creates a ServiceAccount**, **ClusterRole**, **and **ClusterRole**Binding** when a user deploys a TempoStack or TempoMonolithic instance. This flaw allows a user with full access to their namespace to extract the ServiceAccount token and use it to submit TokenReview and SubjectAccessReview requests, potentially revealing information about other users permissions. While this does not allow privilege escalation or impersonation, it exposes information that could aid in gathering information for further attacks.",
  "key_phrases": {
    "rootcause": "",
    "weakness": [
      "creates a ServiceAccount",
      "and ClusterRoleBinding",
      "ClusterRole"
    ],
    "impact": [
      "extract ServiceAccount token",
      "privilege escalation",
      "impersonation"
    ],
    "vector": "",
    "attacker": "user with full access to their namespace",
    "product": "Tempo Operator",
    "version": "",
    "component": ""
  },
  "reference_content": "Here's an analysis of the provided content related to CVE-2025-2786:\n\n**Content from access.redhat.com_aaadff0b_20250624_134017.html:**\n\n*   **Relevance:** Relevant. This document is a Red Hat Security Advisory (RHSA-2025:3740) that explicitly mentions CVE-2025-2786.\n\n*   **Extracted Information:**\n\n    *   **Weaknesses/vulnerabilities present:** The Red Hat OpenShift distributed tracing platform (Tempo) 3.5.1 release fixes a vulnerability, CVE-2025-2786.\n    *   **Impact of exploitation:** The document does not describe the impact of the vulnerability.\n    *   **Mitigation or fix:** The advisory provides a link to documentation on how to apply the update.\n\n**Content from access.redhat.com_fb41b1a1_20250624_134017.html:**\n\n*   **Relevance:** Relevant. This document is a Red Hat Security Advisory (RHSA-2025:3607) that explicitly mentions CVE-2025-2786.\n\n*   **Extracted Information:**\n\n    *   **Weaknesses/vulnerabilities present:** The Red Hat OpenShift distributed tracing platform (Tempo) 3.5.1 release fixes a vulnerability, CVE-2025-2786.\n    *   **Impact of exploitation:** The document does not describe the impact of the vulnerability.\n    *   **Mitigation or fix:** The advisory provides a link to documentation on how to apply the update.\n\n**Content from bugzilla.redhat.com_86406bbc_20250624_134018.html:**\n\n*   **Relevance:** Relevant. This is a Red Hat Bugzilla entry for bug 2354811, which is linked to CVE-2025-2786.\n\n*   **Extracted Information:**\n\n    *   **Root cause of vulnerability:** The Tempo Operator in OpenShift Distributed Tracing creates a ServiceAccount, ClusterRole, and ClusterRoleBinding. This design allows any user with full access to their namespace to retrieve the associated ServiceAccount token.\n    *   **Weaknesses/vulnerabilities present:** The ServiceAccount token can be used to make privileged API calls, specifically:\n        *   Validate bearer tokens using the TokenReview API.\n        *   Check user permissions using the SubjectAccessReview API.\n    *   **Attack vectors:** An attacker with full access to their namespace can retrieve the ServiceAccount token.\n    *   **Required attacker capabilities/position:** The attacker needs full access to the namespace where the TempoStack or TempoMonolithic instance is deployed.\n    *   **Impact of exploitation:** The document does not describe the impact of the vulnerability.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-732 | Incorrect Permission Assignment for Critical Resource | 0.9 | Class | Primary | Allowed-with-Review |\n| CWE-201 | Insertion of Sensitive Information Into Sent Data | 0.6 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.75\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary relationship is that CWE-732, while named for permission assignment, is often misused for missing permission checks, which relates to authorization weaknesses. CWE-201 is included because sensitive information (the ServiceAccount token) is exposed as a result of the **incorrect permission assignment**. CWE-732 is a Class, while CWE-201 is Base.\n\n```mermaid\ngraph TD\n    cwe732[\"CWE-732: Incorrect Permission Assignment for Critical Resource\"]\n    cwe201[\"CWE-201: Insertion of Sensitive Information Into Sent Data\"]\n    \n    cwe201 -- CANALSOBE --> cwe732\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe732 primary\n    class cwe201 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **incorrect permission assignment** (CWE-732) leading to the exposure of the ServiceAccount token, effectively resulting in **insertion of sensitive information into sent data** (CWE-201). The chain highlights the flow from the initial misconfiguration to the final impact of information exposure.\n\n## Summary of Analysis\nThe initial analysis identified several potential CWEs based on the keyphrases provided, with CWE-732 consistently appearing as a top candidate for the **weakness** related to creating a ServiceAccount, ClusterRole, and ClusterRoleBinding. The vulnerability description explicitly states that a user with full access to their namespace can extract the ServiceAccount token, which aligns with CWE-732's description of a product specifying permissions that allow unintended actors to read or modify a resource.\n\nThe choice of CWE-732 is primarily driven by the fact that the vulnerability resides in the **incorrect assignment of permissions**, leading to the **exposure of sensitive information**. While the vulnerability doesn't lead to privilege escalation or impersonation, the ability to extract the ServiceAccount token and use it for TokenReview and SubjectAccessReview requests reveals information about other users' permissions. The permissions assigned to the created ServiceAccount, ClusterRole, and ClusterRoleBinding are too broad, allowing users within the same namespace to potentially gather sensitive information.\n\nCWE-201 is added as a secondary CWE because extracting the ServiceAccount token and using it to submit requests effectively results in the **insertion of sensitive information into data sent** to other actors.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-732: Incorrect Permission Assignment for Critical Resource\n**Abstraction Level**: Class\n**Similarity Score**: 3051.66\n**Source**: sparse\n\n**Description**:\nThe product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: While the name itself indicates an assignment of permissions for resources, this is often misused for vulnerabilities in which \"permissions\" are not checked, which is an \"authorization\" weakness (CWE-285 or descendants) within CWE's model [REF-1287].\n\n## CWE-201: Insertion of Sensitive Information Into Sent Data\n**Abstraction Level**: base\n**Similarity Score**: 4.33\n**Source**: graph\n\n**Description**:\nCWE-201: Insertion of Sensitive Information Into Sent Data\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-732 | Incorrect Permission Assignment for Critical Resource | 0.9 | Class | Primary | Allowed-with-Review |\n| CWE-201 | Insertion of Sensitive Information Into Sent Data | 0.6 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.75\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary relationship is that CWE-732, while named for permission assignment, is often misused for missing permission checks, which relates to authorization weaknesses. CWE-201 is included because sensitive information (the ServiceAccount token) is exposed as a result of the **incorrect permission assignment**. CWE-732 is a Class, while CWE-201 is Base.\n\n```mermaid\ngraph TD\n    cwe732[\"CWE-732: Incorrect Permission Assignment for Critical Resource\"]\n    cwe201[\"CWE-201: Insertion of Sensitive Information Into Sent Data\"]\n    \n    cwe201 -- CANALSOBE --> cwe732\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe732 primary\n    class cwe201 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **incorrect permission assignment** (CWE-732) leading to the exposure of the ServiceAccount token, effectively resulting in **insertion of sensitive information into sent data** (CWE-201). The chain highlights the flow from the initial misconfiguration to the final impact of information exposure.\n\n## Summary of Analysis\nThe initial analysis identified several potential CWEs based on the keyphrases provided, with CWE-732 consistently appearing as a top candidate for the **weakness** related to creating a ServiceAccount, ClusterRole, and ClusterRoleBinding. The vulnerability description explicitly states that a user with full access to their namespace can extract the ServiceAccount token, which aligns with CWE-732's description of a product specifying permissions that allow unintended actors to read or modify a resource.\n\nThe choice of CWE-732 is primarily driven by the fact that the vulnerability resides in the **incorrect assignment of permissions**, leading to the **exposure of sensitive information**. While the vulnerability doesn't lead to privilege escalation or impersonation, the ability to extract the ServiceAccount token and use it for TokenReview and SubjectAccessReview requests reveals information about other users' permissions. The permissions assigned to the created ServiceAccount, ClusterRole, and ClusterRoleBinding are too broad, allowing users within the same namespace to potentially gather sensitive information.\n\nCWE-201 is added as a secondary CWE because extracting the ServiceAccount token and using it to submit requests effectively results in the **insertion of sensitive information into data sent** to other actors.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-732: Incorrect Permission Assignment for Critical Resource\n**Abstraction Level**: Class\n**Similarity Score**: 3051.66\n**Source**: sparse\n\n**Description**:\nThe product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: While the name itself indicates an assignment of permissions for resources, this is often misused for vulnerabilities in which \"permissions\" are not checked, which is an \"authorization\" weakness (CWE-285 or descendants) within CWE's model [REF-1287].\n\n## CWE-201: Insertion of Sensitive Information Into Sent Data\n**Abstraction Level**: base\n**Similarity Score**: 4.33\n**Source**: graph\n\n**Description**:\nCWE-201: Insertion of Sensitive Information Into Sent Data\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-201:**\n- 201 (Insertion of Sensitive Information Into Sent Data) - ROOT\n\n\n**Chain starting from CWE-285:**\n- 285 (Improper Authorization) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "923",
        "name": "Improper Restriction of Communication Channel to Intended Endpoints",
        "source": "sparse",
        "original_content": "The product establishes a communication channel to (or from) an endpoint for privileged or protected operations, but it does not properly ensure that it is communicating with the correct endpoint.",
        "keyphrase_sources": [
          {
            "id": "weakness:creates a ServiceAccount",
            "keyphrase": "creates a ServiceAccount",
            "type": "weakness"
          },
          {
            "id": "weakness:and ClusterRoleBinding",
            "keyphrase": "and ClusterRoleBinding",
            "type": "weakness"
          },
          {
            "id": "weakness:ClusterRole",
            "keyphrase": "ClusterRole",
            "type": "weakness"
          },
          {
            "id": "impact:extract ServiceAccount token",
            "keyphrase": "extract ServiceAccount token",
            "type": "impact"
          },
          {
            "id": "impact:privilege escalation",
            "keyphrase": "privilege escalation",
            "type": "impact"
          },
          {
            "id": "impact:impersonation",
            "keyphrase": "impersonation",
            "type": "impact"
          },
          {
            "id": "attacker:user with full access to their namespace",
            "keyphrase": "user with full access to their namespace",
            "type": "attacker"
          },
          {
            "id": "product:Tempo Operator",
            "keyphrase": "Tempo Operator",
            "type": "product"
          }
        ]
      },
      "similarity": 399.57738831907744
    },
    {
      "metadata": {
        "doc_id": "732",
        "name": "Incorrect Permission Assignment for Critical Resource",
        "source": "sparse",
        "original_content": "The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.",
        "keyphrase_sources": [
          {
            "id": "weakness:creates a ServiceAccount",
            "keyphrase": "creates a ServiceAccount",
            "type": "weakness"
          },
          {
            "id": "weakness:and ClusterRoleBinding",
            "keyphrase": "and ClusterRoleBinding",
            "type": "weakness"
          },
          {
            "id": "weakness:ClusterRole",
            "keyphrase": "ClusterRole",
            "type": "weakness"
          },
          {
            "id": "impact:extract ServiceAccount token",
            "keyphrase": "extract ServiceAccount token",
            "type": "impact"
          },
          {
            "id": "impact:privilege escalation",
            "keyphrase": "privilege escalation",
            "type": "impact"
          },
          {
            "id": "attacker:user with full access to their namespace",
            "keyphrase": "user with full access to their namespace",
            "type": "attacker"
          },
          {
            "id": "product:Tempo Operator",
            "keyphrase": "Tempo Operator",
            "type": "product"
          }
        ]
      },
      "similarity": 399.16200035964687
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse",
        "original_content": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.",
        "keyphrase_sources": [
          {
            "id": "weakness:creates a ServiceAccount",
            "keyphrase": "creates a ServiceAccount",
            "type": "weakness"
          },
          {
            "id": "weakness:and ClusterRoleBinding",
            "keyphrase": "and ClusterRoleBinding",
            "type": "weakness"
          },
          {
            "id": "weakness:ClusterRole",
            "keyphrase": "ClusterRole",
            "type": "weakness"
          },
          {
            "id": "impact:extract ServiceAccount token",
            "keyphrase": "extract ServiceAccount token",
            "type": "impact"
          },
          {
            "id": "impact:privilege escalation",
            "keyphrase": "privilege escalation",
            "type": "impact"
          },
          {
            "id": "impact:impersonation",
            "keyphrase": "impersonation",
            "type": "impact"
          },
          {
            "id": "attacker:user with full access to their namespace",
            "keyphrase": "user with full access to their namespace",
            "type": "attacker"
          },
          {
            "id": "product:Tempo Operator",
            "keyphrase": "Tempo Operator",
            "type": "product"
          }
        ]
      },
      "similarity": 386.8357032354169
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse",
        "original_content": "The code transmits data to another actor, but a portion of the data includes sensitive information that should not be accessible to that actor.",
        "keyphrase_sources": [
          {
            "id": "weakness:creates a ServiceAccount",
            "keyphrase": "creates a ServiceAccount",
            "type": "weakness"
          },
          {
            "id": "weakness:and ClusterRoleBinding",
            "keyphrase": "and ClusterRoleBinding",
            "type": "weakness"
          },
          {
            "id": "weakness:ClusterRole",
            "keyphrase": "ClusterRole",
            "type": "weakness"
          },
          {
            "id": "impact:extract ServiceAccount token",
            "keyphrase": "extract ServiceAccount token",
            "type": "impact"
          },
          {
            "id": "impact:privilege escalation",
            "keyphrase": "privilege escalation",
            "type": "impact"
          },
          {
            "id": "impact:impersonation",
            "keyphrase": "impersonation",
            "type": "impact"
          },
          {
            "id": "attacker:user with full access to their namespace",
            "keyphrase": "user with full access to their namespace",
            "type": "attacker"
          },
          {
            "id": "product:Tempo Operator",
            "keyphrase": "Tempo Operator",
            "type": "product"
          }
        ]
      },
      "similarity": 385.43477673112517
    },
    {
      "metadata": {
        "doc_id": "362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "source": "sparse",
        "original_content": "The product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence operating concurrently.",
        "keyphrase_sources": [
          {
            "id": "weakness:creates a ServiceAccount",
            "keyphrase": "creates a ServiceAccount",
            "type": "weakness"
          },
          {
            "id": "impact:privilege escalation",
            "keyphrase": "privilege escalation",
            "type": "impact"
          }
        ]
      },
      "similarity": 376.6298922825141
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse",
        "original_content": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
        "keyphrase_sources": [
          {
            "id": "weakness:and ClusterRoleBinding",
            "keyphrase": "and ClusterRoleBinding",
            "type": "weakness"
          },
          {
            "id": "weakness:ClusterRole",
            "keyphrase": "ClusterRole",
            "type": "weakness"
          },
          {
            "id": "impact:impersonation",
            "keyphrase": "impersonation",
            "type": "impact"
          },
          {
            "id": "attacker:user with full access to their namespace",
            "keyphrase": "user with full access to their namespace",
            "type": "attacker"
          },
          {
            "id": "product:Tempo Operator",
            "keyphrase": "Tempo Operator",
            "type": "product"
          }
        ]
      },
      "similarity": 374.89812464776946
    },
    {
      "metadata": {
        "doc_id": "1390",
        "name": "Weak Authentication",
        "source": "sparse",
        "original_content": "The product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.",
        "keyphrase_sources": [
          {
            "id": "impact:extract ServiceAccount token",
            "keyphrase": "extract ServiceAccount token",
            "type": "impact"
          }
        ]
      },
      "similarity": 132.2788069746788
    },
    {
      "metadata": {
        "doc_id": "226",
        "name": "Sensitive Information in Resource Not Removed Before Reuse",
        "source": "sparse",
        "original_content": "The product releases a resource such as memory or a file so that it can be made available for reuse, but it does not clear or \"zeroize\" the information contained in the resource before the product performs a critical state transition or makes the resource available for reuse by other entities.",
        "keyphrase_sources": [
          {
            "id": "impact:impersonation",
            "keyphrase": "impersonation",
            "type": "impact"
          }
        ]
      },
      "similarity": 130.15485068284158
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-201",
      "CWE-285",
      "CWE-732"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "923": [
      {
        "id": "weakness:creates a ServiceAccount",
        "keyphrase": "creates a ServiceAccount",
        "type": "weakness"
      },
      {
        "id": "weakness:and ClusterRoleBinding",
        "keyphrase": "and ClusterRoleBinding",
        "type": "weakness"
      },
      {
        "id": "weakness:ClusterRole",
        "keyphrase": "ClusterRole",
        "type": "weakness"
      },
      {
        "id": "impact:extract ServiceAccount token",
        "keyphrase": "extract ServiceAccount token",
        "type": "impact"
      },
      {
        "id": "impact:privilege escalation",
        "keyphrase": "privilege escalation",
        "type": "impact"
      },
      {
        "id": "impact:impersonation",
        "keyphrase": "impersonation",
        "type": "impact"
      },
      {
        "id": "attacker:user with full access to their namespace",
        "keyphrase": "user with full access to their namespace",
        "type": "attacker"
      },
      {
        "id": "product:Tempo Operator",
        "keyphrase": "Tempo Operator",
        "type": "product"
      }
    ],
    "732": [
      {
        "id": "weakness:creates a ServiceAccount",
        "keyphrase": "creates a ServiceAccount",
        "type": "weakness"
      },
      {
        "id": "weakness:and ClusterRoleBinding",
        "keyphrase": "and ClusterRoleBinding",
        "type": "weakness"
      },
      {
        "id": "weakness:ClusterRole",
        "keyphrase": "ClusterRole",
        "type": "weakness"
      },
      {
        "id": "impact:extract ServiceAccount token",
        "keyphrase": "extract ServiceAccount token",
        "type": "impact"
      },
      {
        "id": "impact:privilege escalation",
        "keyphrase": "privilege escalation",
        "type": "impact"
      },
      {
        "id": "attacker:user with full access to their namespace",
        "keyphrase": "user with full access to their namespace",
        "type": "attacker"
      },
      {
        "id": "product:Tempo Operator",
        "keyphrase": "Tempo Operator",
        "type": "product"
      }
    ],
    "863": [
      {
        "id": "weakness:creates a ServiceAccount",
        "keyphrase": "creates a ServiceAccount",
        "type": "weakness"
      },
      {
        "id": "weakness:and ClusterRoleBinding",
        "keyphrase": "and ClusterRoleBinding",
        "type": "weakness"
      },
      {
        "id": "weakness:ClusterRole",
        "keyphrase": "ClusterRole",
        "type": "weakness"
      },
      {
        "id": "impact:extract ServiceAccount token",
        "keyphrase": "extract ServiceAccount token",
        "type": "impact"
      },
      {
        "id": "impact:privilege escalation",
        "keyphrase": "privilege escalation",
        "type": "impact"
      },
      {
        "id": "impact:impersonation",
        "keyphrase": "impersonation",
        "type": "impact"
      },
      {
        "id": "attacker:user with full access to their namespace",
        "keyphrase": "user with full access to their namespace",
        "type": "attacker"
      },
      {
        "id": "product:Tempo Operator",
        "keyphrase": "Tempo Operator",
        "type": "product"
      }
    ],
    "201": [
      {
        "id": "weakness:creates a ServiceAccount",
        "keyphrase": "creates a ServiceAccount",
        "type": "weakness"
      },
      {
        "id": "weakness:and ClusterRoleBinding",
        "keyphrase": "and ClusterRoleBinding",
        "type": "weakness"
      },
      {
        "id": "weakness:ClusterRole",
        "keyphrase": "ClusterRole",
        "type": "weakness"
      },
      {
        "id": "impact:extract ServiceAccount token",
        "keyphrase": "extract ServiceAccount token",
        "type": "impact"
      },
      {
        "id": "impact:privilege escalation",
        "keyphrase": "privilege escalation",
        "type": "impact"
      },
      {
        "id": "impact:impersonation",
        "keyphrase": "impersonation",
        "type": "impact"
      },
      {
        "id": "attacker:user with full access to their namespace",
        "keyphrase": "user with full access to their namespace",
        "type": "attacker"
      },
      {
        "id": "product:Tempo Operator",
        "keyphrase": "Tempo Operator",
        "type": "product"
      }
    ],
    "362": [
      {
        "id": "weakness:creates a ServiceAccount",
        "keyphrase": "creates a ServiceAccount",
        "type": "weakness"
      },
      {
        "id": "impact:privilege escalation",
        "keyphrase": "privilege escalation",
        "type": "impact"
      }
    ],
    "285": [
      {
        "id": "weakness:and ClusterRoleBinding",
        "keyphrase": "and ClusterRoleBinding",
        "type": "weakness"
      },
      {
        "id": "weakness:ClusterRole",
        "keyphrase": "ClusterRole",
        "type": "weakness"
      },
      {
        "id": "impact:impersonation",
        "keyphrase": "impersonation",
        "type": "impact"
      },
      {
        "id": "attacker:user with full access to their namespace",
        "keyphrase": "user with full access to their namespace",
        "type": "attacker"
      },
      {
        "id": "product:Tempo Operator",
        "keyphrase": "Tempo Operator",
        "type": "product"
      }
    ],
    "1390": [
      {
        "id": "impact:extract ServiceAccount token",
        "keyphrase": "extract ServiceAccount token",
        "type": "impact"
      }
    ],
    "226": [
      {
        "id": "impact:impersonation",
        "keyphrase": "impersonation",
        "type": "impact"
      }
    ]
  }
}