{
  "retriever": "sparse",
  "query": "ruby-saml provides security assertion markup language (SAML) single sign-on (SSO) for Ruby. Prior to versions 1.12.4 and 1.18.0, ruby-saml is susceptible to remote Denial of Service (DoS) with compressed SAML responses. ruby-saml uses zlib to decompress SAML responses in case theyre compressed. It is possible to bypass the message size check with a compressed assertion since the message size is checked before inflation and not after. This issue may lead to remote Denial of Service (DoS). Versions 1.12.4 and 1.18.0 fix the issue.",
  "keyphrases": {
    "weakness": [
      "bypass the message size check with a compressed assertion"
    ]
  },
  "timestamp": "2025-07-12 11:00:28",
  "cve_id": "CVE-2025-25293",
  "result_count": 12,
  "results": [
    {
      "cwe_id": "347",
      "name": "Improper Verification of Cryptographic Signature",
      "score": 624.772424380189,
      "search_source": "weakness:bypass the message size check with a compressed assertion"
    },
    {
      "cwe_id": "617",
      "name": "Reachable Assertion",
      "score": 504.4510367533065,
      "search_source": "weakness:bypass the message size check with a compressed assertion"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 491.15544276807066,
      "search_source": "weakness:bypass the message size check with a compressed assertion"
    },
    {
      "cwe_id": "1390",
      "name": "Weak Authentication",
      "score": 490.35562855153,
      "search_source": "weakness:bypass the message size check with a compressed assertion"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 484.23568451530156,
      "search_source": "weakness:bypass the message size check with a compressed assertion"
    },
    {
      "cwe_id": "409",
      "name": "Improper Handling of Highly Compressed Data (Data Amplification)",
      "score": 483.8273240486942,
      "search_source": "weakness:bypass the message size check with a compressed assertion"
    },
    {
      "cwe_id": "1333",
      "name": "Inefficient Regular Expression Complexity",
      "score": 481.8911521301528,
      "search_source": "weakness:bypass the message size check with a compressed assertion"
    },
    {
      "cwe_id": "400",
      "name": "Uncontrolled Resource Consumption",
      "score": 479.9468214916397,
      "search_source": "weakness:bypass the message size check with a compressed assertion"
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "score": 468.8899893541059,
      "search_source": "weakness:bypass the message size check with a compressed assertion"
    },
    {
      "cwe_id": "290",
      "name": "Authentication Bypass by Spoofing",
      "score": 468.61926624780375,
      "search_source": "weakness:bypass the message size check with a compressed assertion"
    },
    {
      "cwe_id": "1270",
      "name": "Generation of Incorrect Security Tokens",
      "score": 158.92835222761587,
      "search_source": "base_query"
    },
    {
      "cwe_id": "755",
      "name": "Improper Handling of Exceptional Conditions",
      "score": 152.34644537192352,
      "search_source": "base_query"
    }
  ]
}