{
  "query": "The Apollo Router Core is a configurable, high-performance graph router written in Rust to run a federated supergraph that uses Apollo Federation 2. Prior to 1.61.2 and 2.1.1, the operation limits plugin uses unsigned 32-bit integers to track limit counters (e.g. for a querys height). If a counter exceeded the maximum value for this data type (4,294,967,295), it wrapped around to 0, unintentionally allowing queries to bypass configured thresholds. This could occur for large queries if the payload limit were sufficiently increased, but could also occur for small queries with deeply nested and reused named fragments. This has been remediated in apollo-router versions 1.61.2 and 2.1.1.",
  "count": 12,
  "results": [
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 800.0,
      "original_score": 800.0,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "295",
      "name": "Improper Certificate Validation",
      "abstraction": "Base",
      "score": 521.9163138692736,
      "original_score": 521.9163138692736,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "abstraction": "Base",
      "score": 511.1437144291168,
      "original_score": 511.1437144291168,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "674",
      "name": "Uncontrolled Recursion",
      "abstraction": "Class",
      "score": 502.92135791153225,
      "original_score": 502.92135791153225,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "abstraction": "Base",
      "score": 496.02073352845053,
      "original_score": 496.02073352845053,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "681",
      "name": "Incorrect Conversion between Numeric Types",
      "abstraction": "Base",
      "score": 495.03187692992105,
      "original_score": 495.03187692992105,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "abstraction": "Variant",
      "score": 486.00616117704556,
      "original_score": 486.00616117704556,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "400",
      "name": "Uncontrolled Resource Consumption",
      "abstraction": "Class",
      "score": 483.29581548557724,
      "original_score": 483.29581548557724,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "abstraction": "Variant",
      "score": 478.02681728186246,
      "original_score": 478.02681728186246,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "abstraction": "Base",
      "score": 475.25249763384033,
      "original_score": 475.25249763384033,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "755",
      "name": "Improper Handling of Exceptional Conditions",
      "abstraction": "Class",
      "score": 155.9587619225411,
      "original_score": 155.9587619225411,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "1390",
      "name": "Weak Authentication",
      "abstraction": "Class",
      "score": 155.24174285402788,
      "original_score": 155.24174285402788,
      "mapping_usage": "Allowed-with-Review"
    }
  ],
  "statistics": {
    "min": 155.24174285402788,
    "max": 800.0,
    "mean": 463.4013160852657,
    "median": 490.5190190534833,
    "count": 12
  }
}