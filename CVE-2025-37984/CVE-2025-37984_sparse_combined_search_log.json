{
  "method": "sparse_combined",
  "query": "In the Linux kernel, the following vulnerability has been resolved crypto ecdsa - Harden against integer overflows in DIV_ROUND_UP() Herbert notes that DIV_ROUND_UP() may overflow unnecessarily if an ecdsa implementations ->key_size() callback returns an unusually large value. Herbert instead suggests (for a division by 8) X / 8 + !!(X & 7) Based on this formula, introduce a generic DIV_ROUND_UP_POW2() macro and use it in lieu of DIV_ROUND_UP() for ->key_size() return values. Additionally, use the macro in ecc_digits_from_bytes(), whose nbytes parameter is a ->key_size() return value in some instances, or a user-specified ASN.1 length in the case of ecdsa_get_signature_rs().",
  "keyphrases": {
    "rootcause": [
      "integer overflows in DIV_ROUND_UP()"
    ]
  },
  "timestamp": "2025-07-14T22:06:18.038251",
  "results_count": 14,
  "results_summary": [
    {
      "doc_id": "190",
      "name": "Integer Overflow or Wraparound",
      "score": 800.0
    },
    {
      "doc_id": "1236",
      "name": "Improper Neutralization of Formula Elements in a CSV File",
      "score": 472.225304439918
    },
    {
      "doc_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 472.1605160836117
    },
    {
      "doc_id": "125",
      "name": "Out-of-bounds Read",
      "score": 469.33322318569117
    },
    {
      "doc_id": "193",
      "name": "Off-by-one Error",
      "score": 447.6506048784677
    }
  ]
}