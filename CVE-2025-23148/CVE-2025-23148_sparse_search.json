{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved soc samsung exynos-chipid Add NULL pointer check in exynos_chipid_probe() soc_dev_attr->revision could be NULL, thus, a pointer check is added to prevent potential NULL pointer dereference. This is similar to the fix in commit 3027e7b15b02 (ice Fix some null pointer dereference issues in ice_ptp.c). This issue is found by our static analysis tool.",
  "keyphrases": {
    "weakness": [
      "NULL pointer dereference"
    ]
  },
  "timestamp": "2025-07-12 10:16:02",
  "cve_id": "CVE-2025-23148",
  "result_count": 12,
  "results": [
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "score": 463.9624887532019,
      "search_source": "weakness:NULL pointer dereference"
    },
    {
      "cwe_id": "252",
      "name": "Unchecked Return Value",
      "score": 426.5598640870588,
      "search_source": "weakness:NULL pointer dereference"
    },
    {
      "cwe_id": "824",
      "name": "Access of Uninitialized Pointer",
      "score": 402.3927413910874,
      "search_source": "weakness:NULL pointer dereference"
    },
    {
      "cwe_id": "822",
      "name": "Untrusted Pointer Dereference",
      "score": 382.96032892054785,
      "search_source": "weakness:NULL pointer dereference"
    },
    {
      "cwe_id": "665",
      "name": "Improper Initialization",
      "score": 376.61191765503764,
      "search_source": "weakness:NULL pointer dereference"
    },
    {
      "cwe_id": "690",
      "name": "Unchecked Return Value to NULL Pointer Dereference",
      "score": 363.92326683918225,
      "search_source": "weakness:NULL pointer dereference"
    },
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "score": 351.4352573694335,
      "search_source": "weakness:NULL pointer dereference"
    },
    {
      "cwe_id": "456",
      "name": "Missing Initialization of a Variable",
      "score": 350.6034066197944,
      "search_source": "weakness:NULL pointer dereference"
    },
    {
      "cwe_id": "617",
      "name": "Reachable Assertion",
      "score": 341.87869650566665,
      "search_source": "weakness:NULL pointer dereference"
    },
    {
      "cwe_id": "825",
      "name": "Expired Pointer Dereference",
      "score": 339.24154053946603,
      "search_source": "weakness:NULL pointer dereference"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "score": 111.07497993068382,
      "search_source": "base_query"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 110.19147274664566,
      "search_source": "base_query"
    }
  ]
}