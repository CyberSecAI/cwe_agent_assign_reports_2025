{
  "cve_id": "CVE-2024-46983",
  "description": "sofa-hessian is an internal improved version of Hessian3/4 powered by Ant Group CO., Ltd. The SOFA Hessian protocol uses a blacklist mechanism to restrict **deserialization** of potentially dangerous classes for security protection. But there is a gadget chain that can **bypass the SOFA Hessian blacklist protection mechanism**, and this gadget chain only relies on JDK and does not rely on any third-party components. This issue is fixed by an update to the blacklist, users can upgrade to sofahessian version 3.5.5 to avoid this issue. Users unable to upgrade may maintain a blacklist themselves in the directory `external/serialize.blacklist`.",
  "key_phrases": {
    "rootcause": "",
    "weakness": [
      "bypass the SOFA Hessian blacklist protection mechanism",
      "deserialization"
    ],
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": "SOFA Hessian protocol",
    "version": "",
    "component": ""
  },
  "reference_content": "- **Root cause of vulnerability**: A gadget chain exists that can bypass the SOFA Hessian blacklist protection mechanism for deserialization. This chain relies only on the JDK and not any third-party libraries.\n- **Weaknesses/vulnerabilities present**: Inadequate blacklist protection mechanism for deserialization, allowing bypass via a gadget chain.\n- **Impact of exploitation**: Remote Command Execution (RCE) is possible.\n- **Attack vectors**: The vulnerability is triggered during deserialization of SOFA Hessian protocol data.\n- **Required attacker capabilities/position**: The attacker needs to send a crafted payload containing the malicious gadget chain to an application using vulnerable versions of sofa-hessian.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-184 | Incomplete List of Disallowed Inputs | 1.0 | Base | Primary | Allowed |\n| CWE-502 | Deserialization of Untrusted Data | 0.8 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship is that CWE-184 [Incomplete List of Disallowed Inputs] is often a prerequisite for CWE-502 [Deserialization of Untrusted Data] vulnerabilities. The blacklist is intended to prevent deserialization of dangerous classes (CWE-502), but the **incomplete list** (CWE-184) allows bypasses. CWE-184 is a base CWE, which is at the preferred level of abstraction. CWE-502 is also a base CWE.\n\n```mermaid\ngraph TD\n    cwe184[\"CWE-184: Incomplete List of Disallowed Inputs\"]\n    cwe502[\"CWE-502: Deserialization of Untrusted Data\"]\n    \n    cwe184 -->|CANPRECEDE| cwe502\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe184 primary\n    class cwe502 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with an **incomplete list of disallowed inputs** (CWE-184). This allows an attacker to provide input that should have been blocked. The **deserialization** process (CWE-502) then processes this malicious input, leading to a potential security breach.\n\n## Summary of Analysis\nThe primary weakness is the **incomplete blacklist** that allows certain inputs to bypass security restrictions. This directly corresponds to CWE-184 [Incomplete List of Disallowed Inputs]. The fact that this bypass leads to **deserialization** of untrusted data (CWE-502) makes CWE-502 a secondary concern, as it's the consequence of the bypass. The vulnerability description explicitly mentions the \"SOFA Hessian blacklist protection mechanism\" being bypassed, which is direct evidence for CWE-184.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n- Not selected. This vulnerability is about an incomplete list for deserialization, not authentication.\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n- Not selected. This vulnerability is about an incomplete list for deserialization, not weak credentials.\n\n## CWE-807: Reliance on Untrusted Inputs in a Security Decision\n**Abstraction Level**: Base\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.\n- Not selected. While there is reliance on untrusted inputs, the more specific CWE-184 is a better fit since there is a blacklist in place that is incomplete.\n\n## CWE-657: Violation of Secure Design Principles\n**Abstraction Level**: Class\n**Similarity Score**: 0.69\n**Source**: dense\n\n**Description**:\nThe product violates well-established principles for secure design.\n- Not selected. This is a very general CWE and doesn't accurately reflect the specific weakness.\n\n## CWE-345: Insufficient Verification of Data Authenticity\n**Abstraction Level**: Class\n**Similarity Score**: 0.69\n**Source**: dense\n\n**Description**:\nThe product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.\n- Not selected. While related to **deserialization**, it is not the root cause. The root cause is the **incomplete blacklist**.\n\n## CWE-696: Incorrect Behavior Order\n**Abstraction Level**: Class\n**Similarity Score**: 0.69\n**Source**: dense\n\n**Description**:\nThe product performs multiple related behaviors, but the behaviors are performed in the wrong order in ways which may produce resultant weaknesses.\n- Not selected. This vulnerability is not related to incorrect behavior order.\n\n## CWE-183: Permissive List of Allowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 0.68\n**Source**: dense\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are explicitly allowed by policy because the inputs are assumed to be safe, but the list is too permissive - that is, it allows an input that is unsafe, leading to resultant weaknesses.\n- Not selected. The description mentions a blacklist, so CWE-184 is a better fit than CWE-183.\n\n## CWE-294: Authentication Bypass by Capture-replay\n**Abstraction Level**: Base\n**Similarity Score**: 0.68\n**Source**: dense\n\n**Description**:\nA capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).\n- Not selected. This vulnerability is not related to authentication bypass by capture-replay.\n\n## CWE-703: Improper Check or Handling of Exceptional Conditions\n**Abstraction Level**: Pillar\n**Similarity Score**: 0.68\n**Source**: dense\n\n**Description**:\nThe product does not properly anticipate or handle exceptional conditions that rarely occur during normal operation of the product.\n- Not selected. This is a very general CWE (Pillar) and doesn't accurately reflect the specific weakness.\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction Level**: Class\n**Similarity Score**: 0.68\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n- Not selected. While related to **deserialization**, it is not the root cause. The root cause is the **incomplete blacklist**.\n\n## CWE-184: Incomplete List of Disallowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 1445.65\n**Source**: sparse\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.\n- Selected as the primary CWE. The vulnerability description highlights that the \"SOFA Hessian protocol uses a blacklist mechanism\" and that the vulnerability involves a bypass of this mechanism.\n\n## CWE-863: Incorrect Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 1306.26\n**Source**: sparse\n\n**Description**:\nThe product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.\n- Not selected. This vulnerability is about an incomplete list for deserialization, not incorrect authorization.\n\n## CWE-807: Reliance on Untrusted Inputs in a Security Decision\n**Abstraction Level**: Base\n**Similarity Score**: 1290.82\n**Source**: sparse\n\n**Description**:\nThe product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.\n- Not selected. While there is reliance on untrusted inputs, the more specific CWE-184 is a better fit since there is a blacklist in place that is incomplete.\n\n## CWE-285: Improper Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 1285.71\n**Source**: sparse\n\n**Description**:\nThe product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.\n- Not selected. This vulnerability is about an incomplete list for deserialization, not improper authorization.\n\n## CWE-502: Deserialization of Untrusted Data\n**Abstraction Level**: Base\n**Similarity Score**: 1261.10\n**Source**: sparse\n\n**Description**:\nThe product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.\n- Selected as a secondary CWE. The vulnerability description mentions \"deserialization\" and a bypass of the blacklist, which allows the **deserialization of potentially dangerous classes**.\n\n## CWE-49",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-184 | Incomplete List of Disallowed Inputs | 1.0 | Base | Primary | Allowed |\n| CWE-502 | Deserialization of Untrusted Data | 0.8 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship is that CWE-184 [Incomplete List of Disallowed Inputs] is often a prerequisite for CWE-502 [Deserialization of Untrusted Data] vulnerabilities. The blacklist is intended to prevent deserialization of dangerous classes (CWE-502), but the **incomplete list** (CWE-184) allows bypasses. CWE-184 is a base CWE, which is at the preferred level of abstraction. CWE-502 is also a base CWE.\n\n```mermaid\ngraph TD\n    cwe184[\"CWE-184: Incomplete List of Disallowed Inputs\"]\n    cwe502[\"CWE-502: Deserialization of Untrusted Data\"]\n    \n    cwe184 -->|CANPRECEDE| cwe502\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe184 primary\n    class cwe502 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with an **incomplete list of disallowed inputs** (CWE-184). This allows an attacker to provide input that should have been blocked. The **deserialization** process (CWE-502) then processes this malicious input, leading to a potential security breach.\n\n## Summary of Analysis\nThe primary weakness is the **incomplete blacklist** that allows certain inputs to bypass security restrictions. This directly corresponds to CWE-184 [Incomplete List of Disallowed Inputs]. The fact that this bypass leads to **deserialization** of untrusted data (CWE-502) makes CWE-502 a secondary concern, as it's the consequence of the bypass. The vulnerability description explicitly mentions the \"SOFA Hessian blacklist protection mechanism\" being bypassed, which is direct evidence for CWE-184.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n- Not selected. This vulnerability is about an incomplete list for deserialization, not authentication.\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n- Not selected. This vulnerability is about an incomplete list for deserialization, not weak credentials.\n\n## CWE-807: Reliance on Untrusted Inputs in a Security Decision\n**Abstraction Level**: Base\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.\n- Not selected. While there is reliance on untrusted inputs, the more specific CWE-184 is a better fit since there is a blacklist in place that is incomplete.\n\n## CWE-657: Violation of Secure Design Principles\n**Abstraction Level**: Class\n**Similarity Score**: 0.69\n**Source**: dense\n\n**Description**:\nThe product violates well-established principles for secure design.\n- Not selected. This is a very general CWE and doesn't accurately reflect the specific weakness.\n\n## CWE-345: Insufficient Verification of Data Authenticity\n**Abstraction Level**: Class\n**Similarity Score**: 0.69\n**Source**: dense\n\n**Description**:\nThe product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.\n- Not selected. While related to **deserialization**, it is not the root cause. The root cause is the **incomplete blacklist**.\n\n## CWE-696: Incorrect Behavior Order\n**Abstraction Level**: Class\n**Similarity Score**: 0.69\n**Source**: dense\n\n**Description**:\nThe product performs multiple related behaviors, but the behaviors are performed in the wrong order in ways which may produce resultant weaknesses.\n- Not selected. This vulnerability is not related to incorrect behavior order.\n\n## CWE-183: Permissive List of Allowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 0.68\n**Source**: dense\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are explicitly allowed by policy because the inputs are assumed to be safe, but the list is too permissive - that is, it allows an input that is unsafe, leading to resultant weaknesses.\n- Not selected. The description mentions a blacklist, so CWE-184 is a better fit than CWE-183.\n\n## CWE-294: Authentication Bypass by Capture-replay\n**Abstraction Level**: Base\n**Similarity Score**: 0.68\n**Source**: dense\n\n**Description**:\nA capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).\n- Not selected. This vulnerability is not related to authentication bypass by capture-replay.\n\n## CWE-703: Improper Check or Handling of Exceptional Conditions\n**Abstraction Level**: Pillar\n**Similarity Score**: 0.68\n**Source**: dense\n\n**Description**:\nThe product does not properly anticipate or handle exceptional conditions that rarely occur during normal operation of the product.\n- Not selected. This is a very general CWE (Pillar) and doesn't accurately reflect the specific weakness.\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction Level**: Class\n**Similarity Score**: 0.68\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n- Not selected. While related to **deserialization**, it is not the root cause. The root cause is the **incomplete blacklist**.\n\n## CWE-184: Incomplete List of Disallowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 1445.65\n**Source**: sparse\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.\n- Selected as the primary CWE. The vulnerability description highlights that the \"SOFA Hessian protocol uses a blacklist mechanism\" and that the vulnerability involves a bypass of this mechanism.\n\n## CWE-863: Incorrect Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 1306.26\n**Source**: sparse\n\n**Description**:\nThe product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.\n- Not selected. This vulnerability is about an incomplete list for deserialization, not incorrect authorization.\n\n## CWE-807: Reliance on Untrusted Inputs in a Security Decision\n**Abstraction Level**: Base\n**Similarity Score**: 1290.82\n**Source**: sparse\n\n**Description**:\nThe product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.\n- Not selected. While there is reliance on untrusted inputs, the more specific CWE-184 is a better fit since there is a blacklist in place that is incomplete.\n\n## CWE-285: Improper Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 1285.71\n**Source**: sparse\n\n**Description**:\nThe product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.\n- Not selected. This vulnerability is about an incomplete list for deserialization, not improper authorization.\n\n## CWE-502: Deserialization of Untrusted Data\n**Abstraction Level**: Base\n**Similarity Score**: 1261.10\n**Source**: sparse\n\n**Description**:\nThe product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.\n- Selected as a secondary CWE. The vulnerability description mentions \"deserialization\" and a bypass of the blacklist, which allows the **deserialization of potentially dangerous classes**.\n\n## CWE-49\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-183:**\n- 183 (Permissive List of Allowed Inputs) - ROOT\n\n\n**Chain starting from CWE-502:**\n- 502 (Deserialization of Untrusted Data) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "184",
        "name": "Incomplete List of Disallowed Inputs",
        "source": "sparse",
        "original_content": "The product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.",
        "keyphrase_sources": [
          {
            "id": "weakness:bypass the SOFA Hessian blacklist protection mechanism",
            "keyphrase": "bypass the SOFA Hessian blacklist protection mechanism",
            "type": "weakness"
          },
          {
            "id": "weakness:deserialization",
            "keyphrase": "deserialization",
            "type": "weakness"
          },
          {
            "id": "product:SOFA Hessian protocol",
            "keyphrase": "SOFA Hessian protocol",
            "type": "product"
          }
        ]
      },
      "similarity": 686.7236617930005
    },
    {
      "metadata": {
        "doc_id": "502",
        "name": "Deserialization of Untrusted Data",
        "source": "sparse",
        "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.",
        "keyphrase_sources": [
          {
            "id": "weakness:bypass the SOFA Hessian blacklist protection mechanism",
            "keyphrase": "bypass the SOFA Hessian blacklist protection mechanism",
            "type": "weakness"
          },
          {
            "id": "weakness:deserialization",
            "keyphrase": "deserialization",
            "type": "weakness"
          },
          {
            "id": "product:SOFA Hessian protocol",
            "keyphrase": "SOFA Hessian protocol",
            "type": "product"
          }
        ]
      },
      "similarity": 601.5649275654097
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse",
        "original_content": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.",
        "keyphrase_sources": [
          {
            "id": "weakness:bypass the SOFA Hessian blacklist protection mechanism",
            "keyphrase": "bypass the SOFA Hessian blacklist protection mechanism",
            "type": "weakness"
          },
          {
            "id": "weakness:deserialization",
            "keyphrase": "deserialization",
            "type": "weakness"
          },
          {
            "id": "product:SOFA Hessian protocol",
            "keyphrase": "SOFA Hessian protocol",
            "type": "product"
          }
        ]
      },
      "similarity": 511.17242298637865
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse",
        "original_content": "The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.",
        "keyphrase_sources": [
          {
            "id": "weakness:bypass the SOFA Hessian blacklist protection mechanism",
            "keyphrase": "bypass the SOFA Hessian blacklist protection mechanism",
            "type": "weakness"
          },
          {
            "id": "weakness:deserialization",
            "keyphrase": "deserialization",
            "type": "weakness"
          }
        ]
      },
      "similarity": 500.78887696465875
    },
    {
      "metadata": {
        "doc_id": "287",
        "name": "Improper Authentication",
        "source": "sparse",
        "original_content": "When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",
        "keyphrase_sources": [
          {
            "id": "weakness:bypass the SOFA Hessian blacklist protection mechanism",
            "keyphrase": "bypass the SOFA Hessian blacklist protection mechanism",
            "type": "weakness"
          },
          {
            "id": "product:SOFA Hessian protocol",
            "keyphrase": "SOFA Hessian protocol",
            "type": "product"
          }
        ]
      },
      "similarity": 499.4829928142873
    },
    {
      "metadata": {
        "doc_id": "918",
        "name": "Server-Side Request Forgery (SSRF)",
        "source": "sparse",
        "original_content": "The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.",
        "keyphrase_sources": [
          {
            "id": "weakness:deserialization",
            "keyphrase": "deserialization",
            "type": "weakness"
          }
        ]
      },
      "similarity": 472.92403245664997
    },
    {
      "metadata": {
        "doc_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "source": "sparse",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "keyphrase_sources": [
          {
            "id": "product:SOFA Hessian protocol",
            "keyphrase": "SOFA Hessian protocol",
            "type": "product"
          }
        ]
      },
      "similarity": 167.1906070790285
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-183",
      "CWE-502",
      "CWE-863",
      "CWE-345",
      "CWE-657",
      "CWE-49",
      "CWE-696",
      "CWE-294",
      "CWE-303",
      "CWE-138",
      "CWE-1391",
      "CWE-184",
      "CWE-807",
      "CWE-285",
      "CWE-703"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "184": [
      {
        "id": "weakness:bypass the SOFA Hessian blacklist protection mechanism",
        "keyphrase": "bypass the SOFA Hessian blacklist protection mechanism",
        "type": "weakness"
      },
      {
        "id": "weakness:deserialization",
        "keyphrase": "deserialization",
        "type": "weakness"
      },
      {
        "id": "product:SOFA Hessian protocol",
        "keyphrase": "SOFA Hessian protocol",
        "type": "product"
      }
    ],
    "502": [
      {
        "id": "weakness:bypass the SOFA Hessian blacklist protection mechanism",
        "keyphrase": "bypass the SOFA Hessian blacklist protection mechanism",
        "type": "weakness"
      },
      {
        "id": "weakness:deserialization",
        "keyphrase": "deserialization",
        "type": "weakness"
      },
      {
        "id": "product:SOFA Hessian protocol",
        "keyphrase": "SOFA Hessian protocol",
        "type": "product"
      }
    ],
    "863": [
      {
        "id": "weakness:bypass the SOFA Hessian blacklist protection mechanism",
        "keyphrase": "bypass the SOFA Hessian blacklist protection mechanism",
        "type": "weakness"
      },
      {
        "id": "weakness:deserialization",
        "keyphrase": "deserialization",
        "type": "weakness"
      },
      {
        "id": "product:SOFA Hessian protocol",
        "keyphrase": "SOFA Hessian protocol",
        "type": "product"
      }
    ],
    "285": [
      {
        "id": "weakness:bypass the SOFA Hessian blacklist protection mechanism",
        "keyphrase": "bypass the SOFA Hessian blacklist protection mechanism",
        "type": "weakness"
      },
      {
        "id": "weakness:deserialization",
        "keyphrase": "deserialization",
        "type": "weakness"
      }
    ],
    "287": [
      {
        "id": "weakness:bypass the SOFA Hessian blacklist protection mechanism",
        "keyphrase": "bypass the SOFA Hessian blacklist protection mechanism",
        "type": "weakness"
      },
      {
        "id": "product:SOFA Hessian protocol",
        "keyphrase": "SOFA Hessian protocol",
        "type": "product"
      }
    ],
    "918": [
      {
        "id": "weakness:deserialization",
        "keyphrase": "deserialization",
        "type": "weakness"
      }
    ],
    "1284": [
      {
        "id": "product:SOFA Hessian protocol",
        "keyphrase": "SOFA Hessian protocol",
        "type": "product"
      }
    ]
  }
}