{
  "method": "sparse_combined",
  "query": "In the Linux kernel, the following vulnerability has been resolved pinctrl fix deadlock in create_pinctrl() when handling -EPROBE_DEFER In create_pinctrl(), pinctrl_maps_mutex is acquired before calling add_setting(). If add_setting() returns -EPROBE_DEFER, create_pinctrl() calls pinctrl_free(). However, pinctrl_free() attempts to acquire pinctrl_maps_mutex, which is already held by create_pinctrl(), leading to a potential deadlock. This patch resolves the issue by releasing pinctrl_maps_mutex before calling pinctrl_free(), preventing the deadlock. This bug was discovered and resolved using Coverity Static Analysis Security Testing (SAST) by Synopsys, Inc.",
  "keyphrases": {
    "rootcause": [
      "pinctrl_maps_mutex acquired before calling add_setting()",
      "add_setting() returns -EPROBE_DEFER"
    ],
    "weakness": [
      "deadlock"
    ]
  },
  "timestamp": "2025-07-12T03:38:47.353730",
  "results_count": 14,
  "results_summary": [
    {
      "doc_id": "667",
      "name": "Improper Locking",
      "score": 425.1931083524738
    },
    {
      "doc_id": "833",
      "name": "Deadlock",
      "score": 418.2808608674527
    },
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 346.1638732339626
    },
    {
      "doc_id": "88",
      "name": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
      "score": 306.7968674591941
    },
    {
      "doc_id": "663",
      "name": "Use of a Non-reentrant Function in a Concurrent Context",
      "score": 304.3282736779064
    }
  ]
}