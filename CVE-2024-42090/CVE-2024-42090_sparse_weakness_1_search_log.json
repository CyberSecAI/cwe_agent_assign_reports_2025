{
  "method": "sparse_weakness_1",
  "query": "In the Linux kernel, the following vulnerability has been resolved pinctrl fix deadlock in create_pinctrl() when handling -EPROBE_DEFER In create_pinctrl(), pinctrl_maps_mutex is acquired before calling add_setting(). If add_setting() returns -EPROBE_DEFER, create_pinctrl() calls pinctrl_free(). However, pinctrl_free() attempts to acquire pinctrl_maps_mutex, which is already held by create_pinctrl(), leading to a potential deadlock. This patch resolves the issue by releasing pinctrl_maps_mutex before calling pinctrl_free(), preventing the deadlock. This bug was discovered and resolved using Coverity Static Analysis Security Testing (SAST) by Synopsys, Inc.",
  "keyphrases": {
    "weakness": "deadlock"
  },
  "timestamp": "2025-07-12T03:38:47.351772",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "667",
      "name": "Improper Locking",
      "score": 416.85016514819955
    },
    {
      "doc_id": "833",
      "name": "Deadlock",
      "score": 411.7460585053803
    },
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 313.79032972201264
    },
    {
      "doc_id": "663",
      "name": "Use of a Non-reentrant Function in a Concurrent Context",
      "score": 290.4363415647741
    },
    {
      "doc_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "score": 277.0922016116916
    }
  ]
}