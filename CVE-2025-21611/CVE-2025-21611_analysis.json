{
  "cve_id": "CVE-2025-21611",
  "description": "tgstation-server is a production scale tool for BYOND server management. Prior to 6.12.3, roles used to authorize API methods were incorrectly ORd instead of ANDed with the role used to determine if a user was enabled. This allows enabled users access to most, but not all, authorized actions regardless of their permissions. Notably, the WriteUsers right is unaffected so users may not use this bug to permanently elevate their account permissions. The fix is release in tgstation-server-v6.12.3.",
  "key_phrases": {
    "rootcause": "incorrectly ORed instead of ANDed",
    "weakness": "",
    "impact": "enabled users access to most, but not all, authorized actions regardless of their permissions",
    "vector": "",
    "attacker": "enabled users",
    "product": "tgstation-server",
    "version": "Prior to 6.12.3",
    "component": ""
  },
  "reference_content": "```\n- Root cause of vulnerability: Roles used to authorize API methods were incorrectly OR'd instead of AND'ed with the role used to determine if a user was enabled.\n- Weaknesses/vulnerabilities present: Allows enabled users access to most, but not all, authorized actions regardless of their permissions.\n- Impact of exploitation: Unauthorized access to API methods.\n- Attack vectors: N/A\n- Required attacker capabilities/position: An enabled user.\n- Mitigation or fix: The fix has been applied in commit e7b1189 and released in tgstation-server-v6.12.3.\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-863 | Incorrect Authorization | 0.9 | Class | Primary CWE | Allowed-with-Review |\n| CWE-266 | Incorrect Privilege Assignment | 0.7 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-863, \"Incorrect Authorization,\" which is a Class-level CWE. Several potential child CWEs could be considered for more specificity, but the description does not provide enough detail to confidently select a more specific base or variant. CWE-266 \"Incorrect Privilege Assignment\" is related as a potential cause but the vulnerability description focuses more on the authorization logic itself being flawed rather than the privilege assignment being the root cause. Therefore, CWE-863 is more appropriate as the primary CWE.\n\n```mermaid\ngraph TD\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe266[\"CWE-266: Incorrect Privilege Assignment\"]\n\n    cwe863 -->|PEEROF| cwe266\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe863 primary\n    class cwe266 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **incorrectly ORed instead of ANDed** roles in the authorization logic (CWE-863), leading to enabled users gaining unauthorized access to API methods.\n\n## Summary of Analysis\nThe initial assessment identified CWE-863 as the primary candidate due to the **incorrect authorization** logic. The retriever results also suggested CWE-266, CWE-285, CWE-269, and others. However, after reviewing the vulnerability description and the provided guidance, CWE-863 remains the most appropriate primary CWE. The description explicitly states that the roles were **incorrectly ORed instead of ANDed**, indicating a flaw in the authorization check itself, aligning perfectly with CWE-863. CWE-266 is a possible secondary candidate because the **incorrect** logical operation could be caused by an incorrect privilege assignment, but more likely points to a coding error in the authorization check.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-266: Incorrect Privilege Assignment\n**Abstraction Level**: Base\n**Similarity Score**: 1394.24\n**Source**: sparse\n\n**Description**:\nA product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-863: Incorrect Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 1548.64\n**Source**: sparse\n\n**Description**:\nThe product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## Vulnerability Description\ntgstation-server is a production scale tool for BYOND server management. Prior to 6.12.3, roles used to authorize API methods were **incorrectly ORd instead of ANDed** with the role used to determine if a user was enabled. This allows enabled users access to most, but not all, authorized actions regardless of their permissions. Notably, the WriteUsers right is unaffected so users may not use this bug to permanently elevate their account permissions. The fix is release in tgstation-server-v6.12.3.\n\n### Vulnerability Description Key Phrases\n- **rootcause:** **incorrectly ORed instead of ANDed**\n- **impact:** enabled users access to most, but not all, authorized actions regardless of their permissions\n- **attacker:** enabled users\n- **product:** tgstation-server\n- **version:** Prior to 6.12.3",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-863 | Incorrect Authorization | 0.9 | Class | Primary CWE | Allowed-with-Review |\n| CWE-266 | Incorrect Privilege Assignment | 0.7 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-863, \"Incorrect Authorization,\" which is a Class-level CWE. Several potential child CWEs could be considered for more specificity, but the description does not provide enough detail to confidently select a more specific base or variant. CWE-266 \"Incorrect Privilege Assignment\" is related as a potential cause but the vulnerability description focuses more on the authorization logic itself being flawed rather than the privilege assignment being the root cause. Therefore, CWE-863 is more appropriate as the primary CWE.\n\n```mermaid\ngraph TD\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe266[\"CWE-266: Incorrect Privilege Assignment\"]\n\n    cwe863 -->|PEEROF| cwe266\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe863 primary\n    class cwe266 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **incorrectly ORed instead of ANDed** roles in the authorization logic (CWE-863), leading to enabled users gaining unauthorized access to API methods.\n\n## Summary of Analysis\nThe initial assessment identified CWE-863 as the primary candidate due to the **incorrect authorization** logic. The retriever results also suggested CWE-266, CWE-285, CWE-269, and others. However, after reviewing the vulnerability description and the provided guidance, CWE-863 remains the most appropriate primary CWE. The description explicitly states that the roles were **incorrectly ORed instead of ANDed**, indicating a flaw in the authorization check itself, aligning perfectly with CWE-863. CWE-266 is a possible secondary candidate because the **incorrect** logical operation could be caused by an incorrect privilege assignment, but more likely points to a coding error in the authorization check.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-266: Incorrect Privilege Assignment\n**Abstraction Level**: Base\n**Similarity Score**: 1394.24\n**Source**: sparse\n\n**Description**:\nA product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-863: Incorrect Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 1548.64\n**Source**: sparse\n\n**Description**:\nThe product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## Vulnerability Description\ntgstation-server is a production scale tool for BYOND server management. Prior to 6.12.3, roles used to authorize API methods were **incorrectly ORd instead of ANDed** with the role used to determine if a user was enabled. This allows enabled users access to most, but not all, authorized actions regardless of their permissions. Notably, the WriteUsers right is unaffected so users may not use this bug to permanently elevate their account permissions. The fix is release in tgstation-server-v6.12.3.\n\n### Vulnerability Description Key Phrases\n- **rootcause:** **incorrectly ORed instead of ANDed**\n- **impact:** enabled users access to most, but not all, authorized actions regardless of their permissions\n- **attacker:** enabled users\n- **product:** tgstation-server\n- **version:** Prior to 6.12.3\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-269:**\n- 269 (Improper Privilege Management) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "267",
        "name": "Privilege Defined With Unsafe Actions",
        "source": "sparse"
      },
      "similarity": 484.6444374732589
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 467.08691529798284
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 453.3610330780554
    },
    {
      "metadata": {
        "doc_id": "269",
        "name": "Improper Privilege Management",
        "source": "sparse"
      },
      "similarity": 441.76990875050285
    },
    {
      "metadata": {
        "doc_id": "287",
        "name": "Improper Authentication",
        "source": "sparse"
      },
      "similarity": 421.6452790144712
    },
    {
      "metadata": {
        "doc_id": "1390",
        "name": "Weak Authentication",
        "source": "sparse"
      },
      "similarity": 416.1200422702768
    },
    {
      "metadata": {
        "doc_id": "200",
        "name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "source": "sparse"
      },
      "similarity": 413.2730355777778
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 409.5326801552071
    },
    {
      "metadata": {
        "doc_id": "1270",
        "name": "Generation of Incorrect Security Tokens",
        "type": "Base",
        "original_content": "The product implements a Security Token mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Tokens generated in the system are incorrect.",
        "keyphrase_source": "rootcause:incorrectly ORed instead of ANDed",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.41739433292954775,
            "graph": 1.6298991320865577
          }
        }
      },
      "similarity": 0.41739433292954775
    },
    {
      "doc_id": "613",
      "text": "CWE-613: Insufficient Session Expiration",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "613",
        "name": "Insufficient Session Expiration",
        "type": "base",
        "original_content": "CWE-613: Insufficient Session Expiration",
        "relationships": [
          {
            "source_id": "613",
            "target_id": "352",
            "label": "REQUIREDBY",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "613",
            "target_id": "287",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "613",
            "target_id": "672",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "613",
            "target_id": "672",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "672",
            "target_id": "613",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "352",
            "target_id": "613",
            "label": "REQUIRES",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "287",
            "target_id": "613",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "287",
                  "613",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "287"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "287",
                  "613",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "287"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "613",
                  "287",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "287"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-269",
      "CWE-285",
      "CWE-266"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}