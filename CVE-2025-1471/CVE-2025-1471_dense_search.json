{
  "retriever": "dense",
  "query": "In Eclipse OMR versions 0.2.0 to 0.4.0, some of the z/OS atoe print functions use a constant length buffer for string conversion. If the input format string and arguments are larger than the buffer size then buffer overflow occurs. Beginning in version 0.5.0, the conversion buffers are sized correctly and checked appropriately to prevent buffer overflows.",
  "keyphrases": {
    "rootcause": [
      "constant length buffer for string conversion"
    ],
    "weakness": [
      "buffer overflow"
    ]
  },
  "timestamp": "2025-07-12 09:08:13",
  "cve_id": "CVE-2025-1471",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "806",
      "name": "Buffer Access Using Size of Source Buffer",
      "type": "Variant",
      "score": 0.46205804884445756
    },
    {
      "cwe_id": "805",
      "name": "Buffer Access with Incorrect Length Value",
      "type": "Base",
      "score": 0.4486362129192879
    },
    {
      "cwe_id": "124",
      "name": "Buffer Underwrite ('Buffer Underflow')",
      "type": "Base",
      "score": 0.4350054599444144
    },
    {
      "cwe_id": "680",
      "name": "Integer Overflow to Buffer Overflow",
      "type": "Compound",
      "score": 0.4288790300959387
    },
    {
      "cwe_id": "785",
      "name": "Use of Path Manipulation Function without Maximum-sized Buffer",
      "type": "Variant",
      "score": 0.424590765251923
    },
    {
      "cwe_id": "126",
      "name": "Buffer Over-read",
      "type": "Variant",
      "score": 0.41053470617151067
    },
    {
      "cwe_id": "131",
      "name": "Incorrect Calculation of Buffer Size",
      "type": "Base",
      "score": 0.4030675185069328
    },
    {
      "cwe_id": "127",
      "name": "Buffer Under-read",
      "type": "Variant",
      "score": 0.4005300719759334
    },
    {
      "cwe_id": "130",
      "name": "Improper Handling of Length Parameter Inconsistency",
      "type": "Base",
      "score": 0.4001177121132258
    },
    {
      "cwe_id": "576",
      "name": "EJB Bad Practices: Use of Java I/O",
      "type": "Variant",
      "score": 0.3982351781419451
    },
    {
      "cwe_id": "135",
      "name": "Incorrect Calculation of Multi-Byte String Length",
      "type": "Base",
      "score": 0.3914356642883839
    },
    {
      "cwe_id": "786",
      "name": "Access of Memory Location Before Start of Buffer",
      "type": "Base",
      "score": 0.38775465024786465
    },
    {
      "cwe_id": "1325",
      "name": "Improperly Controlled Sequential Memory Allocation",
      "type": "Base",
      "score": 0.35643263348601145
    },
    {
      "cwe_id": "834",
      "name": "Excessive Iteration",
      "type": "Class",
      "score": 0.3542224069490673
    },
    {
      "cwe_id": "606",
      "name": "Unchecked Input for Loop Condition",
      "type": "Base",
      "score": 0.3530606676204818
    },
    {
      "cwe_id": "197",
      "name": "Numeric Truncation Error",
      "type": "Base",
      "score": 0.35212719843570706
    },
    {
      "cwe_id": "440",
      "name": "Expected Behavior Violation",
      "type": "Base",
      "score": 0.3513114097001921
    },
    {
      "cwe_id": "409",
      "name": "Improper Handling of Highly Compressed Data (Data Amplification)",
      "type": "Base",
      "score": 0.3508369135041345
    },
    {
      "cwe_id": "537",
      "name": "Java Runtime Error Message Containing Sensitive Information",
      "type": "Variant",
      "score": 0.3486047906290948
    },
    {
      "cwe_id": "575",
      "name": "EJB Bad Practices: Use of AWT Swing",
      "type": "Variant",
      "score": 0.34853145288969056
    }
  ]
}