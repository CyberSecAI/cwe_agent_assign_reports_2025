{
  "query": "Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. When using `--auth-mode=client`, Archived Workflows can be retrieved with a fake or spoofed token via the GET Workflow endpoint `/api/v1/workflows/{namespace}/{name}` or when using `--auth-mode=sso`, all Archived Workflows can be retrieved with a valid token via the GET Workflow endpoint `/api/v1/workflows/{namespace}/{name}`. No authentication is performed by the Server itself on `client` tokens. Authentication & authorization is instead delegated to the k8s API server. However, the Workflow Archive does not interact with k8s, and so any token that looks valid will be considered authenticated, even if it is not a k8s token or even if the token has no RBAC for Argo. To handle the lack of pass-through k8s authN/authZ, the Workflow Archive specifically does the equivalent of a `kubectl auth can-i` check for respective methods. In 3.5.7 and 3.5.8, the auth check was accidentally removed on the GET Workflow endpoints fallback to archived workflows on these lines, allowing archived workflows to be retrieved with a fake token. This vulnerability is fixed in 3.6.2 and 3.5.13.",
  "count": 10,
  "results": [
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "abstraction": "Class",
      "score": 1155.689650395003,
      "original_score": 1155.689650395003,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "214",
      "name": "Invocation of Process Using Visible Sensitive Information",
      "abstraction": "Base",
      "score": 1136.744051179467,
      "original_score": 1136.744051179467,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "287",
      "name": "Improper Authentication",
      "abstraction": "Class",
      "score": 1064.2742534168387,
      "original_score": 1064.2742534168387,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "1390",
      "name": "Weak Authentication",
      "abstraction": "Class",
      "score": 1057.1824302583848,
      "original_score": 1057.1824302583848,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "285",
      "name": "Improper Authorization",
      "abstraction": "Class",
      "score": 1045.2927998400876,
      "original_score": 1045.2927998400876,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "639",
      "name": "Authorization Bypass Through User-Controlled Key",
      "abstraction": "Base",
      "score": 1032.609692305352,
      "original_score": 1032.609692305352,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "306",
      "name": "Missing Authentication for Critical Function",
      "abstraction": "Base",
      "score": 1028.741214775421,
      "original_score": 1028.741214775421,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "201",
      "name": "Insertion of Sensitive Information Into Sent Data",
      "abstraction": "Base",
      "score": 1022.4348329741238,
      "original_score": 1022.4348329741238,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "295",
      "name": "Improper Certificate Validation",
      "abstraction": "Base",
      "score": 969.8697408801246,
      "original_score": 969.8697408801246,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "668",
      "name": "Exposure of Resource to Wrong Sphere",
      "abstraction": "Class",
      "score": 961.9677916771768,
      "original_score": 961.9677916771768,
      "mapping_usage": "Discouraged"
    }
  ],
  "statistics": {
    "min": 961.9677916771768,
    "max": 1155.689650395003,
    "mean": 1047.4806457701977,
    "median": 1038.9512460727196,
    "count": 10
  }
}