{
  "method": "sparse_weakness_1",
  "query": "gnark is a fast zk-SNARK library that offers a high-level API to design circuits. Versions prior to 0.11.0 have a soundness issue - in case of multiple commitments used inside the circuit the prover is able to choose all but the last commitment. As gnark uses the commitments for optimized non-native multiplication, lookup checks etc. as random challenges, then it could impact the soundness of the whole circuit. However, using multiple commitments has been discouraged due to the additional cost to the verifier and it has not been supported in the recursive in-circuit Groth16 verifier and Solidity verifier. gnarks maintainers expect the impact of the issue be very small - only for the users who have implemented the native Groth16 verifier or are using it with multiple commitments. We do not have information of such users. The issue has been patched in version 0.11.0. As a workaround, users should follow gnark maintainers recommendation to use only a single commitment and then derive in-circuit commitments as needed using the `std/multicommit` package.",
  "keyphrases": {
    "weakness": "multiple commitments"
  },
  "timestamp": "2025-07-12T04:19:38.754580",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "1390",
      "name": "Weak Authentication",
      "score": 787.4948920334326
    },
    {
      "doc_id": "863",
      "name": "Incorrect Authorization",
      "score": 767.1021721829167
    },
    {
      "doc_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 763.5698358822838
    },
    {
      "doc_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "score": 752.4202801651387
    },
    {
      "doc_id": "190",
      "name": "Integer Overflow or Wraparound",
      "score": 750.7471201878137
    }
  ]
}