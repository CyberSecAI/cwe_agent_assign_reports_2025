{
  "method": "sparse_weakness_1",
  "query": "In the Linux kernel, the following vulnerability has been resolved ipv4 ip_tunnel Fix suspicious RCU usage warning in ip_tunnel_find() The per-netns IP tunnel hash table is protected by the RTNL mutex and ip_tunnel_find() is only called from the control path where the mutex is taken. Add a lockdep expression to hlist_for_each_entry_rcu() in ip_tunnel_find() in order to validate that the mutex is held and to silence the suspicious RCU usage warning [1]. [1] WARNING suspicious RCU usage 6.12.0-rc3-custom-gd95d9a31aceb #139 Not tainted ----------------------------- net/ipv4/ip_tunnel.c221 RCU-list traversed in non-reader section!! other info that might help us debug this rcu_scheduler_active = 2, debug_locks = 1 1 lock held by ip/362 #0 ffffffff86fc7cb0 (rtnl_mutex){+.+.}-{33}, at rtnetlink_rcv_msg+0x377/0xf60 stack backtrace CPU 12 UID 0 PID 362 Comm ip Not tainted 6.12.0-rc3-custom-gd95d9a31aceb #139 Hardware name Bochs Bochs, BIOS Bochs 01/01/2011 Call Trace dump_stack_lvl+0xba/0x110 lockdep_rcu_suspicious.cold+0x4f/0xd6 ip_tunnel_find+0x435/0x4d0 ip_tunnel_newlink+0x517/0x7a0 ipgre_newlink+0x14c/0x170 __rtnl_newlink+0x1173/0x19c0 rtnl_newlink+0x6c/0xa0 rtnetlink_rcv_msg+0x3cc/0xf60 netlink_rcv_skb+0x171/0x450 netlink_unicast+0x539/0x7f0 netlink_sendmsg+0x8c1/0xd80 ____sys_sendmsg+0x8f9/0xc20 ___sys_sendmsg+0x197/0x1e0 __sys_sendmsg+0x122/0x1f0 do_syscall_64+0xbb/0x1d0 entry_SYSCALL_64_after_hwframe+0x77/0x7f",
  "keyphrases": {
    "weakness": "The code was missing a lockdep expression to validate the RTNL mutex is held before using hlist_for_each_entry_rcu()."
  },
  "timestamp": "2025-07-13T20:00:54.587396",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "667",
      "name": "Improper Locking",
      "score": 575.5405653824117
    },
    {
      "doc_id": "400",
      "name": "Uncontrolled Resource Consumption",
      "score": 551.2382713050209
    },
    {
      "doc_id": "201",
      "name": "Insertion of Sensitive Information Into Sent Data",
      "score": 545.782487410657
    },
    {
      "doc_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 544.9321793408408
    },
    {
      "doc_id": "1333",
      "name": "Inefficient Regular Expression Complexity",
      "score": 544.4084365235603
    }
  ]
}