{
  "query": "In the Linux kernel, the following vulnerability has been resolved i3c Use i3cdev->desc->info instead of calling i3c_device_get_info() to avoid deadlock A deadlock may happen since the i3c_master_register() acquires &i3cbus->lock twice. See the log below. Use i3cdev->desc->info instead of calling i3c_device_info() to avoid acquiring the lock twice. v2 - Modified the title and commit message ============================================ WARNING possible recursive locking detected 6.11.0-mainline -------------------------------------------- init/1 is trying to acquire lock f1ffff80a6a40dc0 (&i3cbus->lock){++++}-{33}, at i3c_bus_normaluse_lock but task is already holding lock f1ffff80a6a40dc0 (&i3cbus->lock){++++}-{33}, at i3c_master_register other info that might help us debug this Possible unsafe locking scenario CPU0 ---- lock(&i3cbus->lock) lock(&i3cbus->lock) *** DEADLOCK *** May be due to missing lock nesting notation 2 locks held by init/1 #0 fcffff809b6798f8 (&dev->mutex){....}-{33}, at __driver_attach #1 f1ffff80a6a40dc0 (&i3cbus->lock){++++}-{33}, at i3c_master_register stack backtrace CPU 6 UID 0 PID 1 Comm init Call trace dump_backtrace+0xfc/0x17c show_stack+0x18/0x28 dump_stack_lvl+0x40/0xc0 dump_stack+0x18/0x24 print_deadlock_bug+0x388/0x390 __lock_acquire+0x18bc/0x32ec lock_acquire+0x134/0x2b0 down_read+0x50/0x19c i3c_bus_normaluse_lock+0x14/0x24 i3c_device_get_info+0x24/0x58 i3c_device_uevent+0x34/0xa4 dev_uevent+0x310/0x384 kobject_uevent_env+0x244/0x414 kobject_uevent+0x14/0x20 device_add+0x278/0x460 device_register+0x20/0x34 i3c_master_register_new_i3c_devs+0x78/0x154 i3c_master_register+0x6a0/0x6d4 mtk_i3c_master_probe+0x3b8/0x4d8 platform_probe+0xa0/0xe0 really_probe+0x114/0x454 __driver_probe_device+0xa0/0x15c driver_probe_device+0x3c/0x1ac __driver_attach+0xc4/0x1f0 bus_for_each_dev+0x104/0x160 driver_attach+0x24/0x34 bus_add_driver+0x14c/0x294 driver_register+0x68/0x104 __platform_driver_register+0x20/0x30 init_module+0x20/0xfe4 do_one_initcall+0x184/0x464 do_init_module+0x58/0x1ec load_module+0xefc/0x10c8 __arm64_sys_finit_module+0x238/0x33c invoke_syscall+0x58/0x10c el0_svc_common+0xa8/0xdc do_el0_svc+0x1c/0x28 el0_svc+0x50/0xac el0t_64_sync_handler+0x70/0xbc el0t_64_sync+0x1a8/0x1ac",
  "count": 20,
  "results": [
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "abstraction": "Class",
      "score": 0.6078397421077921,
      "original_score": 0.6078397421077921,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "413",
      "name": "Improper Resource Locking",
      "abstraction": "Base",
      "score": 0.5984755412793705,
      "original_score": 0.5984755412793705,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "abstraction": "Base",
      "score": 0.5945076851853865,
      "original_score": 0.5945076851853865,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "abstraction": "Base",
      "score": 0.5704284073821284,
      "original_score": 0.5704284073821284,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "abstraction": "Class",
      "score": 0.5602175426348281,
      "original_score": 0.5602175426348281,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 0.558088523480955,
      "original_score": 0.558088523480955,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "665",
      "name": "Improper Initialization",
      "abstraction": "Class",
      "score": 0.5388575215998082,
      "original_score": 0.5388575215998082,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "abstraction": "Base",
      "score": 0.5351911056063369,
      "original_score": 0.5351911056063369,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "abstraction": "Variant",
      "score": 0.534963763593643,
      "original_score": 0.534963763593643,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "119",
      "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
      "abstraction": "Class",
      "score": 0.5335712318909203,
      "original_score": 0.5335712318909203,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "782",
      "name": "Exposed IOCTL with Insufficient Access Control",
      "abstraction": "Variant",
      "score": 0.510704365200104,
      "original_score": 0.510704365200104,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "121",
      "name": "Stack-based Buffer Overflow",
      "abstraction": "Variant",
      "score": 0.5099571597949282,
      "original_score": 0.5099571597949282,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1256",
      "name": "Improper Restriction of Software Interfaces to Hardware Features",
      "abstraction": "Base",
      "score": 0.5096842045882338,
      "original_score": 0.5096842045882338,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "126",
      "name": "Buffer Over-read",
      "abstraction": "Variant",
      "score": 0.5094508375410658,
      "original_score": 0.5094508375410658,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "abstraction": "Variant",
      "score": 0.5082879460098374,
      "original_score": 0.5082879460098374,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "820",
      "name": "Missing Synchronization",
      "abstraction": "Base",
      "score": 0.5036646332597123,
      "original_score": 0.5036646332597123,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "abstraction": "Base",
      "score": 0.5033637622104352,
      "original_score": 0.5033637622104352,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "abstraction": "Base",
      "score": 0.5031678316992716,
      "original_score": 0.5031678316992716,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1233",
      "name": "Security-Sensitive Hardware Controls with Missing Lock Bit Protection",
      "abstraction": "Base",
      "score": 0.5030217707505502,
      "original_score": 0.5030217707505502,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 0.5005491012837773,
      "original_score": 0.5005491012837773,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 0.5005491012837773,
    "max": 0.6078397421077921,
    "mean": 0.5346996338549543,
    "median": 0.5221377985455121,
    "count": 20
  }
}