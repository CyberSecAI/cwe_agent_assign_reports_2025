{
  "cve_id": "CVE-2024-11657",
  "description": "A vulnerability, which was classified as critical, was found in EnGenius ENH1350EXT, ENS500-AC and ENS620EXT up to 20241118. Affected is an unknown function of the file /admin/network/diag_nslookup. The manipulation of the argument diag_nslookup leads to **command injection**. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The vendor was contacted early about this disclosure but did not respond in any way.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "command injection",
    "impact": "",
    "vector": "manipulation of diag_nslookup argument",
    "attacker": "",
    "product": [
      "EnGenius ENH1350EXT",
      "ENS500-AC",
      "ENS620EXT"
    ],
    "version": "up to 20241118",
    "component": "/admin/network/diag_nslookup"
  },
  "reference_content": "Based on the provided content, here's an analysis of the vulnerability:\n\n**Root Cause of Vulnerability:**\n\n*   The vulnerability stems from the lack of input sanitization in the `diag_nslookup` interface of ENGENIUS routers. User-supplied input to `diag_nslookup` is directly passed to a system command execution function (`diag_command`) without any filtering or validation.\n\n**Weaknesses/Vulnerabilities Present:**\n\n*   **Command Injection:** The primary vulnerability is command injection. By inserting shell metacharacters (e.g., backticks `` ` ``) and commands into the `diag_nslookup` parameter, an attacker can execute arbitrary system commands on the router.\n\n**Impact of Exploitation:**\n\n*   **Arbitrary Code Execution:** Successful exploitation allows the attacker to execute arbitrary code with the privileges of the web server process.\n*   **Full System Compromise:** This can lead to complete compromise of the router, including access to sensitive data, modification of system settings, and potential use of the router as part of a botnet.\n\n**Attack Vectors:**\n\n*   **Web Interface:** The attack is performed via the web interface of the router, specifically by making requests to the `/admin/network/diag_nslookup` endpoint.\n*   **HTTP GET Request:** The provided proof-of-concept uses an HTTP GET request to inject the malicious command.\n\n**Required Attacker Capabilities/Position:**\n\n*   **Authentication:** The attacker needs to be authenticated to the router's administrative interface.\n*   **Network Access:** The attacker must have network access to the router's web interface.\n\n**Additional Information:**\n\n*   **Affected Devices:** Multiple ENGENIUS router devices are affected, including ENH1350EXT, ENS500-AC, and ENS620EXT.\n*  **Lack of Vendor Response:** The content mentions that the researchers attempted to contact the manufacturer, but there was no response.\n*   **Lua code analysis**: The analysis also mentions the need for reverse engineering the Lua bytecode for further analysis, confirming the vulnerability is present within the router's firmware logic.\n\nThis content provides more details than a typical CVE description.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-78 | Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') | 1.0 | Base | Allowed | Primary CWE |\n| CWE-74 | Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') | 0.4 | Class | Discouraged | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship influencing the CWE selection is the hierarchical relationship between CWE-74 and CWE-78. CWE-78 is a child of CWE-74, representing a more specific type of injection related to OS commands. The evidence strongly supports the presence of OS command injection, making CWE-78 the more appropriate choice. CWE-77, although similar, is a Class-level CWE and thus less specific than CWE-78.\n\n```mermaid\ngraph TD\n    cwe78[\"CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n    \n    cwe78 -->|CHILDOF| cwe74\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe78 primary\n    class cwe74 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **improper neutralization** of input, specifically the `diag_nslookup` argument, which directly leads to **command injection**. This allows for arbitrary code execution, potentially leading to full system compromise. The root cause is the lack of input validation, with the ultimate impact being arbitrary command execution.\n  - The **Primary CWE** is **CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')** because it identifies the issue that led to the vulnerability.\n\n## Summary of Analysis\nThe analysis strongly supports the selection of CWE-78 as the primary CWE. The vulnerability description explicitly mentions \"command injection\" due to the manipulation of the `diag_nslookup` argument. The CVE Reference Links Content Summary confirms that user-supplied input is passed to a system command execution function without proper filtering or validation. This directly aligns with the characteristics of CWE-78. The high retriever score and the base level abstraction further support this decision.\n\nThe selection of CWE-78 is based on concrete evidence from the provided text, particularly the vulnerability description and the CVE Reference Links Content Summary. The hierarchical relationship analysis reinforces the choice, as CWE-78 is a more specific child of CWE-74. The mapping guidance for CWE-78 allows its usage, further validating the decision.\n\nThe vulnerability chain clearly indicates that the root cause is the **improper neutralization** of special elements in the OS command, leading to command injection. CWE-78 directly addresses this root cause and its associated impact.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**Evidence:** The description explicitly states \"manipulation of the argument diag_nslookup leads to **command injection**\" and the CVE Reference Links Content Summary states \"User-supplied input to `diag_nslookup` is directly passed to a system command execution function (`diag_command`) without any filtering or validation.\"\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n**Evidence:** While the vulnerability involves injection, the specific type is command injection, making the more specific CWE-78 a better fit. However, CWE-74 is a parent of CWE-78 and indicates injection is occuring.\n\nThe retriever listed several other CWEs, but they are not as relevant as CWE-78:\n\n*   CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection') - This is a Class-level CWE, making it less specific than CWE-78.\n*   CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') - This relates to SQL injection, which is not indicated in the vulnerability description.\n*   CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') - This relates to Cross-site Scripting, which is not indicated in the vulnerability description.\n*   CWE-1336: Improper Neutralization of Special Elements Used in a Template Engine - This relates to template injection, which is not indicated in the vulnerability description.\n*   CWE-434: Unrestricted Upload of File with Dangerous Type - This relates to file upload vulnerabilities, which is not indicated in the vulnerability description.\n*   CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection') - This relates to CRLF injection, which is not indicated in the vulnerability description.\n*   CWE-306: Missing Authentication for Critical Function - While authentication is required, the primary issue is command injection, not missing authentication.\n*   CWE-912: Hidden Functionality - This is not indicated in the vulnerability description.\n*   CWE-184: Incomplete List of Disallowed Inputs - This weakness is not described in the summary.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-78 | Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') | 1.0 | Base | Allowed | Primary CWE |\n| CWE-74 | Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') | 0.4 | Class | Discouraged | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship influencing the CWE selection is the hierarchical relationship between CWE-74 and CWE-78. CWE-78 is a child of CWE-74, representing a more specific type of injection related to OS commands. The evidence strongly supports the presence of OS command injection, making CWE-78 the more appropriate choice. CWE-77, although similar, is a Class-level CWE and thus less specific than CWE-78.\n\n```mermaid\ngraph TD\n    cwe78[\"CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n    \n    cwe78 -->|CHILDOF| cwe74\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe78 primary\n    class cwe74 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **improper neutralization** of input, specifically the `diag_nslookup` argument, which directly leads to **command injection**. This allows for arbitrary code execution, potentially leading to full system compromise. The root cause is the lack of input validation, with the ultimate impact being arbitrary command execution.\n  - The **Primary CWE** is **CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')** because it identifies the issue that led to the vulnerability.\n\n## Summary of Analysis\nThe analysis strongly supports the selection of CWE-78 as the primary CWE. The vulnerability description explicitly mentions \"command injection\" due to the manipulation of the `diag_nslookup` argument. The CVE Reference Links Content Summary confirms that user-supplied input is passed to a system command execution function without proper filtering or validation. This directly aligns with the characteristics of CWE-78. The high retriever score and the base level abstraction further support this decision.\n\nThe selection of CWE-78 is based on concrete evidence from the provided text, particularly the vulnerability description and the CVE Reference Links Content Summary. The hierarchical relationship analysis reinforces the choice, as CWE-78 is a more specific child of CWE-74. The mapping guidance for CWE-78 allows its usage, further validating the decision.\n\nThe vulnerability chain clearly indicates that the root cause is the **improper neutralization** of special elements in the OS command, leading to command injection. CWE-78 directly addresses this root cause and its associated impact.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**Evidence:** The description explicitly states \"manipulation of the argument diag_nslookup leads to **command injection**\" and the CVE Reference Links Content Summary states \"User-supplied input to `diag_nslookup` is directly passed to a system command execution function (`diag_command`) without any filtering or validation.\"\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n**Evidence:** While the vulnerability involves injection, the specific type is command injection, making the more specific CWE-78 a better fit. However, CWE-74 is a parent of CWE-78 and indicates injection is occuring.\n\nThe retriever listed several other CWEs, but they are not as relevant as CWE-78:\n\n*   CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection') - This is a Class-level CWE, making it less specific than CWE-78.\n*   CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') - This relates to SQL injection, which is not indicated in the vulnerability description.\n*   CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') - This relates to Cross-site Scripting, which is not indicated in the vulnerability description.\n*   CWE-1336: Improper Neutralization of Special Elements Used in a Template Engine - This relates to template injection, which is not indicated in the vulnerability description.\n*   CWE-434: Unrestricted Upload of File with Dangerous Type - This relates to file upload vulnerabilities, which is not indicated in the vulnerability description.\n*   CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection') - This relates to CRLF injection, which is not indicated in the vulnerability description.\n*   CWE-306: Missing Authentication for Critical Function - While authentication is required, the primary issue is command injection, not missing authentication.\n*   CWE-912: Hidden Functionality - This is not indicated in the vulnerability description.\n*   CWE-184: Incomplete List of Disallowed Inputs - This weakness is not described in the summary.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n**Chain starting from CWE-93:**\n- 93 (Improper Neutralization of CRLF Sequences ('CRLF Injection')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "77",
        "name": "Improper Neutralization of Special Elements used in a Command ('Command Injection')",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Command injection",
        "match_reason": "exact_match_whole_phrase"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "78",
        "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: OS Command Injection",
        "match_reason": "phrase_in_term_whole_phrase"
      },
      "similarity": 700.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 515.7496149341866
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 484.57224198196525
    },
    {
      "metadata": {
        "doc_id": "1336",
        "name": "Improper Neutralization of Special Elements Used in a Template Engine",
        "source": "sparse"
      },
      "similarity": 418.8810162468397
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse"
      },
      "similarity": 410.3397951829862
    },
    {
      "metadata": {
        "doc_id": "93",
        "name": "Improper Neutralization of CRLF Sequences ('CRLF Injection')",
        "source": "sparse"
      },
      "similarity": 401.26837315335956
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 398.57985734217317
    },
    {
      "metadata": {
        "doc_id": "912",
        "name": "Hidden Functionality",
        "type": "Class",
        "original_content": "The product contains functionality that is not documented, not part of the specification, and not accessible through an interface or command sequence that is obvious to the product's users or administrators.",
        "keyphrase_source": "weakness:command injection",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.6410901248021192
          }
        }
      },
      "similarity": 0.6410901248021192
    },
    {
      "doc_id": "184",
      "text": "CWE-184: Incomplete List of Disallowed Inputs",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "184",
        "name": "Incomplete List of Disallowed Inputs",
        "type": "base",
        "original_content": "CWE-184: Incomplete List of Disallowed Inputs",
        "relationships": [
          {
            "source_id": "184",
            "target_id": "692",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "434",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "78",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "79",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "1023",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "693",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "86",
            "target_id": "184",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "78",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "693",
            "target_id": "184",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "692",
            "target_id": "184",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "692",
            "target_id": "184",
            "label": "STARTSWITH",
            "properties": {
              "view_id": "709"
            }
          },
          {
            "source_id": "625",
            "target_id": "184",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "434",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "186",
            "target_id": "184",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1023",
            "target_id": "184",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "79",
                  "184",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "79"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "78",
                  "184",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "78"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "184",
                  "78",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "78"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-93",
      "CWE-77",
      "CWE-79",
      "CWE-1336",
      "CWE-306",
      "CWE-912",
      "CWE-74",
      "CWE-78",
      "CWE-184",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}