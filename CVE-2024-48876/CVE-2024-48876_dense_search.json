{
  "retriever": "dense",
  "query": "In the Linux kernel, the following vulnerability has been resolved stackdepot fix stack_depot_save_flags() in NMI context Per documentation, stack_depot_save_flags() was meant to be usable from NMI context if STACK_DEPOT_FLAG_CAN_ALLOC is unset. However, it still would try to take the pool_lock in an attempt to save a stack trace in the current pool (if space is available). This could result in deadlock if an NMI is handled while pool_lock is already held. To avoid deadlock, only try to take the lock in NMI context and give up if unsuccessful. The documentation is fixed to clearly convey this.",
  "keyphrases": {
    "weakness": [
      "deadlock"
    ]
  },
  "timestamp": "2025-07-12 05:11:21",
  "cve_id": "CVE-2024-48876",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "type": "Base",
      "score": 0.4687774726412277
    },
    {
      "cwe_id": "562",
      "name": "Return of Stack Variable Address",
      "type": "Base",
      "score": 0.45418527059573216
    },
    {
      "cwe_id": "413",
      "name": "Improper Resource Locking",
      "type": "Base",
      "score": 0.44521519693954575
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "type": "Class",
      "score": 0.44314644607338316
    },
    {
      "cwe_id": "1325",
      "name": "Improperly Controlled Sequential Memory Allocation",
      "type": "Base",
      "score": 0.4411317077444019
    },
    {
      "cwe_id": "1260",
      "name": "Improper Handling of Overlap Between Protected Memory Ranges",
      "type": "Base",
      "score": 0.4391580042295776
    },
    {
      "cwe_id": "1231",
      "name": "Improper Prevention of Lock Bit Modification",
      "type": "Base",
      "score": 0.42688836924672957
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "type": "Class",
      "score": 0.4268426498020909
    },
    {
      "cwe_id": "591",
      "name": "Sensitive Data Storage in Improperly Locked Memory",
      "type": "Variant",
      "score": 0.4262499856124484
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "type": "Base",
      "score": 0.42406364059974744
    },
    {
      "cwe_id": "121",
      "name": "Stack-based Buffer Overflow",
      "type": "Variant",
      "score": 0.4191778353656349
    },
    {
      "cwe_id": "244",
      "name": "Improper Clearing of Heap Memory Before Release ('Heap Inspection')",
      "type": "Variant",
      "score": 0.41856965496269394
    },
    {
      "cwe_id": "1342",
      "name": "Information Exposure through Microarchitectural State after Transient Execution",
      "type": "Base",
      "score": 0.4172878838243179
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "type": "Variant",
      "score": 0.4165789174362984
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "type": "Class",
      "score": 0.41469773829957723
    },
    {
      "cwe_id": "126",
      "name": "Buffer Over-read",
      "type": "Variant",
      "score": 0.41468248279672204
    },
    {
      "cwe_id": "1264",
      "name": "Hardware Logic with Insecure De-Synchronization between Control and Data Channels",
      "type": "Base",
      "score": 0.4145799297684015
    },
    {
      "cwe_id": "674",
      "name": "Uncontrolled Recursion",
      "type": "Class",
      "score": 0.41226835344658525
    },
    {
      "cwe_id": "1222",
      "name": "Insufficient Granularity of Address Regions Protected by Register Locks",
      "type": "Variant",
      "score": 0.4116758803726572
    },
    {
      "cwe_id": "1233",
      "name": "Security-Sensitive Hardware Controls with Missing Lock Bit Protection",
      "type": "Base",
      "score": 0.41108937992388495
    }
  ]
}