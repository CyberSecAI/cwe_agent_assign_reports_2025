{
  "cve_id": "CVE-2024-4350",
  "description": "Concrete CMS versions 9.0.0 to 9.3.2 and below 8.5.18 are vulnerable to Stored **XSS** in RSS Displayer when user input is stored and later embedded into responses. A rogue administrator could inject malicious code into fields due to **insufficient input validation**. The Concrete CMS security team gave this vulnerability a CVSS v3.1 score of 3.0 with a vector of AVN/ACH/PRH/UIN/SC/CL/IN/AN https//nvd.nist.gov/vuln-metrics/cvss/v3-calculator and a CVSS v4 score of 2.1 with vector CVSS4.0/AVN/ACH/ATN/PRH/UIN/VCL/VIN/VAN/SCN/SIN/SAN https//www.first.org/cvss/calculator/4.0#CVSS4.0/AVN/ACH/ATN/PRH/UIN/VCL/VIN/VAN/SCN/SIN/SAN Thanks, m3dium for reporting.",
  "key_phrases": {
    "rootcause": "insufficient input validation",
    "weakness": [
      "XSS",
      "cross-site scripting"
    ],
    "impact": "inject malicious code",
    "vector": "",
    "attacker": "rogue administrator",
    "product": "Concrete CMS",
    "version": "9.0.0 to 9.3.2 below 8.5.18",
    "component": "RSS Displayer"
  },
  "reference_content": "Based on the provided information, here's a breakdown of the vulnerability associated with CVE-2024-4350:\n\n**Root Cause:**\nThe root cause of this vulnerability is insufficient input validation in the RSS Displayer block. This lack of validation allowed a malicious administrator to inject arbitrary code into the system.\n\n**Weaknesses/Vulnerabilities:**\n- Stored Cross-Site Scripting (XSS): Malicious code injected through the RSS Displayer block is stored on the server and executed when other users interact with the affected content.\n\n**Impact of Exploitation:**\n- A successful exploit could lead to arbitrary JavaScript execution in the context of a user viewing the affected page.\n- This could lead to malicious actions like session hijacking, defacement, or redirection to malicious sites\n\n**Attack Vectors:**\n- Network Access: The attacker can inject malicious code through the RSS Displayer block, which would typically be accessed via a web browser.\n\n**Required Attacker Capabilities/Position:**\n- The attacker needs to have administrative privileges to modify the content of the RSS Displayer block.\n- The attacker would need to be an authenticated user with the ability to edit content.\n\n**Additional Details from the provided content:**\n\n*   **Affected Component:** The vulnerability exists specifically in the `rss_displayer` block within the Concrete CMS.\n*   **Fix:** The vulnerability was addressed by implementing input sanitization in the RSS Displayer block.\n*   **Versions Affected:**  The vulnerability affected Concrete CMS versions 8 and 9. The fix was implemented with commit `c08d9671cec4e7afdabb547339c4bc0bed8eab06` for version 8 and commit `12166` for version 9.\n*   **CVSS Score:** The Concrete CMS security team gave this vulnerability a CVSS v3.1 score of 3.0 with a vector of `AV:N/AC:H/PR:H/UI:N/S:C/C:L/I:N/A:N` and a CVSS v4 score of 2.1 with vector `CVSS:4.0/AV:N/AC:H/AT:N/PR:H/UI:N/VC:L/VI:N/VA:N/SC:N/SI:N/SA:N`\n\nThis information provides a comprehensive understanding of the vulnerability, its exploitation, and its resolution.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID  | CWE Name                                                                | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :---------------------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-20    | Improper Input Validation                                               | 0.9        | Class                 | Primary                         | Discouraged                   |\n| CWE-79    | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.9        | Base                 | Secondary                         | Allowed                   |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is **CWE-20 [Improper Input Validation]**, as the vulnerability description explicitly mentions **insufficient input validation** as the root cause. **CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')]** is a consequence of the **improper input validation** and represents the specific type of vulnerability (**XSS**). **CWE-20 [Improper Input Validation]** is a Class-level CWE, while **CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')]** is a Base-level CWE.\n\n```mermaid\ngraph TD\n    cwe20[\"CWE-20: Improper Input Validation\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe79 -->|CANFOLLOW| cwe20\n    cwe79 -->|CHILDOF| cwe20\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe20 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **CWE-20 [Improper Input Validation]**. Due to the **lack of validation**, malicious input is allowed. This leads to **CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')]**, where the unvalidated input is used in a web page, resulting in **XSS**.\n\n## Summary of Analysis\nThe analysis indicates that the primary cause of the vulnerability is **CWE-20 [Improper Input Validation]**. The description explicitly states that the vulnerability is due to **insufficient input validation**. Because of this root cause, an attacker can inject malicious code leading to **CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')]**.\n\nThe relationship graph shows that **CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')]** can follow **CWE-20 [Improper Input Validation]**.\n\nThe selection of **CWE-20 [Improper Input Validation]** and **CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')]** is based on the evidence provided in the vulnerability description, emphasizing the **insufficient input validation** as the root cause and the resulting **XSS** vulnerability. The level of specificity is optimal because **CWE-20 [Improper Input Validation]** captures the general **lack of validation**, while **CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')]** specifies the resulting **XSS** vulnerability.\n\nCWEs like **CWE-22 [Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')]**, **CWE-347 [Improper Verification of Cryptographic Signature]**, and **CWE-434 [Unrestricted Upload of File with Dangerous Type]** were considered but not selected because they do not directly relate to the **insufficient input validation** and **XSS** nature of the vulnerability.\n\nRelevant CWE Information:",
  "analysis_with_relationships": "# Summary\n| CWE ID  | CWE Name                                                                | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :---------------------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-20    | Improper Input Validation                                               | 0.9        | Class                 | Primary                         | Discouraged                   |\n| CWE-79    | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.9        | Base                 | Secondary                         | Allowed                   |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is **CWE-20 [Improper Input Validation]**, as the vulnerability description explicitly mentions **insufficient input validation** as the root cause. **CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')]** is a consequence of the **improper input validation** and represents the specific type of vulnerability (**XSS**). **CWE-20 [Improper Input Validation]** is a Class-level CWE, while **CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')]** is a Base-level CWE.\n\n```mermaid\ngraph TD\n    cwe20[\"CWE-20: Improper Input Validation\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe79 -->|CANFOLLOW| cwe20\n    cwe79 -->|CHILDOF| cwe20\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe20 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **CWE-20 [Improper Input Validation]**. Due to the **lack of validation**, malicious input is allowed. This leads to **CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')]**, where the unvalidated input is used in a web page, resulting in **XSS**.\n\n## Summary of Analysis\nThe analysis indicates that the primary cause of the vulnerability is **CWE-20 [Improper Input Validation]**. The description explicitly states that the vulnerability is due to **insufficient input validation**. Because of this root cause, an attacker can inject malicious code leading to **CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')]**.\n\nThe relationship graph shows that **CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')]** can follow **CWE-20 [Improper Input Validation]**.\n\nThe selection of **CWE-20 [Improper Input Validation]** and **CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')]** is based on the evidence provided in the vulnerability description, emphasizing the **insufficient input validation** as the root cause and the resulting **XSS** vulnerability. The level of specificity is optimal because **CWE-20 [Improper Input Validation]** captures the general **lack of validation**, while **CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')]** specifies the resulting **XSS** vulnerability.\n\nCWEs like **CWE-22 [Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')]**, **CWE-347 [Improper Verification of Cryptographic Signature]**, and **CWE-434 [Unrestricted Upload of File with Dangerous Type]** were considered but not selected because they do not directly relate to the **insufficient input validation** and **XSS** nature of the vulnerability.\n\nRelevant CWE Information:\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-22:**\n- 22 (Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')) - ROOT\n\n\n**Chain starting from CWE-79:**\n- 79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "sparse",
        "original_content": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient input validation",
            "keyphrase": "insufficient input validation",
            "type": "rootcause"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "impact:inject malicious code",
            "keyphrase": "inject malicious code",
            "type": "impact"
          },
          {
            "id": "attacker:rogue administrator",
            "keyphrase": "rogue administrator",
            "type": "attacker"
          },
          {
            "id": "product:Concrete CMS",
            "keyphrase": "Concrete CMS",
            "type": "product"
          },
          {
            "id": "version:9.0.0 to 9.3.2 below 8.5.18",
            "keyphrase": "9.0.0 to 9.3.2 below 8.5.18",
            "type": "version"
          },
          {
            "id": "component:RSS Displayer",
            "keyphrase": "RSS Displayer",
            "type": "component"
          }
        ]
      },
      "similarity": 564.9834703239683
    },
    {
      "metadata": {
        "doc_id": "347",
        "name": "Improper Verification of Cryptographic Signature",
        "source": "sparse",
        "original_content": "The product does not verify, or incorrectly verifies, the cryptographic signature for data.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient input validation",
            "keyphrase": "insufficient input validation",
            "type": "rootcause"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "impact:inject malicious code",
            "keyphrase": "inject malicious code",
            "type": "impact"
          },
          {
            "id": "attacker:rogue administrator",
            "keyphrase": "rogue administrator",
            "type": "attacker"
          },
          {
            "id": "product:Concrete CMS",
            "keyphrase": "Concrete CMS",
            "type": "product"
          },
          {
            "id": "version:9.0.0 to 9.3.2 below 8.5.18",
            "keyphrase": "9.0.0 to 9.3.2 below 8.5.18",
            "type": "version"
          },
          {
            "id": "component:RSS Displayer",
            "keyphrase": "RSS Displayer",
            "type": "component"
          }
        ]
      },
      "similarity": 535.9725853359537
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse",
        "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient input validation",
            "keyphrase": "insufficient input validation",
            "type": "rootcause"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "impact:inject malicious code",
            "keyphrase": "inject malicious code",
            "type": "impact"
          },
          {
            "id": "attacker:rogue administrator",
            "keyphrase": "rogue administrator",
            "type": "attacker"
          },
          {
            "id": "product:Concrete CMS",
            "keyphrase": "Concrete CMS",
            "type": "product"
          },
          {
            "id": "version:9.0.0 to 9.3.2 below 8.5.18",
            "keyphrase": "9.0.0 to 9.3.2 below 8.5.18",
            "type": "version"
          },
          {
            "id": "component:RSS Displayer",
            "keyphrase": "RSS Displayer",
            "type": "component"
          }
        ]
      },
      "similarity": 520.668242309067
    },
    {
      "metadata": {
        "doc_id": "20",
        "name": "Improper Input Validation",
        "source": "sparse",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient input validation",
            "keyphrase": "insufficient input validation",
            "type": "rootcause"
          }
        ]
      },
      "similarity": 502.6280197230458
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient input validation",
            "keyphrase": "insufficient input validation",
            "type": "rootcause"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          }
        ]
      },
      "similarity": 497.7608335552328
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse",
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "keyphrase_sources": [
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "impact:inject malicious code",
            "keyphrase": "inject malicious code",
            "type": "impact"
          },
          {
            "id": "product:Concrete CMS",
            "keyphrase": "Concrete CMS",
            "type": "product"
          },
          {
            "id": "version:9.0.0 to 9.3.2 below 8.5.18",
            "keyphrase": "9.0.0 to 9.3.2 below 8.5.18",
            "type": "version"
          },
          {
            "id": "component:RSS Displayer",
            "keyphrase": "RSS Displayer",
            "type": "component"
          }
        ]
      },
      "similarity": 464.2469517950091
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_sources": [
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "attacker:rogue administrator",
            "keyphrase": "rogue administrator",
            "type": "attacker"
          },
          {
            "id": "product:Concrete CMS",
            "keyphrase": "Concrete CMS",
            "type": "product"
          }
        ]
      },
      "similarity": 460.40532022539213
    },
    {
      "metadata": {
        "doc_id": "94",
        "name": "Improper Control of Generation of Code ('Code Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
        "keyphrase_sources": [
          {
            "id": "version:9.0.0 to 9.3.2 below 8.5.18",
            "keyphrase": "9.0.0 to 9.3.2 below 8.5.18",
            "type": "version"
          }
        ]
      },
      "similarity": 185.7444037138864
    },
    {
      "metadata": {
        "doc_id": "790",
        "name": "Improper Filtering of Special Elements",
        "source": "sparse",
        "original_content": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
        "keyphrase_sources": [
          {
            "id": "impact:inject malicious code",
            "keyphrase": "inject malicious code",
            "type": "impact"
          },
          {
            "id": "attacker:rogue administrator",
            "keyphrase": "rogue administrator",
            "type": "attacker"
          }
        ]
      },
      "similarity": 166.0851157438819
    },
    {
      "metadata": {
        "doc_id": "173",
        "name": "Improper Handling of Alternate Encoding",
        "source": "sparse",
        "original_content": "The product does not properly handle when an input uses an alternate encoding that is valid for the control sphere to which the input is being sent.",
        "keyphrase_sources": [
          {
            "id": "component:RSS Displayer",
            "keyphrase": "RSS Displayer",
            "type": "component"
          }
        ]
      },
      "similarity": 158.35556638214885
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-22",
      "CWE-79",
      "CWE-347",
      "CWE-20",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "22": [
      {
        "id": "rootcause:insufficient input validation",
        "keyphrase": "insufficient input validation",
        "type": "rootcause"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "impact:inject malicious code",
        "keyphrase": "inject malicious code",
        "type": "impact"
      },
      {
        "id": "attacker:rogue administrator",
        "keyphrase": "rogue administrator",
        "type": "attacker"
      },
      {
        "id": "product:Concrete CMS",
        "keyphrase": "Concrete CMS",
        "type": "product"
      },
      {
        "id": "version:9.0.0 to 9.3.2 below 8.5.18",
        "keyphrase": "9.0.0 to 9.3.2 below 8.5.18",
        "type": "version"
      },
      {
        "id": "component:RSS Displayer",
        "keyphrase": "RSS Displayer",
        "type": "component"
      }
    ],
    "347": [
      {
        "id": "rootcause:insufficient input validation",
        "keyphrase": "insufficient input validation",
        "type": "rootcause"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "impact:inject malicious code",
        "keyphrase": "inject malicious code",
        "type": "impact"
      },
      {
        "id": "attacker:rogue administrator",
        "keyphrase": "rogue administrator",
        "type": "attacker"
      },
      {
        "id": "product:Concrete CMS",
        "keyphrase": "Concrete CMS",
        "type": "product"
      },
      {
        "id": "version:9.0.0 to 9.3.2 below 8.5.18",
        "keyphrase": "9.0.0 to 9.3.2 below 8.5.18",
        "type": "version"
      },
      {
        "id": "component:RSS Displayer",
        "keyphrase": "RSS Displayer",
        "type": "component"
      }
    ],
    "434": [
      {
        "id": "rootcause:insufficient input validation",
        "keyphrase": "insufficient input validation",
        "type": "rootcause"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "impact:inject malicious code",
        "keyphrase": "inject malicious code",
        "type": "impact"
      },
      {
        "id": "attacker:rogue administrator",
        "keyphrase": "rogue administrator",
        "type": "attacker"
      },
      {
        "id": "product:Concrete CMS",
        "keyphrase": "Concrete CMS",
        "type": "product"
      },
      {
        "id": "version:9.0.0 to 9.3.2 below 8.5.18",
        "keyphrase": "9.0.0 to 9.3.2 below 8.5.18",
        "type": "version"
      },
      {
        "id": "component:RSS Displayer",
        "keyphrase": "RSS Displayer",
        "type": "component"
      }
    ],
    "20": [
      {
        "id": "rootcause:insufficient input validation",
        "keyphrase": "insufficient input validation",
        "type": "rootcause"
      }
    ],
    "116": [
      {
        "id": "rootcause:insufficient input validation",
        "keyphrase": "insufficient input validation",
        "type": "rootcause"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      }
    ],
    "79": [
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "impact:inject malicious code",
        "keyphrase": "inject malicious code",
        "type": "impact"
      },
      {
        "id": "product:Concrete CMS",
        "keyphrase": "Concrete CMS",
        "type": "product"
      },
      {
        "id": "version:9.0.0 to 9.3.2 below 8.5.18",
        "keyphrase": "9.0.0 to 9.3.2 below 8.5.18",
        "type": "version"
      },
      {
        "id": "component:RSS Displayer",
        "keyphrase": "RSS Displayer",
        "type": "component"
      }
    ],
    "352": [
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "attacker:rogue administrator",
        "keyphrase": "rogue administrator",
        "type": "attacker"
      },
      {
        "id": "product:Concrete CMS",
        "keyphrase": "Concrete CMS",
        "type": "product"
      }
    ],
    "790": [
      {
        "id": "impact:inject malicious code",
        "keyphrase": "inject malicious code",
        "type": "impact"
      },
      {
        "id": "attacker:rogue administrator",
        "keyphrase": "rogue administrator",
        "type": "attacker"
      }
    ],
    "94": [
      {
        "id": "version:9.0.0 to 9.3.2 below 8.5.18",
        "keyphrase": "9.0.0 to 9.3.2 below 8.5.18",
        "type": "version"
      }
    ],
    "173": [
      {
        "id": "component:RSS Displayer",
        "keyphrase": "RSS Displayer",
        "type": "component"
      }
    ]
  }
}