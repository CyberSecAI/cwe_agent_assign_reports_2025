{
  "method": "sparse_base",
  "query": "In the Linux kernel, the following vulnerability has been resolved bpf, arm64 Fix address emission with tag-based KASAN enabled When BPF_TRAMP_F_CALL_ORIG is enabled, the address of a bpf_tramp_image struct on the stack is passed during the size calculation pass and an address on the heap is passed during code generation. This may cause a heap buffer overflow if the heap address is tagged because emit_a64_mov_i64() will emit longer code than it did during the size calculation pass. The same problem could occur without tag-based KASAN if one of the 16-bit words of the stack address happened to be all-ones during the size calculation pass. Fix the problem by assuming the worst case (4 instructions) when calculating the size of the bpf_tramp_image address emission.",
  "keyphrases": {
    "base_query": "In the Linux kernel, the following vulnerability has been resolved bpf, arm64 Fix address emission with tag-based KASAN enabled When BPF_TRAMP_F_CALL_ORIG is enabled, the address of a bpf_tramp_image struct on the stack is passed during the size calculation pass and an address on the heap is passed during code generation. This may cause a heap buffer overflow if the heap address is tagged because emit_a64_mov_i64() will emit longer code than it did during the size calculation pass. The same problem could occur without tag-based KASAN if one of the 16-bit words of the stack address happened to be all-ones during the size calculation pass. Fix the problem by assuming the worst case (4 instructions) when calculating the size of the bpf_tramp_image address emission."
  },
  "timestamp": "2025-07-13T19:56:30.604039",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "190",
      "name": "Integer Overflow or Wraparound",
      "score": 245.44586098352943
    },
    {
      "doc_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 237.375862939714
    },
    {
      "doc_id": "193",
      "name": "Off-by-one Error",
      "score": 235.6875653270869
    },
    {
      "doc_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "score": 226.2526749117588
    },
    {
      "doc_id": "194",
      "name": "Unexpected Sign Extension",
      "score": 224.14156295857111
    }
  ]
}