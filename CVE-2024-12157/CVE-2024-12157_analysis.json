{
  "cve_id": "CVE-2024-12157",
  "description": "The Popup MailChimp, GetResponse and ActiveCampaign Intergrations plugin for WordPress is vulnerable to SQL Injection via the id parameter of the upc_delete_db_record AJAX action in all versions up to, and including, 3.2.6 due to **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**. This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.",
  "key_phrases": {
    "rootcause": [
      "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
      "insufficient escaping on user supplied parameter and lack of sufficient preparation on SQL query"
    ],
    "weakness": "SQL injection",
    "impact": [
      "extract sensitive information from the database",
      "append additional SQL queries"
    ],
    "vector": "",
    "attacker": "unauthenticated attackers",
    "product": "Popup MailChimp GetResponse and ActiveCampaign Integrations WordPress plugin",
    "version": "all versions up to and including 3.2.6",
    "component": "upc_delete_db_record AJAX action"
  },
  "reference_content": "Because the description is not available, it is impossible to tell if the content relates to the CVE.\n\nResponse:\nNOINFO",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID  | CWE Name                                                                                                                                 | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :--------------------------------------------------------------------------------------------------------------------------------------- | :--------- | :---------------------- | :------------------------------ | :------------------------------ |\n| CWE-89    | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')                                                     | 1          | Base                    | Primary                         | Allowed                         |\n| CWE-116   | Improper Encoding or Escaping of Output                                                                                                | 0.7        | Class                   | Secondary                       | Allowed-with-Review             |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship is that CWE-89 [Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')] is a child of CWE-74 [Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')]. CWE-89 focuses specifically on SQL injection, providing a more precise classification than its parent. CWE-116 [Improper Encoding or Escaping of Output] is considered a secondary CWE because **insufficient escaping** is a contributing factor to the SQL injection, but the core issue is the **lack of sufficient preparation on the existing SQL query**.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n\n    cwe89 -->|CHILDOF| cwe74\n    cwe116 -->|PEEROF| cwe89\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe89 primary\n    class cwe74,cwe116 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain begins with **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**, leading to the ability to **append additional SQL queries** and ultimately **extract sensitive information from the database**.\n- Root Cause: **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query** (CWE-89)\n- Impact: **append additional SQL queries** (CWE-89)\n- Impact: **extract sensitive information from the database** (CWE-89)\n\n## Summary of Analysis\nThe primary vulnerability is CWE-89 [Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')], as the root cause is the **lack of sufficient preparation on the existing SQL query** combined with **insufficient escaping on the user supplied parameter**, allowing attackers to inject arbitrary SQL commands. This is directly supported by the vulnerability description: \"due to **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**. This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.\"\nCWE-116 [Improper Encoding or Escaping of Output] is a contributing factor, but not the primary weakness. The graph relationships show that CWE-89 is a more specific child of CWE-74, which is why CWE-89 was chosen. The retriever scores and keyphrase analysis also strongly support this selection. The selected CWEs are at the optimal level of specificity, with CWE-89 being a Base level CWE and CWE-116 being a Class level CWE.\n\nRelevant CWE Information:\n- CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\n- CWE-116: Improper Encoding or Escaping of Output",
  "analysis_with_relationships": "# Summary\n| CWE ID  | CWE Name                                                                                                                                 | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :--------------------------------------------------------------------------------------------------------------------------------------- | :--------- | :---------------------- | :------------------------------ | :------------------------------ |\n| CWE-89    | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')                                                     | 1          | Base                    | Primary                         | Allowed                         |\n| CWE-116   | Improper Encoding or Escaping of Output                                                                                                | 0.7        | Class                   | Secondary                       | Allowed-with-Review             |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship is that CWE-89 [Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')] is a child of CWE-74 [Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')]. CWE-89 focuses specifically on SQL injection, providing a more precise classification than its parent. CWE-116 [Improper Encoding or Escaping of Output] is considered a secondary CWE because **insufficient escaping** is a contributing factor to the SQL injection, but the core issue is the **lack of sufficient preparation on the existing SQL query**.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n\n    cwe89 -->|CHILDOF| cwe74\n    cwe116 -->|PEEROF| cwe89\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe89 primary\n    class cwe74,cwe116 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain begins with **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**, leading to the ability to **append additional SQL queries** and ultimately **extract sensitive information from the database**.\n- Root Cause: **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query** (CWE-89)\n- Impact: **append additional SQL queries** (CWE-89)\n- Impact: **extract sensitive information from the database** (CWE-89)\n\n## Summary of Analysis\nThe primary vulnerability is CWE-89 [Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')], as the root cause is the **lack of sufficient preparation on the existing SQL query** combined with **insufficient escaping on the user supplied parameter**, allowing attackers to inject arbitrary SQL commands. This is directly supported by the vulnerability description: \"due to **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**. This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.\"\nCWE-116 [Improper Encoding or Escaping of Output] is a contributing factor, but not the primary weakness. The graph relationships show that CWE-89 is a more specific child of CWE-74, which is why CWE-89 was chosen. The retriever scores and keyphrase analysis also strongly support this selection. The selected CWEs are at the optimal level of specificity, with CWE-89 being a Base level CWE and CWE-116 being a Class level CWE.\n\nRelevant CWE Information:\n- CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\n- CWE-116: Improper Encoding or Escaping of Output\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-74:**\n- 74 (Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')) - ROOT\n\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on SQL query",
            "keyphrase": "insufficient escaping on user supplied parameter and lack of sufficient preparation on SQL query",
            "type": "rootcause"
          },
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "impact:append additional SQL queries",
            "keyphrase": "append additional SQL queries",
            "type": "impact"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:Popup MailChimp GetResponse and ActiveCampaign Integrations WordPress plugin",
            "keyphrase": "Popup MailChimp GetResponse and ActiveCampaign Integrations WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:all versions up to and including 3.2.6",
            "keyphrase": "all versions up to and including 3.2.6",
            "type": "version"
          },
          {
            "id": "component:upc_delete_db_record AJAX action",
            "keyphrase": "upc_delete_db_record AJAX action",
            "type": "component"
          }
        ]
      },
      "similarity": 780.7006589127043
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on SQL query",
            "keyphrase": "insufficient escaping on user supplied parameter and lack of sufficient preparation on SQL query",
            "type": "rootcause"
          },
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "impact:append additional SQL queries",
            "keyphrase": "append additional SQL queries",
            "type": "impact"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:Popup MailChimp GetResponse and ActiveCampaign Integrations WordPress plugin",
            "keyphrase": "Popup MailChimp GetResponse and ActiveCampaign Integrations WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:all versions up to and including 3.2.6",
            "keyphrase": "all versions up to and including 3.2.6",
            "type": "version"
          },
          {
            "id": "component:upc_delete_db_record AJAX action",
            "keyphrase": "upc_delete_db_record AJAX action",
            "type": "component"
          }
        ]
      },
      "similarity": 751.3270105933294
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on SQL query",
            "keyphrase": "insufficient escaping on user supplied parameter and lack of sufficient preparation on SQL query",
            "type": "rootcause"
          },
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "impact:append additional SQL queries",
            "keyphrase": "append additional SQL queries",
            "type": "impact"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:Popup MailChimp GetResponse and ActiveCampaign Integrations WordPress plugin",
            "keyphrase": "Popup MailChimp GetResponse and ActiveCampaign Integrations WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:all versions up to and including 3.2.6",
            "keyphrase": "all versions up to and including 3.2.6",
            "type": "version"
          },
          {
            "id": "component:upc_delete_db_record AJAX action",
            "keyphrase": "upc_delete_db_record AJAX action",
            "type": "component"
          }
        ]
      },
      "similarity": 708.0735147541415
    },
    {
      "metadata": {
        "doc_id": "90",
        "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on SQL query",
            "keyphrase": "insufficient escaping on user supplied parameter and lack of sufficient preparation on SQL query",
            "type": "rootcause"
          },
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "impact:append additional SQL queries",
            "keyphrase": "append additional SQL queries",
            "type": "impact"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          }
        ]
      },
      "similarity": 688.0178544903913
    },
    {
      "metadata": {
        "doc_id": "20",
        "name": "Improper Input Validation",
        "source": "sparse",
        "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          }
        ]
      },
      "similarity": 643.4549657641181
    },
    {
      "metadata": {
        "doc_id": "138",
        "name": "Improper Neutralization of Special Elements",
        "source": "sparse",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on SQL query",
            "keyphrase": "insufficient escaping on user supplied parameter and lack of sufficient preparation on SQL query",
            "type": "rootcause"
          }
        ]
      },
      "similarity": 596.4916425420736
    },
    {
      "metadata": {
        "doc_id": "502",
        "name": "Deserialization of Untrusted Data",
        "source": "sparse",
        "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.",
        "keyphrase_sources": [
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "product:Popup MailChimp GetResponse and ActiveCampaign Integrations WordPress plugin",
            "keyphrase": "Popup MailChimp GetResponse and ActiveCampaign Integrations WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:all versions up to and including 3.2.6",
            "keyphrase": "all versions up to and including 3.2.6",
            "type": "version"
          },
          {
            "id": "component:upc_delete_db_record AJAX action",
            "keyphrase": "upc_delete_db_record AJAX action",
            "type": "component"
          }
        ]
      },
      "similarity": 465.9456357287551
    },
    {
      "metadata": {
        "doc_id": "943",
        "name": "Improper Neutralization of Special Elements in Data Query Logic",
        "source": "sparse",
        "original_content": "The product generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query.",
        "keyphrase_sources": [
          {
            "id": "impact:append additional SQL queries",
            "keyphrase": "append additional SQL queries",
            "type": "impact"
          }
        ]
      },
      "similarity": 182.5410275956349
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse",
        "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
        "keyphrase_sources": [
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:Popup MailChimp GetResponse and ActiveCampaign Integrations WordPress plugin",
            "keyphrase": "Popup MailChimp GetResponse and ActiveCampaign Integrations WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:all versions up to and including 3.2.6",
            "keyphrase": "all versions up to and including 3.2.6",
            "type": "version"
          },
          {
            "id": "component:upc_delete_db_record AJAX action",
            "keyphrase": "upc_delete_db_record AJAX action",
            "type": "component"
          }
        ]
      },
      "similarity": 176.49947768056515
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-74",
      "CWE-89",
      "CWE-116"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "116": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on SQL query",
        "keyphrase": "insufficient escaping on user supplied parameter and lack of sufficient preparation on SQL query",
        "type": "rootcause"
      },
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "impact:append additional SQL queries",
        "keyphrase": "append additional SQL queries",
        "type": "impact"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:Popup MailChimp GetResponse and ActiveCampaign Integrations WordPress plugin",
        "keyphrase": "Popup MailChimp GetResponse and ActiveCampaign Integrations WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:all versions up to and including 3.2.6",
        "keyphrase": "all versions up to and including 3.2.6",
        "type": "version"
      },
      {
        "id": "component:upc_delete_db_record AJAX action",
        "keyphrase": "upc_delete_db_record AJAX action",
        "type": "component"
      }
    ],
    "89": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on SQL query",
        "keyphrase": "insufficient escaping on user supplied parameter and lack of sufficient preparation on SQL query",
        "type": "rootcause"
      },
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "impact:append additional SQL queries",
        "keyphrase": "append additional SQL queries",
        "type": "impact"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:Popup MailChimp GetResponse and ActiveCampaign Integrations WordPress plugin",
        "keyphrase": "Popup MailChimp GetResponse and ActiveCampaign Integrations WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:all versions up to and including 3.2.6",
        "keyphrase": "all versions up to and including 3.2.6",
        "type": "version"
      },
      {
        "id": "component:upc_delete_db_record AJAX action",
        "keyphrase": "upc_delete_db_record AJAX action",
        "type": "component"
      }
    ],
    "352": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on SQL query",
        "keyphrase": "insufficient escaping on user supplied parameter and lack of sufficient preparation on SQL query",
        "type": "rootcause"
      },
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "impact:append additional SQL queries",
        "keyphrase": "append additional SQL queries",
        "type": "impact"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:Popup MailChimp GetResponse and ActiveCampaign Integrations WordPress plugin",
        "keyphrase": "Popup MailChimp GetResponse and ActiveCampaign Integrations WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:all versions up to and including 3.2.6",
        "keyphrase": "all versions up to and including 3.2.6",
        "type": "version"
      },
      {
        "id": "component:upc_delete_db_record AJAX action",
        "keyphrase": "upc_delete_db_record AJAX action",
        "type": "component"
      }
    ],
    "90": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on SQL query",
        "keyphrase": "insufficient escaping on user supplied parameter and lack of sufficient preparation on SQL query",
        "type": "rootcause"
      },
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "impact:append additional SQL queries",
        "keyphrase": "append additional SQL queries",
        "type": "impact"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      }
    ],
    "20": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      }
    ],
    "138": [
      {
        "id": "rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on SQL query",
        "keyphrase": "insufficient escaping on user supplied parameter and lack of sufficient preparation on SQL query",
        "type": "rootcause"
      }
    ],
    "502": [
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "product:Popup MailChimp GetResponse and ActiveCampaign Integrations WordPress plugin",
        "keyphrase": "Popup MailChimp GetResponse and ActiveCampaign Integrations WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:all versions up to and including 3.2.6",
        "keyphrase": "all versions up to and including 3.2.6",
        "type": "version"
      },
      {
        "id": "component:upc_delete_db_record AJAX action",
        "keyphrase": "upc_delete_db_record AJAX action",
        "type": "component"
      }
    ],
    "862": [
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:Popup MailChimp GetResponse and ActiveCampaign Integrations WordPress plugin",
        "keyphrase": "Popup MailChimp GetResponse and ActiveCampaign Integrations WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:all versions up to and including 3.2.6",
        "keyphrase": "all versions up to and including 3.2.6",
        "type": "version"
      },
      {
        "id": "component:upc_delete_db_record AJAX action",
        "keyphrase": "upc_delete_db_record AJAX action",
        "type": "component"
      }
    ],
    "943": [
      {
        "id": "impact:append additional SQL queries",
        "keyphrase": "append additional SQL queries",
        "type": "impact"
      }
    ]
  }
}