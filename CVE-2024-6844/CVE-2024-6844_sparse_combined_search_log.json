{
  "method": "sparse_combined",
  "query": "A vulnerability in corydolphin/flask-cors version 4.0.1 allows for inconsistent CORS matching due to the handling of the + character in URL paths. The request.path is passed through the unquote_plus function, which converts the + character to a space . This behavior leads to incorrect path normalization, causing potential mismatches in CORS configuration. As a result, endpoints may not be matched correctly to their CORS settings, leading to unexpected CORS policy application. This can cause unauthorized cross-origin access or block valid requests, creating security vulnerabilities and usability issues.",
  "keyphrases": {
    "weakness": [
      "inconsistent CORS matching"
    ]
  },
  "timestamp": "2025-07-12T07:28:48.419145",
  "results_count": 11,
  "results_summary": [
    {
      "doc_id": "942",
      "name": "Permissive Cross-domain Policy with Untrusted Domains",
      "score": 501.6538366031895
    },
    {
      "doc_id": "93",
      "name": "Improper Neutralization of CRLF Sequences ('CRLF Injection')",
      "score": 482.29746354629356
    },
    {
      "doc_id": "923",
      "name": "Improper Restriction of Communication Channel to Intended Endpoints",
      "score": 475.29193566365956
    },
    {
      "doc_id": "113",
      "name": "Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')",
      "score": 453.9942620108846
    },
    {
      "doc_id": "696",
      "name": "Incorrect Behavior Order",
      "score": 441.1376562325387
    }
  ]
}