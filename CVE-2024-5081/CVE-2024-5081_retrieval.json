{
  "vulnerability_info": "VulnerabilityInfo(cve_id='CVE-2024-5081', description='The wp-eMember WordPress plugin before v10.7.0 **does not have CSRF check** in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored **XSS** payloads via a CSRF attack', key_phrases={'rootcause': ['does not have CSRF check', 'lack of CSRF check', 'missing sanitisation and escaping'], 'weakness': ['XSS', 'cross-site scripting'], 'impact': 'Stored XSS payloads', 'vector': '', 'attacker': 'attackers', 'product': 'wp-eMember WordPress plugin', 'version': 'before v10.7.0', 'component': ''}, reference_content=\"- **Root cause of vulnerability:** The WP eMember plugin lacks CSRF (Cross-Site Request Forgery) protection in certain areas and fails to sanitize and escape user inputs. This allows an attacker to inject malicious scripts.\\n- **Weaknesses/vulnerabilities present:**\\n    - **Stored XSS:** The plugin is vulnerable to stored Cross-Site Scripting (XSS) due to the lack of sanitization and escaping.\\n    - **CSRF:** The absence of CSRF protection allows attackers to manipulate logged-in administrators.\\n- **Impact of exploitation:** An attacker can execute arbitrary JavaScript code in the context of the victim's browser, which can lead to:\\n    - Account takeover\\n    - Data theft\\n    - Defacement\\n    - Other malicious activities\\n- **Attack vectors:**\\n    - The attacker crafts a malicious HTML page containing a form that submits a crafted payload to the vulnerable plugin settings page.\\n    - The attacker tricks a logged-in administrator into opening the HTML page, triggering the form submission.\\n- **Required attacker capabilities/position:**\\n    - The attacker needs to be able to craft HTML.\\n    - The attacker needs to trick a logged-in administrator of the WordPress site to open a malicious HTML page.\\n    - The attacker does not need to be authenticated to the wordpress site.\", similar_info={'cwe_distribution': {95: {'cwe_counts': defaultdict(<class 'int'>, {}), 'total_samples': 2, 'distribution': [{'cwes': [], 'frequency': 2, 'proportion': 1.0}]}, 90: {'cwe_counts': defaultdict(<class 'int'>, {'CWE-352': 2}), 'total_samples': 5, 'distribution': [{'cwes': [], 'frequency': 3, 'proportion': 0.6}, {'cwes': ['CWE-352'], 'frequency': 2, 'proportion': 0.4}]}, 85: {'cwe_counts': defaultdict(<class 'int'>, {'CWE-352': 2}), 'total_samples': 6, 'distribution': [{'cwes': [], 'frequency': 4, 'proportion': 0.667}, {'cwes': ['CWE-352'], 'frequency': 2, 'proportion': 0.333}]}, 80: {'cwe_counts': defaultdict(<class 'int'>, {'CWE-352': 2}), 'total_samples': 6, 'distribution': [{'cwes': [], 'frequency': 4, 'proportion': 0.667}, {'cwes': ['CWE-352'], 'frequency': 2, 'proportion': 0.333}]}, 75: {'cwe_counts': defaultdict(<class 'int'>, {'CWE-352': 3}), 'total_samples': 7, 'distribution': [{'cwes': [], 'frequency': 4, 'proportion': 0.571}, {'cwes': ['CWE-352'], 'frequency': 3, 'proportion': 0.429}]}, 70: {'cwe_counts': defaultdict(<class 'int'>, {'CWE-352': 2}), 'total_samples': 6, 'distribution': [{'cwes': [], 'frequency': 4, 'proportion': 0.667}, {'cwes': ['CWE-352'], 'frequency': 2, 'proportion': 0.333}]}}, 'cwe_consensus': 'CWE-352', 'similarity_stats': {'thresholds': [95, 90, 85, 80, 75, 70], 'total_samples_by_threshold': {95: 2, 90: 5, 85: 6, 80: 6, 75: 7, 70: 6}, 'top_cwes_by_threshold': {95: [], 90: [('CWE-352', 2)], 85: [('CWE-352', 2)], 80: [('CWE-352', 2)], 75: [('CWE-352', 3)], 70: [('CWE-352', 2)]}}, 'raw_matches': [{'similarity': 95, 'cwes': [], 'total': 2, 'frequency': 2, 'proportion': 1.0}, {'similarity': 90, 'cwes': [], 'total': 5, 'frequency': 3, 'proportion': 0.6}, {'similarity': 90, 'cwes': ['352'], 'total': 5, 'frequency': 2, 'proportion': 0.4}, {'similarity': 85, 'cwes': [], 'total': 6, 'frequency': 4, 'proportion': 0.667}, {'similarity': 85, 'cwes': ['352'], 'total': 6, 'frequency': 2, 'proportion': 0.333}, {'similarity': 80, 'cwes': [], 'total': 6, 'frequency': 4, 'proportion': 0.667}, {'similarity': 80, 'cwes': ['352'], 'total': 6, 'frequency': 2, 'proportion': 0.333}, {'similarity': 75, 'cwes': [], 'total': 7, 'frequency': 4, 'proportion': 0.571}, {'similarity': 75, 'cwes': ['352'], 'total': 7, 'frequency': 3, 'proportion': 0.429}, {'similarity': 70, 'cwes': [], 'total': 6, 'frequency': 4, 'proportion': 0.667}, {'similarity': 70, 'cwes': ['352'], 'total': 6, 'frequency': 2, 'proportion': 0.333}]}, similarity_summary=SimilarityInsight(consensus_cwe='CWE-352', top_cwes=[('CWE-352', 11)], confidence_levels={'high': [], 'medium': [], 'low': []}, total_samples=32), analysis='', analysis_with_relationships='', criticism='', resolution='', relevant_cwes=[{'metadata': {'doc_id': '352', 'name': 'Cross-Site Request Forgery (CSRF)', 'source': 'sparse', 'original_content': 'The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.', 'keyphrase_sources': [{'id': 'rootcause:does not have CSRF check', 'keyphrase': 'does not have CSRF check', 'type': 'rootcause'}, {'id': 'rootcause:lack of CSRF check', 'keyphrase': 'lack of CSRF check', 'type': 'rootcause'}, {'id': 'rootcause:missing sanitisation and escaping', 'keyphrase': 'missing sanitisation and escaping', 'type': 'rootcause'}, {'id': 'weakness:XSS', 'keyphrase': 'XSS', 'type': 'weakness'}, {'id': 'weakness:cross-site scripting', 'keyphrase': 'cross-site scripting', 'type': 'weakness'}, {'id': 'impact:Stored XSS payloads', 'keyphrase': 'Stored XSS payloads', 'type': 'impact'}, {'id': 'attacker:attackers', 'keyphrase': 'attackers', 'type': 'attacker'}, {'id': 'product:wp-eMember WordPress plugin', 'keyphrase': 'wp-eMember WordPress plugin', 'type': 'product'}, {'id': 'version:before v10.7.0', 'keyphrase': 'before v10.7.0', 'type': 'version'}]}, 'similarity': np.float64(543.1830552713783)}, {'metadata': {'doc_id': '116', 'name': 'Improper Encoding or Escaping of Output', 'source': 'sparse', 'original_content': 'The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.', 'keyphrase_sources': [{'id': 'rootcause:does not have CSRF check', 'keyphrase': 'does not have CSRF check', 'type': 'rootcause'}, {'id': 'rootcause:lack of CSRF check', 'keyphrase': 'lack of CSRF check', 'type': 'rootcause'}, {'id': 'rootcause:missing sanitisation and escaping', 'keyphrase': 'missing sanitisation and escaping', 'type': 'rootcause'}, {'id': 'weakness:XSS', 'keyphrase': 'XSS', 'type': 'weakness'}, {'id': 'weakness:cross-site scripting', 'keyphrase': 'cross-site scripting', 'type': 'weakness'}, {'id': 'impact:Stored XSS payloads', 'keyphrase': 'Stored XSS payloads', 'type': 'impact'}, {'id': 'attacker:attackers', 'keyphrase': 'attackers', 'type': 'attacker'}, {'id': 'product:wp-eMember WordPress plugin', 'keyphrase': 'wp-eMember WordPress plugin', 'type': 'product'}, {'id': 'version:before v10.7.0', 'keyphrase': 'before v10.7.0', 'type': 'version'}]}, 'similarity': np.float64(397.50162341878115)}, {'metadata': {'doc_id': '862', 'name': 'Missing Authorization', 'source': 'sparse', 'original_content': 'The product does not perform an authorization check when an actor attempts to access a resource or perform an action.', 'keyphrase_sources': [{'id': 'rootcause:does not have CSRF check', 'keyphrase': 'does not have CSRF check', 'type': 'rootcause'}, {'id': 'rootcause:lack of CSRF check', 'keyphrase': 'lack of CSRF check', 'type': 'rootcause'}, {'id': 'rootcause:missing sanitisation and escaping', 'keyphrase': 'missing sanitisation and escaping', 'type': 'rootcause'}, {'id': 'weakness:XSS', 'keyphrase': 'XSS', 'type': 'weakness'}, {'id': 'weakness:cross-site scripting', 'keyphrase': 'cross-site scripting', 'type': 'weakness'}, {'id': 'impact:Stored XSS payloads', 'keyphrase': 'Stored XSS payloads', 'type': 'impact'}, {'id': 'attacker:attackers', 'keyphrase': 'attackers', 'type': 'attacker'}, {'id': 'product:wp-eMember WordPress plugin', 'keyphrase': 'wp-eMember WordPress plugin', 'type': 'product'}, {'id': 'version:before v10.7.0', 'keyphrase': 'before v10.7.0', 'type': 'version'}]}, 'similarity': np.float64(392.24272163015)}, {'metadata': {'doc_id': '434', 'name': 'Unrestricted Upload of File with Dangerous Type', 'source': 'sparse', 'original_content': 'The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.', 'keyphrase_sources': [{'id': 'rootcause:does not have CSRF check', 'keyphrase': 'does not have CSRF check', 'type': 'rootcause'}, {'id': 'rootcause:lack of CSRF check', 'keyphrase': 'lack of CSRF check', 'type': 'rootcause'}, {'id': 'rootcause:missing sanitisation and escaping', 'keyphrase': 'missing sanitisation and escaping', 'type': 'rootcause'}, {'id': 'weakness:XSS', 'keyphrase': 'XSS', 'type': 'weakness'}, {'id': 'weakness:cross-site scripting', 'keyphrase': 'cross-site scripting', 'type': 'weakness'}, {'id': 'impact:Stored XSS payloads', 'keyphrase': 'Stored XSS payloads', 'type': 'impact'}, {'id': 'attacker:attackers', 'keyphrase': 'attackers', 'type': 'attacker'}, {'id': 'product:wp-eMember WordPress plugin', 'keyphrase': 'wp-eMember WordPress plugin', 'type': 'product'}, {'id': 'version:before v10.7.0', 'keyphrase': 'before v10.7.0', 'type': 'version'}]}, 'similarity': np.float64(359.939401076878)}, {'metadata': {'doc_id': '425', 'name': \"Direct Request ('Forced Browsing')\", 'source': 'sparse', 'original_content': 'The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.', 'keyphrase_sources': [{'id': 'rootcause:does not have CSRF check', 'keyphrase': 'does not have CSRF check', 'type': 'rootcause'}, {'id': 'rootcause:lack of CSRF check', 'keyphrase': 'lack of CSRF check', 'type': 'rootcause'}, {'id': 'attacker:attackers', 'keyphrase': 'attackers', 'type': 'attacker'}, {'id': 'product:wp-eMember WordPress plugin', 'keyphrase': 'wp-eMember WordPress plugin', 'type': 'product'}, {'id': 'version:before v10.7.0', 'keyphrase': 'before v10.7.0', 'type': 'version'}]}, 'similarity': np.float64(305.9979270375668)}, {'metadata': {'doc_id': '89', 'name': \"Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\", 'source': 'sparse', 'original_content': 'The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.', 'keyphrase_sources': [{'id': 'rootcause:missing sanitisation and escaping', 'keyphrase': 'missing sanitisation and escaping', 'type': 'rootcause'}]}, 'similarity': np.float64(284.3291846220659)}, {'metadata': {'doc_id': '79', 'name': \"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\", 'source': 'sparse', 'original_content': 'The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.', 'keyphrase_sources': [{'id': 'weakness:XSS', 'keyphrase': 'XSS', 'type': 'weakness'}, {'id': 'weakness:cross-site scripting', 'keyphrase': 'cross-site scripting', 'type': 'weakness'}, {'id': 'impact:Stored XSS payloads', 'keyphrase': 'Stored XSS payloads', 'type': 'impact'}]}, 'similarity': np.float64(249.37495657237704)}], identified_cwes={'analyzer': [], 'critic_additional': []})",
  "retrieval_results": {
    "has_multiple_keyphrases": true,
    "keyphrase_cwe_sets": {
      "rootcause:does not have CSRF check": {
        "keyphrase": "does not have CSRF check",
        "type": "rootcause",
        "cwes": [
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
              "keyphrase_sources": [
                {
                  "id": "rootcause:does not have CSRF check",
                  "keyphrase": "does not have CSRF check",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:lack of CSRF check",
                  "keyphrase": "lack of CSRF check",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:missing sanitisation and escaping",
                  "keyphrase": "missing sanitisation and escaping",
                  "type": "rootcause"
                },
                {
                  "id": "weakness:XSS",
                  "keyphrase": "XSS",
                  "type": "weakness"
                },
                {
                  "id": "weakness:cross-site scripting",
                  "keyphrase": "cross-site scripting",
                  "type": "weakness"
                },
                {
                  "id": "impact:Stored XSS payloads",
                  "keyphrase": "Stored XSS payloads",
                  "type": "impact"
                },
                {
                  "id": "attacker:attackers",
                  "keyphrase": "attackers",
                  "type": "attacker"
                },
                {
                  "id": "product:wp-eMember WordPress plugin",
                  "keyphrase": "wp-eMember WordPress plugin",
                  "type": "product"
                },
                {
                  "id": "version:before v10.7.0",
                  "keyphrase": "before v10.7.0",
                  "type": "version"
                }
              ]
            },
            "similarity": 543.1830552713783
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
              "keyphrase_sources": [
                {
                  "id": "rootcause:does not have CSRF check",
                  "keyphrase": "does not have CSRF check",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:lack of CSRF check",
                  "keyphrase": "lack of CSRF check",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:missing sanitisation and escaping",
                  "keyphrase": "missing sanitisation and escaping",
                  "type": "rootcause"
                },
                {
                  "id": "weakness:XSS",
                  "keyphrase": "XSS",
                  "type": "weakness"
                },
                {
                  "id": "weakness:cross-site scripting",
                  "keyphrase": "cross-site scripting",
                  "type": "weakness"
                },
                {
                  "id": "impact:Stored XSS payloads",
                  "keyphrase": "Stored XSS payloads",
                  "type": "impact"
                },
                {
                  "id": "attacker:attackers",
                  "keyphrase": "attackers",
                  "type": "attacker"
                },
                {
                  "id": "product:wp-eMember WordPress plugin",
                  "keyphrase": "wp-eMember WordPress plugin",
                  "type": "product"
                },
                {
                  "id": "version:before v10.7.0",
                  "keyphrase": "before v10.7.0",
                  "type": "version"
                }
              ]
            },
            "similarity": 397.50162341878115
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
              "keyphrase_sources": [
                {
                  "id": "rootcause:does not have CSRF check",
                  "keyphrase": "does not have CSRF check",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:lack of CSRF check",
                  "keyphrase": "lack of CSRF check",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:missing sanitisation and escaping",
                  "keyphrase": "missing sanitisation and escaping",
                  "type": "rootcause"
                },
                {
                  "id": "weakness:XSS",
                  "keyphrase": "XSS",
                  "type": "weakness"
                },
                {
                  "id": "weakness:cross-site scripting",
                  "keyphrase": "cross-site scripting",
                  "type": "weakness"
                },
                {
                  "id": "impact:Stored XSS payloads",
                  "keyphrase": "Stored XSS payloads",
                  "type": "impact"
                },
                {
                  "id": "attacker:attackers",
                  "keyphrase": "attackers",
                  "type": "attacker"
                },
                {
                  "id": "product:wp-eMember WordPress plugin",
                  "keyphrase": "wp-eMember WordPress plugin",
                  "type": "product"
                },
                {
                  "id": "version:before v10.7.0",
                  "keyphrase": "before v10.7.0",
                  "type": "version"
                }
              ]
            },
            "similarity": 392.24272163015
          },
          {
            "metadata": {
              "doc_id": "434",
              "name": "Unrestricted Upload of File with Dangerous Type",
              "source": "sparse",
              "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
              "keyphrase_sources": [
                {
                  "id": "rootcause:does not have CSRF check",
                  "keyphrase": "does not have CSRF check",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:lack of CSRF check",
                  "keyphrase": "lack of CSRF check",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:missing sanitisation and escaping",
                  "keyphrase": "missing sanitisation and escaping",
                  "type": "rootcause"
                },
                {
                  "id": "weakness:XSS",
                  "keyphrase": "XSS",
                  "type": "weakness"
                },
                {
                  "id": "weakness:cross-site scripting",
                  "keyphrase": "cross-site scripting",
                  "type": "weakness"
                },
                {
                  "id": "impact:Stored XSS payloads",
                  "keyphrase": "Stored XSS payloads",
                  "type": "impact"
                },
                {
                  "id": "attacker:attackers",
                  "keyphrase": "attackers",
                  "type": "attacker"
                },
                {
                  "id": "product:wp-eMember WordPress plugin",
                  "keyphrase": "wp-eMember WordPress plugin",
                  "type": "product"
                },
                {
                  "id": "version:before v10.7.0",
                  "keyphrase": "before v10.7.0",
                  "type": "version"
                }
              ]
            },
            "similarity": 359.939401076878
          },
          {
            "metadata": {
              "doc_id": "425",
              "name": "Direct Request ('Forced Browsing')",
              "source": "sparse",
              "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
              "keyphrase_sources": [
                {
                  "id": "rootcause:does not have CSRF check",
                  "keyphrase": "does not have CSRF check",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:lack of CSRF check",
                  "keyphrase": "lack of CSRF check",
                  "type": "rootcause"
                },
                {
                  "id": "attacker:attackers",
                  "keyphrase": "attackers",
                  "type": "attacker"
                },
                {
                  "id": "product:wp-eMember WordPress plugin",
                  "keyphrase": "wp-eMember WordPress plugin",
                  "type": "product"
                },
                {
                  "id": "version:before v10.7.0",
                  "keyphrase": "before v10.7.0",
                  "type": "version"
                }
              ]
            },
            "similarity": 305.9979270375668
          }
        ]
      },
      "rootcause:lack of CSRF check": {
        "keyphrase": "lack of CSRF check",
        "type": "rootcause",
        "cwes": [
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 540.5163452015624
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 387.37293893459105
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action."
            },
            "similarity": 379.9749317266532
          },
          {
            "metadata": {
              "doc_id": "434",
              "name": "Unrestricted Upload of File with Dangerous Type",
              "source": "sparse",
              "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment."
            },
            "similarity": 363.26347118342113
          },
          {
            "metadata": {
              "doc_id": "425",
              "name": "Direct Request ('Forced Browsing')",
              "source": "sparse",
              "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files."
            },
            "similarity": 288.784410665467
          }
        ]
      },
      "rootcause:missing sanitisation and escaping": {
        "keyphrase": "missing sanitisation and escaping",
        "type": "rootcause",
        "cwes": [
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 564.7917455890212
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 403.30701675990093
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action."
            },
            "similarity": 379.9321403033237
          },
          {
            "metadata": {
              "doc_id": "434",
              "name": "Unrestricted Upload of File with Dangerous Type",
              "source": "sparse",
              "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment."
            },
            "similarity": 299.21833099017755
          },
          {
            "metadata": {
              "doc_id": "89",
              "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
              "keyphrase_sources": [
                {
                  "id": "rootcause:missing sanitisation and escaping",
                  "keyphrase": "missing sanitisation and escaping",
                  "type": "rootcause"
                }
              ]
            },
            "similarity": 284.3291846220659
          }
        ]
      },
      "weakness:XSS": {
        "keyphrase": "XSS",
        "type": "weakness",
        "cwes": [
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 425.2469426101051
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 314.87986077474966
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action."
            },
            "similarity": 278.12504351037086
          },
          {
            "metadata": {
              "doc_id": "434",
              "name": "Unrestricted Upload of File with Dangerous Type",
              "source": "sparse",
              "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment."
            },
            "similarity": 274.7320874046615
          },
          {
            "metadata": {
              "doc_id": "79",
              "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
              "source": "sparse",
              "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
              "keyphrase_sources": [
                {
                  "id": "weakness:XSS",
                  "keyphrase": "XSS",
                  "type": "weakness"
                },
                {
                  "id": "weakness:cross-site scripting",
                  "keyphrase": "cross-site scripting",
                  "type": "weakness"
                },
                {
                  "id": "impact:Stored XSS payloads",
                  "keyphrase": "Stored XSS payloads",
                  "type": "impact"
                }
              ]
            },
            "similarity": 249.37495657237704
          }
        ]
      },
      "weakness:cross-site scripting": {
        "keyphrase": "cross-site scripting",
        "type": "weakness",
        "cwes": [
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 493.27008788624113
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 362.05008865891006
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action."
            },
            "similarity": 319.11042856874815
          },
          {
            "metadata": {
              "doc_id": "434",
              "name": "Unrestricted Upload of File with Dangerous Type",
              "source": "sparse",
              "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment."
            },
            "similarity": 313.3406525529383
          },
          {
            "metadata": {
              "doc_id": "79",
              "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
              "source": "sparse",
              "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."
            },
            "similarity": 311.3397479292632
          }
        ]
      },
      "impact:Stored XSS payloads": {
        "keyphrase": "Stored XSS payloads",
        "type": "impact",
        "cwes": [
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 167.95913898335732
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 126.20729855040683
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action."
            },
            "similarity": 108.04516092429759
          },
          {
            "metadata": {
              "doc_id": "434",
              "name": "Unrestricted Upload of File with Dangerous Type",
              "source": "sparse",
              "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment."
            },
            "similarity": 104.1197820874216
          },
          {
            "metadata": {
              "doc_id": "79",
              "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
              "source": "sparse",
              "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."
            },
            "similarity": 96.39118469903718
          }
        ]
      },
      "attacker:attackers": {
        "keyphrase": "attackers",
        "type": "attacker",
        "cwes": [
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 144.63094534569902
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 105.40888414473342
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action."
            },
            "similarity": 100.45541170916835
          },
          {
            "metadata": {
              "doc_id": "434",
              "name": "Unrestricted Upload of File with Dangerous Type",
              "source": "sparse",
              "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment."
            },
            "similarity": 92.42050126205218
          },
          {
            "metadata": {
              "doc_id": "425",
              "name": "Direct Request ('Forced Browsing')",
              "source": "sparse",
              "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files."
            },
            "similarity": 82.97134841693546
          }
        ]
      },
      "product:wp-eMember WordPress plugin": {
        "keyphrase": "wp-eMember WordPress plugin",
        "type": "product",
        "cwes": [
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 175.3640720996925
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action."
            },
            "similarity": 122.90372755204055
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 120.46210115372246
          },
          {
            "metadata": {
              "doc_id": "434",
              "name": "Unrestricted Upload of File with Dangerous Type",
              "source": "sparse",
              "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment."
            },
            "similarity": 119.49804141819781
          },
          {
            "metadata": {
              "doc_id": "425",
              "name": "Direct Request ('Forced Browsing')",
              "source": "sparse",
              "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files."
            },
            "similarity": 106.36389649620509
          }
        ]
      },
      "version:before v10.7.0": {
        "keyphrase": "before v10.7.0",
        "type": "version",
        "cwes": [
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 150.04444343515573
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 111.35702845757159
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action."
            },
            "similarity": 106.15662899834209
          },
          {
            "metadata": {
              "doc_id": "434",
              "name": "Unrestricted Upload of File with Dangerous Type",
              "source": "sparse",
              "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment."
            },
            "similarity": 97.81042706142269
          },
          {
            "metadata": {
              "doc_id": "425",
              "name": "Direct Request ('Forced Browsing')",
              "source": "sparse",
              "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files."
            },
            "similarity": 88.32553967674207
          }
        ]
      }
    },
    "keyphrase_mapping": {
      "352": [
        {
          "id": "rootcause:does not have CSRF check",
          "keyphrase": "does not have CSRF check",
          "type": "rootcause"
        },
        {
          "id": "rootcause:lack of CSRF check",
          "keyphrase": "lack of CSRF check",
          "type": "rootcause"
        },
        {
          "id": "rootcause:missing sanitisation and escaping",
          "keyphrase": "missing sanitisation and escaping",
          "type": "rootcause"
        },
        {
          "id": "weakness:XSS",
          "keyphrase": "XSS",
          "type": "weakness"
        },
        {
          "id": "weakness:cross-site scripting",
          "keyphrase": "cross-site scripting",
          "type": "weakness"
        },
        {
          "id": "impact:Stored XSS payloads",
          "keyphrase": "Stored XSS payloads",
          "type": "impact"
        },
        {
          "id": "attacker:attackers",
          "keyphrase": "attackers",
          "type": "attacker"
        },
        {
          "id": "product:wp-eMember WordPress plugin",
          "keyphrase": "wp-eMember WordPress plugin",
          "type": "product"
        },
        {
          "id": "version:before v10.7.0",
          "keyphrase": "before v10.7.0",
          "type": "version"
        }
      ],
      "116": [
        {
          "id": "rootcause:does not have CSRF check",
          "keyphrase": "does not have CSRF check",
          "type": "rootcause"
        },
        {
          "id": "rootcause:lack of CSRF check",
          "keyphrase": "lack of CSRF check",
          "type": "rootcause"
        },
        {
          "id": "rootcause:missing sanitisation and escaping",
          "keyphrase": "missing sanitisation and escaping",
          "type": "rootcause"
        },
        {
          "id": "weakness:XSS",
          "keyphrase": "XSS",
          "type": "weakness"
        },
        {
          "id": "weakness:cross-site scripting",
          "keyphrase": "cross-site scripting",
          "type": "weakness"
        },
        {
          "id": "impact:Stored XSS payloads",
          "keyphrase": "Stored XSS payloads",
          "type": "impact"
        },
        {
          "id": "attacker:attackers",
          "keyphrase": "attackers",
          "type": "attacker"
        },
        {
          "id": "product:wp-eMember WordPress plugin",
          "keyphrase": "wp-eMember WordPress plugin",
          "type": "product"
        },
        {
          "id": "version:before v10.7.0",
          "keyphrase": "before v10.7.0",
          "type": "version"
        }
      ],
      "862": [
        {
          "id": "rootcause:does not have CSRF check",
          "keyphrase": "does not have CSRF check",
          "type": "rootcause"
        },
        {
          "id": "rootcause:lack of CSRF check",
          "keyphrase": "lack of CSRF check",
          "type": "rootcause"
        },
        {
          "id": "rootcause:missing sanitisation and escaping",
          "keyphrase": "missing sanitisation and escaping",
          "type": "rootcause"
        },
        {
          "id": "weakness:XSS",
          "keyphrase": "XSS",
          "type": "weakness"
        },
        {
          "id": "weakness:cross-site scripting",
          "keyphrase": "cross-site scripting",
          "type": "weakness"
        },
        {
          "id": "impact:Stored XSS payloads",
          "keyphrase": "Stored XSS payloads",
          "type": "impact"
        },
        {
          "id": "attacker:attackers",
          "keyphrase": "attackers",
          "type": "attacker"
        },
        {
          "id": "product:wp-eMember WordPress plugin",
          "keyphrase": "wp-eMember WordPress plugin",
          "type": "product"
        },
        {
          "id": "version:before v10.7.0",
          "keyphrase": "before v10.7.0",
          "type": "version"
        }
      ],
      "434": [
        {
          "id": "rootcause:does not have CSRF check",
          "keyphrase": "does not have CSRF check",
          "type": "rootcause"
        },
        {
          "id": "rootcause:lack of CSRF check",
          "keyphrase": "lack of CSRF check",
          "type": "rootcause"
        },
        {
          "id": "rootcause:missing sanitisation and escaping",
          "keyphrase": "missing sanitisation and escaping",
          "type": "rootcause"
        },
        {
          "id": "weakness:XSS",
          "keyphrase": "XSS",
          "type": "weakness"
        },
        {
          "id": "weakness:cross-site scripting",
          "keyphrase": "cross-site scripting",
          "type": "weakness"
        },
        {
          "id": "impact:Stored XSS payloads",
          "keyphrase": "Stored XSS payloads",
          "type": "impact"
        },
        {
          "id": "attacker:attackers",
          "keyphrase": "attackers",
          "type": "attacker"
        },
        {
          "id": "product:wp-eMember WordPress plugin",
          "keyphrase": "wp-eMember WordPress plugin",
          "type": "product"
        },
        {
          "id": "version:before v10.7.0",
          "keyphrase": "before v10.7.0",
          "type": "version"
        }
      ],
      "425": [
        {
          "id": "rootcause:does not have CSRF check",
          "keyphrase": "does not have CSRF check",
          "type": "rootcause"
        },
        {
          "id": "rootcause:lack of CSRF check",
          "keyphrase": "lack of CSRF check",
          "type": "rootcause"
        },
        {
          "id": "attacker:attackers",
          "keyphrase": "attackers",
          "type": "attacker"
        },
        {
          "id": "product:wp-eMember WordPress plugin",
          "keyphrase": "wp-eMember WordPress plugin",
          "type": "product"
        },
        {
          "id": "version:before v10.7.0",
          "keyphrase": "before v10.7.0",
          "type": "version"
        }
      ],
      "89": [
        {
          "id": "rootcause:missing sanitisation and escaping",
          "keyphrase": "missing sanitisation and escaping",
          "type": "rootcause"
        }
      ],
      "79": [
        {
          "id": "weakness:XSS",
          "keyphrase": "XSS",
          "type": "weakness"
        },
        {
          "id": "weakness:cross-site scripting",
          "keyphrase": "cross-site scripting",
          "type": "weakness"
        },
        {
          "id": "impact:Stored XSS payloads",
          "keyphrase": "Stored XSS payloads",
          "type": "impact"
        }
      ]
    },
    "relevant_cwes": [
      {
        "metadata": {
          "doc_id": "352",
          "name": "Cross-Site Request Forgery (CSRF)",
          "source": "sparse",
          "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
          "keyphrase_sources": [
            {
              "id": "rootcause:does not have CSRF check",
              "keyphrase": "does not have CSRF check",
              "type": "rootcause"
            },
            {
              "id": "rootcause:lack of CSRF check",
              "keyphrase": "lack of CSRF check",
              "type": "rootcause"
            },
            {
              "id": "rootcause:missing sanitisation and escaping",
              "keyphrase": "missing sanitisation and escaping",
              "type": "rootcause"
            },
            {
              "id": "weakness:XSS",
              "keyphrase": "XSS",
              "type": "weakness"
            },
            {
              "id": "weakness:cross-site scripting",
              "keyphrase": "cross-site scripting",
              "type": "weakness"
            },
            {
              "id": "impact:Stored XSS payloads",
              "keyphrase": "Stored XSS payloads",
              "type": "impact"
            },
            {
              "id": "attacker:attackers",
              "keyphrase": "attackers",
              "type": "attacker"
            },
            {
              "id": "product:wp-eMember WordPress plugin",
              "keyphrase": "wp-eMember WordPress plugin",
              "type": "product"
            },
            {
              "id": "version:before v10.7.0",
              "keyphrase": "before v10.7.0",
              "type": "version"
            }
          ]
        },
        "similarity": 543.1830552713783
      },
      {
        "metadata": {
          "doc_id": "116",
          "name": "Improper Encoding or Escaping of Output",
          "source": "sparse",
          "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
          "keyphrase_sources": [
            {
              "id": "rootcause:does not have CSRF check",
              "keyphrase": "does not have CSRF check",
              "type": "rootcause"
            },
            {
              "id": "rootcause:lack of CSRF check",
              "keyphrase": "lack of CSRF check",
              "type": "rootcause"
            },
            {
              "id": "rootcause:missing sanitisation and escaping",
              "keyphrase": "missing sanitisation and escaping",
              "type": "rootcause"
            },
            {
              "id": "weakness:XSS",
              "keyphrase": "XSS",
              "type": "weakness"
            },
            {
              "id": "weakness:cross-site scripting",
              "keyphrase": "cross-site scripting",
              "type": "weakness"
            },
            {
              "id": "impact:Stored XSS payloads",
              "keyphrase": "Stored XSS payloads",
              "type": "impact"
            },
            {
              "id": "attacker:attackers",
              "keyphrase": "attackers",
              "type": "attacker"
            },
            {
              "id": "product:wp-eMember WordPress plugin",
              "keyphrase": "wp-eMember WordPress plugin",
              "type": "product"
            },
            {
              "id": "version:before v10.7.0",
              "keyphrase": "before v10.7.0",
              "type": "version"
            }
          ]
        },
        "similarity": 397.50162341878115
      },
      {
        "metadata": {
          "doc_id": "862",
          "name": "Missing Authorization",
          "source": "sparse",
          "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
          "keyphrase_sources": [
            {
              "id": "rootcause:does not have CSRF check",
              "keyphrase": "does not have CSRF check",
              "type": "rootcause"
            },
            {
              "id": "rootcause:lack of CSRF check",
              "keyphrase": "lack of CSRF check",
              "type": "rootcause"
            },
            {
              "id": "rootcause:missing sanitisation and escaping",
              "keyphrase": "missing sanitisation and escaping",
              "type": "rootcause"
            },
            {
              "id": "weakness:XSS",
              "keyphrase": "XSS",
              "type": "weakness"
            },
            {
              "id": "weakness:cross-site scripting",
              "keyphrase": "cross-site scripting",
              "type": "weakness"
            },
            {
              "id": "impact:Stored XSS payloads",
              "keyphrase": "Stored XSS payloads",
              "type": "impact"
            },
            {
              "id": "attacker:attackers",
              "keyphrase": "attackers",
              "type": "attacker"
            },
            {
              "id": "product:wp-eMember WordPress plugin",
              "keyphrase": "wp-eMember WordPress plugin",
              "type": "product"
            },
            {
              "id": "version:before v10.7.0",
              "keyphrase": "before v10.7.0",
              "type": "version"
            }
          ]
        },
        "similarity": 392.24272163015
      },
      {
        "metadata": {
          "doc_id": "434",
          "name": "Unrestricted Upload of File with Dangerous Type",
          "source": "sparse",
          "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
          "keyphrase_sources": [
            {
              "id": "rootcause:does not have CSRF check",
              "keyphrase": "does not have CSRF check",
              "type": "rootcause"
            },
            {
              "id": "rootcause:lack of CSRF check",
              "keyphrase": "lack of CSRF check",
              "type": "rootcause"
            },
            {
              "id": "rootcause:missing sanitisation and escaping",
              "keyphrase": "missing sanitisation and escaping",
              "type": "rootcause"
            },
            {
              "id": "weakness:XSS",
              "keyphrase": "XSS",
              "type": "weakness"
            },
            {
              "id": "weakness:cross-site scripting",
              "keyphrase": "cross-site scripting",
              "type": "weakness"
            },
            {
              "id": "impact:Stored XSS payloads",
              "keyphrase": "Stored XSS payloads",
              "type": "impact"
            },
            {
              "id": "attacker:attackers",
              "keyphrase": "attackers",
              "type": "attacker"
            },
            {
              "id": "product:wp-eMember WordPress plugin",
              "keyphrase": "wp-eMember WordPress plugin",
              "type": "product"
            },
            {
              "id": "version:before v10.7.0",
              "keyphrase": "before v10.7.0",
              "type": "version"
            }
          ]
        },
        "similarity": 359.939401076878
      },
      {
        "metadata": {
          "doc_id": "425",
          "name": "Direct Request ('Forced Browsing')",
          "source": "sparse",
          "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
          "keyphrase_sources": [
            {
              "id": "rootcause:does not have CSRF check",
              "keyphrase": "does not have CSRF check",
              "type": "rootcause"
            },
            {
              "id": "rootcause:lack of CSRF check",
              "keyphrase": "lack of CSRF check",
              "type": "rootcause"
            },
            {
              "id": "attacker:attackers",
              "keyphrase": "attackers",
              "type": "attacker"
            },
            {
              "id": "product:wp-eMember WordPress plugin",
              "keyphrase": "wp-eMember WordPress plugin",
              "type": "product"
            },
            {
              "id": "version:before v10.7.0",
              "keyphrase": "before v10.7.0",
              "type": "version"
            }
          ]
        },
        "similarity": 305.9979270375668
      },
      {
        "metadata": {
          "doc_id": "89",
          "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
          "source": "sparse",
          "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
          "keyphrase_sources": [
            {
              "id": "rootcause:missing sanitisation and escaping",
              "keyphrase": "missing sanitisation and escaping",
              "type": "rootcause"
            }
          ]
        },
        "similarity": 284.3291846220659
      },
      {
        "metadata": {
          "doc_id": "79",
          "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
          "source": "sparse",
          "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
          "keyphrase_sources": [
            {
              "id": "weakness:XSS",
              "keyphrase": "XSS",
              "type": "weakness"
            },
            {
              "id": "weakness:cross-site scripting",
              "keyphrase": "cross-site scripting",
              "type": "weakness"
            },
            {
              "id": "impact:Stored XSS payloads",
              "keyphrase": "Stored XSS payloads",
              "type": "impact"
            }
          ]
        },
        "similarity": 249.37495657237704
      }
    ],
    "enhanced_query": "# Vulnerability Description\n\n    The wp-eMember WordPress plugin before v10.7.0 **does not have CSRF check** in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored **XSS** payloads via a CSRF attack\n\n    # Keyphrase-Specific CWE Analysis\n    This vulnerability contains multiple keyphrases that may map to different CWEs. \n    Please analyze each keyphrase separately and determine the most appropriate CWE(s) for each.\n\n    ## ROOTCAUSE: 'does not have CSRF check'\n\nRelevant CWEs for this ROOTCAUSE:\n\n### 1. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 543.18)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 2. CWE-116: Improper Encoding or Escaping of Output (Score: 397.50)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 3. CWE-862: Missing Authorization (Score: 392.24)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n### 4. CWE-434: Unrestricted Upload of File with Dangerous Type (Score: 359.94)\n\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment....\n\n### 5. CWE-425: Direct Request ('Forced Browsing') (Score: 306.00)\n\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files....\n\n## ROOTCAUSE: 'lack of CSRF check'\n\nRelevant CWEs for this ROOTCAUSE:\n\n### 1. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 543.18)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 2. CWE-116: Improper Encoding or Escaping of Output (Score: 397.50)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 3. CWE-862: Missing Authorization (Score: 392.24)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n### 4. CWE-434: Unrestricted Upload of File with Dangerous Type (Score: 359.94)\n\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment....\n\n### 5. CWE-425: Direct Request ('Forced Browsing') (Score: 306.00)\n\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files....\n\n## ROOTCAUSE: 'missing sanitisation and escaping'\n\nRelevant CWEs for this ROOTCAUSE:\n\n### 1. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 543.18)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 2. CWE-116: Improper Encoding or Escaping of Output (Score: 397.50)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 3. CWE-862: Missing Authorization (Score: 392.24)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n### 4. CWE-434: Unrestricted Upload of File with Dangerous Type (Score: 359.94)\n\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment....\n\n### 5. CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (Score: 284.33)\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal o...\n\n## WEAKNESS: 'XSS'\n\nRelevant CWEs for this WEAKNESS:\n\n### 1. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 543.18)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 2. CWE-116: Improper Encoding or Escaping of Output (Score: 397.50)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 3. CWE-862: Missing Authorization (Score: 392.24)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n### 4. CWE-434: Unrestricted Upload of File with Dangerous Type (Score: 359.94)\n\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment....\n\n### 5. CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (Score: 249.37)\n\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users....\n\n## WEAKNESS: 'cross-site scripting'\n\nRelevant CWEs for this WEAKNESS:\n\n### 1. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 543.18)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 2. CWE-116: Improper Encoding or Escaping of Output (Score: 397.50)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 3. CWE-862: Missing Authorization (Score: 392.24)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n### 4. CWE-434: Unrestricted Upload of File with Dangerous Type (Score: 359.94)\n\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment....\n\n### 5. CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (Score: 249.37)\n\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users....\n\n## IMPACT: 'Stored XSS payloads'\n\nRelevant CWEs for this IMPACT:\n\n### 1. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 543.18)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 2. CWE-116: Improper Encoding or Escaping of Output (Score: 397.50)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 3. CWE-862: Missing Authorization (Score: 392.24)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n### 4. CWE-434: Unrestricted Upload of File with Dangerous Type (Score: 359.94)\n\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment....\n\n### 5. CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (Score: 249.37)\n\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users....\n\n## ATTACKER: 'attackers'\n\nRelevant CWEs for this ATTACKER:\n\n### 1. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 543.18)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 2. CWE-116: Improper Encoding or Escaping of Output (Score: 397.50)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 3. CWE-862: Missing Authorization (Score: 392.24)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n### 4. CWE-434: Unrestricted Upload of File with Dangerous Type (Score: 359.94)\n\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment....\n\n### 5. CWE-425: Direct Request ('Forced Browsing') (Score: 306.00)\n\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files....\n\n## PRODUCT: 'wp-eMember WordPress plugin'\n\nRelevant CWEs for this PRODUCT:\n\n### 1. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 543.18)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 2. CWE-116: Improper Encoding or Escaping of Output (Score: 397.50)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 3. CWE-862: Missing Authorization (Score: 392.24)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n### 4. CWE-434: Unrestricted Upload of File with Dangerous Type (Score: 359.94)\n\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment....\n\n### 5. CWE-425: Direct Request ('Forced Browsing') (Score: 306.00)\n\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files....\n\n## VERSION: 'before v10.7.0'\n\nRelevant CWEs for this VERSION:\n\n### 1. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 543.18)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 2. CWE-116: Improper Encoding or Escaping of Output (Score: 397.50)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 3. CWE-862: Missing Authorization (Score: 392.24)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n### 4. CWE-434: Unrestricted Upload of File with Dangerous Type (Score: 359.94)\n\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment....\n\n### 5. CWE-425: Direct Request ('Forced Browsing') (Score: 306.00)\n\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files....\n\n\n    # Analysis Instructions\n    1. For each keyphrase, identify the most appropriate CWE(s) that represent the weakness.\n    2. Consider how the different keyphrases might relate to each other in the vulnerability chain.\n    3. Provide a final determination of primary CWE(s) and any secondary CWEs.\n    4. Format your response using the standard analysis template.\n\n    Please analyze how these different weaknesses interact and provide a comprehensive CWE classification.\n    "
  },
  "retrieval_time": 1.4647636413574219
}