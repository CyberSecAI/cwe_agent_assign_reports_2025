{
  "cve_id": "CVE-2025-24797",
  "description": "Meshtastic is an open source mesh networking solution. A fault in the handling of mesh packets containing invalid protobuf data can result in an attacker-controlled **buffer overflow**, allowing an attacker to hijack execution flow, potentially resulting in remote code execution. This attack **does not require authentication** or user interaction, as long as the target device rebroadcasts packets on the default channel. This vulnerability fixed in 2.6.2.",
  "key_phrases": {
    "rootcause": "does not require authentication",
    "weakness": "buffer overflow",
    "impact": "remote code execution",
    "vector": "packets containing invalid protobuf data",
    "attacker": "attacker",
    "product": "Meshtastic",
    "version": "",
    "component": ""
  },
  "reference_content": "## Analysis of CVE-2025-24797 Content\n\nThis content **relates** to CVE-2025-24797. It provides detailed information about the vulnerability.\n\n**Root cause of vulnerability:**\n\nA fault in the handling of mesh packets containing invalid protobuf data.\n\n**Weaknesses/vulnerabilities present:**\n\n* CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\n* CWE-122: Heap-based Buffer Overflow\n* CWE-787: Out-of-bounds Write\n\n**Impact of exploitation:**\n\nAttacker-controlled buffer overflow, allowing an attacker to hijack execution flow, potentially resulting in remote code execution.\n\n**Attack vectors:**\n\nNetwork - Exploitation occurs over the network. The vulnerability is triggered by malformed mesh packets. The attack does not require authentication or user interaction, as long as the target device rebroadcasts packets on the default channel.\n\n**Required attacker capabilities/position:**\n\nNo specific privileges are required. The attacker needs to be able to send malformed packets to the target device.\n\n**Mitigation or fix:**\n\nPatched in version 2.6.2. Versions < 2.6 are affected.\n\n**Additional Details (more than official CVE description):**\n\n*   **CVSS Score:** 9.4 (Critical)\n*   **CVSS v3 base metrics:** AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:H\n*   **Attribution:** Alain Siegrist (@Alainx277) and Marc Siegrist (@MSiegrist) reported the vulnerability.\n*   **Responsible Disclosure Timeline:** Subject to a 90-day responsible disclosure timeline.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID    | CWE Name                                                                 | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| --------- | ------------------------------------------------------------------------ | ---------- | --------------------- | ------------------------------- | ------------------------------- |\n| CWE-787   | Out-of-bounds Write                                                      | 0.9        | Base                  | Primary                         | Allowed                         |\n| CWE-122   | Heap-based Buffer Overflow                                               | 0.8        | Base                  | Secondary                       | Allowed                         |\n| CWE-306   | Missing Authentication for Critical Function                             | 0.7        | Base                  | Secondary                       | Allowed                         |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-787 (Out-of-bounds Write), a base-level CWE. CWE-122 (Heap-based Buffer Overflow) is a more specific type of buffer overflow than CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer) and is considered as a more detailed cause due to the invalid protobuf data. CWE-306 (Missing Authentication for Critical Function) is relevant as the vulnerability **does not require authentication**, as noted in the description. The relationships show how a lack of authentication can lead to a buffer overflow, and how a general buffer overflow can be further specified as a heap-based overflow leading to out-of-bounds write.\n\n```mermaid\ngraph TD\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe122[\"CWE-122: Heap-based Buffer Overflow\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\"]\n\n    cwe787 -->|CHILDOF| cwe119\n    cwe122 -->|CHILDOF| cwe119\n    cwe122 -->|CANPRECEDE| cwe787\n    cwe306 -->|CANPRECEDE| cwe122\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe787 primary\n    class cwe122,cwe306 secondary\n    class cwe119 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **missing authentication (CWE-306)**, allowing an attacker to send malformed packets. These packets with invalid protobuf data cause a **heap-based buffer overflow (CWE-122)**, which then leads to an **out-of-bounds write (CWE-787)**. This allows the attacker to hijack execution flow and potentially achieve remote code execution.\n\nCWE-306 -> CWE-122 -> CWE-787\n\n## Summary of Analysis\nThe initial assessment, based on the **weakness** \"**buffer overflow**\" in the vulnerability description and \"**attacker-controlled buffer overflow**\" in the CVE reference summary, pointed towards CWE-120 (Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')) or CWE-787 (Out-of-bounds Write). However, the CVE reference summary also mentions CWE-122 (Heap-based Buffer Overflow) and CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer).\n\nThe retriever results listed CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer) at the top, but this is a class-level CWE and less specific. CWE-787 (Out-of-bounds Write) is a base-level CWE and is more descriptive of the actual **root cause** and impact, since the buffer overflow leads to writing outside the allocated memory region. The vulnerability description key phrases also indicated that **does not require authentication** is a rootcause, and this maps to CWE-306 (Missing Authentication for Critical Function).\n\nTherefore, the primary CWE is CWE-787 (Out-of-bounds Write), a Base level weakness, with CWE-122 (Heap-based Buffer Overflow) and CWE-306 (Missing Authentication for Critical Function) being contributing factors.\n\nRelevant CWE Information:\n*   **CWE-787 (Out-of-bounds Write):** This CWE accurately describes the vulnerability, as the **attacker-controlled buffer overflow** allows writing data outside the intended memory region. The security implication is that an attacker can overwrite critical data or code, leading to arbitrary code execution.\n*   **CWE-122 (Heap-based Buffer Overflow):** This CWE is relevant because the buffer overflow occurs on the heap, as suggested by the \"invalid protobuf data\" triggering the issue. The security implication is similar to CWE-787, enabling attackers to overwrite heap memory and potentially execute arbitrary code.\n*   **CWE-306 (Missing Authentication for Critical Function):** This CWE is also relevant because the attack **does not require authentication**. This missing authentication allows the attacker to send malicious packets to the target device without any prior authorization.\n\nCWEs considered but not used:\n*   CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer): This is a class-level CWE and too general. The vulnerability is more specifically an out-of-bounds write (CWE-787).\n*   CWE-120 (Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')): While this CWE relates to buffer overflows, the description does not indicate the classic buffer copy scenario where the size of the input is not checked.\n*   CWE-190 (Integer Overflow or Wraparound): This CWE is not directly related to the vulnerability, as there is no mention of integer overflow or wraparound in the description.\n*   CWE-1284 (Improper Validation of Specified Quantity in Input): This CWE is not directly related as the issue is not a failure to validate a specified quantity in input.\n*   CWE-287 (Improper Authentication) and CWE-290 (Authentication Bypass by Spoofing): These CWEs are not as accurate as CWE-306 because the description states that authentication is **not required** rather than being improper or bypassed.",
  "analysis_with_relationships": "# Summary\n| CWE ID    | CWE Name                                                                 | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| --------- | ------------------------------------------------------------------------ | ---------- | --------------------- | ------------------------------- | ------------------------------- |\n| CWE-787   | Out-of-bounds Write                                                      | 0.9        | Base                  | Primary                         | Allowed                         |\n| CWE-122   | Heap-based Buffer Overflow                                               | 0.8        | Base                  | Secondary                       | Allowed                         |\n| CWE-306   | Missing Authentication for Critical Function                             | 0.7        | Base                  | Secondary                       | Allowed                         |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-787 (Out-of-bounds Write), a base-level CWE. CWE-122 (Heap-based Buffer Overflow) is a more specific type of buffer overflow than CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer) and is considered as a more detailed cause due to the invalid protobuf data. CWE-306 (Missing Authentication for Critical Function) is relevant as the vulnerability **does not require authentication**, as noted in the description. The relationships show how a lack of authentication can lead to a buffer overflow, and how a general buffer overflow can be further specified as a heap-based overflow leading to out-of-bounds write.\n\n```mermaid\ngraph TD\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe122[\"CWE-122: Heap-based Buffer Overflow\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\"]\n\n    cwe787 -->|CHILDOF| cwe119\n    cwe122 -->|CHILDOF| cwe119\n    cwe122 -->|CANPRECEDE| cwe787\n    cwe306 -->|CANPRECEDE| cwe122\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe787 primary\n    class cwe122,cwe306 secondary\n    class cwe119 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **missing authentication (CWE-306)**, allowing an attacker to send malformed packets. These packets with invalid protobuf data cause a **heap-based buffer overflow (CWE-122)**, which then leads to an **out-of-bounds write (CWE-787)**. This allows the attacker to hijack execution flow and potentially achieve remote code execution.\n\nCWE-306 -> CWE-122 -> CWE-787\n\n## Summary of Analysis\nThe initial assessment, based on the **weakness** \"**buffer overflow**\" in the vulnerability description and \"**attacker-controlled buffer overflow**\" in the CVE reference summary, pointed towards CWE-120 (Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')) or CWE-787 (Out-of-bounds Write). However, the CVE reference summary also mentions CWE-122 (Heap-based Buffer Overflow) and CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer).\n\nThe retriever results listed CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer) at the top, but this is a class-level CWE and less specific. CWE-787 (Out-of-bounds Write) is a base-level CWE and is more descriptive of the actual **root cause** and impact, since the buffer overflow leads to writing outside the allocated memory region. The vulnerability description key phrases also indicated that **does not require authentication** is a rootcause, and this maps to CWE-306 (Missing Authentication for Critical Function).\n\nTherefore, the primary CWE is CWE-787 (Out-of-bounds Write), a Base level weakness, with CWE-122 (Heap-based Buffer Overflow) and CWE-306 (Missing Authentication for Critical Function) being contributing factors.\n\nRelevant CWE Information:\n*   **CWE-787 (Out-of-bounds Write):** This CWE accurately describes the vulnerability, as the **attacker-controlled buffer overflow** allows writing data outside the intended memory region. The security implication is that an attacker can overwrite critical data or code, leading to arbitrary code execution.\n*   **CWE-122 (Heap-based Buffer Overflow):** This CWE is relevant because the buffer overflow occurs on the heap, as suggested by the \"invalid protobuf data\" triggering the issue. The security implication is similar to CWE-787, enabling attackers to overwrite heap memory and potentially execute arbitrary code.\n*   **CWE-306 (Missing Authentication for Critical Function):** This CWE is also relevant because the attack **does not require authentication**. This missing authentication allows the attacker to send malicious packets to the target device without any prior authorization.\n\nCWEs considered but not used:\n*   CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer): This is a class-level CWE and too general. The vulnerability is more specifically an out-of-bounds write (CWE-787).\n*   CWE-120 (Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')): While this CWE relates to buffer overflows, the description does not indicate the classic buffer copy scenario where the size of the input is not checked.\n*   CWE-190 (Integer Overflow or Wraparound): This CWE is not directly related to the vulnerability, as there is no mention of integer overflow or wraparound in the description.\n*   CWE-1284 (Improper Validation of Specified Quantity in Input): This CWE is not directly related as the issue is not a failure to validate a specified quantity in input.\n*   CWE-287 (Improper Authentication) and CWE-290 (Authentication Bypass by Spoofing): These CWEs are not as accurate as CWE-306 because the description states that authentication is **not required** rather than being improper or bypassed.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-1284:**\n- 1284 (Improper Validation of Specified Quantity in Input) - ROOT\n\n\n**Chain starting from CWE-290:**\n- 290 (Authentication Bypass by Spoofing) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Buffer Overflow",
        "match_reason": "exact_match_whole_phrase"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "190",
        "name": "Integer Overflow or Wraparound",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Overflow",
        "match_reason": "term_in_phrase_whole_phrase"
      },
      "similarity": 800.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "120",
        "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Classic Buffer Overflow",
        "match_reason": "phrase_in_term_whole_phrase"
      },
      "similarity": 700.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "source": "sparse"
      },
      "similarity": 414.97038618112157
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 400.37755009577046
    },
    {
      "metadata": {
        "doc_id": "287",
        "name": "Improper Authentication",
        "source": "sparse"
      },
      "similarity": 393.65520283482414
    },
    {
      "metadata": {
        "doc_id": "290",
        "name": "Authentication Bypass by Spoofing",
        "source": "sparse"
      },
      "similarity": 393.23395534435167
    },
    {
      "metadata": {
        "doc_id": "787",
        "name": "Out-of-bounds Write",
        "source": "sparse"
      },
      "similarity": 392.7826700282208
    },
    {
      "metadata": {
        "doc_id": "121",
        "name": "Stack-based Buffer Overflow",
        "type": "Variant",
        "original_content": "A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",
        "keyphrase_source": "weakness:buffer overflow",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.4698862307370174,
            "sparse": 360.94330553120193
          }
        }
      },
      "similarity": 0.4698862307370174
    },
    {
      "doc_id": "128",
      "text": "CWE-128: Wrap-around Error",
      "score": 2.9120000000000004,
      "metadata": {
        "doc_id": "128",
        "name": "Wrap-around Error",
        "type": "base",
        "original_content": "CWE-128: Wrap-around Error",
        "relationships": [
          {
            "source_id": "128",
            "target_id": "190",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "128",
            "target_id": "119",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "128",
            "target_id": "682",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "682",
            "target_id": "128",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "119",
            "target_id": "128",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0,
          "peer_group": 0.9
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward",
            "peer_relationship"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "119",
                  "128",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "119"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "119",
                  "128",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "119"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "128",
                  "119",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "119"
            },
            "peer_relationship": {
              "path": [
                [
                  "128",
                  "190",
                  "PEEROF"
                ]
              ],
              "score": 0.9,
              "type": "peer_relationship",
              "source": "190"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.9120000000000004
          }
        }
      },
      "similarity": 2.9120000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-1284",
      "CWE-290",
      "CWE-787",
      "CWE-306",
      "CWE-190",
      "CWE-122",
      "CWE-287",
      "CWE-119",
      "CWE-120"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}