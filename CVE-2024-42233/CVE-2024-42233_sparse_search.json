{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved filemap replace pte_offset_map() with pte_offset_map_nolock() The vmf->ptl in filemap_fault_recheck_pte_none() is still set from handle_pte_fault(). But at the same time, we did a pte_unmap(vmf->pte). After a pte_unmap(vmf->pte) unmap and rcu_read_unlock(), the page table may be racily changed and vmf->ptl maybe fails to protect the actual page table. Fix this by replacing pte_offset_map() with pte_offset_map_nolock(). As David said, the PTL pointer might be stale so if we continue to use it infilemap_fault_recheck_pte_none(), it might trigger UAF. Also, if the PTL fails, the issue fixed by commit 58f327f2ce80 (filemap avoid unnecessary major faults in filemap_fault()) might reappear.",
  "keyphrases": {
    "rootcause": [
      "use of stale PTL pointer"
    ]
  },
  "timestamp": "2025-07-12 03:40:52",
  "cve_id": "CVE-2024-42233",
  "result_count": 12,
  "results": [
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 504.5663265407094,
      "search_source": "rootcause:use of stale PTL pointer"
    },
    {
      "cwe_id": "415",
      "name": "Double Free",
      "score": 502.6868348008361,
      "search_source": "rootcause:use of stale PTL pointer"
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "score": 479.19523234049296,
      "search_source": "rootcause:use of stale PTL pointer"
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "score": 471.5764637514444,
      "search_source": "rootcause:use of stale PTL pointer"
    },
    {
      "cwe_id": "911",
      "name": "Improper Update of Reference Count",
      "score": 467.86312188486437,
      "search_source": "rootcause:use of stale PTL pointer"
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "score": 467.78286989544654,
      "search_source": "rootcause:use of stale PTL pointer"
    },
    {
      "cwe_id": "61",
      "name": "UNIX Symbolic Link (Symlink) Following",
      "score": 466.1837213225788,
      "search_source": "rootcause:use of stale PTL pointer"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "score": 465.390895012505,
      "search_source": "rootcause:use of stale PTL pointer"
    },
    {
      "cwe_id": "824",
      "name": "Access of Uninitialized Pointer",
      "score": 454.33342212443614,
      "search_source": "rootcause:use of stale PTL pointer"
    },
    {
      "cwe_id": "822",
      "name": "Untrusted Pointer Dereference",
      "score": 453.3865353043411,
      "search_source": "rootcause:use of stale PTL pointer"
    },
    {
      "cwe_id": "212",
      "name": "Improper Removal of Sensitive Information Before Storage or Transfer",
      "score": 146.8630681376491,
      "search_source": "base_query"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 143.6753859544027,
      "search_source": "base_query"
    }
  ]
}