{
  "cve_id": "CVE-2024-39344",
  "description": "An issue was discovered in the Docusign API package 8.142.14 for Salesforce. The Apttus_DocuApi__DocusignAuthentication__mdt object is installed via the marketplace from this package and stores some configuration information in a manner that could be compromised. With the default settings when installed for all users, the object can be accessible and (via its fields) could disclose some keys. These disclosed components can be combined to create a valid session via the Docusign API. This will generally lead to a complete compromise of the Docusign account because the session is for an administrator service account and may have permission to re-authenticate as specific users with the same authorization flow.",
  "key_phrases": {
    "rootcause": "improper storage of sensitive information",
    "weakness": "",
    "impact": "complete compromise of Docusign account",
    "vector": "",
    "attacker": "",
    "product": "Docusign API package",
    "version": "8.142.14",
    "component": "Apttus_DocuApi__DocusignAuthentication__mdt object"
  },
  "reference_content": "- **Root cause of vulnerability:** Improper storage of sensitive API keys within a custom metadata object (`Apttus_DocuApi__DocusignAuthentication__mdt`) in the Conga Docusign API package for Salesforce.\n- **Weaknesses/vulnerabilities present:**\n    - Insecure storage of API keys in a publicly accessible custom metadata object.\n    - Lack of proper access controls on the custom metadata object, allowing unauthorized users to read sensitive data.\n    - Use of default settings during package installation, making the object accessible to all users.\n- **Impact of exploitation:**\n    - Complete compromise of the Docusign account, as the disclosed API keys can be used to create a valid session.\n    - Potential for attackers to re-authenticate as specific users within the Docusign account due to the admin service account's permissions.\n- **Attack vectors:**\n    - Sending a specially crafted HTTP request to examine the custom metadata record.\n    - Direct access to the metadata object through the Salesforce platform, due to insecure default configurations.\n- **Required attacker capabilities/position:**\n    - Ability to access the custom metadata records, which can be achieved by simply being a user on the Salesforce instance with default installation settings.\n    - Knowledge of the API session creation process to use disclosed API keys.\n    - Ability to send a HTTP request to obtain the information.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID    | CWE Name                                                        | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :-------------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-256   | Plaintext Storage of a Password                                 | 0.9        | Base                  | Allowed                       | Primary CWE                     |\n| CWE-266   | Incorrect Privilege Assignment                                  | 0.7        | Base                  | Allowed                       | Secondary Candidate             |\n| CWE-306   | Missing Authentication for Critical Function                    | 0.6        | Base                  | Allowed                       | Secondary Candidate             |\n| CWE-863   | Incorrect Authorization                                         | 0.6        | Class                  | Allowed-with-Review           | Secondary Candidate             |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-256, which directly reflects the **improper storage of sensitive information**. Other CWEs considered relate to privilege management, authentication, and authorization, forming a potential chain of weaknesses. For example, **incorrect privilege assignment** (CWE-266) could lead to the **missing authentication** (CWE-306) or **incorrect authorization** (CWE-863). The hierarchical relationships and chain patterns helped to refine the selection and prioritize the root cause. Abstraction levels were chosen to be as specific as the evidence allows, focusing on Base level CWEs where possible.\n\n```mermaid\ngraph TD\n    cwe256[\"CWE-256: Plaintext Storage of a Password\"]\n    cwe266[\"CWE-266: Incorrect Privilege Assignment\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    \n    cwe306 -->|CANPRECEDE| cwe863\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe256 primary\n    class cwe266,cwe306,cwe863 secondary\n```\n\n## Vulnerability Chain\n1.  **Root Cause:** **Improper Storage of Sensitive Information** (CWE-256) in the `Apttus_DocuApi__DocusignAuthentication__mdt` object.\n2.  **Incorrect Privilege Assignment** (CWE-266): The object is accessible to all users due to default settings, potentially combined with privilege issues in how the API keys are managed.\n3.  **Missing Authentication for Critical Function** (CWE-306) or **Incorrect Authorization** (CWE-863): The disclosed keys can be used to create a valid session, bypassing or incorrectly performing authentication and authorization checks.\n4.  **Impact:** Complete compromise of the Docusign account, including potential re-authentication as specific users.\n\n## Summary of Analysis\nThe initial analysis focused on identifying the root cause and related weaknesses based on the provided evidence. The primary weakness identified is CWE-256 (Plaintext Storage of a Password) due to the **improper storage of sensitive API keys**. The vulnerability description and CVE summary clearly indicate that the API keys are stored in a manner that could be compromised. The retriever results and enhanced context provide additional candidate CWEs related to authorization and privilege management, which are considered as secondary contributing factors. The final selection prioritizes the root cause (CWE-256) while acknowledging the potential impact of other weaknesses like incorrect privilege assignment (CWE-266), missing authentication (CWE-306), and incorrect authorization (CWE-863). The selected CWEs are at the optimal level of specificity, providing a clear and accurate representation of the vulnerability.\n\nRelevant CWE Information:\n\n*   **CWE-256: Plaintext Storage of a Password**\n    *   The vulnerability involves storing API keys in a custom metadata object without proper encryption or protection. This directly aligns with CWE-256, which describes the storage of sensitive information in plaintext.\n    *   The security implication is that unauthorized users can easily access and use these keys to compromise the Docusign account.\n    *   This is the primary weakness because it directly leads to the disclosure of sensitive credentials.\n    *   Mapping Guidance: Allowed.\n*   **CWE-266: Incorrect Privilege Assignment**\n    *   The vulnerability description mentions that the object can be accessible to all users with default settings. This suggests that the privileges for accessing the metadata object are incorrectly assigned, allowing unauthorized users to read the sensitive data.\n    *   This weakness could contribute to the overall vulnerability by making it easier for attackers to access the API keys.\n    *   Mapping Guidance: Allowed.\n*   **CWE-306: Missing Authentication for Critical Function**\n    *   The disclosed keys can be used to create a valid session, potentially bypassing authentication checks. This suggests a lack of proper authentication mechanisms for accessing critical functions within the Docusign API.\n    *   This weakness could be exploited by attackers to gain unauthorized access to the Docusign account.\n    *   Mapping Guidance: Allowed.\n*   **CWE-863: Incorrect Authorization**\n    *   The vulnerability description mentions that the session created using the disclosed keys may have permission to re-authenticate as specific users. This suggests that the authorization checks are not correctly performed, allowing unauthorized users to perform actions they should not be allowed to perform.\n    *   This weakness could be exploited by attackers to impersonate other users within the Docusign account.\n    *   Mapping Guidance: Allowed-with-Review.\n\nCWEs Considered but Not Used:\n\n*   CWE-201: Insertion of Sensitive Information Into Sent Data - This CWE focuses on sending sensitive data, whereas the vulnerability is about storing it insecurely.\n*   CWE-285: Improper Authorization - Considered but less specific than CWE-863 for this case.\n*   CWE-269: Improper Privilege Management - Discouraged and less specific than CWE-266.\n*   CWE-532: Insertion of Sensitive Information into Log File - Not applicable as the sensitive information is stored in a metadata object, not a log file.\n*   CWE-226: Sensitive Information in Resource Not Removed Before Reuse - Not applicable as the issue is with initial storage, not reuse.\n*   CWE-639: Authorization Bypass Through User-Controlled Key - While relevant, CWE-256 is the more direct root cause.\n* CWE-732: Incorrect Permission Assignment for Critical Resource - While the issue involves permissions, CWE-266 more directly captures the incorrect privilege assignment aspect.",
  "analysis_with_relationships": "# Summary\n| CWE ID    | CWE Name                                                        | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :-------------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-256   | Plaintext Storage of a Password                                 | 0.9        | Base                  | Allowed                       | Primary CWE                     |\n| CWE-266   | Incorrect Privilege Assignment                                  | 0.7        | Base                  | Allowed                       | Secondary Candidate             |\n| CWE-306   | Missing Authentication for Critical Function                    | 0.6        | Base                  | Allowed                       | Secondary Candidate             |\n| CWE-863   | Incorrect Authorization                                         | 0.6        | Class                  | Allowed-with-Review           | Secondary Candidate             |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-256, which directly reflects the **improper storage of sensitive information**. Other CWEs considered relate to privilege management, authentication, and authorization, forming a potential chain of weaknesses. For example, **incorrect privilege assignment** (CWE-266) could lead to the **missing authentication** (CWE-306) or **incorrect authorization** (CWE-863). The hierarchical relationships and chain patterns helped to refine the selection and prioritize the root cause. Abstraction levels were chosen to be as specific as the evidence allows, focusing on Base level CWEs where possible.\n\n```mermaid\ngraph TD\n    cwe256[\"CWE-256: Plaintext Storage of a Password\"]\n    cwe266[\"CWE-266: Incorrect Privilege Assignment\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    \n    cwe306 -->|CANPRECEDE| cwe863\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe256 primary\n    class cwe266,cwe306,cwe863 secondary\n```\n\n## Vulnerability Chain\n1.  **Root Cause:** **Improper Storage of Sensitive Information** (CWE-256) in the `Apttus_DocuApi__DocusignAuthentication__mdt` object.\n2.  **Incorrect Privilege Assignment** (CWE-266): The object is accessible to all users due to default settings, potentially combined with privilege issues in how the API keys are managed.\n3.  **Missing Authentication for Critical Function** (CWE-306) or **Incorrect Authorization** (CWE-863): The disclosed keys can be used to create a valid session, bypassing or incorrectly performing authentication and authorization checks.\n4.  **Impact:** Complete compromise of the Docusign account, including potential re-authentication as specific users.\n\n## Summary of Analysis\nThe initial analysis focused on identifying the root cause and related weaknesses based on the provided evidence. The primary weakness identified is CWE-256 (Plaintext Storage of a Password) due to the **improper storage of sensitive API keys**. The vulnerability description and CVE summary clearly indicate that the API keys are stored in a manner that could be compromised. The retriever results and enhanced context provide additional candidate CWEs related to authorization and privilege management, which are considered as secondary contributing factors. The final selection prioritizes the root cause (CWE-256) while acknowledging the potential impact of other weaknesses like incorrect privilege assignment (CWE-266), missing authentication (CWE-306), and incorrect authorization (CWE-863). The selected CWEs are at the optimal level of specificity, providing a clear and accurate representation of the vulnerability.\n\nRelevant CWE Information:\n\n*   **CWE-256: Plaintext Storage of a Password**\n    *   The vulnerability involves storing API keys in a custom metadata object without proper encryption or protection. This directly aligns with CWE-256, which describes the storage of sensitive information in plaintext.\n    *   The security implication is that unauthorized users can easily access and use these keys to compromise the Docusign account.\n    *   This is the primary weakness because it directly leads to the disclosure of sensitive credentials.\n    *   Mapping Guidance: Allowed.\n*   **CWE-266: Incorrect Privilege Assignment**\n    *   The vulnerability description mentions that the object can be accessible to all users with default settings. This suggests that the privileges for accessing the metadata object are incorrectly assigned, allowing unauthorized users to read the sensitive data.\n    *   This weakness could contribute to the overall vulnerability by making it easier for attackers to access the API keys.\n    *   Mapping Guidance: Allowed.\n*   **CWE-306: Missing Authentication for Critical Function**\n    *   The disclosed keys can be used to create a valid session, potentially bypassing authentication checks. This suggests a lack of proper authentication mechanisms for accessing critical functions within the Docusign API.\n    *   This weakness could be exploited by attackers to gain unauthorized access to the Docusign account.\n    *   Mapping Guidance: Allowed.\n*   **CWE-863: Incorrect Authorization**\n    *   The vulnerability description mentions that the session created using the disclosed keys may have permission to re-authenticate as specific users. This suggests that the authorization checks are not correctly performed, allowing unauthorized users to perform actions they should not be allowed to perform.\n    *   This weakness could be exploited by attackers to impersonate other users within the Docusign account.\n    *   Mapping Guidance: Allowed-with-Review.\n\nCWEs Considered but Not Used:\n\n*   CWE-201: Insertion of Sensitive Information Into Sent Data - This CWE focuses on sending sensitive data, whereas the vulnerability is about storing it insecurely.\n*   CWE-285: Improper Authorization - Considered but less specific than CWE-863 for this case.\n*   CWE-269: Improper Privilege Management - Discouraged and less specific than CWE-266.\n*   CWE-532: Insertion of Sensitive Information into Log File - Not applicable as the sensitive information is stored in a metadata object, not a log file.\n*   CWE-226: Sensitive Information in Resource Not Removed Before Reuse - Not applicable as the issue is with initial storage, not reuse.\n*   CWE-639: Authorization Bypass Through User-Controlled Key - While relevant, CWE-256 is the more direct root cause.\n* CWE-732: Incorrect Permission Assignment for Critical Resource - While the issue involves permissions, CWE-266 more directly captures the incorrect privilege assignment aspect.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-226:**\n- 226 (Sensitive Information in Resource Not Removed Before Reuse) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 675.1344146469507
    },
    {
      "metadata": {
        "doc_id": "639",
        "name": "Authorization Bypass Through User-Controlled Key",
        "source": "sparse"
      },
      "similarity": 662.1627081999172
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 654.762030879675
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 646.6174866943692
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 642.0658691300619
    },
    {
      "metadata": {
        "doc_id": "256",
        "name": "Plaintext Storage of a Password",
        "source": "sparse"
      },
      "similarity": 640.8258608539525
    },
    {
      "metadata": {
        "doc_id": "732",
        "name": "Incorrect Permission Assignment for Critical Resource",
        "source": "sparse"
      },
      "similarity": 633.4936641681036
    },
    {
      "metadata": {
        "doc_id": "269",
        "name": "Improper Privilege Management",
        "source": "sparse"
      },
      "similarity": 631.3003915631812
    },
    {
      "metadata": {
        "doc_id": "532",
        "name": "Insertion of Sensitive Information into Log File",
        "type": "Base",
        "original_content": "The product writes sensitive information to a log file.",
        "keyphrase_source": "rootcause:improper storage of sensitive information",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5282357785107374,
            "graph": 1.660029697888295
          }
        }
      },
      "similarity": 0.5282357785107374
    },
    {
      "doc_id": "226",
      "text": "CWE-226: Sensitive Information in Resource Not Removed Before Reuse",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "226",
        "name": "Sensitive Information in Resource Not Removed Before Reuse",
        "type": "base",
        "original_content": "CWE-226: Sensitive Information in Resource Not Removed Before Reuse",
        "relationships": [
          {
            "source_id": "226",
            "target_id": "244",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "1342",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "1301",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "1272",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "1239",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "201",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "212",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "459",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "459",
            "target_id": "226",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "244",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "212",
            "target_id": "226",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "201",
            "target_id": "226",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1342",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1194"
            }
          },
          {
            "source_id": "1342",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1301",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1272",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1239",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1194"
            }
          },
          {
            "source_id": "1239",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "201",
                  "226",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "201"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "201",
                  "226",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "201"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "226",
                  "201",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "201"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-226",
      "CWE-732",
      "CWE-639",
      "CWE-306",
      "CWE-201",
      "CWE-269",
      "CWE-256",
      "CWE-285",
      "CWE-266",
      "CWE-532"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}