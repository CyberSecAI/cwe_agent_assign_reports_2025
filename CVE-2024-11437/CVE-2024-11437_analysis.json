{
  "cve_id": "CVE-2024-11437",
  "description": "The Timeline Designer plugin for WordPress is vulnerable to SQL Injection via the s parameter in all versions up to, and including, 1.4 due to **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**. This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.",
  "key_phrases": {
    "rootcause": [
      "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
      "insufficient escaping on user-supplied parameter"
    ],
    "weakness": [
      "SQL injection",
      "weakness"
    ],
    "impact": [
      "extract sensitive information from the database",
      "extract sensitive information from database",
      "append additional SQL queries"
    ],
    "vector": "",
    "attacker": "unauthenticated attackers",
    "product": "WordPress",
    "version": "up to and including 1.4",
    "component": "s parameter"
  },
  "reference_content": null,
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n\n| CWE ID  | CWE Name                                                                        | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :------------------------------------------------------------------------------ | :--------- | :---------------------- | :------------------------------ | :------------------------------ |\n| CWE-89  | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 1.0        | Base                    | Primary                         | Allowed                         |\n| CWE-116 | Improper Encoding or Escaping of Output | 0.7        | Class                    | Secondary                         | Allowed-with-Review                         |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary CWE is CWE-89, which is a Base level CWE and accurately represents the **SQL Injection** vulnerability described. CWE-89 is a child of CWE-74 (Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')) and CWE-943 (Improper Neutralization of Special Elements in Data Query Logic). CWE-116 is also considered since the description mentions **insufficient escaping**, which could lead to improper encoding. However, the root cause is more specifically related to SQL commands, making CWE-89 the better fit.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n    cwe943[\"CWE-943: Improper Neutralization of Special Elements in Data Query Logic\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n    \n    cwe89 -->|CHILDOF| cwe74\n    cwe89 -->|CHILDOF| cwe943\n    cwe89 -->|PEEROF| cwe116\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe89 primary\n    class cwe116 secondary\n    class cwe74,cwe943 tertiary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with **insufficient escaping** and **lack of sufficient preparation on the existing SQL query**, leading to **SQL Injection**, which allows attackers to **extract sensitive information from the database**.\n- **Root Cause:** **Insufficient Escaping** and **Lack of Preparation**\n- **Weakness:** **SQL Injection** (CWE-89)\n- **Impact:** Extracting sensitive information from the database.\n\n## Summary of Analysis\n\nThe primary weakness is CWE-89 because the vulnerability description explicitly mentions **SQL Injection** due to **insufficient escaping** and **lack of sufficient preparation** on the SQL query. The description states, \"The Timeline Designer plugin for WordPress is vulnerable to SQL Injection via the s parameter in all versions up to, and including, 1.4 due to **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**.\"\n\nCWE-116 was considered because of the phrase \"**insufficient escaping**,\" but since the impact is specifically **SQL Injection**, CWE-89 is more appropriate as the primary CWE.\n\nThe selected CWEs are at the optimal level of specificity, with CWE-89 being a Base level CWE and directly addressing the SQL Injection vulnerability.\n\nRelevant CWE Information:\n- **CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')**\n- **CWE-116: Improper Encoding or Escaping of Output**",
  "analysis_with_relationships": "# Summary\n\n| CWE ID  | CWE Name                                                                        | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :------------------------------------------------------------------------------ | :--------- | :---------------------- | :------------------------------ | :------------------------------ |\n| CWE-89  | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 1.0        | Base                    | Primary                         | Allowed                         |\n| CWE-116 | Improper Encoding or Escaping of Output | 0.7        | Class                    | Secondary                         | Allowed-with-Review                         |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary CWE is CWE-89, which is a Base level CWE and accurately represents the **SQL Injection** vulnerability described. CWE-89 is a child of CWE-74 (Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')) and CWE-943 (Improper Neutralization of Special Elements in Data Query Logic). CWE-116 is also considered since the description mentions **insufficient escaping**, which could lead to improper encoding. However, the root cause is more specifically related to SQL commands, making CWE-89 the better fit.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n    cwe943[\"CWE-943: Improper Neutralization of Special Elements in Data Query Logic\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n    \n    cwe89 -->|CHILDOF| cwe74\n    cwe89 -->|CHILDOF| cwe943\n    cwe89 -->|PEEROF| cwe116\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe89 primary\n    class cwe116 secondary\n    class cwe74,cwe943 tertiary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with **insufficient escaping** and **lack of sufficient preparation on the existing SQL query**, leading to **SQL Injection**, which allows attackers to **extract sensitive information from the database**.\n- **Root Cause:** **Insufficient Escaping** and **Lack of Preparation**\n- **Weakness:** **SQL Injection** (CWE-89)\n- **Impact:** Extracting sensitive information from the database.\n\n## Summary of Analysis\n\nThe primary weakness is CWE-89 because the vulnerability description explicitly mentions **SQL Injection** due to **insufficient escaping** and **lack of sufficient preparation** on the SQL query. The description states, \"The Timeline Designer plugin for WordPress is vulnerable to SQL Injection via the s parameter in all versions up to, and including, 1.4 due to **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**.\"\n\nCWE-116 was considered because of the phrase \"**insufficient escaping**,\" but since the impact is specifically **SQL Injection**, CWE-89 is more appropriate as the primary CWE.\n\nThe selected CWEs are at the optimal level of specificity, with CWE-89 being a Base level CWE and directly addressing the SQL Injection vulnerability.\n\nRelevant CWE Information:\n- **CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')**\n- **CWE-116: Improper Encoding or Escaping of Output**\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-74:**\n- 74 (Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')) - ROOT\n\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user-supplied parameter",
            "keyphrase": "insufficient escaping on user-supplied parameter",
            "type": "rootcause"
          },
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "weakness:weakness",
            "keyphrase": "weakness",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "impact:extract sensitive information from database",
            "keyphrase": "extract sensitive information from database",
            "type": "impact"
          },
          {
            "id": "impact:append additional SQL queries",
            "keyphrase": "append additional SQL queries",
            "type": "impact"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:WordPress",
            "keyphrase": "WordPress",
            "type": "product"
          },
          {
            "id": "version:up to and including 1.4",
            "keyphrase": "up to and including 1.4",
            "type": "version"
          },
          {
            "id": "component:s parameter",
            "keyphrase": "s parameter",
            "type": "component"
          }
        ]
      },
      "similarity": 717.020691128022
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user-supplied parameter",
            "keyphrase": "insufficient escaping on user-supplied parameter",
            "type": "rootcause"
          },
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "weakness:weakness",
            "keyphrase": "weakness",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "impact:extract sensitive information from database",
            "keyphrase": "extract sensitive information from database",
            "type": "impact"
          },
          {
            "id": "impact:append additional SQL queries",
            "keyphrase": "append additional SQL queries",
            "type": "impact"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:WordPress",
            "keyphrase": "WordPress",
            "type": "product"
          },
          {
            "id": "version:up to and including 1.4",
            "keyphrase": "up to and including 1.4",
            "type": "version"
          },
          {
            "id": "component:s parameter",
            "keyphrase": "s parameter",
            "type": "component"
          }
        ]
      },
      "similarity": 688.9445532506338
    },
    {
      "metadata": {
        "doc_id": "90",
        "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user-supplied parameter",
            "keyphrase": "insufficient escaping on user-supplied parameter",
            "type": "rootcause"
          },
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "weakness:weakness",
            "keyphrase": "weakness",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "impact:extract sensitive information from database",
            "keyphrase": "extract sensitive information from database",
            "type": "impact"
          },
          {
            "id": "impact:append additional SQL queries",
            "keyphrase": "append additional SQL queries",
            "type": "impact"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "component:s parameter",
            "keyphrase": "s parameter",
            "type": "component"
          }
        ]
      },
      "similarity": 642.9309482012582
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user-supplied parameter",
            "keyphrase": "insufficient escaping on user-supplied parameter",
            "type": "rootcause"
          },
          {
            "id": "weakness:weakness",
            "keyphrase": "weakness",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "impact:extract sensitive information from database",
            "keyphrase": "extract sensitive information from database",
            "type": "impact"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:WordPress",
            "keyphrase": "WordPress",
            "type": "product"
          },
          {
            "id": "version:up to and including 1.4",
            "keyphrase": "up to and including 1.4",
            "type": "version"
          },
          {
            "id": "component:s parameter",
            "keyphrase": "s parameter",
            "type": "component"
          }
        ]
      },
      "similarity": 637.0865061459423
    },
    {
      "metadata": {
        "doc_id": "790",
        "name": "Improper Filtering of Special Elements",
        "source": "sparse",
        "original_content": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user-supplied parameter",
            "keyphrase": "insufficient escaping on user-supplied parameter",
            "type": "rootcause"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:WordPress",
            "keyphrase": "WordPress",
            "type": "product"
          },
          {
            "id": "version:up to and including 1.4",
            "keyphrase": "up to and including 1.4",
            "type": "version"
          },
          {
            "id": "component:s parameter",
            "keyphrase": "s parameter",
            "type": "component"
          }
        ]
      },
      "similarity": 605.4749146892909
    },
    {
      "metadata": {
        "doc_id": "943",
        "name": "Improper Neutralization of Special Elements in Data Query Logic",
        "source": "sparse",
        "original_content": "The product generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query.",
        "keyphrase_sources": [
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "weakness:weakness",
            "keyphrase": "weakness",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "impact:extract sensitive information from database",
            "keyphrase": "extract sensitive information from database",
            "type": "impact"
          },
          {
            "id": "impact:append additional SQL queries",
            "keyphrase": "append additional SQL queries",
            "type": "impact"
          }
        ]
      },
      "similarity": 419.7504809662016
    },
    {
      "metadata": {
        "doc_id": "502",
        "name": "Deserialization of Untrusted Data",
        "source": "sparse",
        "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.",
        "keyphrase_sources": [
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "product:WordPress",
            "keyphrase": "WordPress",
            "type": "product"
          },
          {
            "id": "version:up to and including 1.4",
            "keyphrase": "up to and including 1.4",
            "type": "version"
          }
        ]
      },
      "similarity": 415.122876571732
    },
    {
      "metadata": {
        "doc_id": "341",
        "name": "Predictable from Observable State",
        "source": "sparse",
        "original_content": "A number or object is predictable based on observations that the attacker can make about the state of the system or network, such as time, process ID, etc.",
        "keyphrase_sources": [
          {
            "id": "impact:append additional SQL queries",
            "keyphrase": "append additional SQL queries",
            "type": "impact"
          }
        ]
      },
      "similarity": 145.36506572197393
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-74",
      "CWE-89",
      "CWE-116",
      "CWE-943"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "116": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user-supplied parameter",
        "keyphrase": "insufficient escaping on user-supplied parameter",
        "type": "rootcause"
      },
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "weakness:weakness",
        "keyphrase": "weakness",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "impact:extract sensitive information from database",
        "keyphrase": "extract sensitive information from database",
        "type": "impact"
      },
      {
        "id": "impact:append additional SQL queries",
        "keyphrase": "append additional SQL queries",
        "type": "impact"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:WordPress",
        "keyphrase": "WordPress",
        "type": "product"
      },
      {
        "id": "version:up to and including 1.4",
        "keyphrase": "up to and including 1.4",
        "type": "version"
      },
      {
        "id": "component:s parameter",
        "keyphrase": "s parameter",
        "type": "component"
      }
    ],
    "89": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user-supplied parameter",
        "keyphrase": "insufficient escaping on user-supplied parameter",
        "type": "rootcause"
      },
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "weakness:weakness",
        "keyphrase": "weakness",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "impact:extract sensitive information from database",
        "keyphrase": "extract sensitive information from database",
        "type": "impact"
      },
      {
        "id": "impact:append additional SQL queries",
        "keyphrase": "append additional SQL queries",
        "type": "impact"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:WordPress",
        "keyphrase": "WordPress",
        "type": "product"
      },
      {
        "id": "version:up to and including 1.4",
        "keyphrase": "up to and including 1.4",
        "type": "version"
      },
      {
        "id": "component:s parameter",
        "keyphrase": "s parameter",
        "type": "component"
      }
    ],
    "90": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user-supplied parameter",
        "keyphrase": "insufficient escaping on user-supplied parameter",
        "type": "rootcause"
      },
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "weakness:weakness",
        "keyphrase": "weakness",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "impact:extract sensitive information from database",
        "keyphrase": "extract sensitive information from database",
        "type": "impact"
      },
      {
        "id": "impact:append additional SQL queries",
        "keyphrase": "append additional SQL queries",
        "type": "impact"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "component:s parameter",
        "keyphrase": "s parameter",
        "type": "component"
      }
    ],
    "352": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user-supplied parameter",
        "keyphrase": "insufficient escaping on user-supplied parameter",
        "type": "rootcause"
      },
      {
        "id": "weakness:weakness",
        "keyphrase": "weakness",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "impact:extract sensitive information from database",
        "keyphrase": "extract sensitive information from database",
        "type": "impact"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:WordPress",
        "keyphrase": "WordPress",
        "type": "product"
      },
      {
        "id": "version:up to and including 1.4",
        "keyphrase": "up to and including 1.4",
        "type": "version"
      },
      {
        "id": "component:s parameter",
        "keyphrase": "s parameter",
        "type": "component"
      }
    ],
    "790": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user-supplied parameter",
        "keyphrase": "insufficient escaping on user-supplied parameter",
        "type": "rootcause"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:WordPress",
        "keyphrase": "WordPress",
        "type": "product"
      },
      {
        "id": "version:up to and including 1.4",
        "keyphrase": "up to and including 1.4",
        "type": "version"
      },
      {
        "id": "component:s parameter",
        "keyphrase": "s parameter",
        "type": "component"
      }
    ],
    "943": [
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "weakness:weakness",
        "keyphrase": "weakness",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "impact:extract sensitive information from database",
        "keyphrase": "extract sensitive information from database",
        "type": "impact"
      },
      {
        "id": "impact:append additional SQL queries",
        "keyphrase": "append additional SQL queries",
        "type": "impact"
      }
    ],
    "502": [
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "product:WordPress",
        "keyphrase": "WordPress",
        "type": "product"
      },
      {
        "id": "version:up to and including 1.4",
        "keyphrase": "up to and including 1.4",
        "type": "version"
      }
    ],
    "341": [
      {
        "id": "impact:append additional SQL queries",
        "keyphrase": "append additional SQL queries",
        "type": "impact"
      }
    ]
  }
}