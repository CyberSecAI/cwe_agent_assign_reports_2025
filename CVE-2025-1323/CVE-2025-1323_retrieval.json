{
  "vulnerability_info": "VulnerabilityInfo(cve_id='CVE-2025-1323', description='The WP-Recall Registration, Profile, Commerce & More plugin for WordPress is vulnerable to SQL Injection via the databeat parameter in all versions up to, and including, 16.26.10 due to **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**. This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.', key_phrases={'rootcause': ['insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query', 'insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query'], 'weakness': 'SQL injection', 'impact': ['extract sensitive information from the database', 'extract sensitive information from database'], 'vector': 'databeat parameter', 'attacker': 'unauthenticated attackers', 'product': ['Commerce & More plugin for WordPress', 'WP-Recall Registration', 'Profile'], 'version': 'up to and including 16.26.10', 'component': ''}, reference_content='Based on the provided content:\\n\\nThe content discusses changes made to a WordPress plugin file (`wp-recall/trunk/add-on/rcl-chat/core.php`). Specifically, it shows the modification of lines 292, 293, and 298, where `esc_sql()` is added to sanitize the input variables `$post->user_write`, `$post->update_activity`, and `$post->last_activity`. This suggests a potential vulnerability related to SQL injection was addressed.\\n\\n*   **Weaknesses/vulnerabilities present:** Potential SQL injection vulnerability due to the use of unsanitized input in SQL queries.\\n*   **Mitigation or fix:** The code was updated to sanitize the input using `esc_sql()`, which is a function used to escape strings for use in SQL queries.\\n*   **More detail than the official CVE description:** The content provides specific code changes and the context in which they were made, offering insight into the nature of the vulnerability and the applied fix.', similar_info={'cwe_distribution': {}, 'cwe_consensus': '', 'similarity_stats': {'thresholds': [], 'total_samples_by_threshold': {}, 'top_cwes_by_threshold': {}}}, similarity_summary=SimilarityInsight(consensus_cwe='', top_cwes=[], confidence_levels={}, total_samples=0), analysis='', analysis_with_relationships='', criticism='', resolution='', relevant_cwes=[{'metadata': {'doc_id': '116', 'name': 'Improper Encoding or Escaping of Output', 'source': 'sparse', 'original_content': 'The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.', 'keyphrase_sources': [{'id': 'rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query', 'keyphrase': 'insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query', 'type': 'rootcause'}, {'id': 'rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query', 'keyphrase': 'insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query', 'type': 'rootcause'}, {'id': 'weakness:SQL injection', 'keyphrase': 'SQL injection', 'type': 'weakness'}, {'id': 'impact:extract sensitive information from the database', 'keyphrase': 'extract sensitive information from the database', 'type': 'impact'}, {'id': 'impact:extract sensitive information from database', 'keyphrase': 'extract sensitive information from database', 'type': 'impact'}, {'id': 'vector:databeat parameter', 'keyphrase': 'databeat parameter', 'type': 'vector'}, {'id': 'attacker:unauthenticated attackers', 'keyphrase': 'unauthenticated attackers', 'type': 'attacker'}, {'id': 'product:Commerce & More plugin for WordPress', 'keyphrase': 'Commerce & More plugin for WordPress', 'type': 'product'}, {'id': 'product:WP-Recall Registration', 'keyphrase': 'WP-Recall Registration', 'type': 'product'}, {'id': 'product:Profile', 'keyphrase': 'Profile', 'type': 'product'}, {'id': 'version:up to and including 16.26.10', 'keyphrase': 'up to and including 16.26.10', 'type': 'version'}]}, 'similarity': np.float64(720.0393791852648)}, {'metadata': {'doc_id': '89', 'name': \"Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\", 'source': 'sparse', 'original_content': 'The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.', 'keyphrase_sources': [{'id': 'rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query', 'keyphrase': 'insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query', 'type': 'rootcause'}, {'id': 'rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query', 'keyphrase': 'insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query', 'type': 'rootcause'}, {'id': 'weakness:SQL injection', 'keyphrase': 'SQL injection', 'type': 'weakness'}, {'id': 'impact:extract sensitive information from the database', 'keyphrase': 'extract sensitive information from the database', 'type': 'impact'}, {'id': 'impact:extract sensitive information from database', 'keyphrase': 'extract sensitive information from database', 'type': 'impact'}, {'id': 'vector:databeat parameter', 'keyphrase': 'databeat parameter', 'type': 'vector'}, {'id': 'attacker:unauthenticated attackers', 'keyphrase': 'unauthenticated attackers', 'type': 'attacker'}, {'id': 'product:Commerce & More plugin for WordPress', 'keyphrase': 'Commerce & More plugin for WordPress', 'type': 'product'}, {'id': 'product:WP-Recall Registration', 'keyphrase': 'WP-Recall Registration', 'type': 'product'}, {'id': 'product:Profile', 'keyphrase': 'Profile', 'type': 'product'}, {'id': 'version:up to and including 16.26.10', 'keyphrase': 'up to and including 16.26.10', 'type': 'version'}]}, 'similarity': np.float64(690.9524979987885)}, {'metadata': {'doc_id': '352', 'name': 'Cross-Site Request Forgery (CSRF)', 'source': 'sparse', 'original_content': 'The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.', 'keyphrase_sources': [{'id': 'rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query', 'keyphrase': 'insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query', 'type': 'rootcause'}, {'id': 'rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query', 'keyphrase': 'insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query', 'type': 'rootcause'}, {'id': 'vector:databeat parameter', 'keyphrase': 'databeat parameter', 'type': 'vector'}, {'id': 'attacker:unauthenticated attackers', 'keyphrase': 'unauthenticated attackers', 'type': 'attacker'}, {'id': 'product:Commerce & More plugin for WordPress', 'keyphrase': 'Commerce & More plugin for WordPress', 'type': 'product'}, {'id': 'product:WP-Recall Registration', 'keyphrase': 'WP-Recall Registration', 'type': 'product'}, {'id': 'product:Profile', 'keyphrase': 'Profile', 'type': 'product'}, {'id': 'version:up to and including 16.26.10', 'keyphrase': 'up to and including 16.26.10', 'type': 'version'}]}, 'similarity': np.float64(648.8626316130307)}, {'metadata': {'doc_id': '90', 'name': \"Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')\", 'source': 'sparse', 'original_content': 'The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.', 'keyphrase_sources': [{'id': 'rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query', 'keyphrase': 'insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query', 'type': 'rootcause'}, {'id': 'rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query', 'keyphrase': 'insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query', 'type': 'rootcause'}, {'id': 'weakness:SQL injection', 'keyphrase': 'SQL injection', 'type': 'weakness'}, {'id': 'impact:extract sensitive information from the database', 'keyphrase': 'extract sensitive information from the database', 'type': 'impact'}, {'id': 'impact:extract sensitive information from database', 'keyphrase': 'extract sensitive information from database', 'type': 'impact'}, {'id': 'vector:databeat parameter', 'keyphrase': 'databeat parameter', 'type': 'vector'}, {'id': 'attacker:unauthenticated attackers', 'keyphrase': 'unauthenticated attackers', 'type': 'attacker'}, {'id': 'product:Profile', 'keyphrase': 'Profile', 'type': 'product'}]}, 'similarity': np.float64(646.2497935919164)}, {'metadata': {'doc_id': '20', 'name': 'Improper Input Validation', 'source': 'sparse', 'original_content': 'The product receives input or data, but it does\\n        not validate or incorrectly validates that the input has the\\n        properties that are required to process the data safely and\\n        correctly.', 'keyphrase_sources': [{'id': 'rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query', 'keyphrase': 'insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query', 'type': 'rootcause'}, {'id': 'rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query', 'keyphrase': 'insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query', 'type': 'rootcause'}]}, 'similarity': np.float64(616.7818993711987)}, {'metadata': {'doc_id': '502', 'name': 'Deserialization of Untrusted Data', 'source': 'sparse', 'original_content': 'The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.', 'keyphrase_sources': [{'id': 'weakness:SQL injection', 'keyphrase': 'SQL injection', 'type': 'weakness'}, {'id': 'impact:extract sensitive information from the database', 'keyphrase': 'extract sensitive information from the database', 'type': 'impact'}, {'id': 'impact:extract sensitive information from database', 'keyphrase': 'extract sensitive information from database', 'type': 'impact'}, {'id': 'attacker:unauthenticated attackers', 'keyphrase': 'unauthenticated attackers', 'type': 'attacker'}, {'id': 'product:Commerce & More plugin for WordPress', 'keyphrase': 'Commerce & More plugin for WordPress', 'type': 'product'}, {'id': 'product:Profile', 'keyphrase': 'Profile', 'type': 'product'}, {'id': 'version:up to and including 16.26.10', 'keyphrase': 'up to and including 16.26.10', 'type': 'version'}]}, 'similarity': np.float64(428.46898731332556)}, {'metadata': {'doc_id': '943', 'name': 'Improper Neutralization of Special Elements in Data Query Logic', 'source': 'sparse', 'original_content': 'The product generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query.', 'keyphrase_sources': [{'id': 'weakness:SQL injection', 'keyphrase': 'SQL injection', 'type': 'weakness'}]}, 'similarity': np.float64(416.3842865900501)}, {'metadata': {'doc_id': '862', 'name': 'Missing Authorization', 'source': 'sparse', 'original_content': 'The product does not perform an authorization check when an actor attempts to access a resource or perform an action.', 'keyphrase_sources': [{'id': 'impact:extract sensitive information from the database', 'keyphrase': 'extract sensitive information from the database', 'type': 'impact'}, {'id': 'impact:extract sensitive information from database', 'keyphrase': 'extract sensitive information from database', 'type': 'impact'}, {'id': 'product:Commerce & More plugin for WordPress', 'keyphrase': 'Commerce & More plugin for WordPress', 'type': 'product'}, {'id': 'product:WP-Recall Registration', 'keyphrase': 'WP-Recall Registration', 'type': 'product'}, {'id': 'version:up to and including 16.26.10', 'keyphrase': 'up to and including 16.26.10', 'type': 'version'}]}, 'similarity': np.float64(158.04357865987492)}, {'metadata': {'doc_id': '434', 'name': 'Unrestricted Upload of File with Dangerous Type', 'source': 'sparse', 'original_content': 'The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.', 'keyphrase_sources': [{'id': 'product:WP-Recall Registration', 'keyphrase': 'WP-Recall Registration', 'type': 'product'}]}, 'similarity': np.float64(146.62582789500112)}, {'metadata': {'doc_id': '790', 'name': 'Improper Filtering of Special Elements', 'source': 'sparse', 'original_content': 'The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.', 'keyphrase_sources': [{'id': 'vector:databeat parameter', 'keyphrase': 'databeat parameter', 'type': 'vector'}]}, 'similarity': np.float64(143.6571623220652)}], identified_cwes={'analyzer': [], 'critic_additional': []})",
  "retrieval_results": {
    "has_multiple_keyphrases": true,
    "keyphrase_cwe_sets": {
      "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query": {
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause",
        "cwes": [
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
              "keyphrase_sources": [
                {
                  "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
                  "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
                  "keyphrase": "insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
                  "type": "rootcause"
                },
                {
                  "id": "weakness:SQL injection",
                  "keyphrase": "SQL injection",
                  "type": "weakness"
                },
                {
                  "id": "impact:extract sensitive information from the database",
                  "keyphrase": "extract sensitive information from the database",
                  "type": "impact"
                },
                {
                  "id": "impact:extract sensitive information from database",
                  "keyphrase": "extract sensitive information from database",
                  "type": "impact"
                },
                {
                  "id": "vector:databeat parameter",
                  "keyphrase": "databeat parameter",
                  "type": "vector"
                },
                {
                  "id": "attacker:unauthenticated attackers",
                  "keyphrase": "unauthenticated attackers",
                  "type": "attacker"
                },
                {
                  "id": "product:Commerce & More plugin for WordPress",
                  "keyphrase": "Commerce & More plugin for WordPress",
                  "type": "product"
                },
                {
                  "id": "product:WP-Recall Registration",
                  "keyphrase": "WP-Recall Registration",
                  "type": "product"
                },
                {
                  "id": "product:Profile",
                  "keyphrase": "Profile",
                  "type": "product"
                },
                {
                  "id": "version:up to and including 16.26.10",
                  "keyphrase": "up to and including 16.26.10",
                  "type": "version"
                }
              ]
            },
            "similarity": 720.0393791852648
          },
          {
            "metadata": {
              "doc_id": "89",
              "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
              "keyphrase_sources": [
                {
                  "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
                  "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
                  "keyphrase": "insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
                  "type": "rootcause"
                },
                {
                  "id": "weakness:SQL injection",
                  "keyphrase": "SQL injection",
                  "type": "weakness"
                },
                {
                  "id": "impact:extract sensitive information from the database",
                  "keyphrase": "extract sensitive information from the database",
                  "type": "impact"
                },
                {
                  "id": "impact:extract sensitive information from database",
                  "keyphrase": "extract sensitive information from database",
                  "type": "impact"
                },
                {
                  "id": "vector:databeat parameter",
                  "keyphrase": "databeat parameter",
                  "type": "vector"
                },
                {
                  "id": "attacker:unauthenticated attackers",
                  "keyphrase": "unauthenticated attackers",
                  "type": "attacker"
                },
                {
                  "id": "product:Commerce & More plugin for WordPress",
                  "keyphrase": "Commerce & More plugin for WordPress",
                  "type": "product"
                },
                {
                  "id": "product:WP-Recall Registration",
                  "keyphrase": "WP-Recall Registration",
                  "type": "product"
                },
                {
                  "id": "product:Profile",
                  "keyphrase": "Profile",
                  "type": "product"
                },
                {
                  "id": "version:up to and including 16.26.10",
                  "keyphrase": "up to and including 16.26.10",
                  "type": "version"
                }
              ]
            },
            "similarity": 690.9524979987885
          },
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
              "keyphrase_sources": [
                {
                  "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
                  "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
                  "keyphrase": "insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
                  "type": "rootcause"
                },
                {
                  "id": "vector:databeat parameter",
                  "keyphrase": "databeat parameter",
                  "type": "vector"
                },
                {
                  "id": "attacker:unauthenticated attackers",
                  "keyphrase": "unauthenticated attackers",
                  "type": "attacker"
                },
                {
                  "id": "product:Commerce & More plugin for WordPress",
                  "keyphrase": "Commerce & More plugin for WordPress",
                  "type": "product"
                },
                {
                  "id": "product:WP-Recall Registration",
                  "keyphrase": "WP-Recall Registration",
                  "type": "product"
                },
                {
                  "id": "product:Profile",
                  "keyphrase": "Profile",
                  "type": "product"
                },
                {
                  "id": "version:up to and including 16.26.10",
                  "keyphrase": "up to and including 16.26.10",
                  "type": "version"
                }
              ]
            },
            "similarity": 648.8626316130307
          },
          {
            "metadata": {
              "doc_id": "90",
              "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.",
              "keyphrase_sources": [
                {
                  "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
                  "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
                  "keyphrase": "insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
                  "type": "rootcause"
                },
                {
                  "id": "weakness:SQL injection",
                  "keyphrase": "SQL injection",
                  "type": "weakness"
                },
                {
                  "id": "impact:extract sensitive information from the database",
                  "keyphrase": "extract sensitive information from the database",
                  "type": "impact"
                },
                {
                  "id": "impact:extract sensitive information from database",
                  "keyphrase": "extract sensitive information from database",
                  "type": "impact"
                },
                {
                  "id": "vector:databeat parameter",
                  "keyphrase": "databeat parameter",
                  "type": "vector"
                },
                {
                  "id": "attacker:unauthenticated attackers",
                  "keyphrase": "unauthenticated attackers",
                  "type": "attacker"
                },
                {
                  "id": "product:Profile",
                  "keyphrase": "Profile",
                  "type": "product"
                }
              ]
            },
            "similarity": 646.2497935919164
          },
          {
            "metadata": {
              "doc_id": "20",
              "name": "Improper Input Validation",
              "source": "sparse",
              "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
              "keyphrase_sources": [
                {
                  "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
                  "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
                  "type": "rootcause"
                },
                {
                  "id": "rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
                  "keyphrase": "insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
                  "type": "rootcause"
                }
              ]
            },
            "similarity": 616.7818993711987
          }
        ]
      },
      "rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query": {
        "keyphrase": "insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
        "type": "rootcause",
        "cwes": [
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 677.1934949211158
          },
          {
            "metadata": {
              "doc_id": "89",
              "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data."
            },
            "similarity": 647.7062781708523
          },
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 605.732557420904
          },
          {
            "metadata": {
              "doc_id": "90",
              "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component."
            },
            "similarity": 603.3504720539055
          },
          {
            "metadata": {
              "doc_id": "20",
              "name": "Improper Input Validation",
              "source": "sparse",
              "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly."
            },
            "similarity": 574.0620294702799
          }
        ]
      },
      "weakness:SQL injection": {
        "keyphrase": "SQL injection",
        "type": "weakness",
        "cwes": [
          {
            "metadata": {
              "doc_id": "89",
              "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data."
            },
            "similarity": 494.73351850726135
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 466.4637358326022
          },
          {
            "metadata": {
              "doc_id": "502",
              "name": "Deserialization of Untrusted Data",
              "source": "sparse",
              "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.",
              "keyphrase_sources": [
                {
                  "id": "weakness:SQL injection",
                  "keyphrase": "SQL injection",
                  "type": "weakness"
                },
                {
                  "id": "impact:extract sensitive information from the database",
                  "keyphrase": "extract sensitive information from the database",
                  "type": "impact"
                },
                {
                  "id": "impact:extract sensitive information from database",
                  "keyphrase": "extract sensitive information from database",
                  "type": "impact"
                },
                {
                  "id": "attacker:unauthenticated attackers",
                  "keyphrase": "unauthenticated attackers",
                  "type": "attacker"
                },
                {
                  "id": "product:Commerce & More plugin for WordPress",
                  "keyphrase": "Commerce & More plugin for WordPress",
                  "type": "product"
                },
                {
                  "id": "product:Profile",
                  "keyphrase": "Profile",
                  "type": "product"
                },
                {
                  "id": "version:up to and including 16.26.10",
                  "keyphrase": "up to and including 16.26.10",
                  "type": "version"
                }
              ]
            },
            "similarity": 428.46898731332556
          },
          {
            "metadata": {
              "doc_id": "90",
              "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component."
            },
            "similarity": 420.1741041376778
          },
          {
            "metadata": {
              "doc_id": "943",
              "name": "Improper Neutralization of Special Elements in Data Query Logic",
              "source": "sparse",
              "original_content": "The product generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query.",
              "keyphrase_sources": [
                {
                  "id": "weakness:SQL injection",
                  "keyphrase": "SQL injection",
                  "type": "weakness"
                }
              ]
            },
            "similarity": 416.3842865900501
          }
        ]
      },
      "impact:extract sensitive information from the database": {
        "keyphrase": "extract sensitive information from the database",
        "type": "impact",
        "cwes": [
          {
            "metadata": {
              "doc_id": "89",
              "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data."
            },
            "similarity": 181.49095271365934
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 167.02959313311285
          },
          {
            "metadata": {
              "doc_id": "90",
              "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component."
            },
            "similarity": 160.88718737278066
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
              "keyphrase_sources": [
                {
                  "id": "impact:extract sensitive information from the database",
                  "keyphrase": "extract sensitive information from the database",
                  "type": "impact"
                },
                {
                  "id": "impact:extract sensitive information from database",
                  "keyphrase": "extract sensitive information from database",
                  "type": "impact"
                },
                {
                  "id": "product:Commerce & More plugin for WordPress",
                  "keyphrase": "Commerce & More plugin for WordPress",
                  "type": "product"
                },
                {
                  "id": "product:WP-Recall Registration",
                  "keyphrase": "WP-Recall Registration",
                  "type": "product"
                },
                {
                  "id": "version:up to and including 16.26.10",
                  "keyphrase": "up to and including 16.26.10",
                  "type": "version"
                }
              ]
            },
            "similarity": 158.04357865987492
          },
          {
            "metadata": {
              "doc_id": "502",
              "name": "Deserialization of Untrusted Data",
              "source": "sparse",
              "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid."
            },
            "similarity": 156.65197132025003
          }
        ]
      },
      "impact:extract sensitive information from database": {
        "keyphrase": "extract sensitive information from database",
        "type": "impact",
        "cwes": [
          {
            "metadata": {
              "doc_id": "89",
              "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data."
            },
            "similarity": 174.2832494090033
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 159.88861242242135
          },
          {
            "metadata": {
              "doc_id": "90",
              "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component."
            },
            "similarity": 153.73730044977884
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action."
            },
            "similarity": 150.99634558797982
          },
          {
            "metadata": {
              "doc_id": "502",
              "name": "Deserialization of Untrusted Data",
              "source": "sparse",
              "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid."
            },
            "similarity": 149.49482951556058
          }
        ]
      },
      "vector:databeat parameter": {
        "keyphrase": "databeat parameter",
        "type": "vector",
        "cwes": [
          {
            "metadata": {
              "doc_id": "89",
              "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data."
            },
            "similarity": 162.74136442537406
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 159.78449172310152
          },
          {
            "metadata": {
              "doc_id": "90",
              "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component."
            },
            "similarity": 148.06266078157984
          },
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 146.3768258413631
          },
          {
            "metadata": {
              "doc_id": "790",
              "name": "Improper Filtering of Special Elements",
              "source": "sparse",
              "original_content": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
              "keyphrase_sources": [
                {
                  "id": "vector:databeat parameter",
                  "keyphrase": "databeat parameter",
                  "type": "vector"
                }
              ]
            },
            "similarity": 143.6571623220652
          }
        ]
      },
      "attacker:unauthenticated attackers": {
        "keyphrase": "unauthenticated attackers",
        "type": "attacker",
        "cwes": [
          {
            "metadata": {
              "doc_id": "89",
              "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data."
            },
            "similarity": 160.09204451934914
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 157.14105986408444
          },
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 149.50901844541107
          },
          {
            "metadata": {
              "doc_id": "90",
              "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component."
            },
            "similarity": 147.4190226656063
          },
          {
            "metadata": {
              "doc_id": "502",
              "name": "Deserialization of Untrusted Data",
              "source": "sparse",
              "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid."
            },
            "similarity": 145.75008085141354
          }
        ]
      },
      "product:Commerce & More plugin for WordPress": {
        "keyphrase": "Commerce & More plugin for WordPress",
        "type": "product",
        "cwes": [
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 176.24009418381934
          },
          {
            "metadata": {
              "doc_id": "89",
              "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data."
            },
            "similarity": 173.00257695245
          },
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 171.16792650294047
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action."
            },
            "similarity": 166.51177872665568
          },
          {
            "metadata": {
              "doc_id": "502",
              "name": "Deserialization of Untrusted Data",
              "source": "sparse",
              "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid."
            },
            "similarity": 163.10936517947755
          }
        ]
      },
      "product:WP-Recall Registration": {
        "keyphrase": "WP-Recall Registration",
        "type": "product",
        "cwes": [
          {
            "metadata": {
              "doc_id": "89",
              "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data."
            },
            "similarity": 156.81064305123095
          },
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 153.54130322246067
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 153.2198346195714
          },
          {
            "metadata": {
              "doc_id": "434",
              "name": "Unrestricted Upload of File with Dangerous Type",
              "source": "sparse",
              "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
              "keyphrase_sources": [
                {
                  "id": "product:WP-Recall Registration",
                  "keyphrase": "WP-Recall Registration",
                  "type": "product"
                }
              ]
            },
            "similarity": 146.62582789500112
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action."
            },
            "similarity": 145.6179606249006
          }
        ]
      },
      "product:Profile": {
        "keyphrase": "Profile",
        "type": "product",
        "cwes": [
          {
            "metadata": {
              "doc_id": "89",
              "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data."
            },
            "similarity": 154.72730785072343
          },
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 153.2198346195714
          },
          {
            "metadata": {
              "doc_id": "502",
              "name": "Deserialization of Untrusted Data",
              "source": "sparse",
              "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid."
            },
            "similarity": 144.82002300490797
          },
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 142.96004365652726
          },
          {
            "metadata": {
              "doc_id": "90",
              "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component."
            },
            "similarity": 142.06342002153212
          }
        ]
      },
      "version:up to and including 16.26.10": {
        "keyphrase": "up to and including 16.26.10",
        "type": "version",
        "cwes": [
          {
            "metadata": {
              "doc_id": "116",
              "name": "Improper Encoding or Escaping of Output",
              "source": "sparse",
              "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved."
            },
            "similarity": 180.73674880929084
          },
          {
            "metadata": {
              "doc_id": "89",
              "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
              "source": "sparse",
              "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data."
            },
            "similarity": 175.67194682967875
          },
          {
            "metadata": {
              "doc_id": "502",
              "name": "Deserialization of Untrusted Data",
              "source": "sparse",
              "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid."
            },
            "similarity": 169.086494498707
          },
          {
            "metadata": {
              "doc_id": "352",
              "name": "Cross-Site Request Forgery (CSRF)",
              "source": "sparse",
              "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."
            },
            "similarity": 167.71194714615666
          },
          {
            "metadata": {
              "doc_id": "862",
              "name": "Missing Authorization",
              "source": "sparse",
              "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action."
            },
            "similarity": 167.6466524427119
          }
        ]
      }
    },
    "keyphrase_mapping": {
      "116": [
        {
          "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
          "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
          "type": "rootcause"
        },
        {
          "id": "rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
          "keyphrase": "insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
          "type": "rootcause"
        },
        {
          "id": "weakness:SQL injection",
          "keyphrase": "SQL injection",
          "type": "weakness"
        },
        {
          "id": "impact:extract sensitive information from the database",
          "keyphrase": "extract sensitive information from the database",
          "type": "impact"
        },
        {
          "id": "impact:extract sensitive information from database",
          "keyphrase": "extract sensitive information from database",
          "type": "impact"
        },
        {
          "id": "vector:databeat parameter",
          "keyphrase": "databeat parameter",
          "type": "vector"
        },
        {
          "id": "attacker:unauthenticated attackers",
          "keyphrase": "unauthenticated attackers",
          "type": "attacker"
        },
        {
          "id": "product:Commerce & More plugin for WordPress",
          "keyphrase": "Commerce & More plugin for WordPress",
          "type": "product"
        },
        {
          "id": "product:WP-Recall Registration",
          "keyphrase": "WP-Recall Registration",
          "type": "product"
        },
        {
          "id": "product:Profile",
          "keyphrase": "Profile",
          "type": "product"
        },
        {
          "id": "version:up to and including 16.26.10",
          "keyphrase": "up to and including 16.26.10",
          "type": "version"
        }
      ],
      "89": [
        {
          "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
          "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
          "type": "rootcause"
        },
        {
          "id": "rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
          "keyphrase": "insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
          "type": "rootcause"
        },
        {
          "id": "weakness:SQL injection",
          "keyphrase": "SQL injection",
          "type": "weakness"
        },
        {
          "id": "impact:extract sensitive information from the database",
          "keyphrase": "extract sensitive information from the database",
          "type": "impact"
        },
        {
          "id": "impact:extract sensitive information from database",
          "keyphrase": "extract sensitive information from database",
          "type": "impact"
        },
        {
          "id": "vector:databeat parameter",
          "keyphrase": "databeat parameter",
          "type": "vector"
        },
        {
          "id": "attacker:unauthenticated attackers",
          "keyphrase": "unauthenticated attackers",
          "type": "attacker"
        },
        {
          "id": "product:Commerce & More plugin for WordPress",
          "keyphrase": "Commerce & More plugin for WordPress",
          "type": "product"
        },
        {
          "id": "product:WP-Recall Registration",
          "keyphrase": "WP-Recall Registration",
          "type": "product"
        },
        {
          "id": "product:Profile",
          "keyphrase": "Profile",
          "type": "product"
        },
        {
          "id": "version:up to and including 16.26.10",
          "keyphrase": "up to and including 16.26.10",
          "type": "version"
        }
      ],
      "352": [
        {
          "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
          "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
          "type": "rootcause"
        },
        {
          "id": "rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
          "keyphrase": "insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
          "type": "rootcause"
        },
        {
          "id": "vector:databeat parameter",
          "keyphrase": "databeat parameter",
          "type": "vector"
        },
        {
          "id": "attacker:unauthenticated attackers",
          "keyphrase": "unauthenticated attackers",
          "type": "attacker"
        },
        {
          "id": "product:Commerce & More plugin for WordPress",
          "keyphrase": "Commerce & More plugin for WordPress",
          "type": "product"
        },
        {
          "id": "product:WP-Recall Registration",
          "keyphrase": "WP-Recall Registration",
          "type": "product"
        },
        {
          "id": "product:Profile",
          "keyphrase": "Profile",
          "type": "product"
        },
        {
          "id": "version:up to and including 16.26.10",
          "keyphrase": "up to and including 16.26.10",
          "type": "version"
        }
      ],
      "90": [
        {
          "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
          "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
          "type": "rootcause"
        },
        {
          "id": "rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
          "keyphrase": "insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
          "type": "rootcause"
        },
        {
          "id": "weakness:SQL injection",
          "keyphrase": "SQL injection",
          "type": "weakness"
        },
        {
          "id": "impact:extract sensitive information from the database",
          "keyphrase": "extract sensitive information from the database",
          "type": "impact"
        },
        {
          "id": "impact:extract sensitive information from database",
          "keyphrase": "extract sensitive information from database",
          "type": "impact"
        },
        {
          "id": "vector:databeat parameter",
          "keyphrase": "databeat parameter",
          "type": "vector"
        },
        {
          "id": "attacker:unauthenticated attackers",
          "keyphrase": "unauthenticated attackers",
          "type": "attacker"
        },
        {
          "id": "product:Profile",
          "keyphrase": "Profile",
          "type": "product"
        }
      ],
      "20": [
        {
          "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
          "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
          "type": "rootcause"
        },
        {
          "id": "rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
          "keyphrase": "insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
          "type": "rootcause"
        }
      ],
      "502": [
        {
          "id": "weakness:SQL injection",
          "keyphrase": "SQL injection",
          "type": "weakness"
        },
        {
          "id": "impact:extract sensitive information from the database",
          "keyphrase": "extract sensitive information from the database",
          "type": "impact"
        },
        {
          "id": "impact:extract sensitive information from database",
          "keyphrase": "extract sensitive information from database",
          "type": "impact"
        },
        {
          "id": "attacker:unauthenticated attackers",
          "keyphrase": "unauthenticated attackers",
          "type": "attacker"
        },
        {
          "id": "product:Commerce & More plugin for WordPress",
          "keyphrase": "Commerce & More plugin for WordPress",
          "type": "product"
        },
        {
          "id": "product:Profile",
          "keyphrase": "Profile",
          "type": "product"
        },
        {
          "id": "version:up to and including 16.26.10",
          "keyphrase": "up to and including 16.26.10",
          "type": "version"
        }
      ],
      "943": [
        {
          "id": "weakness:SQL injection",
          "keyphrase": "SQL injection",
          "type": "weakness"
        }
      ],
      "862": [
        {
          "id": "impact:extract sensitive information from the database",
          "keyphrase": "extract sensitive information from the database",
          "type": "impact"
        },
        {
          "id": "impact:extract sensitive information from database",
          "keyphrase": "extract sensitive information from database",
          "type": "impact"
        },
        {
          "id": "product:Commerce & More plugin for WordPress",
          "keyphrase": "Commerce & More plugin for WordPress",
          "type": "product"
        },
        {
          "id": "product:WP-Recall Registration",
          "keyphrase": "WP-Recall Registration",
          "type": "product"
        },
        {
          "id": "version:up to and including 16.26.10",
          "keyphrase": "up to and including 16.26.10",
          "type": "version"
        }
      ],
      "790": [
        {
          "id": "vector:databeat parameter",
          "keyphrase": "databeat parameter",
          "type": "vector"
        }
      ],
      "434": [
        {
          "id": "product:WP-Recall Registration",
          "keyphrase": "WP-Recall Registration",
          "type": "product"
        }
      ]
    },
    "relevant_cwes": [
      {
        "metadata": {
          "doc_id": "116",
          "name": "Improper Encoding or Escaping of Output",
          "source": "sparse",
          "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
          "keyphrase_sources": [
            {
              "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
              "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
              "type": "rootcause"
            },
            {
              "id": "rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
              "keyphrase": "insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
              "type": "rootcause"
            },
            {
              "id": "weakness:SQL injection",
              "keyphrase": "SQL injection",
              "type": "weakness"
            },
            {
              "id": "impact:extract sensitive information from the database",
              "keyphrase": "extract sensitive information from the database",
              "type": "impact"
            },
            {
              "id": "impact:extract sensitive information from database",
              "keyphrase": "extract sensitive information from database",
              "type": "impact"
            },
            {
              "id": "vector:databeat parameter",
              "keyphrase": "databeat parameter",
              "type": "vector"
            },
            {
              "id": "attacker:unauthenticated attackers",
              "keyphrase": "unauthenticated attackers",
              "type": "attacker"
            },
            {
              "id": "product:Commerce & More plugin for WordPress",
              "keyphrase": "Commerce & More plugin for WordPress",
              "type": "product"
            },
            {
              "id": "product:WP-Recall Registration",
              "keyphrase": "WP-Recall Registration",
              "type": "product"
            },
            {
              "id": "product:Profile",
              "keyphrase": "Profile",
              "type": "product"
            },
            {
              "id": "version:up to and including 16.26.10",
              "keyphrase": "up to and including 16.26.10",
              "type": "version"
            }
          ]
        },
        "similarity": 720.0393791852648
      },
      {
        "metadata": {
          "doc_id": "89",
          "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
          "source": "sparse",
          "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
          "keyphrase_sources": [
            {
              "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
              "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
              "type": "rootcause"
            },
            {
              "id": "rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
              "keyphrase": "insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
              "type": "rootcause"
            },
            {
              "id": "weakness:SQL injection",
              "keyphrase": "SQL injection",
              "type": "weakness"
            },
            {
              "id": "impact:extract sensitive information from the database",
              "keyphrase": "extract sensitive information from the database",
              "type": "impact"
            },
            {
              "id": "impact:extract sensitive information from database",
              "keyphrase": "extract sensitive information from database",
              "type": "impact"
            },
            {
              "id": "vector:databeat parameter",
              "keyphrase": "databeat parameter",
              "type": "vector"
            },
            {
              "id": "attacker:unauthenticated attackers",
              "keyphrase": "unauthenticated attackers",
              "type": "attacker"
            },
            {
              "id": "product:Commerce & More plugin for WordPress",
              "keyphrase": "Commerce & More plugin for WordPress",
              "type": "product"
            },
            {
              "id": "product:WP-Recall Registration",
              "keyphrase": "WP-Recall Registration",
              "type": "product"
            },
            {
              "id": "product:Profile",
              "keyphrase": "Profile",
              "type": "product"
            },
            {
              "id": "version:up to and including 16.26.10",
              "keyphrase": "up to and including 16.26.10",
              "type": "version"
            }
          ]
        },
        "similarity": 690.9524979987885
      },
      {
        "metadata": {
          "doc_id": "352",
          "name": "Cross-Site Request Forgery (CSRF)",
          "source": "sparse",
          "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
          "keyphrase_sources": [
            {
              "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
              "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
              "type": "rootcause"
            },
            {
              "id": "rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
              "keyphrase": "insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
              "type": "rootcause"
            },
            {
              "id": "vector:databeat parameter",
              "keyphrase": "databeat parameter",
              "type": "vector"
            },
            {
              "id": "attacker:unauthenticated attackers",
              "keyphrase": "unauthenticated attackers",
              "type": "attacker"
            },
            {
              "id": "product:Commerce & More plugin for WordPress",
              "keyphrase": "Commerce & More plugin for WordPress",
              "type": "product"
            },
            {
              "id": "product:WP-Recall Registration",
              "keyphrase": "WP-Recall Registration",
              "type": "product"
            },
            {
              "id": "product:Profile",
              "keyphrase": "Profile",
              "type": "product"
            },
            {
              "id": "version:up to and including 16.26.10",
              "keyphrase": "up to and including 16.26.10",
              "type": "version"
            }
          ]
        },
        "similarity": 648.8626316130307
      },
      {
        "metadata": {
          "doc_id": "90",
          "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
          "source": "sparse",
          "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.",
          "keyphrase_sources": [
            {
              "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
              "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
              "type": "rootcause"
            },
            {
              "id": "rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
              "keyphrase": "insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
              "type": "rootcause"
            },
            {
              "id": "weakness:SQL injection",
              "keyphrase": "SQL injection",
              "type": "weakness"
            },
            {
              "id": "impact:extract sensitive information from the database",
              "keyphrase": "extract sensitive information from the database",
              "type": "impact"
            },
            {
              "id": "impact:extract sensitive information from database",
              "keyphrase": "extract sensitive information from database",
              "type": "impact"
            },
            {
              "id": "vector:databeat parameter",
              "keyphrase": "databeat parameter",
              "type": "vector"
            },
            {
              "id": "attacker:unauthenticated attackers",
              "keyphrase": "unauthenticated attackers",
              "type": "attacker"
            },
            {
              "id": "product:Profile",
              "keyphrase": "Profile",
              "type": "product"
            }
          ]
        },
        "similarity": 646.2497935919164
      },
      {
        "metadata": {
          "doc_id": "20",
          "name": "Improper Input Validation",
          "source": "sparse",
          "original_content": "The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly.",
          "keyphrase_sources": [
            {
              "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
              "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
              "type": "rootcause"
            },
            {
              "id": "rootcause:insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
              "keyphrase": "insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query",
              "type": "rootcause"
            }
          ]
        },
        "similarity": 616.7818993711987
      },
      {
        "metadata": {
          "doc_id": "502",
          "name": "Deserialization of Untrusted Data",
          "source": "sparse",
          "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.",
          "keyphrase_sources": [
            {
              "id": "weakness:SQL injection",
              "keyphrase": "SQL injection",
              "type": "weakness"
            },
            {
              "id": "impact:extract sensitive information from the database",
              "keyphrase": "extract sensitive information from the database",
              "type": "impact"
            },
            {
              "id": "impact:extract sensitive information from database",
              "keyphrase": "extract sensitive information from database",
              "type": "impact"
            },
            {
              "id": "attacker:unauthenticated attackers",
              "keyphrase": "unauthenticated attackers",
              "type": "attacker"
            },
            {
              "id": "product:Commerce & More plugin for WordPress",
              "keyphrase": "Commerce & More plugin for WordPress",
              "type": "product"
            },
            {
              "id": "product:Profile",
              "keyphrase": "Profile",
              "type": "product"
            },
            {
              "id": "version:up to and including 16.26.10",
              "keyphrase": "up to and including 16.26.10",
              "type": "version"
            }
          ]
        },
        "similarity": 428.46898731332556
      },
      {
        "metadata": {
          "doc_id": "943",
          "name": "Improper Neutralization of Special Elements in Data Query Logic",
          "source": "sparse",
          "original_content": "The product generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query.",
          "keyphrase_sources": [
            {
              "id": "weakness:SQL injection",
              "keyphrase": "SQL injection",
              "type": "weakness"
            }
          ]
        },
        "similarity": 416.3842865900501
      },
      {
        "metadata": {
          "doc_id": "862",
          "name": "Missing Authorization",
          "source": "sparse",
          "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
          "keyphrase_sources": [
            {
              "id": "impact:extract sensitive information from the database",
              "keyphrase": "extract sensitive information from the database",
              "type": "impact"
            },
            {
              "id": "impact:extract sensitive information from database",
              "keyphrase": "extract sensitive information from database",
              "type": "impact"
            },
            {
              "id": "product:Commerce & More plugin for WordPress",
              "keyphrase": "Commerce & More plugin for WordPress",
              "type": "product"
            },
            {
              "id": "product:WP-Recall Registration",
              "keyphrase": "WP-Recall Registration",
              "type": "product"
            },
            {
              "id": "version:up to and including 16.26.10",
              "keyphrase": "up to and including 16.26.10",
              "type": "version"
            }
          ]
        },
        "similarity": 158.04357865987492
      },
      {
        "metadata": {
          "doc_id": "434",
          "name": "Unrestricted Upload of File with Dangerous Type",
          "source": "sparse",
          "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
          "keyphrase_sources": [
            {
              "id": "product:WP-Recall Registration",
              "keyphrase": "WP-Recall Registration",
              "type": "product"
            }
          ]
        },
        "similarity": 146.62582789500112
      },
      {
        "metadata": {
          "doc_id": "790",
          "name": "Improper Filtering of Special Elements",
          "source": "sparse",
          "original_content": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
          "keyphrase_sources": [
            {
              "id": "vector:databeat parameter",
              "keyphrase": "databeat parameter",
              "type": "vector"
            }
          ]
        },
        "similarity": 143.6571623220652
      }
    ],
    "enhanced_query": "# Vulnerability Description\n\n    The WP-Recall Registration, Profile, Commerce & More plugin for WordPress is vulnerable to SQL Injection via the databeat parameter in all versions up to, and including, 16.26.10 due to **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**. This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.\n\n    # Keyphrase-Specific CWE Analysis\n    This vulnerability contains multiple keyphrases that may map to different CWEs. \n    Please analyze each keyphrase separately and determine the most appropriate CWE(s) for each.\n\n    ## ROOTCAUSE: 'insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query'\n\nRelevant CWEs for this ROOTCAUSE:\n\n### 1. CWE-116: Improper Encoding or Escaping of Output (Score: 720.04)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 2. CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (Score: 690.95)\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal o...\n\n### 3. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 648.86)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 4. CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection') (Score: 646.25)\n\nThe product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component....\n\n### 5. CWE-20: Improper Input Validation (Score: 616.78)\n\nThe product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly....\n\n## ROOTCAUSE: 'insufficient escaping on user supplied parameter and lack of sufficient preparation on existing SQL query'\n\nRelevant CWEs for this ROOTCAUSE:\n\n### 1. CWE-116: Improper Encoding or Escaping of Output (Score: 720.04)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 2. CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (Score: 690.95)\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal o...\n\n### 3. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 648.86)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 4. CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection') (Score: 646.25)\n\nThe product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component....\n\n### 5. CWE-20: Improper Input Validation (Score: 616.78)\n\nThe product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly....\n\n## WEAKNESS: 'SQL injection'\n\nRelevant CWEs for this WEAKNESS:\n\n### 1. CWE-116: Improper Encoding or Escaping of Output (Score: 720.04)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 2. CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (Score: 690.95)\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal o...\n\n### 3. CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection') (Score: 646.25)\n\nThe product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component....\n\n### 4. CWE-502: Deserialization of Untrusted Data (Score: 428.47)\n\nThe product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid....\n\n### 5. CWE-943: Improper Neutralization of Special Elements in Data Query Logic (Score: 416.38)\n\nThe product generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query....\n\n## IMPACT: 'extract sensitive information from the database'\n\nRelevant CWEs for this IMPACT:\n\n### 1. CWE-116: Improper Encoding or Escaping of Output (Score: 720.04)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 2. CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (Score: 690.95)\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal o...\n\n### 3. CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection') (Score: 646.25)\n\nThe product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component....\n\n### 4. CWE-502: Deserialization of Untrusted Data (Score: 428.47)\n\nThe product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid....\n\n### 5. CWE-862: Missing Authorization (Score: 158.04)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n## IMPACT: 'extract sensitive information from database'\n\nRelevant CWEs for this IMPACT:\n\n### 1. CWE-116: Improper Encoding or Escaping of Output (Score: 720.04)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 2. CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (Score: 690.95)\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal o...\n\n### 3. CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection') (Score: 646.25)\n\nThe product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component....\n\n### 4. CWE-502: Deserialization of Untrusted Data (Score: 428.47)\n\nThe product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid....\n\n### 5. CWE-862: Missing Authorization (Score: 158.04)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n## VECTOR: 'databeat parameter'\n\nRelevant CWEs for this VECTOR:\n\n### 1. CWE-116: Improper Encoding or Escaping of Output (Score: 720.04)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 2. CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (Score: 690.95)\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal o...\n\n### 3. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 648.86)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 4. CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection') (Score: 646.25)\n\nThe product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component....\n\n### 5. CWE-790: Improper Filtering of Special Elements (Score: 143.66)\n\nThe product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component....\n\n## ATTACKER: 'unauthenticated attackers'\n\nRelevant CWEs for this ATTACKER:\n\n### 1. CWE-116: Improper Encoding or Escaping of Output (Score: 720.04)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 2. CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (Score: 690.95)\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal o...\n\n### 3. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 648.86)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 4. CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection') (Score: 646.25)\n\nThe product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component....\n\n### 5. CWE-502: Deserialization of Untrusted Data (Score: 428.47)\n\nThe product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid....\n\n## PRODUCT: 'Commerce & More plugin for WordPress'\n\nRelevant CWEs for this PRODUCT:\n\n### 1. CWE-116: Improper Encoding or Escaping of Output (Score: 720.04)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 2. CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (Score: 690.95)\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal o...\n\n### 3. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 648.86)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 4. CWE-502: Deserialization of Untrusted Data (Score: 428.47)\n\nThe product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid....\n\n### 5. CWE-862: Missing Authorization (Score: 158.04)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n## PRODUCT: 'WP-Recall Registration'\n\nRelevant CWEs for this PRODUCT:\n\n### 1. CWE-116: Improper Encoding or Escaping of Output (Score: 720.04)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 2. CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (Score: 690.95)\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal o...\n\n### 3. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 648.86)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 4. CWE-862: Missing Authorization (Score: 158.04)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n### 5. CWE-434: Unrestricted Upload of File with Dangerous Type (Score: 146.63)\n\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment....\n\n## PRODUCT: 'Profile'\n\nRelevant CWEs for this PRODUCT:\n\n### 1. CWE-116: Improper Encoding or Escaping of Output (Score: 720.04)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 2. CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (Score: 690.95)\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal o...\n\n### 3. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 648.86)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 4. CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection') (Score: 646.25)\n\nThe product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component....\n\n### 5. CWE-502: Deserialization of Untrusted Data (Score: 428.47)\n\nThe product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid....\n\n## VERSION: 'up to and including 16.26.10'\n\nRelevant CWEs for this VERSION:\n\n### 1. CWE-116: Improper Encoding or Escaping of Output (Score: 720.04)\n\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved....\n\n### 2. CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') (Score: 690.95)\n\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal o...\n\n### 3. CWE-352: Cross-Site Request Forgery (CSRF) (Score: 648.86)\n\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request....\n\n### 4. CWE-502: Deserialization of Untrusted Data (Score: 428.47)\n\nThe product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid....\n\n### 5. CWE-862: Missing Authorization (Score: 158.04)\n\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action....\n\n\n    # Analysis Instructions\n    1. For each keyphrase, identify the most appropriate CWE(s) that represent the weakness.\n    2. Consider how the different keyphrases might relate to each other in the vulnerability chain.\n    3. Provide a final determination of primary CWE(s) and any secondary CWEs.\n    4. Format your response using the standard analysis template.\n\n    Please analyze how these different weaknesses interact and provide a comprehensive CWE classification.\n    "
  },
  "retrieval_time": 1.7754709720611572
}