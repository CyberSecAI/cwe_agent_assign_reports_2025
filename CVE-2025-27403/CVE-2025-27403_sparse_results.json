{
  "query": "Ratify is a verification engine as a binary executable and on Kubernetes which enables verification of artifact security metadata and admits for deployment only those that comply with policies the user creates. In a Kubernetes environment, Ratify can be configured to authenticate to a private Azure Container Registry (ACR). The Azure workload identity and Azure managed identity authentication providers are configured in this setup. Users that configure a private ACR to be used with the Azure authentication providers may be impacted by a vulnerability that exists in versions prior to 1.2.3 and 1.3.2. Both Azure authentication providers attempt to exchange an Entra ID (EID) token for an ACR refresh token. However, Ratifys Azure authentication providers did not verify that the target registry is an ACR. This could have led to the EID token being presented to a non-ACR registry during token exchange. EID tokens with ACR access can potentially be extracted and abused if a user workload contains an image reference to a malicious registry. As of versions 1.2.3 and 1.3.2, the Azure workload identity and Azure managed identity authentication providers are updated to add new validation prior to EID token exchange. Validation relies upon registry domain validation against a pre-configured list of well-known ACR endpoints. EID token exchange will be executed only if at least one of the configured well-known domain suffixes (wildcard support included) matches the registry domain of the image reference.",
  "count": 10,
  "results": [
    {
      "cwe_id": "1390",
      "name": "Weak Authentication",
      "abstraction": "Class",
      "score": 1316.7630227116308,
      "original_score": 1316.7630227116308,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "abstraction": "Class",
      "score": 1306.976237457537,
      "original_score": 1306.976237457537,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "287",
      "name": "Improper Authentication",
      "abstraction": "Class",
      "score": 1294.3463914703536,
      "original_score": 1294.3463914703536,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "295",
      "name": "Improper Certificate Validation",
      "abstraction": "Base",
      "score": 1267.714805101889,
      "original_score": 1267.714805101889,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "347",
      "name": "Improper Verification of Cryptographic Signature",
      "abstraction": "Base",
      "score": 1259.34952594457,
      "original_score": 1259.34952594457,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "327",
      "name": "Use of a Broken or Risky Cryptographic Algorithm",
      "abstraction": "Class",
      "score": 1259.3112792699803,
      "original_score": 1259.3112792699803,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "201",
      "name": "Insertion of Sensitive Information Into Sent Data",
      "abstraction": "Base",
      "score": 1256.2808191034756,
      "original_score": 1256.2808191034756,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "668",
      "name": "Exposure of Resource to Wrong Sphere",
      "abstraction": "Class",
      "score": 1240.9113232086438,
      "original_score": 1240.9113232086438,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "306",
      "name": "Missing Authentication for Critical Function",
      "abstraction": "Base",
      "score": 1237.6176181378573,
      "original_score": 1237.6176181378573,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "639",
      "name": "Authorization Bypass Through User-Controlled Key",
      "abstraction": "Base",
      "score": 1213.5444043810385,
      "original_score": 1213.5444043810385,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 1213.5444043810385,
    "max": 1316.7630227116308,
    "mean": 1265.2815426786976,
    "median": 1259.3304026072751,
    "count": 10
  }
}