{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved net/mlx5 Reload only IB representors upon lag disable/enable On lag disable, the bond IB device along with all of its representors are destroyed, and then the slaves representors get reloaded. In case the slave IB representor load fails, the eswitch error flow unloads all representors, including ethernet representors, where the netdevs get detached and removed from lag bond. Such flow is inaccurate as the lag driver is not responsible for loading/unloading ethernet representors. Furthermore, the flow described above begins by holding lag lock to prevent bond changes during disable flow. However, when reaching the ethernet representors detachment from lag, the lag lock is required again, triggering the following deadlock Call trace __switch_to+0xf4/0x148 __schedule+0x2c8/0x7d0 schedule+0x50/0xe0 schedule_preempt_disabled+0x18/0x28 __mutex_lock.isra.13+0x2b8/0x570 __mutex_lock_slowpath+0x1c/0x28 mutex_lock+0x4c/0x68 mlx5_lag_remove_netdev+0x3c/0x1a0 [mlx5_core] mlx5e_uplink_rep_disable+0x70/0xa0 [mlx5_core] mlx5e_detach_netdev+0x6c/0xb0 [mlx5_core] mlx5e_netdev_change_profile+0x44/0x138 [mlx5_core] mlx5e_netdev_attach_nic_profile+0x28/0x38 [mlx5_core] mlx5e_vport_rep_unload+0x184/0x1b8 [mlx5_core] mlx5_esw_offloads_rep_load+0xd8/0xe0 [mlx5_core] mlx5_eswitch_reload_reps+0x74/0xd0 [mlx5_core] mlx5_disable_lag+0x130/0x138 [mlx5_core] mlx5_lag_disable_change+0x6c/0x70 [mlx5_core] // hold ldev->lock mlx5_de",
  "keyphrases": {
    "weakness": [
      "deadlock"
    ]
  },
  "timestamp": "2025-07-13 10:42:44",
  "cve_id": "CVE-2024-38557",
  "result_count": 10,
  "results": [
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "score": 488.42331066795623,
      "search_source": "weakness:deadlock"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "score": 482.0670453532015,
      "search_source": "weakness:deadlock"
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "score": 476.2964773154425,
      "search_source": "weakness:deadlock"
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "score": 471.46540733396205,
      "search_source": "weakness:deadlock"
    },
    {
      "cwe_id": "400",
      "name": "Uncontrolled Resource Consumption",
      "score": 452.93186056736084,
      "search_source": "weakness:deadlock"
    },
    {
      "cwe_id": "201",
      "name": "Insertion of Sensitive Information Into Sent Data",
      "score": 451.5622593302409,
      "search_source": "weakness:deadlock"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 429.89307159053936,
      "search_source": "weakness:deadlock"
    },
    {
      "cwe_id": "212",
      "name": "Improper Removal of Sensitive Information Before Storage or Transfer",
      "score": 429.15012611796305,
      "search_source": "weakness:deadlock"
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "score": 427.94543244504246,
      "search_source": "weakness:deadlock"
    },
    {
      "cwe_id": "306",
      "name": "Missing Authentication for Critical Function",
      "score": 426.78761027545085,
      "search_source": "weakness:deadlock"
    }
  ]
}