{
  "query": "In the Linux kernel, the following vulnerability has been resolved netfilter nf_tables prefer nft_chain_validate nft_chain_validate already performs loop detection because a cycle will result in a call stack overflow (ctx->level >= NFT_JUMP_STACK_SIZE). It also follows maps via ->validate callback in nft_lookup, so there appears no reason to iterate the maps again. nf_tables_check_loops() and all its helper functions can be removed. This improves ruleset load time significantly, from 23s down to 12s. This also fixes a crash bug. Old loop detection code can result in unbounded recursion BUG TASK stack guard page was hit at .... Oops stack guard page 0000 [#1] PREEMPT SMP KASAN CPU 4 PID 1539 Comm nft Not tainted 6.10.0-rc5+ #1 [..] with a suitable ruleset during validation of register stores. I cant see any actual reason to attempt to check for this from nft_validate_register_store(), at this point the transaction is still in progress, so we dont have a full picture of the rule graph. For nf-next it might make sense to either remove it or make this depend on table->validate_state in case we could catch an error earlier (for improved error reporting to userspace).",
  "count": 20,
  "results": [
    {
      "cwe_id": "606",
      "name": "Unchecked Input for Loop Condition",
      "abstraction": "Base",
      "score": 0.5240134854713312,
      "original_score": 0.5240134854713312,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "abstraction": "Base",
      "score": 0.5051253721567255,
      "original_score": 0.5051253721567255,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "abstraction": "Base",
      "score": 0.4877047316826232,
      "original_score": 0.4877047316826232,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "674",
      "name": "Uncontrolled Recursion",
      "abstraction": "Class",
      "score": 0.4854083661835965,
      "original_score": 0.4854083661835965,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "121",
      "name": "Stack-based Buffer Overflow",
      "abstraction": "Variant",
      "score": 0.46907364775947463,
      "original_score": 0.46907364775947463,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "abstraction": "Base",
      "score": 0.46533941246009725,
      "original_score": 0.46533941246009725,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "abstraction": "Variant",
      "score": 0.46387878982102326,
      "original_score": 0.46387878982102326,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "abstraction": "Class",
      "score": 0.4629453651310109,
      "original_score": 0.4629453651310109,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 0.4618982626554889,
      "original_score": 0.4618982626554889,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "252",
      "name": "Unchecked Return Value",
      "abstraction": "Base",
      "score": 0.45950747056022845,
      "original_score": 0.45950747056022845,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "834",
      "name": "Excessive Iteration",
      "abstraction": "Class",
      "score": 0.44442855894837435,
      "original_score": 0.44442855894837435,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "abstraction": "Class",
      "score": 0.4272635963697121,
      "original_score": 0.4272635963697121,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "617",
      "name": "Reachable Assertion",
      "abstraction": "Base",
      "score": 0.4267942061883935,
      "original_score": 0.4267942061883935,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "911",
      "name": "Improper Update of Reference Count",
      "abstraction": "Base",
      "score": 0.42676198527383225,
      "original_score": 0.42676198527383225,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "abstraction": "Base",
      "score": 0.4254348238811301,
      "original_score": 0.4254348238811301,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1288",
      "name": "Improper Validation of Consistency within Input",
      "abstraction": "Base",
      "score": 0.4227503605725879,
      "original_score": 0.4227503605725879,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "703",
      "name": "Improper Check or Handling of Exceptional Conditions",
      "abstraction": "Pillar",
      "score": 0.4203223232830464,
      "original_score": 0.4203223232830464,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "abstraction": "Base",
      "score": 0.4199771360825427,
      "original_score": 0.4199771360825427,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 0.4185764573451418,
      "original_score": 0.4185764573451418,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "129",
      "name": "Improper Validation of Array Index",
      "abstraction": "Variant",
      "score": 0.4183255625348942,
      "original_score": 0.4183255625348942,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 0.4183255625348942,
    "max": 0.5240134854713312,
    "mean": 0.45177649571806267,
    "median": 0.4519680147543014,
    "count": 20
  }
}