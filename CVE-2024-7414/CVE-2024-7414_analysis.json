{
  "cve_id": "CVE-2024-7414",
  "description": "The PDF Builder for WPForms plugin for WordPress is vulnerable to Full Path Disclosure in all versions up to, and including, 1.2.116. This is due to the plugin allowing direct access to the composer-setup.php file which has display_errors on. This makes it possible for unauthenticated attackers to retrieve the full path of the web application, which can be used to aid other attacks. The information displayed is not useful on its own, and requires another vulnerability to be present for damage to an affected website.",
  "key_phrases": {
    "rootcause": "direct access to PHP file with display_errors on",
    "weakness": "",
    "impact": "full path disclosure",
    "vector": "",
    "attacker": "unauthenticated attackers",
    "product": "PDF Builder for WPForms",
    "version": "up to and including 1.2.116",
    "component": "composer-setup.php file"
  },
  "reference_content": "### CVE-2024-7414 Analysis:\n\nBased on the provided information, the vulnerability identified as CVE-2024-7414 is a Full Path Disclosure vulnerability affecting the \"PDF Builder for WPForms\" WordPress plugin.\n\n**Root Cause:**\n\nThe vulnerability stems from the plugin's inclusion of the `composer-setup.php` file within its directory structure, which is directly accessible. This file has `display_errors` enabled.\n\n**Weaknesses/Vulnerabilities:**\n\n*   **Full Path Disclosure:** The primary weakness is the exposure of the server's file system path due to the `display_errors` setting in the `composer-setup.php` file. This file is not intended to be accessed directly through the web.\n\n**Impact of Exploitation:**\n\n*   **Information Disclosure:** The vulnerability allows unauthenticated attackers to obtain the full server path of the WordPress installation. This information can be used by attackers to gain a deeper understanding of the server's configuration, which could be a stepping stone for further attacks.\n*   **Limited Direct Impact:** It's important to note that the vulnerability itself does not directly allow for code execution or direct manipulation of the website's data. The information gained from this vulnerability is most useful when chained with other exploits.\n\n**Attack Vectors:**\n\n*   **Direct Web Request:** An attacker can retrieve the full path by directly requesting the vulnerable file (`composer-setup.php`) via an HTTP request.\n*   **Unauthenticated Access:** The vulnerability is accessible to unauthenticated users of the website.\n\n**Required Attacker Capabilities/Position:**\n\n*   **No Special Privileges:** The attacker does not need any special privileges or prior access to the WordPress website.\n*   **Network Access:** The attacker only needs network access to send HTTP requests to the website.\n\n**Additional Details:**\n\n*   The vulnerable file is located within the plugin's vendor directory, specifically: `pdf-builder-for-wpforms/trunk/vendor/jurosh/pdf-merge/bin/composer-setup.php`\n*   The vulnerability affects all versions of the plugin up to and including 1.2.116.\n*   The vulnerability was fixed in version 1.2.117 of the plugin.\n*   The `composer-setup.php` file is part of the `jurosh/pdf-merge` dependency.\n\n**Summary:**\n\nThe vulnerability is a medium-severity issue as it allows for information disclosure that could facilitate further attacks. However, the vulnerability itself doesn't directly lead to significant damage to an affected website.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n\n| CWE ID  | CWE Name                                           | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---------|----------------------------------------------------|------------|-----------------------|-----------------------------------|---------------------------------|\n| CWE-548 | Information Exposure Through Directory Listing | 0.8        | Base                  | Primary                           | Allowed                         |\n| CWE-425 | Direct Request ('Forced Browsing') | 0.6        | Base                  | Secondary                           | Allowed                         |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.7\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\n\nThe primary relationship considered was the parent-child relationship between CWE-548 and its potential parents. While several CWEs like CWE-862 (Missing Authorization) were considered, CWE-548 was deemed the most specific and relevant due to the direct exposure of files with sensitive information (full path). CWE-425 (Direct Request) was considered as a contributing factor, specifically the ability to directly request the `composer-setup.php` file. The abstraction levels were considered with a preference to Base level CWEs.\n\n```mermaid\ngraph TD\n    cwe548[\"CWE-548: Information Exposure Through Directory Listing\"]\n    cwe425[\"CWE-425: Direct Request ('Forced Browsing')\"]\n    cwe862[\"CWE-862: Missing Authorization\"]\n\n    cwe548 -->|CHILDOF| cwe862\n    cwe425 -->|CANPRECEDE| cwe548\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe548 primary\n    class cwe425 secondary\n    class cwe862 tertiary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with **direct access to a PHP file with display_errors on**, leading to full path disclosure.\n\n1.  **Direct Request (CWE-425)**: An unauthenticated attacker can directly request the composer-setup.php file.\n2.  **Information Exposure Through Directory Listing (CWE-548)**: The server exposes the full path due to `display_errors` being enabled in the requested file.\n\n## Summary of Analysis\n\nThe primary weakness is the exposure of the full path due to the misconfiguration of the `composer-setup.php` file (display_errors on) and its direct accessibility. This aligns directly with the description of CWE-548, Information Exposure Through Directory Listing. The vulnerability description explicitly states that the plugin allows direct access to the composer-setup.php file which has display_errors on. This makes it possible for unauthenticated attackers to retrieve the full path of the web application.\n\nThe retriever results indicated other CWEs such as CWE-425, CWE-862, and CWE-306. However, these were not as directly relevant as CWE-548. CWE-425 (Direct Request) is a contributing factor but not the root cause itself. CWE-862 (Missing Authorization) is a more general case and CWE-548 is a more specific child.\n\nTherefore, CWE-548 is the most appropriate primary CWE.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-548: Information Exposure Through Directory Listing\n**Abstraction Level**: Base\n\n**Description**: The web server contains a directory that does not have proper restrictions, allowing actors to list the files within that directory. The files themselves may or may not be accessible.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
  "analysis_with_relationships": "# Summary\n\n| CWE ID  | CWE Name                                           | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---------|----------------------------------------------------|------------|-----------------------|-----------------------------------|---------------------------------|\n| CWE-548 | Information Exposure Through Directory Listing | 0.8        | Base                  | Primary                           | Allowed                         |\n| CWE-425 | Direct Request ('Forced Browsing') | 0.6        | Base                  | Secondary                           | Allowed                         |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.7\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\n\nThe primary relationship considered was the parent-child relationship between CWE-548 and its potential parents. While several CWEs like CWE-862 (Missing Authorization) were considered, CWE-548 was deemed the most specific and relevant due to the direct exposure of files with sensitive information (full path). CWE-425 (Direct Request) was considered as a contributing factor, specifically the ability to directly request the `composer-setup.php` file. The abstraction levels were considered with a preference to Base level CWEs.\n\n```mermaid\ngraph TD\n    cwe548[\"CWE-548: Information Exposure Through Directory Listing\"]\n    cwe425[\"CWE-425: Direct Request ('Forced Browsing')\"]\n    cwe862[\"CWE-862: Missing Authorization\"]\n\n    cwe548 -->|CHILDOF| cwe862\n    cwe425 -->|CANPRECEDE| cwe548\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe548 primary\n    class cwe425 secondary\n    class cwe862 tertiary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with **direct access to a PHP file with display_errors on**, leading to full path disclosure.\n\n1.  **Direct Request (CWE-425)**: An unauthenticated attacker can directly request the composer-setup.php file.\n2.  **Information Exposure Through Directory Listing (CWE-548)**: The server exposes the full path due to `display_errors` being enabled in the requested file.\n\n## Summary of Analysis\n\nThe primary weakness is the exposure of the full path due to the misconfiguration of the `composer-setup.php` file (display_errors on) and its direct accessibility. This aligns directly with the description of CWE-548, Information Exposure Through Directory Listing. The vulnerability description explicitly states that the plugin allows direct access to the composer-setup.php file which has display_errors on. This makes it possible for unauthenticated attackers to retrieve the full path of the web application.\n\nThe retriever results indicated other CWEs such as CWE-425, CWE-862, and CWE-306. However, these were not as directly relevant as CWE-548. CWE-425 (Direct Request) is a contributing factor but not the root cause itself. CWE-862 (Missing Authorization) is a more general case and CWE-548 is a more specific child.\n\nTherefore, CWE-548 is the most appropriate primary CWE.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-548: Information Exposure Through Directory Listing\n**Abstraction Level**: Base\n\n**Description**: The web server contains a directory that does not have proper restrictions, allowing actors to list the files within that directory. The files themselves may or may not be accessible.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-306:**\n- 306 (Missing Authentication for Critical Function) - ROOT\n\n\n**Chain starting from CWE-548:**\n- 548 (Exposure of Information Through Directory Listing) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "639",
        "name": "Authorization Bypass Through User-Controlled Key",
        "source": "sparse"
      },
      "similarity": 614.4819322240774
    },
    {
      "metadata": {
        "doc_id": "425",
        "name": "Direct Request ('Forced Browsing')",
        "source": "sparse"
      },
      "similarity": 604.4126811832429
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 603.8054615176839
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 600.2356374019564
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 596.6726426979235
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 583.7357904120129
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 582.6798923315782
    },
    {
      "metadata": {
        "doc_id": "502",
        "name": "Deserialization of Untrusted Data",
        "source": "sparse"
      },
      "similarity": 582.5159258640803
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "type": "Base",
        "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
        "keyphrase_source": "rootcause:direct access to PHP file with display_errors on",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5026725058307331,
            "graph": 2.310296510673015
          }
        }
      },
      "similarity": 0.5026725058307331
    },
    {
      "doc_id": "471",
      "text": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "471",
        "name": "Modification of Assumed-Immutable Data (MAID)",
        "type": "base",
        "original_content": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
        "relationships": [
          {
            "source_id": "471",
            "target_id": "621",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "607",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "602",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "473",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "472",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "291",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "1321",
            "label": "CANFOLLOW",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "1282",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "664",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "664",
            "target_id": "471",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "621",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "607",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "602",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "473",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "472",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "291",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1321",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1282",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "425",
                  "471",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "425"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "425",
                  "471",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "425"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-306",
      "CWE-548",
      "CWE-425",
      "CWE-862"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}