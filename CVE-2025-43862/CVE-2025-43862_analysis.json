{
  "cve_id": "CVE-2025-43862",
  "description": "Dify is an open-source LLM app development platform. Prior to version 0.6.12, a normal user is able to **access and modify APP orchestration**, even though the web UI of APP orchestration is not presented for a normal user. This **access control flaw** allows non-admin users to make unauthorized access and changes on the APPSs. This issue has been patched in version 0.6.12. A workaround for this vulnerability involves updating the the access control mechanisms to enforce stricter user role permissions and implementing role-based access controls (RBAC) to ensure that only users with admin privileges can access Orchestration of the APPs.",
  "key_phrases": {
    "rootcause": "access control flaw",
    "weakness": "access and modify APP orchestration",
    "impact": "make unauthorized access and changes on APPSs",
    "vector": "",
    "attacker": "normal user",
    "product": "Dify",
    "version": "Prior to version 0.6.12",
    "component": ""
  },
  "reference_content": "## Analysis of CVE-2025-43862 based on provided content\n\nThe provided content relates to CVE-2025-43862. It details a vulnerability in the DIFY application allowing unauthorized access and modification of APP orchestration. Here's a breakdown of the information:\n\n**Root cause of vulnerability:**\n\n*   Normal users were able to access and modify APP orchestration despite the web UI not being presented for them. This is an access control flaw.\n\n**Weaknesses/vulnerabilities present:**\n\n*   Insufficient access controls.\n*   Lack of proper role-based access control (RBAC).\n\n**Impact of exploitation:**\n\n*   **API Key Theft and Abuse:** Unauthorized access to API keys (OpenAI, DALL-E, StableDiffusion, Judge0 CE) leading to misuse and potential financial loss.\n*   **Application Misuse and Data Theft:** Altering application logic to access restricted data or exfiltrate sensitive information.\n*   **Service Disruption and Manipulation:** Modifying workflows to disrupt functionality or introduce vulnerabilities.\n*   **Intellectual Property Theft:** Exporting DSL files containing proprietary logic.\n\n**Attack vectors:**\n\n*   Direct access to the APP orchestration endpoints (/app/{app.id}/workflow, /app/{app.id}/workflow/*) without proper authentication or authorization checks.\n\n**Required attacker capabilities/position:**\n\n*   A normal (non-admin) user with access to the DIFY application. No special privileges are required beyond standard user access.\n\n**Mitigation or fix:**\n\n*   Implement stricter access control mechanisms.\n*   Enforce role-based access control (RBAC) to restrict access to APP orchestration to admin users only.\n*   Secure APIs related to app name, icon editing, and workflows to require appropriate permissions.\n*   Remove API keys from front-end responses.\n\n**Additional Details (more than official CVE description):**\n\n*   The pull request #5266 addresses this vulnerability by hiding edit options based on user permissions, securing APIs, and removing the API key from the front-end response.\n*   The vulnerability affects versions <= v0.6.8.\n*   Threat research identified 3894 publicly accessible instances potentially vulnerable.\n*   The vulnerability was reported by Aden Yap Chuen Zhen and Ali Radzali from BAE Systems Digital Intelligence.\n*   CVSS score: 7.6 (High) - CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L\n*   CWE-284: Improper Access Control",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-863 | Incorrect Authorization | 1.0 | Class | Primary | Allowed-with-Review |\n| CWE-285 | Improper Authorization | 0.8 | Class | Secondary | Discouraged |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE selected is CWE-863, **Incorrect Authorization**, which is a Class-level CWE. It was chosen over its parent CWEs like CWE-285 (**Improper Authorization**) and CWE-284 (**Improper Access Control**) because it specifically describes a scenario where an authorization check is performed, but it's done incorrectly. CWE-285 is a more general term, and CWE-284 is even broader, encompassing both authentication and authorization issues where the root cause is unclear. The hierarchical relationship guided the selection towards the most specific applicable CWE.\n\n```mermaid\ngraph TD\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe285[\"CWE-285: Improper Authorization\"]\n    cwe284[\"CWE-284: Improper Access Control\"]\n    \n    cwe863 -->|CHILDOF| cwe285\n    cwe285 -->|CHILDOF| cwe284\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe863 primary\n    class cwe285,cwe284 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with an **access control flaw**, leading to **incorrect authorization**, and finally resulting in unauthorized access and changes to APPs.\n\n*   **Root Cause:** **access control flaw** leading to **incorrect authorization** (CWE-863)\n*   **Impact:** unauthorized access and changes on APPSs\n\n## Summary of Analysis\nThe initial assessment, based on the provided evidence, indicates an authorization issue. The vulnerability description highlights that \"a normal user is able to **access and modify APP orchestration**, even though the web UI of APP orchestration is not presented for a normal user\". This points to a scenario where the application performs an authorization check, but it's not correctly implemented, allowing unauthorized access.\n\nThe retriever results also support this assessment, with CWE-863 (**Incorrect Authorization**) being the top candidate. The retriever scores, combined with the vulnerability description, solidify the choice of CWE-863 as the primary CWE.\n\nThe guidance also points to either CWE-862 or CWE-863. Since the description states the users can **access** the orchestration, it is likely the authorization check is in place but is flawed, therefore CWE-863 is chosen.\n\nThe selected CWE is at the optimal level of specificity, as it accurately represents the nature of the vulnerability. CWE-863 describes a scenario where an authorization check exists but is implemented incorrectly. This level of detail is more precise than the broader CWE-285 (**Improper Authorization**), which simply indicates a general authorization failure, or CWE-284 (**Improper Access Control**), which is an even higher-level classification.\n\nThe vulnerability description key phrases emphasize the \"**access control flaw**\" that allows normal users to \"**access and modify APP orchestration**,\" leading to \"**unauthorized access and changes on APPSs**.\" These phrases directly support the identification of CWE-863 as the most appropriate classification, with high confidence. The CVE Reference Links Content Summary mentions \"CWE-284: Improper Access Control\". But the report indicates the \"**API Key Theft and Abuse**\" and \"**Application Misuse and Data Theft**\" are caused by the \"**insufficient access controls**\" and \"**lack of proper role-based access control (RBAC)**\"\n\nRelevant CWE Information:\n\n**CWE-863: Incorrect Authorization**\n\nThe product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check. This aligns with the vulnerability description, where a normal user can access and modify APP orchestration despite not having the necessary privileges.\n\n**CWE-285: Improper Authorization**\n\nThe product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action. This is a more general class of authorization issues. It was considered as a secondary candidate because it is a parent of CWE-863 and represents a higher-level abstraction of the same type of weakness.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-863 | Incorrect Authorization | 1.0 | Class | Primary | Allowed-with-Review |\n| CWE-285 | Improper Authorization | 0.8 | Class | Secondary | Discouraged |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE selected is CWE-863, **Incorrect Authorization**, which is a Class-level CWE. It was chosen over its parent CWEs like CWE-285 (**Improper Authorization**) and CWE-284 (**Improper Access Control**) because it specifically describes a scenario where an authorization check is performed, but it's done incorrectly. CWE-285 is a more general term, and CWE-284 is even broader, encompassing both authentication and authorization issues where the root cause is unclear. The hierarchical relationship guided the selection towards the most specific applicable CWE.\n\n```mermaid\ngraph TD\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe285[\"CWE-285: Improper Authorization\"]\n    cwe284[\"CWE-284: Improper Access Control\"]\n    \n    cwe863 -->|CHILDOF| cwe285\n    cwe285 -->|CHILDOF| cwe284\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe863 primary\n    class cwe285,cwe284 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with an **access control flaw**, leading to **incorrect authorization**, and finally resulting in unauthorized access and changes to APPs.\n\n*   **Root Cause:** **access control flaw** leading to **incorrect authorization** (CWE-863)\n*   **Impact:** unauthorized access and changes on APPSs\n\n## Summary of Analysis\nThe initial assessment, based on the provided evidence, indicates an authorization issue. The vulnerability description highlights that \"a normal user is able to **access and modify APP orchestration**, even though the web UI of APP orchestration is not presented for a normal user\". This points to a scenario where the application performs an authorization check, but it's not correctly implemented, allowing unauthorized access.\n\nThe retriever results also support this assessment, with CWE-863 (**Incorrect Authorization**) being the top candidate. The retriever scores, combined with the vulnerability description, solidify the choice of CWE-863 as the primary CWE.\n\nThe guidance also points to either CWE-862 or CWE-863. Since the description states the users can **access** the orchestration, it is likely the authorization check is in place but is flawed, therefore CWE-863 is chosen.\n\nThe selected CWE is at the optimal level of specificity, as it accurately represents the nature of the vulnerability. CWE-863 describes a scenario where an authorization check exists but is implemented incorrectly. This level of detail is more precise than the broader CWE-285 (**Improper Authorization**), which simply indicates a general authorization failure, or CWE-284 (**Improper Access Control**), which is an even higher-level classification.\n\nThe vulnerability description key phrases emphasize the \"**access control flaw**\" that allows normal users to \"**access and modify APP orchestration**,\" leading to \"**unauthorized access and changes on APPSs**.\" These phrases directly support the identification of CWE-863 as the most appropriate classification, with high confidence. The CVE Reference Links Content Summary mentions \"CWE-284: Improper Access Control\". But the report indicates the \"**API Key Theft and Abuse**\" and \"**Application Misuse and Data Theft**\" are caused by the \"**insufficient access controls**\" and \"**lack of proper role-based access control (RBAC)**\"\n\nRelevant CWE Information:\n\n**CWE-863: Incorrect Authorization**\n\nThe product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check. This aligns with the vulnerability description, where a normal user can access and modify APP orchestration despite not having the necessary privileges.\n\n**CWE-285: Improper Authorization**\n\nThe product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action. This is a more general class of authorization issues. It was considered as a secondary candidate because it is a parent of CWE-863 and represents a higher-level abstraction of the same type of weakness.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-284:**\n- 284 (Improper Access Control) - ROOT\n\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 656.4396395504991
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 637.0620497043458
    },
    {
      "metadata": {
        "doc_id": "1390",
        "name": "Weak Authentication",
        "source": "sparse"
      },
      "similarity": 619.8256740378534
    },
    {
      "metadata": {
        "doc_id": "287",
        "name": "Improper Authentication",
        "source": "sparse"
      },
      "similarity": 614.9079648154886
    },
    {
      "metadata": {
        "doc_id": "284",
        "name": "Improper Access Control",
        "source": "sparse"
      },
      "similarity": 610.2334590871718
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 608.1993920104198
    },
    {
      "metadata": {
        "doc_id": "923",
        "name": "Improper Restriction of Communication Channel to Intended Endpoints",
        "source": "sparse"
      },
      "similarity": 605.0758516834564
    },
    {
      "metadata": {
        "doc_id": "639",
        "name": "Authorization Bypass Through User-Controlled Key",
        "source": "sparse"
      },
      "similarity": 601.0815164182102
    },
    {
      "metadata": {
        "doc_id": "939",
        "name": "Improper Authorization in Handler for Custom URL Scheme",
        "type": "Base",
        "original_content": "The product uses a handler for a custom URL scheme, but it does not properly restrict which actors can invoke the handler using the scheme.",
        "keyphrase_source": "weakness:access",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.49110277897509896,
            "graph": 1.6107139808233197
          }
        }
      },
      "similarity": 0.49110277897509896
    },
    {
      "doc_id": "613",
      "text": "CWE-613: Insufficient Session Expiration",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "613",
        "name": "Insufficient Session Expiration",
        "type": "base",
        "original_content": "CWE-613: Insufficient Session Expiration",
        "relationships": [
          {
            "source_id": "613",
            "target_id": "352",
            "label": "REQUIREDBY",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "613",
            "target_id": "287",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "613",
            "target_id": "672",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "613",
            "target_id": "672",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "672",
            "target_id": "613",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "352",
            "target_id": "613",
            "label": "REQUIRES",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "287",
            "target_id": "613",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "287",
                  "613",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "287"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "287",
                  "613",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "287"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "613",
                  "287",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "287"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-284",
      "CWE-863",
      "CWE-285",
      "CWE-862"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}