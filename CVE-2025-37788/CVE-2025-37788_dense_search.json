{
  "retriever": "dense",
  "query": "In the Linux kernel, the following vulnerability has been resolved cxgb4 fix memory leak in cxgb4_init_ethtool_filters() error path In the for loop used to allocate the loc_array and bmap for each port, a memory leak is possible when the allocation for loc_array succeeds, but the allocation for bmap fails. This is because when the control flow goes to the label free_eth_finfo, only the allocations starting from (i-1)th iteration are freed. Fix that by freeing the loc_array in the bmap allocation error path.",
  "keyphrases": {
    "weakness": [
      "memory leak"
    ]
  },
  "timestamp": "2025-07-12 13:22:13",
  "cve_id": "CVE-2025-37788",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "type": "Variant",
      "score": 0.5404389561820709
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "type": "Class",
      "score": 0.505956443567628
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "type": "Variant",
      "score": 0.470146247043705
    },
    {
      "cwe_id": "403",
      "name": "Exposure of File Descriptor to Unintended Control Sphere ('File Descriptor Leak')",
      "type": "Base",
      "score": 0.46685000220790035
    },
    {
      "cwe_id": "805",
      "name": "Buffer Access with Incorrect Length Value",
      "type": "Base",
      "score": 0.4662753775381901
    },
    {
      "cwe_id": "786",
      "name": "Access of Memory Location Before Start of Buffer",
      "type": "Base",
      "score": 0.464884827268003
    },
    {
      "cwe_id": "126",
      "name": "Buffer Over-read",
      "type": "Variant",
      "score": 0.4604570402647554
    },
    {
      "cwe_id": "763",
      "name": "Release of Invalid Pointer or Reference",
      "type": "Base",
      "score": 0.460176455158903
    },
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "type": "Base",
      "score": 0.4599657972550477
    },
    {
      "cwe_id": "1325",
      "name": "Improperly Controlled Sequential Memory Allocation",
      "type": "Base",
      "score": 0.45942851143513375
    },
    {
      "cwe_id": "122",
      "name": "Heap-based Buffer Overflow",
      "type": "Variant",
      "score": 0.4535139914360841
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "type": "Class",
      "score": 0.451271081788988
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "type": "Base",
      "score": 0.4478080283841758
    },
    {
      "cwe_id": "121",
      "name": "Stack-based Buffer Overflow",
      "type": "Variant",
      "score": 0.4444004925323496
    },
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "type": "Variant",
      "score": 0.44303133870219874
    },
    {
      "cwe_id": "761",
      "name": "Free of Pointer not at Start of Buffer",
      "type": "Variant",
      "score": 0.4427125696078411
    },
    {
      "cwe_id": "911",
      "name": "Improper Update of Reference Count",
      "type": "Base",
      "score": 0.44180513755057854
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "type": "Base",
      "score": 0.44150982835272096
    },
    {
      "cwe_id": "590",
      "name": "Free of Memory not on the Heap",
      "type": "Variant",
      "score": 0.44143036412578485
    },
    {
      "cwe_id": "1260",
      "name": "Improper Handling of Overlap Between Protected Memory Ranges",
      "type": "Base",
      "score": 0.4387344268278382
    }
  ]
}