{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved cxgb4 fix memory leak in cxgb4_init_ethtool_filters() error path In the for loop used to allocate the loc_array and bmap for each port, a memory leak is possible when the allocation for loc_array succeeds, but the allocation for bmap fails. This is because when the control flow goes to the label free_eth_finfo, only the allocations starting from (i-1)th iteration are freed. Fix that by freeing the loc_array in the bmap allocation error path.",
  "keyphrases": {
    "weakness": [
      "memory leak"
    ]
  },
  "timestamp": "2025-07-14 21:25:24",
  "cve_id": "CVE-2025-37788",
  "result_count": 11,
  "results": [
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "score": 1000.0,
      "search_source": "alternate_term_match"
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "score": 458.59754978953964,
      "search_source": "weakness:memory leak"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 456.89480798699844,
      "search_source": "weakness:memory leak"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 435.2517013958769,
      "search_source": "weakness:memory leak"
    },
    {
      "cwe_id": "415",
      "name": "Double Free",
      "score": 432.4430424793994,
      "search_source": "weakness:memory leak"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 428.83482533002,
      "search_source": "weakness:memory leak"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "score": 426.3534726679507,
      "search_source": "weakness:memory leak"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "score": 422.2269098881635,
      "search_source": "weakness:memory leak"
    },
    {
      "cwe_id": "754",
      "name": "Improper Check for Unusual or Exceptional Conditions",
      "score": 417.0113419403658,
      "search_source": "weakness:memory leak"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "score": 412.5467367332168,
      "search_source": "weakness:memory leak"
    },
    {
      "cwe_id": "197",
      "name": "Numeric Truncation Error",
      "score": 144.42505578026677,
      "search_source": "base_query"
    }
  ]
}