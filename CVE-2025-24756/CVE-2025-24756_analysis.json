{
  "cve_id": "CVE-2025-24756",
  "description": "Cross-Site Request Forgery (CSRF) vulnerability in mgplugin Roi Calculator allows Stored **XSS**. This issue affects Roi Calculator from n/a through 1.0.",
  "key_phrases": {
    "rootcause": "",
    "weakness": [
      "Cross-Site Scripting",
      "XSS"
    ],
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": "mgplugin Roi Calculator",
    "version": "n/a through 1.0",
    "component": ""
  },
  "reference_content": "Root cause of vulnerability:\nThe WordPress Roi Calculator Plugin versions less than or equal to 1.0 are vulnerable to Cross Site Request Forgery (CSRF).\n\nWeaknesses/vulnerabilities present:\nCross Site Request Forgery (CSRF) - specifically, the plugin lacks CSRF protection.\n\nImpact of exploitation:\nA malicious actor can force higher privileged users to execute unwanted actions under their current authentication. The impact varies case by case.\n\nAttack vectors:\nExploitation occurs through Cross-Site Request Forgery attacks.\n\nRequired attacker capabilities/position:\nUnauthenticated attacker.\n\nMitigation or fix:\nUpdate to version 1.1 or later. Patchstack users can enable auto-updates for vulnerable plugins.\n\nAdditional details:\n- CVSS score: 7.1 (Low severity)\n- OWASP Top 10: A1: Broken Access Control\n- Plugin: Roi Calculator\n- Vulnerable versions: <= 1.0\n- Fixed in: 1.1\n- Reported by: SOPROBRO on October 9, 2024\n- Published by Patchstack on January 24, 2025.\n\nThe content provides more detail than the placeholder CVE description.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID   | CWE Name                                                               | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :--------- | :--------------------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-79  | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0       | Base                  | Primary                         | Allowed                         |\n| CWE-352 | Cross-Site Request Forgery (CSRF)                                      | 0.75      | Compound               | Secondary                       | Allowed                         |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')]. This CWE describes the core issue where user-controllable input is not properly neutralized before being used in a web page. CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] is a base level CWE, which is the preferred level of abstraction. The secondary weakness is CWE-352 [Cross-Site Request Forgery (CSRF)], which is a compound CWE.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe79 primary\n    class cwe352 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **improper neutralization** of input, leading to **Cross-Site Scripting (XSS)**. While the description mentions CSRF, the primary issue appears to be the stored XSS, indicating the lack of proper input validation and output encoding.\n  - The root cause is the **improper neutralization** of user input.\n  - This leads directly to stored **XSS**.\n  - CSRF is mentioned, implying a potential attack vector to trigger the stored XSS.\n\n## Summary of Analysis\nThe vulnerability description clearly states the presence of stored **XSS** due to **improper neutralization** of input. The key phrases 'Cross-Site Scripting' and 'XSS' strongly point to CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] as the primary weakness. The reference to CSRF suggests that an attacker could potentially use CSRF to inject malicious scripts, but the core issue remains the lack of proper input handling, making CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] the primary CWE.\n\nThe retriever results also support this, with CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] having a high score for both the 'Cross-Site Scripting' and 'XSS' keyphrases.\n\nCWE-352 [Cross-Site Request Forgery (CSRF)] is considered as a secondary weakness because the description mentions it in the context of the vulnerability.\n\nRelevant CWE Information:\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\n**Abstraction Level**: Variant\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-451: User Interface (UI) Misrepresentation of Critical Information\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe user interface (UI) does not properly represent critical information to the user, allowing the information - or its source - to be obscured or spoofed. This is often a component in phishing attacks.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-184: Incomplete List of Disallowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-807: Reliance on Untrusted Inputs in a Security Decision\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 2105.72\n**Source**: sparse\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is",
  "analysis_with_relationships": "# Summary\n| CWE ID   | CWE Name                                                               | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :--------- | :--------------------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-79  | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0       | Base                  | Primary                         | Allowed                         |\n| CWE-352 | Cross-Site Request Forgery (CSRF)                                      | 0.75      | Compound               | Secondary                       | Allowed                         |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')]. This CWE describes the core issue where user-controllable input is not properly neutralized before being used in a web page. CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] is a base level CWE, which is the preferred level of abstraction. The secondary weakness is CWE-352 [Cross-Site Request Forgery (CSRF)], which is a compound CWE.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe79 primary\n    class cwe352 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **improper neutralization** of input, leading to **Cross-Site Scripting (XSS)**. While the description mentions CSRF, the primary issue appears to be the stored XSS, indicating the lack of proper input validation and output encoding.\n  - The root cause is the **improper neutralization** of user input.\n  - This leads directly to stored **XSS**.\n  - CSRF is mentioned, implying a potential attack vector to trigger the stored XSS.\n\n## Summary of Analysis\nThe vulnerability description clearly states the presence of stored **XSS** due to **improper neutralization** of input. The key phrases 'Cross-Site Scripting' and 'XSS' strongly point to CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] as the primary weakness. The reference to CSRF suggests that an attacker could potentially use CSRF to inject malicious scripts, but the core issue remains the lack of proper input handling, making CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] the primary CWE.\n\nThe retriever results also support this, with CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] having a high score for both the 'Cross-Site Scripting' and 'XSS' keyphrases.\n\nCWE-352 [Cross-Site Request Forgery (CSRF)] is considered as a secondary weakness because the description mentions it in the context of the vulnerability.\n\nRelevant CWE Information:\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\n**Abstraction Level**: Variant\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-451: User Interface (UI) Misrepresentation of Critical Information\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe user interface (UI) does not properly represent critical information to the user, allowing the information - or its source - to be obscured or spoofed. This is often a component in phishing attacks.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-184: Incomplete List of Disallowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-807: Reliance on Untrusted Inputs in a Security Decision\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 2105.72\n**Source**: sparse\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n**Chain starting from CWE-80:**\n- 80 (Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_sources": [
          {
            "id": "weakness:Cross-Site Scripting",
            "keyphrase": "Cross-Site Scripting",
            "type": "weakness"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "product:mgplugin Roi Calculator",
            "keyphrase": "mgplugin Roi Calculator",
            "type": "product"
          },
          {
            "id": "version:n/a through 1.0",
            "keyphrase": "n/a through 1.0",
            "type": "version"
          }
        ]
      },
      "similarity": 268.3345076142385
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse",
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "keyphrase_sources": [
          {
            "id": "weakness:Cross-Site Scripting",
            "keyphrase": "Cross-Site Scripting",
            "type": "weakness"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "product:mgplugin Roi Calculator",
            "keyphrase": "mgplugin Roi Calculator",
            "type": "product"
          },
          {
            "id": "version:n/a through 1.0",
            "keyphrase": "n/a through 1.0",
            "type": "version"
          }
        ]
      },
      "similarity": 216.80953659753771
    },
    {
      "metadata": {
        "doc_id": "80",
        "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
        "source": "sparse",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.",
        "keyphrase_sources": [
          {
            "id": "weakness:Cross-Site Scripting",
            "keyphrase": "Cross-Site Scripting",
            "type": "weakness"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          }
        ]
      },
      "similarity": 192.6484504057272
    },
    {
      "metadata": {
        "doc_id": "1004",
        "name": "Sensitive Cookie Without 'HttpOnly' Flag",
        "source": "sparse",
        "original_content": "The product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag.",
        "keyphrase_sources": [
          {
            "id": "weakness:Cross-Site Scripting",
            "keyphrase": "Cross-Site Scripting",
            "type": "weakness"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "product:mgplugin Roi Calculator",
            "keyphrase": "mgplugin Roi Calculator",
            "type": "product"
          }
        ]
      },
      "similarity": 187.32576949546464
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "keyphrase_sources": [
          {
            "id": "weakness:Cross-Site Scripting",
            "keyphrase": "Cross-Site Scripting",
            "type": "weakness"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          }
        ]
      },
      "similarity": 183.33681159811476
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse",
        "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
        "keyphrase_sources": [
          {
            "id": "version:n/a through 1.0",
            "keyphrase": "n/a through 1.0",
            "type": "version"
          }
        ]
      },
      "similarity": 59.24029739324023
    },
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "sparse",
        "original_content": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
        "keyphrase_sources": [
          {
            "id": "version:n/a through 1.0",
            "keyphrase": "n/a through 1.0",
            "type": "version"
          }
        ]
      },
      "similarity": 56.05162128191628
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "keyphrase_sources": [
          {
            "id": "product:mgplugin Roi Calculator",
            "keyphrase": "mgplugin Roi Calculator",
            "type": "product"
          },
          {
            "id": "version:n/a through 1.0",
            "keyphrase": "n/a through 1.0",
            "type": "version"
          }
        ]
      },
      "similarity": 42.12558207127824
    },
    {
      "metadata": {
        "doc_id": "918",
        "name": "Server-Side Request Forgery (SSRF)",
        "source": "sparse",
        "original_content": "The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.",
        "keyphrase_sources": [
          {
            "id": "product:mgplugin Roi Calculator",
            "keyphrase": "mgplugin Roi Calculator",
            "type": "product"
          }
        ]
      },
      "similarity": 40.87545758027548
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-116",
      "CWE-80",
      "CWE-79",
      "CWE-472",
      "CWE-352",
      "CWE-74",
      "CWE-303",
      "CWE-451",
      "CWE-1391",
      "CWE-184",
      "CWE-807",
      "CWE-425"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "352": [
      {
        "id": "weakness:Cross-Site Scripting",
        "keyphrase": "Cross-Site Scripting",
        "type": "weakness"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "product:mgplugin Roi Calculator",
        "keyphrase": "mgplugin Roi Calculator",
        "type": "product"
      },
      {
        "id": "version:n/a through 1.0",
        "keyphrase": "n/a through 1.0",
        "type": "version"
      }
    ],
    "79": [
      {
        "id": "weakness:Cross-Site Scripting",
        "keyphrase": "Cross-Site Scripting",
        "type": "weakness"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "product:mgplugin Roi Calculator",
        "keyphrase": "mgplugin Roi Calculator",
        "type": "product"
      },
      {
        "id": "version:n/a through 1.0",
        "keyphrase": "n/a through 1.0",
        "type": "version"
      }
    ],
    "80": [
      {
        "id": "weakness:Cross-Site Scripting",
        "keyphrase": "Cross-Site Scripting",
        "type": "weakness"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      }
    ],
    "1004": [
      {
        "id": "weakness:Cross-Site Scripting",
        "keyphrase": "Cross-Site Scripting",
        "type": "weakness"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "product:mgplugin Roi Calculator",
        "keyphrase": "mgplugin Roi Calculator",
        "type": "product"
      }
    ],
    "116": [
      {
        "id": "weakness:Cross-Site Scripting",
        "keyphrase": "Cross-Site Scripting",
        "type": "weakness"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      }
    ],
    "89": [
      {
        "id": "product:mgplugin Roi Calculator",
        "keyphrase": "mgplugin Roi Calculator",
        "type": "product"
      },
      {
        "id": "version:n/a through 1.0",
        "keyphrase": "n/a through 1.0",
        "type": "version"
      }
    ],
    "918": [
      {
        "id": "product:mgplugin Roi Calculator",
        "keyphrase": "mgplugin Roi Calculator",
        "type": "product"
      }
    ],
    "434": [
      {
        "id": "version:n/a through 1.0",
        "keyphrase": "n/a through 1.0",
        "type": "version"
      }
    ],
    "22": [
      {
        "id": "version:n/a through 1.0",
        "keyphrase": "n/a through 1.0",
        "type": "version"
      }
    ]
  }
}