{
  "query": "In the Linux kernel, the following vulnerability has been resolved net ethernet oa_tc6 fix tx skb race condition between reference pointers There are two skb pointers to manage tx skbs enqueued from n/w stack. waiting_tx_skb pointer points to the tx skb which needs to be processed and ongoing_tx_skb pointer points to the tx skb which is being processed. SPI thread prepares the tx data chunks from the tx skb pointed by the ongoing_tx_skb pointer. When the tx skb pointed by the ongoing_tx_skb is processed, the tx skb pointed by the waiting_tx_skb is assigned to ongoing_tx_skb and the waiting_tx_skb pointer is assigned with NULL. Whenever there is a new tx skb from n/w stack, it will be assigned to waiting_tx_skb pointer if it is NULL. Enqueuing and processing of a tx skb handled in two different threads. Consider a scenario where the SPI thread processed an ongoing_tx_skb and it moves next tx skb from waiting_tx_skb pointer to ongoing_tx_skb pointer without doing any NULL check. At this time, if the waiting_tx_skb pointer is NULL then ongoing_tx_skb pointer is also assigned with NULL. After that, if a new tx skb is assigned to waiting_tx_skb pointer by the n/w stack and there is a chance to overwrite the tx skb pointer with NULL in the SPI thread. Finally one of the tx skb will be left as unhandled, resulting packet missing and memory leak. - Consider the below scenario where the TXC reported from the previous transfer is 10 and ongoing_tx_skb holds an tx ethernet frame which can be transported in 20 TXCs and waiting_tx_skb is still NULL. tx_credits = 10 /* 21 are filled in the previous transfer */ ongoing_tx_skb = 20 waiting_tx_skb = NULL /* Still NULL */ - So, (tc6->ongoing_tx_skb || tc6->waiting_tx_skb) becomes true. - After oa_tc6_prepare_spi_tx_buf_for_tx_skbs() ongoing_tx_skb = 10 waiting_tx_skb = NULL /* Still NULL */ - Perform SPI transfer. - Process SPI rx buffer to get the TXC from footers. - Now lets assume previously filled 21 TXCs are freed so we are good to transport the next remaining 10 tx chunks from ongoing_tx_skb. tx_credits = 21 ongoing_tx_skb = 10 waiting_tx_skb = NULL - So, (tc6->ongoing_tx_skb || tc6->waiting_tx_skb) becomes true again. - In the oa_tc6_prepare_spi_tx_buf_for_tx_skbs() ongoing_tx_skb = NULL waiting_tx_skb = NULL - Now the below bad case might happen, Thread1 (oa_tc6_start_xmit) Thread2 (oa_tc6_spi_thread_handler) --------------------------- ----------------------------------- - if waiting_tx_skb is NULL - if ongoing_tx_skb is NULL - ongoing_tx_skb = waiting_tx_skb - waiting_tx_skb = skb - waiting_tx_skb = NULL ... - ongoing_tx_skb = NULL - if waiting_tx_skb is NULL - waiting_tx_skb = skb To overcome the above issue, protect the moving of tx skb reference from waiting_tx_skb pointer to ongoing_tx_skb pointer and assigning new tx skb to waiting_tx_skb pointer, so that the other thread cant access the waiting_tx_skb pointer until the current thread completes moving the tx skb reference safely.",
  "keyphrases": {
    "rootcause": [
      "race condition"
    ]
  },
  "timestamp": "2025-07-12T06:44:16.000313",
  "retriever_config": {
    "weights": {
      "dense": 0.35,
      "sparse": 0.4,
      "graph": 0.25
    },
    "use_graph": true,
    "use_rag": true,
    "use_sparse": true
  },
  "raw_results": {
    "graph": [
      {
        "cwe_id": "252",
        "name": "Unchecked Return Value",
        "abstraction": "base",
        "score": 4.329000000000001,
        "description": "CWE-252: Unchecked Return Value...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "476",
        "name": "NULL Pointer Dereference",
        "abstraction": "Base",
        "score": 2.774767484426494,
        "description": "The product dereferences a pointer that it expects to be valid but is NULL....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "123",
        "name": "Write-what-where Condition",
        "abstraction": "base",
        "score": 2.2100000000000004,
        "description": "CWE-123: Write-what-where Condition...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "787",
        "name": "Out-of-bounds Write",
        "abstraction": "base",
        "score": 2.2100000000000004,
        "description": "CWE-787: Out-of-bounds Write...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "125",
        "name": "Out-of-bounds Read",
        "abstraction": "base",
        "score": 2.2100000000000004,
        "description": "CWE-125: Out-of-bounds Read...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "368",
        "name": "Context Switching Race Condition",
        "abstraction": "base",
        "score": 2.1762,
        "description": "CWE-368: Context Switching Race Condition...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "364",
        "name": "Signal Handler Race Condition",
        "abstraction": "Base",
        "score": 2.1215982448308464,
        "description": "The product uses a signal handler that introduces a race condition....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "416",
        "name": "Use After Free",
        "abstraction": "variant",
        "score": 2.04,
        "description": "CWE-416: Use After Free...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "415",
        "name": "Double Free",
        "abstraction": "variant",
        "score": 2.04,
        "description": "CWE-415: Double Free...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "824",
        "name": "Access of Uninitialized Pointer",
        "abstraction": "Base",
        "score": 1.882884166682016,
        "description": "The product accesses or uses a pointer that has not been initialized....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "120",
        "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
        "abstraction": "base",
        "score": 1.7680000000000005,
        "description": "CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')...",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "abstraction": "base",
        "score": 1.7680000000000005,
        "description": "CWE-1284: Improper Validation of Specified Quantity in Input...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "abstraction": "Class",
        "score": 1.7138193666653265,
        "description": "The product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code ...",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "1265",
        "name": "Unintended Reentrant Invocation of Non-reentrant Code Via Nested Calls",
        "abstraction": "base",
        "score": 1.6848000000000003,
        "description": "CWE-1265: Unintended Reentrant Invocation of Non-reentrant Code Via Nested Calls...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "825",
        "name": "Expired Pointer Dereference",
        "abstraction": "base",
        "score": 1.6848000000000003,
        "description": "CWE-825: Expired Pointer Dereference...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "134",
        "name": "Use of Externally-Controlled Format String",
        "abstraction": "base",
        "score": 1.6848000000000003,
        "description": "CWE-134: Use of Externally-Controlled Format String...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "366",
        "name": "Race Condition within a Thread",
        "abstraction": "Base",
        "score": 1.6790370324740544,
        "description": "If two threads of execution use a resource simultaneously, there exists the possibility that resources may be used while invalid, in turn making the state of execution undefined....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "386",
        "name": "Symbolic Name not Mapping to Correct Object",
        "abstraction": "base",
        "score": 1.6744000000000003,
        "description": "CWE-386: Symbolic Name not Mapping to Correct Object...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1421",
        "name": "Exposure of Sensitive Information in Shared Microarchitectural Structures during Transient Execution",
        "abstraction": "Base",
        "score": 1.6324858921828231,
        "description": "\n\t\t\tA processor event may allow transient operations to access\n\t\t\tarchitecturally restricted data (for example, in another address\n\t\t\tspace) in a shared microarchitectural structure (for example, a CP...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "129",
        "name": "Improper Validation of Array Index",
        "abstraction": "variant",
        "score": 1.6320000000000003,
        "description": "CWE-129: Improper Validation of Array Index...",
        "mapping_usage": "Allowed"
      }
    ],
    "dense": [
      {
        "cwe_id": "366",
        "name": "Race Condition within a Thread",
        "abstraction": "Base",
        "score": 0.46787167885541886,
        "description": "If two threads of execution use a resource simultaneously, there exists the possibility that resources may be used while invalid, in turn making the state of execution undefined....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1421",
        "name": "Exposure of Sensitive Information in Shared Microarchitectural Structures during Transient Execution",
        "abstraction": "Base",
        "score": 0.45604703954337095,
        "description": "\n\t\t\tA processor event may allow transient operations to access\n\t\t\tarchitecturally restricted data (for example, in another address\n\t\t\tspace) in a shared microarchitectural structure (for example, a CP...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "364",
        "name": "Signal Handler Race Condition",
        "abstraction": "Base",
        "score": 0.44936875947638905,
        "description": "The product uses a signal handler that introduces a race condition....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1422",
        "name": "Exposure of Sensitive Information caused by Incorrect Data Forwarding during Transient Execution",
        "abstraction": "Base",
        "score": 0.4482798827518074,
        "description": "A processor event or prediction may allow incorrect or stale data to\n\t\t  be forwarded to transient operations, potentially exposing data over a\n\t\t  covert channel....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1264",
        "name": "Hardware Logic with Insecure De-Synchronization between Control and Data Channels",
        "abstraction": "Base",
        "score": 0.4467047162786843,
        "description": "The hardware logic for error handling and security checks can incorrectly forward data before the security check is complete....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1423",
        "name": "Exposure of Sensitive Information caused by Shared Microarchitectural Predictor State that Influences Transient Execution",
        "abstraction": "Base",
        "score": 0.4459362530592425,
        "description": "Shared microarchitectural predictor state may allow code to influence\n\t\t\t\ttransient execution across a hardware boundary, potentially exposing\n\t\t\t\tdata that is accessible beyond the boundary over a co...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "909",
        "name": "Missing Initialization of Resource",
        "abstraction": "Class",
        "score": 0.442878967067716,
        "description": "The product does not initialize a critical resource....",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "1189",
        "name": "Improper Isolation of Shared Resources on System-on-a-Chip (SoC)",
        "abstraction": "Base",
        "score": 0.4400326546242141,
        "description": "The System-On-a-Chip (SoC) does not properly isolate shared resources between trusted and untrusted agents....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "824",
        "name": "Access of Uninitialized Pointer",
        "abstraction": "Base",
        "score": 0.4349419958206031,
        "description": "The product accesses or uses a pointer that has not been initialized....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "191",
        "name": "Integer Underflow (Wrap or Wraparound)",
        "abstraction": "Base",
        "score": 0.434513715801784,
        "description": "The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "911",
        "name": "Improper Update of Reference Count",
        "abstraction": "Base",
        "score": 0.4310459234814377,
        "description": "The product uses a reference count to manage a resource, but it does not update or incorrectly updates the reference count....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1331",
        "name": "Improper Isolation of Shared Resources in Network On Chip (NoC)",
        "abstraction": "Base",
        "score": 0.4257228961547146,
        "description": "The Network On Chip (NoC) does not isolate or incorrectly isolates its on-chip-fabric and internal resources such that they are shared between trusted and untrusted agents, creating timing channels....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1325",
        "name": "Improperly Controlled Sequential Memory Allocation",
        "abstraction": "Base",
        "score": 0.42448531363822833,
        "description": "The product manages a group of objects or resources and performs a separate memory allocation for each object, but it does not properly limit the total amount of memory that is consumed by all of the ...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "606",
        "name": "Unchecked Input for Loop Condition",
        "abstraction": "Base",
        "score": 0.4243673984615012,
        "description": "The product does not properly check inputs that are used for loop conditions, potentially leading to a denial of service or other consequences because of excessive looping....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "820",
        "name": "Missing Synchronization",
        "abstraction": "Base",
        "score": 0.42338596525534866,
        "description": "The product utilizes a shared resource in a concurrent manner but does not attempt to synchronize access to the resource....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "1285",
        "name": "Improper Validation of Specified Index, Position, or Offset in Input",
        "abstraction": "Base",
        "score": 0.4220400211847556,
        "description": "The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the spe...",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "abstraction": "Class",
        "score": 0.4201302060691341,
        "description": "The product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code ...",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "1342",
        "name": "Information Exposure through Microarchitectural State after Transient Execution",
        "abstraction": "Base",
        "score": 0.41875984031723684,
        "description": "The processor does not properly clear microarchitectural state after incorrect microcode assists or speculative execution, resulting in transient execution....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "805",
        "name": "Buffer Access with Incorrect Length Value",
        "abstraction": "Base",
        "score": 0.4175856737726496,
        "description": "The product uses a sequential operation to read or write a buffer, but it uses an incorrect length value that causes it to access memory that is outside of the bounds of the buffer....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "662",
        "name": "Improper Synchronization",
        "abstraction": "Class",
        "score": 0.4170590278283598,
        "description": "The product utilizes multiple threads or processes to allow temporary access to a shared resource that can only be exclusive to one process at a time, but it does not properly synchronize these action...",
        "mapping_usage": "Discouraged"
      }
    ],
    "sparse": [
      {
        "cwe_id": "833",
        "name": "Deadlock",
        "abstraction": "Base",
        "score": 2269.5706258161617,
        "description": "The product contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "476",
        "name": "NULL Pointer Dereference",
        "abstraction": "Base",
        "score": 2117.010634749045,
        "description": "The product dereferences a pointer that it expects to be valid but is NULL....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "824",
        "name": "Access of Uninitialized Pointer",
        "abstraction": "Base",
        "score": 2003.4962422824728,
        "description": "The product accesses or uses a pointer that has not been initialized....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "abstraction": "Class",
        "score": 1942.392921941976,
        "description": "The product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code ...",
        "mapping_usage": "Allowed-with-Review"
      },
      {
        "cwe_id": "252",
        "name": "Unchecked Return Value",
        "abstraction": "Base",
        "score": 1940.800715581438,
        "description": "The product does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "617",
        "name": "Reachable Assertion",
        "abstraction": "Base",
        "score": 1867.9617119302325,
        "description": "The product contains an assert() or similar statement that can be triggered by an attacker, which leads to an application exit or other behavior that is more severe than necessary....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "665",
        "name": "Improper Initialization",
        "abstraction": "Class",
        "score": 1862.423723098565,
        "description": "The product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used....",
        "mapping_usage": "Discouraged"
      },
      {
        "cwe_id": "364",
        "name": "Signal Handler Race Condition",
        "abstraction": "Base",
        "score": 1821.6757089869652,
        "description": "The product uses a signal handler that introduces a race condition....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "822",
        "name": "Untrusted Pointer Dereference",
        "abstraction": "Base",
        "score": 1797.1307907382472,
        "description": "The product obtains a value from an untrusted source, converts this value to a pointer, and dereferences the resulting pointer....",
        "mapping_usage": "Allowed"
      },
      {
        "cwe_id": "835",
        "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
        "abstraction": "Base",
        "score": 1795.0781858841083,
        "description": "The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop....",
        "mapping_usage": "Allowed"
      }
    ]
  },
  "score_statistics": {
    "dense": {
      "min": 0.4170590278283598,
      "max": 0.46787167885541886,
      "mean": 0.43455789647212983,
      "median": 0.43277981964161083,
      "count": 20
    },
    "sparse": {
      "min": 1795.0781858841083,
      "max": 2269.5706258161617,
      "mean": 1941.754126100921,
      "median": 1904.3812137558352,
      "count": 10
    },
    "graph": {
      "min": 1.6320000000000003,
      "max": 4.329000000000001,
      "mean": 2.045829609363078,
      "median": 1.825442083341008,
      "count": 20
    }
  }
}