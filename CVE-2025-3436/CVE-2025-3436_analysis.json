{
  "cve_id": "CVE-2025-3436",
  "description": "The coreActivity Activity Logging for WordPress plugin for WordPress is vulnerable to SQL Injection via the order and orderby parameters in all versions up to, and including, 2.7 due to **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**. This makes it possible for authenticated attackers, with Subscriber-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.",
  "key_phrases": {
    "rootcause": [
      "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
      "improper preparation of the SQL query",
      "insufficient escaping of user input"
    ],
    "weakness": [
      "SQL injection",
      "weakness"
    ],
    "impact": "extract sensitive information from the database",
    "vector": "order and orderby parameters",
    "attacker": "authenticated attackers with Subscriber-level access and above",
    "product": "coreActivity Activity Logging for WordPress WordPress plugin",
    "version": "up to and including 2.7",
    "component": ""
  },
  "reference_content": "Based on the provided content, this relates to CVE-2025-3436 as it explicitly mentions fixing \"SQL injections related to the Live Logs loading\".\n\nHere's the extracted information:\n\n* **Root cause of vulnerability:** SQL injections related to the Live Logs loading.\n* **Weaknesses/vulnerabilities present:** SQL Injection\n* **Impact of exploitation:** Not specified in the content, but SQL injection can lead to data breaches, modification, or deletion.\n* **Attack vectors:** Through the Live Logs input arguments.\n* **Required attacker capabilities/position:** An attacker would need to be able to manipulate the input arguments to the Live Logs functionality.\n* **Mitigation or fix:** Improved sanitization of the Live Logs input arguments. Specifically, the following functions are used for sanitization:\n    * `Sanitize::absint()` for integer values (e.g., blog ID, user ID, event ID, object ID, paged, min_id)\n    * `Sanitize::text()` for text values (e.g., IP address, component, object name, search)\n    * `Sanitize::slug()` and `strtoupper()` for slug values (e.g., country code, context, method, object type, order)\n    * `sanitize_key()` for key values (e.g., view, period, orderby)\n\nThe content provides more detail than the placeholder CVE description, specifically detailing the sanitization methods used to address the vulnerability.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID   | CWE Name                                                                                   | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| -------- | ------------------------------------------------------------------------------------------ | ---------- | ----------------------- | ------------------------------- | ------------------------------- |\n| CWE-89   | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')       | 1          | Base                    | Primary                         | Allowed                         |\n| CWE-116  | Improper Encoding or Escaping of Output                                                   | 0.7        | Class                   | Secondary                       | Allowed-with-Review             |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is clearly **CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')**, which is caused by **insufficient escaping** and **lack of sufficient preparation**. While **CWE-116 Improper Encoding or Escaping of Output** is related and could be considered, **CWE-89** is more specific to the context of SQL injection and therefore more appropriate. **CWE-89** is a child of **CWE-74 Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')**, but **CWE-89** is more specific.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n    \n    cwe89 -->|CHILDOF| cwe74\n    cwe89 -->|CANFOLLOW| cwe116\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe89 primary\n    class cwe116 secondary\n    class cwe74 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**, leading to **CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')**. The impact is that authenticated attackers can **extract sensitive information from the database**.\n\n## Summary of Analysis\nThe primary **ROOTCAUSE** is the **'insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query'**. The explicit mention of \"**SQL Injection**\" and the ability to \"**extract sensitive information from the database**\" clearly points to **CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')** as the primary weakness. **CWE-116 Improper Encoding or Escaping of Output** is a valid consideration given the \"**insufficient escaping**\" aspect, but it is a more general weakness, making **CWE-89** more appropriate and specific. The selection is based on the provided evidence, the retriever results, and the relationship analysis.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-345: Insufficient Verification of Data Authenticity\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-668: Exposure of Resource to Wrong Sphere\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-668 is high-level and is often misused as a catch-all when lower-level CWE IDs might be applicable. It is sometimes used for low-information vulnerability reports [REF-1287]. It is a level-1 Class (i.e., a child of a Pillar). It is not useful for trend analysis.\n\n\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-1390: Weak Authentication\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 5132.21\n**Source**: sparse\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is",
  "analysis_with_relationships": "# Summary\n| CWE ID   | CWE Name                                                                                   | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| -------- | ------------------------------------------------------------------------------------------ | ---------- | ----------------------- | ------------------------------- | ------------------------------- |\n| CWE-89   | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')       | 1          | Base                    | Primary                         | Allowed                         |\n| CWE-116  | Improper Encoding or Escaping of Output                                                   | 0.7        | Class                   | Secondary                       | Allowed-with-Review             |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is clearly **CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')**, which is caused by **insufficient escaping** and **lack of sufficient preparation**. While **CWE-116 Improper Encoding or Escaping of Output** is related and could be considered, **CWE-89** is more specific to the context of SQL injection and therefore more appropriate. **CWE-89** is a child of **CWE-74 Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')**, but **CWE-89** is more specific.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n    \n    cwe89 -->|CHILDOF| cwe74\n    cwe89 -->|CANFOLLOW| cwe116\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe89 primary\n    class cwe116 secondary\n    class cwe74 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**, leading to **CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')**. The impact is that authenticated attackers can **extract sensitive information from the database**.\n\n## Summary of Analysis\nThe primary **ROOTCAUSE** is the **'insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query'**. The explicit mention of \"**SQL Injection**\" and the ability to \"**extract sensitive information from the database**\" clearly points to **CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')** as the primary weakness. **CWE-116 Improper Encoding or Escaping of Output** is a valid consideration given the \"**insufficient escaping**\" aspect, but it is a more general weakness, making **CWE-89** more appropriate and specific. The selection is based on the provided evidence, the retriever results, and the relationship analysis.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-345: Insufficient Verification of Data Authenticity\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-668: Exposure of Resource to Wrong Sphere\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-668 is high-level and is often misused as a catch-all when lower-level CWE IDs might be applicable. It is sometimes used for low-information vulnerability reports [REF-1287]. It is a level-1 Class (i.e., a child of a Pillar). It is not useful for trend analysis.\n\n\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-1390: Weak Authentication\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 5132.21\n**Source**: sparse\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-1390:**\n- 1390 (Weak Authentication) - ROOT\n\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:improper preparation of the SQL query",
            "keyphrase": "improper preparation of the SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping of user input",
            "keyphrase": "insufficient escaping of user input",
            "type": "rootcause"
          },
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "weakness:weakness",
            "keyphrase": "weakness",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "vector:order and orderby parameters",
            "keyphrase": "order and orderby parameters",
            "type": "vector"
          },
          {
            "id": "attacker:authenticated attackers with Subscriber-level access and above",
            "keyphrase": "authenticated attackers with Subscriber-level access and above",
            "type": "attacker"
          },
          {
            "id": "product:coreActivity Activity Logging for WordPress WordPress plugin",
            "keyphrase": "coreActivity Activity Logging for WordPress WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:up to and including 2.7",
            "keyphrase": "up to and including 2.7",
            "type": "version"
          }
        ]
      },
      "similarity": 781.725746167637
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:improper preparation of the SQL query",
            "keyphrase": "improper preparation of the SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping of user input",
            "keyphrase": "insufficient escaping of user input",
            "type": "rootcause"
          },
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "weakness:weakness",
            "keyphrase": "weakness",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "vector:order and orderby parameters",
            "keyphrase": "order and orderby parameters",
            "type": "vector"
          },
          {
            "id": "attacker:authenticated attackers with Subscriber-level access and above",
            "keyphrase": "authenticated attackers with Subscriber-level access and above",
            "type": "attacker"
          },
          {
            "id": "product:coreActivity Activity Logging for WordPress WordPress plugin",
            "keyphrase": "coreActivity Activity Logging for WordPress WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:up to and including 2.7",
            "keyphrase": "up to and including 2.7",
            "type": "version"
          }
        ]
      },
      "similarity": 762.4781895906306
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:improper preparation of the SQL query",
            "keyphrase": "improper preparation of the SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping of user input",
            "keyphrase": "insufficient escaping of user input",
            "type": "rootcause"
          },
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "weakness:weakness",
            "keyphrase": "weakness",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "vector:order and orderby parameters",
            "keyphrase": "order and orderby parameters",
            "type": "vector"
          },
          {
            "id": "attacker:authenticated attackers with Subscriber-level access and above",
            "keyphrase": "authenticated attackers with Subscriber-level access and above",
            "type": "attacker"
          },
          {
            "id": "product:coreActivity Activity Logging for WordPress WordPress plugin",
            "keyphrase": "coreActivity Activity Logging for WordPress WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:up to and including 2.7",
            "keyphrase": "up to and including 2.7",
            "type": "version"
          }
        ]
      },
      "similarity": 726.4118430821771
    },
    {
      "metadata": {
        "doc_id": "90",
        "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          }
        ]
      },
      "similarity": 674.2452130804465
    },
    {
      "metadata": {
        "doc_id": "790",
        "name": "Improper Filtering of Special Elements",
        "source": "sparse",
        "original_content": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "vector:order and orderby parameters",
            "keyphrase": "order and orderby parameters",
            "type": "vector"
          },
          {
            "id": "version:up to and including 2.7",
            "keyphrase": "up to and including 2.7",
            "type": "version"
          }
        ]
      },
      "similarity": 665.2371343387236
    },
    {
      "metadata": {
        "doc_id": "943",
        "name": "Improper Neutralization of Special Elements in Data Query Logic",
        "source": "sparse",
        "original_content": "The product generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query.",
        "keyphrase_sources": [
          {
            "id": "rootcause:improper preparation of the SQL query",
            "keyphrase": "improper preparation of the SQL query",
            "type": "rootcause"
          }
        ]
      },
      "similarity": 552.0157712703632
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse",
        "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
        "keyphrase_sources": [
          {
            "id": "rootcause:improper preparation of the SQL query",
            "keyphrase": "improper preparation of the SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping of user input",
            "keyphrase": "insufficient escaping of user input",
            "type": "rootcause"
          },
          {
            "id": "weakness:weakness",
            "keyphrase": "weakness",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "attacker:authenticated attackers with Subscriber-level access and above",
            "keyphrase": "authenticated attackers with Subscriber-level access and above",
            "type": "attacker"
          },
          {
            "id": "product:coreActivity Activity Logging for WordPress WordPress plugin",
            "keyphrase": "coreActivity Activity Logging for WordPress WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:up to and including 2.7",
            "keyphrase": "up to and including 2.7",
            "type": "version"
          }
        ]
      },
      "similarity": 541.0100716658557
    },
    {
      "metadata": {
        "doc_id": "138",
        "name": "Improper Neutralization of Special Elements",
        "source": "sparse",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping of user input",
            "keyphrase": "insufficient escaping of user input",
            "type": "rootcause"
          },
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "vector:order and orderby parameters",
            "keyphrase": "order and orderby parameters",
            "type": "vector"
          }
        ]
      },
      "similarity": 529.5946922219956
    },
    {
      "metadata": {
        "doc_id": "502",
        "name": "Deserialization of Untrusted Data",
        "source": "sparse",
        "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.",
        "keyphrase_sources": [
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          }
        ]
      },
      "similarity": 470.45441164771444
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse",
        "original_content": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.",
        "keyphrase_sources": [
          {
            "id": "weakness:weakness",
            "keyphrase": "weakness",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "attacker:authenticated attackers with Subscriber-level access and above",
            "keyphrase": "authenticated attackers with Subscriber-level access and above",
            "type": "attacker"
          }
        ]
      },
      "similarity": 441.45446802868804
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse",
        "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
        "keyphrase_sources": [
          {
            "id": "product:coreActivity Activity Logging for WordPress WordPress plugin",
            "keyphrase": "coreActivity Activity Logging for WordPress WordPress plugin",
            "type": "product"
          }
        ]
      },
      "similarity": 191.98156326851569
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-1390",
      "CWE-89",
      "CWE-1391",
      "CWE-116",
      "CWE-345",
      "CWE-472",
      "CWE-74",
      "CWE-303",
      "CWE-138",
      "CWE-668",
      "CWE-425"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "116": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:improper preparation of the SQL query",
        "keyphrase": "improper preparation of the SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping of user input",
        "keyphrase": "insufficient escaping of user input",
        "type": "rootcause"
      },
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "weakness:weakness",
        "keyphrase": "weakness",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "vector:order and orderby parameters",
        "keyphrase": "order and orderby parameters",
        "type": "vector"
      },
      {
        "id": "attacker:authenticated attackers with Subscriber-level access and above",
        "keyphrase": "authenticated attackers with Subscriber-level access and above",
        "type": "attacker"
      },
      {
        "id": "product:coreActivity Activity Logging for WordPress WordPress plugin",
        "keyphrase": "coreActivity Activity Logging for WordPress WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:up to and including 2.7",
        "keyphrase": "up to and including 2.7",
        "type": "version"
      }
    ],
    "89": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:improper preparation of the SQL query",
        "keyphrase": "improper preparation of the SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping of user input",
        "keyphrase": "insufficient escaping of user input",
        "type": "rootcause"
      },
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "weakness:weakness",
        "keyphrase": "weakness",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "vector:order and orderby parameters",
        "keyphrase": "order and orderby parameters",
        "type": "vector"
      },
      {
        "id": "attacker:authenticated attackers with Subscriber-level access and above",
        "keyphrase": "authenticated attackers with Subscriber-level access and above",
        "type": "attacker"
      },
      {
        "id": "product:coreActivity Activity Logging for WordPress WordPress plugin",
        "keyphrase": "coreActivity Activity Logging for WordPress WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:up to and including 2.7",
        "keyphrase": "up to and including 2.7",
        "type": "version"
      }
    ],
    "352": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:improper preparation of the SQL query",
        "keyphrase": "improper preparation of the SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping of user input",
        "keyphrase": "insufficient escaping of user input",
        "type": "rootcause"
      },
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "weakness:weakness",
        "keyphrase": "weakness",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "vector:order and orderby parameters",
        "keyphrase": "order and orderby parameters",
        "type": "vector"
      },
      {
        "id": "attacker:authenticated attackers with Subscriber-level access and above",
        "keyphrase": "authenticated attackers with Subscriber-level access and above",
        "type": "attacker"
      },
      {
        "id": "product:coreActivity Activity Logging for WordPress WordPress plugin",
        "keyphrase": "coreActivity Activity Logging for WordPress WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:up to and including 2.7",
        "keyphrase": "up to and including 2.7",
        "type": "version"
      }
    ],
    "90": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      }
    ],
    "790": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "vector:order and orderby parameters",
        "keyphrase": "order and orderby parameters",
        "type": "vector"
      },
      {
        "id": "version:up to and including 2.7",
        "keyphrase": "up to and including 2.7",
        "type": "version"
      }
    ],
    "943": [
      {
        "id": "rootcause:improper preparation of the SQL query",
        "keyphrase": "improper preparation of the SQL query",
        "type": "rootcause"
      }
    ],
    "862": [
      {
        "id": "rootcause:improper preparation of the SQL query",
        "keyphrase": "improper preparation of the SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping of user input",
        "keyphrase": "insufficient escaping of user input",
        "type": "rootcause"
      },
      {
        "id": "weakness:weakness",
        "keyphrase": "weakness",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "attacker:authenticated attackers with Subscriber-level access and above",
        "keyphrase": "authenticated attackers with Subscriber-level access and above",
        "type": "attacker"
      },
      {
        "id": "product:coreActivity Activity Logging for WordPress WordPress plugin",
        "keyphrase": "coreActivity Activity Logging for WordPress WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:up to and including 2.7",
        "keyphrase": "up to and including 2.7",
        "type": "version"
      }
    ],
    "138": [
      {
        "id": "rootcause:insufficient escaping of user input",
        "keyphrase": "insufficient escaping of user input",
        "type": "rootcause"
      },
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "vector:order and orderby parameters",
        "keyphrase": "order and orderby parameters",
        "type": "vector"
      }
    ],
    "502": [
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      }
    ],
    "863": [
      {
        "id": "weakness:weakness",
        "keyphrase": "weakness",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "attacker:authenticated attackers with Subscriber-level access and above",
        "keyphrase": "authenticated attackers with Subscriber-level access and above",
        "type": "attacker"
      }
    ],
    "434": [
      {
        "id": "product:coreActivity Activity Logging for WordPress WordPress plugin",
        "keyphrase": "coreActivity Activity Logging for WordPress WordPress plugin",
        "type": "product"
      }
    ]
  }
}