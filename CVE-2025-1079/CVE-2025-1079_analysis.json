{
  "cve_id": "CVE-2025-1079",
  "description": "Client RCE on macOS and Linux via **improper symbolic link resolution** in Google Web Designers preview feature",
  "key_phrases": {
    "rootcause": "improper symbolic link resolution",
    "weakness": "",
    "impact": "RCE",
    "vector": "",
    "attacker": "",
    "product": "Google Web Designers",
    "version": "",
    "component": "preview feature"
  },
  "reference_content": "## Analysis of CVE-2025-1079 Content\n\nHere's an analysis of the provided content, focusing on details relevant to CVE-2025-1079, as described in the initial prompt. The content is highly relevant and provides significantly more detail than a typical CVE description.\n\n**Root cause of vulnerability:**\n\nThe vulnerability stems from improper symbolic link resolution before file access (\"Link Following\" - CWE-59). Specifically, Google Web Designer reuses an existing `gwd_preview_<parent directory name>` directory if it exists, instead of creating a new one during the ad preview process. This allows an attacker to plant symbolic links within that pre-existing directory, which the application indiscriminately follows when copying files.\n\n**Weaknesses/vulnerabilities present:**\n\n*   **Improper Symbolic Link Handling:** The core weakness is the failure to properly sanitize or validate symbolic links before following them during file copy operations.\n*   **Predictable Directory Naming:** The use of a predictable naming scheme for the preview directory (`gwd_preview_<parent directory name>`) allows attackers to pre-create the directory and populate it with malicious links.\n*   **Lack of Directory Creation:** The application doesn't create missing target directories when following symlinks, limiting exploitation options but not preventing it.\n\n**Impact of exploitation:**\n\nSuccessful exploitation allows an attacker to achieve client-side remote code execution (RCE) on the victim's computer. This could lead to:\n\n*   Account takeovers\n*   PII theft\n*   Malware installation (infostealers, ransomware, etc.)\n*   Potential for privilege escalation.\n\n**Attack vectors:**\n\n1.  **Malicious Ad Package:** The attacker crafts a malicious ad source package (ZIP file) containing:\n    *   Payload files (e.g., macOS launch agent, Linux URL handler configuration).\n    *   A `gwd_preview_<parent directory name>` directory populated with symbolic links pointing to the payload files.\n2.  **Social Engineering:** The attacker tricks the victim into downloading and extracting the malicious ZIP package.\n3.  **Application Interaction:** The victim opens the extracted ad in Google Web Designer and clicks the \"Preview\" button.\n4.  **Exploitation:** Google Web Designer copies files into the attacker-controlled `gwd_preview_<parent directory name>` directory, following the symbolic links and overwriting or creating files on the victim's system, ultimately executing the payload.\n\n**Required attacker capabilities/position:**\n\n*   Ability to create a malicious ad package with crafted symbolic links.\n*   Ability to distribute the malicious package to victims (e.g., through malvertising).\n*   Understanding of the target operating system's file system structure and symbolic link behavior.\n*   Social engineering skills to convince victims to download and open the malicious ad.\n\n**Mitigation or fix:**\n\nThe vulnerability was fixed in Google Web Designer version 16.2.0.0128 (released February 28, 2025). The fix likely involves:\n\n*   Properly validating and sanitizing symbolic links before following them.\n*   Creating a new, unique preview directory each time the preview feature is used, instead of reusing an existing one.\n\n**Additional Notes:**\n\n*   The vulnerability primarily affects macOS and Linux. Exploitation on Windows is unlikely due to default Windows security policies restricting symbolic link creation.\n*   The article details a proof-of-concept (PoC) demonstrating the vulnerability, including specific payload examples for macOS and Linux.\n*   The author received a $11,250 reward from Google's Vulnerability Reward Program for this finding.\n*   The content provides a detailed timeline of the vulnerability disclosure and patching process.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-59 | Improper Link Resolution Before File Access ('Link Following') | 1.0 | Base | Allowed | Primary CWE. The **improper symbolic link resolution** is the root cause of the vulnerability. |\n| CWE-61 | UNIX Symbolic Link (Symlink) Following | 0.7 | Compound | Allowed | Secondary candidate. This is a more specific case of CWE-59. |\n| CWE-64 | Windows Shortcut Following (.LNK) | 0.5 | Variant | Allowed | Secondary candidate. This is a more specific case of CWE-59, but less likely since Windows is not affected. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-59, which describes the **improper link resolution** vulnerability. CWE-61 and CWE-64 are more specific types of link following vulnerabilities. CWE-61 is specific to UNIX symbolic links, and CWE-64 is specific to Windows shortcuts. Since the vulnerability affects both macOS and Linux, CWE-61 is a reasonable secondary candidate, but CWE-64 is less likely. CWE-59 is the more general and appropriate root cause.\n\n```mermaid\ngraph TD\n    cwe59[\"CWE-59: Improper Link Resolution Before File Access ('Link Following')\"]\n    cwe61[\"CWE-61: UNIX Symbolic Link (Symlink) Following\"]\n    cwe64[\"CWE-64: Windows Shortcut Following (.LNK)\"]\n    \n    cwe61 -->|CHILDOF| cwe59\n    cwe64 -->|CHILDOF| cwe59\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe59 primary\n    class cwe61,cwe64 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **improper symbolic link resolution (CWE-59)**, which allows an attacker to create malicious symbolic links. When the Google Web Designer copies files into a directory containing these links, it follows them, potentially overwriting files on the victim's system, leading to remote code execution.\n\n## Summary of Analysis\nThe analysis is based on the provided evidence, specifically the **Vulnerability Description Key Phrases** and the **CVE Reference Links Content Summary**. The key phrase \"improper symbolic link resolution\" directly points to CWE-59. The summary confirms that the application **does not properly** sanitize or validate symbolic links before following them. The graph relationships show that CWE-61 and CWE-64 are more specific types of CWE-59. CWE-59 is selected because it is the root cause and at the appropriate level of specificity.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-59: Improper Link Resolution Before File Access ('Link Following')\n**Abstraction Level**: Base\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nThe product attempts to access a file based on the filename, but it **does not properly prevent** that filename from identifying a link or shortcut that resolves to an unintended resource.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-61: UNIX Symbolic Link (Symlink) Following\n**Abstraction Level**: Compound\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product, when opening a file or directory, **does not sufficiently account for** when the file is a symbolic link that resolves to a target outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n## CWE-64: Windows Shortcut Following (.LNK)\n**Abstraction Level**: Variant\n**Similarity Score**: 1103.98\n**Source**: sparse\n\n**Description**:\nThe product, when opening a file or directory, **does not sufficiently handle** when the file is a Windows shortcut (.LNK) whose target is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\nCWEs considered but not used:\n\n*   CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') - While path traversal might be involved, the core issue is the **improper handling of symbolic links**, not the traversal itself.\n*   CWE-73: External Control of File Name or Path - While the file name or path is controlled externally, the vulnerability arises specifically from the **improper resolution of symbolic links**, making CWE-59 a more accurate fit.\n* CWE-41, CWE-1386, CWE-386, CWE-1021, CWE-184, CWE-451, CWE-497, CWE-425, CWE-668, CWE-755, CWE-116, CWE-923: These CWEs were considered but deemed less relevant because they do not directly address the root cause of **improper symbolic link resolution** or are too abstract.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-59 | Improper Link Resolution Before File Access ('Link Following') | 1.0 | Base | Allowed | Primary CWE. The **improper symbolic link resolution** is the root cause of the vulnerability. |\n| CWE-61 | UNIX Symbolic Link (Symlink) Following | 0.7 | Compound | Allowed | Secondary candidate. This is a more specific case of CWE-59. |\n| CWE-64 | Windows Shortcut Following (.LNK) | 0.5 | Variant | Allowed | Secondary candidate. This is a more specific case of CWE-59, but less likely since Windows is not affected. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-59, which describes the **improper link resolution** vulnerability. CWE-61 and CWE-64 are more specific types of link following vulnerabilities. CWE-61 is specific to UNIX symbolic links, and CWE-64 is specific to Windows shortcuts. Since the vulnerability affects both macOS and Linux, CWE-61 is a reasonable secondary candidate, but CWE-64 is less likely. CWE-59 is the more general and appropriate root cause.\n\n```mermaid\ngraph TD\n    cwe59[\"CWE-59: Improper Link Resolution Before File Access ('Link Following')\"]\n    cwe61[\"CWE-61: UNIX Symbolic Link (Symlink) Following\"]\n    cwe64[\"CWE-64: Windows Shortcut Following (.LNK)\"]\n    \n    cwe61 -->|CHILDOF| cwe59\n    cwe64 -->|CHILDOF| cwe59\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe59 primary\n    class cwe61,cwe64 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **improper symbolic link resolution (CWE-59)**, which allows an attacker to create malicious symbolic links. When the Google Web Designer copies files into a directory containing these links, it follows them, potentially overwriting files on the victim's system, leading to remote code execution.\n\n## Summary of Analysis\nThe analysis is based on the provided evidence, specifically the **Vulnerability Description Key Phrases** and the **CVE Reference Links Content Summary**. The key phrase \"improper symbolic link resolution\" directly points to CWE-59. The summary confirms that the application **does not properly** sanitize or validate symbolic links before following them. The graph relationships show that CWE-61 and CWE-64 are more specific types of CWE-59. CWE-59 is selected because it is the root cause and at the appropriate level of specificity.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-59: Improper Link Resolution Before File Access ('Link Following')\n**Abstraction Level**: Base\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nThe product attempts to access a file based on the filename, but it **does not properly prevent** that filename from identifying a link or shortcut that resolves to an unintended resource.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-61: UNIX Symbolic Link (Symlink) Following\n**Abstraction Level**: Compound\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product, when opening a file or directory, **does not sufficiently account for** when the file is a symbolic link that resolves to a target outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n## CWE-64: Windows Shortcut Following (.LNK)\n**Abstraction Level**: Variant\n**Similarity Score**: 1103.98\n**Source**: sparse\n\n**Description**:\nThe product, when opening a file or directory, **does not sufficiently handle** when the file is a Windows shortcut (.LNK) whose target is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\nCWEs considered but not used:\n\n*   CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') - While path traversal might be involved, the core issue is the **improper handling of symbolic links**, not the traversal itself.\n*   CWE-73: External Control of File Name or Path - While the file name or path is controlled externally, the vulnerability arises specifically from the **improper resolution of symbolic links**, making CWE-59 a more accurate fit.\n* CWE-41, CWE-1386, CWE-386, CWE-1021, CWE-184, CWE-451, CWE-497, CWE-425, CWE-668, CWE-755, CWE-116, CWE-923: These CWEs were considered but deemed less relevant because they do not directly address the root cause of **improper symbolic link resolution** or are too abstract.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n**Chain starting from CWE-22:**\n- 22 (Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "59",
        "name": "Improper Link Resolution Before File Access ('Link Following')",
        "source": "sparse"
      },
      "similarity": 138.84696261211624
    },
    {
      "metadata": {
        "doc_id": "61",
        "name": "UNIX Symbolic Link (Symlink) Following",
        "source": "sparse"
      },
      "similarity": 133.427768480922
    },
    {
      "metadata": {
        "doc_id": "64",
        "name": "Windows Shortcut Following (.LNK)",
        "source": "sparse"
      },
      "similarity": 128.74097472189703
    },
    {
      "metadata": {
        "doc_id": "62",
        "name": "UNIX Hard Link",
        "source": "sparse"
      },
      "similarity": 104.81274610559262
    },
    {
      "metadata": {
        "doc_id": "1386",
        "name": "Insecure Operation on Windows Junction / Mount Point",
        "source": "sparse"
      },
      "similarity": 94.5431783004572
    },
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "sparse"
      },
      "similarity": 93.9872415731506
    },
    {
      "metadata": {
        "doc_id": "1021",
        "name": "Improper Restriction of Rendered UI Layers or Frames",
        "source": "sparse"
      },
      "similarity": 86.87285479014679
    },
    {
      "metadata": {
        "doc_id": "184",
        "name": "Incomplete List of Disallowed Inputs",
        "source": "sparse"
      },
      "similarity": 85.95182810857379
    },
    {
      "metadata": {
        "doc_id": "65",
        "name": "Windows Hard Link",
        "type": "Variant",
        "original_content": "The product, when opening a file or directory, does not sufficiently handle when the name is associated with a hard link to a target that is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.",
        "keyphrase_source": "rootcause:improper symbolic link resolution",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.4956112273280038,
            "graph": 1.5355425786729229
          }
        }
      },
      "similarity": 0.4956112273280038
    },
    {
      "doc_id": "386",
      "text": "CWE-386: Symbolic Name not Mapping to Correct Object",
      "score": 2.0930000000000004,
      "metadata": {
        "doc_id": "386",
        "name": "Symbolic Name not Mapping to Correct Object",
        "type": "base",
        "original_content": "CWE-386: Symbolic Name not Mapping to Correct Object",
        "relationships": [
          {
            "source_id": "386",
            "target_id": "61",
            "label": "REQUIREDBY",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "386",
            "target_id": "486",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "386",
            "target_id": "610",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "386",
            "target_id": "367",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "386",
            "target_id": "706",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "706",
            "target_id": "386",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "61",
            "target_id": "386",
            "label": "REQUIRES",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 0.9,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "61",
                  "386",
                  "REQUIRES"
                ]
              ],
              "score": 0.9,
              "type": "relationship_chain",
              "source": "61"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "61",
                  "386",
                  "REQUIRES"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "61"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.0930000000000004
          }
        }
      },
      "similarity": 2.0930000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-116",
      "CWE-22",
      "CWE-59",
      "CWE-73",
      "CWE-1021",
      "CWE-923",
      "CWE-184",
      "CWE-386",
      "CWE-64",
      "CWE-451",
      "CWE-668",
      "CWE-1386",
      "CWE-755",
      "CWE-425",
      "CWE-497",
      "CWE-61",
      "CWE-41"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}