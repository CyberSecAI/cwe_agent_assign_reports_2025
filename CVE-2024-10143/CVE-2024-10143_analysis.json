{
  "cve_id": "CVE-2024-10143",
  "description": "The MB Custom Post Types & Custom Taxonomies WordPress plugin before 2.7.7 **does not sanitise and escape some of its settings**, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).",
  "key_phrases": {
    "rootcause": "does not sanitise and escape some of its settings",
    "weakness": "Stored cross-site scripting",
    "impact": [
      "perform cross-site scripting attacks",
      "Stored Cross-Site Scripting attacks"
    ],
    "vector": "",
    "attacker": "high privilege users",
    "product": "MB Custom Post Types & Custom Taxonomies WordPress plugin",
    "version": "before 2.7.7",
    "component": ""
  },
  "reference_content": "## CVE-2024-10143 Analysis\n\nThe provided content is **RELEVANT** to CVE-2024-10143. It details a Stored Cross-Site Scripting (XSS) vulnerability in the MB Custom Post Types & Custom Taxonomies plugin. Here's a breakdown of the information:\n\n**Root cause of vulnerability:**\n\nThe plugin does not sanitize and escape some of its settings, allowing for XSS attacks.\n\n**Weaknesses/vulnerabilities present:**\n\n*   Stored Cross-Site Scripting (XSS)\n\n**Impact of exploitation:**\n\nHigh privilege users (e.g., admin) can execute arbitrary JavaScript code in the context of other users' browsers.\n\n**Attack vectors:**\n\n*   The vulnerability exists in the \"Media frame filter\" field within the Labels options of the Post Types panel. An attacker can inject a malicious script into this field.\n*   The exploit is triggered when a user views a post created using the plugin and attempts to set a featured image.\n\n**Required attacker capabilities/position:**\n\n*   Authenticated user with administrative privileges or higher.\n\n**Mitigation or fix:**\n\n*   The vulnerability is fixed in version 2.7.7 of the plugin.\n\n**Additional Details (more than official CVE description):**\n\n*   **Proof of Concept:** Detailed steps are provided to reproduce the vulnerability.\n*   **CVSS Score:** 3.5 (Low)\n*   **References:** Links to the CVE entry ([https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-10143](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-10143)) and a research report ([https://research.cleantalk.org/CVE-2024-10143/](https://research.cleantalk.org/CVE-2024-10143/)).\n*   **Researcher:** Krugov Artyom is credited with discovering the vulnerability.\n*   **Timeline:** Publicly published on 2024-09-24, added to the database on 2025-03-03, and last updated on 2025-03-03.\n*   **CWE:** CWE-79\n*   **OWASP Top 10:** A7: Cross-Site Scripting (XSS)",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n\n| CWE ID   | CWE Name                                                                     | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| -------- | ---------------------------------------------------------------------------- | ---------- | --------------------- | ------------------------------- | ------------------------------- |\n| CWE-79   | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0        | Base                  | Primary CWE                   | Allowed                         |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary relationship considered was the parent-child relationship between CWE-79 and its parents and children. Since the vulnerability specifically involves improper neutralization of input during web page generation, CWE-79 at the Base level is the most accurate and specific representation. The other relationships such as CanPrecede, CanFollow, and PeerOf were considered for potential secondary weaknesses or related vulnerabilities, but they were not directly applicable to the root cause described.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe87[\"CWE-87\"]\n    cwe86[\"CWE-86\"]\n    cwe85[\"CWE-85\"]\n    cwe84[\"CWE-84\"]\n    cwe83[\"CWE-83\"]\n\n    cwe79 -->|PARENTOF| cwe87\n    cwe79 -->|PARENTOF| cwe86\n    cwe79 -->|PARENTOF| cwe85\n    cwe79 -->|PARENTOF| cwe84\n    cwe79 -->|PARENTOF| cwe83\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe79 primary\n    class cwe87,cwe86,cwe85,cwe84,cwe83 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain begins with the **failure to sanitize and escape settings**, leading directly to the **Stored Cross-Site Scripting** vulnerability. The lack of proper input handling (sanitization and escaping) is the **root cause** (CWE-79), which then results in the ability to inject malicious scripts into web pages viewed by other users.\n\n## Summary of Analysis\n\nThe analysis is based on the vulnerability description, which clearly states that the MB Custom Post Types & Custom Taxonomies WordPress plugin before version 2.7.7 **does not sanitise and escape some of its settings**. The CVE reference links content summary confirms the **root cause of the vulnerability** is that the plugin **does not sanitize and escape some of its settings, allowing for XSS attacks**. The **weakness/vulnerability present** is **Stored Cross-Site Scripting (XSS)**.\n\nThe retriever results also list CWE-79 as a potential match.\n\nThe decision to assign CWE-79 is strongly supported by the evidence. The failure to sanitize and escape settings directly leads to the XSS vulnerability. This aligns perfectly with the definition of CWE-79: \"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.\"\n\nCWE-79 is at the optimal level of specificity (Base) because it directly describes the **root cause** of the vulnerability (improper neutralization of input) and the context (web page generation).\n\n**CWEs considered but not used:**\n\n*   **CWE-352: Cross-Site Request Forgery (CSRF):** While CSRF is a web application vulnerability, it does not directly relate to the described issue of improper input neutralization.\n*   **CWE-116: Improper Encoding or Escaping of Output:** Although related to output handling, CWE-79 is more specific to the context of web page generation and XSS, making it a better fit.\n*   **CWE-862: Missing Authorization:** This CWE is not relevant because the vulnerability is due to **improper input handling**, not a **missing authorization check**.\n*   **CWE-434: Unrestricted Upload of File with Dangerous Type:** Not applicable as the vulnerability does not involve file uploads.\n*   **CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'):** This relates to SQL injection, which is not the vulnerability described.\n*   **CWE-863: Incorrect Authorization:** As with CWE-862, the issue isn't about authorization.\n*   **CWE-138: Improper Neutralization of Special Elements:** This is a more general case of improper neutralization. CWE-79 is more specific to XSS.\n*   **CWE-96: Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection'):** The vulnerability doesn't involve static code injection.\n*   **CWE-471: Modification of Assumed-Immutable Data (MAID):** This CWE doesn't fit the description of the vulnerability.",
  "analysis_with_relationships": "# Summary\n\n| CWE ID   | CWE Name                                                                     | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| -------- | ---------------------------------------------------------------------------- | ---------- | --------------------- | ------------------------------- | ------------------------------- |\n| CWE-79   | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0        | Base                  | Primary CWE                   | Allowed                         |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary relationship considered was the parent-child relationship between CWE-79 and its parents and children. Since the vulnerability specifically involves improper neutralization of input during web page generation, CWE-79 at the Base level is the most accurate and specific representation. The other relationships such as CanPrecede, CanFollow, and PeerOf were considered for potential secondary weaknesses or related vulnerabilities, but they were not directly applicable to the root cause described.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe87[\"CWE-87\"]\n    cwe86[\"CWE-86\"]\n    cwe85[\"CWE-85\"]\n    cwe84[\"CWE-84\"]\n    cwe83[\"CWE-83\"]\n\n    cwe79 -->|PARENTOF| cwe87\n    cwe79 -->|PARENTOF| cwe86\n    cwe79 -->|PARENTOF| cwe85\n    cwe79 -->|PARENTOF| cwe84\n    cwe79 -->|PARENTOF| cwe83\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe79 primary\n    class cwe87,cwe86,cwe85,cwe84,cwe83 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain begins with the **failure to sanitize and escape settings**, leading directly to the **Stored Cross-Site Scripting** vulnerability. The lack of proper input handling (sanitization and escaping) is the **root cause** (CWE-79), which then results in the ability to inject malicious scripts into web pages viewed by other users.\n\n## Summary of Analysis\n\nThe analysis is based on the vulnerability description, which clearly states that the MB Custom Post Types & Custom Taxonomies WordPress plugin before version 2.7.7 **does not sanitise and escape some of its settings**. The CVE reference links content summary confirms the **root cause of the vulnerability** is that the plugin **does not sanitize and escape some of its settings, allowing for XSS attacks**. The **weakness/vulnerability present** is **Stored Cross-Site Scripting (XSS)**.\n\nThe retriever results also list CWE-79 as a potential match.\n\nThe decision to assign CWE-79 is strongly supported by the evidence. The failure to sanitize and escape settings directly leads to the XSS vulnerability. This aligns perfectly with the definition of CWE-79: \"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.\"\n\nCWE-79 is at the optimal level of specificity (Base) because it directly describes the **root cause** of the vulnerability (improper neutralization of input) and the context (web page generation).\n\n**CWEs considered but not used:**\n\n*   **CWE-352: Cross-Site Request Forgery (CSRF):** While CSRF is a web application vulnerability, it does not directly relate to the described issue of improper input neutralization.\n*   **CWE-116: Improper Encoding or Escaping of Output:** Although related to output handling, CWE-79 is more specific to the context of web page generation and XSS, making it a better fit.\n*   **CWE-862: Missing Authorization:** This CWE is not relevant because the vulnerability is due to **improper input handling**, not a **missing authorization check**.\n*   **CWE-434: Unrestricted Upload of File with Dangerous Type:** Not applicable as the vulnerability does not involve file uploads.\n*   **CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'):** This relates to SQL injection, which is not the vulnerability described.\n*   **CWE-863: Incorrect Authorization:** As with CWE-862, the issue isn't about authorization.\n*   **CWE-138: Improper Neutralization of Special Elements:** This is a more general case of improper neutralization. CWE-79 is more specific to XSS.\n*   **CWE-96: Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection'):** The vulnerability doesn't involve static code injection.\n*   **CWE-471: Modification of Assumed-Immutable Data (MAID):** This CWE doesn't fit the description of the vulnerability.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-87:**\n- 87 (Improper Neutralization of Alternate XSS Syntax) - ROOT\n\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 439.84931604409314
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 344.59461784571573
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 327.73601588112484
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 311.67405270462183
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse"
      },
      "similarity": 311.5496413051814
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 292.5060694207013
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 284.326620110386
    },
    {
      "metadata": {
        "doc_id": "138",
        "name": "Improper Neutralization of Special Elements",
        "source": "sparse"
      },
      "similarity": 275.45943513787626
    },
    {
      "metadata": {
        "doc_id": "96",
        "name": "Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')",
        "type": "Base",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before inserting the input into an executable resource, such as a library, configuration file, or template.",
        "keyphrase_source": "weakness:Stored cross-site scripting",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.5247757417967567
          }
        }
      },
      "similarity": 0.5247757417967567
    },
    {
      "doc_id": "471",
      "text": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
      "score": 2.7196000000000002,
      "metadata": {
        "doc_id": "471",
        "name": "Modification of Assumed-Immutable Data (MAID)",
        "type": "base",
        "original_content": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
        "relationships": [
          {
            "source_id": "471",
            "target_id": "621",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "607",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "602",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "473",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "472",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "291",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "1321",
            "label": "CANFOLLOW",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "1282",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "664",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "664",
            "target_id": "471",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "621",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "607",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "602",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "473",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "472",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "291",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1321",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1282",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.5599999999999999,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_up",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "425",
                  "471",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "425"
            },
            "abstraction_path_up": {
              "path": [
                [
                  "472",
                  "471",
                  "CHILDOF"
                ]
              ],
              "score": 0.5599999999999999,
              "type": "abstraction_path_up",
              "source": "472"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "425",
                  "471",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "425"
            }
          }
        },
        "abstraction_level": "base",
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.7196000000000002
          }
        }
      },
      "similarity": 2.7196000000000002
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-87",
      "CWE-89",
      "CWE-863",
      "CWE-471",
      "CWE-116",
      "CWE-862",
      "CWE-79",
      "CWE-85",
      "CWE-352",
      "CWE-138",
      "CWE-96",
      "CWE-86",
      "CWE-83",
      "CWE-84",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}