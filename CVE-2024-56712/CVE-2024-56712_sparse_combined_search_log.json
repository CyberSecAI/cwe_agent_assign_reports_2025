{
  "method": "sparse_combined",
  "query": "In the Linux kernel, the following vulnerability has been resolved udmabuf fix memory leak on last export_udmabuf() error path In export_udmabuf(), if dma_buf_fd() fails because the FD table is full, a dma_buf owning the udmabuf has already been created but the error handling in udmabuf_create() will tear down the udmabuf without doing anything about the containing dma_buf. This leaves a dma_buf in memory that contains a dangling pointer though that doesnt seem to lead to anything bad except a memory leak. Fix it by moving the dma_buf_fd() call out of export_udmabuf() so that we can give it different error handling. Note that the shape of this code changed a lot in commit 5e72b2b41a21 (udmabuf convert udmabuf driver to use folios) but the memory leak seems to have existed since the introduction of udmabuf.",
  "keyphrases": {
    "weakness": [
      "memory leak"
    ]
  },
  "timestamp": "2025-07-13T23:55:55.172485",
  "results_count": 11,
  "results_summary": [
    {
      "doc_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "score": 1000.0
    },
    {
      "doc_id": "909",
      "name": "Missing Initialization of Resource",
      "score": 591.352908978426
    },
    {
      "doc_id": "125",
      "name": "Out-of-bounds Read",
      "score": 591.06302895203
    },
    {
      "doc_id": "415",
      "name": "Double Free",
      "score": 582.6933320314484
    },
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 580.6369421151818
    }
  ]
}