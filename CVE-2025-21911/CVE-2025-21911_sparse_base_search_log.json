{
  "method": "sparse_base",
  "query": "In the Linux kernel, the following vulnerability has been resolved drm/imagination avoid deadlock on fence release Do scheduler queue fence release processing on a workqueue, rather than in the release function itself. Fixes deadlock issues such as the following [ 607.400437] ============================================ [ 607.405755] WARNING possible recursive locking detected [ 607.415500] -------------------------------------------- [ 607.420817] westonzfq0/24149 is trying to acquire lock [ 607.426131] ffff000017d041a0 (reservation_ww_class_mutex){+.+.}-{33}, at pvr_gem_object_vunmap+0x40/0xc0 [powervr] [ 607.436728] but task is already holding lock [ 607.442554] ffff000017d105a0 (reservation_ww_class_mutex){+.+.}-{33}, at dma_buf_ioctl+0x250/0x554 [ 607.451727] other info that might help us debug this [ 607.458245] Possible unsafe locking scenario [ 607.464155] CPU0 [ 607.466601] ---- [ 607.469044] lock(reservation_ww_class_mutex) [ 607.473584] lock(reservation_ww_class_mutex) [ 607.478114] *** DEADLOCK ***",
  "keyphrases": {
    "base_query": "In the Linux kernel, the following vulnerability has been resolved drm/imagination avoid deadlock on fence release Do scheduler queue fence release processing on a workqueue, rather than in the release function itself. Fixes deadlock issues such as the following [ 607.400437] ============================================ [ 607.405755] WARNING possible recursive locking detected [ 607.415500] -------------------------------------------- [ 607.420817] westonzfq0/24149 is trying to acquire lock [ 607.426131] ffff000017d041a0 (reservation_ww_class_mutex){+.+.}-{33}, at pvr_gem_object_vunmap+0x40/0xc0 [powervr] [ 607.436728] but task is already holding lock [ 607.442554] ffff000017d105a0 (reservation_ww_class_mutex){+.+.}-{33}, at dma_buf_ioctl+0x250/0x554 [ 607.451727] other info that might help us debug this [ 607.458245] Possible unsafe locking scenario [ 607.464155] CPU0 [ 607.466601] ---- [ 607.469044] lock(reservation_ww_class_mutex) [ 607.473584] lock(reservation_ww_class_mutex) [ 607.478114] *** DEADLOCK ***"
  },
  "timestamp": "2025-07-14T09:59:39.785386",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "607",
      "name": "Public Static Final Field References Mutable Object",
      "score": 160.07219802464718
    },
    {
      "doc_id": "667",
      "name": "Improper Locking",
      "score": 154.06301006527187
    },
    {
      "doc_id": "833",
      "name": "Deadlock",
      "score": 138.42053013796112
    },
    {
      "doc_id": "663",
      "name": "Use of a Non-reentrant Function in a Concurrent Context",
      "score": 101.62045517884968
    },
    {
      "doc_id": "764",
      "name": "Multiple Locks of a Critical Resource",
      "score": 97.28644792919656
    }
  ]
}