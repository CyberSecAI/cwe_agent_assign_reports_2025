{
  "method": "sparse_combined",
  "query": "Livewire is a full-stack framework for Laravel that allows for dynamic UI components without leaving PHP. In livewire/livewire prior to `2.12.7` and `v3.5.2`, the file extension of an uploaded file is guessed based on the MIME type. As a result, the actual file extension from the file name is not validated. An attacker can therefore bypass the validation by uploading a file with a valid MIME type (e.g., `image/png`) and a .php file extension. If the following criteria are met, the attacker can carry out an RCE attack 1. Filename is composed of the original file name using `$file->getClientOriginalName()`. 2. Files stored directly on your server in a public storage disk. 3. Webserver is configured to execute .php files. This issue has been addressed in release versions `2.12.7` and `3.5.2`. All users are advised to upgrade. There are no known workarounds for this vulnerability.",
  "keyphrases": {
    "rootcause": [
      "file extension of an uploaded file is guessed based on the MIME type"
    ]
  },
  "timestamp": "2025-07-13T18:31:10.936470",
  "results_count": 11,
  "results_summary": [
    {
      "doc_id": "434",
      "name": "Unrestricted Upload of File with Dangerous Type",
      "score": 1029.278390657124
    },
    {
      "doc_id": "79",
      "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "score": 926.2983847149662
    },
    {
      "doc_id": "1336",
      "name": "Improper Neutralization of Special Elements Used in a Template Engine",
      "score": 925.5369219002523
    },
    {
      "doc_id": "138",
      "name": "Improper Neutralization of Special Elements",
      "score": 917.6617204852546
    },
    {
      "doc_id": "502",
      "name": "Deserialization of Untrusted Data",
      "score": 905.2038968446665
    }
  ]
}