{
  "cve_id": "CVE-2025-22232",
  "description": "**Spring Cloud Config Server may not use Vault token sent by clients using a X-CONFIG-TOKEN header when making requests to Vault**. Your application may be affected by this if the following are true * You have Spring Vault on the classpath of your Spring Cloud Config Server and * You are using the X-CONFIG-TOKEN header to send a Vault token to the Spring Cloud Config Server for the Config Server to use when making requests to Vault and * You are using the default Spring Vault SessionManager implementation LifecycleAwareSessionManager or a SessionManager implementation that persists the Vault token such as SimpleSessionManager. In this case the SessionManager persists the first token it retrieves and will continue to use that token even if client requests to the Spring Cloud Config Server include a X-CONFIG-TOKEN header with a different value. Affected Spring Products and Versions Spring Cloud Config * 2.2.1.RELEASE - 4.2.1 Mitigation Users of affected versions should upgrade to the corresponding fixed version. Affected version(s)Fix versionAvailability4.2.x4.2.2OSS4.1.x4.1.6OSS4.0.x4.0.10Commercial3.1.x3.1.10Commercial3.0.x4.1.6OSS2.2.x4.1.6OSS NOTE Spring Cloud Config 3.0.x and 2.2.x are no longer under open source or commercial support. Users of these versions are encouraged to upgrade to a supported version. No other mitigation steps are necessary.",
  "key_phrases": {
    "rootcause": "Spring Cloud Config Server may not use Vault token sent by clients using a X-CONFIG-TOKEN header when making requests to Vault",
    "weakness": "",
    "impact": "",
    "vector": "X-CONFIG-TOKEN header",
    "attacker": "",
    "product": "Spring Cloud Config Server",
    "version": [
      "2.2.1.RELEASE - 4.2.1",
      "4.0.x",
      "4.1.x",
      "4.2.x",
      "3.1.x",
      "3.0.x",
      "2.2.x"
    ],
    "component": ""
  },
  "reference_content": "```\nRoot cause of vulnerability:\nSpring Cloud Config Server may not use Vault token sent by clients using a `X-CONFIG-TOKEN` header when making requests to Vault. The `SessionManager` persists the first token it retrieves and will continue to use that token even if client requests to the Spring Cloud Config Server include a `X-CONFIG-TOKEN` header with a different value.\n\nWeaknesses/vulnerabilities present:\nSpring Cloud Config Server's `SessionManager` implementations `LifecycleAwareSessionManager` and `SimpleSessionManager` (or any implementation that persists the Vault token) do not refresh the Vault token when a new one is sent via the `X-CONFIG-TOKEN` header.\n\nImpact of exploitation:\nThe Spring Cloud Config Server may use a stale Vault token, potentially leading to unauthorized access to sensitive configuration data stored in Vault if the original token's permissions have been changed or revoked.\n\nAttack vectors:\nAn attacker can send a `X-CONFIG-TOKEN` header with a malicious or expired Vault token to the Spring Cloud Config Server.\n\nRequired attacker capabilities/position:\nThe attacker needs to be able to send HTTP requests to the Spring Cloud Config Server and include a `X-CONFIG-TOKEN` header.\n\nMitigation or fix:\nUsers of affected versions should upgrade to the corresponding fixed version:\n*   4.2.x to 4.2.2\n*   4.1.x to 4.1.6\n*   4.0.x to 4.0.10\n*   3.1.x to 3.1.10\n\nIf you cannot upgrade, then you can either:\n1.  Remove Spring Vault from the classpath if it is not needed or\n2.  Implement your own `SessionManager` that does not persist the Vault token and provide a bean using that implementation in a `@Configuration` class.\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-613 | Insufficient Session Expiration | 0.75 | Base | Allowed | Primary CWE |\n| CWE-306 | Missing Authentication for Critical Function | 0.5 | Base | Allowed | Secondary Candidate |\n| CWE-287 | Improper Authentication | 0.3 | Class | Discouraged | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.7\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary relationship influencing the decision is the hierarchical relationship, where CWE-613 sits within broader authentication and session management categories. The \"CANPRECEDE\" relationship of CWE-613 to CWE-287 (Improper Authentication) also highlights that session expiration issues can lead to authentication vulnerabilities. However, the evidence points more directly to the session management problem.\n\n```mermaid\ngraph TD\n    cwe613[\"CWE-613: Insufficient Session Expiration\"]\n    cwe287[\"CWE-287: Improper Authentication\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    cwe672[\"CWE-672: Operation on a Resource that Should Not Be Performed\"]\n\n    cwe613 -->|CHILDOF| cwe672\n    cwe613 -->|CANPRECEDE| cwe287\n    cwe306 -->|CHILDOF| cwe287\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe613 primary\n    class cwe287,cwe306 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **root cause** of the `SessionManager` persisting the initial Vault token and failing to update it with subsequent tokens provided via the `X-CONFIG-TOKEN` header. This leads to a weakness where the Spring Cloud Config Server uses a potentially stale or incorrect Vault token. The impact is that the server might grant unauthorized access to sensitive configuration data, especially if the original token's permissions have been changed or revoked.\n\n## Summary of Analysis\nThe initial analysis and subsequent evaluation of the vulnerability description and provided CWE details lead to the conclusion that **CWE-613 Insufficient Session Expiration** is the most appropriate primary CWE. This determination is based on the evidence that the `SessionManager` implementations fail to properly handle and refresh Vault tokens, leading to the potential use of stale sessions.\n\nThe evidence includes:\n\n*   \"**Spring Cloud Config Server may not use Vault token sent by clients using a X-CONFIG-TOKEN header when making requests to Vault**\"\n*   \"the `SessionManager` persists the first token it retrieves and will continue to use that token even if client requests to the Spring Cloud Config Server include a `X-CONFIG-TOKEN` header with a different value.\"\n\nThe graph relationships support this, as CWE-613 can precede CWE-287 (Improper Authentication), suggesting that session expiration issues can lead to authentication problems. However, the **root cause** is more directly tied to the session management flaw.\n\nThe selected CWE is at the optimal level of specificity because it directly addresses the **root cause** of the vulnerability: the **insufficient expiration and refresh of Vault tokens** managed by the `SessionManager`.\n\n# Relevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-613: Insufficient Session Expiration\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nAccording to WASC, \"Insufficient Session Expiration is when a web site permits an attacker to reuse old session credentials or session IDs for authorization.\"\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-319: Cleartext Transmission of Sensitive Information\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-311: Missing Encryption of Sensitive Data\n**Abstraction Level**: Class\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product does not encrypt sensitive or critical information before storage or transmission.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-311 is high-level with more precise children available. It is a level-1 Class (i.e., a child of a Pillar).\n\n\n\n## CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute\n**Abstraction Level**: Variant\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe Secure attribute for sensitive cookies in HTTPS sessions is not set, which could cause the user agent to send those cookies in plaintext over an HTTP session.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-522: Insufficiently Protected Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-668: Exposure of Resource to Wrong Sphere\n**Abstraction Level**: Class\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-668 is high-level and is often misused as a catch-all when lower-level CWE IDs might be applicable. It is sometimes used for low-information vulnerability reports [REF-1287]. It is a level-1 Class (i.e., a child of a Pillar). It is not useful for trend analysis.\n\n\n\n## CWE-201: Insertion of Sensitive Information Into Sent Data\n**Abstraction Level**: Base\n**Similarity Score**: 1329.66\n**Source**: sparse\n\n**Description**:\nThe code transmits data to another actor, but a portion of the data includes sensitive information that should not be accessible to that actor.\n\n**Mapping Guidance**:\n- Usage: Allowed",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-613 | Insufficient Session Expiration | 0.75 | Base | Allowed | Primary CWE |\n| CWE-306 | Missing Authentication for Critical Function | 0.5 | Base | Allowed | Secondary Candidate |\n| CWE-287 | Improper Authentication | 0.3 | Class | Discouraged | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.7\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary relationship influencing the decision is the hierarchical relationship, where CWE-613 sits within broader authentication and session management categories. The \"CANPRECEDE\" relationship of CWE-613 to CWE-287 (Improper Authentication) also highlights that session expiration issues can lead to authentication vulnerabilities. However, the evidence points more directly to the session management problem.\n\n```mermaid\ngraph TD\n    cwe613[\"CWE-613: Insufficient Session Expiration\"]\n    cwe287[\"CWE-287: Improper Authentication\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    cwe672[\"CWE-672: Operation on a Resource that Should Not Be Performed\"]\n\n    cwe613 -->|CHILDOF| cwe672\n    cwe613 -->|CANPRECEDE| cwe287\n    cwe306 -->|CHILDOF| cwe287\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe613 primary\n    class cwe287,cwe306 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **root cause** of the `SessionManager` persisting the initial Vault token and failing to update it with subsequent tokens provided via the `X-CONFIG-TOKEN` header. This leads to a weakness where the Spring Cloud Config Server uses a potentially stale or incorrect Vault token. The impact is that the server might grant unauthorized access to sensitive configuration data, especially if the original token's permissions have been changed or revoked.\n\n## Summary of Analysis\nThe initial analysis and subsequent evaluation of the vulnerability description and provided CWE details lead to the conclusion that **CWE-613 Insufficient Session Expiration** is the most appropriate primary CWE. This determination is based on the evidence that the `SessionManager` implementations fail to properly handle and refresh Vault tokens, leading to the potential use of stale sessions.\n\nThe evidence includes:\n\n*   \"**Spring Cloud Config Server may not use Vault token sent by clients using a X-CONFIG-TOKEN header when making requests to Vault**\"\n*   \"the `SessionManager` persists the first token it retrieves and will continue to use that token even if client requests to the Spring Cloud Config Server include a `X-CONFIG-TOKEN` header with a different value.\"\n\nThe graph relationships support this, as CWE-613 can precede CWE-287 (Improper Authentication), suggesting that session expiration issues can lead to authentication problems. However, the **root cause** is more directly tied to the session management flaw.\n\nThe selected CWE is at the optimal level of specificity because it directly addresses the **root cause** of the vulnerability: the **insufficient expiration and refresh of Vault tokens** managed by the `SessionManager`.\n\n# Relevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-613: Insufficient Session Expiration\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nAccording to WASC, \"Insufficient Session Expiration is when a web site permits an attacker to reuse old session credentials or session IDs for authorization.\"\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-319: Cleartext Transmission of Sensitive Information\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-311: Missing Encryption of Sensitive Data\n**Abstraction Level**: Class\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product does not encrypt sensitive or critical information before storage or transmission.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-311 is high-level with more precise children available. It is a level-1 Class (i.e., a child of a Pillar).\n\n\n\n## CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute\n**Abstraction Level**: Variant\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe Secure attribute for sensitive cookies in HTTPS sessions is not set, which could cause the user agent to send those cookies in plaintext over an HTTP session.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-522: Insufficiently Protected Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-668: Exposure of Resource to Wrong Sphere\n**Abstraction Level**: Class\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-668 is high-level and is often misused as a catch-all when lower-level CWE IDs might be applicable. It is sometimes used for low-information vulnerability reports [REF-1287]. It is a level-1 Class (i.e., a child of a Pillar). It is not useful for trend analysis.\n\n\n\n## CWE-201: Insertion of Sensitive Information Into Sent Data\n**Abstraction Level**: Base\n**Similarity Score**: 1329.66\n**Source**: sparse\n\n**Description**:\nThe code transmits data to another actor, but a portion of the data includes sensitive information that should not be accessible to that actor.\n\n**Mapping Guidance**:\n- Usage: Allowed\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-672:**\n- 672 (Operation on a Resource after Expiration or Release) - ROOT\n\n\n**Chain starting from CWE-319:**\n- 319 (Cleartext Transmission of Sensitive Information) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 1368.3989830254095
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 1349.085914119496
    },
    {
      "metadata": {
        "doc_id": "1336",
        "name": "Improper Neutralization of Special Elements Used in a Template Engine",
        "source": "sparse"
      },
      "similarity": 1312.341802391301
    },
    {
      "metadata": {
        "doc_id": "287",
        "name": "Improper Authentication",
        "source": "sparse"
      },
      "similarity": 1311.5455459270624
    },
    {
      "metadata": {
        "doc_id": "94",
        "name": "Improper Control of Generation of Code ('Code Injection')",
        "source": "sparse"
      },
      "similarity": 1289.0502689805237
    },
    {
      "metadata": {
        "doc_id": "668",
        "name": "Exposure of Resource to Wrong Sphere",
        "source": "sparse"
      },
      "similarity": 1279.7056239720828
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 1276.636901582237
    },
    {
      "metadata": {
        "doc_id": "200",
        "name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "source": "sparse"
      },
      "similarity": 1251.87448904813
    },
    {
      "metadata": {
        "doc_id": "614",
        "name": "Sensitive Cookie in HTTPS Session Without 'Secure' Attribute",
        "type": "Variant",
        "original_content": "The Secure attribute for sensitive cookies in HTTPS sessions is not set, which could cause the user agent to send those cookies in plaintext over an HTTP session.",
        "keyphrase_source": "rootcause:Spring Cloud Config Server may not use Vault token sent by clients using a X-CONFIG-TOKEN header when making requests to Vault",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.44117380757020597
          }
        }
      },
      "similarity": 0.44117380757020597
    },
    {
      "doc_id": "613",
      "text": "According to WASC, \"Insufficient Session Expiration is when a web site permits an attacker to reuse old session credentials or session IDs for authorization.\"",
      "score": 0.4656940328816802,
      "metadata": {
        "doc_id": "613",
        "name": "Insufficient Session Expiration",
        "type": "Base",
        "extended_description": null,
        "alternate_terms": [],
        "original_content": "According to WASC, \"Insufficient Session Expiration is when a web site permits an attacker to reuse old session credentials or session IDs for authorization.\"",
        "relationships": [
          {
            "source_id": "613",
            "target_id": "352",
            "label": "REQUIREDBY",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "613",
            "target_id": "287",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "613",
            "target_id": "672",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "613",
            "target_id": "672",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "672",
            "target_id": "613",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "352",
            "target_id": "613",
            "label": "REQUIRES",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "287",
            "target_id": "613",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "source": "graph",
        "sources": [
          "vector",
          "graph"
        ],
        "vector_score": 0.4656940328816802,
        "graph_score": 4.329000000000001,
        "score_components": {
          "relationship_chain": 1.0,
          "explicit_mention": 1.0,
          "abstraction_path": 0.9,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "287",
                  "613",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "287"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "287",
                  "613",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "287"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "613",
                  "287",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "287"
            }
          }
        },
        "is_explicit": true,
        "abstraction_level": "base",
        "position": "before",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.439965502329347,
            "graph": 2.7836776131526726
          }
        }
      },
      "similarity": 2.7836776131526726
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-672",
      "CWE-319",
      "CWE-306",
      "CWE-201",
      "CWE-613",
      "CWE-614",
      "CWE-303",
      "CWE-311",
      "CWE-1391",
      "CWE-522",
      "CWE-668",
      "CWE-287",
      "CWE-497",
      "CWE-212"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}