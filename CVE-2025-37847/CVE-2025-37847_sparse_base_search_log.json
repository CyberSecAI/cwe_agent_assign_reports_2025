{
  "method": "sparse_base",
  "query": "In the Linux kernel, the following vulnerability has been resolved accel/ivpu Fix deadlock in ivpu_ms_cleanup() Fix deadlock in ivpu_ms_cleanup() by preventing runtime resume after file_priv->ms_lock is acquired. During a failure in runtime resume, a cold boot is executed, which calls ivpu_ms_cleanup_all(). This function calls ivpu_ms_cleanup() that acquires file_priv->ms_lock and causes the deadlock.",
  "keyphrases": {
    "base_query": "In the Linux kernel, the following vulnerability has been resolved accel/ivpu Fix deadlock in ivpu_ms_cleanup() Fix deadlock in ivpu_ms_cleanup() by preventing runtime resume after file_priv->ms_lock is acquired. During a failure in runtime resume, a cold boot is executed, which calls ivpu_ms_cleanup_all(). This function calls ivpu_ms_cleanup() that acquires file_priv->ms_lock and causes the deadlock."
  },
  "timestamp": "2025-07-12T13:24:56.383019",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "667",
      "name": "Improper Locking",
      "score": 110.04320385553531
    },
    {
      "doc_id": "833",
      "name": "Deadlock",
      "score": 104.7972004004257
    },
    {
      "doc_id": "663",
      "name": "Use of a Non-reentrant Function in a Concurrent Context",
      "score": 83.83392202461748
    },
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 78.50837040713579
    },
    {
      "doc_id": "61",
      "name": "UNIX Symbolic Link (Symlink) Following",
      "score": 78.35543947871798
    }
  ]
}