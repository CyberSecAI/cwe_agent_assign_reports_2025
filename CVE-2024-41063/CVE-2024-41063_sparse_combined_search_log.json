{
  "method": "sparse_combined",
  "query": "In the Linux kernel, the following vulnerability has been resolved Bluetooth hci_core cancel all works upon hci_unregister_dev() syzbot is reporting that calling hci_release_dev() from hci_error_reset() due to hci_dev_put() from hci_error_reset() can cause deadlock at destroy_workqueue(), for hci_error_reset() is called from hdev->req_workqueue which destroy_workqueue() needs to flush. We need to make sure that hdev->{rx_work,cmd_work,tx_work} which are queued into hdev->workqueue and hdev->{power_on,error_reset} which are queued into hdev->req_workqueue are no longer running by the moment destroy_workqueue(hdev->workqueue) destroy_workqueue(hdev->req_workqueue) are called from hci_release_dev(). Call cancel_work_sync() on these work items from hci_unregister_dev() as soon as hdev->list is removed from hci_dev_list.",
  "keyphrases": {
    "weakness": [
      "deadlock"
    ]
  },
  "timestamp": "2025-07-12T03:22:31.694310",
  "results_count": 12,
  "results_summary": [
    {
      "doc_id": "212",
      "name": "Improper Removal of Sensitive Information Before Storage or Transfer",
      "score": 372.29569620164995
    },
    {
      "doc_id": "833",
      "name": "Deadlock",
      "score": 370.27733402552917
    },
    {
      "doc_id": "667",
      "name": "Improper Locking",
      "score": 366.94006559851863
    },
    {
      "doc_id": "1333",
      "name": "Inefficient Regular Expression Complexity",
      "score": 363.18443163472045
    },
    {
      "doc_id": "863",
      "name": "Incorrect Authorization",
      "score": 363.12724817721664
    }
  ]
}