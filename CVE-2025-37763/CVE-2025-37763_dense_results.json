{
  "query": "In the Linux kernel, the following vulnerability has been resolved drm/imagination take paired job reference For paired jobs, have the fragment job take a reference on the geometry job, so that the geometry job cannot be freed until the fragment job has finished with it. The geometry job structure is accessed when the fragment job is being prepared by the GPU scheduler. Taking the reference prevents the geometry job being freed until the fragment job no longer requires it. Fixes a use after free bug detected by KASAN [ 124.256386] BUG KASAN slab-use-after-free in pvr_queue_prepare_job+0x108/0x868 [powervr] [ 124.264893] Read of size 1 at addr ffff0000084cb960 by task kworker/u164/63",
  "count": 20,
  "results": [
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "abstraction": "Class",
      "score": 0.4648413747443403,
      "original_score": 0.4648413747443403,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 0.46328962287450914,
      "original_score": 0.46328962287450914,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "abstraction": "Class",
      "score": 0.4586251069484649,
      "original_score": 0.4586251069484649,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "abstraction": "Variant",
      "score": 0.4529433463711029,
      "original_score": 0.4529433463711029,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "366",
      "name": "Race Condition within a Thread",
      "abstraction": "Base",
      "score": 0.4507965612663807,
      "original_score": 0.4507965612663807,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "763",
      "name": "Release of Invalid Pointer or Reference",
      "abstraction": "Base",
      "score": 0.44976981944573463,
      "original_score": 0.44976981944573463,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "415",
      "name": "Double Free",
      "abstraction": "Variant",
      "score": 0.44590134282000543,
      "original_score": 0.44590134282000543,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "911",
      "name": "Improper Update of Reference Count",
      "abstraction": "Base",
      "score": 0.4451004284922148,
      "original_score": 0.4451004284922148,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "abstraction": "Base",
      "score": 0.44472698102955316,
      "original_score": 0.44472698102955316,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "abstraction": "Base",
      "score": 0.4418814850707137,
      "original_score": 0.4418814850707137,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "abstraction": "Base",
      "score": 0.42987842664000675,
      "original_score": 0.42987842664000675,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1342",
      "name": "Information Exposure through Microarchitectural State after Transient Execution",
      "abstraction": "Base",
      "score": 0.4239238552902384,
      "original_score": 0.4239238552902384,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1260",
      "name": "Improper Handling of Overlap Between Protected Memory Ranges",
      "abstraction": "Base",
      "score": 0.4219342750763784,
      "original_score": 0.4219342750763784,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1421",
      "name": "Exposure of Sensitive Information in Shared Microarchitectural Structures during Transient Execution",
      "abstraction": "Base",
      "score": 0.42162459638987343,
      "original_score": 0.42162459638987343,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "822",
      "name": "Untrusted Pointer Dereference",
      "abstraction": "Base",
      "score": 0.4195316624980694,
      "original_score": 0.4195316624980694,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 0.4194236454491452,
      "original_score": 0.4194236454491452,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "126",
      "name": "Buffer Over-read",
      "abstraction": "Variant",
      "score": 0.4192500228160153,
      "original_score": 0.4192500228160153,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "129",
      "name": "Improper Validation of Array Index",
      "abstraction": "Variant",
      "score": 0.4175194234649289,
      "original_score": 0.4175194234649289,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "119",
      "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
      "abstraction": "Class",
      "score": 0.41631103564206196,
      "original_score": 0.41631103564206196,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "abstraction": "Variant",
      "score": 0.4161285929543099,
      "original_score": 0.4161285929543099,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 0.4161285929543099,
    "max": 0.4648413747443403,
    "mean": 0.4361700802642024,
    "median": 0.4358799558553602,
    "count": 20
  }
}