{
  "cve_id": "CVE-2025-3047",
  "description": "When running the AWS Serverless Application Model Command Line Interface (SAM CLI) build process with Docker and symlinks are included in the build files, the container environment allows a user to access privileged files on the host by leveraging the elevated permissions granted to the tool. A user could leverage the elevated permissions to access restricted files via symlinks and copy them to a more permissive location on the container. Users should upgrade to v1.133.0 or newer and ensure any forked or derivative code is patched to incorporate the new fixes.",
  "key_phrases": {
    "rootcause": "improper permissions configuration",
    "weakness": "",
    "impact": [
      "access privileged files on host",
      "access restricted files"
    ],
    "vector": "",
    "attacker": "user",
    "product": "",
    "version": "",
    "component": ""
  },
  "reference_content": "```text\n**Relevant Content from github.com_1d7e2898_20250624_201521.html:**\n\n*   **Root cause of vulnerability:** When running the AWS SAM CLI build process with Docker and symlinks are included in the build files, the container environment allows a user to access privileged files on the host by leveraging the elevated permissions granted to the tool. A user could leverage the elevated permissions to access restricted files via symlinks and copy them to a more permissive location on the container.\n*   **Weaknesses/vulnerabilities present:** Path Traversal\n*   **Impact of exploitation:** Allows file copy to build container. This issue is limited to the local workspace and does not affect AWS services, production environments or cross-account resources. The issue only affects local workspaces using AWS SAM CLI with container builds (--use-container), potentially allowing access to local files outside the build directory through the usage of symlinks.\n*   **Attack vectors:** The AWS SAM CLI build process with Docker and symlinks.\n*   **Required attacker capabilities/position:** Local workspace using AWS SAM CLI with container builds (--use-container)\n*   **Mitigation or fix:** The issue has been addressed in version 1.133.0. Users should upgrade and ensure any forked or derivative code is patched to incorporate the new fixes. To retain the previous behavior and allow symlinks to resolve on the host machine, please use the explicit '--mount-symlinks' parameter.\n*   **Affected version:** <= AWS SAM CLI v1.132.0\n*   **Fixed version:** v1.133.0\n*   **CVSS:** 6.5\n*   **CWE:** CWE-22\n\n**More detail than official CVE description:**  Yes, it provides more detailed information on the impact, attack vector, and mitigation, including the affected and patched versions.\n\n**Relevant Content from github.com_ab78402b_20250624_211343.html:**\n\n*   **Root cause of vulnerability:** When running the AWS SAM CLI build process with Docker and symlinks are included in the build files, the container environment allows a user to access privileged files on the host by leveraging the elevated permissions granted to the tool. A user could leverage the elevated permissions to access restricted files via symlinks and copy them to a more permissive location on the container.\n*   **Weaknesses/vulnerabilities present:** Path Traversal\n*   **Impact of exploitation:** Allows file copy to build container. This issue is limited to the local workspace and does not affect AWS services, production environments or cross-account resources. The issue only affects local workspaces using AWS SAM CLI with container builds (--use-container), potentially allowing access to local files outside the build directory through the usage of symlinks.\n*   **Attack vectors:** The AWS SAM CLI build process with Docker and symlinks.\n*   **Required attacker capabilities/position:** Local workspace using AWS SAM CLI with container builds (--use-container)\n*   **Mitigation or fix:** The issue has been addressed in version 1.133.0. Users should upgrade and ensure any forked or derivative code is patched to incorporate the new fixes. To retain the previous behavior and allow symlinks to resolve on the host machine, please use the explicit '-[-mount-symlinks](https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-cli-command-reference-sam-build.html#ref-sam-cli-build-options-mount-symlinks)' parameter.\n*   **Affected version:** <= AWS SAM CLI v1.132.0\n*   **Fixed version:** v1.133.0\n*   **CVSS:** 6.9\n*   **CWE:** CWE-22\n\n**More detail than official CVE description:**  Yes, it provides more detailed information on the impact, attack vector, and mitigation, including the affected and patched versions.\n\n**Relevant Content from aws.amazon.com_cd01cf53_20250624_201519.html:**\n\n*   **Root cause of vulnerability:** When running the AWS SAM CLI build process with Docker and symlinks are included in the build files, the container environment allows a user to access privileged files on the host by leveraging the elevated permissions granted to the tool.\n*   **Weaknesses/vulnerabilities present:** When running the AWS SAM CLI build process with Docker and symlinks are included in the build files, the container environment allows a user to access privileged files on the host by leveraging the elevated permissions granted to the tool. A user could leverage the elevated permissions to access restricted files via symlinks and copy them to a more permissive location on the container.\n*   **Impact of exploitation:** A user could leverage the elevated permissions to access restricted files via symlinks and copy them to a more permissive location on the container.\n*   **Attack vectors:** AWS SAM CLI build process with Docker and symlinks.\n*   **Required attacker capabilities/position:** Local workspace using AWS SAM CLI with container builds (--use-container)\n*   **Mitigation or fix:** CVE-2025-3047 has been addressed in version 1.133.0. Users should upgrade to the latest version and ensure any forked or derivative code is patched to incorporate the new fixes. To retain the previous behavior after upgrading and allow symlinks to resolve on the host machine, please use the explicit '[--mount-symlinks' parameter.\n*   **Affected version:** <= AWS SAM CLI v1.133.0\n*   **Fixed version:** v1.133.0\n\n**More detail than official CVE description:** Yes, it provides more detailed information on the impact, attack vector, and mitigation, including the affected and patched versions.\n\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-61 | UNIX Symbolic Link (Symlink) Following | 0.9 | Compound |  | Allowed |\n| CWE-732 | Incorrect Permission Assignment for Critical Resource | 0.7 | Class |  | Allowed-with-Review |\n| CWE-22 | Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') | 0.6 | Base |  | Allowed |\n\n- The Primary CWE should be first and noted as the Primary CWEs\n- The secondary candidate CWEs should be next and noted as secondary candidates.\n- The confidence is a confidence score 0 to 1 to rate your confidence in your assessment for that CWE.\n- The CWE Abstraction Level as one of these values: Base, Variant, Pillar, Class, Compound\n- The Mapping Notes Usage as one of these values: Allowed, Allowed-with-Review, Prohibited, Discouraged\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-61, which is a Compound CWE that describes the specific scenario of exploiting symbolic links. CWE-732 (Incorrect Permission Assignment) and CWE-22 (Path Traversal) are related but less specific. CWE-732 is a Class-level CWE that could apply, but it's more general than CWE-61. CWE-22 is a Base-level CWE, which describes the underlying path traversal issue, but it doesn't fully capture the symbolic link aspect.\n\n```mermaid\ngraph TD\n    cwe61[\"CWE-61: UNIX Symbolic Link (Symlink) Following\"]\n    cwe732[\"CWE-732: Incorrect Permission Assignment for Critical Resource\"]\n    cwe22[\"CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\"]\n    \n    cwe61 -->|PEEROF| cwe732\n    cwe61 -->|CANFOLLOW| cwe22\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe61 primary\n    class cwe732 secondary\n    class cwe22 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with an **improper permissions configuration** that allows the AWS SAM CLI to access privileged files on the host. An attacker leverages this configuration by using symlinks to access restricted files, leading to a path traversal. The attacker can then copy these files to a more permissive location within the container.\n\n## Summary of Analysis\nThe analysis is heavily based on the provided evidence, which explicitly mentions the use of symlinks and path traversal. The root cause is identified as an **improper permissions configuration**, leading to the ability to access restricted files. The choice of CWE-61 is based on its specificity to symbolic link exploitation, while CWE-732 and CWE-22 provide supporting context regarding permission issues and path traversal. The evidence includes excerpts from the CVE reference links, which describe the vulnerability and its mitigation. The relationships between the CWEs influenced the final selection, as CWE-61 is the most specific, while the others represent related aspects.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-59: Improper Link Resolution Before File Access ('Link Following')\n**Abstraction Level**: Base\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nThe product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-266: Incorrect Privilege Assignment\n**Abstraction Level**: Base\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nA product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-267: Privilege Defined With Unsafe Actions\n**Abstraction Level**: Base\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nA particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-668: Exposure of Resource to Wrong Sphere\n**Abstraction Level**: Class\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nThe product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-668 is high-level and is often misused as a catch-all when lower-level CWE IDs might be applicable. It is sometimes used for low-information vulnerability reports [REF-1287]. It is a level-1 Class (i.e., a child of a Pillar). It is not useful for trend analysis.\n\n## CWE-41: Improper Resolution of Path Equivalence\n**Abstraction Level**: Base\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nThe product is vulnerable to file system contents disclosure through path equivalence. Path equivalence involves the use of special characters in file and directory names. The associated manipulations are intended to generate multiple names for the same object.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-280: Improper Handling of Insufficient Permissions or Privileges \n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product does not handle or incorrectly handles when it has insufficient privileges to access resources or functionality as specified by their permissions. This may cause it to follow unexpected code paths that may leave the product in an invalid state.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-276: Incorrect Default Permissions\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nDuring installation, installed file permissions are set to allow anyone to modify those files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-73: External Control of File Name or Path\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product allows user input to control or influence paths or file names that are used in filesystem operations.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-23: Relative Path Traversal\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as \"..\" that can resolve to a location that is outside of that directory.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-59: Improper Link Resolution Before File Access ('Link Following')\n**Abstraction Level**: Base\n**Similarity Score**: 2811.31\n**Source**: sparse\n\n**Description**:\nThe product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.\n\n**Mapping Guidance**:",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-61 | UNIX Symbolic Link (Symlink) Following | 0.9 | Compound |  | Allowed |\n| CWE-732 | Incorrect Permission Assignment for Critical Resource | 0.7 | Class |  | Allowed-with-Review |\n| CWE-22 | Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') | 0.6 | Base |  | Allowed |\n\n- The Primary CWE should be first and noted as the Primary CWEs\n- The secondary candidate CWEs should be next and noted as secondary candidates.\n- The confidence is a confidence score 0 to 1 to rate your confidence in your assessment for that CWE.\n- The CWE Abstraction Level as one of these values: Base, Variant, Pillar, Class, Compound\n- The Mapping Notes Usage as one of these values: Allowed, Allowed-with-Review, Prohibited, Discouraged\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-61, which is a Compound CWE that describes the specific scenario of exploiting symbolic links. CWE-732 (Incorrect Permission Assignment) and CWE-22 (Path Traversal) are related but less specific. CWE-732 is a Class-level CWE that could apply, but it's more general than CWE-61. CWE-22 is a Base-level CWE, which describes the underlying path traversal issue, but it doesn't fully capture the symbolic link aspect.\n\n```mermaid\ngraph TD\n    cwe61[\"CWE-61: UNIX Symbolic Link (Symlink) Following\"]\n    cwe732[\"CWE-732: Incorrect Permission Assignment for Critical Resource\"]\n    cwe22[\"CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\"]\n    \n    cwe61 -->|PEEROF| cwe732\n    cwe61 -->|CANFOLLOW| cwe22\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe61 primary\n    class cwe732 secondary\n    class cwe22 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with an **improper permissions configuration** that allows the AWS SAM CLI to access privileged files on the host. An attacker leverages this configuration by using symlinks to access restricted files, leading to a path traversal. The attacker can then copy these files to a more permissive location within the container.\n\n## Summary of Analysis\nThe analysis is heavily based on the provided evidence, which explicitly mentions the use of symlinks and path traversal. The root cause is identified as an **improper permissions configuration**, leading to the ability to access restricted files. The choice of CWE-61 is based on its specificity to symbolic link exploitation, while CWE-732 and CWE-22 provide supporting context regarding permission issues and path traversal. The evidence includes excerpts from the CVE reference links, which describe the vulnerability and its mitigation. The relationships between the CWEs influenced the final selection, as CWE-61 is the most specific, while the others represent related aspects.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-59: Improper Link Resolution Before File Access ('Link Following')\n**Abstraction Level**: Base\n**Similarity Score**: 0.79\n**Source**: dense\n\n**Description**:\nThe product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-266: Incorrect Privilege Assignment\n**Abstraction Level**: Base\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nA product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-267: Privilege Defined With Unsafe Actions\n**Abstraction Level**: Base\n**Similarity Score**: 0.78\n**Source**: dense\n\n**Description**:\nA particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-668: Exposure of Resource to Wrong Sphere\n**Abstraction Level**: Class\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nThe product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-668 is high-level and is often misused as a catch-all when lower-level CWE IDs might be applicable. It is sometimes used for low-information vulnerability reports [REF-1287]. It is a level-1 Class (i.e., a child of a Pillar). It is not useful for trend analysis.\n\n## CWE-41: Improper Resolution of Path Equivalence\n**Abstraction Level**: Base\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nThe product is vulnerable to file system contents disclosure through path equivalence. Path equivalence involves the use of special characters in file and directory names. The associated manipulations are intended to generate multiple names for the same object.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-280: Improper Handling of Insufficient Permissions or Privileges \n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product does not handle or incorrectly handles when it has insufficient privileges to access resources or functionality as specified by their permissions. This may cause it to follow unexpected code paths that may leave the product in an invalid state.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-276: Incorrect Default Permissions\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nDuring installation, installed file permissions are set to allow anyone to modify those files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-73: External Control of File Name or Path\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product allows user input to control or influence paths or file names that are used in filesystem operations.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-23: Relative Path Traversal\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as \"..\" that can resolve to a location that is outside of that directory.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-59: Improper Link Resolution Before File Access ('Link Following')\n**Abstraction Level**: Base\n**Similarity Score**: 2811.31\n**Source**: sparse\n\n**Description**:\nThe product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.\n\n**Mapping Guidance**:\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-280:**\n- 280 (Improper Handling of Insufficient Permissions or Privileges ) - ROOT\n\n\n**Chain starting from CWE-732:**\n- 732 (Incorrect Permission Assignment for Critical Resource) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "732",
        "name": "Incorrect Permission Assignment for Critical Resource",
        "source": "sparse"
      },
      "similarity": 557.550207188535
    },
    {
      "metadata": {
        "doc_id": "59",
        "name": "Improper Link Resolution Before File Access ('Link Following')",
        "source": "sparse"
      },
      "similarity": 557.2241518992361
    },
    {
      "metadata": {
        "doc_id": "61",
        "name": "UNIX Symbolic Link (Symlink) Following",
        "source": "sparse"
      },
      "similarity": 554.6680161610623
    },
    {
      "metadata": {
        "doc_id": "277",
        "name": "Insecure Inherited Permissions",
        "source": "sparse"
      },
      "similarity": 528.4536186321474
    },
    {
      "metadata": {
        "doc_id": "269",
        "name": "Improper Privilege Management",
        "source": "sparse"
      },
      "similarity": 518.5328297522296
    },
    {
      "metadata": {
        "doc_id": "668",
        "name": "Exposure of Resource to Wrong Sphere",
        "source": "sparse"
      },
      "similarity": 512.9169233341236
    },
    {
      "metadata": {
        "doc_id": "367",
        "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
        "source": "sparse"
      },
      "similarity": 509.03696356634737
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 504.1504437888392
    },
    {
      "metadata": {
        "doc_id": "250",
        "name": "Execution with Unnecessary Privileges",
        "type": "Base",
        "original_content": "The product performs an operation at a privilege level that is higher than the minimum level required, which creates new weaknesses or amplifies the consequences of other weaknesses.",
        "keyphrase_source": "rootcause:improper permissions configuration",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "retriever_count": 3,
          "normalized_scores": {
            "dense": 0.4340825889207194,
            "sparse": 502.9280091018786,
            "graph": 1.6823119302320824
          }
        }
      },
      "similarity": 0.4340825889207194
    },
    {
      "doc_id": "363",
      "text": "CWE-363: Race Condition Enabling Link Following",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "363",
        "name": "Race Condition Enabling Link Following",
        "type": "base",
        "original_content": "CWE-363: Race Condition Enabling Link Following",
        "relationships": [
          {
            "source_id": "363",
            "target_id": "59",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "363",
            "target_id": "367",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "59",
            "target_id": "363",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "367",
            "target_id": "363",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "59",
                  "363",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "59"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "59",
                  "363",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "59"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "363",
                  "59",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "59"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-280",
      "CWE-732",
      "CWE-22",
      "CWE-59",
      "CWE-212",
      "CWE-73",
      "CWE-668",
      "CWE-267",
      "CWE-266",
      "CWE-276",
      "CWE-23",
      "CWE-61",
      "CWE-41"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}