{
  "cve_id": "CVE-2024-7441",
  "description": "** UNSUPPORTED WHEN ASSIGNED ** A vulnerability was found in Vivotek SD9364 VVTK-0103f. It has been declared as critical. This vulnerability affects the function read of the component httpd. The manipulation of the argument Content-Length leads to **stack-based buffer overflow**. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-273526 is the identifier assigned to this vulnerability. NOTE This vulnerability only affects products that are no longer supported by the maintainer. NOTE Vendor was contacted early and confirmed that the affected release tree is end-of-life.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "stack-based buffer overflow",
    "impact": "",
    "vector": "manipulation of Content-Length argument",
    "attacker": "",
    "product": "Vivotek SD9364",
    "version": "VVTK-0103f",
    "component": "httpd"
  },
  "reference_content": "```\n{\n  \"Root cause of vulnerability\": \"The `httpd` service in vivotek SD9364 does not validate the `Content-Length` field of HTTP requests, leading to a stack buffer overflow.\",\n  \"Weaknesses/vulnerabilities present\": \"Stack buffer overflow due to lack of length check on the `Content-Length` field in HTTP requests.\",\n  \"Impact of exploitation\": \"An attacker can write arbitrary data to the stack, potentially leading to arbitrary code execution.\",\n  \"Attack vectors\": \"The vulnerability is exploited through sending a crafted HTTP request with an overly long `Content-Length` field.\",\n  \"Required attacker capabilities/position\": \"The attacker needs to be able to send HTTP requests to the vulnerable service.\"\n}\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-121 | Stack-based Buffer Overflow | 1.0 | Variant | Primary | Allowed |\n| CWE-1284 | Improper Validation of Specified Quantity in Input | 0.7 | Base | Secondary | Allowed |\n  - The Primary CWE should be first and noted as the Primary CWEs\n  - The secondary candidate CWEs should be next and noted as secondary candidates.\n  - The confidence is a confidence score 0 to 1 to rate your confidence in your overall assessment for that CWE.\n  - The CWE Abstraction Level as one of these values: Base, Variant, Pillar, Class, Compound\n  - The Mapping Notes Usage as one of these values: Allowed, Allowed-with-Review, Prohibited, Discouraged\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is a **stack-based buffer overflow** (CWE-121), which is a variant of the more general **improper restriction of operations within the bounds of a memory buffer** (CWE-119). The overflow occurs because the `Content-Length` field is not validated, which is an instance of **improper validation of specified quantity in input** (CWE-1284).\n\n```mermaid\ngraph TD\n    cwe121[\"CWE-121: Stack-based Buffer Overflow\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\"]\n    cwe1284[\"CWE-1284: Improper Validation of Specified Quantity in Input\"]\n    \n    cwe121 -->|CHILDOF| cwe119\n    cwe1284 -->|CANPRECEDE| cwe121\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe121 primary\n    class cwe119,cwe1284 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **improper validation of specified quantity in input** (CWE-1284) of the `Content-Length` argument. This leads to a **stack-based buffer overflow** (CWE-121) when the `read` function attempts to read more data than the allocated buffer size. The impact is that an attacker can write arbitrary data to the stack, potentially leading to arbitrary code execution.\n\n## Summary of Analysis\nThe vulnerability is a classic **stack-based buffer overflow** due to a missing check on the `Content-Length` field in HTTP requests. The primary CWE is therefore CWE-121. This is supported by the vulnerability description which states the **weakness** is a \"**stack-based buffer overflow**\" and confirmed by the \"CVE Reference Links Content Summary\" section which states \"**Weaknesses/vulnerabilities present**: Stack buffer overflow due to lack of length check on the `Content-Length` field in HTTP requests.\"\n\nCWE-1284 is included because the root cause is the **improper validation** of the `Content-Length` which is a \"specified quantity in input\". This is included as a secondary CWE.\n\nOther CWEs considered from the Retriever Results include:\n\n*   CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer - This is a parent of CWE-121, so CWE-121 is more specific and preferred.\n*   CWE-190: Integer Overflow or Wraparound - While integer overflows can sometimes lead to buffer overflows, the root cause here is the missing validation of the content length, making CWE-1284 more relevant.\n*   CWE-125: Out-of-bounds Read - This is similar to CWE-787, but the vulnerability is specifically an out-of-bounds write (buffer overflow).\n\nRelevant CWE Information:\n* CWE-121 Description: When writing data to a buffer, the code does not properly check the length of the input (or the result of an operation) and can write beyond the end of the buffer.\n* CWE-1284 Description: The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-121 | Stack-based Buffer Overflow | 1.0 | Variant | Primary | Allowed |\n| CWE-1284 | Improper Validation of Specified Quantity in Input | 0.7 | Base | Secondary | Allowed |\n  - The Primary CWE should be first and noted as the Primary CWEs\n  - The secondary candidate CWEs should be next and noted as secondary candidates.\n  - The confidence is a confidence score 0 to 1 to rate your confidence in your overall assessment for that CWE.\n  - The CWE Abstraction Level as one of these values: Base, Variant, Pillar, Class, Compound\n  - The Mapping Notes Usage as one of these values: Allowed, Allowed-with-Review, Prohibited, Discouraged\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is a **stack-based buffer overflow** (CWE-121), which is a variant of the more general **improper restriction of operations within the bounds of a memory buffer** (CWE-119). The overflow occurs because the `Content-Length` field is not validated, which is an instance of **improper validation of specified quantity in input** (CWE-1284).\n\n```mermaid\ngraph TD\n    cwe121[\"CWE-121: Stack-based Buffer Overflow\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\"]\n    cwe1284[\"CWE-1284: Improper Validation of Specified Quantity in Input\"]\n    \n    cwe121 -->|CHILDOF| cwe119\n    cwe1284 -->|CANPRECEDE| cwe121\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe121 primary\n    class cwe119,cwe1284 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **improper validation of specified quantity in input** (CWE-1284) of the `Content-Length` argument. This leads to a **stack-based buffer overflow** (CWE-121) when the `read` function attempts to read more data than the allocated buffer size. The impact is that an attacker can write arbitrary data to the stack, potentially leading to arbitrary code execution.\n\n## Summary of Analysis\nThe vulnerability is a classic **stack-based buffer overflow** due to a missing check on the `Content-Length` field in HTTP requests. The primary CWE is therefore CWE-121. This is supported by the vulnerability description which states the **weakness** is a \"**stack-based buffer overflow**\" and confirmed by the \"CVE Reference Links Content Summary\" section which states \"**Weaknesses/vulnerabilities present**: Stack buffer overflow due to lack of length check on the `Content-Length` field in HTTP requests.\"\n\nCWE-1284 is included because the root cause is the **improper validation** of the `Content-Length` which is a \"specified quantity in input\". This is included as a secondary CWE.\n\nOther CWEs considered from the Retriever Results include:\n\n*   CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer - This is a parent of CWE-121, so CWE-121 is more specific and preferred.\n*   CWE-190: Integer Overflow or Wraparound - While integer overflows can sometimes lead to buffer overflows, the root cause here is the missing validation of the content length, making CWE-1284 more relevant.\n*   CWE-125: Out-of-bounds Read - This is similar to CWE-787, but the vulnerability is specifically an out-of-bounds write (buffer overflow).\n\nRelevant CWE Information:\n* CWE-121 Description: When writing data to a buffer, the code does not properly check the length of the input (or the result of an operation) and can write beyond the end of the buffer.\n* CWE-1284 Description: The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-121:**\n- 121 (Stack-based Buffer Overflow) - ROOT\n\n\n**Chain starting from CWE-1284:**\n- 1284 (Improper Validation of Specified Quantity in Input) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Buffer Overflow",
        "match_reason": "term_in_phrase_whole_phrase"
      },
      "similarity": 800.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "190",
        "name": "Integer Overflow or Wraparound",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Overflow",
        "match_reason": "term_in_phrase_whole_phrase"
      },
      "similarity": 800.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 594.9023223824305
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 580.3341415501033
    },
    {
      "metadata": {
        "doc_id": "125",
        "name": "Out-of-bounds Read",
        "source": "sparse"
      },
      "similarity": 571.0792200553319
    },
    {
      "metadata": {
        "doc_id": "121",
        "name": "Stack-based Buffer Overflow",
        "source": "sparse"
      },
      "similarity": 545.1000464726611
    },
    {
      "metadata": {
        "doc_id": "674",
        "name": "Uncontrolled Recursion",
        "source": "sparse"
      },
      "similarity": 539.7504987755568
    },
    {
      "metadata": {
        "doc_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "source": "sparse"
      },
      "similarity": 521.6306414503974
    },
    {
      "metadata": {
        "doc_id": "401",
        "name": "Missing Release of Memory after Effective Lifetime",
        "type": "Variant",
        "original_content": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.",
        "keyphrase_source": "weakness:stack-based buffer overflow",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.6269957247938244
          }
        }
      },
      "similarity": 0.6269957247938244
    },
    {
      "doc_id": "128",
      "text": "CWE-128: Wrap-around Error",
      "score": 2.9120000000000004,
      "metadata": {
        "doc_id": "128",
        "name": "Wrap-around Error",
        "type": "base",
        "original_content": "CWE-128: Wrap-around Error",
        "relationships": [
          {
            "source_id": "128",
            "target_id": "190",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "128",
            "target_id": "119",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "128",
            "target_id": "682",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "682",
            "target_id": "128",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "119",
            "target_id": "128",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0,
          "peer_group": 0.9
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward",
            "peer_relationship"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "119",
                  "128",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "119"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "119",
                  "128",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "119"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "128",
                  "119",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "119"
            },
            "peer_relationship": {
              "path": [
                [
                  "128",
                  "190",
                  "PEEROF"
                ]
              ],
              "score": 0.9,
              "type": "peer_relationship",
              "source": "190"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.9120000000000004
          }
        }
      },
      "similarity": 2.9120000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-121",
      "CWE-1284",
      "CWE-125",
      "CWE-787",
      "CWE-190",
      "CWE-119"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}