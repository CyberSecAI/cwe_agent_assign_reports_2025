{
  "cve_id": "CVE-2024-4941",
  "description": "A ****local file inclusion** vulnerability** exists in the JSON component of gradio-app/gradio version 4.25. The vulnerability arises from **improper input validation** in the `postprocess()` function within `gradio/components/json_component.py`, where a user-controlled string is parsed as JSON. If the parsed JSON object contains a `path` key, the specified file is moved to a temporary directory, making it possible to retrieve it later via the `/file=..` endpoint. This issue is due to the `processing_utils.move_files_to_cache()` function traversing any object passed to it, looking for a dictionary with a `path` key, and then copying the specified file to a temporary directory. The vulnerability can be exploited by an attacker to read files on the remote system, posing a significant security risk.",
  "key_phrases": {
    "rootcause": [
      "improper input validation",
      "local file inclusion vulnerability"
    ],
    "weakness": "local file inclusion",
    "impact": "read files on the remote system",
    "vector": "",
    "attacker": "",
    "product": "gradio-app/gradio",
    "version": "4.25",
    "component": "gradio/components/json_component.py"
  },
  "reference_content": "```\n{\n  \"vulnerability_details\": {\n    \"root_cause\": \"The `flag` method in `gradio/components/base.py` was not handling `JsonData` objects properly when creating the payload string for flagging. This could cause errors when components outputted `JsonData` objects that included file paths not in the cache when the `flag` method was called.\",\n    \"weaknesses\": [\n      \"Inconsistent handling of `JsonData` type within the `flag` method.\",\n      \"Lack of validation for file paths within JSON data when flagging.\"\n    ],\n    \"impact\": \"The `flag` method would throw errors when the payload was a `JsonData` object containing a path not in the cache, preventing the proper flagging of data.\",\n     \"attack_vectors\": \"Exploitation is not direct, the vulnerability was in the handling of JSON data during flagging; any user or application triggering the `flag` method on a component outputting  `JsonData` with an uncache path would cause the issue.\"\n   ,\n    \"required_capabilities\": \"An attacker would need to cause a `JsonData` object containing file paths not within the cache to be output by a Gradio component and then trigger the `flag` method on that component output, which is typically caused by user interaction within the Gradio application itself.\"\n  },\n  \"relevant_files\": [\n    {\n      \"file_path\": \"gradio/components/base.py\",\n      \"change_details\": \"The `flag` method was updated to correctly handle `JsonData` objects by extracting the underlying dictionary through `model_dump()` before further processing. This prevents type errors and enables proper serialization to JSON. Added explicit `model_dump()` call for JsonData to allow proper json dump.\",\n       \"added_lines\":[302, 303]\n    },\n    {\n      \"file_path\": \"gradio/components/json_component.py\",\n      \"change_details\": \"The `postprocess` method was modified to return `JsonData` objects instead of simple dictionaries or lists, providing a consistent output type. Modified postprocess to return JsonData objects. Use `orjson.OPT_PASSTHROUGH_DATETIME` option to prevent datetime from being converted to string to be backward compatible.\",\n        \"added_lines\": [89, 90, 91, 92, 93, 94, 95, 96, 97] ,\n       \"removed_lines\": [ 87, 88, 89,90, 91, 92]\n     },\n    {\n      \"file_path\": \"gradio/data_classes.py\",\n       \"change_details\": \"Added `JsonData` class to represent JSON data and allow pydantic to validate JSON data types and be returned from components.\",\n        \"added_lines\":[163,164,165,166,167,168, 169]\n    },\n    {\n      \"file_path\": \"gradio/helpers.py\",\n      \"change_details\": \"Added check for files in cache in `special_args` helper function when handling event data.\",\n        \"added_lines\": [ 937 ]\n     },\n     {\n       \"file_path\": \"gradio/processing_utils.py\",\n      \"change_details\": \"Added function `check_all_files_in_cache` to check if all paths are in the cache when handling `JsonData` objects, also moved this validation check into the `move_files_to_cache` method. Added file path checking logic for data within `JsonData` objects.\",\n       \"added_lines\": [344, 345,346, 347, 348,349, 350, 351,352, 353, 354]\n     },\n     {\n      \"file_path\": \"test/components/test_json.py\",\n      \"change_details\":\"Added additional assertion in `test_postprocess_returns_json_serializable_value` to check for `model_dump()` method on `JsonData` objects.\",\n        \"added_lines\": [99, 100, 101]\n    },\n    {\n       \"file_path\": \"test/test_helpers.py\",\n       \"change_details\":\"Added test case `test_check_event_data_in_cache` to verify that the cache check is correctly being called from the `special_args` helper when files are present.\",\n       \"added_lines\": [890,891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903]\n     },\n     {\n      \"file_path\":\"test/test_processing_utils.py\",\n      \"change_details\": \"Added test case `test_json_data_not_moved_to_cache` to test that `JsonData` object do not get cached.\",\n       \"added_lines\": [ 385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405 ]\n     }\n  ]\n}\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID    | CWE Name                                                                  | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :---------- | :------------------------------------------------------------------------ | :--------- | :---------------------- | :------------------------------ | :------------------------------ |\n| CWE-73      | External Control of File Name or Path                                     | 0.9        | Base                    | Primary                         | Allowed                         |\n| CWE-22      | Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') | 0.7       | Base                    | Secondary                       | Allowed                         |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-73, which indicates that the vulnerability stems from allowing user input to control file names or paths. CWE-22 is a related CWE because path traversal could be a way to exploit the external control of the file name or path. However, the description does not explicitly state path traversal is occurring, thus CWE-22 is a secondary mapping. Both CWEs are at the Base level of abstraction, which is preferred.\n\n```mermaid\ngraph TD\n    cwe73[\"CWE-73: External Control of File Name or Path\"]\n    cwe22[\"CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\"]\n\n    cwe22 -->|CANFOLLOW| cwe73\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe73 primary\n    class cwe22 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **improper input validation**, which leads to **external control of the file name or path**, resulting in a **local file inclusion vulnerability** where an attacker can **read files on the remote system**.\n\n## Summary of Analysis\nThe analysis is based on the provided evidence, particularly the **Vulnerability Description Key Phrases**. The **root cause** is identified as \"**improper input validation**\" and \"**local file inclusion vulnerability**\", which allows external control of file paths.\n\nThe vulnerability description states: \"A **local file inclusion vulnerability** exists in the JSON component of gradio-app/gradio version 4.25. The vulnerability arises from **improper input validation** in the `postprocess()` function within `gradio/components/json_component.py`, where a user-controlled string is parsed as JSON. If the parsed JSON object contains a `path` key, the specified file is moved to a temporary directory, making it possible to retrieve it later via the `/file=..` endpoint.\"\n\nGiven that the user-controlled string is parsed as JSON and if it contains a `path` key, the file is moved to a temporary directory, making it possible to retrieve it later. This aligns with CWE-73: External Control of File Name or Path, because user-controlled input directly influences the file path. While path traversal (CWE-22) is possible, it is not explicitly mentioned. Therefore, CWE-73 is the primary CWE and CWE-22 is secondary.\n\nThe selected CWEs are at the optimal level of specificity as they are Base-level CWEs that accurately represent the weakness described in the vulnerability description.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-73: External Control of File Name or Path\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product allows user input to control or influence paths or file names that are used in filesystem operations.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\n**Abstraction Level**: Base\n**Similarity Score**: 4200.60\n**Source**: sparse\n\n**Description**:\nThe product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
  "analysis_with_relationships": "# Summary\n| CWE ID    | CWE Name                                                                  | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :---------- | :------------------------------------------------------------------------ | :--------- | :---------------------- | :------------------------------ | :------------------------------ |\n| CWE-73      | External Control of File Name or Path                                     | 0.9        | Base                    | Primary                         | Allowed                         |\n| CWE-22      | Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') | 0.7       | Base                    | Secondary                       | Allowed                         |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-73, which indicates that the vulnerability stems from allowing user input to control file names or paths. CWE-22 is a related CWE because path traversal could be a way to exploit the external control of the file name or path. However, the description does not explicitly state path traversal is occurring, thus CWE-22 is a secondary mapping. Both CWEs are at the Base level of abstraction, which is preferred.\n\n```mermaid\ngraph TD\n    cwe73[\"CWE-73: External Control of File Name or Path\"]\n    cwe22[\"CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\"]\n\n    cwe22 -->|CANFOLLOW| cwe73\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe73 primary\n    class cwe22 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **improper input validation**, which leads to **external control of the file name or path**, resulting in a **local file inclusion vulnerability** where an attacker can **read files on the remote system**.\n\n## Summary of Analysis\nThe analysis is based on the provided evidence, particularly the **Vulnerability Description Key Phrases**. The **root cause** is identified as \"**improper input validation**\" and \"**local file inclusion vulnerability**\", which allows external control of file paths.\n\nThe vulnerability description states: \"A **local file inclusion vulnerability** exists in the JSON component of gradio-app/gradio version 4.25. The vulnerability arises from **improper input validation** in the `postprocess()` function within `gradio/components/json_component.py`, where a user-controlled string is parsed as JSON. If the parsed JSON object contains a `path` key, the specified file is moved to a temporary directory, making it possible to retrieve it later via the `/file=..` endpoint.\"\n\nGiven that the user-controlled string is parsed as JSON and if it contains a `path` key, the file is moved to a temporary directory, making it possible to retrieve it later. This aligns with CWE-73: External Control of File Name or Path, because user-controlled input directly influences the file path. While path traversal (CWE-22) is possible, it is not explicitly mentioned. Therefore, CWE-73 is the primary CWE and CWE-22 is secondary.\n\nThe selected CWEs are at the optimal level of specificity as they are Base-level CWEs that accurately represent the weakness described in the vulnerability description.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-73: External Control of File Name or Path\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product allows user input to control or influence paths or file names that are used in filesystem operations.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\n**Abstraction Level**: Base\n**Similarity Score**: 4200.60\n**Source**: sparse\n\n**Description**:\nThe product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-73:**\n- 73 (External Control of File Name or Path) - ROOT\n\n\n**Chain starting from CWE-22:**\n- 22 (Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "23",
        "name": "Relative Path Traversal",
        "source": "sparse",
        "original_content": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as \"..\" that can resolve to a location that is outside of that directory.",
        "keyphrase_sources": [
          {
            "id": "rootcause:improper input validation",
            "keyphrase": "improper input validation",
            "type": "rootcause"
          },
          {
            "id": "rootcause:local file inclusion vulnerability",
            "keyphrase": "local file inclusion vulnerability",
            "type": "rootcause"
          },
          {
            "id": "weakness:local file inclusion",
            "keyphrase": "local file inclusion",
            "type": "weakness"
          },
          {
            "id": "impact:read files on the remote system",
            "keyphrase": "read files on the remote system",
            "type": "impact"
          },
          {
            "id": "product:gradio-app/gradio",
            "keyphrase": "gradio-app/gradio",
            "type": "product"
          },
          {
            "id": "version:4.25",
            "keyphrase": "4.25",
            "type": "version"
          },
          {
            "id": "component:gradio/components/json_component.py",
            "keyphrase": "gradio/components/json_component.py",
            "type": "component"
          }
        ]
      },
      "similarity": 684.219112760842
    },
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "sparse",
        "original_content": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
        "keyphrase_sources": [
          {
            "id": "rootcause:improper input validation",
            "keyphrase": "improper input validation",
            "type": "rootcause"
          },
          {
            "id": "rootcause:local file inclusion vulnerability",
            "keyphrase": "local file inclusion vulnerability",
            "type": "rootcause"
          },
          {
            "id": "weakness:local file inclusion",
            "keyphrase": "local file inclusion",
            "type": "weakness"
          },
          {
            "id": "impact:read files on the remote system",
            "keyphrase": "read files on the remote system",
            "type": "impact"
          },
          {
            "id": "product:gradio-app/gradio",
            "keyphrase": "gradio-app/gradio",
            "type": "product"
          },
          {
            "id": "version:4.25",
            "keyphrase": "4.25",
            "type": "version"
          },
          {
            "id": "component:gradio/components/json_component.py",
            "keyphrase": "gradio/components/json_component.py",
            "type": "component"
          }
        ]
      },
      "similarity": 682.9185958266902
    },
    {
      "metadata": {
        "doc_id": "88",
        "name": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
        "source": "sparse",
        "original_content": "The product constructs a string for a command to be executed by a separate component\nin another control sphere, but it does not properly delimit the\nintended arguments, options, or switches within that command string.",
        "keyphrase_sources": [
          {
            "id": "rootcause:improper input validation",
            "keyphrase": "improper input validation",
            "type": "rootcause"
          },
          {
            "id": "rootcause:local file inclusion vulnerability",
            "keyphrase": "local file inclusion vulnerability",
            "type": "rootcause"
          },
          {
            "id": "weakness:local file inclusion",
            "keyphrase": "local file inclusion",
            "type": "weakness"
          },
          {
            "id": "impact:read files on the remote system",
            "keyphrase": "read files on the remote system",
            "type": "impact"
          },
          {
            "id": "product:gradio-app/gradio",
            "keyphrase": "gradio-app/gradio",
            "type": "product"
          },
          {
            "id": "version:4.25",
            "keyphrase": "4.25",
            "type": "version"
          },
          {
            "id": "component:gradio/components/json_component.py",
            "keyphrase": "gradio/components/json_component.py",
            "type": "component"
          }
        ]
      },
      "similarity": 681.1868996933754
    },
    {
      "metadata": {
        "doc_id": "73",
        "name": "External Control of File Name or Path",
        "source": "sparse",
        "original_content": "The product allows user input to control or influence paths or file names that are used in filesystem operations.",
        "keyphrase_sources": [
          {
            "id": "rootcause:local file inclusion vulnerability",
            "keyphrase": "local file inclusion vulnerability",
            "type": "rootcause"
          },
          {
            "id": "weakness:local file inclusion",
            "keyphrase": "local file inclusion",
            "type": "weakness"
          }
        ]
      },
      "similarity": 678.2742271738974
    },
    {
      "metadata": {
        "doc_id": "59",
        "name": "Improper Link Resolution Before File Access ('Link Following')",
        "source": "sparse",
        "original_content": "The product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.",
        "keyphrase_sources": [
          {
            "id": "rootcause:improper input validation",
            "keyphrase": "improper input validation",
            "type": "rootcause"
          },
          {
            "id": "rootcause:local file inclusion vulnerability",
            "keyphrase": "local file inclusion vulnerability",
            "type": "rootcause"
          },
          {
            "id": "weakness:local file inclusion",
            "keyphrase": "local file inclusion",
            "type": "weakness"
          },
          {
            "id": "impact:read files on the remote system",
            "keyphrase": "read files on the remote system",
            "type": "impact"
          },
          {
            "id": "product:gradio-app/gradio",
            "keyphrase": "gradio-app/gradio",
            "type": "product"
          },
          {
            "id": "version:4.25",
            "keyphrase": "4.25",
            "type": "version"
          },
          {
            "id": "component:gradio/components/json_component.py",
            "keyphrase": "gradio/components/json_component.py",
            "type": "component"
          }
        ]
      },
      "similarity": 676.3161610479734
    },
    {
      "metadata": {
        "doc_id": "639",
        "name": "Authorization Bypass Through User-Controlled Key",
        "source": "sparse",
        "original_content": "The system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.",
        "keyphrase_sources": [
          {
            "id": "rootcause:improper input validation",
            "keyphrase": "improper input validation",
            "type": "rootcause"
          },
          {
            "id": "impact:read files on the remote system",
            "keyphrase": "read files on the remote system",
            "type": "impact"
          },
          {
            "id": "product:gradio-app/gradio",
            "keyphrase": "gradio-app/gradio",
            "type": "product"
          },
          {
            "id": "version:4.25",
            "keyphrase": "4.25",
            "type": "version"
          }
        ]
      },
      "similarity": 663.5302702872737
    },
    {
      "metadata": {
        "doc_id": "93",
        "name": "Improper Neutralization of CRLF Sequences ('CRLF Injection')",
        "source": "sparse",
        "original_content": "The product uses CRLF (carriage return line feeds) as a special element, e.g. to separate lines or records, but it does not neutralize or incorrectly neutralizes CRLF sequences from inputs.",
        "keyphrase_sources": [
          {
            "id": "component:gradio/components/json_component.py",
            "keyphrase": "gradio/components/json_component.py",
            "type": "component"
          }
        ]
      },
      "similarity": 222.42926838702013
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-73",
      "CWE-22"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "23": [
      {
        "id": "rootcause:improper input validation",
        "keyphrase": "improper input validation",
        "type": "rootcause"
      },
      {
        "id": "rootcause:local file inclusion vulnerability",
        "keyphrase": "local file inclusion vulnerability",
        "type": "rootcause"
      },
      {
        "id": "weakness:local file inclusion",
        "keyphrase": "local file inclusion",
        "type": "weakness"
      },
      {
        "id": "impact:read files on the remote system",
        "keyphrase": "read files on the remote system",
        "type": "impact"
      },
      {
        "id": "product:gradio-app/gradio",
        "keyphrase": "gradio-app/gradio",
        "type": "product"
      },
      {
        "id": "version:4.25",
        "keyphrase": "4.25",
        "type": "version"
      },
      {
        "id": "component:gradio/components/json_component.py",
        "keyphrase": "gradio/components/json_component.py",
        "type": "component"
      }
    ],
    "22": [
      {
        "id": "rootcause:improper input validation",
        "keyphrase": "improper input validation",
        "type": "rootcause"
      },
      {
        "id": "rootcause:local file inclusion vulnerability",
        "keyphrase": "local file inclusion vulnerability",
        "type": "rootcause"
      },
      {
        "id": "weakness:local file inclusion",
        "keyphrase": "local file inclusion",
        "type": "weakness"
      },
      {
        "id": "impact:read files on the remote system",
        "keyphrase": "read files on the remote system",
        "type": "impact"
      },
      {
        "id": "product:gradio-app/gradio",
        "keyphrase": "gradio-app/gradio",
        "type": "product"
      },
      {
        "id": "version:4.25",
        "keyphrase": "4.25",
        "type": "version"
      },
      {
        "id": "component:gradio/components/json_component.py",
        "keyphrase": "gradio/components/json_component.py",
        "type": "component"
      }
    ],
    "88": [
      {
        "id": "rootcause:improper input validation",
        "keyphrase": "improper input validation",
        "type": "rootcause"
      },
      {
        "id": "rootcause:local file inclusion vulnerability",
        "keyphrase": "local file inclusion vulnerability",
        "type": "rootcause"
      },
      {
        "id": "weakness:local file inclusion",
        "keyphrase": "local file inclusion",
        "type": "weakness"
      },
      {
        "id": "impact:read files on the remote system",
        "keyphrase": "read files on the remote system",
        "type": "impact"
      },
      {
        "id": "product:gradio-app/gradio",
        "keyphrase": "gradio-app/gradio",
        "type": "product"
      },
      {
        "id": "version:4.25",
        "keyphrase": "4.25",
        "type": "version"
      },
      {
        "id": "component:gradio/components/json_component.py",
        "keyphrase": "gradio/components/json_component.py",
        "type": "component"
      }
    ],
    "59": [
      {
        "id": "rootcause:improper input validation",
        "keyphrase": "improper input validation",
        "type": "rootcause"
      },
      {
        "id": "rootcause:local file inclusion vulnerability",
        "keyphrase": "local file inclusion vulnerability",
        "type": "rootcause"
      },
      {
        "id": "weakness:local file inclusion",
        "keyphrase": "local file inclusion",
        "type": "weakness"
      },
      {
        "id": "impact:read files on the remote system",
        "keyphrase": "read files on the remote system",
        "type": "impact"
      },
      {
        "id": "product:gradio-app/gradio",
        "keyphrase": "gradio-app/gradio",
        "type": "product"
      },
      {
        "id": "version:4.25",
        "keyphrase": "4.25",
        "type": "version"
      },
      {
        "id": "component:gradio/components/json_component.py",
        "keyphrase": "gradio/components/json_component.py",
        "type": "component"
      }
    ],
    "639": [
      {
        "id": "rootcause:improper input validation",
        "keyphrase": "improper input validation",
        "type": "rootcause"
      },
      {
        "id": "impact:read files on the remote system",
        "keyphrase": "read files on the remote system",
        "type": "impact"
      },
      {
        "id": "product:gradio-app/gradio",
        "keyphrase": "gradio-app/gradio",
        "type": "product"
      },
      {
        "id": "version:4.25",
        "keyphrase": "4.25",
        "type": "version"
      }
    ],
    "73": [
      {
        "id": "rootcause:local file inclusion vulnerability",
        "keyphrase": "local file inclusion vulnerability",
        "type": "rootcause"
      },
      {
        "id": "weakness:local file inclusion",
        "keyphrase": "local file inclusion",
        "type": "weakness"
      }
    ],
    "93": [
      {
        "id": "component:gradio/components/json_component.py",
        "keyphrase": "gradio/components/json_component.py",
        "type": "component"
      }
    ]
  }
}