{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved drm/xe/preempt_fence enlarge the fence critical section It is really easy to introduce subtle deadlocks in preempt_fence_work_func() since we operate on single global ordered-wq for signalling our preempt fences behind the scenes, so even though we signal a particular fence, everything in the callback should be in the fence critical section, since blocking in the callback will prevent other published fences from signalling. If we enlarge the fence critical section to cover the entire callback, then lockdep should be able to understand this better, and complain if we grab a sensitive lock like vm->lock, which is also held when waiting on preempt fences.",
  "keyphrases": {
    "rootcause": [
      "enlarge the fence critical section"
    ],
    "weakness": [
      "deadlock"
    ]
  },
  "timestamp": "2025-07-12 04:17:56",
  "cve_id": "CVE-2024-44956",
  "result_count": 14,
  "results": [
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 511.70417765092975,
      "search_source": "rootcause:enlarge the fence critical section"
    },
    {
      "cwe_id": "335",
      "name": "Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)",
      "score": 506.5399567696343,
      "search_source": "rootcause:enlarge the fence critical section"
    },
    {
      "cwe_id": "61",
      "name": "UNIX Symbolic Link (Symlink) Following",
      "score": 495.03161093092785,
      "search_source": "rootcause:enlarge the fence critical section"
    },
    {
      "cwe_id": "306",
      "name": "Missing Authentication for Critical Function",
      "score": 479.5896962205539,
      "search_source": "rootcause:enlarge the fence critical section"
    },
    {
      "cwe_id": "212",
      "name": "Improper Removal of Sensitive Information Before Storage or Transfer",
      "score": 476.40477873461356,
      "search_source": "rootcause:enlarge the fence critical section"
    },
    {
      "cwe_id": "364",
      "name": "Signal Handler Race Condition",
      "score": 470.6520187389576,
      "search_source": "rootcause:enlarge the fence critical section"
    },
    {
      "cwe_id": "451",
      "name": "User Interface (UI) Misrepresentation of Critical Information",
      "score": 470.6469163892838,
      "search_source": "rootcause:enlarge the fence critical section"
    },
    {
      "cwe_id": "193",
      "name": "Off-by-one Error",
      "score": 466.7763116222021,
      "search_source": "rootcause:enlarge the fence critical section"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 466.1239657384417,
      "search_source": "rootcause:enlarge the fence critical section"
    },
    {
      "cwe_id": "823",
      "name": "Use of Out-of-range Pointer Offset",
      "score": 465.9048165316616,
      "search_source": "rootcause:enlarge the fence critical section"
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "score": 452.753311628231,
      "search_source": "weakness:deadlock"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "score": 437.53546635308106,
      "search_source": "weakness:deadlock"
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "score": 421.1881523965778,
      "search_source": "weakness:deadlock"
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "score": 420.82471904071275,
      "search_source": "weakness:deadlock"
    }
  ]
}