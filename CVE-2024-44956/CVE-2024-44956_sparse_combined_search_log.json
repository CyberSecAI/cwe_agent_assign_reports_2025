{
  "method": "sparse_combined",
  "query": "In the Linux kernel, the following vulnerability has been resolved drm/xe/preempt_fence enlarge the fence critical section It is really easy to introduce subtle deadlocks in preempt_fence_work_func() since we operate on single global ordered-wq for signalling our preempt fences behind the scenes, so even though we signal a particular fence, everything in the callback should be in the fence critical section, since blocking in the callback will prevent other published fences from signalling. If we enlarge the fence critical section to cover the entire callback, then lockdep should be able to understand this better, and complain if we grab a sensitive lock like vm->lock, which is also held when waiting on preempt fences.",
  "keyphrases": {
    "rootcause": [
      "enlarge the fence critical section"
    ],
    "weakness": [
      "deadlock"
    ]
  },
  "timestamp": "2025-07-12T04:17:56.556687",
  "results_count": 14,
  "results_summary": [
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 511.70417765092975
    },
    {
      "doc_id": "335",
      "name": "Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)",
      "score": 506.5399567696343
    },
    {
      "doc_id": "61",
      "name": "UNIX Symbolic Link (Symlink) Following",
      "score": 495.03161093092785
    },
    {
      "doc_id": "306",
      "name": "Missing Authentication for Critical Function",
      "score": 479.5896962205539
    },
    {
      "doc_id": "212",
      "name": "Improper Removal of Sensitive Information Before Storage or Transfer",
      "score": 476.40477873461356
    }
  ]
}