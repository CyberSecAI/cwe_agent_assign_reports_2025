{
  "cve_id": "CVE-2024-41945",
  "description": "fuels-ts is a library for interacting with Fuel v2. The typescript SDK has no awareness of to-be-spent transactions causing some transactions to fail or silently get pruned as they are funded with already used UTXOs. The problem occurs, because the `fund` function in `fuels-ts/packages/account/src/account.ts` gets the needed ressources statelessly with the function `getResourcesToSpend` without taking into consideration already used UTXOs. This issue will lead to unexpected SDK behaviour, such as a transaction not getting included in the `txpool` / in a block or a previous transaction silently getting removed from the `txpool` and replaced with a new one.",
  "key_phrases": {
    "rootcause": "statelessness of fund function in fuels-ts",
    "weakness": "does not consider already used UTXOs",
    "impact": "transaction failure or pruning",
    "vector": "",
    "attacker": "",
    "product": "Fuel v2 typescript SDK",
    "version": "",
    "component": "fund function in fuels-ts/packages/account/src/account.ts"
  },
  "reference_content": "- **Root cause of vulnerability**: The `fund` function in the `fuels-ts/packages/account/src/account.ts` file retrieves UTXOs statelessly using `getResourcesToSpend` without considering already used UTXOs within the same block. This can lead to the same UTXO being used in multiple transactions within the same block.\n- **Weaknesses/vulnerabilities present**: The primary weakness is the lack of state management for UTXOs used in pending transactions. The `getResourcesToSpend` function does not exclude UTXOs that have already been used in other transactions that have not yet been included in a block.\n- **Impact of exploitation**: This can cause transactions to fail or be silently pruned from the transaction pool, resulting in unexpected SDK behavior. Specifically:\n    - Transactions may not be included in the `txpool` or a block.\n    - A previous transaction can be silently removed from the `txpool` and replaced by a new transaction using the same UTXO.\n- **Attack vectors**: An attacker could exploit this vulnerability by submitting multiple transactions within the same block that rely on the same UTXO. This can be achieved through a series of rapid transaction submissions.\n- **Required attacker capabilities/position**: The attacker needs to be able to submit multiple transactions to the Fuel network using the affected SDK version. No special privileges are required beyond being a regular user of the `fuels-ts` SDK. The attacker needs to be able to generate multiple transactions using the vulnerable `fund` function.\n\nThe provided content offers a detailed explanation of the vulnerability and includes a proof-of-concept (PoC). This information is more detailed than a standard CVE description.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-367 | Time-of-check Time-of-use (TOCTOU) Race Condition | 0.8 | Base | Allowed | Primary CWE. The vulnerability arises because the state of UTXOs can change between the time they are checked for availability and the time they are used in a transaction, leading to the same UTXO being used multiple times. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE selected is CWE-367, a **Base** level weakness. This is the most specific CWE that accurately captures the essence of the vulnerability, which involves a race condition due to the time gap between checking the availability of UTXOs and their actual use in a transaction. No direct parent or child relationships strongly influenced the selection, but the peer relationships helped to confirm that this was the most appropriate classification, especially when considering alternatives like resource management or input validation issues.\n\n```mermaid\ngraph TD\n    cwe367[\"CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition\"]\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    class cwe367 primary\n```\n\n## Vulnerability Chain\nThe vulnerability chain is relatively simple:\n1.  **Root Cause:** The `fund` function in the `fuels-ts` library retrieves UTXOs statelessly (**CWE-367**).\n2.  **Weakness:** The function **does not consider already used UTXOs** in pending transactions, leading to a race condition.\n3.  **Impact:** Transactions may fail, be pruned from the transaction pool, or replace other transactions.\n\n## Summary of Analysis\nThe initial analysis focused on identifying the root cause of the vulnerability. The key phrases \"**statelessness of fund function**\" and \"**does not consider already used UTXOs**\" strongly suggest a timing issue where the state of UTXOs changes between the time they are checked and used. This aligns with the description of CWE-367.\n\nThe **CVE Reference Links Content Summary** confirms this by stating that the `getResourcesToSpend` function does not exclude UTXOs that have already been used in other transactions, leading to the possibility of the same UTXO being used in multiple transactions within the same block.\n\nThe retriever results listed CWE-367 as a relevant candidate, further supporting this assessment. While other CWEs like CWE-754 (Improper Check for Unusual or Exceptional Conditions), CWE-347 (Improper Verification of Cryptographic Signature), and CWE-770 (Allocation of Resources Without Limits or Throttling) were considered, they did not accurately capture the timing-related race condition at the heart of this vulnerability.\n\nCWE-367 is at the Base level of abstraction, which is ideal for mapping root causes. The mapping guidance for CWE-367 allows its usage, reinforcing its suitability.\n\nBased on the evidence, relationship analysis, and mapping guidance, CWE-367 is the most appropriate classification for this vulnerability.\n\nRelevant CWE Information:\n- **Vulnerability Description Key Phrases**: **statelessness of fund function in fuels-ts** and **does not consider already used UTXOs** within the same block\n- **CVE Reference Links Content Summary**:  The `getResourcesToSpend` function does not exclude UTXOs that have already been used in other transactions.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-367 | Time-of-check Time-of-use (TOCTOU) Race Condition | 0.8 | Base | Allowed | Primary CWE. The vulnerability arises because the state of UTXOs can change between the time they are checked for availability and the time they are used in a transaction, leading to the same UTXO being used multiple times. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE selected is CWE-367, a **Base** level weakness. This is the most specific CWE that accurately captures the essence of the vulnerability, which involves a race condition due to the time gap between checking the availability of UTXOs and their actual use in a transaction. No direct parent or child relationships strongly influenced the selection, but the peer relationships helped to confirm that this was the most appropriate classification, especially when considering alternatives like resource management or input validation issues.\n\n```mermaid\ngraph TD\n    cwe367[\"CWE-367: Time-of-check Time-of-use (TOCTOU) Race Condition\"]\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    class cwe367 primary\n```\n\n## Vulnerability Chain\nThe vulnerability chain is relatively simple:\n1.  **Root Cause:** The `fund` function in the `fuels-ts` library retrieves UTXOs statelessly (**CWE-367**).\n2.  **Weakness:** The function **does not consider already used UTXOs** in pending transactions, leading to a race condition.\n3.  **Impact:** Transactions may fail, be pruned from the transaction pool, or replace other transactions.\n\n## Summary of Analysis\nThe initial analysis focused on identifying the root cause of the vulnerability. The key phrases \"**statelessness of fund function**\" and \"**does not consider already used UTXOs**\" strongly suggest a timing issue where the state of UTXOs changes between the time they are checked and used. This aligns with the description of CWE-367.\n\nThe **CVE Reference Links Content Summary** confirms this by stating that the `getResourcesToSpend` function does not exclude UTXOs that have already been used in other transactions, leading to the possibility of the same UTXO being used in multiple transactions within the same block.\n\nThe retriever results listed CWE-367 as a relevant candidate, further supporting this assessment. While other CWEs like CWE-754 (Improper Check for Unusual or Exceptional Conditions), CWE-347 (Improper Verification of Cryptographic Signature), and CWE-770 (Allocation of Resources Without Limits or Throttling) were considered, they did not accurately capture the timing-related race condition at the heart of this vulnerability.\n\nCWE-367 is at the Base level of abstraction, which is ideal for mapping root causes. The mapping guidance for CWE-367 allows its usage, reinforcing its suitability.\n\nBased on the evidence, relationship analysis, and mapping guidance, CWE-367 is the most appropriate classification for this vulnerability.\n\nRelevant CWE Information:\n- **Vulnerability Description Key Phrases**: **statelessness of fund function in fuels-ts** and **does not consider already used UTXOs** within the same block\n- **CVE Reference Links Content Summary**:  The `getResourcesToSpend` function does not exclude UTXOs that have already been used in other transactions.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-367:**\n- 367 (Time-of-check Time-of-use (TOCTOU) Race Condition) - ROOT\n\n\n**Chain starting from CWE-347:**\n- 347 (Improper Verification of Cryptographic Signature) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "754",
        "name": "Improper Check for Unusual or Exceptional Conditions",
        "source": "sparse"
      },
      "similarity": 513.4085652075576
    },
    {
      "metadata": {
        "doc_id": "347",
        "name": "Improper Verification of Cryptographic Signature",
        "source": "sparse"
      },
      "similarity": 511.93625122084916
    },
    {
      "metadata": {
        "doc_id": "367",
        "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
        "source": "sparse"
      },
      "similarity": 505.8058191349882
    },
    {
      "metadata": {
        "doc_id": "1321",
        "name": "Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')",
        "source": "sparse"
      },
      "similarity": 501.8497512797029
    },
    {
      "metadata": {
        "doc_id": "770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "source": "sparse"
      },
      "similarity": 495.78930080444496
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 492.72641292913556
    },
    {
      "metadata": {
        "doc_id": "287",
        "name": "Improper Authentication",
        "source": "sparse"
      },
      "similarity": 484.4061276391049
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 484.0021154276876
    },
    {
      "metadata": {
        "doc_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "type": "Base",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "keyphrase_source": "weakness:does not consider already used UTXOs",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "retriever_count": 3,
          "normalized_scores": {
            "dense": 0.35045986690994146,
            "sparse": 480.3588069310179,
            "graph": 1.6033190758867812
          }
        }
      },
      "similarity": 0.35045986690994146
    },
    {
      "doc_id": "476",
      "text": "CWE-476: NULL Pointer Dereference",
      "score": 2.4232000000000005,
      "metadata": {
        "doc_id": "476",
        "name": "NULL Pointer Dereference",
        "type": "base",
        "original_content": "CWE-476: NULL Pointer Dereference",
        "relationships": [
          {
            "source_id": "476",
            "target_id": "789",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "476",
            "target_id": "362",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "476",
            "target_id": "252",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "476",
            "target_id": "1325",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "476",
            "target_id": "754",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "476",
            "target_id": "754",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "476",
            "target_id": "710",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "789",
            "target_id": "476",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "754",
            "target_id": "476",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "710",
            "target_id": "476",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "362",
            "target_id": "476",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "252",
            "target_id": "476",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1325",
            "target_id": "476",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 0.8,
          "abstraction_path": 0.7200000000000001,
          "sequence_path": 0.8
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "1284",
                  "789",
                  "CANPRECEDE"
                ],
                [
                  "789",
                  "476",
                  "CANPRECEDE"
                ]
              ],
              "score": 0.8,
              "type": "relationship_chain",
              "source": "1284"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "754",
                  "476",
                  "PARENTOF"
                ]
              ],
              "score": 0.7200000000000001,
              "type": "abstraction_path_down",
              "source": "754"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "1284",
                  "789",
                  "CANPRECEDE"
                ],
                [
                  "789",
                  "476",
                  "CANPRECEDE"
                ]
              ],
              "score": 0.8,
              "type": "vulnerability_sequence_forward",
              "source": "1284"
            }
          }
        },
        "abstraction_level": "base",
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.4232000000000005
          }
        }
      },
      "similarity": 2.4232000000000005
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-367",
      "CWE-347",
      "CWE-770",
      "CWE-754"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}