{
  "method": "sparse_base",
  "query": "Cursor is a code editor built for programming with AI. Prior to Sep 27, 2024, if a user generated a terminal command via Cursors Terminal Cmd-K/Ctrl-K feature and if the user explicitly imported a malicious web page into the Terminal Cmd-K prompt, an attacker with control over the referenced web page could have a significant chance of influencing a language model to output arbitrary commands for execution in the users terminal. This scenario would require the user explicitly opt-in to including the contents of a compromised webpage, and it would require that the attacker display prompt injection text in the the contents of the compromised webpage. A server-side patch to not stream back newlines or control characters was released on September 27, 2024, within two hours of the issue being reported. Additionally, Cursor 0.42 includes client-side mitigations to prevent any newline or control character from being streamed into the terminal directly. It also contains a new setting, `cursor.terminal.usePreviewBox`, which, if set to true, streams the response into a preview box whose contents then have to be manually accepted before being inserted into the terminal. This setting is useful if youre working in a shell environment where commands can be executed without pressing enter or any control character. The patch has been applied server-side, so no additional action is needed, even on older versions of Cursor. Separately, Cursors maintainers also recommend, as best practice",
  "keyphrases": {
    "base_query": "Cursor is a code editor built for programming with AI. Prior to Sep 27, 2024, if a user generated a terminal command via Cursors Terminal Cmd-K/Ctrl-K feature and if the user explicitly imported a malicious web page into the Terminal Cmd-K prompt, an attacker with control over the referenced web page could have a significant chance of influencing a language model to output arbitrary commands for execution in the users terminal. This scenario would require the user explicitly opt-in to including the contents of a compromised webpage, and it would require that the attacker display prompt injection text in the the contents of the compromised webpage. A server-side patch to not stream back newlines or control characters was released on September 27, 2024, within two hours of the issue being reported. Additionally, Cursor 0.42 includes client-side mitigations to prevent any newline or control character from being streamed into the terminal directly. It also contains a new setting, `cursor.terminal.usePreviewBox`, which, if set to true, streams the response into a preview box whose contents then have to be manually accepted before being inserted into the terminal. This setting is useful if youre working in a shell environment where commands can be executed without pressing enter or any control character. The patch has been applied server-side, so no additional action is needed, even on older versions of Cursor. Separately, Cursors maintainers also recommend, as best practice"
  },
  "timestamp": "2025-07-13T19:03:08.986014",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "184",
      "name": "Incomplete List of Disallowed Inputs",
      "score": 375.7201909826126
    },
    {
      "doc_id": "1336",
      "name": "Improper Neutralization of Special Elements Used in a Template Engine",
      "score": 373.8116190250246
    },
    {
      "doc_id": "116",
      "name": "Improper Encoding or Escaping of Output",
      "score": 373.7557820806835
    },
    {
      "doc_id": "79",
      "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "score": 372.69174222488675
    },
    {
      "doc_id": "94",
      "name": "Improper Control of Generation of Code ('Code Injection')",
      "score": 370.2508164191668
    }
  ]
}