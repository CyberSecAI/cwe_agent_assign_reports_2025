{
  "method": "sparse_weakness_1",
  "query": "In the Linux kernel, the following vulnerability has been resolved ksmbd fix memory leak in parse_lease_state() The previous patch that added bounds check for create lease context introduced a memory leak. When the bounds check fails, the function returns NULL without freeing the previously allocated lease_ctx_info structure. This patch fixes the issue by adding kfree(lreq) before returning NULL in both boundary check cases.",
  "keyphrases": {
    "weakness": "memory leak"
  },
  "timestamp": "2025-07-12T13:31:42.573819",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "125",
      "name": "Out-of-bounds Read",
      "score": 344.897052814844
    },
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 331.3650757513434
    },
    {
      "doc_id": "667",
      "name": "Improper Locking",
      "score": 330.12963327664033
    },
    {
      "doc_id": "476",
      "name": "NULL Pointer Dereference",
      "score": 321.5829738212832
    },
    {
      "doc_id": "787",
      "name": "Out-of-bounds Write",
      "score": 309.0892238483079
    }
  ]
}