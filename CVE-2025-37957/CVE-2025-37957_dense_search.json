{
  "retriever": "dense",
  "query": "In the Linux kernel, the following vulnerability has been resolved KVM SVM Forcibly leave SMM mode on SHUTDOWN interception Previously, commit ed129ec9057f (KVM x86 forcibly leave nested mode on vCPU reset) addressed an issue where a triple fault occurring in nested mode could lead to use-after-free scenarios. However, the commit did not handle the analogous situation for System Management Mode (SMM). This omission results in triggering a WARN when KVM forces a vCPU INIT after SHUTDOWN interception while the vCPU is in SMM. This situation was reprodused using Syzkaller by 1) Creating a KVM VM and vCPU 2) Sending a KVM_SMI ioctl to explicitly enter SMM 3) Executing invalid instructions causing consecutive exceptions and eventually a triple fault The issue manifests as follows WARNING CPU 0 PID 25506 at arch/x86/kvm/x86.c12112 kvm_vcpu_reset+0x1d2/0x1530 arch/x86/kvm/x86.c12112 Modules linked in CPU 0 PID 25506 Comm syz-executor.0 Not tainted 6.1.130-syzkaller-00157-g164fe5dde9b6 #0 Hardware name QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.12.0-1 04/01/2014 RIP 0010kvm_vcpu_reset+0x1d2/0x1530 arch/x86/kvm/x86.c12112 Call Trace shutdown_interception+0x66/0xb0 arch/x86/kvm/svm/svm.c2136 svm_invoke_exit_handler+0x110/0x530 arch/x86/kvm/svm/svm.c3395 svm_handle_exit+0x424/0x920 arch/x86/kvm/svm/svm.c3457 vcpu_enter_guest arch/x86/kvm/x86.c10959 [inline] vcpu_run+0x2c43/0x5a90 arch/x86/kvm/x86.c11062 kvm_arch_vcpu_ioctl_run+0x50f/0x1cf0 arch/x86/kvm/x86.c11283 kvm_vcpu_ioctl+0x570/0xf00 arch/x86/kvm/../../../virt/kvm/kvm_main.c4122 vfs_ioctl fs/ioctl.c51 [inline] __do_sys_ioctl fs/ioctl.c870 [inline] __se_sys_ioctl fs/ioctl.c856 [inline] __x64_sys_ioctl+0x19a/0x210 fs/ioctl.c856 do_syscall_x64 arch/x86/entry/common.c51 [inline] do_syscall_64+0x35/0x80 arch/x86/entry/common.c81 entry_SYSCALL_64_after_hwframe+0x6e/0xd8 Architecturally, INIT is blocked when the CPU is in SMM, hence KVMs WARN() in kvm_vcpu_reset() to guard against KVM bugs, e.g. to detect improper emulation of INIT. SHUTDOWN on SVM is a weird edge case where KVM needs to do _something_ sane with the VMCB, since its technically undefined, and INIT is the least awful choice given KVMs ABI. So, double down on stuffing INIT on SHUTDOWN, and force the vCPU out of SMM to avoid any weirdness (and the WARN). Found by Linux Verification Center (linuxtesting.org) with Syzkaller. [sean massage changelog, make it clear this isnt architectural behavior]",
  "keyphrases": {
    "weakness": [
      "use-after-free"
    ]
  },
  "timestamp": "2025-07-14 21:59:50",
  "cve_id": "CVE-2025-37957",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "1342",
      "name": "Information Exposure through Microarchitectural State after Transient Execution",
      "type": "Base",
      "score": 0.5813831149553912
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "type": "Class",
      "score": 0.541981676254529
    },
    {
      "cwe_id": "1274",
      "name": "Improper Access Control for Volatile Memory Containing Boot Code",
      "type": "Base",
      "score": 0.533359958837744
    },
    {
      "cwe_id": "1281",
      "name": "Sequence of Processor Instructions Leads to Unexpected Behavior",
      "type": "Base",
      "score": 0.5281676605607908
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "type": "Class",
      "score": 0.5247416262502813
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "type": "Base",
      "score": 0.5223839505521984
    },
    {
      "cwe_id": "1421",
      "name": "Exposure of Sensitive Information in Shared Microarchitectural Structures during Transient Execution",
      "type": "Base",
      "score": 0.5210338670792242
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "type": "Base",
      "score": 0.5188924315175812
    },
    {
      "cwe_id": "1260",
      "name": "Improper Handling of Overlap Between Protected Memory Ranges",
      "type": "Base",
      "score": 0.5185443732710602
    },
    {
      "cwe_id": "1256",
      "name": "Improper Restriction of Software Interfaces to Hardware Features",
      "type": "Base",
      "score": 0.5107963523233963
    },
    {
      "cwe_id": "1423",
      "name": "Exposure of Sensitive Information caused by Shared Microarchitectural Predictor State that Influences Transient Execution",
      "type": "Base",
      "score": 0.5020669004528546
    },
    {
      "cwe_id": "1252",
      "name": "CPU Hardware Not Configured to Support Exclusivity of Write and Execute Operations",
      "type": "Base",
      "score": 0.5003672718309476
    },
    {
      "cwe_id": "1037",
      "name": "Processor Optimization Removal or Modification of Security-critical Code",
      "type": "Base",
      "score": 0.5000459320742003
    },
    {
      "cwe_id": "1332",
      "name": "Improper Handling of Faults that Lead to Instruction Skips",
      "type": "Base",
      "score": 0.49734598157177895
    },
    {
      "cwe_id": "413",
      "name": "Improper Resource Locking",
      "type": "Base",
      "score": 0.49370980545186555
    },
    {
      "cwe_id": "1233",
      "name": "Security-Sensitive Hardware Controls with Missing Lock Bit Protection",
      "type": "Base",
      "score": 0.49023093951271224
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "type": "Class",
      "score": 0.48965451890759953
    },
    {
      "cwe_id": "1264",
      "name": "Hardware Logic with Insecure De-Synchronization between Control and Data Channels",
      "type": "Base",
      "score": 0.4882487897710881
    },
    {
      "cwe_id": "394",
      "name": "Unexpected Status Code or Return Value",
      "type": "Base",
      "score": 0.4866832855741893
    },
    {
      "cwe_id": "665",
      "name": "Improper Initialization",
      "type": "Class",
      "score": 0.48597848129460963
    }
  ]
}