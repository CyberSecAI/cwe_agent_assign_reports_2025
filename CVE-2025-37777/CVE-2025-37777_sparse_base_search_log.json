{
  "method": "sparse_base",
  "query": "In the Linux kernel, the following vulnerability has been resolved ksmbd fix use-after-free in __smb2_lease_break_noti() Move tcp_transport free to ksmbd_conn_free. If ksmbd connection is referenced when ksmbd server thread terminates, It will not be freed, but conn->tcp_transport is freed. __smb2_lease_break_noti can be performed asynchronously when the connection is disconnected. __smb2_lease_break_noti calls ksmbd_conn_write, which can cause use-after-free when conn->ksmbd_transport is already freed.",
  "keyphrases": {
    "base_query": "In the Linux kernel, the following vulnerability has been resolved ksmbd fix use-after-free in __smb2_lease_break_noti() Move tcp_transport free to ksmbd_conn_free. If ksmbd connection is referenced when ksmbd server thread terminates, It will not be freed, but conn->tcp_transport is freed. __smb2_lease_break_noti can be performed asynchronously when the connection is disconnected. __smb2_lease_break_noti calls ksmbd_conn_write, which can cause use-after-free when conn->ksmbd_transport is already freed."
  },
  "timestamp": "2025-07-12T13:21:25.416672",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 124.2220978882543
    },
    {
      "doc_id": "415",
      "name": "Double Free",
      "score": 122.51494564514618
    },
    {
      "doc_id": "364",
      "name": "Signal Handler Race Condition",
      "score": 120.2545752277634
    },
    {
      "doc_id": "667",
      "name": "Improper Locking",
      "score": 117.0659039874085
    },
    {
      "doc_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "score": 115.3980474156607
    }
  ]
}