{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved ext4 check dot and dotdot of dx_root before making dir indexed Syzbot reports a issue as follows ============================================ BUG unable to handle page fault for address ffffed11022e24fe PGD 23ffee067 P4D 23ffee067 PUD 0 Oops Oops 0000 [#1] PREEMPT SMP KASAN PTI CPU 0 PID 5079 Comm syz-executor306 Not tainted 6.10.0-rc5-g55027e689933 #0 Call Trace make_indexed_dir+0xdaf/0x13c0 fs/ext4/namei.c2341 ext4_add_entry+0x222a/0x25d0 fs/ext4/namei.c2451 ext4_rename fs/ext4/namei.c3936 [inline] ext4_rename2+0x26e5/0x4370 fs/ext4/namei.c4214 [...] ============================================ The immediate cause of this problem is that there is only one valid dentry for the block to be split during do_split, so split==0 results in out of bounds accesses to the map triggering the issue. do_split unsigned split dx_make_map count = 1 split = count/2 = 0 continued = hash2 == map[split - 1].hash ---> map[4294967295] The maximum length of a filename is 255 and the minimum block size is 1024, so it is always guaranteed that the number of entries is greater than or equal to 2 when do_split() is called. But syzbots crafted image has no dot and dotdot in dir, and the dentry distribution in dirblock is as follows bus dentry1 hole dentry2 free |xx--|xx-------------|...............|xx-------------|........",
  "keyphrases": {},
  "timestamp": "2025-07-12 03:41:55",
  "cve_id": "CVE-2024-42305",
  "result_count": 10,
  "results": [
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 252.4059437677356,
      "search_source": "base_query"
    },
    {
      "cwe_id": "191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "score": 251.0940633828092,
      "search_source": "base_query"
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "score": 245.82830505134717,
      "search_source": "base_query"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "score": 243.58192106695654,
      "search_source": "base_query"
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "score": 243.0890181304647,
      "search_source": "base_query"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 240.3257168833126,
      "search_source": "base_query"
    },
    {
      "cwe_id": "1335",
      "name": "Incorrect Bitwise Shift of Integer",
      "score": 238.563976273851,
      "search_source": "base_query"
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "score": 237.30043457476944,
      "search_source": "base_query"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 236.72009896265573,
      "search_source": "base_query"
    },
    {
      "cwe_id": "193",
      "name": "Off-by-one Error",
      "score": 235.8803359095356,
      "search_source": "base_query"
    }
  ]
}