{
  "method": "sparse_weakness_1",
  "query": "In the Linux kernel, the following vulnerability has been resolved s390/pci Fix duplicate pci_dev_put() in disable_slot() when PF has child VFs With commit bcb5d6c76903 (s390/pci introduce lock to synchronize state of zpci_devs) the code to ignore power off of a PF that has child VFs was changed from a direct return to a goto to the unlock and pci_dev_put() section. The change however left the existing pci_dev_put() untouched resulting in a doubple put. This can subsequently cause a use after free if the struct pci_dev is released in an unexpected state. Fix this by removing the extra pci_dev_put().",
  "keyphrases": {
    "weakness": "use after free"
  },
  "timestamp": "2025-07-12T13:30:43.187042",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "667",
      "name": "Improper Locking",
      "score": 484.3260834566892
    },
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 479.96967623116706
    },
    {
      "doc_id": "909",
      "name": "Missing Initialization of Resource",
      "score": 455.3276676408678
    },
    {
      "doc_id": "415",
      "name": "Double Free",
      "score": 454.5361575587615
    },
    {
      "doc_id": "252",
      "name": "Unchecked Return Value",
      "score": 448.8939942721309
    }
  ]
}