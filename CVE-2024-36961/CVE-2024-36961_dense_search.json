{
  "retriever": "dense",
  "query": "In the Linux kernel, the following vulnerability has been resolved thermal/debugfs Fix two locking issues with thermal zone debug With the current thermal zone locking arrangement in the debugfs code, user space can open the mitigations file for a thermal zone before the zones debugfs pointer is set which will result in a NULL pointer dereference in tze_seq_start(). Moreover, thermal_debug_tz_remove() is not called under the thermal zone lock, so it can run in parallel with the other functions accessing the thermal zones struct thermal_debugfs object. Then, it may clear tz->debugfs after one of those functions has checked it and the struct thermal_debugfs object may be freed prematurely. To address the first problem, pass a pointer to the thermal zones struct thermal_debugfs object to debugfs_create_file() in thermal_debug_tz_add() and make tze_seq_start(), tze_seq_next(), tze_seq_stop(), and tze_seq_show() retrieve it from s->private instead of a pointer to the thermal zone object. This will ensure that tz_debugfs will be valid across the mitigations file accesses until thermal_debugfs_remove_id() called by thermal_debug_tz_remove() removes that file. To address the second problem, use tz->lock in thermal_debug_tz_remove() around the tz->debugfs value check (in case the same thermal zone is removed at the same time in two different threads) and its reset to NULL. Cc 6.8+ # 6.8+",
  "keyphrases": {
    "rootcause": [
      "NULL pointer dereference"
    ]
  },
  "timestamp": "2025-07-13 09:19:38",
  "cve_id": "CVE-2024-36961",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "type": "Class",
      "score": 0.4869517494267449
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "type": "Base",
      "score": 0.48329832995572963
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "type": "Class",
      "score": 0.47890594516623713
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "type": "Class",
      "score": 0.47189843943422194
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "type": "Base",
      "score": 0.4700757556573796
    },
    {
      "cwe_id": "1191",
      "name": "On-Chip Debug and Test Interface With Improper Access Control",
      "type": "Base",
      "score": 0.4662909350942547
    },
    {
      "cwe_id": "1258",
      "name": "Exposure of Sensitive System Information Due to Uncleared Debug Information",
      "type": "Base",
      "score": 0.46433184060786303
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "type": "Variant",
      "score": 0.4598357146882251
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "type": "Base",
      "score": 0.4551613696036809
    },
    {
      "cwe_id": "1243",
      "name": "Sensitive Non-Volatile Information Not Protected During Debug",
      "type": "Base",
      "score": 0.454384613158323
    },
    {
      "cwe_id": "1256",
      "name": "Improper Restriction of Software Interfaces to Hardware Features",
      "type": "Base",
      "score": 0.44556454724156036
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "type": "Base",
      "score": 0.44410479910521844
    },
    {
      "cwe_id": "1234",
      "name": "Hardware Internal or Debug Modes Allow Override of Locks",
      "type": "Base",
      "score": 0.43942743104615234
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "type": "Base",
      "score": 0.43872686395762367
    },
    {
      "cwe_id": "119",
      "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
      "type": "Class",
      "score": 0.436023354764615
    },
    {
      "cwe_id": "1338",
      "name": "Improper Protections Against Hardware Overheating",
      "type": "Base",
      "score": 0.43460071596688
    },
    {
      "cwe_id": "1421",
      "name": "Exposure of Sensitive Information in Shared Microarchitectural Structures during Transient Execution",
      "type": "Base",
      "score": 0.4342319014538518
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "type": "Base",
      "score": 0.43344770704658386
    },
    {
      "cwe_id": "126",
      "name": "Buffer Over-read",
      "type": "Variant",
      "score": 0.431965653057913
    },
    {
      "cwe_id": "413",
      "name": "Improper Resource Locking",
      "type": "Base",
      "score": 0.43138858537862323
    }
  ]
}