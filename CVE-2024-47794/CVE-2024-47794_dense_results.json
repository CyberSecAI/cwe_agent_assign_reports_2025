{
  "query": "In the Linux kernel, the following vulnerability has been resolved bpf Prevent tailcall infinite loop caused by freplace There is a potential infinite loop issue that can occur when using a combination of tail calls and freplace. In an upcoming selftest, the attach target for entry_freplace of tailcall_freplace.c is subprog_tc of tc_bpf2bpf.c, while the tail call in entry_freplace leads to entry_tc. This results in an infinite loop entry_tc -> subprog_tc -> entry_freplace --tailcall-> entry_tc. The problem arises because the tail_call_cnt in entry_freplace resets to zero each time entry_freplace is executed, causing the tail call mechanism to never terminate, eventually leading to a kernel panic. To fix this issue, the solution is twofold 1. Prevent updating a program extended by an freplace program to a prog_array map. 2. Prevent extending a program that is already part of a prog_array map with an freplace program. This ensures that * If a program or its subprogram has been extended by an freplace program, it can no longer be updated to a prog_array map. * If a program has been added to a prog_array map, neither it nor its subprograms can be extended by an freplace program. Moreover, an extension program should not be tailcalled. As such, return -EINVAL if the program has a type of BPF_PROG_TYPE_EXT when adding it to a prog_array map. Additionally, fix a minor code style issue by replacing eight spaces with a tab for proper formatting.",
  "count": 20,
  "results": [
    {
      "cwe_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "abstraction": "Base",
      "score": 0.46436687353002254,
      "original_score": 0.46436687353002254,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1050",
      "name": "Excessive Platform Resource Consumption within a Loop",
      "abstraction": "Base",
      "score": 0.45986329466497483,
      "original_score": 0.45986329466497483,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "911",
      "name": "Improper Update of Reference Count",
      "abstraction": "Base",
      "score": 0.4568351220989202,
      "original_score": 0.4568351220989202,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "763",
      "name": "Release of Invalid Pointer or Reference",
      "abstraction": "Base",
      "score": 0.4526146313741737,
      "original_score": 0.4526146313741737,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "abstraction": "Class",
      "score": 0.45241567144233263,
      "original_score": 0.45241567144233263,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "1260",
      "name": "Improper Handling of Overlap Between Protected Memory Ranges",
      "abstraction": "Base",
      "score": 0.44751169582634015,
      "original_score": 0.44751169582634015,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "606",
      "name": "Unchecked Input for Loop Condition",
      "abstraction": "Base",
      "score": 0.445484872120481,
      "original_score": 0.445484872120481,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "663",
      "name": "Use of a Non-reentrant Function in a Concurrent Context",
      "abstraction": "Base",
      "score": 0.44373756550193316,
      "original_score": 0.44373756550193316,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1342",
      "name": "Information Exposure through Microarchitectural State after Transient Execution",
      "abstraction": "Base",
      "score": 0.4425732503165233,
      "original_score": 0.4425732503165233,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "abstraction": "Variant",
      "score": 0.4421979851388665,
      "original_score": 0.4421979851388665,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 0.44047883135653,
      "original_score": 0.44047883135653,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "834",
      "name": "Excessive Iteration",
      "abstraction": "Class",
      "score": 0.44003007092813773,
      "original_score": 0.44003007092813773,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "1265",
      "name": "Unintended Reentrant Invocation of Non-reentrant Code Via Nested Calls",
      "abstraction": "Base",
      "score": 0.4353260922875881,
      "original_score": 0.4353260922875881,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "733",
      "name": "Compiler Optimization Removal or Modification of Security-critical Code",
      "abstraction": "Base",
      "score": 0.4352370466238943,
      "original_score": 0.4352370466238943,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "abstraction": "Class",
      "score": 0.4346906539553339,
      "original_score": 0.4346906539553339,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "1281",
      "name": "Sequence of Processor Instructions Leads to Unexpected Behavior",
      "abstraction": "Base",
      "score": 0.4337652534443984,
      "original_score": 0.4337652534443984,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "415",
      "name": "Double Free",
      "abstraction": "Variant",
      "score": 0.43311537818348395,
      "original_score": 0.43311537818348395,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 0.4304155821833606,
      "original_score": 0.4304155821833606,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "131",
      "name": "Incorrect Calculation of Buffer Size",
      "abstraction": "Base",
      "score": 0.4281866098495968,
      "original_score": 0.4281866098495968,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "194",
      "name": "Unexpected Sign Extension",
      "abstraction": "Variant",
      "score": 0.42756956515371874,
      "original_score": 0.42756956515371874,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 0.42756956515371874,
    "max": 0.46436687353002254,
    "mean": 0.44232080229903054,
    "median": 0.4413384082476982,
    "count": 20
  }
}