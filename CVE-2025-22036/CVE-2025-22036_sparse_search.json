{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved exfat fix random stack corruption after get_block When get_block is called with a buffer_head allocated on the stack, such as do_mpage_readpage, stack corruption due to buffer_head UAF may occur in the following race condition situation. mpage_read_folio > do_mpage_readpage exfat_get_block bh_read __bh_read get_bh(bh) submit_bh wait_on_buffer ... end_buffer_read_sync __end_buffer_read_notouch unlock_buffer > ... ... ... ... > . . another_function > put_bh(bh) atomic_dec(bh->b_count) * stack corruption here * This patch returns -EAGAIN if a folio does not have buffers when bh_read needs to be called. By doing this, the caller can fallback to functions like block_read_full_folio(), create a buffer_head in the folio, and then call get_block again. Lets do not call bh_read() with on-stack buffer_head.",
  "keyphrases": {
    "rootcause": [
      "race condition"
    ],
    "weakness": [
      "stack corruption"
    ]
  },
  "timestamp": "2025-07-14 10:07:32",
  "cve_id": "CVE-2025-22036",
  "result_count": 11,
  "results": [
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 1000.0,
      "search_source": "alternate_term_match"
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "score": 522.8393533448238,
      "search_source": "rootcause:race condition"
    },
    {
      "cwe_id": "674",
      "name": "Uncontrolled Recursion",
      "score": 522.7770408601028,
      "search_source": "rootcause:race condition"
    },
    {
      "cwe_id": "364",
      "name": "Signal Handler Race Condition",
      "score": 510.84713197940425,
      "search_source": "rootcause:race condition"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "score": 508.4667955134288,
      "search_source": "rootcause:race condition"
    },
    {
      "cwe_id": "457",
      "name": "Use of Uninitialized Variable",
      "score": 507.44406699782746,
      "search_source": "rootcause:race condition"
    },
    {
      "cwe_id": "662",
      "name": "Improper Synchronization",
      "score": 491.25411183416105,
      "search_source": "rootcause:race condition"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 490.884288780926,
      "search_source": "rootcause:race condition"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 489.8871640260322,
      "search_source": "rootcause:race condition"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "score": 485.31970448908623,
      "search_source": "rootcause:race condition"
    },
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "score": 471.99557302569,
      "search_source": "weakness:stack corruption"
    }
  ]
}