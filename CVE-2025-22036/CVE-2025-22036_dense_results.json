{
  "query": "In the Linux kernel, the following vulnerability has been resolved exfat fix random stack corruption after get_block When get_block is called with a buffer_head allocated on the stack, such as do_mpage_readpage, stack corruption due to buffer_head UAF may occur in the following race condition situation. mpage_read_folio > do_mpage_readpage exfat_get_block bh_read __bh_read get_bh(bh) submit_bh wait_on_buffer ... end_buffer_read_sync __end_buffer_read_notouch unlock_buffer > ... ... ... ... > . . another_function > put_bh(bh) atomic_dec(bh->b_count) * stack corruption here * This patch returns -EAGAIN if a folio does not have buffers when bh_read needs to be called. By doing this, the caller can fallback to functions like block_read_full_folio(), create a buffer_head in the folio, and then call get_block again. Lets do not call bh_read() with on-stack buffer_head.",
  "count": 20,
  "results": [
    {
      "cwe_id": "126",
      "name": "Buffer Over-read",
      "abstraction": "Variant",
      "score": 0.5100563759774299,
      "original_score": 0.5100563759774299,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "805",
      "name": "Buffer Access with Incorrect Length Value",
      "abstraction": "Base",
      "score": 0.5070755242686598,
      "original_score": 0.5070755242686598,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "abstraction": "Base",
      "score": 0.5016996688674614,
      "original_score": 0.5016996688674614,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 0.49949641067550427,
      "original_score": 0.49949641067550427,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "122",
      "name": "Heap-based Buffer Overflow",
      "abstraction": "Variant",
      "score": 0.4986576310224357,
      "original_score": 0.4986576310224357,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "abstraction": "Class",
      "score": 0.49549486012769556,
      "original_score": 0.49549486012769556,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 0.4942962787720637,
      "original_score": 0.4942962787720637,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "131",
      "name": "Incorrect Calculation of Buffer Size",
      "abstraction": "Base",
      "score": 0.49133027961358705,
      "original_score": 0.49133027961358705,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "124",
      "name": "Buffer Underwrite ('Buffer Underflow')",
      "abstraction": "Base",
      "score": 0.4902001469338648,
      "original_score": 0.4902001469338648,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1260",
      "name": "Improper Handling of Overlap Between Protected Memory Ranges",
      "abstraction": "Base",
      "score": 0.48971215263534046,
      "original_score": 0.48971215263534046,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "366",
      "name": "Race Condition within a Thread",
      "abstraction": "Base",
      "score": 0.47515733867075516,
      "original_score": 0.47515733867075516,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "abstraction": "Variant",
      "score": 0.46677834641683774,
      "original_score": 0.46677834641683774,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "abstraction": "Class",
      "score": 0.4665872034264401,
      "original_score": 0.4665872034264401,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "127",
      "name": "Buffer Under-read",
      "abstraction": "Variant",
      "score": 0.4587019391426843,
      "original_score": 0.4587019391426843,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "abstraction": "Base",
      "score": 0.4574594461666129,
      "original_score": 0.4574594461666129,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1252",
      "name": "CPU Hardware Not Configured to Support Exclusivity of Write and Execute Operations",
      "abstraction": "Base",
      "score": 0.4563262563060234,
      "original_score": 0.4563262563060234,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1342",
      "name": "Information Exposure through Microarchitectural State after Transient Execution",
      "abstraction": "Base",
      "score": 0.4560848492879601,
      "original_score": 0.4560848492879601,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "abstraction": "Base",
      "score": 0.45553628775360583,
      "original_score": 0.45553628775360583,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "782",
      "name": "Exposed IOCTL with Insufficient Access Control",
      "abstraction": "Variant",
      "score": 0.4546256495589342,
      "original_score": 0.4546256495589342,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "786",
      "name": "Access of Memory Location Before Start of Buffer",
      "abstraction": "Base",
      "score": 0.45447684899083163,
      "original_score": 0.45447684899083163,
      "mapping_usage": "Discouraged"
    }
  ],
  "statistics": {
    "min": 0.45447684899083163,
    "max": 0.5100563759774299,
    "mean": 0.4789876747307364,
    "median": 0.4824347456530478,
    "count": 20
  }
}