{
  "method": "sparse_base",
  "query": "In the Linux kernel, the following vulnerability has been resolved btrfs fix uninitialized pointer free on read_alloc_one_name() error The function read_alloc_one_name() does not initialize the name field of the passed fscrypt_str struct if kmalloc fails to allocate the corresponding buffer. Thus, it is not guaranteed that fscrypt_str.name is initialized when freeing it. This is a follow-up to the linked patch that fixes the remaining instances of the bug introduced by commit e43eec81c516 (btrfs use struct qstr instead of name and namelen pairs).",
  "keyphrases": {
    "base_query": "In the Linux kernel, the following vulnerability has been resolved btrfs fix uninitialized pointer free on read_alloc_one_name() error The function read_alloc_one_name() does not initialize the name field of the passed fscrypt_str struct if kmalloc fails to allocate the corresponding buffer. Thus, it is not guaranteed that fscrypt_str.name is initialized when freeing it. This is a follow-up to the linked patch that fixes the remaining instances of the bug introduced by commit e43eec81c516 (btrfs use struct qstr instead of name and namelen pairs)."
  },
  "timestamp": "2025-07-12T05:27:18.124231",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "909",
      "name": "Missing Initialization of Resource",
      "score": 170.72590641016893
    },
    {
      "doc_id": "667",
      "name": "Improper Locking",
      "score": 154.90325639024996
    },
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 148.67955378894823
    },
    {
      "doc_id": "252",
      "name": "Unchecked Return Value",
      "score": 148.3479695756578
    },
    {
      "doc_id": "125",
      "name": "Out-of-bounds Read",
      "score": 146.19735187093994
    }
  ]
}