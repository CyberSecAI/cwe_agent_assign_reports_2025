{
  "query": "Hoverfly is a lightweight service virtualization/ API simulation / API mocking tool for developers and testers. The `/api/v2/simulation` POST handler allows users to create new simulation views from the contents of a user-specified file. This feature can be abused by an attacker to read arbitrary files from the Hoverfly server. Note that, although the code prevents absolute paths from being specified, an attacker can escape out of the `hf.Cfg.ResponsesBodyFilesPath` base path by using `../` segments and reach any arbitrary files. This issue was found using the Uncontrolled data used in path expression CodeQL query for python. Users are advised to make sure the final path (`filepath.Join(hf.Cfg.ResponsesBodyFilesPath, filePath)`) is contained within the expected base path (`filepath.Join(hf.Cfg.ResponsesBodyFilesPath, /)`). This issue is also tracked as GHSL-2023-274.",
  "count": 20,
  "results": [
    {
      "cwe_id": "444",
      "name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')",
      "abstraction": "Base",
      "score": 0.4142274586103186,
      "original_score": 0.4142274586103186,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "25",
      "name": "Path Traversal: '/../filedir'",
      "abstraction": "Variant",
      "score": 0.4114691156452748,
      "original_score": 0.4114691156452748,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "24",
      "name": "Path Traversal: '../filedir'",
      "abstraction": "Variant",
      "score": 0.40677063958172,
      "original_score": 0.40677063958172,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "57",
      "name": "Path Equivalence: 'fakedir/../realdir/filename'",
      "abstraction": "Variant",
      "score": 0.4029786972417888,
      "original_score": 0.4029786972417888,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1007",
      "name": "Insufficient Visual Distinction of Homoglyphs Presented to User",
      "abstraction": "Base",
      "score": 0.39604472603489305,
      "original_score": 0.39604472603489305,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "50",
      "name": "Path Equivalence: '//multiple/leading/slash'",
      "abstraction": "Variant",
      "score": 0.394380308184726,
      "original_score": 0.394380308184726,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "36",
      "name": "Absolute Path Traversal",
      "abstraction": "Base",
      "score": 0.3940538501239469,
      "original_score": 0.3940538501239469,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "49",
      "name": "Path Equivalence: 'filename/' (Trailing Slash)",
      "abstraction": "Variant",
      "score": 0.377127014008341,
      "original_score": 0.377127014008341,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "55",
      "name": "Path Equivalence: '/./' (Single Dot Directory)",
      "abstraction": "Variant",
      "score": 0.3735109448851579,
      "original_score": 0.3735109448851579,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "56",
      "name": "Path Equivalence: 'filedir*' (Wildcard)",
      "abstraction": "Variant",
      "score": 0.37228923272671377,
      "original_score": 0.37228923272671377,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "54",
      "name": "Path Equivalence: 'filedir\\' (Trailing Backslash)",
      "abstraction": "Variant",
      "score": 0.355745076534038,
      "original_score": 0.355745076534038,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "46",
      "name": "Path Equivalence: 'filename ' (Trailing Space)",
      "abstraction": "Variant",
      "score": 0.35511487402631325,
      "original_score": 0.35511487402631325,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "26",
      "name": "Path Traversal: '/dir/../filename'",
      "abstraction": "Variant",
      "score": 0.35360819116171915,
      "original_score": 0.35360819116171915,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "51",
      "name": "Path Equivalence: '/multiple//internal/slash'",
      "abstraction": "Variant",
      "score": 0.35268954038037836,
      "original_score": 0.35268954038037836,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "47",
      "name": "Path Equivalence: ' filename' (Leading Space)",
      "abstraction": "Variant",
      "score": 0.3522861897138507,
      "original_score": 0.3522861897138507,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "35",
      "name": "Path Traversal: '.../...//'",
      "abstraction": "Variant",
      "score": 0.3514890145688542,
      "original_score": 0.3514890145688542,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "646",
      "name": "Reliance on File Name or Extension of Externally-Supplied File",
      "abstraction": "Variant",
      "score": 0.35123956235264453,
      "original_score": 0.35123956235264453,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "45",
      "name": "Path Equivalence: 'file...name' (Multiple Internal Dot)",
      "abstraction": "Variant",
      "score": 0.35007238479688174,
      "original_score": 0.35007238479688174,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "27",
      "name": "Path Traversal: 'dir/../../filename'",
      "abstraction": "Variant",
      "score": 0.3485613019610726,
      "original_score": 0.3485613019610726,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "204",
      "name": "Observable Response Discrepancy",
      "abstraction": "Base",
      "score": 0.3482683528983085,
      "original_score": 0.3482683528983085,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 0.3482683528983085,
    "max": 0.4142274586103186,
    "mean": 0.37309632377184704,
    "median": 0.36401715463037587,
    "count": 20
  }
}