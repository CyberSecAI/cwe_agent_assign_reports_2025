{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved drm/xe Only use reserved BCS instances for usm migrate exec queue The GuC context scheduling queue is 2 entires deep, thus it is possible for a migration job to be stuck behind a fault if migration exec queue shares engines with user jobs. This can deadlock as the migrate exec queue is required to service page faults. Avoid deadlock by only using reserved BCS instances for usm migrate exec queue. (cherry picked from commit 04f4a70a183a688a60fe3882d6e4236ea02cfc67)",
  "keyphrases": {
    "rootcause": [
      "The GuC context scheduling queue is 2 entires deep",
      "thus it is possible for a migration job to be stuck behind a fault if migration exec queue shares engines with user jobs"
    ]
  },
  "timestamp": "2025-07-12 02:14:49",
  "cve_id": "CVE-2024-37026",
  "result_count": 13,
  "results": [
    {
      "cwe_id": "606",
      "name": "Unchecked Input for Loop Condition",
      "score": 538.9928246117523,
      "search_source": "rootcause:thus it is possible for a migration job to be stuck behind a fault if migration exec queue shares engines with user jobs"
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "score": 465.49843457394627,
      "search_source": "rootcause:thus it is possible for a migration job to be stuck behind a fault if migration exec queue shares engines with user jobs"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 457.0832639456962,
      "search_source": "rootcause:thus it is possible for a migration job to be stuck behind a fault if migration exec queue shares engines with user jobs"
    },
    {
      "cwe_id": "256",
      "name": "Plaintext Storage of a Password",
      "score": 455.9826114975801,
      "search_source": "rootcause:thus it is possible for a migration job to be stuck behind a fault if migration exec queue shares engines with user jobs"
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "score": 454.94668795585096,
      "search_source": "rootcause:thus it is possible for a migration job to be stuck behind a fault if migration exec queue shares engines with user jobs"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "score": 437.7444009068631,
      "search_source": "rootcause:thus it is possible for a migration job to be stuck behind a fault if migration exec queue shares engines with user jobs"
    },
    {
      "cwe_id": "1336",
      "name": "Improper Neutralization of Special Elements Used in a Template Engine",
      "score": 434.29548696767006,
      "search_source": "rootcause:thus it is possible for a migration job to be stuck behind a fault if migration exec queue shares engines with user jobs"
    },
    {
      "cwe_id": "99",
      "name": "Improper Control of Resource Identifiers ('Resource Injection')",
      "score": 433.3458270322484,
      "search_source": "rootcause:thus it is possible for a migration job to be stuck behind a fault if migration exec queue shares engines with user jobs"
    },
    {
      "cwe_id": "138",
      "name": "Improper Neutralization of Special Elements",
      "score": 431.38718766662475,
      "search_source": "rootcause:thus it is possible for a migration job to be stuck behind a fault if migration exec queue shares engines with user jobs"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 429.92672765395537,
      "search_source": "rootcause:thus it is possible for a migration job to be stuck behind a fault if migration exec queue shares engines with user jobs"
    },
    {
      "cwe_id": "774",
      "name": "Allocation of File Descriptors or Handles Without Limits or Throttling",
      "score": 359.3721538833165,
      "search_source": "rootcause:The GuC context scheduling queue is 2 entires deep"
    },
    {
      "cwe_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "score": 352.4817937833139,
      "search_source": "rootcause:The GuC context scheduling queue is 2 entires deep"
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "score": 109.5814255014133,
      "search_source": "base_query"
    }
  ]
}