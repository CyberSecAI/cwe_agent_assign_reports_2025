{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved soc qcom cmd-db Map shared memory as WC, not WB Linux does not write into cmd-db region. This region of memory is write protected by XPU. XPU may sometime falsely detect clean cache eviction as write into the write protected region leading to secure interrupt which causes an endless loop somewhere in Trust Zone. The only reason it is working right now is because Qualcomm Hypervisor maps the same region as Non-Cacheable memory in Stage 2 translation tables. The issue manifests if we want to use another hypervisor (like Xen or KVM), which does not know anything about those specific mappings. Changing the mapping of cmd-db memory from MEMREMAP_WB to MEMREMAP_WT/WC removes dependency on correct mappings in Stage 2 tables. This patch fixes the issue by updating the mapping to MEMREMAP_WC. I tested this on SA8155P with Xen.",
  "keyphrases": {
    "rootcause": [
      "improper cache-write protection"
    ]
  },
  "timestamp": "2025-07-13 17:35:31",
  "cve_id": "CVE-2024-46689",
  "result_count": 11,
  "results": [
    {
      "cwe_id": "404",
      "name": "Improper Resource Shutdown or Release",
      "score": 755.0793701450756,
      "search_source": "rootcause:improper cache-write protection"
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "score": 718.0959573961507,
      "search_source": "rootcause:improper cache-write protection"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 656.1264469999841,
      "search_source": "rootcause:improper cache-write protection"
    },
    {
      "cwe_id": "1257",
      "name": "Improper Access Control Applied to Mirrored or Aliased Memory Regions",
      "score": 656.0632766804599,
      "search_source": "rootcause:improper cache-write protection"
    },
    {
      "cwe_id": "61",
      "name": "UNIX Symbolic Link (Symlink) Following",
      "score": 636.8123509879022,
      "search_source": "rootcause:improper cache-write protection"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "score": 632.0041870560076,
      "search_source": "rootcause:improper cache-write protection"
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "score": 627.3376298908189,
      "search_source": "rootcause:improper cache-write protection"
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "score": 621.0903787155909,
      "search_source": "rootcause:improper cache-write protection"
    },
    {
      "cwe_id": "787",
      "name": "Out-of-bounds Write",
      "score": 618.3802684711112,
      "search_source": "rootcause:improper cache-write protection"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "score": 618.2025146282169,
      "search_source": "rootcause:improper cache-write protection"
    },
    {
      "cwe_id": "754",
      "name": "Improper Check for Unusual or Exceptional Conditions",
      "score": 201.57181183433576,
      "search_source": "base_query"
    }
  ]
}