{
  "query": "In the Linux kernel, the following vulnerability has been resolved firmware qcom scm Cleanup global __scm on probe failures If SCM driver fails the probe, it should not leave global __scm variable assigned, because external users of this driver will assume the probe finished successfully. For example TZMEM parts (__scm->mempool) are initialized later in the probe, but users of it (__scm_smc_call()) rely on the __scm variable. This fixes theoretical NULL pointer exception, triggered via introducing probe deferral in SCM driver with call trace qcom_tzmem_alloc+0x70/0x1ac (P) qcom_tzmem_alloc+0x64/0x1ac (L) qcom_scm_assign_mem+0x78/0x194 qcom_rmtfs_mem_probe+0x2d4/0x38c platform_probe+0x68/0xc8",
  "count": 12,
  "results": [
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "abstraction": "Base",
      "score": 376.87580741397284,
      "original_score": 376.87580741397284,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 362.98169127008987,
      "original_score": 362.98169127008987,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "abstraction": "Class",
      "score": 350.7479264918405,
      "original_score": 350.7479264918405,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "252",
      "name": "Unchecked Return Value",
      "abstraction": "Base",
      "score": 349.0672843658107,
      "original_score": 349.0672843658107,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "abstraction": "Base",
      "score": 331.89956504046796,
      "original_score": 331.89956504046796,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "415",
      "name": "Double Free",
      "abstraction": "Variant",
      "score": 329.8665823356007,
      "original_score": 329.8665823356007,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "abstraction": "Class",
      "score": 321.0301987672893,
      "original_score": 321.0301987672893,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "665",
      "name": "Improper Initialization",
      "abstraction": "Class",
      "score": 318.483023270554,
      "original_score": 318.483023270554,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "abstraction": "Base",
      "score": 314.39678968439546,
      "original_score": 314.39678968439546,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "822",
      "name": "Untrusted Pointer Dereference",
      "abstraction": "Base",
      "score": 307.62167344837786,
      "original_score": 307.62167344837786,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1419",
      "name": "Incorrect Initialization of Resource",
      "abstraction": "Class",
      "score": 105.24379753261617,
      "original_score": 105.24379753261617,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "abstraction": "Variant",
      "score": 105.14700885708496,
      "original_score": 105.14700885708496,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 105.14700885708496,
    "max": 376.87580741397284,
    "mean": 297.780112373175,
    "median": 325.44839055144496,
    "count": 12
  }
}