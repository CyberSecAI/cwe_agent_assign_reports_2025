{
  "method": "sparse_combined",
  "query": "In the Linux kernel, the following vulnerability has been resolved firmware qcom scm Cleanup global __scm on probe failures If SCM driver fails the probe, it should not leave global __scm variable assigned, because external users of this driver will assume the probe finished successfully. For example TZMEM parts (__scm->mempool) are initialized later in the probe, but users of it (__scm_smc_call()) rely on the __scm variable. This fixes theoretical NULL pointer exception, triggered via introducing probe deferral in SCM driver with call trace qcom_tzmem_alloc+0x70/0x1ac (P) qcom_tzmem_alloc+0x64/0x1ac (L) qcom_scm_assign_mem+0x78/0x194 qcom_rmtfs_mem_probe+0x2d4/0x38c platform_probe+0x68/0xc8",
  "keyphrases": {
    "weakness": [
      "NULL pointer exception"
    ]
  },
  "timestamp": "2025-07-12T06:58:25.198908",
  "results_count": 12,
  "results_summary": [
    {
      "doc_id": "476",
      "name": "NULL Pointer Dereference",
      "score": 376.87580741397284
    },
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 362.98169127008987
    },
    {
      "doc_id": "909",
      "name": "Missing Initialization of Resource",
      "score": 350.7479264918405
    },
    {
      "doc_id": "252",
      "name": "Unchecked Return Value",
      "score": 349.0672843658107
    },
    {
      "doc_id": "908",
      "name": "Use of Uninitialized Resource",
      "score": 331.89956504046796
    }
  ]
}