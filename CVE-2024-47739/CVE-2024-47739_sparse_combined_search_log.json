{
  "method": "sparse_combined",
  "query": "In the Linux kernel, the following vulnerability has been resolved padata use integer wrap around to prevent deadlock on seq_nr overflow When submitting more than 2^32 padata objects to padata_do_serial, the current sorting implementation incorrectly sorts padata objects with overflowed seq_nr, causing them to be placed before existing objects in the reorder list. This leads to a deadlock in the serialization process as padata_find_next cannot match padata->seq_nr and pd->processed because the padata instance with overflowed seq_nr will be selected next. To fix this, we use an unsigned integer wrap around to correctly sort padata objects in scenarios with integer overflow.",
  "keyphrases": {
    "rootcause": [
      "incorrect padata sorting implementation"
    ],
    "weakness": [
      "integer overflow"
    ]
  },
  "timestamp": "2025-07-12T05:00:04.468598",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "190",
      "name": "Integer Overflow or Wraparound",
      "score": 800.0
    },
    {
      "doc_id": "681",
      "name": "Incorrect Conversion between Numeric Types",
      "score": 494.55751716426016
    },
    {
      "doc_id": "191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "score": 481.02515469591856
    },
    {
      "doc_id": "295",
      "name": "Improper Certificate Validation",
      "score": 472.68252079689853
    },
    {
      "doc_id": "125",
      "name": "Out-of-bounds Read",
      "score": 468.2348708157066
    }
  ]
}