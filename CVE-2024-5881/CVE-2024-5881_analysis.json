{
  "cve_id": "CVE-2024-5881",
  "description": "The Webico Slider Flatsome Addons plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugins wbc_image shortcode in all versions up to, and including, 2.0.1 due to **insufficient input sanitization and output escaping on user supplied attributes**. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
  "key_phrases": {
    "rootcause": "insufficient input sanitization and output escaping on user supplied attributes",
    "weakness": "cross-site scripting",
    "impact": "inject arbitrary web scripts",
    "vector": "",
    "attacker": "authenticated attackers with contributor-level access and above",
    "product": "Webico Slider Flatsome Addons plugin for WordPress",
    "version": "up to and including 2.0.1",
    "component": "wbc_image shortcode"
  },
  "reference_content": "Based on the provided content, here's a breakdown of the vulnerability:\n\n**Root cause of vulnerability:**\n*   The vulnerability stems from insufficient input sanitization and output escaping of user-supplied attributes within the `wbc_image` shortcode of the Webico Slider Flatsome Addons plugin.\n\n**Weaknesses/vulnerabilities present:**\n*   **Stored Cross-Site Scripting (XSS):** The plugin fails to properly sanitize and escape user-provided attributes, allowing an attacker to inject arbitrary web scripts. Specifically, the attributes of the `wbc_image` shortcode are vulnerable.\n\n**Impact of exploitation:**\n*   An attacker can inject malicious JavaScript code into pages. When a user visits the page containing the injected script, the malicious code will execute within their browser. This could lead to various impacts, including:\n    *   Stealing user session cookies\n    *   Redirecting users to malicious sites\n    *   Defacing the website\n    *   Performing actions on behalf of the user\n\n**Attack vectors:**\n*   The attack vector is through the `wbc_image` shortcode. An authenticated user with contributor-level access or higher can insert the malicious code using the shortcode attributes.\n\n**Required attacker capabilities/position:**\n*   **Authentication:** The attacker must have an account on the WordPress site with at least contributor-level privileges. This level of access allows users to create and edit posts, where they can include shortcodes.\n*   **Shortcode knowledge:** The attacker must be able to utilize shortcodes and be aware of the `wbc_image` shortcode parameters to inject the malicious code.\n\n**Additional Details:**\n*   The vulnerability exists in all versions of the Webico Slider Flatsome Addons plugin up to and including 2.0.1.\n*   The vulnerable code is located in the `wbc_slider.php` file, specifically within the `wbc_image` function.\n*   The `extract( shortcode_atts(...) )` function is used to extract the shortcode attributes, which is then not properly sanitized or escaped before being included in the HTML output.\n*   The provided code snippet shows the `wbc_image` function extracting several attributes such as `id`, `org_img`, `caption`, `link`, etc. None of these attributes appear to be sanitized before being used.\n*   The Wordfence article recommends uninstalling the plugin as there is no known patch available at the time of writing.\n\nThe provided content gives more detailed information than the basic CVE description, particularly by identifying the affected shortcode, function, and the location of the vulnerable code within the plugin's files.",
  "similar_info": {
    "cwe_distribution": {
      "95": {
        "cwe_counts": {
          "CWE-79": 3
        },
        "total_samples": 5,
        "distribution": [
          {
            "cwes": [
              "CWE-79"
            ],
            "frequency": 3,
            "proportion": 0.6
          },
          {
            "cwes": [],
            "frequency": 2,
            "proportion": 0.4
          }
        ]
      },
      "90": {
        "cwe_counts": {
          "CWE-79": 14
        },
        "total_samples": 24,
        "distribution": [
          {
            "cwes": [
              "CWE-79"
            ],
            "frequency": 14,
            "proportion": 0.583
          },
          {
            "cwes": [],
            "frequency": 10,
            "proportion": 0.417
          }
        ]
      },
      "85": {
        "cwe_counts": {
          "CWE-79": 27
        },
        "total_samples": 39,
        "distribution": [
          {
            "cwes": [
              "CWE-79"
            ],
            "frequency": 27,
            "proportion": 0.692
          },
          {
            "cwes": [],
            "frequency": 12,
            "proportion": 0.308
          }
        ]
      },
      "80": {
        "cwe_counts": {
          "CWE-79": 31
        },
        "total_samples": 54,
        "distribution": [
          {
            "cwes": [
              "CWE-79"
            ],
            "frequency": 31,
            "proportion": 0.574
          },
          {
            "cwes": [],
            "frequency": 23,
            "proportion": 0.426
          }
        ]
      },
      "75": {
        "cwe_counts": {
          "CWE-79": 2
        },
        "total_samples": 5,
        "distribution": [
          {
            "cwes": [],
            "frequency": 3,
            "proportion": 0.6
          },
          {
            "cwes": [
              "CWE-79"
            ],
            "frequency": 2,
            "proportion": 0.4
          }
        ]
      },
      "70": {
        "cwe_counts": {
          "CWE-79": 47,
          "CWE-1321": 1
        },
        "total_samples": 81,
        "distribution": [
          {
            "cwes": [
              "CWE-79"
            ],
            "frequency": 46,
            "proportion": 0.568
          },
          {
            "cwes": [],
            "frequency": 34,
            "proportion": 0.42
          },
          {
            "cwes": [
              "CWE-79",
              "CWE-1321"
            ],
            "frequency": 1,
            "proportion": 0.012
          }
        ]
      }
    },
    "cwe_consensus": "CWE-79",
    "similarity_stats": {
      "thresholds": [
        95,
        90,
        85,
        80,
        75,
        70
      ],
      "total_samples_by_threshold": {
        "95": 5,
        "90": 24,
        "85": 39,
        "80": 54,
        "75": 5,
        "70": 81
      },
      "top_cwes_by_threshold": {
        "95": [
          [
            "CWE-79",
            3
          ]
        ],
        "90": [
          [
            "CWE-79",
            14
          ]
        ],
        "85": [
          [
            "CWE-79",
            27
          ]
        ],
        "80": [
          [
            "CWE-79",
            31
          ]
        ],
        "75": [
          [
            "CWE-79",
            2
          ]
        ],
        "70": [
          [
            "CWE-79",
            47
          ],
          [
            "CWE-1321",
            1
          ]
        ]
      }
    },
    "raw_matches": [
      {
        "similarity": 95,
        "cwes": [
          "79"
        ],
        "total": 5,
        "frequency": 3,
        "proportion": 0.6
      },
      {
        "similarity": 95,
        "cwes": [],
        "total": 5,
        "frequency": 2,
        "proportion": 0.4
      },
      {
        "similarity": 90,
        "cwes": [
          "79"
        ],
        "total": 24,
        "frequency": 14,
        "proportion": 0.583
      },
      {
        "similarity": 90,
        "cwes": [],
        "total": 24,
        "frequency": 10,
        "proportion": 0.417
      },
      {
        "similarity": 85,
        "cwes": [
          "79"
        ],
        "total": 39,
        "frequency": 27,
        "proportion": 0.692
      },
      {
        "similarity": 85,
        "cwes": [],
        "total": 39,
        "frequency": 12,
        "proportion": 0.308
      },
      {
        "similarity": 80,
        "cwes": [
          "79"
        ],
        "total": 54,
        "frequency": 31,
        "proportion": 0.574
      },
      {
        "similarity": 80,
        "cwes": [],
        "total": 54,
        "frequency": 23,
        "proportion": 0.426
      },
      {
        "similarity": 75,
        "cwes": [],
        "total": 5,
        "frequency": 3,
        "proportion": 0.6
      },
      {
        "similarity": 75,
        "cwes": [
          "79"
        ],
        "total": 5,
        "frequency": 2,
        "proportion": 0.4
      },
      {
        "similarity": 70,
        "cwes": [
          "79"
        ],
        "total": 81,
        "frequency": 46,
        "proportion": 0.568
      },
      {
        "similarity": 70,
        "cwes": [],
        "total": 81,
        "frequency": 34,
        "proportion": 0.42
      },
      {
        "similarity": 70,
        "cwes": [
          "79",
          "1321"
        ],
        "total": 81,
        "frequency": 1,
        "proportion": 0.012
      }
    ]
  },
  "similarity_summary": {
    "consensus_cwe": "CWE-79",
    "top_cwes": [
      [
        "CWE-79",
        124
      ],
      [
        "CWE-1321",
        1
      ]
    ],
    "confidence_levels": {
      "high": [],
      "medium": [],
      "low": []
    },
    "total_samples": 208
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Primary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship is the direct match of the vulnerability description to CWE-79, indicating **improper neutralization of input**. No other relationships significantly impacted the decision. CWE-79 is at the Base level of abstraction, which is appropriate for this vulnerability.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    \n    class cwe79 primary\n```\n\n## Vulnerability Chain\nThe chain of events is as follows:\n1.  **Root Cause:** Insufficient input sanitization and output escaping of user-supplied attributes in the `wbc_image` shortcode.\n2.  **Weakness:** Stored Cross-Site Scripting (XSS) vulnerability.\n3.  **Impact:** Attackers can inject arbitrary web scripts into pages, leading to potential session theft, redirection to malicious sites, or website defacement.\n\n## Summary of Analysis\nThe primary vulnerability is Stored Cross-Site Scripting (XSS) due to **insufficient input sanitization and output escaping** on user-supplied attributes. This aligns directly with CWE-79 \"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\". The vulnerability description clearly states that the plugin fails to properly sanitize and escape user-provided attributes in the `wbc_image` shortcode, allowing attackers to inject arbitrary web scripts. The provided content gives more detailed information than the basic CVE description, particularly by identifying the affected shortcode, function, and the location of the vulnerable code within the plugin's files.\n\nThe evidence supporting this decision comes from the \"Vulnerability Description Key Phrases\" which includes \"**insufficient input sanitization and output escaping on user supplied attributes**\" as the root cause and \"**cross-site scripting**\" as the weakness. Additionally, the \"CVE Reference Links Content Summary\" explicitly mentions the lack of proper sanitization and escaping within the `wbc_image` shortcode. This confirms that the root cause is improper neutralization of input leading to XSS.\n\nOther CWEs such as CWE-116 (Improper Encoding or Escaping of Output), CWE-352 (Cross-Site Request Forgery (CSRF)), CWE-434 (Unrestricted Upload of File with Dangerous Type) and CWE-96 (Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')) were considered. However, these CWEs do not accurately reflect the specific vulnerability of XSS resulting from the **insufficient input sanitization and output escaping** in the given context. Therefore, CWE-79 is the most appropriate and specific CWE for this vulnerability.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Primary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship is the direct match of the vulnerability description to CWE-79, indicating **improper neutralization of input**. No other relationships significantly impacted the decision. CWE-79 is at the Base level of abstraction, which is appropriate for this vulnerability.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    \n    class cwe79 primary\n```\n\n## Vulnerability Chain\nThe chain of events is as follows:\n1.  **Root Cause:** Insufficient input sanitization and output escaping of user-supplied attributes in the `wbc_image` shortcode.\n2.  **Weakness:** Stored Cross-Site Scripting (XSS) vulnerability.\n3.  **Impact:** Attackers can inject arbitrary web scripts into pages, leading to potential session theft, redirection to malicious sites, or website defacement.\n\n## Summary of Analysis\nThe primary vulnerability is Stored Cross-Site Scripting (XSS) due to **insufficient input sanitization and output escaping** on user-supplied attributes. This aligns directly with CWE-79 \"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\". The vulnerability description clearly states that the plugin fails to properly sanitize and escape user-provided attributes in the `wbc_image` shortcode, allowing attackers to inject arbitrary web scripts. The provided content gives more detailed information than the basic CVE description, particularly by identifying the affected shortcode, function, and the location of the vulnerable code within the plugin's files.\n\nThe evidence supporting this decision comes from the \"Vulnerability Description Key Phrases\" which includes \"**insufficient input sanitization and output escaping on user supplied attributes**\" as the root cause and \"**cross-site scripting**\" as the weakness. Additionally, the \"CVE Reference Links Content Summary\" explicitly mentions the lack of proper sanitization and escaping within the `wbc_image` shortcode. This confirms that the root cause is improper neutralization of input leading to XSS.\n\nOther CWEs such as CWE-116 (Improper Encoding or Escaping of Output), CWE-352 (Cross-Site Request Forgery (CSRF)), CWE-434 (Unrestricted Upload of File with Dangerous Type) and CWE-96 (Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')) were considered. However, these CWEs do not accurately reflect the specific vulnerability of XSS resulting from the **insufficient input sanitization and output escaping** in the given context. Therefore, CWE-79 is the most appropriate and specific CWE for this vulnerability.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n**Chain starting from CWE-79:**\n- 79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 546.3003687309659
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 529.1595871002354
    },
    {
      "metadata": {
        "doc_id": "138",
        "name": "Improper Neutralization of Special Elements",
        "source": "sparse"
      },
      "similarity": 480.3426771258969
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 464.5941766376561
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 411.9745270339164
    },
    {
      "metadata": {
        "doc_id": "790",
        "name": "Improper Filtering of Special Elements",
        "source": "sparse"
      },
      "similarity": 403.58526553777926
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 389.8776237156317
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse"
      },
      "similarity": 385.54940703332295
    },
    {
      "metadata": {
        "doc_id": "96",
        "name": "Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')",
        "type": "Base",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before inserting the input into an executable resource, such as a library, configuration file, or template.",
        "keyphrase_source": "rootcause:insufficient input sanitization",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5222050754519136,
            "graph": 1.6243433684580115
          }
        }
      },
      "similarity": 0.5222050754519136
    },
    {
      "doc_id": "494",
      "text": "CWE-494: Download of Code Without Integrity Check",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "494",
        "name": "Download of Code Without Integrity Check",
        "type": "base",
        "original_content": "CWE-494: Download of Code Without Integrity Check",
        "relationships": [
          {
            "source_id": "494",
            "target_id": "79",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "494",
            "target_id": "669",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "494",
            "target_id": "669",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "494",
            "target_id": "345",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "494",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "669",
            "target_id": "494",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "345",
            "target_id": "494",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "79",
                  "494",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "79"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "79",
                  "494",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "79"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-116",
      "CWE-79",
      "CWE-352",
      "CWE-96",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}