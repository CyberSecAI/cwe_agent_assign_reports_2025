{
  "cve_id": "CVE-2025-27794",
  "description": "Flarum is open-source forum software. A session hijacking vulnerability exists in versions prior to 1.8.10 when an attacker-controlled authoritative subdomain under a parent domain (e.g., `subdomain.host.com`) sets cookies scoped to the parent domain (`.host.com`). This allows session token replacement for applications hosted on sibling subdomains (e.g., `community.host.com`) if session tokens arent rotated post-authentication. Key Constraints are that the attacker must control any subdomain under the parent domain (e.g., `evil.host.com` or `x.y.host.com`), and the parent domain must not be on the Public Suffix List. Due to **non-existent session token rotation after authenticating** we can theoretically reproduce the vulnerability by using browser dev tools, but due to the browsers security measures this does not seem to be exploitable as described. Version 1.8.10 contains a patch for the issue.",
  "key_phrases": {
    "component": "",
    "rootcause": "non-existent session token rotation after authenticating",
    "vector": "",
    "weakness": "cross-site scripting, session hijacking vulnerability",
    "product": "Flarum",
    "impact": "session token replacement",
    "attacker": "attacker-controlled authoritative subdomain",
    "version": "versions prior to 1.8.10"
  },
  "reference_content": "## Analysis of CVE-2025-27794 related content\n\nHere's an analysis of the provided content, focusing on relevance to CVE-2025-27794, and extracting key information.\n\n**1. Relevance Verification:**\n\nThe content directly addresses a session hijacking vulnerability in the Flarum framework, matching the CVE description's focus on session hijacking. The CVE ID (CVE-2025-27794) is also explicitly mentioned in the security advisory.\n\n**2. Extracted Information:**\n\n*   **Root cause of vulnerability:** An attacker-controlled authoritative subdomain can overwrite cookies scoped to the parent domain, allowing session token replacement. This is possible when session tokens are not rotated after authentication.\n*   **Weaknesses/vulnerabilities present:**\n    *   Lack of session token rotation after authentication.\n    *   Cookie scoping vulnerabilities allowing subdomain cookie overwrite to the parent domain.\n*   **Impact of exploitation:** Account takeover, data exposure (email, private messages, etc.).\n*   **Attack vectors:**\n    1.  Attacker hosts a server on an authoritative subdomain of the target domain (e.g., `evil.host.com`).\n    2.  Attacker obtains a valid session token from the target domain (e.g., `community.host.com`).\n    3.  Victim visits the attacker's subdomain.\n    4.  Attacker's server sets a cookie with the stolen token, scoped to the parent domain.\n    5.  Victim's subsequent requests to the target domain use the attacker's token, resulting in session hijacking.\n*   **Required attacker capabilities/position:**\n    *   Control over an authoritative subdomain of the target domain.\n    *   Ability to set cookies on the parent domain.\n    *   The parent domain must *not* be on the Public Suffix List (PSL).\n*   **Mitigation or fix:**\n    1.  **Session Token Rotation:** Invalidate and regenerate session tokens after authentication.\n    2.  **Cookie Scoping:** Restrict cookies to explicit subdomains (e.g., `Domain=community.host.com`).\n    3.  **Public Suffix Registration:** Add the parent domain to the Public Suffix List.\n*   **Patched versions:** 1.8.10\n*   **Affected versions:** < 1.8.10\n*   **CVSS:** 6.8/10 (Moderate)\n    *   AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:N\n\n**3. Additional Details:**\n\n*   The content provides more detail than the placeholder CVE description. It includes a proof-of-concept (Deno code), explains why reverse DNS subdomains fail, and details browser security behavior related to cookie handling.\n*   The commit `a05aaea` includes a change to invalidate and regenerate the session token when a new token is detected, addressing the vulnerability.\n*   The advisory clarifies the conditions under which the vulnerability is exploitable, specifically the requirement for the parent domain not to be on the Public Suffix List.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID  | CWE Name                                                                 | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :----------------------------------------------------------------------- | :----------- | :---------------------- | :------------------------------ | :-------------------------------- |\n| CWE-613   | Insufficient Session Expiration                                        | 0.9          | Base                    | Allowed                         | Primary CWE                       |\n| CWE-287   | Improper Authentication                                                  | 0.7          | Class                   | Discouraged                     | Secondary Candidate               |\n| CWE-384   | Session Fixation                                                         | 0.6          | Compound                | Allowed                         | Secondary Candidate               |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary relationship influencing the choice of CWE-613 is its connection to session management and the **non-existent session token rotation after authenticating**, which effectively extends the session indefinitely. The other CWEs considered, such as CWE-287 and CWE-384, relate to broader authentication issues but do not specifically capture the session expiration aspect. While CWE-287 (Improper Authentication) is a parent of CWE-306 (Missing Authentication for Critical Function) and CWE-290 (Authentication Bypass by Spoofing), it's less specific than CWE-613. CWE-384 is a compound weakness related to session fixation, which involves more than just the lack of session expiration.\n\n```mermaid\ngraph TD\n    cwe613[\"CWE-613: Insufficient Session Expiration\"]\n    cwe287[\"CWE-287: Improper Authentication\"]\n    cwe384[\"CWE-384: Session Fixation\"]\n\n    cwe613 -->|CHILDOF| cwe672[\"CWE-672: Operation on a Resource\"]\n    cwe287 -->|CHILDOF| cwe287\n    cwe384 -->|CHILDOF| cwe610[\"CWE-610: Insufficient Transport Layer Protection\"]\n    cwe613 -->|CANPRECEDE| cwe287\n    cwe384 -->|REQUIRES| cwe472[\"CWE-472: External Control of Assumed-Immutable Web Parameter\"]\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe613 primary\n    class cwe287,cwe384 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain begins with the **root cause**, which is the **non-existent session token rotation after authenticating**. This leads to a session hijacking vulnerability because once a session is established, the token remains valid indefinitely (or until the user explicitly logs out), making it vulnerable to theft and reuse. The chain can be summarized as follows:\n\n1.  **Root Cause:** **Non-existent session token rotation after authenticating**. (CWE-613)\n2.  **Weakness:** Persistent session token.\n3.  **Impact:** Session hijacking, leading to potential account takeover and data exposure.\n\n## Summary of Analysis\n\nThe primary focus of this vulnerability is the **non-existent session token rotation after authenticating**, which means the session is vulnerable due to the session tokens not expiring. The analysis is based on the provided vulnerability description, which explicitly mentions this **rootcause**.\n\nThe graph relationships and retriever results helped narrow down the options, but the final decision hinged on the specific details in the vulnerability description. While other CWEs like CWE-287 (Improper Authentication) and CWE-384 (Session Fixation) are related, they don't precisely capture the core issue of session tokens not expiring or being rotated.\n\nCWE-613 (Insufficient Session Expiration) is at the optimal level of specificity because it directly addresses the **rootcause** identified in the description which is the **non-existent session token rotation after authenticating**.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\n\n## CWE-1390: Weak Authentication\n**Abstraction Level**: Class\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nThe product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n*This CWE was not selected because the primary issue isn't about the strength of the authentication mechanism itself, but rather the session management after authentication.*\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*This CWE was not selected because it focuses on the control of parameters, which isn't the primary issue. The vulnerability stems from the **non-existent session token rotation after authenticating**.*\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n*This CWE was not selected because the issue is not about weak credentials, but **non-existent session token rotation after authenticating**.*\n\n## CWE-639: Authorization Bypass Through User-Controlled Key\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*This CWE was not selected because the **rootcause** is the **non-existent session token rotation after authenticating**, not an authorization bypass.*\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*This CWE was not selected because the vulnerability is not related to sensitive information exposure directly but related to the **non-existent session token rotation after authenticating**.*\n\n## CWE-330: Use of Insufficiently Random Values\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n*This CWE was not selected because the vulnerability is not related to randomness of values.*\n\n## CWE-923: Improper Restriction of Communication Channel to Intended Endpoints\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product establishes a communication channel to (or from) an endpoint for privileged or protected operations, but it does not properly ensure that it is communicating with the correct endpoint.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n*This CWE was not selected because the vulnerability is not related to communication channel restrictions.*\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high",
  "analysis_with_relationships": "# Summary\n| CWE ID  | CWE Name                                                                 | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :----------------------------------------------------------------------- | :----------- | :---------------------- | :------------------------------ | :-------------------------------- |\n| CWE-613   | Insufficient Session Expiration                                        | 0.9          | Base                    | Allowed                         | Primary CWE                       |\n| CWE-287   | Improper Authentication                                                  | 0.7          | Class                   | Discouraged                     | Secondary Candidate               |\n| CWE-384   | Session Fixation                                                         | 0.6          | Compound                | Allowed                         | Secondary Candidate               |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary relationship influencing the choice of CWE-613 is its connection to session management and the **non-existent session token rotation after authenticating**, which effectively extends the session indefinitely. The other CWEs considered, such as CWE-287 and CWE-384, relate to broader authentication issues but do not specifically capture the session expiration aspect. While CWE-287 (Improper Authentication) is a parent of CWE-306 (Missing Authentication for Critical Function) and CWE-290 (Authentication Bypass by Spoofing), it's less specific than CWE-613. CWE-384 is a compound weakness related to session fixation, which involves more than just the lack of session expiration.\n\n```mermaid\ngraph TD\n    cwe613[\"CWE-613: Insufficient Session Expiration\"]\n    cwe287[\"CWE-287: Improper Authentication\"]\n    cwe384[\"CWE-384: Session Fixation\"]\n\n    cwe613 -->|CHILDOF| cwe672[\"CWE-672: Operation on a Resource\"]\n    cwe287 -->|CHILDOF| cwe287\n    cwe384 -->|CHILDOF| cwe610[\"CWE-610: Insufficient Transport Layer Protection\"]\n    cwe613 -->|CANPRECEDE| cwe287\n    cwe384 -->|REQUIRES| cwe472[\"CWE-472: External Control of Assumed-Immutable Web Parameter\"]\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe613 primary\n    class cwe287,cwe384 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain begins with the **root cause**, which is the **non-existent session token rotation after authenticating**. This leads to a session hijacking vulnerability because once a session is established, the token remains valid indefinitely (or until the user explicitly logs out), making it vulnerable to theft and reuse. The chain can be summarized as follows:\n\n1.  **Root Cause:** **Non-existent session token rotation after authenticating**. (CWE-613)\n2.  **Weakness:** Persistent session token.\n3.  **Impact:** Session hijacking, leading to potential account takeover and data exposure.\n\n## Summary of Analysis\n\nThe primary focus of this vulnerability is the **non-existent session token rotation after authenticating**, which means the session is vulnerable due to the session tokens not expiring. The analysis is based on the provided vulnerability description, which explicitly mentions this **rootcause**.\n\nThe graph relationships and retriever results helped narrow down the options, but the final decision hinged on the specific details in the vulnerability description. While other CWEs like CWE-287 (Improper Authentication) and CWE-384 (Session Fixation) are related, they don't precisely capture the core issue of session tokens not expiring or being rotated.\n\nCWE-613 (Insufficient Session Expiration) is at the optimal level of specificity because it directly addresses the **rootcause** identified in the description which is the **non-existent session token rotation after authenticating**.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\n\n## CWE-1390: Weak Authentication\n**Abstraction Level**: Class\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nThe product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n*This CWE was not selected because the primary issue isn't about the strength of the authentication mechanism itself, but rather the session management after authentication.*\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*This CWE was not selected because it focuses on the control of parameters, which isn't the primary issue. The vulnerability stems from the **non-existent session token rotation after authenticating**.*\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n*This CWE was not selected because the issue is not about weak credentials, but **non-existent session token rotation after authenticating**.*\n\n## CWE-639: Authorization Bypass Through User-Controlled Key\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*This CWE was not selected because the **rootcause** is the **non-existent session token rotation after authenticating**, not an authorization bypass.*\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*This CWE was not selected because the vulnerability is not related to sensitive information exposure directly but related to the **non-existent session token rotation after authenticating**.*\n\n## CWE-330: Use of Insufficiently Random Values\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n*This CWE was not selected because the vulnerability is not related to randomness of values.*\n\n## CWE-923: Improper Restriction of Communication Channel to Intended Endpoints\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product establishes a communication channel to (or from) an endpoint for privileged or protected operations, but it does not properly ensure that it is communicating with the correct endpoint.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n*This CWE was not selected because the vulnerability is not related to communication channel restrictions.*\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-672:**\n- 672 (Operation on a Resource after Expiration or Release) - ROOT\n\n\n**Chain starting from CWE-1390:**\n- 1390 (Weak Authentication) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "1390",
        "name": "Weak Authentication",
        "source": "sparse"
      },
      "similarity": 722.1956033696912
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 712.3325076128807
    },
    {
      "metadata": {
        "doc_id": "639",
        "name": "Authorization Bypass Through User-Controlled Key",
        "source": "sparse"
      },
      "similarity": 706.3070694528587
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 703.1778764758368
    },
    {
      "metadata": {
        "doc_id": "287",
        "name": "Improper Authentication",
        "source": "sparse"
      },
      "similarity": 693.7170673028126
    },
    {
      "metadata": {
        "doc_id": "327",
        "name": "Use of a Broken or Risky Cryptographic Algorithm",
        "source": "sparse"
      },
      "similarity": 680.4150228298872
    },
    {
      "metadata": {
        "doc_id": "290",
        "name": "Authentication Bypass by Spoofing",
        "source": "sparse"
      },
      "similarity": 675.3310216014618
    },
    {
      "metadata": {
        "doc_id": "330",
        "name": "Use of Insufficiently Random Values",
        "source": "sparse"
      },
      "similarity": 669.2933084150819
    },
    {
      "metadata": {
        "doc_id": "384",
        "name": "Session Fixation",
        "type": "Compound",
        "original_content": "Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.",
        "keyphrase_source": "weakness:cross-site scripting",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.",
          "comments": "While attack-oriented composites are supported in CWE, they have not been a focus of research. There is a chance that future research or CWE scope clarifications will change or deprecate them. Perform root-cause analysis to determine which weaknesses allow session fixation to occur, and map to those weaknesses. For example, predictable session identifiers might enable session fixation attacks to succeed; if this occurs, they might be better characterized as randomness/predictability weaknesses.",
          "reasons": [
            "Other"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5717287944656033,
            "graph": 1.8177711121663325
          }
        }
      },
      "similarity": 0.5717287944656033
    },
    {
      "doc_id": "472",
      "text": "The web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.",
      "score": 0.5828987408837467,
      "metadata": {
        "doc_id": "472",
        "name": "External Control of Assumed-Immutable Web Parameter",
        "type": "Base",
        "extended_description": "\n\nIf a web product does not properly protect assumed-immutable values from modification in hidden form fields, parameters, cookies, or URLs, this can lead to modification of critical data. Web applications often mistakenly make the assumption that data passed to the client in hidden fields or cookies is not susceptible to tampering. Improper validation of data that are user-controllable can lead to the application processing incorrect, and often malicious, input.\n\n\nFor example, custom cookies commonly store session data or persistent data across sessions. This kind of session data is normally involved in security related decisions on the server side, such as user authentication and access control. Thus, the cookies might contain sensitive data such as user credentials and privileges. This is a dangerous practice, as it can often lead to improper reliance on the value of the client-provided cookie by the server side application.\n",
        "alternate_terms": [
          "Assumed-Immutable Parameter Tampering"
        ],
        "original_content": "The web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.",
        "relationships": [
          {
            "source_id": "472",
            "target_id": "656",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "472",
            "target_id": "384",
            "label": "REQUIREDBY",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "472",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "472",
            "target_id": "642",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "656",
            "target_id": "472",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "642",
            "target_id": "472",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "472",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "384",
            "target_id": "472",
            "label": "REQUIRES",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "source": "graph",
        "sources": [
          "vector",
          "graph"
        ],
        "vector_score": 0.5828987408837467,
        "graph_score": 4.212000000000001,
        "score_components": {
          "relationship_chain": 0.9,
          "explicit_mention": 1.0,
          "abstraction_path": 0.9,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "384",
                  "472",
                  "REQUIRES"
                ]
              ],
              "score": 0.9,
              "type": "relationship_chain",
              "source": "384"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "384",
                  "472",
                  "REQUIRES"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "384"
            }
          }
        },
        "is_explicit": true,
        "abstraction_level": "base",
        "position": "after",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5373994720916875,
            "graph": 2.760359496353499
          }
        }
      },
      "similarity": 2.760359496353499
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-672",
      "CWE-1390",
      "CWE-290",
      "CWE-610",
      "CWE-639",
      "CWE-330",
      "CWE-306",
      "CWE-923",
      "CWE-613",
      "CWE-472",
      "CWE-74",
      "CWE-1391",
      "CWE-384",
      "CWE-287",
      "CWE-212"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}