{
  "retriever": "sparse",
  "query": "nimiq/core-rs-albatross is a Rust implementation of the Nimiq Proof-of-Stake protocol based on the Albatross consensus algorithm. The `nimiq-network-libp2p` subcrate of nimiq/core-rs-albatross is vulnerable to a Denial of Service (DoS) attack due to uncontrolled memory allocation. Specifically, the implementation of the `Discovery` network message handling allocates a buffer based on a length value provided by the peer, without enforcing an upper bound. Since this length is a `u32`, a peer can trigger allocations of up to 4 GB, potentially leading to memory exhaustion and node crashes. As Discovery messages are regularly exchanged for peer discovery, this vulnerability can be exploited repeatedly. The patch for this vulnerability is formally released as part of v1.1.0. The patch implements a limit to the discovery message size of 1 MB and also resizes the message buffer size incrementally as the data is read. No known workarounds are available.",
  "keyphrases": {
    "rootcause": [
      "uncontrolled memory allocation"
    ]
  },
  "timestamp": "2025-07-15 01:52:36",
  "cve_id": "CVE-2025-47270",
  "result_count": 10,
  "results": [
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 1028.85971088769,
      "search_source": "rootcause:uncontrolled memory allocation"
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "score": 982.3841835932556,
      "search_source": "rootcause:uncontrolled memory allocation"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 935.2351603445532,
      "search_source": "rootcause:uncontrolled memory allocation"
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "score": 881.7113759330593,
      "search_source": "rootcause:uncontrolled memory allocation"
    },
    {
      "cwe_id": "400",
      "name": "Uncontrolled Resource Consumption",
      "score": 868.8532360726908,
      "search_source": "rootcause:uncontrolled memory allocation"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "score": 865.2018809723852,
      "search_source": "rootcause:uncontrolled memory allocation"
    },
    {
      "cwe_id": "193",
      "name": "Off-by-one Error",
      "score": 851.4597186633307,
      "search_source": "rootcause:uncontrolled memory allocation"
    },
    {
      "cwe_id": "1325",
      "name": "Improperly Controlled Sequential Memory Allocation",
      "score": 844.008320683786,
      "search_source": "rootcause:uncontrolled memory allocation"
    },
    {
      "cwe_id": "674",
      "name": "Uncontrolled Recursion",
      "score": 841.4452438169557,
      "search_source": "rootcause:uncontrolled memory allocation"
    },
    {
      "cwe_id": "119",
      "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
      "score": 821.8732169645906,
      "search_source": "rootcause:uncontrolled memory allocation"
    }
  ]
}