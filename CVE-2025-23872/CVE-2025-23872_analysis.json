{
  "cve_id": "CVE-2025-23872",
  "description": "**Cross-Site Request Forgery** (CSRF) vulnerability in PayForm PayForm allows Stored XSS.This issue affects PayForm from n/a through 2.0.",
  "key_phrases": {
    "component": "",
    "rootcause": "Cross-Site Request Forgery",
    "vector": "",
    "weakness": "Stored XSS, weakness",
    "product": "PayForm PayForm",
    "impact": "",
    "attacker": "",
    "version": "n/a through 2.0"
  },
  "reference_content": "The content relates to CVE-2025-23872.\n\n**Root cause of vulnerability:**\nCross Site Request Forgery (CSRF) vulnerability.\n\n**Weaknesses/vulnerabilities present:**\nCSRF - allows a malicious actor to force higher privileged users to execute unwanted actions under their current authentication.\n\n**Impact of exploitation:**\nA malicious actor can force higher privileged users to execute unwanted actions. Specific impact varies case by case.\n\n**Attack vectors:**\nNot specified in detail, but relies on exploiting the lack of CSRF protection.\n\n**Required attacker capabilities/position:**\nUnauthenticated.\n\n**Mitigation or fix:**\nNo official fix available. Patchstack offers virtual patching (vPatching) as a mitigation.\n\n**Additional details (more than official CVE description):**\n- CVSS score: 7.1 (Low severity)\n- Affected Software: PayForm WordPress Plugin\n- Vulnerable versions: <= 2.0\n- OWASP Top 10: A1: Broken Access Control\n- Reported by: SOPROBRO\n- Published by Patchstack: January 16, 2025\n- PSID: 9c9b2505561f",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n\n| CWE ID  | CWE Name                                                                     | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :------- | :--------------------------------------------------------------------------- | :--------- | :---------------------- | :------------------------------ | :------------------------------ |\n| CWE-352 | Cross-Site Request Forgery (CSRF)                                          | 0.9        | Compound                | Primary                         | Allowed                       |\n| CWE-79  | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.8        | Base                    | Secondary                       | Allowed                       |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\n\nThe primary weakness identified is CWE-352 **Cross-Site Request Forgery (CSRF)**, which allows for the secondary weakness, CWE-79 **Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')**, leading to Stored XSS. CWE-352 is a compound weakness and can lead to other weaknesses if exploited. CWE-79 is a base weakness. The relationship is that a successful CSRF attack can then be used to inject malicious scripts that are then stored and executed, leading to XSS.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe352 -->|CANPRECEDE| cwe79\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain begins with the **Cross-Site Request Forgery** (**CSRF**) vulnerability (CWE-352). The lack of CSRF protection allows an attacker to force a user into performing actions they did not intend. This, in turn, enables the attacker to inject malicious input, which is then improperly neutralized, leading to Stored XSS (CWE-79).\n\nCWE-352 (Root Cause) -> CWE-79 (Impact)\n\n## Summary of Analysis\n\nThe vulnerability description clearly states that a **Cross-Site Request Forgery** (**CSRF**) vulnerability exists, leading to Stored XSS. The evidence for this is found in the \"Vulnerability Description Key Phrases\" which states \"**rootcause:** **Cross-Site Request Forgery**\" and \"**weakness:** **Stored XSS, weakness**\". The \"CVE Reference Links Content Summary\" also states the \"**Root cause of vulnerability:** Cross Site Request Forgery (CSRF) vulnerability.\" This makes CWE-352 the primary root cause. The Retriever Results also identify CWE-79 as a high scoring candidate.\n\nCWE-352 is chosen as the primary CWE because the vulnerability description explicitly mentions it as the root cause. CWE-79 is identified as a secondary CWE because the CSRF vulnerability allows for Stored XSS. This matches the description of CWE-79, as the product does not neutralize user-controllable input before placing it in a web page served to other users.\n\nThe abstraction levels are appropriate, with CWE-352 being a compound weakness and CWE-79 being a base weakness.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n## CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n**Abstraction Level**: Base\n**Similarity Score**: 0.69\n**Source**: dense\n\n**Description**:\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\n**Abstraction Level**: Variant\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\nI considered CWE-80, but CWE-79 is a better fit because the description states Stored XSS, which implies the input is not neutralized before being stored and displayed as part of a web page. CWE-80 focuses more on the initial reception and handling of the input.",
  "analysis_with_relationships": "# Summary\n\n| CWE ID  | CWE Name                                                                     | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :------- | :--------------------------------------------------------------------------- | :--------- | :---------------------- | :------------------------------ | :------------------------------ |\n| CWE-352 | Cross-Site Request Forgery (CSRF)                                          | 0.9        | Compound                | Primary                         | Allowed                       |\n| CWE-79  | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.8        | Base                    | Secondary                       | Allowed                       |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\n\nThe primary weakness identified is CWE-352 **Cross-Site Request Forgery (CSRF)**, which allows for the secondary weakness, CWE-79 **Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')**, leading to Stored XSS. CWE-352 is a compound weakness and can lead to other weaknesses if exploited. CWE-79 is a base weakness. The relationship is that a successful CSRF attack can then be used to inject malicious scripts that are then stored and executed, leading to XSS.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe352 -->|CANPRECEDE| cwe79\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain begins with the **Cross-Site Request Forgery** (**CSRF**) vulnerability (CWE-352). The lack of CSRF protection allows an attacker to force a user into performing actions they did not intend. This, in turn, enables the attacker to inject malicious input, which is then improperly neutralized, leading to Stored XSS (CWE-79).\n\nCWE-352 (Root Cause) -> CWE-79 (Impact)\n\n## Summary of Analysis\n\nThe vulnerability description clearly states that a **Cross-Site Request Forgery** (**CSRF**) vulnerability exists, leading to Stored XSS. The evidence for this is found in the \"Vulnerability Description Key Phrases\" which states \"**rootcause:** **Cross-Site Request Forgery**\" and \"**weakness:** **Stored XSS, weakness**\". The \"CVE Reference Links Content Summary\" also states the \"**Root cause of vulnerability:** Cross Site Request Forgery (CSRF) vulnerability.\" This makes CWE-352 the primary root cause. The Retriever Results also identify CWE-79 as a high scoring candidate.\n\nCWE-352 is chosen as the primary CWE because the vulnerability description explicitly mentions it as the root cause. CWE-79 is identified as a secondary CWE because the CSRF vulnerability allows for Stored XSS. This matches the description of CWE-79, as the product does not neutralize user-controllable input before placing it in a web page served to other users.\n\nThe abstraction levels are appropriate, with CWE-352 being a compound weakness and CWE-79 being a base weakness.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n## CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n**Abstraction Level**: Base\n**Similarity Score**: 0.69\n**Source**: dense\n\n**Description**:\nThe product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\n**Abstraction Level**: Variant\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\nI considered CWE-80, but CWE-79 is a better fit because the description states Stored XSS, which implies the input is not neutralized before being stored and displayed as part of a web page. CWE-80 focuses more on the initial reception and handling of the input.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-352:**\n- 352 (Cross-Site Request Forgery (CSRF)) - ROOT\n\n\n**Chain starting from CWE-79:**\n- 79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: XSS",
        "match_reason": "term_in_phrase_compound_part_0"
      },
      "similarity": 800.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 223.3158051247799
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 185.2348521354588
    },
    {
      "metadata": {
        "doc_id": "918",
        "name": "Server-Side Request Forgery (SSRF)",
        "source": "sparse"
      },
      "similarity": 178.62067122276642
    },
    {
      "metadata": {
        "doc_id": "601",
        "name": "URL Redirection to Untrusted Site ('Open Redirect')",
        "source": "sparse"
      },
      "similarity": 167.4304622767562
    },
    {
      "metadata": {
        "doc_id": "1004",
        "name": "Sensitive Cookie Without 'HttpOnly' Flag",
        "source": "sparse"
      },
      "similarity": 165.48997816748582
    },
    {
      "metadata": {
        "doc_id": "1275",
        "name": "Sensitive Cookie with Improper SameSite Attribute",
        "source": "sparse"
      },
      "similarity": 150.6562496029627
    },
    {
      "metadata": {
        "doc_id": "80",
        "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
        "source": "sparse"
      },
      "similarity": 150.35037797852507
    },
    {
      "metadata": {
        "doc_id": "472",
        "name": "External Control of Assumed-Immutable Web Parameter",
        "type": "Base",
        "original_content": "The web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.",
        "keyphrase_source": "weakness:weakness",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.532430862743992,
            "graph": 2.2696325455196593
          }
        }
      },
      "similarity": 0.532430862743992
    },
    {
      "doc_id": "183",
      "text": "CWE-183: Permissive List of Allowed Inputs",
      "score": 2.7196000000000002,
      "metadata": {
        "doc_id": "183",
        "name": "Permissive List of Allowed Inputs",
        "type": "base",
        "original_content": "CWE-183: Permissive List of Allowed Inputs",
        "relationships": [
          {
            "source_id": "183",
            "target_id": "942",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "183",
            "target_id": "434",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "183",
            "target_id": "697",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "942",
            "target_id": "183",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "697",
            "target_id": "183",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "627",
            "target_id": "183",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "625",
            "target_id": "183",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "434",
            "target_id": "183",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "186",
            "target_id": "183",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.5599999999999999,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_up",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "434",
                  "183",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "434"
            },
            "abstraction_path_up": {
              "path": [
                [
                  "942",
                  "183",
                  "CHILDOF"
                ]
              ],
              "score": 0.5599999999999999,
              "type": "abstraction_path_up",
              "source": "942"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "434",
                  "183",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "434"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "183",
                  "434",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "434"
            }
          }
        },
        "abstraction_level": "base",
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.7196000000000002
          }
        }
      },
      "similarity": 2.7196000000000002
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-352",
      "CWE-79",
      "CWE-80"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}