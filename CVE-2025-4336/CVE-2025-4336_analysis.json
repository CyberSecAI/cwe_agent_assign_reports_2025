{
  "cve_id": "CVE-2025-4336",
  "description": "The eMagicOne Store Manager for WooCommerce plugin for WordPress is vulnerable to **arbitrary file uploads** due to **missing file type validation** in the set_file() function in all versions up to, and including, 1.2.5. This makes it possible for unauthenticated attackers to upload arbitrary files on the affected sites server which may make remote code execution possible. This is only exploitable by unauthenticated attackers in **default configurations** where the the **default password** is left as 11, or where the attacker gains access to the credentials.",
  "key_phrases": {
    "rootcause": [
      "missing file type validation",
      "default configurations",
      "default password"
    ],
    "weakness": "arbitrary file uploads",
    "impact": [
      "arbitrary file uploads",
      "remote code execution"
    ],
    "vector": "",
    "attacker": "unauthenticated attackers",
    "product": "eMagicOne Store Manager for WooCommerce plugin for WordPress",
    "version": "up to and including 1.2.5",
    "component": "set_file() function"
  },
  "reference_content": "```json\n{\n \"cve_id\": \"CVE-2025-4336\",\n \"summary\": \"The eMagicOne Store Manager for WooCommerce plugin exposes a remote management protocol endpoint that allows file uploads. The authentication mechanism relies on a default credential pair and a session key system. If the default credentials are not changed, an attacker can trivially authenticate, obtain a session key, and upload arbitrary files to the WordPress root or any writable directory.\",\n \"vulnerability_details\": [\n  {\n   \"root_cause\": \"The vulnerability stems from the use of default credentials and a session key system in the eMagicOne Store Manager for WooCommerce plugin.\",\n   \"weakness\": \"The plugin uses a default credential pair (`login=1`, `password=1`) and a session key system for authentication, which, if unchanged, allows for unauthorized access.\",\n   \"impact\": \"An attacker can upload arbitrary files, including PHP shells, to the WordPress root or any writable directory, leading to remote code execution.\",\n   \"attack_vector\": \"The attack vector involves sending a POST request to the `?connector=bridge` endpoint with the default hash to obtain a session key and then using the session key with the `set_file` task to upload a malicious file.\",\n   \"attack_capabilities\": \"The attacker needs to know the existence of the `?connector=bridge` endpoint, and the default credentials or the default hash `md5('1' . '1')` = `c4ca4238a0b923820dcc509a6f75849b` to obtain the session key.\",\n   \"remediation\": \"Not provided in the content, but the fix would be to change the default credentials and session key management to prevent unauthorized file uploads.\"\n  }\n ],\n \"more_details\": true\n}\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "```markdown\n# Summary\n| CWE ID    | CWE Name                                                                 | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| --------- | ------------------------------------------------------------------------ | ---------- | --------------------- | ------------------------------- | ------------------------------- |\n| CWE-434   | Unrestricted Upload of File with Dangerous Type                         | 0.9        | Base                  | Primary CWE                      | Allowed                        |\n| CWE-306   | Missing Authentication for Critical Function                            | 0.7        | Base                  | Secondary Candidate              | Allowed                        |\n| CWE-522   | Insufficiently Protected Credentials                                    | 0.6        | Class                 | Secondary Candidate              | Allowed-with-Review            |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary weakness is the **unrestricted file upload** (CWE-434), a base-level CWE that directly reflects the **missing file type validation**. It can lead to remote code execution. The exploitability is increased due to **missing authentication** (CWE-306) combined with a **default password** (CWE-522). CWE-434 is PEEROF with CWE-430 (Insufficient Qualification of File Name). It CANFOLLOW CWE-184 (Incomplete List of Disallowed Inputs). CWE-306 is CHILDOF CWE-287 (Improper Authentication). CWE-522 is a Class-level CWE.\n\n```mermaid\ngraph TD\n    cwe434[\"CWE-434: Unrestricted Upload of File with Dangerous Type\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    cwe522[\"CWE-522: Insufficiently Protected Credentials\"]\n    cwe287[\"CWE-287: Improper Authentication\"]\n    cwe184[\"CWE-184: Incomplete List of Disallowed Inputs\"]\n    cwe430[\"CWE-430: Insufficient Qualification of File Name\"]\n    \n    cwe306 -->|CHILDOF| cwe287\n    cwe434 -->|CANFOLLOW| cwe184\n    cwe434 --|PEEROF| cwe430\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe434 primary\n    class cwe306,cwe522 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **missing file type validation** (CWE-434), which allows **arbitrary file uploads**. This is exacerbated by **missing authentication** (CWE-306) and the use of a **default password** (CWE-522) in default configurations. The ultimate impact is the possibility of **remote code execution**.\n\n## Summary of Analysis\nThe primary CWE is CWE-434 because the **missing file type validation** is the direct cause of the **unrestricted file upload** vulnerability. The **missing authentication** (CWE-306) and **insufficiently protected credentials** (CWE-522) are contributing factors that lower the barrier to exploitation. The retriever results supported the selection of CWE-434 and CWE-306, however CWE-522 was not as prevalent in the results as it is in the vulnerability description.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-552: Files or Directories Accessible to External Parties\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product makes files or directories accessible to unauthorized actors, even though they should not be.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-807: Reliance on Untrusted Inputs in a Security Decision\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-639: Authorization Bypass Through User-Controlled Key\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n## CWE-184: Incomplete List of Disallowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 3517.25\n**Source**: sparse\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This",
  "analysis_with_relationships": "# Summary\n| CWE ID    | CWE Name                                                                 | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| --------- | ------------------------------------------------------------------------ | ---------- | --------------------- | ------------------------------- | ------------------------------- |\n| CWE-434   | Unrestricted Upload of File with Dangerous Type                         | 0.9        | Base                  | Primary CWE                      | Allowed                        |\n| CWE-306   | Missing Authentication for Critical Function                            | 0.7        | Base                  | Secondary Candidate              | Allowed                        |\n| CWE-522   | Insufficiently Protected Credentials                                    | 0.6        | Class                 | Secondary Candidate              | Allowed-with-Review            |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary weakness is the **unrestricted file upload** (CWE-434), a base-level CWE that directly reflects the **missing file type validation**. It can lead to remote code execution. The exploitability is increased due to **missing authentication** (CWE-306) combined with a **default password** (CWE-522). CWE-434 is PEEROF with CWE-430 (Insufficient Qualification of File Name). It CANFOLLOW CWE-184 (Incomplete List of Disallowed Inputs). CWE-306 is CHILDOF CWE-287 (Improper Authentication). CWE-522 is a Class-level CWE.mermaid\n```mermaid\ngraph TD\n    cwe434[\"CWE-434: Unrestricted Upload of File with Dangerous Type\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    cwe522[\"CWE-522: Insufficiently Protected Credentials\"]\n    cwe287[\"CWE-287: Improper Authentication\"]\n    cwe184[\"CWE-184: Incomplete List of Disallowed Inputs\"]\n    cwe430[\"CWE-430: Insufficient Qualification of File Name\"]\n    \n    cwe306 -->|CHILDOF| cwe287\n    cwe434 -->|CANFOLLOW| cwe184\n    cwe434 --|PEEROF| cwe430\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe434 primary\n    class cwe306,cwe522 secondary\n\n```\n\n\n## Vulnerability Chain\nThe vulnerability chain starts with **missing file type validation** (CWE-434), which allows **arbitrary file uploads**. This is exacerbated by **missing authentication** (CWE-306) and the use of a **default password** (CWE-522) in default configurations. The ultimate impact is the possibility of **remote code execution**.\n\n## Summary of Analysis\nThe primary CWE is CWE-434 because the **missing file type validation** is the direct cause of the **unrestricted file upload** vulnerability. The **missing authentication** (CWE-306) and **insufficiently protected credentials** (CWE-522) are contributing factors that lower the barrier to exploitation. The retriever results supported the selection of CWE-434 and CWE-306, however CWE-522 was not as prevalent in the results as it is in the vulnerability description.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-552: Files or Directories Accessible to External Parties\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product makes files or directories accessible to unauthorized actors, even though they should not be.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-807: Reliance on Untrusted Inputs in a Security Decision\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-639: Authorization Bypass Through User-Controlled Key\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n## CWE-184: Incomplete List of Disallowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 3517.25\n**Source**: sparse\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-639:**\n- 639 (Authorization Bypass Through User-Controlled Key) - ROOT\n\n\n**Chain starting from CWE-306:**\n- 306 (Missing Authentication for Critical Function) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse",
        "original_content": "The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.",
        "keyphrase_sources": [
          {
            "id": "rootcause:missing file type validation",
            "keyphrase": "missing file type validation",
            "type": "rootcause"
          },
          {
            "id": "rootcause:default configurations",
            "keyphrase": "default configurations",
            "type": "rootcause"
          },
          {
            "id": "rootcause:default password",
            "keyphrase": "default password",
            "type": "rootcause"
          },
          {
            "id": "weakness:arbitrary file uploads",
            "keyphrase": "arbitrary file uploads",
            "type": "weakness"
          },
          {
            "id": "impact:arbitrary file uploads",
            "keyphrase": "arbitrary file uploads",
            "type": "impact"
          },
          {
            "id": "impact:remote code execution",
            "keyphrase": "remote code execution",
            "type": "impact"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:eMagicOne Store Manager for WooCommerce plugin for WordPress",
            "keyphrase": "eMagicOne Store Manager for WooCommerce plugin for WordPress",
            "type": "product"
          },
          {
            "id": "version:up to and including 1.2.5",
            "keyphrase": "up to and including 1.2.5",
            "type": "version"
          },
          {
            "id": "component:set_file() function",
            "keyphrase": "set_file() function",
            "type": "component"
          }
        ]
      },
      "similarity": 575.6320316091108
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse",
        "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
        "keyphrase_sources": [
          {
            "id": "rootcause:missing file type validation",
            "keyphrase": "missing file type validation",
            "type": "rootcause"
          },
          {
            "id": "rootcause:default configurations",
            "keyphrase": "default configurations",
            "type": "rootcause"
          },
          {
            "id": "rootcause:default password",
            "keyphrase": "default password",
            "type": "rootcause"
          },
          {
            "id": "weakness:arbitrary file uploads",
            "keyphrase": "arbitrary file uploads",
            "type": "weakness"
          },
          {
            "id": "impact:arbitrary file uploads",
            "keyphrase": "arbitrary file uploads",
            "type": "impact"
          },
          {
            "id": "impact:remote code execution",
            "keyphrase": "remote code execution",
            "type": "impact"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:eMagicOne Store Manager for WooCommerce plugin for WordPress",
            "keyphrase": "eMagicOne Store Manager for WooCommerce plugin for WordPress",
            "type": "product"
          },
          {
            "id": "version:up to and including 1.2.5",
            "keyphrase": "up to and including 1.2.5",
            "type": "version"
          },
          {
            "id": "component:set_file() function",
            "keyphrase": "set_file() function",
            "type": "component"
          }
        ]
      },
      "similarity": 570.8700725142675
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_sources": [
          {
            "id": "rootcause:missing file type validation",
            "keyphrase": "missing file type validation",
            "type": "rootcause"
          },
          {
            "id": "rootcause:default configurations",
            "keyphrase": "default configurations",
            "type": "rootcause"
          },
          {
            "id": "rootcause:default password",
            "keyphrase": "default password",
            "type": "rootcause"
          },
          {
            "id": "weakness:arbitrary file uploads",
            "keyphrase": "arbitrary file uploads",
            "type": "weakness"
          },
          {
            "id": "impact:arbitrary file uploads",
            "keyphrase": "arbitrary file uploads",
            "type": "impact"
          },
          {
            "id": "impact:remote code execution",
            "keyphrase": "remote code execution",
            "type": "impact"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:eMagicOne Store Manager for WooCommerce plugin for WordPress",
            "keyphrase": "eMagicOne Store Manager for WooCommerce plugin for WordPress",
            "type": "product"
          },
          {
            "id": "version:up to and including 1.2.5",
            "keyphrase": "up to and including 1.2.5",
            "type": "version"
          },
          {
            "id": "component:set_file() function",
            "keyphrase": "set_file() function",
            "type": "component"
          }
        ]
      },
      "similarity": 563.4840337661177
    },
    {
      "metadata": {
        "doc_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "source": "sparse",
        "original_content": "The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.",
        "keyphrase_sources": [
          {
            "id": "rootcause:missing file type validation",
            "keyphrase": "missing file type validation",
            "type": "rootcause"
          }
        ]
      },
      "similarity": 540.7122005281785
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "keyphrase_sources": [
          {
            "id": "rootcause:missing file type validation",
            "keyphrase": "missing file type validation",
            "type": "rootcause"
          }
        ]
      },
      "similarity": 536.8407734797634
    },
    {
      "metadata": {
        "doc_id": "522",
        "name": "Insufficiently Protected Credentials",
        "source": "sparse",
        "original_content": "The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.",
        "keyphrase_sources": [
          {
            "id": "rootcause:default password",
            "keyphrase": "default password",
            "type": "rootcause"
          }
        ]
      },
      "similarity": 533.8740197304408
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse",
        "original_content": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.",
        "keyphrase_sources": [
          {
            "id": "rootcause:default configurations",
            "keyphrase": "default configurations",
            "type": "rootcause"
          },
          {
            "id": "rootcause:default password",
            "keyphrase": "default password",
            "type": "rootcause"
          },
          {
            "id": "impact:remote code execution",
            "keyphrase": "remote code execution",
            "type": "impact"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "version:up to and including 1.2.5",
            "keyphrase": "up to and including 1.2.5",
            "type": "version"
          },
          {
            "id": "component:set_file() function",
            "keyphrase": "set_file() function",
            "type": "component"
          }
        ]
      },
      "similarity": 530.6809353450303
    },
    {
      "metadata": {
        "doc_id": "502",
        "name": "Deserialization of Untrusted Data",
        "source": "sparse",
        "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.",
        "keyphrase_sources": [
          {
            "id": "rootcause:default configurations",
            "keyphrase": "default configurations",
            "type": "rootcause"
          },
          {
            "id": "impact:remote code execution",
            "keyphrase": "remote code execution",
            "type": "impact"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "version:up to and including 1.2.5",
            "keyphrase": "up to and including 1.2.5",
            "type": "version"
          },
          {
            "id": "component:set_file() function",
            "keyphrase": "set_file() function",
            "type": "component"
          }
        ]
      },
      "similarity": 522.2073038868368
    },
    {
      "metadata": {
        "doc_id": "24",
        "name": "Path Traversal: '../filedir'",
        "source": "sparse",
        "original_content": "The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize \"../\" sequences that can resolve to a location that is outside of that directory.",
        "keyphrase_sources": [
          {
            "id": "weakness:arbitrary file uploads",
            "keyphrase": "arbitrary file uploads",
            "type": "weakness"
          },
          {
            "id": "impact:arbitrary file uploads",
            "keyphrase": "arbitrary file uploads",
            "type": "impact"
          }
        ]
      },
      "similarity": 520.9927830635204
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse",
        "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
        "keyphrase_sources": [
          {
            "id": "weakness:arbitrary file uploads",
            "keyphrase": "arbitrary file uploads",
            "type": "weakness"
          },
          {
            "id": "impact:arbitrary file uploads",
            "keyphrase": "arbitrary file uploads",
            "type": "impact"
          },
          {
            "id": "product:eMagicOne Store Manager for WooCommerce plugin for WordPress",
            "keyphrase": "eMagicOne Store Manager for WooCommerce plugin for WordPress",
            "type": "product"
          }
        ]
      },
      "similarity": 501.62083306308955
    },
    {
      "metadata": {
        "doc_id": "425",
        "name": "Direct Request ('Forced Browsing')",
        "source": "sparse",
        "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
        "keyphrase_sources": [
          {
            "id": "product:eMagicOne Store Manager for WooCommerce plugin for WordPress",
            "keyphrase": "eMagicOne Store Manager for WooCommerce plugin for WordPress",
            "type": "product"
          }
        ]
      },
      "similarity": 207.94032941700888
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-639",
      "CWE-306",
      "CWE-472",
      "CWE-184",
      "CWE-552",
      "CWE-352",
      "CWE-303",
      "CWE-1391",
      "CWE-522",
      "CWE-807",
      "CWE-287",
      "CWE-425",
      "CWE-430",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "306": [
      {
        "id": "rootcause:missing file type validation",
        "keyphrase": "missing file type validation",
        "type": "rootcause"
      },
      {
        "id": "rootcause:default configurations",
        "keyphrase": "default configurations",
        "type": "rootcause"
      },
      {
        "id": "rootcause:default password",
        "keyphrase": "default password",
        "type": "rootcause"
      },
      {
        "id": "weakness:arbitrary file uploads",
        "keyphrase": "arbitrary file uploads",
        "type": "weakness"
      },
      {
        "id": "impact:arbitrary file uploads",
        "keyphrase": "arbitrary file uploads",
        "type": "impact"
      },
      {
        "id": "impact:remote code execution",
        "keyphrase": "remote code execution",
        "type": "impact"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:eMagicOne Store Manager for WooCommerce plugin for WordPress",
        "keyphrase": "eMagicOne Store Manager for WooCommerce plugin for WordPress",
        "type": "product"
      },
      {
        "id": "version:up to and including 1.2.5",
        "keyphrase": "up to and including 1.2.5",
        "type": "version"
      },
      {
        "id": "component:set_file() function",
        "keyphrase": "set_file() function",
        "type": "component"
      }
    ],
    "862": [
      {
        "id": "rootcause:missing file type validation",
        "keyphrase": "missing file type validation",
        "type": "rootcause"
      },
      {
        "id": "rootcause:default configurations",
        "keyphrase": "default configurations",
        "type": "rootcause"
      },
      {
        "id": "rootcause:default password",
        "keyphrase": "default password",
        "type": "rootcause"
      },
      {
        "id": "weakness:arbitrary file uploads",
        "keyphrase": "arbitrary file uploads",
        "type": "weakness"
      },
      {
        "id": "impact:arbitrary file uploads",
        "keyphrase": "arbitrary file uploads",
        "type": "impact"
      },
      {
        "id": "impact:remote code execution",
        "keyphrase": "remote code execution",
        "type": "impact"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:eMagicOne Store Manager for WooCommerce plugin for WordPress",
        "keyphrase": "eMagicOne Store Manager for WooCommerce plugin for WordPress",
        "type": "product"
      },
      {
        "id": "version:up to and including 1.2.5",
        "keyphrase": "up to and including 1.2.5",
        "type": "version"
      },
      {
        "id": "component:set_file() function",
        "keyphrase": "set_file() function",
        "type": "component"
      }
    ],
    "352": [
      {
        "id": "rootcause:missing file type validation",
        "keyphrase": "missing file type validation",
        "type": "rootcause"
      },
      {
        "id": "rootcause:default configurations",
        "keyphrase": "default configurations",
        "type": "rootcause"
      },
      {
        "id": "rootcause:default password",
        "keyphrase": "default password",
        "type": "rootcause"
      },
      {
        "id": "weakness:arbitrary file uploads",
        "keyphrase": "arbitrary file uploads",
        "type": "weakness"
      },
      {
        "id": "impact:arbitrary file uploads",
        "keyphrase": "arbitrary file uploads",
        "type": "impact"
      },
      {
        "id": "impact:remote code execution",
        "keyphrase": "remote code execution",
        "type": "impact"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:eMagicOne Store Manager for WooCommerce plugin for WordPress",
        "keyphrase": "eMagicOne Store Manager for WooCommerce plugin for WordPress",
        "type": "product"
      },
      {
        "id": "version:up to and including 1.2.5",
        "keyphrase": "up to and including 1.2.5",
        "type": "version"
      },
      {
        "id": "component:set_file() function",
        "keyphrase": "set_file() function",
        "type": "component"
      }
    ],
    "1284": [
      {
        "id": "rootcause:missing file type validation",
        "keyphrase": "missing file type validation",
        "type": "rootcause"
      }
    ],
    "116": [
      {
        "id": "rootcause:missing file type validation",
        "keyphrase": "missing file type validation",
        "type": "rootcause"
      }
    ],
    "863": [
      {
        "id": "rootcause:default configurations",
        "keyphrase": "default configurations",
        "type": "rootcause"
      },
      {
        "id": "rootcause:default password",
        "keyphrase": "default password",
        "type": "rootcause"
      },
      {
        "id": "impact:remote code execution",
        "keyphrase": "remote code execution",
        "type": "impact"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "version:up to and including 1.2.5",
        "keyphrase": "up to and including 1.2.5",
        "type": "version"
      },
      {
        "id": "component:set_file() function",
        "keyphrase": "set_file() function",
        "type": "component"
      }
    ],
    "502": [
      {
        "id": "rootcause:default configurations",
        "keyphrase": "default configurations",
        "type": "rootcause"
      },
      {
        "id": "impact:remote code execution",
        "keyphrase": "remote code execution",
        "type": "impact"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "version:up to and including 1.2.5",
        "keyphrase": "up to and including 1.2.5",
        "type": "version"
      },
      {
        "id": "component:set_file() function",
        "keyphrase": "set_file() function",
        "type": "component"
      }
    ],
    "522": [
      {
        "id": "rootcause:default password",
        "keyphrase": "default password",
        "type": "rootcause"
      }
    ],
    "24": [
      {
        "id": "weakness:arbitrary file uploads",
        "keyphrase": "arbitrary file uploads",
        "type": "weakness"
      },
      {
        "id": "impact:arbitrary file uploads",
        "keyphrase": "arbitrary file uploads",
        "type": "impact"
      }
    ],
    "434": [
      {
        "id": "weakness:arbitrary file uploads",
        "keyphrase": "arbitrary file uploads",
        "type": "weakness"
      },
      {
        "id": "impact:arbitrary file uploads",
        "keyphrase": "arbitrary file uploads",
        "type": "impact"
      },
      {
        "id": "product:eMagicOne Store Manager for WooCommerce plugin for WordPress",
        "keyphrase": "eMagicOne Store Manager for WooCommerce plugin for WordPress",
        "type": "product"
      }
    ],
    "425": [
      {
        "id": "product:eMagicOne Store Manager for WooCommerce plugin for WordPress",
        "keyphrase": "eMagicOne Store Manager for WooCommerce plugin for WordPress",
        "type": "product"
      }
    ]
  }
}