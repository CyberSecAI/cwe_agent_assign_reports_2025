{
  "retriever": "dense",
  "query": "Bludit uses predictable methods in combination with the MD5 hashing algorithm to generate sensitive tokens such as the API token and the user token. This allows attackers to authenticate against the Bludit API.",
  "keyphrases": {
    "rootcause": [
      "predictable methods to generate tokens"
    ]
  },
  "timestamp": "2025-07-12 00:47:34",
  "cve_id": "CVE-2024-24554",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "760",
      "name": "Use of a One-Way Hash with a Predictable Salt",
      "type": "Variant",
      "score": 0.5263171602463831
    },
    {
      "cwe_id": "1241",
      "name": "Use of Predictable Algorithm in Random Number Generator",
      "type": "Base",
      "score": 0.46839134600066845
    },
    {
      "cwe_id": "916",
      "name": "Use of Password Hash With Insufficient Computational Effort",
      "type": "Base",
      "score": 0.448396240762249
    },
    {
      "cwe_id": "328",
      "name": "Use of Weak Hash",
      "type": "Base",
      "score": 0.44825486252242586
    },
    {
      "cwe_id": "836",
      "name": "Use of Password Hash Instead of Password for Authentication",
      "type": "Base",
      "score": 0.4378959777569911
    },
    {
      "cwe_id": "759",
      "name": "Use of a One-Way Hash without a Salt",
      "type": "Variant",
      "score": 0.4374672634972739
    },
    {
      "cwe_id": "340",
      "name": "Generation of Predictable Numbers or Identifiers",
      "type": "Class",
      "score": 0.4330134504257479
    },
    {
      "cwe_id": "1270",
      "name": "Generation of Incorrect Security Tokens",
      "type": "Base",
      "score": 0.4226511978844255
    },
    {
      "cwe_id": "337",
      "name": "Predictable Seed in Pseudo-Random Number Generator (PRNG)",
      "type": "Variant",
      "score": 0.4213563417510847
    },
    {
      "cwe_id": "1391",
      "name": "Use of Weak Credentials",
      "type": "Class",
      "score": 0.42090055673833
    },
    {
      "cwe_id": "1240",
      "name": "Use of a Cryptographic Primitive with a Risky Implementation",
      "type": "Base",
      "score": 0.39130747329697496
    },
    {
      "cwe_id": "656",
      "name": "Reliance on Security Through Obscurity",
      "type": "Class",
      "score": 0.37928013153306994
    },
    {
      "cwe_id": "804",
      "name": "Guessable CAPTCHA",
      "type": "Base",
      "score": 0.3790172643734966
    },
    {
      "cwe_id": "307",
      "name": "Improper Restriction of Excessive Authentication Attempts",
      "type": "Base",
      "score": 0.3764693513370727
    },
    {
      "cwe_id": "338",
      "name": "Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)",
      "type": "Base",
      "score": 0.3761670112851857
    },
    {
      "cwe_id": "302",
      "name": "Authentication Bypass by Assumed-Immutable Data",
      "type": "Base",
      "score": 0.3750385992068093
    },
    {
      "cwe_id": "603",
      "name": "Use of Client-Side Authentication",
      "type": "Base",
      "score": 0.37333531564280775
    },
    {
      "cwe_id": "329",
      "name": "Generation of Predictable IV with CBC Mode",
      "type": "Variant",
      "score": 0.37182979322406784
    },
    {
      "cwe_id": "649",
      "name": "Reliance on Obfuscation or Encryption of Security-Relevant Inputs without Integrity Checking",
      "type": "Base",
      "score": 0.3715000943175092
    },
    {
      "cwe_id": "308",
      "name": "Use of Single-factor Authentication",
      "type": "Base",
      "score": 0.371027081041806
    }
  ]
}