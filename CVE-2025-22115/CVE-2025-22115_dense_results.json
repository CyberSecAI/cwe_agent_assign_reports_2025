{
  "query": "In the Linux kernel, the following vulnerability has been resolved btrfs fix block group refcount race in btrfs_create_pending_block_groups() Block group creation is done in two phases, which results in a slightly unintuitive property a block group can be allocated/deallocated from after btrfs_make_block_group() adds it to the space_info with btrfs_add_bg_to_space_info(), but before creation is completely completed in btrfs_create_pending_block_groups(). As a result, it is possible for a block group to go unused and have btrfs_mark_bg_unused called on it concurrently with btrfs_create_pending_block_groups. This causes a number of issues, which were fixed with the block group flag BLOCK_GROUP_FLAG_NEW. However, this fix is not quite complete. Since it does not use the unused_bg_lock, it is possible for the following race to occur btrfs_create_pending_block_groups btrfs_mark_bg_unused if list_empty // false list_del_init clear_bit else if (test_bit) // true list_move_tail And we get into the exact same broken ref count and invalid new_bgs state for transaction cleanup that BLOCK_GROUP_FLAG_NEW was designed to prevent. The broken refcount aspect will result in a warning like",
  "count": 20,
  "results": [
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 0.5043137284915595,
      "original_score": 0.5043137284915595,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "abstraction": "Class",
      "score": 0.4803188950251725,
      "original_score": 0.4803188950251725,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "366",
      "name": "Race Condition within a Thread",
      "abstraction": "Base",
      "score": 0.4761466748210929,
      "original_score": 0.4761466748210929,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "abstraction": "Class",
      "score": 0.4731487322253493,
      "original_score": 0.4731487322253493,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "911",
      "name": "Improper Update of Reference Count",
      "abstraction": "Base",
      "score": 0.47184508018536514,
      "original_score": 0.47184508018536514,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "abstraction": "Base",
      "score": 0.46947629434521276,
      "original_score": 0.46947629434521276,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "abstraction": "Base",
      "score": 0.44674171356951786,
      "original_score": 0.44674171356951786,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "363",
      "name": "Race Condition Enabling Link Following",
      "abstraction": "Base",
      "score": 0.445679966481487,
      "original_score": 0.445679966481487,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "abstraction": "Base",
      "score": 0.439062210047635,
      "original_score": 0.439062210047635,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "abstraction": "Base",
      "score": 0.43670833479451154,
      "original_score": 0.43670833479451154,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "abstraction": "Variant",
      "score": 0.42759187861672493,
      "original_score": 0.42759187861672493,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "abstraction": "Base",
      "score": 0.424512600899548,
      "original_score": 0.424512600899548,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "abstraction": "Base",
      "score": 0.4243419025667352,
      "original_score": 0.4243419025667352,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "126",
      "name": "Buffer Over-read",
      "abstraction": "Variant",
      "score": 0.42414477100718306,
      "original_score": 0.42414477100718306,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "763",
      "name": "Release of Invalid Pointer or Reference",
      "abstraction": "Base",
      "score": 0.42126330059016215,
      "original_score": 0.42126330059016215,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "abstraction": "Variant",
      "score": 0.418343196657304,
      "original_score": 0.418343196657304,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "689",
      "name": "Permission Race Condition During Resource Copy",
      "abstraction": "Compound",
      "score": 0.41805242588323477,
      "original_score": 0.41805242588323477,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 0.4153385573289261,
      "original_score": 0.4153385573289261,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "119",
      "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
      "abstraction": "Class",
      "score": 0.4126727113941244,
      "original_score": 0.4126727113941244,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "abstraction": "Base",
      "score": 0.4126381034551689,
      "original_score": 0.4126381034551689,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 0.4126381034551689,
    "max": 0.5043137284915595,
    "mean": 0.4421170539193008,
    "median": 0.43215010670561826,
    "count": 20
  }
}