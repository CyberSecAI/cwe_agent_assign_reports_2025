{
  "method": "sparse_base",
  "query": "In the Linux kernel, the following vulnerability has been resolved ksmbd Fix UAF in __close_file_table_ids A use-after-free is possible if one thread destroys the file via __ksmbd_close_fd while another thread holds a reference to it. The existing checks on fp->refcount are not sufficient to prevent this. The fix takes ft->lock around the section which removes the file from the file table. This prevents two threads acquiring the same file pointer via __close_file_table_ids, as well as the other functions which retrieve a file from the IDR and which already use this same lock.",
  "keyphrases": {
    "base_query": "In the Linux kernel, the following vulnerability has been resolved ksmbd Fix UAF in __close_file_table_ids A use-after-free is possible if one thread destroys the file via __ksmbd_close_fd while another thread holds a reference to it. The existing checks on fp->refcount are not sufficient to prevent this. The fix takes ft->lock around the section which removes the file from the file table. This prevents two threads acquiring the same file pointer via __close_file_table_ids, as well as the other functions which retrieve a file from the IDR and which already use this same lock."
  },
  "timestamp": "2025-07-12T13:31:02.078969",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "667",
      "name": "Improper Locking",
      "score": 177.50476825808184
    },
    {
      "doc_id": "415",
      "name": "Double Free",
      "score": 176.85589768685668
    },
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 173.44006490320606
    },
    {
      "doc_id": "833",
      "name": "Deadlock",
      "score": 167.78553896739305
    },
    {
      "doc_id": "1390",
      "name": "Weak Authentication",
      "score": 158.4954072049343
    }
  ]
}