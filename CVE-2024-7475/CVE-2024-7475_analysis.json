{
  "cve_id": "CVE-2024-7475",
  "description": "An **improper access control** vulnerability in lunary-ai/lunary version 1.3.2 allows an attacker to update the SAML configuration without authorization. This vulnerability can lead to manipulation of authentication processes, fraudulent login requests, and theft of user information. Appropriate access controls should be implemented to ensure that the SAML configuration can only be updated by authorized users.",
  "key_phrases": {
    "rootcause": "improper access control",
    "weakness": "",
    "impact": [
      "update SAML configuration without authorization",
      "manipulate authentication processes",
      "fraudulent login requests",
      "theft of user information"
    ],
    "vector": "",
    "attacker": "attacker",
    "product": "lunary-ai/lunary",
    "version": "1.3.2",
    "component": ""
  },
  "reference_content": "Based on the provided content, here's an analysis of the identified vulnerabilities:\n\n**Root Cause of Vulnerability:**\nThe root cause lies in insufficient authorization checks within the backend API endpoints. Specifically, the commit addresses missing `project_id` checks in SQL queries. This allowed users to potentially access or manipulate resources belonging to other projects.\n\n**Weaknesses/Vulnerabilities Present:**\n* **Insecure Direct Object References (IDOR):** The vulnerability allows a user to potentially access or modify data belonging to other projects by manipulating resource IDs, as the backend was not properly validating whether the user had access to the targeted `project_id`.\n* **Authorization Bypass:** Lack of proper authorization checks meant that access to sensitive data and functionalities was not restricted based on the user's project membership.\n* **SQL Injection (Potential):** While not explicitly mentioned, the use of string interpolation with user-provided inputs (e.g., IDs) in SQL queries without sufficient sanitization could lead to SQL injection. Although parameterized queries are used which mitigate this risk, the logic flaws in authorization increase the risk.\n\n**Impact of Exploitation:**\n* **Data Breach:** Attackers could gain unauthorized access to sensitive data from other projects.\n* **Data Manipulation:** Attackers could modify or delete data belonging to other projects without proper authorization.\n* **Privilege Escalation (Potential):** While the immediate impact is data access and manipulation, the lack of proper checks could potentially be exploited for privilege escalation if combined with other vulnerabilities.\n\n**Attack Vectors:**\n* **API Manipulation:** Attackers could directly manipulate API requests by changing IDs and other parameters to access resources outside of their project scope.\n\n**Required Attacker Capabilities/Position:**\n* The attacker needs to be an authenticated user with access to the API.\n* The attacker needs to be able to send API requests to the vulnerable endpoints and manipulate the request parameters, specifically the resource IDs.\n\n**Detailed Code Changes:**\n\n*   **packages/backend/src/api/v1/datasets/index.ts:**\n    *   The patch adds `and project_id = ${projectId}` to the `update dataset` query, ensuring that only datasets belonging to the user's current project can be updated.\n    *   The patch includes a check to ensure that the dataset belongs to the current project before updating dataset prompts.\n*   **packages/backend/src/api/v1/external-users.ts:**\n    *   The patch adds `and project_id = ${projectId}` to both the `select` and `delete` queries for `external_user`, preventing unauthorized access and deletion of external users from other projects.\n*   **packages/backend/src/api/v1/templates.ts:**\n    *   The patch adds a check to ensure that the template belongs to the user's current project before a new version can be created, preventing users from creating template versions on projects they do not belong to.\n\n**Summary of Changes:**\n\nThe changes involve adding project ID checks to SQL queries used by API endpoints that handle datasets, external users, and templates. These checks ensure that operations are performed only on resources that belong to the project associated with the currently authenticated user, thus addressing the authorization vulnerabilities.\n\nThese changes address the vulnerabilities by ensuring that all queries involving resources like datasets, users and templates are tied to the currently logged in user's project, which wasn't being done before, and thus allowed for a user to manipulate another user's projects data.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-285 | Improper Authorization | 0.8 | Class | Primary CWE | Discouraged |\n| CWE-639 | Authorization Bypass Through User-Controlled Key | 0.7 | Base | Secondary Candidate | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary relationship that influenced my decision was the parent-child relationship between CWE-285 (Improper Authorization) and its potential child CWEs. While CWE-285 is a class-level CWE and generally discouraged, the evidence suggests that the authorization mechanism is flawed, but not specifically missing. The other relationship was from the Retriever results for CWE-639 (Authorization Bypass Through User-Controlled Key), which could be a more specific fit.\n\n```mermaid\ngraph TD\n    cwe285[\"CWE-285: Improper Authorization\"]\n    cwe639[\"CWE-639: Authorization Bypass Through User-Controlled Key\"]\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe862[\"CWE-862: Missing Authorization\"]\n    \n    cwe639 -->|PEEROF| cwe863\n    cwe862 -->|PEEROF| cwe863\n    cwe863 -->|CHILDOF| cwe285\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe285 primary\n    class cwe639 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with an **improper access control**, leading to the ability to update the SAML configuration without authorization. This then results in the manipulation of authentication processes, fraudulent login requests, and potential theft of user information.\n  - **Root Cause:** **Improper Access Control**\n  - **Weakness:** Authorization Bypass\n  - **Impact:** Manipulation of authentication, fraudulent logins, data theft\n\n## Summary of Analysis\nThe initial analysis focused on identifying the root cause of the vulnerability based on the provided description and key phrases. The primary indicator was the phrase \"**improper access control**\". This pointed towards a potential authorization issue. The retriever results confirmed this direction, highlighting CWEs related to authentication and authorization.\n\nThe selection of CWE-285 (Improper Authorization) as the primary CWE is based on the evidence of **improper access control** that allows unauthorized updates to the SAML configuration. While CWE-284 (Improper Access Control) is a broader term, CWE-285 is more specific to authorization failures, making it a better fit. However, because the evidence showed that the **missing project_id checks in SQL queries** allowed for users to manipulate resources from other projects, this indicates that CWE-639 (Authorization Bypass Through User-Controlled Key) might be a good fit and is included as a secondary candidate.\n\nThe decision to map to CWE-285 is influenced by the MITRE guidance, which discourages the use of CWE-285 when a more specific child CWE is available. However, in this case, the specific mechanism of the authorization failure is not fully detailed, making CWE-285 the most appropriate choice at the class level, unless considering the secondary candidate CWE-639.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-639: Authorization Bypass Through User-Controlled Key\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-1390: Weak Authentication\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-267: Privilege Defined With Unsafe Actions\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nA particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-345: Insufficient Verification of Data Authenticity\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-204: Observable Response Discrepancy\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product provides different responses to incoming requests in a way that reveals internal state information to an unauthorized actor outside of the intended control sphere.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-807: Reliance on Untrusted Inputs in a Security Decision\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-639: Authorization Bypass Through User-Controlled Key\n**Abstraction Level**: Base\n**Similarity Score**: 2144.50\n**Source**: sparse\n\n**Description**:\nThe system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-285 | Improper Authorization | 0.8 | Class | Primary CWE | Discouraged |\n| CWE-639 | Authorization Bypass Through User-Controlled Key | 0.7 | Base | Secondary Candidate | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary relationship that influenced my decision was the parent-child relationship between CWE-285 (Improper Authorization) and its potential child CWEs. While CWE-285 is a class-level CWE and generally discouraged, the evidence suggests that the authorization mechanism is flawed, but not specifically missing. The other relationship was from the Retriever results for CWE-639 (Authorization Bypass Through User-Controlled Key), which could be a more specific fit.\n\n```mermaid\ngraph TD\n    cwe285[\"CWE-285: Improper Authorization\"]\n    cwe639[\"CWE-639: Authorization Bypass Through User-Controlled Key\"]\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe862[\"CWE-862: Missing Authorization\"]\n    \n    cwe639 -->|PEEROF| cwe863\n    cwe862 -->|PEEROF| cwe863\n    cwe863 -->|CHILDOF| cwe285\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe285 primary\n    class cwe639 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with an **improper access control**, leading to the ability to update the SAML configuration without authorization. This then results in the manipulation of authentication processes, fraudulent login requests, and potential theft of user information.\n  - **Root Cause:** **Improper Access Control**\n  - **Weakness:** Authorization Bypass\n  - **Impact:** Manipulation of authentication, fraudulent logins, data theft\n\n## Summary of Analysis\nThe initial analysis focused on identifying the root cause of the vulnerability based on the provided description and key phrases. The primary indicator was the phrase \"**improper access control**\". This pointed towards a potential authorization issue. The retriever results confirmed this direction, highlighting CWEs related to authentication and authorization.\n\nThe selection of CWE-285 (Improper Authorization) as the primary CWE is based on the evidence of **improper access control** that allows unauthorized updates to the SAML configuration. While CWE-284 (Improper Access Control) is a broader term, CWE-285 is more specific to authorization failures, making it a better fit. However, because the evidence showed that the **missing project_id checks in SQL queries** allowed for users to manipulate resources from other projects, this indicates that CWE-639 (Authorization Bypass Through User-Controlled Key) might be a good fit and is included as a secondary candidate.\n\nThe decision to map to CWE-285 is influenced by the MITRE guidance, which discourages the use of CWE-285 when a more specific child CWE is available. However, in this case, the specific mechanism of the authorization failure is not fully detailed, making CWE-285 the most appropriate choice at the class level, unless considering the secondary candidate CWE-639.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-639: Authorization Bypass Through User-Controlled Key\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-1390: Weak Authentication\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-267: Privilege Defined With Unsafe Actions\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nA particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-345: Insufficient Verification of Data Authenticity\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-204: Observable Response Discrepancy\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product provides different responses to incoming requests in a way that reveals internal state information to an unauthorized actor outside of the intended control sphere.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-807: Reliance on Untrusted Inputs in a Security Decision\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-639: Authorization Bypass Through User-Controlled Key\n**Abstraction Level**: Base\n**Similarity Score**: 2144.50\n**Source**: sparse\n\n**Description**:\nThe system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-1390:**\n- 1390 (Weak Authentication) - ROOT\n\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "1390",
        "name": "Weak Authentication",
        "source": "sparse"
      },
      "similarity": 359.88392894583535
    },
    {
      "metadata": {
        "doc_id": "287",
        "name": "Improper Authentication",
        "source": "sparse"
      },
      "similarity": 350.0441252000206
    },
    {
      "metadata": {
        "doc_id": "303",
        "name": "Incorrect Implementation of Authentication Algorithm",
        "source": "sparse"
      },
      "similarity": 343.49867741216
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 343.1922521246853
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 341.6713243595019
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 341.06347181986933
    },
    {
      "metadata": {
        "doc_id": "284",
        "name": "Improper Access Control",
        "source": "sparse"
      },
      "similarity": 337.6983561722834
    },
    {
      "metadata": {
        "doc_id": "347",
        "name": "Improper Verification of Cryptographic Signature",
        "source": "sparse"
      },
      "similarity": 335.59605936638786
    },
    {
      "metadata": {
        "doc_id": "90",
        "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
        "type": "Base",
        "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.",
        "keyphrase_source": "rootcause:improper access control",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5457383249572745,
            "graph": 1.5118173940636466
          }
        }
      },
      "similarity": 0.5457383249572745
    },
    {
      "doc_id": "613",
      "text": "CWE-613: Insufficient Session Expiration",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "613",
        "name": "Insufficient Session Expiration",
        "type": "base",
        "original_content": "CWE-613: Insufficient Session Expiration",
        "relationships": [
          {
            "source_id": "613",
            "target_id": "352",
            "label": "REQUIREDBY",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "613",
            "target_id": "287",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "613",
            "target_id": "672",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "613",
            "target_id": "672",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "672",
            "target_id": "613",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "352",
            "target_id": "613",
            "label": "REQUIRES",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "287",
            "target_id": "613",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "287",
                  "613",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "287"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "287",
                  "613",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "287"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "613",
                  "287",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "287"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-1390",
      "CWE-863",
      "CWE-1391",
      "CWE-345",
      "CWE-862",
      "CWE-639",
      "CWE-472",
      "CWE-204",
      "CWE-285",
      "CWE-303",
      "CWE-267",
      "CWE-284",
      "CWE-807",
      "CWE-212"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}