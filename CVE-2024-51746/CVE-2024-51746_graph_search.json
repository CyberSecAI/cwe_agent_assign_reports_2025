{
  "retriever": "graph",
  "query": "Gitsign is a keyless Sigstore to signing tool for Git commits with your a GitHub / OIDC identity. gitsign may select the wrong Rekor entry to use during online verification when multiple entries are returned by the log. gitsign uses Rekors search API to fetch entries that apply to a signature being verified. The parameters used for the search are the public key and the payload. The search API returns entries that match either condition rather than both. When gitsigns credential cache is used, there can be multiple entries that use the same ephemeral keypair / signing certificate. As gitsign assumes both conditions are matched by Rekor, there is no additional validation that the entrys hash matches the payload being verified, meaning that the wrong entry can be used to successfully pass verification. Impact is minimal as while gitsign does not match the payload against the entry, it does ensure that the certificate matches. This would need to be exploited during the certificate validity window (10 minutes) by the key holder. Consider specifically these CWEs: CWE-335 CWE-1291 CWE-295 CWE-203 CWE-299 CWE-296 CWE-297 CWE-427 CWE-863 CWE-347",
  "keyphrases": {
    "original_query": "Gitsign is a keyless Sigstore to signing tool for Git commits with your a GitHub / OIDC identity. gitsign may select the wrong Rekor entry to use during online verification when multiple entries are returned by the log. gitsign uses Rekors search API to fetch entries that apply to a signature being verified. The parameters used for the search are the public key and the payload. The search API returns entries that match either condition rather than both. When gitsigns credential cache is used, there can be multiple entries that use the same ephemeral keypair / signing certificate. As gitsign assumes both conditions are matched by Rekor, there is no additional validation that the entrys hash matches the payload being verified, meaning that the wrong entry can be used to successfully pass verification. Impact is minimal as while gitsign does not match the payload against the entry, it does ensure that the certificate matches. This would need to be exploited during the certificate validity window (10 minutes) by the key holder.",
    "enhanced_query": "Gitsign is a keyless Sigstore to signing tool for Git commits with your a GitHub / OIDC identity. gitsign may select the wrong Rekor entry to use during online verification when multiple entries are returned by the log. gitsign uses Rekors search API to fetch entries that apply to a signature being verified. The parameters used for the search are the public key and the payload. The search API returns entries that match either condition rather than both. When gitsigns credential cache is used, there can be multiple entries that use the same ephemeral keypair / signing certificate. As gitsign assumes both conditions are matched by Rekor, there is no additional validation that the entrys hash matches the payload being verified, meaning that the wrong entry can be used to successfully pass verification. Impact is minimal as while gitsign does not match the payload against the entry, it does ensure that the certificate matches. This would need to be exploited during the certificate validity window (10 minutes) by the key holder. Consider specifically these CWEs: CWE-335 CWE-1291 CWE-295 CWE-203 CWE-299 CWE-296 CWE-297 CWE-427 CWE-863 CWE-347",
    "cwe_mentions": [
      "CWE-335",
      "CWE-1291",
      "CWE-295",
      "CWE-203",
      "CWE-299",
      "CWE-296",
      "CWE-297",
      "CWE-427",
      "CWE-863",
      "CWE-347"
    ],
    "search_time": 3.6465296745300293
  },
  "timestamp": "2025-07-12 05:48:11",
  "cve_id": "CVE-2024-51746",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "427",
      "name": "Uncontrolled Search Path Element",
      "type": "base",
      "score": 2.3295999999999997,
      "relationship_count": 0
    },
    {
      "cwe_id": "296",
      "name": "Improper Following of a Certificate's Chain of Trust",
      "type": "Base",
      "score": 2.12606281506925,
      "relationship_count": 0
    },
    {
      "cwe_id": "203",
      "name": "Observable Discrepancy",
      "type": "base",
      "score": 2.1189999999999998,
      "relationship_count": 0
    },
    {
      "cwe_id": "297",
      "name": "Improper Validation of Certificate with Host Mismatch",
      "type": "Variant",
      "score": 1.907873385264639,
      "relationship_count": 0
    },
    {
      "cwe_id": "295",
      "name": "Improper Certificate Validation",
      "type": "Base",
      "score": 1.724471284360125,
      "relationship_count": 0
    },
    {
      "cwe_id": "298",
      "name": "Improper Validation of Certificate Expiration",
      "type": "variant",
      "score": 1.6968,
      "relationship_count": 0
    },
    {
      "cwe_id": "299",
      "name": "Improper Check for Certificate Revocation",
      "type": "Base",
      "score": 1.649045804524069,
      "relationship_count": 0
    },
    {
      "cwe_id": "804",
      "name": "Guessable CAPTCHA",
      "type": "base",
      "score": 1.5912000000000004,
      "relationship_count": 0
    },
    {
      "cwe_id": "1291",
      "name": "Public Key Re-Use for Signing both Debug and Production Code",
      "type": "Base",
      "score": 1.5652484975469942,
      "relationship_count": 0
    },
    {
      "cwe_id": "347",
      "name": "Improper Verification of Cryptographic Signature",
      "type": "Base",
      "score": 1.5545694200673876,
      "relationship_count": 0
    },
    {
      "cwe_id": "426",
      "name": "Untrusted Search Path",
      "type": "base",
      "score": 1.521,
      "relationship_count": 0
    },
    {
      "cwe_id": "942",
      "name": "Permissive Cross-domain Policy with Untrusted Domains",
      "type": "variant",
      "score": 1.5024,
      "relationship_count": 0
    },
    {
      "cwe_id": "335",
      "name": "Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)",
      "type": "Base",
      "score": 1.4290448909507822,
      "relationship_count": 0
    },
    {
      "cwe_id": "321",
      "name": "Use of Hard-coded Cryptographic Key",
      "type": "variant",
      "score": 1.404,
      "relationship_count": 0
    },
    {
      "cwe_id": "370",
      "name": "Missing Check for Certificate Revocation after Initial Check",
      "type": "Variant",
      "score": 1.3751518184620817,
      "relationship_count": 0
    },
    {
      "cwe_id": "208",
      "name": "Observable Timing Discrepancy",
      "type": "base",
      "score": 1.3572000000000002,
      "relationship_count": 0
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "type": "class",
      "score": 1.3216,
      "relationship_count": 0
    },
    {
      "cwe_id": "322",
      "name": "Key Exchange without Entity Authentication",
      "type": "Base",
      "score": 1.136883634778605,
      "relationship_count": 0
    },
    {
      "cwe_id": "98",
      "name": "Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')",
      "type": "variant",
      "score": 1.1016,
      "relationship_count": 0
    },
    {
      "cwe_id": "259",
      "name": "Use of Hard-coded Password",
      "type": "variant",
      "score": 1.0584,
      "relationship_count": 0
    }
  ]
}