{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved dlm prevent NPD when writing a positive value to event_done do_uevent returns the value written to event_done. In case it is a positive value, new_lockspace would undo all the work, and lockspace would not be set. __dlm_new_lockspace, however, would treat that positive value as a success due to commit 8511a2728ab8 (dlm fix use count with multiple joins). Down the line, device_create_lockspace would pass that NULL lockspace to dlm_find_lockspace_local, leading to a NULL pointer dereference. Treating such positive values as successes prevents the problem. Given this has been broken for so long, this is unlikely to break userspace expectations.",
  "keyphrases": {
    "weakness": [
      "NULL pointer dereference"
    ]
  },
  "timestamp": "2025-07-12 10:15:21",
  "cve_id": "CVE-2025-23131",
  "result_count": 14,
  "results": [
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "score": 547.2753543524752,
      "search_source": "weakness:NULL pointer dereference"
    },
    {
      "cwe_id": "252",
      "name": "Unchecked Return Value",
      "score": 501.3963690493852,
      "search_source": "weakness:NULL pointer dereference"
    },
    {
      "cwe_id": "617",
      "name": "Reachable Assertion",
      "score": 494.1615303393473,
      "search_source": "weakness:NULL pointer dereference"
    },
    {
      "cwe_id": "191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "score": 476.95891683420535,
      "search_source": "weakness:NULL pointer dereference"
    },
    {
      "cwe_id": "824",
      "name": "Access of Uninitialized Pointer",
      "score": 474.4512331149077,
      "search_source": "weakness:NULL pointer dereference"
    },
    {
      "cwe_id": "665",
      "name": "Improper Initialization",
      "score": 469.75912938066875,
      "search_source": "weakness:NULL pointer dereference"
    },
    {
      "cwe_id": "822",
      "name": "Untrusted Pointer Dereference",
      "score": 469.083055291335,
      "search_source": "weakness:NULL pointer dereference"
    },
    {
      "cwe_id": "456",
      "name": "Missing Initialization of a Variable",
      "score": 459.5697806704923,
      "search_source": "weakness:NULL pointer dereference"
    },
    {
      "cwe_id": "335",
      "name": "Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)",
      "score": 456.33657382820496,
      "search_source": "weakness:NULL pointer dereference"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 455.0680673396871,
      "search_source": "weakness:NULL pointer dereference"
    },
    {
      "cwe_id": "839",
      "name": "Numeric Range Comparison Without Minimum Check",
      "score": 159.94847279129849,
      "search_source": "base_query"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 158.94413015822516,
      "search_source": "base_query"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "score": 156.6782320571203,
      "search_source": "base_query"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "score": 156.4170215811075,
      "search_source": "base_query"
    }
  ]
}