{
  "retriever": "graph",
  "query": "Account users in Apache CloudStack by default are allowed to upload and register templates for deploying instances and volumes for attaching them as data disks to their existing instances. Due to missing validation checks for KVM-compatible templates or volumes in CloudStack 4.0.0 through 4.18.2.3 and 4.19.0.0 through 4.19.1.1, an attacker that can upload or register templates and volumes, can use them to deploy malicious instances or attach uploaded volumes to their existing instances on KVM-based environments and exploit this to gain access to the host filesystems that could result in the compromise of resource integrity and confidentiality, data loss, denial of service, and availability of KVM-based infrastructure managed by CloudStack. Users are recommended to upgrade to Apache CloudStack 4.18.2.4 or 4.19.1.2, or later, which addresses this issue. Additionally, all user-uploaded or registered KVM-compatible templates and volumes can be scanned and checked that they are flat files that should not be using any additional or unnecessary features. For example, operators can run this on their secondary storage(s) and inspect output. An empty output for the disk being validated means it has no references to the host filesystems on the other hand, if the output for the disk being validated is not empty, it might indicate a compromised disk. for file in $(find /path/to/storage/ -type f -regex [a-f0-9\\-]*.*) do echo Retrieving file [$file] info. If the output is not empty Consider specifically these CWEs: CWE-863 CWE-378 CWE-611 CWE-770 CWE-22 CWE-1336 CWE-277 CWE-367 CWE-212",
  "keyphrases": {
    "original_query": "Account users in Apache CloudStack by default are allowed to upload and register templates for deploying instances and volumes for attaching them as data disks to their existing instances. Due to missing validation checks for KVM-compatible templates or volumes in CloudStack 4.0.0 through 4.18.2.3 and 4.19.0.0 through 4.19.1.1, an attacker that can upload or register templates and volumes, can use them to deploy malicious instances or attach uploaded volumes to their existing instances on KVM-based environments and exploit this to gain access to the host filesystems that could result in the compromise of resource integrity and confidentiality, data loss, denial of service, and availability of KVM-based infrastructure managed by CloudStack. Users are recommended to upgrade to Apache CloudStack 4.18.2.4 or 4.19.1.2, or later, which addresses this issue. Additionally, all user-uploaded or registered KVM-compatible templates and volumes can be scanned and checked that they are flat files that should not be using any additional or unnecessary features. For example, operators can run this on their secondary storage(s) and inspect output. An empty output for the disk being validated means it has no references to the host filesystems on the other hand, if the output for the disk being validated is not empty, it might indicate a compromised disk. for file in $(find /path/to/storage/ -type f -regex [a-f0-9\\-]*.*) do echo Retrieving file [$file] info. If the output is not empty",
    "enhanced_query": "Account users in Apache CloudStack by default are allowed to upload and register templates for deploying instances and volumes for attaching them as data disks to their existing instances. Due to missing validation checks for KVM-compatible templates or volumes in CloudStack 4.0.0 through 4.18.2.3 and 4.19.0.0 through 4.19.1.1, an attacker that can upload or register templates and volumes, can use them to deploy malicious instances or attach uploaded volumes to their existing instances on KVM-based environments and exploit this to gain access to the host filesystems that could result in the compromise of resource integrity and confidentiality, data loss, denial of service, and availability of KVM-based infrastructure managed by CloudStack. Users are recommended to upgrade to Apache CloudStack 4.18.2.4 or 4.19.1.2, or later, which addresses this issue. Additionally, all user-uploaded or registered KVM-compatible templates and volumes can be scanned and checked that they are flat files that should not be using any additional or unnecessary features. For example, operators can run this on their secondary storage(s) and inspect output. An empty output for the disk being validated means it has no references to the host filesystems on the other hand, if the output for the disk being validated is not empty, it might indicate a compromised disk. for file in $(find /path/to/storage/ -type f -regex [a-f0-9\\-]*.*) do echo Retrieving file [$file] info. If the output is not empty Consider specifically these CWEs: CWE-863 CWE-378 CWE-611 CWE-770 CWE-22 CWE-1336 CWE-277 CWE-367 CWE-212",
    "cwe_mentions": [
      "CWE-863",
      "CWE-378",
      "CWE-611",
      "CWE-770",
      "CWE-22",
      "CWE-1336",
      "CWE-277",
      "CWE-367",
      "CWE-212"
    ],
    "search_time": 3.2127685546875
  },
  "timestamp": "2025-07-13 16:13:04",
  "cve_id": "CVE-2024-45219",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "type": "base",
      "score": 2.6104000000000003,
      "relationship_count": 0
    },
    {
      "cwe_id": "22",
      "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
      "type": "Base",
      "score": 2.533041035925421,
      "relationship_count": 0
    },
    {
      "cwe_id": "611",
      "name": "Improper Restriction of XML External Entity Reference",
      "type": "base",
      "score": 2.3295999999999997,
      "relationship_count": 0
    },
    {
      "cwe_id": "609",
      "name": "Double-Checked Locking",
      "type": "base",
      "score": 2.2100000000000004,
      "relationship_count": 0
    },
    {
      "cwe_id": "201",
      "name": "Insertion of Sensitive Information Into Sent Data",
      "type": "base",
      "score": 2.2100000000000004,
      "relationship_count": 0
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "type": "Base",
      "score": 1.9714663738868174,
      "relationship_count": 0
    },
    {
      "cwe_id": "363",
      "name": "Race Condition Enabling Link Following",
      "type": "base",
      "score": 1.9562400000000002,
      "relationship_count": 0
    },
    {
      "cwe_id": "94",
      "name": "Improper Control of Generation of Code ('Code Injection')",
      "type": "base",
      "score": 1.8772,
      "relationship_count": 0
    },
    {
      "cwe_id": "59",
      "name": "Improper Link Resolution Before File Access ('Link Following')",
      "type": "base",
      "score": 1.7680000000000005,
      "relationship_count": 0
    },
    {
      "cwe_id": "41",
      "name": "Improper Resolution of Path Equivalence",
      "type": "base",
      "score": 1.7680000000000005,
      "relationship_count": 0
    },
    {
      "cwe_id": "226",
      "name": "Sensitive Information in Resource Not Removed Before Reuse",
      "type": "base",
      "score": 1.7550000000000001,
      "relationship_count": 0
    },
    {
      "cwe_id": "98",
      "name": "Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')",
      "type": "variant",
      "score": 1.6320000000000003,
      "relationship_count": 0
    },
    {
      "cwe_id": "386",
      "name": "Symbolic Name not Mapping to Correct Object",
      "type": "base",
      "score": 1.521,
      "relationship_count": 0
    },
    {
      "cwe_id": "917",
      "name": "Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')",
      "type": "base",
      "score": 1.521,
      "relationship_count": 0
    },
    {
      "cwe_id": "73",
      "name": "External Control of File Name or Path",
      "type": "Base",
      "score": 1.5121687061252325,
      "relationship_count": 0
    },
    {
      "cwe_id": "378",
      "name": "Creation of Temporary File With Insecure Permissions",
      "type": "Base",
      "score": 1.4785637472085027,
      "relationship_count": 0
    },
    {
      "cwe_id": "1336",
      "name": "Improper Neutralization of Special Elements Used in a Template Engine",
      "type": "Base",
      "score": 1.4771021759285465,
      "relationship_count": 0
    },
    {
      "cwe_id": "212",
      "name": "Improper Removal of Sensitive Information Before Storage or Transfer",
      "type": "Base",
      "score": 1.4586676395131664,
      "relationship_count": 0
    },
    {
      "cwe_id": "172",
      "name": "Encoding Error",
      "type": "class",
      "score": 1.3600000000000003,
      "relationship_count": 0
    },
    {
      "cwe_id": "183",
      "name": "Permissive List of Allowed Inputs",
      "type": "base",
      "score": 1.3010400000000002,
      "relationship_count": 0
    }
  ]
}