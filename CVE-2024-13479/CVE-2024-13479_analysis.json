{
  "cve_id": "CVE-2024-13479",
  "description": "The LTL Freight Quotes SEFL Edition plugin for WordPress is vulnerable to SQL Injection via the dropship_edit_id and edit_id parameters in all versions up to, and including, 3.2.4 due to **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**. This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.",
  "key_phrases": {
    "rootcause": [
      "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
      "insufficient escaping on user supplied parameter"
    ],
    "weakness": "SQL injection",
    "impact": [
      "extract sensitive information from the database",
      "extract sensitive information from database"
    ],
    "vector": "",
    "attacker": "unauthenticated attackers",
    "product": "LTL Freight Quotes SEFL Edition WordPress plugin",
    "version": "all versions up to and including 3.2.4",
    "component": ""
  },
  "reference_content": null,
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n\n| CWE ID  | CWE Name                                                                                | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :-------------------------------------------------------------------------------------- | :----------- | :---------------------- | :------------------------------ | :------------------------------ |\n| CWE-89 | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 1          | Base                    | Primary                         | Allowed                       |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary CWE is CWE-89, which is a base level CWE. There is a hierarchical relationship between CWE-89 and CWE-74, with CWE-89 being a child of CWE-74 (Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')). Since the vulnerability is specifically related to SQL injection, CWE-89 is the more appropriate choice.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n    \n    cwe89 -->|CHILDOF| cwe74\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe89 primary\n    class cwe74 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**. This leads to **SQL Injection**, which allows attackers to **extract sensitive information from the database**.\n\n## Summary of Analysis\n\nThe analysis is based on the provided vulnerability description, which clearly states that the vulnerability is an SQL injection due to **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**. The description explicitly mentions \"SQL Injection\" and the impact of the vulnerability is the ability to \"extract sensitive information from the database\".\n\nThe selection of CWE-89 is based on the explicit mention of SQL injection in the vulnerability description, as well as the **root cause** of the vulnerability being **insufficient escaping** and **lack of sufficient preparation on the existing SQL query**. This aligns with the CWE-89 description, which focuses on **improper neutralization of special elements used in an SQL command**.\n\nThe retriever results also list CWE-89 as the most relevant CWE for the **weakness** \"SQL injection.\"\n\nCWE-89 is at the optimal level of specificity because it directly addresses the SQL injection vulnerability, which is the core issue.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction Level**: Class\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n## CWE-319: Cleartext Transmission of Sensitive Information\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-184: Incomplete List of Disallowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 4809.66\n**Source**: sparse\n\n**Description**:\nThe product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 4562.12\n**Source**: sparse\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-",
  "analysis_with_relationships": "# Summary\n\n| CWE ID  | CWE Name                                                                                | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :-------------------------------------------------------------------------------------- | :----------- | :---------------------- | :------------------------------ | :------------------------------ |\n| CWE-89 | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 1          | Base                    | Primary                         | Allowed                       |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary CWE is CWE-89, which is a base level CWE. There is a hierarchical relationship between CWE-89 and CWE-74, with CWE-89 being a child of CWE-74 (Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')). Since the vulnerability is specifically related to SQL injection, CWE-89 is the more appropriate choice.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n    \n    cwe89 -->|CHILDOF| cwe74\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe89 primary\n    class cwe74 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**. This leads to **SQL Injection**, which allows attackers to **extract sensitive information from the database**.\n\n## Summary of Analysis\n\nThe analysis is based on the provided vulnerability description, which clearly states that the vulnerability is an SQL injection due to **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**. The description explicitly mentions \"SQL Injection\" and the impact of the vulnerability is the ability to \"extract sensitive information from the database\".\n\nThe selection of CWE-89 is based on the explicit mention of SQL injection in the vulnerability description, as well as the **root cause** of the vulnerability being **insufficient escaping** and **lack of sufficient preparation on the existing SQL query**. This aligns with the CWE-89 description, which focuses on **improper neutralization of special elements used in an SQL command**.\n\nThe retriever results also list CWE-89 as the most relevant CWE for the **weakness** \"SQL injection.\"\n\nCWE-89 is at the optimal level of specificity because it directly addresses the SQL injection vulnerability, which is the core issue.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction Level**: Class\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n## CWE-319: Cleartext Transmission of Sensitive Information\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-303: Incorrect Implementation of Authentication Algorithm\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-184: Incomplete List of Disallowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 4809.66\n**Source**: sparse\n\n**Description**:\nThe product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 4562.12\n**Source**: sparse\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-90:**\n- 90 (Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')) - ROOT\n\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user supplied parameter",
            "keyphrase": "insufficient escaping on user supplied parameter",
            "type": "rootcause"
          },
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "impact:extract sensitive information from database",
            "keyphrase": "extract sensitive information from database",
            "type": "impact"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:LTL Freight Quotes SEFL Edition WordPress plugin",
            "keyphrase": "LTL Freight Quotes SEFL Edition WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:all versions up to and including 3.2.4",
            "keyphrase": "all versions up to and including 3.2.4",
            "type": "version"
          }
        ]
      },
      "similarity": 744.8072373534615
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user supplied parameter",
            "keyphrase": "insufficient escaping on user supplied parameter",
            "type": "rootcause"
          },
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "impact:extract sensitive information from database",
            "keyphrase": "extract sensitive information from database",
            "type": "impact"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:LTL Freight Quotes SEFL Edition WordPress plugin",
            "keyphrase": "LTL Freight Quotes SEFL Edition WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:all versions up to and including 3.2.4",
            "keyphrase": "all versions up to and including 3.2.4",
            "type": "version"
          }
        ]
      },
      "similarity": 695.963694433048
    },
    {
      "metadata": {
        "doc_id": "90",
        "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user supplied parameter",
            "keyphrase": "insufficient escaping on user supplied parameter",
            "type": "rootcause"
          },
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "impact:extract sensitive information from database",
            "keyphrase": "extract sensitive information from database",
            "type": "impact"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:LTL Freight Quotes SEFL Edition WordPress plugin",
            "keyphrase": "LTL Freight Quotes SEFL Edition WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:all versions up to and including 3.2.4",
            "keyphrase": "all versions up to and including 3.2.4",
            "type": "version"
          }
        ]
      },
      "similarity": 666.7187200771006
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user supplied parameter",
            "keyphrase": "insufficient escaping on user supplied parameter",
            "type": "rootcause"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "impact:extract sensitive information from database",
            "keyphrase": "extract sensitive information from database",
            "type": "impact"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:LTL Freight Quotes SEFL Edition WordPress plugin",
            "keyphrase": "LTL Freight Quotes SEFL Edition WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:all versions up to and including 3.2.4",
            "keyphrase": "all versions up to and including 3.2.4",
            "type": "version"
          }
        ]
      },
      "similarity": 652.3147738275371
    },
    {
      "metadata": {
        "doc_id": "790",
        "name": "Improper Filtering of Special Elements",
        "source": "sparse",
        "original_content": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user supplied parameter",
            "keyphrase": "insufficient escaping on user supplied parameter",
            "type": "rootcause"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "version:all versions up to and including 3.2.4",
            "keyphrase": "all versions up to and including 3.2.4",
            "type": "version"
          }
        ]
      },
      "similarity": 623.439235334057
    },
    {
      "metadata": {
        "doc_id": "943",
        "name": "Improper Neutralization of Special Elements in Data Query Logic",
        "source": "sparse",
        "original_content": "The product generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query.",
        "keyphrase_sources": [
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "impact:extract sensitive information from database",
            "keyphrase": "extract sensitive information from database",
            "type": "impact"
          }
        ]
      },
      "similarity": 431.9443908899467
    },
    {
      "metadata": {
        "doc_id": "502",
        "name": "Deserialization of Untrusted Data",
        "source": "sparse",
        "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.",
        "keyphrase_sources": [
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "product:LTL Freight Quotes SEFL Edition WordPress plugin",
            "keyphrase": "LTL Freight Quotes SEFL Edition WordPress plugin",
            "type": "product"
          }
        ]
      },
      "similarity": 426.81808870654896
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-90",
      "CWE-89",
      "CWE-116",
      "CWE-319",
      "CWE-212",
      "CWE-472",
      "CWE-352",
      "CWE-74",
      "CWE-303",
      "CWE-138",
      "CWE-184",
      "CWE-425"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "116": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user supplied parameter",
        "keyphrase": "insufficient escaping on user supplied parameter",
        "type": "rootcause"
      },
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "impact:extract sensitive information from database",
        "keyphrase": "extract sensitive information from database",
        "type": "impact"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:LTL Freight Quotes SEFL Edition WordPress plugin",
        "keyphrase": "LTL Freight Quotes SEFL Edition WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:all versions up to and including 3.2.4",
        "keyphrase": "all versions up to and including 3.2.4",
        "type": "version"
      }
    ],
    "89": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user supplied parameter",
        "keyphrase": "insufficient escaping on user supplied parameter",
        "type": "rootcause"
      },
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "impact:extract sensitive information from database",
        "keyphrase": "extract sensitive information from database",
        "type": "impact"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:LTL Freight Quotes SEFL Edition WordPress plugin",
        "keyphrase": "LTL Freight Quotes SEFL Edition WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:all versions up to and including 3.2.4",
        "keyphrase": "all versions up to and including 3.2.4",
        "type": "version"
      }
    ],
    "90": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user supplied parameter",
        "keyphrase": "insufficient escaping on user supplied parameter",
        "type": "rootcause"
      },
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "impact:extract sensitive information from database",
        "keyphrase": "extract sensitive information from database",
        "type": "impact"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:LTL Freight Quotes SEFL Edition WordPress plugin",
        "keyphrase": "LTL Freight Quotes SEFL Edition WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:all versions up to and including 3.2.4",
        "keyphrase": "all versions up to and including 3.2.4",
        "type": "version"
      }
    ],
    "352": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user supplied parameter",
        "keyphrase": "insufficient escaping on user supplied parameter",
        "type": "rootcause"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "impact:extract sensitive information from database",
        "keyphrase": "extract sensitive information from database",
        "type": "impact"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:LTL Freight Quotes SEFL Edition WordPress plugin",
        "keyphrase": "LTL Freight Quotes SEFL Edition WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:all versions up to and including 3.2.4",
        "keyphrase": "all versions up to and including 3.2.4",
        "type": "version"
      }
    ],
    "790": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user supplied parameter",
        "keyphrase": "insufficient escaping on user supplied parameter",
        "type": "rootcause"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "version:all versions up to and including 3.2.4",
        "keyphrase": "all versions up to and including 3.2.4",
        "type": "version"
      }
    ],
    "943": [
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "impact:extract sensitive information from database",
        "keyphrase": "extract sensitive information from database",
        "type": "impact"
      }
    ],
    "502": [
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "product:LTL Freight Quotes SEFL Edition WordPress plugin",
        "keyphrase": "LTL Freight Quotes SEFL Edition WordPress plugin",
        "type": "product"
      }
    ]
  }
}