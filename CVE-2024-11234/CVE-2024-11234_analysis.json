{
  "cve_id": "CVE-2024-11234",
  "description": "In PHP versions 8.1.* before 8.1.31, 8.2.* before 8.2.26, 8.3.* before 8.3.14, when using streams with configured proxy and request_fulluri option, the URI is not properly sanitized which can lead to **HTTP request smuggling** and allow the attacker to use the proxy to perform arbitrary HTTP requests originating from the server, thus potentially gaining access to resources not normally available to the external user.",
  "key_phrases": {
    "rootcause": "improper URI sanitization",
    "weakness": "HTTP request smuggling",
    "impact": "arbitrary HTTP request execution",
    "vector": "",
    "attacker": "",
    "product": "PHP",
    "version": "8.1.* before 8.1.31, 8.2.* before 8.2.26, 8.3.* before 8.3.14",
    "component": "streams with configured proxy and request_fulluri option"
  },
  "reference_content": "- **Root cause of vulnerability:** The vulnerability lies in the implementation of the `request_fulluri` parameter in PHP's stream context, which inserts the raw URI into the HTTP request line without proper sanitization, bypassing the usual control character checks. This allows for CRLF injection.\n- **Weaknesses/vulnerabilities present:**\n    - CRLF injection vulnerability in HTTP request line.\n    - Lack of sanitization of user-controlled URI when `request_fulluri` is enabled.\n    - Automatic enabling of `request_fulluri` for non-HTTP streams when a proxy is set.\n- **Impact of exploitation:**\n    - HTTP request smuggling attacks.\n    - Server Side Request Forgery (SSRF), allowing attackers to bypass security controls and access internal endpoints.\n    - Ability to control the Host header and potentially access different hosts.\n    - Possibility to inject arbitrary HTTP methods and headers, including sensitive headers.\n    - In certain setups, the attacker might be able to read the HTTP responses of smuggled requests.\n- **Attack vectors:**\n    - An attacker can inject CRLF characters into the URI when the `request_fulluri` context parameter is true, either through HTTP or FTP streams that have a proxy configured.\n- **Required attacker capabilities/position:**\n    - Partial control over the resource URI being requested.\n    - Ability to influence the stream context and set the `request_fulluri` parameter either directly or through proxy settings.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-93 | Improper Neutralization of CRLF Sequences ('CRLF Injection') | 0.9 | Base | Allowed | Primary CWE |\n| CWE-444 | Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling') | 0.7 | Base | Allowed | Secondary Candidate |\n| CWE-918 | Server-Side Request Forgery (SSRF) | 0.5 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is CWE-93, which describes the **improper neutralization of CRLF sequences**. This can lead to higher-level vulnerabilities like CWE-444 (**HTTP Request Smuggling**) and CWE-918 (**SSRF**). CWE-93 is a child of CWE-74 (Improper Neutralization of Special Elements in Output Used as an Instruction).\n\n```mermaid\ngraph TD\n    cwe93[\"CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')\"]\n    cwe444[\"CWE-444: Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')\"]\n    cwe918[\"CWE-918: Server-Side Request Forgery (SSRF)\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used as an Instruction\"]\n\n    cwe93 -->|CHILDOF| cwe74\n    cwe444 <--|CANRESULTIN| cwe93\n    cwe918 <--|CANRESULTIN| cwe93\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe93 primary\n    class cwe444,cwe918 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **improper URI sanitization** (the **root cause**). This leads to the **improper neutralization of CRLF sequences (CWE-93)**. The lack of CRLF neutralization then enables **HTTP request smuggling (CWE-444)**, potentially allowing an attacker to perform **Server-Side Request Forgery (CWE-918)**.\n\n## Summary of Analysis\nThe primary CWE selected is CWE-93 because the **root cause** of the vulnerability is the **improper neutralization of CRLF sequences** in the URI. The CVE description states that the \"URI is not properly sanitized which can lead to HTTP request smuggling\". The CVE Reference Links Content Summary explicitly mentions \"CRLF injection vulnerability in HTTP request line\" and \"Lack of sanitization of user-controlled URI when `request_fulluri` is enabled.\"\n\nCWE-444 is considered a secondary candidate because HTTP request smuggling is a consequence of the CRLF injection. The vulnerability description states that the **improper URI sanitization** can lead to **HTTP request smuggling**.\n\nCWE-918 is also a secondary candidate because the HTTP request smuggling can further lead to Server-Side Request Forgery (SSRF), as the attacker can then make arbitrary requests. The CVE Reference Links Content Summary mentions \"Server Side Request Forgery (SSRF), allowing attackers to bypass security controls and access internal endpoints.\"\n\nThe selection of CWE-93 is based on the root cause analysis and the evidence provided in the CVE description and CVE Reference Links Content Summary. The confidence level is high because there is sufficient evidence to support the mapping. The abstraction level is Base, which is the preferred level for mapping to the root causes of vulnerabilities.\n\nRelevant CWE Information:\n- CWE-113 was considered but is too specific because it focuses on HTTP headers. CWE-93 is more general and covers CRLF injection in other contexts as well, which aligns with the vulnerability description.\n- CWE-444 was considered as a primary CWE, but it is a consequence of the CRLF injection, not the **root cause**.\n- CWE-918 was also considered, but it's an impact of the **HTTP request smuggling** rather than the initial weakness.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-93 | Improper Neutralization of CRLF Sequences ('CRLF Injection') | 0.9 | Base | Allowed | Primary CWE |\n| CWE-444 | Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling') | 0.7 | Base | Allowed | Secondary Candidate |\n| CWE-918 | Server-Side Request Forgery (SSRF) | 0.5 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is CWE-93, which describes the **improper neutralization of CRLF sequences**. This can lead to higher-level vulnerabilities like CWE-444 (**HTTP Request Smuggling**) and CWE-918 (**SSRF**). CWE-93 is a child of CWE-74 (Improper Neutralization of Special Elements in Output Used as an Instruction).\n\n```mermaid\ngraph TD\n    cwe93[\"CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')\"]\n    cwe444[\"CWE-444: Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')\"]\n    cwe918[\"CWE-918: Server-Side Request Forgery (SSRF)\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used as an Instruction\"]\n\n    cwe93 -->|CHILDOF| cwe74\n    cwe444 <--|CANRESULTIN| cwe93\n    cwe918 <--|CANRESULTIN| cwe93\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe93 primary\n    class cwe444,cwe918 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **improper URI sanitization** (the **root cause**). This leads to the **improper neutralization of CRLF sequences (CWE-93)**. The lack of CRLF neutralization then enables **HTTP request smuggling (CWE-444)**, potentially allowing an attacker to perform **Server-Side Request Forgery (CWE-918)**.\n\n## Summary of Analysis\nThe primary CWE selected is CWE-93 because the **root cause** of the vulnerability is the **improper neutralization of CRLF sequences** in the URI. The CVE description states that the \"URI is not properly sanitized which can lead to HTTP request smuggling\". The CVE Reference Links Content Summary explicitly mentions \"CRLF injection vulnerability in HTTP request line\" and \"Lack of sanitization of user-controlled URI when `request_fulluri` is enabled.\"\n\nCWE-444 is considered a secondary candidate because HTTP request smuggling is a consequence of the CRLF injection. The vulnerability description states that the **improper URI sanitization** can lead to **HTTP request smuggling**.\n\nCWE-918 is also a secondary candidate because the HTTP request smuggling can further lead to Server-Side Request Forgery (SSRF), as the attacker can then make arbitrary requests. The CVE Reference Links Content Summary mentions \"Server Side Request Forgery (SSRF), allowing attackers to bypass security controls and access internal endpoints.\"\n\nThe selection of CWE-93 is based on the root cause analysis and the evidence provided in the CVE description and CVE Reference Links Content Summary. The confidence level is high because there is sufficient evidence to support the mapping. The abstraction level is Base, which is the preferred level for mapping to the root causes of vulnerabilities.\n\nRelevant CWE Information:\n- CWE-113 was considered but is too specific because it focuses on HTTP headers. CWE-93 is more general and covers CRLF injection in other contexts as well, which aligns with the vulnerability description.\n- CWE-444 was considered as a primary CWE, but it is a consequence of the CRLF injection, not the **root cause**.\n- CWE-918 was also considered, but it's an impact of the **HTTP request smuggling** rather than the initial weakness.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-93:**\n- 93 (Improper Neutralization of CRLF Sequences ('CRLF Injection')) - ROOT\n\n\n**Chain starting from CWE-444:**\n- 444 (Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "444",
        "name": "Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling')",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: HTTP Request Smuggling",
        "match_reason": "exact_match_whole_phrase"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 418.1915739755133
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 416.570825906727
    },
    {
      "metadata": {
        "doc_id": "923",
        "name": "Improper Restriction of Communication Channel to Intended Endpoints",
        "source": "sparse"
      },
      "similarity": 411.34581145874745
    },
    {
      "metadata": {
        "doc_id": "138",
        "name": "Improper Neutralization of Special Elements",
        "source": "sparse"
      },
      "similarity": 409.2560515458217
    },
    {
      "metadata": {
        "doc_id": "113",
        "name": "Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')",
        "source": "sparse"
      },
      "similarity": 406.2692310085493
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 402.6659205961731
    },
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "sparse"
      },
      "similarity": 396.49707555232294
    },
    {
      "metadata": {
        "doc_id": "473",
        "name": "PHP External Variable Modification",
        "type": "Variant",
        "original_content": "A PHP application does not properly protect against the modification of variables from external sources, such as query parameters or cookies. This can expose the application to numerous weaknesses that would not exist otherwise.",
        "keyphrase_source": "weakness:HTTP request smuggling",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.511503757141891,
            "graph": 2.1708741302942887
          }
        }
      },
      "similarity": 0.511503757141891
    },
    {
      "doc_id": "1275",
      "text": "CWE-1275: Sensitive Cookie with Improper SameSite Attribute",
      "score": 2.2704,
      "metadata": {
        "doc_id": "1275",
        "name": "Sensitive Cookie with Improper SameSite Attribute",
        "type": "variant",
        "original_content": "CWE-1275: Sensitive Cookie with Improper SameSite Attribute",
        "relationships": [
          {
            "source_id": "1275",
            "target_id": "352",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1275",
            "target_id": "923",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "923",
            "target_id": "1275",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "352",
            "target_id": "1275",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 0.8,
          "abstraction_path": 0.76,
          "sequence_path": 0.8
        },
        "abstraction_factor": 1.2,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "441",
                  "352",
                  "REQUIREDBY"
                ],
                [
                  "352",
                  "1275",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.8,
              "type": "relationship_chain",
              "source": "441"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "923",
                  "1275",
                  "PARENTOF"
                ]
              ],
              "score": 0.76,
              "type": "abstraction_path_down",
              "source": "923"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "441",
                  "352",
                  "REQUIREDBY"
                ],
                [
                  "352",
                  "1275",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.7200000000000001,
              "type": "vulnerability_sequence_forward",
              "source": "441"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "352",
                  "441",
                  "REQUIRES"
                ],
                [
                  "1275",
                  "352",
                  "CANPRECEDE"
                ]
              ],
              "score": 0.8,
              "type": "vulnerability_sequence_backward",
              "source": "441"
            }
          }
        },
        "abstraction_level": "variant",
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2704
          }
        }
      },
      "similarity": 2.2704
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-93",
      "CWE-444",
      "CWE-113",
      "CWE-74",
      "CWE-918"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}