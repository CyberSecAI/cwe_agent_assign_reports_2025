{
  "method": "sparse_combined",
  "query": "In the Linux kernel, the following vulnerability has been resolved net_sched Flush gso_skb list too during ->change() Previously, when reducing a qdiscs limit via the ->change() operation, only the main skb queue was trimmed, potentially leaving packets in the gso_skb list. This could result in NULL pointer dereference when we only check sch->limit against sch->q.qlen. This patch introduces a new helper, qdisc_dequeue_internal(), which ensures both the gso_skb list and the main queue are properly flushed when trimming excess packets. All relevant qdiscs (codel, fq, fq_codel, fq_pie, hhf, pie) are updated to use this helper in their ->change() routines.",
  "keyphrases": {
    "weakness": [
      "NULL pointer dereference",
      "Null pointer dereference"
    ]
  },
  "timestamp": "2025-07-12T13:34:07.439359",
  "results_count": 13,
  "results_summary": [
    {
      "doc_id": "476",
      "name": "NULL Pointer Dereference",
      "score": 430.333514414072
    },
    {
      "doc_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "score": 383.6410916575356
    },
    {
      "doc_id": "833",
      "name": "Deadlock",
      "score": 372.1691752579041
    },
    {
      "doc_id": "822",
      "name": "Untrusted Pointer Dereference",
      "score": 369.4769418235976
    },
    {
      "doc_id": "667",
      "name": "Improper Locking",
      "score": 368.18193910817126
    }
  ]
}