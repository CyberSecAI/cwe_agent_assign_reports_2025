{
  "cve_id": "CVE-2024-10632",
  "description": "The Nokaut Offers Box WordPress plugin through 1.4.0 does not sanitize and escape some of its settings, which could allow high-privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)",
  "key_phrases": {
    "rootcause": "",
    "weakness": "cross-site scripting",
    "impact": "Stored Cross-Site Scripting attacks",
    "vector": "",
    "attacker": "high-privilege users such as admin",
    "product": "Nokaut Offers Box WordPress plugin",
    "version": "through 1.4.0",
    "component": ""
  },
  "reference_content": "Here's an analysis of the provided content:\n\n**Content from wpscan.com_3d741d2c_20250624_195450.html (stripped)**\n\n*   **Relates to CVE-2024-10632:** YES\n\n*   **Vulnerability Information:**\n    *   **Weaknesses/vulnerabilities present:** Stored Cross-Site Scripting (XSS) vulnerability. The plugin does not sanitize and escape some of its settings.\n    *   **Impact of exploitation:** Allows high-privilege users (admin) to perform stored XSS attacks.\n    *   **Attack vectors:**\n        1.  Go to the Nokaut Offers Box plugin panel in your dashboard.\n        2.  Go to settings tab.\n        3.  In settings tab, \"Nazwa domy\u015blnego szablonu\" is vulnerable\n        4.  Enter the payload (`\"><script>alert(document.cookie)</script>`) into the input field and click on Save Changes button.\n    *   **Required attacker capabilities/position:** High-privilege users such as admin.\n    *   **Mitigation or fix:** No known fix.\n    *   **More detail than CVE description:** YES",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Allowed | Primary CWE. The plugin **does not sanitize and escape some of its settings**, leading to XSS. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-79, which is a Base level CWE and therefore specific. There are several parent CWEs of CWE-79, such as CWE-116 (Improper Encoding or Escaping of Output) and CWE-74 (Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')). However, CWE-79 is the most specific and accurate representation of the vulnerability.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n    \n    cwe79 -->|CHILDOF| cwe74\n    cwe79 -->|CHILDOF| cwe116\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe79 primary\n    class cwe74,cwe116 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **failure to sanitize and escape settings**, leading to the injection of malicious code into the web page, which then executes in the context of other users.\n  - The root cause is the **improper neutralization of input**, specifically CWE-79.\n  - The impact is the execution of Stored Cross-Site Scripting attacks.\n\n## Summary of Analysis\nThe vulnerability is a Stored Cross-Site Scripting (XSS) vulnerability in the Nokaut Offers Box WordPress plugin. The plugin **does not sanitize and escape some of its settings**, which allows high-privilege users to inject malicious code into the settings, leading to the execution of the code in the context of other users.\n\nThe primary CWE is CWE-79, which is the most specific and accurate representation of the vulnerability. The retriever results also list CWE-79 as a potential candidate, further supporting this decision.\n\nThe evidence for this assessment is the vulnerability description, which states that the plugin **does not sanitize and escape some of its settings**.\n\nThe graph relationships influenced the final selection by showing the parent-child relationships between CWE-79 and other CWEs. This helped to ensure that the most specific and accurate CWE was selected.\n\nCWE-79 is at the optimal level of specificity because it is a Base level CWE and accurately represents the weakness described in the vulnerability description.\n\nRelevant CWE Information:\n* CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') - The product **does not neutralize or incorrectly neutralizes user-controllable input** before it is placed in output that is used as a web page that is served to other users. This matches the vulnerability description, which states that the plugin **does not sanitize and escape some of its settings**.\n\nOther CWEs Considered:\n* CWE-352: Cross-Site Request Forgery (CSRF) - This CWE was considered because it is a common web application vulnerability. However, it was not selected because the vulnerability description does not mention CSRF.\n* CWE-116: Improper Encoding or Escaping of Output - This CWE was considered because it is a parent of CWE-79. However, CWE-79 is more specific and accurately represents the vulnerability.\n* CWE-434: Unrestricted Upload of File with Dangerous Type - This CWE was considered because it is a common web application vulnerability. However, it was not selected because the vulnerability description does not mention file uploads.\n* CWE-862: Missing Authorization - This CWE was considered because the vulnerability description mentions high-privilege users. However, the vulnerability is not related to missing authorization. It is related to improper neutralization of input.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Allowed | Primary CWE. The plugin **does not sanitize and escape some of its settings**, leading to XSS. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-79, which is a Base level CWE and therefore specific. There are several parent CWEs of CWE-79, such as CWE-116 (Improper Encoding or Escaping of Output) and CWE-74 (Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')). However, CWE-79 is the most specific and accurate representation of the vulnerability.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n    \n    cwe79 -->|CHILDOF| cwe74\n    cwe79 -->|CHILDOF| cwe116\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe79 primary\n    class cwe74,cwe116 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **failure to sanitize and escape settings**, leading to the injection of malicious code into the web page, which then executes in the context of other users.\n  - The root cause is the **improper neutralization of input**, specifically CWE-79.\n  - The impact is the execution of Stored Cross-Site Scripting attacks.\n\n## Summary of Analysis\nThe vulnerability is a Stored Cross-Site Scripting (XSS) vulnerability in the Nokaut Offers Box WordPress plugin. The plugin **does not sanitize and escape some of its settings**, which allows high-privilege users to inject malicious code into the settings, leading to the execution of the code in the context of other users.\n\nThe primary CWE is CWE-79, which is the most specific and accurate representation of the vulnerability. The retriever results also list CWE-79 as a potential candidate, further supporting this decision.\n\nThe evidence for this assessment is the vulnerability description, which states that the plugin **does not sanitize and escape some of its settings**.\n\nThe graph relationships influenced the final selection by showing the parent-child relationships between CWE-79 and other CWEs. This helped to ensure that the most specific and accurate CWE was selected.\n\nCWE-79 is at the optimal level of specificity because it is a Base level CWE and accurately represents the weakness described in the vulnerability description.\n\nRelevant CWE Information:\n* CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') - The product **does not neutralize or incorrectly neutralizes user-controllable input** before it is placed in output that is used as a web page that is served to other users. This matches the vulnerability description, which states that the plugin **does not sanitize and escape some of its settings**.\n\nOther CWEs Considered:\n* CWE-352: Cross-Site Request Forgery (CSRF) - This CWE was considered because it is a common web application vulnerability. However, it was not selected because the vulnerability description does not mention CSRF.\n* CWE-116: Improper Encoding or Escaping of Output - This CWE was considered because it is a parent of CWE-79. However, CWE-79 is more specific and accurately represents the vulnerability.\n* CWE-434: Unrestricted Upload of File with Dangerous Type - This CWE was considered because it is a common web application vulnerability. However, it was not selected because the vulnerability description does not mention file uploads.\n* CWE-862: Missing Authorization - This CWE was considered because the vulnerability description mentions high-privilege users. However, the vulnerability is not related to missing authorization. It is related to improper neutralization of input.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n**Chain starting from CWE-862:**\n- 862 (Missing Authorization) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 367.121972887044
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 301.3385032586509
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 281.2489151229614
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse"
      },
      "similarity": 281.06603061769727
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 271.69588962604047
    },
    {
      "metadata": {
        "doc_id": "138",
        "name": "Improper Neutralization of Special Elements",
        "source": "sparse"
      },
      "similarity": 265.72250216665225
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 257.32770017787414
    },
    {
      "metadata": {
        "doc_id": "918",
        "name": "Server-Side Request Forgery (SSRF)",
        "source": "sparse"
      },
      "similarity": 227.27506932056684
    },
    {
      "metadata": {
        "doc_id": "96",
        "name": "Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')",
        "type": "Base",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before inserting the input into an executable resource, such as a library, configuration file, or template.",
        "keyphrase_source": "weakness:cross-site scripting",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5107213299945811,
            "graph": 1.6259133802931989
          }
        }
      },
      "similarity": 0.5107213299945811
    },
    {
      "doc_id": "73",
      "text": "CWE-73: External Control of File Name or Path",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "73",
        "name": "External Control of File Name or Path",
        "type": "base",
        "original_content": "CWE-73: External Control of File Name or Path",
        "relationships": [
          {
            "source_id": "73",
            "target_id": "114",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "59",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "434",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "41",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "22",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "20",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "700"
            }
          },
          {
            "source_id": "73",
            "target_id": "610",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "642",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "99",
            "target_id": "73",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "642",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "610",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "59",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "434",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "22",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "20",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "700"
            }
          },
          {
            "source_id": "114",
            "target_id": "73",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "434",
                  "73",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "434"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "434",
                  "73",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "434"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "73",
                  "434",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "434"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-116",
      "CWE-862",
      "CWE-79",
      "CWE-352",
      "CWE-74",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}