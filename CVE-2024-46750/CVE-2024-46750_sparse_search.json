{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved PCI Add missing bridge lock to pci_bus_lock() One of the true positives that the cfg_access_lock lockdep effort identified is this sequence WARNING CPU 14 PID 1 at drivers/pci/pci.c4886 pci_bridge_secondary_bus_reset+0x5d/0x70 RIP 0010pci_bridge_secondary_bus_reset+0x5d/0x70 Call Trace ? __warn+0x8c/0x190 ? pci_bridge_secondary_bus_reset+0x5d/0x70 ? report_bug+0x1f8/0x200 ? handle_bug+0x3c/0x70 ? exc_invalid_op+0x18/0x70 ? asm_exc_invalid_op+0x1a/0x20 ? pci_bridge_secondary_bus_reset+0x5d/0x70 pci_reset_bus+0x1d8/0x270 vmd_probe+0x778/0xa10 pci_device_probe+0x95/0x120 Where pci_reset_bus() users are triggering unlocked secondary bus resets. Ironically pci_bus_reset(), several calls down from pci_reset_bus(), uses pci_bus_lock() before issuing the reset which locks everything *but* the bridge itself. For the same motivation as adding bridge = pci_upstream_bridge(dev) if (bridge) pci_dev_lock(bridge) to pci_reset_function() for the bus and cxl_bus reset cases, add pci_dev_lock() for @bus->self to pci_bus_lock(). [bhelgaas squash in recursive locking deadlock fix from Keith Busch https//lore.kernel.org/r/20240711193650.701834-1-kbusch@meta.com]",
  "keyphrases": {
    "rootcause": [
      "missing bridge lock"
    ]
  },
  "timestamp": "2025-07-12 04:46:21",
  "cve_id": "CVE-2024-46750",
  "result_count": 11,
  "results": [
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "score": 469.1948192537649,
      "search_source": "rootcause:missing bridge lock"
    },
    {
      "cwe_id": "1292",
      "name": "Incorrect Conversion of Security Identifiers",
      "score": 465.8148912235414,
      "search_source": "rootcause:missing bridge lock"
    },
    {
      "cwe_id": "1317",
      "name": "Improper Access Control in Fabric Bridge",
      "score": 458.21049675591007,
      "search_source": "rootcause:missing bridge lock"
    },
    {
      "cwe_id": "321",
      "name": "Use of Hard-coded Cryptographic Key",
      "score": 436.77097389448966,
      "search_source": "rootcause:missing bridge lock"
    },
    {
      "cwe_id": "732",
      "name": "Incorrect Permission Assignment for Critical Resource",
      "score": 436.3349212728885,
      "search_source": "rootcause:missing bridge lock"
    },
    {
      "cwe_id": "787",
      "name": "Out-of-bounds Write",
      "score": 430.39879007875214,
      "search_source": "rootcause:missing bridge lock"
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "score": 426.5447512236824,
      "search_source": "rootcause:missing bridge lock"
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "score": 422.5437856355965,
      "search_source": "rootcause:missing bridge lock"
    },
    {
      "cwe_id": "1311",
      "name": "Improper Translation of Security Attributes by Fabric Bridge",
      "score": 419.83599056093396,
      "search_source": "rootcause:missing bridge lock"
    },
    {
      "cwe_id": "668",
      "name": "Exposure of Resource to Wrong Sphere",
      "score": 418.34804023453876,
      "search_source": "rootcause:missing bridge lock"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 135.2644641501169,
      "search_source": "base_query"
    }
  ]
}