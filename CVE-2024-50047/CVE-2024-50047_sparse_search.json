{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved smb client fix UAF in async decryption Doing an async decryption (large read) crashes with a slab-use-after-free way down in the crypto API. Reproducer # mount.cifs -o ...,seal,esize=1 //srv/share /mnt # dd if=/mnt/largefile of=/dev/null ... [ 194.196391] ================================================================== [ 194.196844] BUG KASAN slab-use-after-free in gf128mul_4k_lle+0xc1/0x110 [ 194.197269] Read of size 8 at addr ffff888112bd0448 by task kworker/u772/899 [ 194.197707] [ 194.197818] CPU 12 UID 0 PID 899 Comm kworker/u772 Not tainted 6.11.0-lku-00028-gfca3ca14a17a-dirty #43 [ 194.198400] Hardware name QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.2-3-gd478f380-prebuilt.qemu.org 04/01/2014 [ 194.199046] Workqueue smb3decryptd smb2_decrypt_offload [cifs] [ 194.200032] Call Trace [ 194.200191] [ 194.200327] dump_stack_lvl+0x4e/0x70 [ 194.200558] ? gf128mul_4k_lle+0xc1/0x110 [ 194.200809] print_report+0x174/0x505 [ 194.201040] ? __pfx__raw_spin_lock_irqsave+0x10/0x10 [ 194.201352] ? srso_return_thunk+0x5/0x5f [ 194.201604] ? __virt_addr_valid+0xdf/0x1c0 [ 194.201868] ? gf128mul_4k_lle+0xc1/0x110 [ 194.202128] kasan_report+0xc8/0x150 [ 194.202361] ? gf128mul_4k_lle+0xc1/0x110 [ 194.202616] gf128mul_4k_lle+0xc1/0x110 [ 194.202863] ghash_update+0x184/0x210 [ 194.203103] shash_ahash_update+0x184/0x2a0 [ 194.203377] ? __pfx_shash_ahash_update+0x10/0x10 [ 194.203651] ? srso_return_thunk+0x5/0x5f [ 194.203877] ? crypto_gcm_init_common+0x1ba/0x340 [ 194.204142] gcm_hash_assoc_remain_continue+0x10a/0x140 [ 194.204434] crypt_message+0xec1/0x10a0 [cifs] [ 194.206489] ? __pfx_crypt_message+0x10/0x10 [cifs] [ 194.208507] ? srso_return_thunk+0x5/0x5f [ 194.209205] ? srso_return_thunk+0x5/0x5f [ 194.209925] ? srso_return_thunk+0x5/0x5f [ 194.210443] ? srso_return_thunk+0x5/0x5f [ 194.211037] decrypt_raw_data+0x15f/0x250 [cifs] [ 194.212906] ? __pfx_decrypt_raw_data+0x10/0x10 [cifs] [ 194.214670] ? srso_return_thunk+0x5/0x5f [ 194.215193] smb2_decrypt_offload+0x12a/0x6c0 [cifs] This is because TFM is being used in parallel. Fix this by allocating a new AEAD TFM for async decryption, but keep the existing one for synchronous READ cases (similar to what is done in smb3_calc_signature()). Also remove the calls to aead_request_set_callback() and crypto_wait_req() since its always going to be a synchronous operation.",
  "keyphrases": {
    "rootcause": [
      "Use-after-free in async decryption due to shared TFM"
    ],
    "weakness": [
      "The same TFM was being used for both sync",
      "async operations",
      "which caused a race condition",
      "use-after-free when using async decryption"
    ]
  },
  "timestamp": "2025-07-13 19:48:32",
  "cve_id": "CVE-2024-50047",
  "result_count": 11,
  "results": [
    {
      "cwe_id": "194",
      "name": "Unexpected Sign Extension",
      "score": 1229.3408787505348,
      "search_source": "rootcause:Use-after-free in async decryption due to shared TFM"
    },
    {
      "cwe_id": "197",
      "name": "Numeric Truncation Error",
      "score": 968.4363337096503,
      "search_source": "rootcause:Use-after-free in async decryption due to shared TFM"
    },
    {
      "cwe_id": "276",
      "name": "Incorrect Default Permissions",
      "score": 910.331740902901,
      "search_source": "rootcause:Use-after-free in async decryption due to shared TFM"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 800.0,
      "search_source": "alternate_term_match"
    },
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "score": 800.0,
      "search_source": "alternate_term_match"
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "score": 777.7661198060875,
      "search_source": "rootcause:Use-after-free in async decryption due to shared TFM"
    },
    {
      "cwe_id": "23",
      "name": "Relative Path Traversal",
      "score": 700.1216621504228,
      "search_source": "rootcause:Use-after-free in async decryption due to shared TFM"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "score": 699.9849370639101,
      "search_source": "rootcause:Use-after-free in async decryption due to shared TFM"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "score": 675.336506650542,
      "search_source": "rootcause:Use-after-free in async decryption due to shared TFM"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 631.7206318717105,
      "search_source": "rootcause:Use-after-free in async decryption due to shared TFM"
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "score": 630.0100996908656,
      "search_source": "rootcause:Use-after-free in async decryption due to shared TFM"
    }
  ]
}