{
  "cve_id": "CVE-2024-31310",
  "description": "In newServiceInfoLocked of AutofillManagerServiceImpl.java, there is a possible way to hide an enabled Autofill service app in the Autofill service settings due to **improper input validation**. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is needed for exploitation.",
  "key_phrases": {
    "rootcause": "improper input validation",
    "weakness": "",
    "impact": [
      "hide enabled Autofill service app in settings",
      "local escalation of privilege"
    ],
    "vector": "",
    "attacker": "",
    "product": "Android",
    "version": "",
    "component": "newServiceInfoLocked of AutofillManagerServiceImpl.java"
  },
  "reference_content": "Based on the provided information, here's a breakdown of CVE-2024-31310:\n\n**Root Cause of Vulnerability:**\n- The vulnerability exists within the Android Autofill framework.\n- The core issue lies in the insufficient checks performed on intent filters when setting or updating services.\n\n**Weaknesses/Vulnerabilities Present:**\n- Improper validation of intent filters. This could lead to a malicious service being registered or updated with incorrect filters.\n\n**Impact of Exploitation:**\n-  Local Elevation of Privilege (EoP): An attacker could potentially leverage this vulnerability to gain elevated privileges on the device.\n\n**Attack Vectors:**\n-  Local Exploitation: The attack would likely originate from a malicious app installed on the device.\n\n**Required Attacker Capabilities/Position:**\n- The attacker needs to have the ability to install an application on the target Android device.\n- They would likely need to craft a malicious service and manipulate intent filters.\n\n**Additional Notes:**\n- The vulnerability was addressed with a patch that includes additional checks for intent filters.\n- The fix was cherry-picked from commits `141d9d050346bfc4673c429382deb1b3d210f6ad` and `51d64705ab70788a536c26d4df5e63f0952ec98f`.\n- The fix was incorporated into AOSP versions 12, 12L, 13, and 14.\n- The vulnerability is rated as \"High\" severity.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n\n| CWE ID   | CWE Name                                                                      | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :------- | :---------------------------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-20   | CWE-20: Improper Input Validation                                            | 0.9        | Class                 | Primary CWE                     | Allowed-with-Review           |\n| CWE-862  | CWE-862: Missing Authorization                                                | 0.6        | Class                 | Secondary Candidate             | Allowed-with-Review           |\n| CWE-285  | CWE-285: Improper Authorization                                               | 0.5        | Class                 | Secondary Candidate             | Discouraged                     |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.7\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\n\nThe primary relationship that influenced the CWE selection is the parent-child relationship. CWE-20: Improper Input Validation is a general class, and while more specific variants might exist, the description doesn't provide enough detail to pinpoint one. CWE-862 and CWE-285 were considered because the vulnerability involves a service potentially bypassing security checks, but the root cause is the **improper input validation** itself. The abstraction level influenced the selection by favoring the Class level due to the lack of specific details pointing to a Base or Variant level weakness.\n\n```mermaid\ngraph TD\n    cwe20[\"CWE-20: Improper Input Validation\"]\n    cwe862[\"CWE-862: Missing Authorization\"]\n    cwe285[\"CWE-285: Improper Authorization\"]\n\n    cwe862 -->|PEEROF| cwe285\n    cwe20 -->|CANPRECEDE| cwe862\n    cwe20 -->|CANPRECEDE| cwe285\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe20 primary\n    class cwe862,cwe285 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with **improper input validation** (CWE-20) in the `newServiceInfoLocked` function. This leads to a scenario where an enabled Autofill service app can be hidden in the Autofill service settings, ultimately resulting in local escalation of privilege.\n\n## Summary of Analysis\n\nThe initial assessment strongly points towards CWE-20 (Improper Input Validation) as the primary root cause. The vulnerability description states the issue is due to **improper input validation** in `newServiceInfoLocked` of `AutofillManagerServiceImpl.java`. This allows an attacker to potentially hide an enabled Autofill service app in the settings. The CVE Reference Links Content Summary confirms that the root cause lies in the insufficient checks performed on intent filters.\n\nThe selection of CWE-20 is primarily based on the explicit mention of **improper input validation** in the vulnerability description and the CVE summary. The relationship analysis considered that authorization issues (CWE-862, CWE-285) might arise as a consequence of the **improper input validation**, but the root cause is the initial validation failure.\n\nThe analysis also considered the privileges vs permissions guidance. While the impact involves local escalation of privilege, the root cause isn't a direct privilege assignment issue (CWE-266) or execution with unnecessary privileges (CWE-250). Instead, it stems from the **improper validation** allowing a malicious service to be registered or updated with incorrect filters.\n\nThe selected CWEs are at the optimal level of specificity given the available information. While a more specific variant of CWE-20 might exist, the current description doesn't provide enough details to pinpoint it.\nThe evidence from the vulnerability description is as follows: \"In newServiceInfoLocked of AutofillManagerServiceImpl.java, there is a possible way to hide an enabled Autofill service app in the Autofill service settings due to **improper input validation**.\" The CVE summary also states: \"The core issue lies in the insufficient checks performed on intent filters when setting or updating services.\"\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-20: Improper Input Validation\n**CWE-20: Improper Input Validation** is selected as the primary CWE, because the **rootcause** of this vulnerability is **improper input validation**. This maps directly to the description of CWE-20. This is a Class-level CWE, and we allow it with review.\n\n## CWE-862: Missing Authorization\n**CWE-862: Missing Authorization** was considered because the **improper input validation** could potentially lead to bypassing authorization checks. However, the primary issue isn't the absence of authorization but the flawed validation process itself. The description for CWE-862 states: \"The product does not perform an authorization check when an actor attempts to access a resource or perform an action.\" which isn't the core problem here.\n\n## CWE-285: Improper Authorization\n**CWE-285: Improper Authorization** was considered, because the product *does* perform some kind of authorization check, but it doesn't work properly. The primary issue isn't the absence of authorization but the flawed validation process itself. The description for CWE-285 states: \"The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.\". The usage is discouraged.\n\n## CWE-1284: Improper Validation of Specified Quantity in Input\nCWE-1284 was considered, but it is more specific to quantities. The vulnerability description doesn't specifically mention quantities, but rather **improper input validation** in general.",
  "analysis_with_relationships": "# Summary\n\n| CWE ID   | CWE Name                                                                      | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :------- | :---------------------------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-20   | CWE-20: Improper Input Validation                                            | 0.9        | Class                 | Primary CWE                     | Allowed-with-Review           |\n| CWE-862  | CWE-862: Missing Authorization                                                | 0.6        | Class                 | Secondary Candidate             | Allowed-with-Review           |\n| CWE-285  | CWE-285: Improper Authorization                                               | 0.5        | Class                 | Secondary Candidate             | Discouraged                     |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.7\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\n\nThe primary relationship that influenced the CWE selection is the parent-child relationship. CWE-20: Improper Input Validation is a general class, and while more specific variants might exist, the description doesn't provide enough detail to pinpoint one. CWE-862 and CWE-285 were considered because the vulnerability involves a service potentially bypassing security checks, but the root cause is the **improper input validation** itself. The abstraction level influenced the selection by favoring the Class level due to the lack of specific details pointing to a Base or Variant level weakness.\n\n```mermaid\ngraph TD\n    cwe20[\"CWE-20: Improper Input Validation\"]\n    cwe862[\"CWE-862: Missing Authorization\"]\n    cwe285[\"CWE-285: Improper Authorization\"]\n\n    cwe862 -->|PEEROF| cwe285\n    cwe20 -->|CANPRECEDE| cwe862\n    cwe20 -->|CANPRECEDE| cwe285\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe20 primary\n    class cwe862,cwe285 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with **improper input validation** (CWE-20) in the `newServiceInfoLocked` function. This leads to a scenario where an enabled Autofill service app can be hidden in the Autofill service settings, ultimately resulting in local escalation of privilege.\n\n## Summary of Analysis\n\nThe initial assessment strongly points towards CWE-20 (Improper Input Validation) as the primary root cause. The vulnerability description states the issue is due to **improper input validation** in `newServiceInfoLocked` of `AutofillManagerServiceImpl.java`. This allows an attacker to potentially hide an enabled Autofill service app in the settings. The CVE Reference Links Content Summary confirms that the root cause lies in the insufficient checks performed on intent filters.\n\nThe selection of CWE-20 is primarily based on the explicit mention of **improper input validation** in the vulnerability description and the CVE summary. The relationship analysis considered that authorization issues (CWE-862, CWE-285) might arise as a consequence of the **improper input validation**, but the root cause is the initial validation failure.\n\nThe analysis also considered the privileges vs permissions guidance. While the impact involves local escalation of privilege, the root cause isn't a direct privilege assignment issue (CWE-266) or execution with unnecessary privileges (CWE-250). Instead, it stems from the **improper validation** allowing a malicious service to be registered or updated with incorrect filters.\n\nThe selected CWEs are at the optimal level of specificity given the available information. While a more specific variant of CWE-20 might exist, the current description doesn't provide enough details to pinpoint it.\nThe evidence from the vulnerability description is as follows: \"In newServiceInfoLocked of AutofillManagerServiceImpl.java, there is a possible way to hide an enabled Autofill service app in the Autofill service settings due to **improper input validation**.\" The CVE summary also states: \"The core issue lies in the insufficient checks performed on intent filters when setting or updating services.\"\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-20: Improper Input Validation\n**CWE-20: Improper Input Validation** is selected as the primary CWE, because the **rootcause** of this vulnerability is **improper input validation**. This maps directly to the description of CWE-20. This is a Class-level CWE, and we allow it with review.\n\n## CWE-862: Missing Authorization\n**CWE-862: Missing Authorization** was considered because the **improper input validation** could potentially lead to bypassing authorization checks. However, the primary issue isn't the absence of authorization but the flawed validation process itself. The description for CWE-862 states: \"The product does not perform an authorization check when an actor attempts to access a resource or perform an action.\" which isn't the core problem here.\n\n## CWE-285: Improper Authorization\n**CWE-285: Improper Authorization** was considered, because the product *does* perform some kind of authorization check, but it doesn't work properly. The primary issue isn't the absence of authorization but the flawed validation process itself. The description for CWE-285 states: \"The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.\". The usage is discouraged.\n\n## CWE-1284: Improper Validation of Specified Quantity in Input\nCWE-1284 was considered, but it is more specific to quantities. The vulnerability description doesn't specifically mention quantities, but rather **improper input validation** in general.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-1284:**\n- 1284 (Improper Validation of Specified Quantity in Input) - ROOT\n\n\n**Chain starting from CWE-862:**\n- 862 (Missing Authorization) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 353.0901422582717
    },
    {
      "metadata": {
        "doc_id": "1021",
        "name": "Improper Restriction of Rendered UI Layers or Frames",
        "source": "sparse"
      },
      "similarity": 352.83565638798007
    },
    {
      "metadata": {
        "doc_id": "20",
        "name": "Improper Input Validation",
        "source": "sparse"
      },
      "similarity": 329.3773702385386
    },
    {
      "metadata": {
        "doc_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "source": "sparse"
      },
      "similarity": 319.2612041709232
    },
    {
      "metadata": {
        "doc_id": "667",
        "name": "Improper Locking",
        "source": "sparse"
      },
      "similarity": 313.30475626052106
    },
    {
      "metadata": {
        "doc_id": "514",
        "name": "Covert Channel",
        "source": "sparse"
      },
      "similarity": 305.92655469016216
    },
    {
      "metadata": {
        "doc_id": "362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "source": "sparse"
      },
      "similarity": 299.46550008045284
    },
    {
      "metadata": {
        "doc_id": "248",
        "name": "Uncaught Exception",
        "source": "sparse"
      },
      "similarity": 298.77357870293815
    },
    {
      "metadata": {
        "doc_id": "106",
        "name": "Struts: Plug-in Framework not in Use",
        "type": "Variant",
        "original_content": "When an application does not use an input validation framework such as the Struts Validator, there is a greater risk of introducing weaknesses related to insufficient input validation.",
        "keyphrase_source": "rootcause:improper input validation",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.4883169998435687,
            "graph": 1.510594530474863
          }
        }
      },
      "similarity": 0.4883169998435687
    },
    {
      "doc_id": "73",
      "text": "CWE-73: External Control of File Name or Path",
      "score": 2.3400000000000003,
      "metadata": {
        "doc_id": "73",
        "name": "External Control of File Name or Path",
        "type": "base",
        "original_content": "CWE-73: External Control of File Name or Path",
        "relationships": [
          {
            "source_id": "73",
            "target_id": "114",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "59",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "434",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "41",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "22",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "20",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "700"
            }
          },
          {
            "source_id": "73",
            "target_id": "610",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "642",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "99",
            "target_id": "73",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "642",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "610",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "59",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "434",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "22",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "20",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "700"
            }
          },
          {
            "source_id": "114",
            "target_id": "73",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 0.8,
          "abstraction_path": 0.7200000000000001,
          "sequence_path": 0.7200000000000001
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "20",
                  "22",
                  "CANPRECEDE"
                ],
                [
                  "22",
                  "73",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.8,
              "type": "relationship_chain",
              "source": "20"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "20",
                  "73",
                  "PARENTOF"
                ]
              ],
              "score": 0.7200000000000001,
              "type": "abstraction_path_down",
              "source": "20"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "20",
                  "22",
                  "CANPRECEDE"
                ],
                [
                  "22",
                  "73",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.7200000000000001,
              "type": "vulnerability_sequence_forward",
              "source": "20"
            }
          }
        },
        "abstraction_level": "base",
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.3400000000000003
          }
        }
      },
      "similarity": 2.3400000000000003
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-1284",
      "CWE-862",
      "CWE-285",
      "CWE-250",
      "CWE-20",
      "CWE-266"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}