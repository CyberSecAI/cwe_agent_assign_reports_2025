{
  "cve_id": "CVE-2024-6766",
  "description": "The shortcodes-ultimate-pro WordPress plugin before 7.2.1 ****does not validate and escape** some of its shortcode attributes** before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored **Cross-Site Scripting** attacks",
  "key_phrases": {
    "rootcause": "does not validate and escape some of its shortcode attributes",
    "weakness": [
      "Cross-Site Scripting",
      "does not validate and escape"
    ],
    "impact": "Stored Cross-Site Scripting attacks",
    "vector": "",
    "attacker": "users with the contributor role and above",
    "product": "shortcodes-ultimate-pro WordPress plugin",
    "version": "before 7.2.1",
    "component": ""
  },
  "reference_content": "Based on the provided content, here's an analysis of CVE-2024-6766:\n\n**Root Cause of Vulnerability:**\nThe vulnerability stems from the plugin's failure to properly validate and escape shortcode attributes before displaying them on a page or post where the shortcode is embedded.\n\n**Weaknesses/Vulnerabilities Present:**\n- **Stored Cross-Site Scripting (XSS):** The plugin is vulnerable to stored XSS due to the lack of sanitization of user-supplied shortcode attributes.\n\n**Impact of Exploitation:**\n- An attacker can inject malicious JavaScript code into the shortcode attributes. When a user views the page or post containing the vulnerable shortcode, the injected script will execute in their browser.\n- This can lead to various malicious activities, including:\n    - Cookie theft.\n    - Session hijacking.\n    - Redirecting users to malicious websites.\n    - Defacement of the website.\n    - Performing actions on behalf of the user.\n\n**Attack Vectors:**\n- An attacker can exploit this vulnerability by crafting a malicious shortcode with a crafted payload injected into one of the shortcode attributes (e.g., `btn_background`).\n- This crafted shortcode can then be embedded into a post or page.\n\n**Required Attacker Capabilities/Position:**\n- The attacker needs to have at least a \"Contributor\" role on the WordPress website, which allows them to create and modify content, including embedding shortcodes.\n- The attacker does not need administrative access to exploit the vulnerability.\n\n**Additional Notes:**\n- The provided Proof of Concept demonstrates how the `btn_background` attribute can be used to inject malicious JavaScript.\n- The vulnerability is fixed in version 7.2.1 of the \"Shortcodes Ultimate Pro\" plugin.\n- The CVSS score is 5.9 (Medium), indicating a moderate level of severity.",
  "similar_info": {
    "cwe_distribution": {
      "95": {
        "cwe_counts": {},
        "total_samples": 5,
        "distribution": [
          {
            "cwes": [],
            "frequency": 5,
            "proportion": 1.0
          }
        ]
      },
      "90": {
        "cwe_counts": {
          "CWE-79": 1
        },
        "total_samples": 3,
        "distribution": [
          {
            "cwes": [],
            "frequency": 2,
            "proportion": 0.667
          },
          {
            "cwes": [
              "CWE-79"
            ],
            "frequency": 1,
            "proportion": 0.333
          }
        ]
      },
      "85": {
        "cwe_counts": {},
        "total_samples": 8,
        "distribution": [
          {
            "cwes": [],
            "frequency": 8,
            "proportion": 1.0
          }
        ]
      },
      "80": {
        "cwe_counts": {},
        "total_samples": 8,
        "distribution": [
          {
            "cwes": [],
            "frequency": 8,
            "proportion": 1.0
          }
        ]
      },
      "75": {
        "cwe_counts": {},
        "total_samples": 10,
        "distribution": [
          {
            "cwes": [],
            "frequency": 10,
            "proportion": 1.0
          }
        ]
      },
      "70": {
        "cwe_counts": {},
        "total_samples": 10,
        "distribution": [
          {
            "cwes": [],
            "frequency": 10,
            "proportion": 1.0
          }
        ]
      }
    },
    "cwe_consensus": "CWE-79",
    "similarity_stats": {
      "thresholds": [
        95,
        90,
        85,
        80,
        75,
        70
      ],
      "total_samples_by_threshold": {
        "95": 5,
        "90": 3,
        "85": 8,
        "80": 8,
        "75": 10,
        "70": 10
      },
      "top_cwes_by_threshold": {
        "95": [],
        "90": [
          [
            "CWE-79",
            1
          ]
        ],
        "85": [],
        "80": [],
        "75": [],
        "70": []
      }
    },
    "raw_matches": [
      {
        "similarity": 95,
        "cwes": [],
        "total": 5,
        "frequency": 5,
        "proportion": 1.0
      },
      {
        "similarity": 90,
        "cwes": [],
        "total": 3,
        "frequency": 2,
        "proportion": 0.667
      },
      {
        "similarity": 90,
        "cwes": [
          "79"
        ],
        "total": 3,
        "frequency": 1,
        "proportion": 0.333
      },
      {
        "similarity": 85,
        "cwes": [],
        "total": 8,
        "frequency": 8,
        "proportion": 1.0
      },
      {
        "similarity": 80,
        "cwes": [],
        "total": 8,
        "frequency": 8,
        "proportion": 1.0
      },
      {
        "similarity": 75,
        "cwes": [],
        "total": 10,
        "frequency": 10,
        "proportion": 1.0
      },
      {
        "similarity": 70,
        "cwes": [],
        "total": 10,
        "frequency": 10,
        "proportion": 1.0
      }
    ]
  },
  "similarity_summary": {
    "consensus_cwe": "CWE-79",
    "top_cwes": [
      [
        "CWE-79",
        1
      ]
    ],
    "confidence_levels": {
      "high": [],
      "medium": [],
      "low": []
    },
    "total_samples": 44
  },
  "analysis": "# Summary\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Primary | Allowed |\n| CWE-116 | Improper Encoding or Escaping of Output | 0.8 | Class | Secondary | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is **CWE-79** Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). The root cause is the **failure to validate and escape** shortcode attributes. **CWE-116** Improper Encoding or Escaping of Output is a related weakness, as escaping is a form of encoding. **CWE-79** is a base CWE, which is preferred. **CWE-116** is a class CWE, indicating a broader category of encoding/escaping issues, but relevant because the vulnerability description explicitly mentions a failure to escape output. The relationship is that **CWE-116** can lead to **CWE-79**, as improper escaping is a common cause of XSS.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n\n    cwe79 -->|CAUSED_BY| cwe116\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe79 primary\n    class cwe116 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **failure to validate and escape** shortcode attributes which directly leads to Stored **Cross-Site Scripting** attacks.\n\n**Root Cause:** **Improper Neutralization** (due to lack of validation and escaping)\n**Weakness:** **CWE-79** Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n**Impact:** Stored Cross-Site Scripting\n\n## Summary of Analysis\nThe analysis indicates that the primary vulnerability is **CWE-79** Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). This is based on the key phrase 'does not validate and escape some of its shortcode attributes' which directly leads to the ability to perform stored cross-site scripting attacks. **CWE-116** Improper Encoding or Escaping of Output is considered a secondary weakness because the **lack of escaping** is a specific instance of improper encoding/escaping.\n\nThe vulnerability description explicitly states that the plugin \"does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks\". This directly supports the selection of **CWE-79** as the primary vulnerability, and **CWE-116** as a contributor.\n\nThe graph relationships influenced the selection by highlighting the connection between encoding/escaping issues and XSS vulnerabilities.\n\nThe selected CWEs are at the optimal level of specificity because **CWE-79** directly describes the XSS vulnerability, and **CWE-116** pinpoints the underlying encoding/escaping issue that leads to it.\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n**NOT USED:** This CWE is related to request forgery, but the vulnerability is about XSS.\n\n## CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\n**Abstraction Level**: Variant\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**NOT USED:** This is a more specific variant of **CWE-79** that focuses on HTML tags. While relevant, the provided description doesn't limit the scope to only HTML tags, so **CWE-79** is more appropriate.\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**NOT USED:** This CWE relates to authorization issues, but the vulnerability is about XSS due to lack of input validation and output escaping.\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**NOT USED:** Not relevant as the description is about XSS and not about immutable web parameters.\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**NOT USED:** This CWE is not relevant as the vulnerability is about XSS and not about file uploads.\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n**USED as Secondary CWE:** This CWE is relevant because the vulnerability description explicitly mentions that the plugin \"does not validate and escape some of its shortcode attributes\".\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n**NOT USED:** This is a general injection CWE. XSS is a specific type of injection, so **CWE-79** is more specific and appropriate.\n\n## CWE-184: Incomplete List of Disallowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**NOT USED:** This is not relevant. The vulnerability isn't about an incomplete list of disallowed inputs, but about a general lack of input validation and output escaping.\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction Level",
  "analysis_with_relationships": "# Summary\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Primary | Allowed |\n| CWE-116 | Improper Encoding or Escaping of Output | 0.8 | Class | Secondary | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is **CWE-79** Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). The root cause is the **failure to validate and escape** shortcode attributes. **CWE-116** Improper Encoding or Escaping of Output is a related weakness, as escaping is a form of encoding. **CWE-79** is a base CWE, which is preferred. **CWE-116** is a class CWE, indicating a broader category of encoding/escaping issues, but relevant because the vulnerability description explicitly mentions a failure to escape output. The relationship is that **CWE-116** can lead to **CWE-79**, as improper escaping is a common cause of XSS.\n\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n\n    cwe79 -->|CAUSED_BY| cwe116\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe79 primary\n    class cwe116 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **failure to validate and escape** shortcode attributes which directly leads to Stored **Cross-Site Scripting** attacks.\n\n**Root Cause:** **Improper Neutralization** (due to lack of validation and escaping)\n**Weakness:** **CWE-79** Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n**Impact:** Stored Cross-Site Scripting\n\n## Summary of Analysis\nThe analysis indicates that the primary vulnerability is **CWE-79** Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'). This is based on the key phrase 'does not validate and escape some of its shortcode attributes' which directly leads to the ability to perform stored cross-site scripting attacks. **CWE-116** Improper Encoding or Escaping of Output is considered a secondary weakness because the **lack of escaping** is a specific instance of improper encoding/escaping.\n\nThe vulnerability description explicitly states that the plugin \"does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks\". This directly supports the selection of **CWE-79** as the primary vulnerability, and **CWE-116** as a contributor.\n\nThe graph relationships influenced the selection by highlighting the connection between encoding/escaping issues and XSS vulnerabilities.\n\nThe selected CWEs are at the optimal level of specificity because **CWE-79** directly describes the XSS vulnerability, and **CWE-116** pinpoints the underlying encoding/escaping issue that leads to it.\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n**NOT USED:** This CWE is related to request forgery, but the vulnerability is about XSS.\n\n## CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\n**Abstraction Level**: Variant\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**NOT USED:** This is a more specific variant of **CWE-79** that focuses on HTML tags. While relevant, the provided description doesn't limit the scope to only HTML tags, so **CWE-79** is more appropriate.\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**NOT USED:** This CWE relates to authorization issues, but the vulnerability is about XSS due to lack of input validation and output escaping.\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**NOT USED:** Not relevant as the description is about XSS and not about immutable web parameters.\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**NOT USED:** This CWE is not relevant as the vulnerability is about XSS and not about file uploads.\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n**USED as Secondary CWE:** This CWE is relevant because the vulnerability description explicitly mentions that the plugin \"does not validate and escape some of its shortcode attributes\".\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n**NOT USED:** This is a general injection CWE. XSS is a specific type of injection, so **CWE-79** is more specific and appropriate.\n\n## CWE-184: Incomplete List of Disallowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**NOT USED:** This is not relevant. The vulnerability isn't about an incomplete list of disallowed inputs, but about a general lack of input validation and output escaping.\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction Level\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n**Chain starting from CWE-80:**\n- 80 (Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_sources": [
          {
            "id": "rootcause:does not validate and escape some of its shortcode attributes",
            "keyphrase": "does not validate and escape some of its shortcode attributes",
            "type": "rootcause"
          },
          {
            "id": "weakness:Cross-Site Scripting",
            "keyphrase": "Cross-Site Scripting",
            "type": "weakness"
          },
          {
            "id": "weakness:does not validate and escape",
            "keyphrase": "does not validate and escape",
            "type": "weakness"
          },
          {
            "id": "impact:Stored Cross-Site Scripting attacks",
            "keyphrase": "Stored Cross-Site Scripting attacks",
            "type": "impact"
          },
          {
            "id": "attacker:users with the contributor role and above",
            "keyphrase": "users with the contributor role and above",
            "type": "attacker"
          },
          {
            "id": "product:shortcodes-ultimate-pro WordPress plugin",
            "keyphrase": "shortcodes-ultimate-pro WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:before 7.2.1",
            "keyphrase": "before 7.2.1",
            "type": "version"
          }
        ]
      },
      "similarity": 553.7542806714168
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "keyphrase_sources": [
          {
            "id": "rootcause:does not validate and escape some of its shortcode attributes",
            "keyphrase": "does not validate and escape some of its shortcode attributes",
            "type": "rootcause"
          },
          {
            "id": "weakness:Cross-Site Scripting",
            "keyphrase": "Cross-Site Scripting",
            "type": "weakness"
          },
          {
            "id": "weakness:does not validate and escape",
            "keyphrase": "does not validate and escape",
            "type": "weakness"
          },
          {
            "id": "impact:Stored Cross-Site Scripting attacks",
            "keyphrase": "Stored Cross-Site Scripting attacks",
            "type": "impact"
          },
          {
            "id": "attacker:users with the contributor role and above",
            "keyphrase": "users with the contributor role and above",
            "type": "attacker"
          },
          {
            "id": "product:shortcodes-ultimate-pro WordPress plugin",
            "keyphrase": "shortcodes-ultimate-pro WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:before 7.2.1",
            "keyphrase": "before 7.2.1",
            "type": "version"
          }
        ]
      },
      "similarity": 458.9249470785825
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse",
        "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
        "keyphrase_sources": [
          {
            "id": "rootcause:does not validate and escape some of its shortcode attributes",
            "keyphrase": "does not validate and escape some of its shortcode attributes",
            "type": "rootcause"
          },
          {
            "id": "weakness:does not validate and escape",
            "keyphrase": "does not validate and escape",
            "type": "weakness"
          },
          {
            "id": "impact:Stored Cross-Site Scripting attacks",
            "keyphrase": "Stored Cross-Site Scripting attacks",
            "type": "impact"
          },
          {
            "id": "attacker:users with the contributor role and above",
            "keyphrase": "users with the contributor role and above",
            "type": "attacker"
          },
          {
            "id": "product:shortcodes-ultimate-pro WordPress plugin",
            "keyphrase": "shortcodes-ultimate-pro WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:before 7.2.1",
            "keyphrase": "before 7.2.1",
            "type": "version"
          }
        ]
      },
      "similarity": 409.92808236210806
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "keyphrase_sources": [
          {
            "id": "rootcause:does not validate and escape some of its shortcode attributes",
            "keyphrase": "does not validate and escape some of its shortcode attributes",
            "type": "rootcause"
          },
          {
            "id": "weakness:Cross-Site Scripting",
            "keyphrase": "Cross-Site Scripting",
            "type": "weakness"
          },
          {
            "id": "weakness:does not validate and escape",
            "keyphrase": "does not validate and escape",
            "type": "weakness"
          }
        ]
      },
      "similarity": 395.5315543489304
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse",
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "keyphrase_sources": [
          {
            "id": "rootcause:does not validate and escape some of its shortcode attributes",
            "keyphrase": "does not validate and escape some of its shortcode attributes",
            "type": "rootcause"
          },
          {
            "id": "weakness:Cross-Site Scripting",
            "keyphrase": "Cross-Site Scripting",
            "type": "weakness"
          },
          {
            "id": "impact:Stored Cross-Site Scripting attacks",
            "keyphrase": "Stored Cross-Site Scripting attacks",
            "type": "impact"
          },
          {
            "id": "version:before 7.2.1",
            "keyphrase": "before 7.2.1",
            "type": "version"
          }
        ]
      },
      "similarity": 389.222349692272
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse",
        "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
        "keyphrase_sources": [
          {
            "id": "weakness:Cross-Site Scripting",
            "keyphrase": "Cross-Site Scripting",
            "type": "weakness"
          },
          {
            "id": "weakness:does not validate and escape",
            "keyphrase": "does not validate and escape",
            "type": "weakness"
          },
          {
            "id": "impact:Stored Cross-Site Scripting attacks",
            "keyphrase": "Stored Cross-Site Scripting attacks",
            "type": "impact"
          },
          {
            "id": "attacker:users with the contributor role and above",
            "keyphrase": "users with the contributor role and above",
            "type": "attacker"
          },
          {
            "id": "product:shortcodes-ultimate-pro WordPress plugin",
            "keyphrase": "shortcodes-ultimate-pro WordPress plugin",
            "type": "product"
          },
          {
            "id": "version:before 7.2.1",
            "keyphrase": "before 7.2.1",
            "type": "version"
          }
        ]
      },
      "similarity": 333.68887120458174
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse",
        "original_content": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.",
        "keyphrase_sources": [
          {
            "id": "attacker:users with the contributor role and above",
            "keyphrase": "users with the contributor role and above",
            "type": "attacker"
          },
          {
            "id": "product:shortcodes-ultimate-pro WordPress plugin",
            "keyphrase": "shortcodes-ultimate-pro WordPress plugin",
            "type": "product"
          }
        ]
      },
      "similarity": 129.38688332257087
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-116",
      "CWE-80",
      "CWE-79",
      "CWE-472",
      "CWE-352",
      "CWE-74",
      "CWE-138",
      "CWE-184",
      "CWE-425",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "352": [
      {
        "id": "rootcause:does not validate and escape some of its shortcode attributes",
        "keyphrase": "does not validate and escape some of its shortcode attributes",
        "type": "rootcause"
      },
      {
        "id": "weakness:Cross-Site Scripting",
        "keyphrase": "Cross-Site Scripting",
        "type": "weakness"
      },
      {
        "id": "weakness:does not validate and escape",
        "keyphrase": "does not validate and escape",
        "type": "weakness"
      },
      {
        "id": "impact:Stored Cross-Site Scripting attacks",
        "keyphrase": "Stored Cross-Site Scripting attacks",
        "type": "impact"
      },
      {
        "id": "attacker:users with the contributor role and above",
        "keyphrase": "users with the contributor role and above",
        "type": "attacker"
      },
      {
        "id": "product:shortcodes-ultimate-pro WordPress plugin",
        "keyphrase": "shortcodes-ultimate-pro WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:before 7.2.1",
        "keyphrase": "before 7.2.1",
        "type": "version"
      }
    ],
    "116": [
      {
        "id": "rootcause:does not validate and escape some of its shortcode attributes",
        "keyphrase": "does not validate and escape some of its shortcode attributes",
        "type": "rootcause"
      },
      {
        "id": "weakness:Cross-Site Scripting",
        "keyphrase": "Cross-Site Scripting",
        "type": "weakness"
      },
      {
        "id": "weakness:does not validate and escape",
        "keyphrase": "does not validate and escape",
        "type": "weakness"
      },
      {
        "id": "impact:Stored Cross-Site Scripting attacks",
        "keyphrase": "Stored Cross-Site Scripting attacks",
        "type": "impact"
      },
      {
        "id": "attacker:users with the contributor role and above",
        "keyphrase": "users with the contributor role and above",
        "type": "attacker"
      },
      {
        "id": "product:shortcodes-ultimate-pro WordPress plugin",
        "keyphrase": "shortcodes-ultimate-pro WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:before 7.2.1",
        "keyphrase": "before 7.2.1",
        "type": "version"
      }
    ],
    "862": [
      {
        "id": "rootcause:does not validate and escape some of its shortcode attributes",
        "keyphrase": "does not validate and escape some of its shortcode attributes",
        "type": "rootcause"
      },
      {
        "id": "weakness:does not validate and escape",
        "keyphrase": "does not validate and escape",
        "type": "weakness"
      },
      {
        "id": "impact:Stored Cross-Site Scripting attacks",
        "keyphrase": "Stored Cross-Site Scripting attacks",
        "type": "impact"
      },
      {
        "id": "attacker:users with the contributor role and above",
        "keyphrase": "users with the contributor role and above",
        "type": "attacker"
      },
      {
        "id": "product:shortcodes-ultimate-pro WordPress plugin",
        "keyphrase": "shortcodes-ultimate-pro WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:before 7.2.1",
        "keyphrase": "before 7.2.1",
        "type": "version"
      }
    ],
    "89": [
      {
        "id": "rootcause:does not validate and escape some of its shortcode attributes",
        "keyphrase": "does not validate and escape some of its shortcode attributes",
        "type": "rootcause"
      },
      {
        "id": "weakness:Cross-Site Scripting",
        "keyphrase": "Cross-Site Scripting",
        "type": "weakness"
      },
      {
        "id": "weakness:does not validate and escape",
        "keyphrase": "does not validate and escape",
        "type": "weakness"
      }
    ],
    "79": [
      {
        "id": "rootcause:does not validate and escape some of its shortcode attributes",
        "keyphrase": "does not validate and escape some of its shortcode attributes",
        "type": "rootcause"
      },
      {
        "id": "weakness:Cross-Site Scripting",
        "keyphrase": "Cross-Site Scripting",
        "type": "weakness"
      },
      {
        "id": "impact:Stored Cross-Site Scripting attacks",
        "keyphrase": "Stored Cross-Site Scripting attacks",
        "type": "impact"
      },
      {
        "id": "version:before 7.2.1",
        "keyphrase": "before 7.2.1",
        "type": "version"
      }
    ],
    "434": [
      {
        "id": "weakness:Cross-Site Scripting",
        "keyphrase": "Cross-Site Scripting",
        "type": "weakness"
      },
      {
        "id": "weakness:does not validate and escape",
        "keyphrase": "does not validate and escape",
        "type": "weakness"
      },
      {
        "id": "impact:Stored Cross-Site Scripting attacks",
        "keyphrase": "Stored Cross-Site Scripting attacks",
        "type": "impact"
      },
      {
        "id": "attacker:users with the contributor role and above",
        "keyphrase": "users with the contributor role and above",
        "type": "attacker"
      },
      {
        "id": "product:shortcodes-ultimate-pro WordPress plugin",
        "keyphrase": "shortcodes-ultimate-pro WordPress plugin",
        "type": "product"
      },
      {
        "id": "version:before 7.2.1",
        "keyphrase": "before 7.2.1",
        "type": "version"
      }
    ],
    "863": [
      {
        "id": "attacker:users with the contributor role and above",
        "keyphrase": "users with the contributor role and above",
        "type": "attacker"
      },
      {
        "id": "product:shortcodes-ultimate-pro WordPress plugin",
        "keyphrase": "shortcodes-ultimate-pro WordPress plugin",
        "type": "product"
      }
    ]
  }
}