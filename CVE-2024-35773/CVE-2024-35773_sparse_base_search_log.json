{
  "method": "sparse_base",
  "query": "Cross-Site Request Forgery (CSRF) vulnerability in WPJohnny, zerOneIT Comment Reply Email allows Cross-Site Scripting (XSS).This issue affects Comment Reply Email from n/a through 1.3.",
  "keyphrases": {
    "base_query": "Cross-Site Request Forgery (CSRF) vulnerability in WPJohnny, zerOneIT Comment Reply Email allows Cross-Site Scripting (XSS).This issue affects Comment Reply Email from n/a through 1.3."
  },
  "timestamp": "2025-07-13T08:44:10.638750",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "352",
      "name": "Cross-Site Request Forgery (CSRF)",
      "score": 77.22547614692283
    },
    {
      "doc_id": "79",
      "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "score": 63.740129431131734
    },
    {
      "doc_id": "89",
      "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
      "score": 56.33144746546629
    },
    {
      "doc_id": "80",
      "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
      "score": 55.21768728110993
    },
    {
      "doc_id": "1004",
      "name": "Sensitive Cookie Without 'HttpOnly' Flag",
      "score": 53.230737953854046
    }
  ]
}