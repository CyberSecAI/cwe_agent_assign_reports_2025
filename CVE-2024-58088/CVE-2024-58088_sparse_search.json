{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved bpf Fix deadlock when freeing cgroup storage The following commit bc235cdb423a (bpf Prevent deadlock from recursive bpf_task_storage_[get|delete]) first introduced deadlock prevention for fentry/fexit programs attaching on bpf_task_storage helpers. That commit also employed the logic in map free path in its v6 version. Later bpf_cgrp_storage was first introduced in c4bcfb38a95e (bpf Implement cgroup storage available to non-cgroup-attached bpf progs) which faces the same issue as bpf_task_storage, instead of its busy counter, NULL was passed to bpf_local_storage_map_free() which opened a window to cause deadlock (acquiring local_storage->lock) _raw_spin_lock_irqsave+0x3d/0x50 bpf_local_storage_update+0xd1/0x460 bpf_cgrp_storage_get+0x109/0x130 bpf_prog_a4d4a370ba857314_cgrp_ptr+0x139/0x170 ? __bpf_prog_enter_recur+0x16/0x80 bpf_trampoline_6442485186+0x43/0xa4 cgroup_storage_ptr+0x9/0x20 (holding local_storage->lock) bpf_selem_unlink_storage_nolock.constprop.0+0x135/0x160 bpf_selem_unlink_storage+0x6f/0x110 bpf_local_storage_map_free+0xa2/0x110 bpf_map_free_deferred+0x5b/0x90 process_one_work+0x17c/0x390 worker_thread+0x251/0x360 kthread+0xd2/0x100 ret_from_fork+0x34/0x50 ret_from_fork_asm+0x1a/0x30 Progs - A SEC(fentry/cgroup_storage_ptr) - cgid (BPF_MAP_TYPE_HASH) Record the id of the cgroup the current task belonging to in this hash map, using the address of the cgroup as the map key. - cgrpa (BPF_MAP_TYPE_CGRP_STORAGE) If current task is a kworker, lookup the above hash map using function parameter @owner as the key to get its corresponding cgroup id which is then used to get a trusted pointer to the cgroup through bpf_cgroup_from_id(). This trusted pointer can then be passed to bpf_cgrp_storage_get() to finally trigger the deadlock issue. - B SEC(tp_btf/sys_enter) - cgrpb (BPF_MAP_TYPE_CGRP_STORAGE) The only purpose of this prog is to fill Prog As hash map by calling bpf_cgrp_storage_get() for as many userspace tasks as possible. Steps to reproduce - Run A - while (true) { Run B Destroy B } Fix this issue by passing its busy counter to the free procedure so it can be properly incremented before storage/smap locking.",
  "keyphrases": {
    "rootcause": [
      "null pointer dereference"
    ]
  },
  "timestamp": "2025-07-12 07:00:36",
  "cve_id": "CVE-2024-58088",
  "result_count": 12,
  "results": [
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "score": 1194.7052990220843,
      "search_source": "rootcause:null pointer dereference"
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "score": 1135.5139824174116,
      "search_source": "rootcause:null pointer dereference"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 1082.6038538652917,
      "search_source": "rootcause:null pointer dereference"
    },
    {
      "cwe_id": "674",
      "name": "Uncontrolled Recursion",
      "score": 1035.2780590920845,
      "search_source": "rootcause:null pointer dereference"
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "score": 1027.3797800446555,
      "search_source": "rootcause:null pointer dereference"
    },
    {
      "cwe_id": "639",
      "name": "Authorization Bypass Through User-Controlled Key",
      "score": 1015.7501518198419,
      "search_source": "rootcause:null pointer dereference"
    },
    {
      "cwe_id": "335",
      "name": "Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)",
      "score": 1014.518802862867,
      "search_source": "rootcause:null pointer dereference"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "score": 1012.4054037515302,
      "search_source": "rootcause:null pointer dereference"
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "score": 1008.7320568480841,
      "search_source": "rootcause:null pointer dereference"
    },
    {
      "cwe_id": "824",
      "name": "Access of Uninitialized Pointer",
      "score": 1005.9070429916421,
      "search_source": "rootcause:null pointer dereference"
    },
    {
      "cwe_id": "79",
      "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "score": 334.87941189323914,
      "search_source": "base_query"
    },
    {
      "cwe_id": "197",
      "name": "Numeric Truncation Error",
      "score": 334.64211162555,
      "search_source": "base_query"
    }
  ]
}