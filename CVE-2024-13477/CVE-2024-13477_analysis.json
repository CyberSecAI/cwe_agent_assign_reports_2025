{
  "cve_id": "CVE-2024-13477",
  "description": "The LTL Freight Quotes Unishippers Edition plugin for WordPress is vulnerable to SQL Injection via the edit_id parameter in all versions up to, and including, 2.5.8 due to **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**. This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.",
  "key_phrases": {
    "rootcause": [
      "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
      "improper escaping"
    ],
    "weakness": "SQL injection",
    "impact": [
      "extract sensitive information from the database",
      "append SQL queries"
    ],
    "vector": "edit_id parameter",
    "attacker": "unauthenticated attackers",
    "product": "LTL Freight Quotes Unishippers Edition plugin for WordPress",
    "version": "up to and including 2.5.8",
    "component": ""
  },
  "reference_content": "```text\nNOINFO\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID  | CWE Name                                                                                   | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :----------------------------------------------------------------------------------------- | :---------- | :----------------------- | :------------------------------ | :------------------------------ |\n| CWE-89  | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 1         | Base                     | Primary                         | Allowed                         |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-89, which is a base-level CWE. The analysis considered its parent CWEs (CWE-74, CWE-943) but determined that CWE-89 provides the most accurate and specific representation of the vulnerability because the **improper neutralization** directly leads to **SQL Injection**.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n    cwe943[\"CWE-943: Improper Neutralization of Special Elements in Data Query Logic\"]\n\n    cwe89 -->|CHILDOF| cwe74\n    cwe89 -->|CHILDOF| cwe943\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe89 primary\n    class cwe74,cwe943 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **insufficient escaping** and **lack of sufficient preparation on the existing SQL query**, leading to **SQL Injection**, which allows attackers to **append SQL queries** and **extract sensitive information from the database**. The root cause is the **improper neutralization**, and the impact is the unauthorized data extraction.\n\n## Summary of Analysis\nThe analysis is strongly based on the provided evidence, particularly the vulnerability description emphasizing **insufficient escaping** and **lack of sufficient preparation on the existing SQL query**, which directly leads to **SQL Injection**. The vulnerability description clearly states that the plugin is vulnerable to **SQL Injection** due to **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.** This aligns perfectly with CWE-89, which addresses **improper neutralization** of special elements in SQL commands.\n\nThe relationship analysis confirms that CWE-89 is the most specific and appropriate choice, as it directly describes the vulnerability's nature and impact. The retriever results also support this selection, with CWE-89 consistently appearing as a top candidate across different keyphrases.\n\nRelevant CWE Information:\n\n*   **CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')**\n    *   The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\nBased on the evidence and relationship analysis, CWE-89 is the optimal choice for this vulnerability.",
  "analysis_with_relationships": "# Summary\n| CWE ID  | CWE Name                                                                                   | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :----------------------------------------------------------------------------------------- | :---------- | :----------------------- | :------------------------------ | :------------------------------ |\n| CWE-89  | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 1         | Base                     | Primary                         | Allowed                         |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-89, which is a base-level CWE. The analysis considered its parent CWEs (CWE-74, CWE-943) but determined that CWE-89 provides the most accurate and specific representation of the vulnerability because the **improper neutralization** directly leads to **SQL Injection**.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n    cwe943[\"CWE-943: Improper Neutralization of Special Elements in Data Query Logic\"]\n\n    cwe89 -->|CHILDOF| cwe74\n    cwe89 -->|CHILDOF| cwe943\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe89 primary\n    class cwe74,cwe943 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **insufficient escaping** and **lack of sufficient preparation on the existing SQL query**, leading to **SQL Injection**, which allows attackers to **append SQL queries** and **extract sensitive information from the database**. The root cause is the **improper neutralization**, and the impact is the unauthorized data extraction.\n\n## Summary of Analysis\nThe analysis is strongly based on the provided evidence, particularly the vulnerability description emphasizing **insufficient escaping** and **lack of sufficient preparation on the existing SQL query**, which directly leads to **SQL Injection**. The vulnerability description clearly states that the plugin is vulnerable to **SQL Injection** due to **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.** This aligns perfectly with CWE-89, which addresses **improper neutralization** of special elements in SQL commands.\n\nThe relationship analysis confirms that CWE-89 is the most specific and appropriate choice, as it directly describes the vulnerability's nature and impact. The retriever results also support this selection, with CWE-89 consistently appearing as a top candidate across different keyphrases.\n\nRelevant CWE Information:\n\n*   **CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')**\n    *   The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\nBased on the evidence and relationship analysis, CWE-89 is the optimal choice for this vulnerability.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n**Chain starting from CWE-74:**\n- 74 (Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:improper escaping",
            "keyphrase": "improper escaping",
            "type": "rootcause"
          },
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "impact:append SQL queries",
            "keyphrase": "append SQL queries",
            "type": "impact"
          },
          {
            "id": "vector:edit_id parameter",
            "keyphrase": "edit_id parameter",
            "type": "vector"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:LTL Freight Quotes Unishippers Edition plugin for WordPress",
            "keyphrase": "LTL Freight Quotes Unishippers Edition plugin for WordPress",
            "type": "product"
          },
          {
            "id": "version:up to and including 2.5.8",
            "keyphrase": "up to and including 2.5.8",
            "type": "version"
          }
        ]
      },
      "similarity": 735.6202771061687
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:improper escaping",
            "keyphrase": "improper escaping",
            "type": "rootcause"
          },
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "impact:append SQL queries",
            "keyphrase": "append SQL queries",
            "type": "impact"
          },
          {
            "id": "vector:edit_id parameter",
            "keyphrase": "edit_id parameter",
            "type": "vector"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:LTL Freight Quotes Unishippers Edition plugin for WordPress",
            "keyphrase": "LTL Freight Quotes Unishippers Edition plugin for WordPress",
            "type": "product"
          },
          {
            "id": "version:up to and including 2.5.8",
            "keyphrase": "up to and including 2.5.8",
            "type": "version"
          }
        ]
      },
      "similarity": 693.8326737359147
    },
    {
      "metadata": {
        "doc_id": "90",
        "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:improper escaping",
            "keyphrase": "improper escaping",
            "type": "rootcause"
          },
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "impact:append SQL queries",
            "keyphrase": "append SQL queries",
            "type": "impact"
          },
          {
            "id": "vector:edit_id parameter",
            "keyphrase": "edit_id parameter",
            "type": "vector"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:LTL Freight Quotes Unishippers Edition plugin for WordPress",
            "keyphrase": "LTL Freight Quotes Unishippers Edition plugin for WordPress",
            "type": "product"
          },
          {
            "id": "version:up to and including 2.5.8",
            "keyphrase": "up to and including 2.5.8",
            "type": "version"
          }
        ]
      },
      "similarity": 668.965581225644
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:improper escaping",
            "keyphrase": "improper escaping",
            "type": "rootcause"
          },
          {
            "id": "vector:edit_id parameter",
            "keyphrase": "edit_id parameter",
            "type": "vector"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:LTL Freight Quotes Unishippers Edition plugin for WordPress",
            "keyphrase": "LTL Freight Quotes Unishippers Edition plugin for WordPress",
            "type": "product"
          }
        ]
      },
      "similarity": 639.0991960987565
    },
    {
      "metadata": {
        "doc_id": "790",
        "name": "Improper Filtering of Special Elements",
        "source": "sparse",
        "original_content": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "impact:append SQL queries",
            "keyphrase": "append SQL queries",
            "type": "impact"
          },
          {
            "id": "vector:edit_id parameter",
            "keyphrase": "edit_id parameter",
            "type": "vector"
          },
          {
            "id": "version:up to and including 2.5.8",
            "keyphrase": "up to and including 2.5.8",
            "type": "version"
          }
        ]
      },
      "similarity": 610.3417441548224
    },
    {
      "metadata": {
        "doc_id": "138",
        "name": "Improper Neutralization of Special Elements",
        "source": "sparse",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.",
        "keyphrase_sources": [
          {
            "id": "rootcause:improper escaping",
            "keyphrase": "improper escaping",
            "type": "rootcause"
          }
        ]
      },
      "similarity": 423.837626068311
    },
    {
      "metadata": {
        "doc_id": "502",
        "name": "Deserialization of Untrusted Data",
        "source": "sparse",
        "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.",
        "keyphrase_sources": [
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:LTL Freight Quotes Unishippers Edition plugin for WordPress",
            "keyphrase": "LTL Freight Quotes Unishippers Edition plugin for WordPress",
            "type": "product"
          },
          {
            "id": "version:up to and including 2.5.8",
            "keyphrase": "up to and including 2.5.8",
            "type": "version"
          }
        ]
      },
      "similarity": 422.2146607900266
    },
    {
      "metadata": {
        "doc_id": "943",
        "name": "Improper Neutralization of Special Elements in Data Query Logic",
        "source": "sparse",
        "original_content": "The product generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query.",
        "keyphrase_sources": [
          {
            "id": "weakness:SQL injection",
            "keyphrase": "SQL injection",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "impact:append SQL queries",
            "keyphrase": "append SQL queries",
            "type": "impact"
          }
        ]
      },
      "similarity": 421.625540765691
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-74",
      "CWE-943"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "116": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:improper escaping",
        "keyphrase": "improper escaping",
        "type": "rootcause"
      },
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "impact:append SQL queries",
        "keyphrase": "append SQL queries",
        "type": "impact"
      },
      {
        "id": "vector:edit_id parameter",
        "keyphrase": "edit_id parameter",
        "type": "vector"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:LTL Freight Quotes Unishippers Edition plugin for WordPress",
        "keyphrase": "LTL Freight Quotes Unishippers Edition plugin for WordPress",
        "type": "product"
      },
      {
        "id": "version:up to and including 2.5.8",
        "keyphrase": "up to and including 2.5.8",
        "type": "version"
      }
    ],
    "89": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:improper escaping",
        "keyphrase": "improper escaping",
        "type": "rootcause"
      },
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "impact:append SQL queries",
        "keyphrase": "append SQL queries",
        "type": "impact"
      },
      {
        "id": "vector:edit_id parameter",
        "keyphrase": "edit_id parameter",
        "type": "vector"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:LTL Freight Quotes Unishippers Edition plugin for WordPress",
        "keyphrase": "LTL Freight Quotes Unishippers Edition plugin for WordPress",
        "type": "product"
      },
      {
        "id": "version:up to and including 2.5.8",
        "keyphrase": "up to and including 2.5.8",
        "type": "version"
      }
    ],
    "90": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:improper escaping",
        "keyphrase": "improper escaping",
        "type": "rootcause"
      },
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "impact:append SQL queries",
        "keyphrase": "append SQL queries",
        "type": "impact"
      },
      {
        "id": "vector:edit_id parameter",
        "keyphrase": "edit_id parameter",
        "type": "vector"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:LTL Freight Quotes Unishippers Edition plugin for WordPress",
        "keyphrase": "LTL Freight Quotes Unishippers Edition plugin for WordPress",
        "type": "product"
      },
      {
        "id": "version:up to and including 2.5.8",
        "keyphrase": "up to and including 2.5.8",
        "type": "version"
      }
    ],
    "352": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:improper escaping",
        "keyphrase": "improper escaping",
        "type": "rootcause"
      },
      {
        "id": "vector:edit_id parameter",
        "keyphrase": "edit_id parameter",
        "type": "vector"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:LTL Freight Quotes Unishippers Edition plugin for WordPress",
        "keyphrase": "LTL Freight Quotes Unishippers Edition plugin for WordPress",
        "type": "product"
      }
    ],
    "790": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "impact:append SQL queries",
        "keyphrase": "append SQL queries",
        "type": "impact"
      },
      {
        "id": "vector:edit_id parameter",
        "keyphrase": "edit_id parameter",
        "type": "vector"
      },
      {
        "id": "version:up to and including 2.5.8",
        "keyphrase": "up to and including 2.5.8",
        "type": "version"
      }
    ],
    "138": [
      {
        "id": "rootcause:improper escaping",
        "keyphrase": "improper escaping",
        "type": "rootcause"
      }
    ],
    "502": [
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:LTL Freight Quotes Unishippers Edition plugin for WordPress",
        "keyphrase": "LTL Freight Quotes Unishippers Edition plugin for WordPress",
        "type": "product"
      },
      {
        "id": "version:up to and including 2.5.8",
        "keyphrase": "up to and including 2.5.8",
        "type": "version"
      }
    ],
    "943": [
      {
        "id": "weakness:SQL injection",
        "keyphrase": "SQL injection",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "impact:append SQL queries",
        "keyphrase": "append SQL queries",
        "type": "impact"
      }
    ]
  }
}