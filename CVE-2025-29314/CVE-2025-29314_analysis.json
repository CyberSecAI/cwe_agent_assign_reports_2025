{
  "cve_id": "CVE-2025-29314",
  "description": "Insecure Shiro cookie configurations in OpenDaylight Service Function Chaining (SFC) Subproject SFC Sodium-SR4 and below allow attackers to access sensitive information via a man-in-the-middle attack.",
  "key_phrases": {
    "rootcause": "insecure Shiro cookie configurations",
    "weakness": "",
    "impact": "access sensitive information",
    "vector": "man-in-the-middle attack",
    "attacker": "attackers",
    "product": "OpenDaylight Service Function Chaining (SFC) Subproject SFC Sodium",
    "version": "SR4 and below",
    "component": ""
  },
  "reference_content": "The content describes a session hijacking vulnerability in the OpenDaylight SFC module due to insecure cookie configurations and session fixation, allowing attackers to bypass authentication and manipulate SFC resources.\n\nHere's a breakdown:\n\n*   **Root cause of vulnerability:**\n    *   Disabled Secure/HttpOnly cookie flags.\n    *   Session fixation flaws.\n*   **Weaknesses/vulnerabilities present:**\n    *   Insecure session ID transmission over HTTP due to the missing Secure flag.\n    *   Client-side session ID exposure because of the missing HttpOnly attribute.\n    *   Session fixation: Shiro does not regenerate session IDs after login.\n*   **Impact of exploitation:**\n    *   Session hijacking, allowing attackers to impersonate legitimate users.\n    *   Privilege escalation: A user-role account can perform admin-level actions.\n    *   Service disruption: Configurations can be removed, breaking the RSP path and blocking traffic forwarding.\n*   **Attack vectors:**\n    *   Man-in-the-middle (MITM) attacks to intercept session IDs transmitted over HTTP.\n    *   Exploiting the lack of HttpOnly to steal session IDs via client-side code execution.\n    *   Exploiting session fixation by forcing victims to use a predefined session ID.\n*   **Required attacker capabilities/position:**\n    *   Network access to intercept traffic (e.g., via ARP spoofing, rogue Wi-Fi).\n    *   Ability to construct and send malicious HTTP requests with a stolen or forged session ID.\n*   **Mitigation or fix:**\n    *   Enabling Secure and HttpOnly flags for session cookies.\n    *   Regenerating session IDs after successful authentication.\n    *   Implementing more robust authorization mechanisms beyond session ID validation.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-614 | Sensitive Cookie in HTTPS Session Without 'Secure' Attribute | 0.9 | Variant | Allowed | Primary CWE: **Insecure Shiro cookie configurations** lead to sensitive information exposure due to missing secure attribute. |\n| CWE-1004 | Sensitive Cookie Without 'HttpOnly' Flag | 0.8 | Variant | Allowed | Secondary CWE: Missing HttpOnly flag allows client-side access to cookies. |\n| CWE-319 | Cleartext Transmission of Sensitive Information | 0.7 | Base | Allowed | Secondary CWE: Cookies transmitted in cleartext can be intercepted in MITM attacks. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is the **insecure configuration of Shiro cookies**, specifically the absence of the \"Secure\" attribute, which leads to **CWE-614** (Sensitive Cookie in HTTPS Session Without 'Secure' Attribute). A related issue is the absence of the \"HttpOnly\" flag (**CWE-1004**), which allows client-side scripts to access the cookie. The absence of the Secure attribute can also lead to **CWE-319** (Cleartext Transmission of Sensitive Information) when the cookie is transmitted over an unencrypted channel, making it vulnerable to man-in-the-middle attacks.\n\n```mermaid\ngraph TD\n    cwe614[\"CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute\"]\n    cwe1004[\"CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag\"]\n    cwe319[\"CWE-319: Cleartext Transmission of Sensitive Information\"]\n    \n    cwe1004 -->|PEEROF| cwe614\n    cwe319 -->|CANRESULTIN| cwe614\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe614 primary\n    class cwe1004,cwe319 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **insecure cookie configurations** (**CWE-614**). This leads to the potential exposure of session IDs, which, if transmitted in cleartext (**CWE-319**), can be intercepted in a man-in-the-middle attack. The missing HttpOnly flag (**CWE-1004**) further exacerbates the issue by allowing client-side scripts to steal the session ID. This allows attackers to access sensitive information.\n\n## Summary of Analysis\nThe initial assessment correctly identifies the root cause as **insecure Shiro cookie configurations**. The primary CWE, **CWE-614**, accurately reflects the absence of the Secure attribute for sensitive cookies. The supporting evidence comes from the vulnerability description key phrases, which highlights the root cause, and the CVE reference links content summary, which specifies the disabled Secure/HttpOnly cookie flags. Additionally, **CWE-1004** (Sensitive Cookie Without 'HttpOnly' Flag) is included to address the missing HttpOnly attribute, and **CWE-319** (Cleartext Transmission of Sensitive Information) is included because a man-in-the-middle attack is listed as the attack vector, therefore cookies are transmitted in clear text. These CWEs are at the appropriate level of specificity (Variant and Base).\n\nRelevant CWE Information:\n- **CWE-614:** Captures the core problem of transmitting sensitive cookies without the \"Secure\" attribute.\n- **CWE-1004:** Accounts for the risk of client-side script access due to the missing \"HttpOnly\" flag.\n- **CWE-319:** Accounts for the man-in-the-middle attack vector, where cookies are transmitted in cleartext.\n- **CWE-522 Insufficiently Protected Credentials:** This was considered but deemed less specific than the chosen CWEs as it is a broader class. The vulnerability is more directly related to the cookie configuration issues.\n- **CWE-784 Reliance on Cookies without Validation and Integrity Checking in a Security Decision:** This was considered, but the core issue isn't the reliance on the cookie, but the insecure configuration.\n- **CWE-330 Use of Insufficiently Random Values:** This was not a good fit because there was no evidence in the summary to indicate this was happening.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-614 | Sensitive Cookie in HTTPS Session Without 'Secure' Attribute | 0.9 | Variant | Allowed | Primary CWE: **Insecure Shiro cookie configurations** lead to sensitive information exposure due to missing secure attribute. |\n| CWE-1004 | Sensitive Cookie Without 'HttpOnly' Flag | 0.8 | Variant | Allowed | Secondary CWE: Missing HttpOnly flag allows client-side access to cookies. |\n| CWE-319 | Cleartext Transmission of Sensitive Information | 0.7 | Base | Allowed | Secondary CWE: Cookies transmitted in cleartext can be intercepted in MITM attacks. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is the **insecure configuration of Shiro cookies**, specifically the absence of the \"Secure\" attribute, which leads to **CWE-614** (Sensitive Cookie in HTTPS Session Without 'Secure' Attribute). A related issue is the absence of the \"HttpOnly\" flag (**CWE-1004**), which allows client-side scripts to access the cookie. The absence of the Secure attribute can also lead to **CWE-319** (Cleartext Transmission of Sensitive Information) when the cookie is transmitted over an unencrypted channel, making it vulnerable to man-in-the-middle attacks.\n\n```mermaid\ngraph TD\n    cwe614[\"CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute\"]\n    cwe1004[\"CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag\"]\n    cwe319[\"CWE-319: Cleartext Transmission of Sensitive Information\"]\n    \n    cwe1004 -->|PEEROF| cwe614\n    cwe319 -->|CANRESULTIN| cwe614\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe614 primary\n    class cwe1004,cwe319 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **insecure cookie configurations** (**CWE-614**). This leads to the potential exposure of session IDs, which, if transmitted in cleartext (**CWE-319**), can be intercepted in a man-in-the-middle attack. The missing HttpOnly flag (**CWE-1004**) further exacerbates the issue by allowing client-side scripts to steal the session ID. This allows attackers to access sensitive information.\n\n## Summary of Analysis\nThe initial assessment correctly identifies the root cause as **insecure Shiro cookie configurations**. The primary CWE, **CWE-614**, accurately reflects the absence of the Secure attribute for sensitive cookies. The supporting evidence comes from the vulnerability description key phrases, which highlights the root cause, and the CVE reference links content summary, which specifies the disabled Secure/HttpOnly cookie flags. Additionally, **CWE-1004** (Sensitive Cookie Without 'HttpOnly' Flag) is included to address the missing HttpOnly attribute, and **CWE-319** (Cleartext Transmission of Sensitive Information) is included because a man-in-the-middle attack is listed as the attack vector, therefore cookies are transmitted in clear text. These CWEs are at the appropriate level of specificity (Variant and Base).\n\nRelevant CWE Information:\n- **CWE-614:** Captures the core problem of transmitting sensitive cookies without the \"Secure\" attribute.\n- **CWE-1004:** Accounts for the risk of client-side script access due to the missing \"HttpOnly\" flag.\n- **CWE-319:** Accounts for the man-in-the-middle attack vector, where cookies are transmitted in cleartext.\n- **CWE-522 Insufficiently Protected Credentials:** This was considered but deemed less specific than the chosen CWEs as it is a broader class. The vulnerability is more directly related to the cookie configuration issues.\n- **CWE-784 Reliance on Cookies without Validation and Integrity Checking in a Security Decision:** This was considered, but the core issue isn't the reliance on the cookie, but the insecure configuration.\n- **CWE-330 Use of Insufficiently Random Values:** This was not a good fit because there was no evidence in the summary to indicate this was happening.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-784:**\n- 784 (Reliance on Cookies without Validation and Integrity Checking in a Security Decision) - ROOT\n\n\n**Chain starting from CWE-330:**\n- 330 (Use of Insufficiently Random Values) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "522",
        "name": "Insufficiently Protected Credentials",
        "source": "sparse"
      },
      "similarity": 153.46312537013887
    },
    {
      "metadata": {
        "doc_id": "614",
        "name": "Sensitive Cookie in HTTPS Session Without 'Secure' Attribute",
        "source": "sparse"
      },
      "similarity": 147.1746388585426
    },
    {
      "metadata": {
        "doc_id": "732",
        "name": "Incorrect Permission Assignment for Critical Resource",
        "source": "sparse"
      },
      "similarity": 146.244405268713
    },
    {
      "metadata": {
        "doc_id": "1188",
        "name": "Initialization of a Resource with an Insecure Default",
        "source": "sparse"
      },
      "similarity": 144.436947708076
    },
    {
      "metadata": {
        "doc_id": "319",
        "name": "Cleartext Transmission of Sensitive Information",
        "source": "sparse"
      },
      "similarity": 142.51368518107623
    },
    {
      "metadata": {
        "doc_id": "1004",
        "name": "Sensitive Cookie Without 'HttpOnly' Flag",
        "source": "sparse"
      },
      "similarity": 142.0621259863188
    },
    {
      "metadata": {
        "doc_id": "321",
        "name": "Use of Hard-coded Cryptographic Key",
        "source": "sparse"
      },
      "similarity": 142.040076107659
    },
    {
      "metadata": {
        "doc_id": "327",
        "name": "Use of a Broken or Risky Cryptographic Algorithm",
        "source": "sparse"
      },
      "similarity": 140.75518315066813
    },
    {
      "metadata": {
        "doc_id": "784",
        "name": "Reliance on Cookies without Validation and Integrity Checking in a Security Decision",
        "type": "Variant",
        "original_content": "The product uses a protection mechanism that relies on the existence or values of a cookie, but it does not properly ensure that the cookie is valid for the associated user.",
        "keyphrase_source": "rootcause:insecure Shiro cookie configurations",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.509788498877422
          }
        }
      },
      "similarity": 0.509788498877422
    },
    {
      "doc_id": "386",
      "text": "CWE-386: Symbolic Name not Mapping to Correct Object",
      "score": 1.6744000000000003,
      "metadata": {
        "doc_id": "386",
        "name": "Symbolic Name not Mapping to Correct Object",
        "type": "base",
        "original_content": "CWE-386: Symbolic Name not Mapping to Correct Object",
        "relationships": [
          {
            "source_id": "386",
            "target_id": "61",
            "label": "REQUIREDBY",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "386",
            "target_id": "486",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "386",
            "target_id": "610",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "386",
            "target_id": "367",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "386",
            "target_id": "706",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "706",
            "target_id": "386",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "61",
            "target_id": "386",
            "label": "REQUIRES",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 0.7200000000000001,
          "sequence_path": 0.8
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "732",
                  "61",
                  "REQUIREDBY"
                ],
                [
                  "61",
                  "386",
                  "REQUIRES"
                ]
              ],
              "score": 0.7200000000000001,
              "type": "relationship_chain",
              "source": "732"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "732",
                  "61",
                  "REQUIREDBY"
                ],
                [
                  "61",
                  "386",
                  "REQUIRES"
                ]
              ],
              "score": 0.8,
              "type": "vulnerability_sequence_forward",
              "source": "732"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 1.6744000000000003
          }
        }
      },
      "similarity": 1.6744000000000003
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-784",
      "CWE-330",
      "CWE-319",
      "CWE-1004",
      "CWE-614",
      "CWE-522"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}