{
  "retriever": "graph",
  "query": "In the Linux kernel, the following vulnerability has been resolved NFS fix nfs_release_folio() to not deadlock via kcompactd writeback Add PF_KCOMPACTD flag and current_is_kcompactd() helper to check for it so nfs_release_folio() can skip calling nfs_wb_folio() from kcompactd. Otherwise NFS can deadlock waiting for kcompactd enduced writeback which recurses back to NFS (which triggers writeback to NFSD via NFS loopback mount on the same host, NFSD blocks waiting for XFSs call to __filemap_get_folio) 6070.550357] INFO task kcompactd058 blocked for more than 4435 seconds. {--- [58] kcompactd0 [] folio_wait_bit+0xe8/0x200 [] folio_wait_writeback+0x2b/0x80 [] nfs_wb_folio+0x80/0x1b0 [nfs] [] nfs_release_folio+0x68/0x130 [nfs] [] split_huge_page_to_list_to_order+0x362/0x840 [] migrate_pages_batch+0x43d/0xb90 [] migrate_pages_sync+0x9a/0x240 [] migrate_pages+0x93c/0x9f0 [] compact_zone+0x8e2/0x1030 [] compact_node+0xdb/0x120 [] kcompactd+0x121/0x2e0 [] kthread+0xcf/0x100 [] ret_from_fork+0x31/0x40 [] ret_from_fork_asm+0x1a/0x30 ---} [akpm@linux-foundation.org fix build] Consider specifically these CWEs: CWE-392 CWE-62 CWE-667 CWE-833 CWE-401 CWE-835 CWE-362 CWE-61",
  "keyphrases": {
    "original_query": "In the Linux kernel, the following vulnerability has been resolved NFS fix nfs_release_folio() to not deadlock via kcompactd writeback Add PF_KCOMPACTD flag and current_is_kcompactd() helper to check for it so nfs_release_folio() can skip calling nfs_wb_folio() from kcompactd. Otherwise NFS can deadlock waiting for kcompactd enduced writeback which recurses back to NFS (which triggers writeback to NFSD via NFS loopback mount on the same host, NFSD blocks waiting for XFSs call to __filemap_get_folio) 6070.550357] INFO task kcompactd058 blocked for more than 4435 seconds. {--- [58] kcompactd0 [] folio_wait_bit+0xe8/0x200 [] folio_wait_writeback+0x2b/0x80 [] nfs_wb_folio+0x80/0x1b0 [nfs] [] nfs_release_folio+0x68/0x130 [nfs] [] split_huge_page_to_list_to_order+0x362/0x840 [] migrate_pages_batch+0x43d/0xb90 [] migrate_pages_sync+0x9a/0x240 [] migrate_pages+0x93c/0x9f0 [] compact_zone+0x8e2/0x1030 [] compact_node+0xdb/0x120 [] kcompactd+0x121/0x2e0 [] kthread+0xcf/0x100 [] ret_from_fork+0x31/0x40 [] ret_from_fork_asm+0x1a/0x30 ---} [akpm@linux-foundation.org fix build]",
    "enhanced_query": "In the Linux kernel, the following vulnerability has been resolved NFS fix nfs_release_folio() to not deadlock via kcompactd writeback Add PF_KCOMPACTD flag and current_is_kcompactd() helper to check for it so nfs_release_folio() can skip calling nfs_wb_folio() from kcompactd. Otherwise NFS can deadlock waiting for kcompactd enduced writeback which recurses back to NFS (which triggers writeback to NFSD via NFS loopback mount on the same host, NFSD blocks waiting for XFSs call to __filemap_get_folio) 6070.550357] INFO task kcompactd058 blocked for more than 4435 seconds. {--- [58] kcompactd0 [] folio_wait_bit+0xe8/0x200 [] folio_wait_writeback+0x2b/0x80 [] nfs_wb_folio+0x80/0x1b0 [nfs] [] nfs_release_folio+0x68/0x130 [nfs] [] split_huge_page_to_list_to_order+0x362/0x840 [] migrate_pages_batch+0x43d/0xb90 [] migrate_pages_sync+0x9a/0x240 [] migrate_pages+0x93c/0x9f0 [] compact_zone+0x8e2/0x1030 [] compact_node+0xdb/0x120 [] kcompactd+0x121/0x2e0 [] kthread+0xcf/0x100 [] ret_from_fork+0x31/0x40 [] ret_from_fork_asm+0x1a/0x30 ---} [akpm@linux-foundation.org fix build] Consider specifically these CWEs: CWE-392 CWE-62 CWE-667 CWE-833 CWE-401 CWE-835 CWE-362 CWE-61",
    "cwe_mentions": [
      "CWE-392",
      "CWE-62",
      "CWE-667",
      "CWE-833",
      "CWE-401",
      "CWE-835",
      "CWE-362",
      "CWE-61"
    ],
    "search_time": 2.695420265197754
  },
  "timestamp": "2025-07-14 09:59:22",
  "cve_id": "CVE-2025-21908",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "390",
      "name": "Detection of Error Condition Without Action",
      "type": "base",
      "score": 2.2100000000000004,
      "relationship_count": 0
    },
    {
      "cwe_id": "1322",
      "name": "Use of Blocking Code in Single-threaded, Non-blocking Context",
      "type": "base",
      "score": 2.2100000000000004,
      "relationship_count": 0
    },
    {
      "cwe_id": "392",
      "name": "Missing Report of Error Condition",
      "type": "base",
      "score": 2.1189999999999998,
      "relationship_count": 0
    },
    {
      "cwe_id": "386",
      "name": "Symbolic Name not Mapping to Correct Object",
      "type": "base",
      "score": 2.0930000000000004,
      "relationship_count": 0
    },
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "type": "variant",
      "score": 2.04,
      "relationship_count": 0
    },
    {
      "cwe_id": "61",
      "name": "UNIX Symbolic Link (Symlink) Following",
      "type": "Compound",
      "score": 1.777046358719041,
      "relationship_count": 0
    },
    {
      "cwe_id": "123",
      "name": "Write-what-where Condition",
      "type": "base",
      "score": 1.7680000000000005,
      "relationship_count": 0
    },
    {
      "cwe_id": "120",
      "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
      "type": "base",
      "score": 1.7680000000000005,
      "relationship_count": 0
    },
    {
      "cwe_id": "364",
      "name": "Signal Handler Race Condition",
      "type": "base",
      "score": 1.7550000000000001,
      "relationship_count": 0
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "type": "Base",
      "score": 1.72256300237501,
      "relationship_count": 0
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "type": "Class",
      "score": 1.7132574678661305,
      "relationship_count": 0
    },
    {
      "cwe_id": "1265",
      "name": "Unintended Reentrant Invocation of Non-reentrant Code Via Nested Calls",
      "type": "base",
      "score": 1.6848000000000003,
      "relationship_count": 0
    },
    {
      "cwe_id": "1325",
      "name": "Improperly Controlled Sequential Memory Allocation",
      "type": "base",
      "score": 1.6848000000000003,
      "relationship_count": 0
    },
    {
      "cwe_id": "662",
      "name": "Improper Synchronization",
      "type": "class",
      "score": 1.6736000000000002,
      "relationship_count": 0
    },
    {
      "cwe_id": "689",
      "name": "Permission Race Condition During Resource Copy",
      "type": "compound",
      "score": 1.616,
      "relationship_count": 0
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "type": "Base",
      "score": 1.5378492990910968,
      "relationship_count": 0
    },
    {
      "cwe_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "type": "Base",
      "score": 1.4979619135427302,
      "relationship_count": 0
    },
    {
      "cwe_id": "415",
      "name": "Double Free",
      "type": "variant",
      "score": 1.4784000000000002,
      "relationship_count": 0
    },
    {
      "cwe_id": "363",
      "name": "Race Condition Enabling Link Following",
      "type": "base",
      "score": 1.4601600000000003,
      "relationship_count": 0
    },
    {
      "cwe_id": "384",
      "name": "Session Fixation",
      "type": "compound",
      "score": 1.3600000000000003,
      "relationship_count": 0
    }
  ]
}