{
  "retriever": "dense",
  "query": "In the Linux kernel, the following vulnerability has been resolved pinmux Use sequential access to access desc->pinmux data When two client of the same gpio call pinctrl_select_state() for the same functionality, we are seeing NULL pointer issue while accessing desc->mux_owner. Lets say two processes A, B executing in pin_request() for the same pin and process A updates the desc->mux_usecount but not yet updated the desc->mux_owner while process B see the desc->mux_usecount which got updated by A path and further executes strcmp and while accessing desc->mux_owner it crashes with NULL pointer. Serialize the access to mux related setting with a mutex lock. cpu0 (process A) cpu1(process B) pinctrl_select_state() { pinctrl_select_state() { pin_request() { pin_request() { ... .... } else { desc->mux_usecount++ desc->mux_usecount && strcmp(desc->mux_owner, owner)) { if (desc->mux_usecount > 1) return 0 desc->mux_owner = owner } }",
  "keyphrases": {
    "weakness": [
      "NULL pointer issue"
    ]
  },
  "timestamp": "2025-07-12 04:53:33",
  "cve_id": "CVE-2024-47141",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "1189",
      "name": "Improper Isolation of Shared Resources on System-on-a-Chip (SoC)",
      "type": "Base",
      "score": 0.5132870757129474
    },
    {
      "cwe_id": "413",
      "name": "Improper Resource Locking",
      "type": "Base",
      "score": 0.5050804031559017
    },
    {
      "cwe_id": "1264",
      "name": "Hardware Logic with Insecure De-Synchronization between Control and Data Channels",
      "type": "Base",
      "score": 0.4991415673794193
    },
    {
      "cwe_id": "1256",
      "name": "Improper Restriction of Software Interfaces to Hardware Features",
      "type": "Base",
      "score": 0.49332601371883367
    },
    {
      "cwe_id": "1191",
      "name": "On-Chip Debug and Test Interface With Improper Access Control",
      "type": "Base",
      "score": 0.4917551116852356
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "type": "Class",
      "score": 0.49078723776753874
    },
    {
      "cwe_id": "1298",
      "name": "Hardware Logic Contains Race Conditions",
      "type": "Base",
      "score": 0.4869242687438404
    },
    {
      "cwe_id": "1421",
      "name": "Exposure of Sensitive Information in Shared Microarchitectural Structures during Transient Execution",
      "type": "Base",
      "score": 0.48295697571827384
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "type": "Base",
      "score": 0.4818183451474821
    },
    {
      "cwe_id": "1299",
      "name": "Missing Protection Mechanism for Alternate Hardware Interface",
      "type": "Base",
      "score": 0.48171694909674767
    },
    {
      "cwe_id": "1260",
      "name": "Improper Handling of Overlap Between Protected Memory Ranges",
      "type": "Base",
      "score": 0.46590067959957215
    },
    {
      "cwe_id": "1262",
      "name": "Improper Access Control for Register Interface",
      "type": "Base",
      "score": 0.46429666427126515
    },
    {
      "cwe_id": "1281",
      "name": "Sequence of Processor Instructions Leads to Unexpected Behavior",
      "type": "Base",
      "score": 0.4616022784474159
    },
    {
      "cwe_id": "1423",
      "name": "Exposure of Sensitive Information caused by Shared Microarchitectural Predictor State that Influences Transient Execution",
      "type": "Base",
      "score": 0.4600085773824911
    },
    {
      "cwe_id": "1233",
      "name": "Security-Sensitive Hardware Controls with Missing Lock Bit Protection",
      "type": "Base",
      "score": 0.45933735537376774
    },
    {
      "cwe_id": "911",
      "name": "Improper Update of Reference Count",
      "type": "Base",
      "score": 0.4562060491844512
    },
    {
      "cwe_id": "1252",
      "name": "CPU Hardware Not Configured to Support Exclusivity of Write and Execute Operations",
      "type": "Base",
      "score": 0.45575589383255855
    },
    {
      "cwe_id": "822",
      "name": "Untrusted Pointer Dereference",
      "type": "Base",
      "score": 0.4552245317811009
    },
    {
      "cwe_id": "1332",
      "name": "Improper Handling of Faults that Lead to Instruction Skips",
      "type": "Base",
      "score": 0.45439616424306917
    },
    {
      "cwe_id": "1223",
      "name": "Race Condition for Write-Once Attributes",
      "type": "Base",
      "score": 0.4521036838872958
    }
  ]
}