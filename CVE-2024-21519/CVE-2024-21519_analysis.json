{
  "cve_id": "CVE-2024-21519",
  "description": "This affects versions of the package opencart/opencart from 4.0.0.0. An **Arbitrary File Creation** issue was identified via the database restoration functionality. By injecting PHP code into the database, an attacker with admin privileges can create a backup file with an arbitrary filename (including the extension), within /system/storage/backup. **Note** It is less likely for the created file to be available within the web root, as part of the security recommendations for the application suggest moving the storage path outside of the web root.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "Arbitrary File Creation",
    "impact": "create a backup file with an arbitrary filename",
    "vector": "injecting PHP code into the database",
    "attacker": "attacker with admin privileges",
    "product": "opencart/opencart",
    "version": "4.0.0.0 and above",
    "component": "database restoration functionality"
  },
  "reference_content": "- **Root cause of vulnerability**: The vulnerability stems from insufficient sanitization of the `filename` parameter during database restoration. While user inputs are generally passed through `htmlspecialchars` at startup, the `filename` parameter of the admin `tool/upload.upload` route bypasses this sanitization by using `html_entity_decode` later, allowing an attacker to inject malicious code into the database. Subsequently, during database restoration, this unsanitized data is used to create a backup file with an arbitrary filename, enabling the creation of malicious files.\n- **Weaknesses/vulnerabilities present**:\n    -  Arbitrary File Creation: The ability to create files with attacker-controlled names and content in the `/system/storage/backup` directory.\n    -  Insufficient Input Sanitization: The `filename` parameter is not properly sanitized and bypasses the initial `htmlspecialchars` encoding through `html_entity_decode`.\n- **Impact of exploitation**: An attacker with admin privileges can inject PHP code into the database through the vulnerable `filename` parameter, and later restore it as a backup file with a chosen name (e.g., `my_script.php`), potentially leading to arbitrary code execution on the server.\n- **Attack vectors**:\n    - Network-based attack via HTTP requests.\n    - Exploitation of the `tool/upload.upload` route and `tool/backup.backup` route in the admin panel.\n- **Required attacker capabilities/position**:\n    - Requires admin privileges to access the vulnerable backup and upload functionality.\n    - Ability to send HTTP POST requests with malicious parameters.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n\n| CWE ID    | CWE Name                                                                       | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| --------- | ------------------------------------------------------------------------------ | ---------- | --------------------- | ------------------------------- | ------------------------------- |\n| CWE-434   | Unrestricted Upload of File with Dangerous Type                               | 0.9        | Base                  | Primary                         | Allowed                         |\n| CWE-73    | External Control of File Name or Path                                         | 0.7        | Base                  | Secondary                       | Allowed                         |\n| CWE-266   | Incorrect Privilege Assignment                                               | 0.6        | Base                  | Secondary                       | Allowed                         |\n| CWE-306   | Missing Authentication for Critical Function                                    | 0.2        | Base                  | Secondary                       | Allowed                         |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\n\nThe primary weakness is **CWE-434** Unrestricted Upload of File with Dangerous Type, because the attacker can upload a file with a dangerous file extension. This is enabled because of **CWE-73** External Control of File Name or Path, which allows the attacker to control the filename. The attacker requires admin privileges, so **CWE-266** Incorrect Privilege Assignment is a secondary concern, since the assignment of admin rights to a malicious actor is a prerequisite. The admin function may be missing authentication, so **CWE-306** Missing Authentication for Critical Function may be present.\n\n```mermaid\ngraph TD\n    cwe434[\"CWE-434: Unrestricted Upload of File with Dangerous Type\"]\n    cwe73[\"CWE-73: External Control of File Name or Path\"]\n    cwe266[\"CWE-266: Incorrect Privilege Assignment\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    \n    cwe434 <--|CANFOLLOW| cwe73\n    cwe434 <--|REQUIRES| cwe266\n    cwe434 <--|REQUIRES| cwe306\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe434 primary\n    class cwe73,cwe266,cwe306 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain begins with the attacker having admin privileges (**CWE-266**), which may be due to a missing authentication (**CWE-306**). This allows the attacker to inject PHP code into the database, leading to external control of the filename (**CWE-73**). This leads to the creation of a backup file with an arbitrary filename and dangerous type (**CWE-434**), potentially leading to arbitrary code execution.\n\n## Summary of Analysis\n\nThe primary weakness is **CWE-434** because the vulnerability description explicitly states the ability to create files with attacker-controlled names and content, and inject PHP code into the database, and later restore it as a backup file with a chosen name (e.g., `my_script.php`). This aligns with the definition of **CWE-434**.\n\nThe secondary weakness is **CWE-73** because the attacker can control the filename. This is supported by the vulnerability description, which states that the attacker can create a backup file with an arbitrary filename.\n\nThe secondary weakness **CWE-266** comes from the **attacker with admin privileges**. \"When a new user registers, the system assigns them admin role due to a missing role validation.\" This meets the criteria to assign **CWE-266**.\n\nThe secondary weakness **CWE-306** is present because there may be a missing authentication scheme for the admin function. \"Identity is never checked\" This meets the criteria to assign **CWE-306**. I have low confidence here because the analysis doesn't explicitly state a missing authentication mechanism.\n\nThe retriever suggested **CWE-59** Improper Link Resolution Before File Access ('Link Following'). This is not a good fit because the vulnerability does not involve symbolic links.\n\nThe retriever suggested **CWE-367** Time-of-check Time-of-use (TOCTOU) Race Condition. This is not a good fit because the vulnerability does not involve a race condition.\n\nThe retriever suggested **CWE-22** Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'). This is not a good fit because the vulnerability does not involve path traversal.",
  "analysis_with_relationships": "# Summary\n\n| CWE ID    | CWE Name                                                                       | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| --------- | ------------------------------------------------------------------------------ | ---------- | --------------------- | ------------------------------- | ------------------------------- |\n| CWE-434   | Unrestricted Upload of File with Dangerous Type                               | 0.9        | Base                  | Primary                         | Allowed                         |\n| CWE-73    | External Control of File Name or Path                                         | 0.7        | Base                  | Secondary                       | Allowed                         |\n| CWE-266   | Incorrect Privilege Assignment                                               | 0.6        | Base                  | Secondary                       | Allowed                         |\n| CWE-306   | Missing Authentication for Critical Function                                    | 0.2        | Base                  | Secondary                       | Allowed                         |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\n\nThe primary weakness is **CWE-434** Unrestricted Upload of File with Dangerous Type, because the attacker can upload a file with a dangerous file extension. This is enabled because of **CWE-73** External Control of File Name or Path, which allows the attacker to control the filename. The attacker requires admin privileges, so **CWE-266** Incorrect Privilege Assignment is a secondary concern, since the assignment of admin rights to a malicious actor is a prerequisite. The admin function may be missing authentication, so **CWE-306** Missing Authentication for Critical Function may be present.\n\n```mermaid\ngraph TD\n    cwe434[\"CWE-434: Unrestricted Upload of File with Dangerous Type\"]\n    cwe73[\"CWE-73: External Control of File Name or Path\"]\n    cwe266[\"CWE-266: Incorrect Privilege Assignment\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    \n    cwe434 <--|CANFOLLOW| cwe73\n    cwe434 <--|REQUIRES| cwe266\n    cwe434 <--|REQUIRES| cwe306\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe434 primary\n    class cwe73,cwe266,cwe306 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain begins with the attacker having admin privileges (**CWE-266**), which may be due to a missing authentication (**CWE-306**). This allows the attacker to inject PHP code into the database, leading to external control of the filename (**CWE-73**). This leads to the creation of a backup file with an arbitrary filename and dangerous type (**CWE-434**), potentially leading to arbitrary code execution.\n\n## Summary of Analysis\n\nThe primary weakness is **CWE-434** because the vulnerability description explicitly states the ability to create files with attacker-controlled names and content, and inject PHP code into the database, and later restore it as a backup file with a chosen name (e.g., `my_script.php`). This aligns with the definition of **CWE-434**.\n\nThe secondary weakness is **CWE-73** because the attacker can control the filename. This is supported by the vulnerability description, which states that the attacker can create a backup file with an arbitrary filename.\n\nThe secondary weakness **CWE-266** comes from the **attacker with admin privileges**. \"When a new user registers, the system assigns them admin role due to a missing role validation.\" This meets the criteria to assign **CWE-266**.\n\nThe secondary weakness **CWE-306** is present because there may be a missing authentication scheme for the admin function. \"Identity is never checked\" This meets the criteria to assign **CWE-306**. I have low confidence here because the analysis doesn't explicitly state a missing authentication mechanism.\n\nThe retriever suggested **CWE-59** Improper Link Resolution Before File Access ('Link Following'). This is not a good fit because the vulnerability does not involve symbolic links.\n\nThe retriever suggested **CWE-367** Time-of-check Time-of-use (TOCTOU) Race Condition. This is not a good fit because the vulnerability does not involve a race condition.\n\nThe retriever suggested **CWE-22** Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'). This is not a good fit because the vulnerability does not involve path traversal.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-22:**\n- 22 (Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')) - ROOT\n\n\n**Chain starting from CWE-59:**\n- 59 (Improper Link Resolution Before File Access ('Link Following')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "59",
        "name": "Improper Link Resolution Before File Access ('Link Following')",
        "source": "sparse"
      },
      "similarity": 488.0144011259775
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 472.22508339114904
    },
    {
      "metadata": {
        "doc_id": "367",
        "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
        "source": "sparse"
      },
      "similarity": 460.62317220211526
    },
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "sparse"
      },
      "similarity": 460.617754986757
    },
    {
      "metadata": {
        "doc_id": "61",
        "name": "UNIX Symbolic Link (Symlink) Following",
        "source": "sparse"
      },
      "similarity": 460.5597286798316
    },
    {
      "metadata": {
        "doc_id": "23",
        "name": "Relative Path Traversal",
        "source": "sparse"
      },
      "similarity": 453.7498898630882
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 452.4322770736305
    },
    {
      "metadata": {
        "doc_id": "138",
        "name": "Improper Neutralization of Special Elements",
        "source": "sparse"
      },
      "similarity": 451.9473791832802
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "type": "Base",
        "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
        "keyphrase_source": "weakness:Arbitrary File Creation",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5255933276846958,
            "graph": 2.5523152518140724
          }
        }
      },
      "similarity": 0.5255933276846958
    },
    {
      "doc_id": "363",
      "text": "CWE-363: Race Condition Enabling Link Following",
      "score": 2.8651999999999997,
      "metadata": {
        "doc_id": "363",
        "name": "Race Condition Enabling Link Following",
        "type": "base",
        "original_content": "CWE-363: Race Condition Enabling Link Following",
        "relationships": [
          {
            "source_id": "363",
            "target_id": "59",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "363",
            "target_id": "367",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "59",
            "target_id": "363",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "367",
            "target_id": "363",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.7200000000000001,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "59",
                  "363",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "59"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "367",
                  "363",
                  "PARENTOF"
                ]
              ],
              "score": 0.7200000000000001,
              "type": "abstraction_path_down",
              "source": "367"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "59",
                  "363",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "59"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "363",
                  "59",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "59"
            }
          }
        },
        "abstraction_level": "base",
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.8651999999999997
          }
        }
      },
      "similarity": 2.8651999999999997
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-22",
      "CWE-59",
      "CWE-73",
      "CWE-306",
      "CWE-266",
      "CWE-367",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}