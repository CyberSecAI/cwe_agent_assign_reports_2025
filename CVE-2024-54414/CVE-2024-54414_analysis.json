{
  "cve_id": "CVE-2024-54414",
  "description": "Cross-Site Request Forgery (CSRF) vulnerability in geoWP Geoportail Shortcode allows Stored **XSS**.This issue affects Geoportail Shortcode from n/a through 2.4.4.",
  "key_phrases": {
    "rootcause": "lack of CSRF protection",
    "weakness": [
      "XSS",
      "cross-site scripting"
    ],
    "impact": "Stored XSS",
    "vector": "",
    "attacker": "",
    "product": "geoWP Geoportail Shortcode",
    "version": "n/a through 2.4.4",
    "component": ""
  },
  "reference_content": "```\n{\n  \"Root cause of vulnerability\": \"The WordPress Geoportail Shortcode Plugin <= 2.4.4 is vulnerable to Cross Site Request Forgery (CSRF).\",\n  \"Weaknesses/vulnerabilities present\": \"Cross-Site Request Forgery (CSRF)\",\n  \"Impact of exploitation\": \"A malicious actor can force higher privileged users to execute unwanted actions under their current authentication.\",\n  \"Attack vectors\": \"A malicious actor can use CSRF to force authenticated users to perform actions without their consent.\",\n  \"Required attacker capabilities/position\": \"The attacker needs to trick an authenticated user into interacting with a crafted request. This can be done by including a malicious link or embedding a hidden form in an email, website or other medium that the user is likely to interact with.\"\n}\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n\n| CWE ID  | CWE Name                                                                    | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :-------------------------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-352 | Cross-Site Request Forgery (CSRF)                                       | 0.9        | Compound              | Primary CWE                     | Allowed                       |\n| CWE-79  | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.8        | Base                  | Secondary Candidate             | Allowed                       |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\n\nThe primary relationship impacting the decision is the sequential nature of the attack: first, the lack of CSRF protection (CWE-352) allows an attacker to inject malicious code. This code is then executed due to the improper neutralization of input (CWE-79), leading to stored XSS. CWE-352 can precede CWE-79 in a vulnerability chain. Both CWEs are at preferred abstraction levels (Compound and Base, respectively).\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n\n    cwe352 -->|CANPRECEDE| cwe79\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with the **lack of CSRF protection** (CWE-352), which allows an attacker to forge requests. This leads to the injection of malicious input. The injected input is then improperly handled due to the **Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')** (CWE-79), resulting in the stored XSS vulnerability.\n\nCWE-352 (Root Cause) -> CWE-79 (Weakness/Impact)\n\n## Summary of Analysis\n\nThe initial analysis identified two key weaknesses: **lack of CSRF protection** and **XSS**. The primary root cause is the **lack of CSRF protection**, which allows the attacker to inject malicious input. The resulting **Stored XSS** is a consequence of the **improper neutralization of input** (CWE-79). The assessment is based on the vulnerability description, which explicitly mentions both the CSRF and XSS aspects.\n\nThe graph relationships confirm that CWE-352 can precede CWE-79, indicating a chain of vulnerabilities where the lack of CSRF protection enables the XSS vulnerability.\n\nCWE-352 is at the Compound level, representing a complex weakness, while CWE-79 is at the Base level, providing a more specific description of the XSS vulnerability. Both are appropriate levels of specificity for the given information.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\n**Abstraction Level**: Variant\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-668: Exposure of Resource to Wrong Sphere\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-668 is high-level and is often misused as a catch-all when lower-level CWE IDs might be applicable. It is sometimes used for low-information vulnerability reports [REF-1287]. It is a level-1 Class (i.e., a child of a Pillar). It is not useful for trend analysis.\n\n\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-184: Incomplete List of Disallowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-41: Improper Resolution of Path Equivalence\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product is vulnerable to file system contents disclosure through path equivalence. Path equivalence involves the use of special characters in file and directory names. The associated manipulations are intended to generate multiple names for the same object.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 3012.46\n**Source**: sparse\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data",
  "analysis_with_relationships": "# Summary\n\n| CWE ID  | CWE Name                                                                    | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :-------------------------------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-352 | Cross-Site Request Forgery (CSRF)                                       | 0.9        | Compound              | Primary CWE                     | Allowed                       |\n| CWE-79  | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.8        | Base                  | Secondary Candidate             | Allowed                       |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\n\nThe primary relationship impacting the decision is the sequential nature of the attack: first, the lack of CSRF protection (CWE-352) allows an attacker to inject malicious code. This code is then executed due to the improper neutralization of input (CWE-79), leading to stored XSS. CWE-352 can precede CWE-79 in a vulnerability chain. Both CWEs are at preferred abstraction levels (Compound and Base, respectively).\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n\n    cwe352 -->|CANPRECEDE| cwe79\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with the **lack of CSRF protection** (CWE-352), which allows an attacker to forge requests. This leads to the injection of malicious input. The injected input is then improperly handled due to the **Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')** (CWE-79), resulting in the stored XSS vulnerability.\n\nCWE-352 (Root Cause) -> CWE-79 (Weakness/Impact)\n\n## Summary of Analysis\n\nThe initial analysis identified two key weaknesses: **lack of CSRF protection** and **XSS**. The primary root cause is the **lack of CSRF protection**, which allows the attacker to inject malicious input. The resulting **Stored XSS** is a consequence of the **improper neutralization of input** (CWE-79). The assessment is based on the vulnerability description, which explicitly mentions both the CSRF and XSS aspects.\n\nThe graph relationships confirm that CWE-352 can precede CWE-79, indicating a chain of vulnerabilities where the lack of CSRF protection enables the XSS vulnerability.\n\nCWE-352 is at the Compound level, representing a complex weakness, while CWE-79 is at the Base level, providing a more specific description of the XSS vulnerability. Both are appropriate levels of specificity for the given information.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\n**Abstraction Level**: Variant\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-668: Exposure of Resource to Wrong Sphere\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-668 is high-level and is often misused as a catch-all when lower-level CWE IDs might be applicable. It is sometimes used for low-information vulnerability reports [REF-1287]. It is a level-1 Class (i.e., a child of a Pillar). It is not useful for trend analysis.\n\n\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-184: Incomplete List of Disallowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-41: Improper Resolution of Path Equivalence\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product is vulnerable to file system contents disclosure through path equivalence. Path equivalence involves the use of special characters in file and directory names. The associated manipulations are intended to generate multiple names for the same object.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 3012.46\n**Source**: sparse\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n**Chain starting from CWE-80:**\n- 80 (Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_sources": [
          {
            "id": "rootcause:lack of CSRF protection",
            "keyphrase": "lack of CSRF protection",
            "type": "rootcause"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "impact:Stored XSS",
            "keyphrase": "Stored XSS",
            "type": "impact"
          },
          {
            "id": "product:geoWP Geoportail Shortcode",
            "keyphrase": "geoWP Geoportail Shortcode",
            "type": "product"
          },
          {
            "id": "version:n/a through 2.4.4",
            "keyphrase": "n/a through 2.4.4",
            "type": "version"
          }
        ]
      },
      "similarity": 274.6609379167967
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse",
        "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
        "keyphrase_sources": [
          {
            "id": "rootcause:lack of CSRF protection",
            "keyphrase": "lack of CSRF protection",
            "type": "rootcause"
          },
          {
            "id": "version:n/a through 2.4.4",
            "keyphrase": "n/a through 2.4.4",
            "type": "version"
          }
        ]
      },
      "similarity": 202.96420171899433
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "keyphrase_sources": [
          {
            "id": "rootcause:lack of CSRF protection",
            "keyphrase": "lack of CSRF protection",
            "type": "rootcause"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "impact:Stored XSS",
            "keyphrase": "Stored XSS",
            "type": "impact"
          }
        ]
      },
      "similarity": 196.20112544929714
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse",
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "keyphrase_sources": [
          {
            "id": "rootcause:lack of CSRF protection",
            "keyphrase": "lack of CSRF protection",
            "type": "rootcause"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "impact:Stored XSS",
            "keyphrase": "Stored XSS",
            "type": "impact"
          },
          {
            "id": "product:geoWP Geoportail Shortcode",
            "keyphrase": "geoWP Geoportail Shortcode",
            "type": "product"
          },
          {
            "id": "version:n/a through 2.4.4",
            "keyphrase": "n/a through 2.4.4",
            "type": "version"
          }
        ]
      },
      "similarity": 192.9770848322948
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "keyphrase_sources": [
          {
            "id": "rootcause:lack of CSRF protection",
            "keyphrase": "lack of CSRF protection",
            "type": "rootcause"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "product:geoWP Geoportail Shortcode",
            "keyphrase": "geoWP Geoportail Shortcode",
            "type": "product"
          },
          {
            "id": "version:n/a through 2.4.4",
            "keyphrase": "n/a through 2.4.4",
            "type": "version"
          }
        ]
      },
      "similarity": 181.6540946369329
    },
    {
      "metadata": {
        "doc_id": "1004",
        "name": "Sensitive Cookie Without 'HttpOnly' Flag",
        "source": "sparse",
        "original_content": "The product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag.",
        "keyphrase_sources": [
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "impact:Stored XSS",
            "keyphrase": "Stored XSS",
            "type": "impact"
          },
          {
            "id": "product:geoWP Geoportail Shortcode",
            "keyphrase": "geoWP Geoportail Shortcode",
            "type": "product"
          }
        ]
      },
      "similarity": 148.43034680664664
    },
    {
      "metadata": {
        "doc_id": "80",
        "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
        "source": "sparse",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.",
        "keyphrase_sources": [
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "impact:Stored XSS",
            "keyphrase": "Stored XSS",
            "type": "impact"
          }
        ]
      },
      "similarity": 141.6601639106077
    },
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "sparse",
        "original_content": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
        "keyphrase_sources": [
          {
            "id": "version:n/a through 2.4.4",
            "keyphrase": "n/a through 2.4.4",
            "type": "version"
          }
        ]
      },
      "similarity": 64.24422781576774
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse",
        "original_content": "The code transmits data to another actor, but a portion of the data includes sensitive information that should not be accessible to that actor.",
        "keyphrase_sources": [
          {
            "id": "product:geoWP Geoportail Shortcode",
            "keyphrase": "geoWP Geoportail Shortcode",
            "type": "product"
          }
        ]
      },
      "similarity": 44.501932025749134
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-116",
      "CWE-80",
      "CWE-212",
      "CWE-79",
      "CWE-472",
      "CWE-352",
      "CWE-74",
      "CWE-668",
      "CWE-138",
      "CWE-184",
      "CWE-425",
      "CWE-41"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "352": [
      {
        "id": "rootcause:lack of CSRF protection",
        "keyphrase": "lack of CSRF protection",
        "type": "rootcause"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "impact:Stored XSS",
        "keyphrase": "Stored XSS",
        "type": "impact"
      },
      {
        "id": "product:geoWP Geoportail Shortcode",
        "keyphrase": "geoWP Geoportail Shortcode",
        "type": "product"
      },
      {
        "id": "version:n/a through 2.4.4",
        "keyphrase": "n/a through 2.4.4",
        "type": "version"
      }
    ],
    "434": [
      {
        "id": "rootcause:lack of CSRF protection",
        "keyphrase": "lack of CSRF protection",
        "type": "rootcause"
      },
      {
        "id": "version:n/a through 2.4.4",
        "keyphrase": "n/a through 2.4.4",
        "type": "version"
      }
    ],
    "116": [
      {
        "id": "rootcause:lack of CSRF protection",
        "keyphrase": "lack of CSRF protection",
        "type": "rootcause"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "impact:Stored XSS",
        "keyphrase": "Stored XSS",
        "type": "impact"
      }
    ],
    "79": [
      {
        "id": "rootcause:lack of CSRF protection",
        "keyphrase": "lack of CSRF protection",
        "type": "rootcause"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "impact:Stored XSS",
        "keyphrase": "Stored XSS",
        "type": "impact"
      },
      {
        "id": "product:geoWP Geoportail Shortcode",
        "keyphrase": "geoWP Geoportail Shortcode",
        "type": "product"
      },
      {
        "id": "version:n/a through 2.4.4",
        "keyphrase": "n/a through 2.4.4",
        "type": "version"
      }
    ],
    "89": [
      {
        "id": "rootcause:lack of CSRF protection",
        "keyphrase": "lack of CSRF protection",
        "type": "rootcause"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "product:geoWP Geoportail Shortcode",
        "keyphrase": "geoWP Geoportail Shortcode",
        "type": "product"
      },
      {
        "id": "version:n/a through 2.4.4",
        "keyphrase": "n/a through 2.4.4",
        "type": "version"
      }
    ],
    "1004": [
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "impact:Stored XSS",
        "keyphrase": "Stored XSS",
        "type": "impact"
      },
      {
        "id": "product:geoWP Geoportail Shortcode",
        "keyphrase": "geoWP Geoportail Shortcode",
        "type": "product"
      }
    ],
    "80": [
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "impact:Stored XSS",
        "keyphrase": "Stored XSS",
        "type": "impact"
      }
    ],
    "201": [
      {
        "id": "product:geoWP Geoportail Shortcode",
        "keyphrase": "geoWP Geoportail Shortcode",
        "type": "product"
      }
    ],
    "22": [
      {
        "id": "version:n/a through 2.4.4",
        "keyphrase": "n/a through 2.4.4",
        "type": "version"
      }
    ]
  }
}