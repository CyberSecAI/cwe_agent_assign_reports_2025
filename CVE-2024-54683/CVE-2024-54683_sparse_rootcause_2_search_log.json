{
  "method": "sparse_rootcause_2",
  "query": "In the Linux kernel, the following vulnerability has been resolved netfilter IDLETIMER Fix for possible ABBA deadlock Deletion of the last rule referencing a given idletimer may happen at the same time as a read of its file in sysfs | ====================================================== | WARNING possible circular locking dependency detected | 6.12.0-rc7-01692-g5e9a28f41134-dirty #594 Not tainted | ------------------------------------------------------ | iptables/3303 is trying to acquire lock | ffff8881057e04b8 (kn->active#48){++++}-{00}, at __kernfs_remove+0x20 | | but task is already holding lock | ffffffffa0249068 (list_mutex){+.+.}-{33}, at idletimer_tg_destroy_v] | | which lock already depends on the new lock. A simple reproducer is | #!/bin/bash | | while true do | iptables -A INPUT -i foo -j IDLETIMER --timeout 10 --label testme | iptables -D INPUT -i foo -j IDLETIMER --timeout 10 --label testme | done & | while true do | cat /sys/class/xt_idletimer/timers/testme >/dev/null | done Avoid this by freeing list_mutex right after deleting the element from the list, then continuing with the teardown.",
  "keyphrases": {
    "rootcause": "deletion of the last rule referencing a given idletimer may happen at the same time as a read of its file in sysfs"
  },
  "timestamp": "2025-07-12T06:25:08.339498",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "667",
      "name": "Improper Locking",
      "score": 736.7375237835189
    },
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 644.7249351088032
    },
    {
      "doc_id": "833",
      "name": "Deadlock",
      "score": 642.5347179526327
    },
    {
      "doc_id": "22",
      "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
      "score": 608.1052784622486
    },
    {
      "doc_id": "1390",
      "name": "Weak Authentication",
      "score": 604.9968096759553
    }
  ]
}