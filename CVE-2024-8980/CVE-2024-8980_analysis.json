{
  "cve_id": "CVE-2024-8980",
  "description": "The Script Console in Liferay Portal 7.0.0 through 7.4.3.101, and Liferay DXP 2023.Q3.1 through 2023.Q3.4, 7.4 GA through update 92, 7.3 GA through update 35, 7.2 GA through fix pack 20, 7.1 GA through fix pack 28, 7.0 GA through fix pack 102 and 6.2 GA through fix pack 173 **does not sufficiently protect against Cross-Site Request Forgery (CSRF) attacks**, which allows remote attackers to execute arbitrary Groovy script via a crafted URL or a **XSS vulnerability**.",
  "key_phrases": {
    "rootcause": "does not sufficiently protect against Cross-Site Request Forgery (CSRF) attacks",
    "weakness": [
      "XSS vulnerability",
      "cross-site scripting"
    ],
    "impact": "execute arbitrary Groovy script",
    "vector": "crafted URL",
    "attacker": "remote attackers",
    "product": [
      "['Liferay Portal'",
      "'Liferay DXP']"
    ],
    "version": [
      "['7.0.0 through 7.4.3.101'",
      "'2023.Q3.1 through 2023.Q3.4']"
    ],
    "component": "Script Console"
  },
  "reference_content": "Based on the provided content, here's a breakdown of the vulnerability:\n\n**Root Cause:** The Script Console in Liferay Portal and Liferay DXP lacks sufficient protection against Cross-Site Request Forgery (CSRF) attacks.\n\n**Weaknesses/Vulnerabilities:**\n*   **CSRF Vulnerability:** The Script Console is susceptible to CSRF attacks, allowing attackers to execute arbitrary Groovy scripts.\n*  **XSS:** The description also mentions the potential to exploit this vulnerability using an XSS vulnerability.\n\n**Impact of Exploitation:**\n*   **Arbitrary Code Execution:** Successful exploitation allows remote attackers to execute arbitrary Groovy scripts. This could lead to a complete compromise of the application, including unauthorized access to data, modification of system configurations, and potential takeover of the server.\n\n**Attack Vectors:**\n*   **Crafted URL:** Attackers can exploit the CSRF vulnerability by crafting malicious URLs that, when visited by an authenticated user, will execute the arbitrary scripts.\n*   **XSS:** Attackers can also leverage an existing XSS vulnerability to execute malicious javascript that triggers the execution of arbitrary code through the vulnerable script console.\n\n**Required Attacker Capabilities/Position:**\n*   **Remote Attacker:** The attacker can be a remote user.\n*   **User Interaction:** The attack requires a victim to be authenticated and to either visit a crafted URL or be affected by an XSS vulnerability on a page of the portal.\n\n**Affected Versions:**\n*   Liferay Portal 7.4.0 through 7.4.3.101\n*   Liferay Portal 7.3.0 through 7.3.7\n*   Liferay Portal 7.2.0 through 7.2.1\n*   Liferay Portal 7.1.0 through 7.1.3\n*  Liferay Portal 7.0.0 through 7.0.6\n*   Liferay DXP 2023.Q3.1 through 2023.Q3.4\n*   Liferay DXP 7.4\n*   Liferay DXP 7.3 GA through Update 35\n*   Liferay DXP 7.2\n*  Liferay DXP 7.1\n*   Liferay DXP 7.0\n*  Liferay DXP 6.2\n\n**Fixed Versions:**\n*   Liferay Portal 7.4.3.102\n*   Liferay DXP 2024.Q1.1\n*   Liferay DXP 2023.Q4.0\n*   Liferay DXP 2023.Q3.5\n*   Liferay DXP 7.3 Update 36\n\nThe content provides more details than a typical CVE description by listing the specific affected and fixed versions of Liferay Portal and DXP.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 1.0 | Compound | Primary | Allowed |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.8 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is CWE-352 [CWE-352: Cross-Site Request Forgery (CSRF)], which is a compound CWE representing a combination of factors that allow an attacker to induce unintended actions on a web application. The vulnerability description explicitly states that the application **does not sufficiently protect against Cross-Site Request Forgery (CSRF) attacks**. A secondary weakness is CWE-79 [CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')], as the vulnerability description mentions that a **XSS vulnerability** can be used to trigger the CSRF. CWE-79 [CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] can precede CWE-352 [CWE-352: Cross-Site Request Forgery (CSRF)] in an attack chain.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe79 -->|CANPRECEDE| cwe352\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with either the **lack of CSRF protection** (CWE-352 [CWE-352: Cross-Site Request Forgery (CSRF)]) or an existing **XSS vulnerability** (CWE-79 [CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')]). The XSS vulnerability can then be exploited to perform a CSRF attack, leading to arbitrary Groovy script execution.\n\n## Summary of Analysis\nThe primary CWE is CWE-352 [CWE-352: Cross-Site Request Forgery (CSRF)] because the root cause of the vulnerability is the **insufficient protection against CSRF attacks**. This is directly stated in the vulnerability description: \"The Script Console in Liferay Portal ... **does not sufficiently protect against Cross-Site Request Forgery (CSRF) attacks**\".\nThe secondary CWE is CWE-79 [CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] because the vulnerability description mentions that a **XSS vulnerability** can be leveraged to perform the CSRF attack. The vulnerability description states: \"which allows remote attackers to execute arbitrary Groovy script via a crafted URL or a **XSS vulnerability**.\"\nCWE-352 [CWE-352: Cross-Site Request Forgery (CSRF)] is a compound CWE, which is appropriate here since the vulnerability requires multiple conditions to be met.\nCWE-79 [CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] is a Base CWE, which is the preferred level of abstraction.\n\nOther CWEs were considered but not selected:\n\n*   CWE-89 [CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')], CWE-201 [CWE-201: Insertion of Sensitive Information Into Sent Data], and CWE-918 [CWE-918: Server-Side Request Forgery (SSRF)] were not selected because the description does not provide evidence of these weaknesses.\n*   CWE-94 [CWE-94: Improper Control of Generation of Code ('Code Injection')] was considered because the impact is arbitrary code execution, however, the root cause is the missing CSRF protection and/or the presence of a XSS vulnerability.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 1.0 | Compound | Primary | Allowed |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.8 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is CWE-352 [CWE-352: Cross-Site Request Forgery (CSRF)], which is a compound CWE representing a combination of factors that allow an attacker to induce unintended actions on a web application. The vulnerability description explicitly states that the application **does not sufficiently protect against Cross-Site Request Forgery (CSRF) attacks**. A secondary weakness is CWE-79 [CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')], as the vulnerability description mentions that a **XSS vulnerability** can be used to trigger the CSRF. CWE-79 [CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] can precede CWE-352 [CWE-352: Cross-Site Request Forgery (CSRF)] in an attack chain.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe79 -->|CANPRECEDE| cwe352\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with either the **lack of CSRF protection** (CWE-352 [CWE-352: Cross-Site Request Forgery (CSRF)]) or an existing **XSS vulnerability** (CWE-79 [CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')]). The XSS vulnerability can then be exploited to perform a CSRF attack, leading to arbitrary Groovy script execution.\n\n## Summary of Analysis\nThe primary CWE is CWE-352 [CWE-352: Cross-Site Request Forgery (CSRF)] because the root cause of the vulnerability is the **insufficient protection against CSRF attacks**. This is directly stated in the vulnerability description: \"The Script Console in Liferay Portal ... **does not sufficiently protect against Cross-Site Request Forgery (CSRF) attacks**\".\nThe secondary CWE is CWE-79 [CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] because the vulnerability description mentions that a **XSS vulnerability** can be leveraged to perform the CSRF attack. The vulnerability description states: \"which allows remote attackers to execute arbitrary Groovy script via a crafted URL or a **XSS vulnerability**.\"\nCWE-352 [CWE-352: Cross-Site Request Forgery (CSRF)] is a compound CWE, which is appropriate here since the vulnerability requires multiple conditions to be met.\nCWE-79 [CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')] is a Base CWE, which is the preferred level of abstraction.\n\nOther CWEs were considered but not selected:\n\n*   CWE-89 [CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')], CWE-201 [CWE-201: Insertion of Sensitive Information Into Sent Data], and CWE-918 [CWE-918: Server-Side Request Forgery (SSRF)] were not selected because the description does not provide evidence of these weaknesses.\n*   CWE-94 [CWE-94: Improper Control of Generation of Code ('Code Injection')] was considered because the impact is arbitrary code execution, however, the root cause is the missing CSRF protection and/or the presence of a XSS vulnerability.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n**Chain starting from CWE-94:**\n- 94 (Improper Control of Generation of Code ('Code Injection')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_sources": [
          {
            "id": "rootcause:does not sufficiently protect against Cross-Site Request Forgery (CSRF) attacks",
            "keyphrase": "does not sufficiently protect against Cross-Site Request Forgery (CSRF) attacks",
            "type": "rootcause"
          },
          {
            "id": "weakness:XSS vulnerability",
            "keyphrase": "XSS vulnerability",
            "type": "weakness"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "impact:execute arbitrary Groovy script",
            "keyphrase": "execute arbitrary Groovy script",
            "type": "impact"
          },
          {
            "id": "vector:crafted URL",
            "keyphrase": "crafted URL",
            "type": "vector"
          },
          {
            "id": "attacker:remote attackers",
            "keyphrase": "remote attackers",
            "type": "attacker"
          },
          {
            "id": "product:'Liferay DXP']",
            "keyphrase": "'Liferay DXP']",
            "type": "product"
          },
          {
            "id": "version:['7.0.0 through 7.4.3.101'",
            "keyphrase": "['7.0.0 through 7.4.3.101'",
            "type": "version"
          },
          {
            "id": "version:'2023.Q3.1 through 2023.Q3.4']",
            "keyphrase": "'2023.Q3.1 through 2023.Q3.4']",
            "type": "version"
          },
          {
            "id": "component:Script Console",
            "keyphrase": "Script Console",
            "type": "component"
          }
        ]
      },
      "similarity": 646.561931836259
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "keyphrase_sources": [
          {
            "id": "rootcause:does not sufficiently protect against Cross-Site Request Forgery (CSRF) attacks",
            "keyphrase": "does not sufficiently protect against Cross-Site Request Forgery (CSRF) attacks",
            "type": "rootcause"
          },
          {
            "id": "weakness:XSS vulnerability",
            "keyphrase": "XSS vulnerability",
            "type": "weakness"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "vector:crafted URL",
            "keyphrase": "crafted URL",
            "type": "vector"
          },
          {
            "id": "attacker:remote attackers",
            "keyphrase": "remote attackers",
            "type": "attacker"
          },
          {
            "id": "product:['Liferay Portal'",
            "keyphrase": "['Liferay Portal'",
            "type": "product"
          },
          {
            "id": "product:'Liferay DXP']",
            "keyphrase": "'Liferay DXP']",
            "type": "product"
          },
          {
            "id": "version:['7.0.0 through 7.4.3.101'",
            "keyphrase": "['7.0.0 through 7.4.3.101'",
            "type": "version"
          },
          {
            "id": "version:'2023.Q3.1 through 2023.Q3.4']",
            "keyphrase": "'2023.Q3.1 through 2023.Q3.4']",
            "type": "version"
          },
          {
            "id": "component:Script Console",
            "keyphrase": "Script Console",
            "type": "component"
          }
        ]
      },
      "similarity": 572.1615399033514
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse",
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "keyphrase_sources": [
          {
            "id": "rootcause:does not sufficiently protect against Cross-Site Request Forgery (CSRF) attacks",
            "keyphrase": "does not sufficiently protect against Cross-Site Request Forgery (CSRF) attacks",
            "type": "rootcause"
          },
          {
            "id": "weakness:XSS vulnerability",
            "keyphrase": "XSS vulnerability",
            "type": "weakness"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "impact:execute arbitrary Groovy script",
            "keyphrase": "execute arbitrary Groovy script",
            "type": "impact"
          },
          {
            "id": "vector:crafted URL",
            "keyphrase": "crafted URL",
            "type": "vector"
          },
          {
            "id": "attacker:remote attackers",
            "keyphrase": "remote attackers",
            "type": "attacker"
          },
          {
            "id": "product:['Liferay Portal'",
            "keyphrase": "['Liferay Portal'",
            "type": "product"
          },
          {
            "id": "version:['7.0.0 through 7.4.3.101'",
            "keyphrase": "['7.0.0 through 7.4.3.101'",
            "type": "version"
          },
          {
            "id": "version:'2023.Q3.1 through 2023.Q3.4']",
            "keyphrase": "'2023.Q3.1 through 2023.Q3.4']",
            "type": "version"
          },
          {
            "id": "component:Script Console",
            "keyphrase": "Script Console",
            "type": "component"
          }
        ]
      },
      "similarity": 541.8642565590555
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse",
        "original_content": "The code transmits data to another actor, but a portion of the data includes sensitive information that should not be accessible to that actor.",
        "keyphrase_sources": [
          {
            "id": "rootcause:does not sufficiently protect against Cross-Site Request Forgery (CSRF) attacks",
            "keyphrase": "does not sufficiently protect against Cross-Site Request Forgery (CSRF) attacks",
            "type": "rootcause"
          },
          {
            "id": "weakness:XSS vulnerability",
            "keyphrase": "XSS vulnerability",
            "type": "weakness"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "impact:execute arbitrary Groovy script",
            "keyphrase": "execute arbitrary Groovy script",
            "type": "impact"
          },
          {
            "id": "vector:crafted URL",
            "keyphrase": "crafted URL",
            "type": "vector"
          },
          {
            "id": "attacker:remote attackers",
            "keyphrase": "remote attackers",
            "type": "attacker"
          },
          {
            "id": "product:['Liferay Portal'",
            "keyphrase": "['Liferay Portal'",
            "type": "product"
          },
          {
            "id": "product:'Liferay DXP']",
            "keyphrase": "'Liferay DXP']",
            "type": "product"
          },
          {
            "id": "version:['7.0.0 through 7.4.3.101'",
            "keyphrase": "['7.0.0 through 7.4.3.101'",
            "type": "version"
          },
          {
            "id": "version:'2023.Q3.1 through 2023.Q3.4']",
            "keyphrase": "'2023.Q3.1 through 2023.Q3.4']",
            "type": "version"
          },
          {
            "id": "component:Script Console",
            "keyphrase": "Script Console",
            "type": "component"
          }
        ]
      },
      "similarity": 538.2669694187646
    },
    {
      "metadata": {
        "doc_id": "918",
        "name": "Server-Side Request Forgery (SSRF)",
        "source": "sparse",
        "original_content": "The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.",
        "keyphrase_sources": [
          {
            "id": "rootcause:does not sufficiently protect against Cross-Site Request Forgery (CSRF) attacks",
            "keyphrase": "does not sufficiently protect against Cross-Site Request Forgery (CSRF) attacks",
            "type": "rootcause"
          },
          {
            "id": "weakness:XSS vulnerability",
            "keyphrase": "XSS vulnerability",
            "type": "weakness"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "vector:crafted URL",
            "keyphrase": "crafted URL",
            "type": "vector"
          },
          {
            "id": "version:'2023.Q3.1 through 2023.Q3.4']",
            "keyphrase": "'2023.Q3.1 through 2023.Q3.4']",
            "type": "version"
          }
        ]
      },
      "similarity": 528.4370128054161
    },
    {
      "metadata": {
        "doc_id": "94",
        "name": "Improper Control of Generation of Code ('Code Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",
        "keyphrase_sources": [
          {
            "id": "impact:execute arbitrary Groovy script",
            "keyphrase": "execute arbitrary Groovy script",
            "type": "impact"
          },
          {
            "id": "component:Script Console",
            "keyphrase": "Script Console",
            "type": "component"
          }
        ]
      },
      "similarity": 144.63233238011722
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "keyphrase_sources": [
          {
            "id": "impact:execute arbitrary Groovy script",
            "keyphrase": "execute arbitrary Groovy script",
            "type": "impact"
          }
        ]
      },
      "similarity": 143.00646280398888
    },
    {
      "metadata": {
        "doc_id": "346",
        "name": "Origin Validation Error",
        "source": "sparse",
        "original_content": "The product does not properly verify that the source of data or communication is valid.",
        "keyphrase_sources": [
          {
            "id": "product:['Liferay Portal'",
            "keyphrase": "['Liferay Portal'",
            "type": "product"
          },
          {
            "id": "product:'Liferay DXP']",
            "keyphrase": "'Liferay DXP']",
            "type": "product"
          }
        ]
      },
      "similarity": 135.31600025396338
    },
    {
      "metadata": {
        "doc_id": "522",
        "name": "Insufficiently Protected Credentials",
        "source": "sparse",
        "original_content": "The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.",
        "keyphrase_sources": [
          {
            "id": "attacker:remote attackers",
            "keyphrase": "remote attackers",
            "type": "attacker"
          },
          {
            "id": "product:['Liferay Portal'",
            "keyphrase": "['Liferay Portal'",
            "type": "product"
          },
          {
            "id": "product:'Liferay DXP']",
            "keyphrase": "'Liferay DXP']",
            "type": "product"
          },
          {
            "id": "version:['7.0.0 through 7.4.3.101'",
            "keyphrase": "['7.0.0 through 7.4.3.101'",
            "type": "version"
          }
        ]
      },
      "similarity": 132.96609380382054
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-94",
      "CWE-79",
      "CWE-201",
      "CWE-352",
      "CWE-918"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "352": [
      {
        "id": "rootcause:does not sufficiently protect against Cross-Site Request Forgery (CSRF) attacks",
        "keyphrase": "does not sufficiently protect against Cross-Site Request Forgery (CSRF) attacks",
        "type": "rootcause"
      },
      {
        "id": "weakness:XSS vulnerability",
        "keyphrase": "XSS vulnerability",
        "type": "weakness"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "impact:execute arbitrary Groovy script",
        "keyphrase": "execute arbitrary Groovy script",
        "type": "impact"
      },
      {
        "id": "vector:crafted URL",
        "keyphrase": "crafted URL",
        "type": "vector"
      },
      {
        "id": "attacker:remote attackers",
        "keyphrase": "remote attackers",
        "type": "attacker"
      },
      {
        "id": "product:'Liferay DXP']",
        "keyphrase": "'Liferay DXP']",
        "type": "product"
      },
      {
        "id": "version:['7.0.0 through 7.4.3.101'",
        "keyphrase": "['7.0.0 through 7.4.3.101'",
        "type": "version"
      },
      {
        "id": "version:'2023.Q3.1 through 2023.Q3.4']",
        "keyphrase": "'2023.Q3.1 through 2023.Q3.4']",
        "type": "version"
      },
      {
        "id": "component:Script Console",
        "keyphrase": "Script Console",
        "type": "component"
      }
    ],
    "89": [
      {
        "id": "rootcause:does not sufficiently protect against Cross-Site Request Forgery (CSRF) attacks",
        "keyphrase": "does not sufficiently protect against Cross-Site Request Forgery (CSRF) attacks",
        "type": "rootcause"
      },
      {
        "id": "weakness:XSS vulnerability",
        "keyphrase": "XSS vulnerability",
        "type": "weakness"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "vector:crafted URL",
        "keyphrase": "crafted URL",
        "type": "vector"
      },
      {
        "id": "attacker:remote attackers",
        "keyphrase": "remote attackers",
        "type": "attacker"
      },
      {
        "id": "product:['Liferay Portal'",
        "keyphrase": "['Liferay Portal'",
        "type": "product"
      },
      {
        "id": "product:'Liferay DXP']",
        "keyphrase": "'Liferay DXP']",
        "type": "product"
      },
      {
        "id": "version:['7.0.0 through 7.4.3.101'",
        "keyphrase": "['7.0.0 through 7.4.3.101'",
        "type": "version"
      },
      {
        "id": "version:'2023.Q3.1 through 2023.Q3.4']",
        "keyphrase": "'2023.Q3.1 through 2023.Q3.4']",
        "type": "version"
      },
      {
        "id": "component:Script Console",
        "keyphrase": "Script Console",
        "type": "component"
      }
    ],
    "79": [
      {
        "id": "rootcause:does not sufficiently protect against Cross-Site Request Forgery (CSRF) attacks",
        "keyphrase": "does not sufficiently protect against Cross-Site Request Forgery (CSRF) attacks",
        "type": "rootcause"
      },
      {
        "id": "weakness:XSS vulnerability",
        "keyphrase": "XSS vulnerability",
        "type": "weakness"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "impact:execute arbitrary Groovy script",
        "keyphrase": "execute arbitrary Groovy script",
        "type": "impact"
      },
      {
        "id": "vector:crafted URL",
        "keyphrase": "crafted URL",
        "type": "vector"
      },
      {
        "id": "attacker:remote attackers",
        "keyphrase": "remote attackers",
        "type": "attacker"
      },
      {
        "id": "product:['Liferay Portal'",
        "keyphrase": "['Liferay Portal'",
        "type": "product"
      },
      {
        "id": "version:['7.0.0 through 7.4.3.101'",
        "keyphrase": "['7.0.0 through 7.4.3.101'",
        "type": "version"
      },
      {
        "id": "version:'2023.Q3.1 through 2023.Q3.4']",
        "keyphrase": "'2023.Q3.1 through 2023.Q3.4']",
        "type": "version"
      },
      {
        "id": "component:Script Console",
        "keyphrase": "Script Console",
        "type": "component"
      }
    ],
    "201": [
      {
        "id": "rootcause:does not sufficiently protect against Cross-Site Request Forgery (CSRF) attacks",
        "keyphrase": "does not sufficiently protect against Cross-Site Request Forgery (CSRF) attacks",
        "type": "rootcause"
      },
      {
        "id": "weakness:XSS vulnerability",
        "keyphrase": "XSS vulnerability",
        "type": "weakness"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "impact:execute arbitrary Groovy script",
        "keyphrase": "execute arbitrary Groovy script",
        "type": "impact"
      },
      {
        "id": "vector:crafted URL",
        "keyphrase": "crafted URL",
        "type": "vector"
      },
      {
        "id": "attacker:remote attackers",
        "keyphrase": "remote attackers",
        "type": "attacker"
      },
      {
        "id": "product:['Liferay Portal'",
        "keyphrase": "['Liferay Portal'",
        "type": "product"
      },
      {
        "id": "product:'Liferay DXP']",
        "keyphrase": "'Liferay DXP']",
        "type": "product"
      },
      {
        "id": "version:['7.0.0 through 7.4.3.101'",
        "keyphrase": "['7.0.0 through 7.4.3.101'",
        "type": "version"
      },
      {
        "id": "version:'2023.Q3.1 through 2023.Q3.4']",
        "keyphrase": "'2023.Q3.1 through 2023.Q3.4']",
        "type": "version"
      },
      {
        "id": "component:Script Console",
        "keyphrase": "Script Console",
        "type": "component"
      }
    ],
    "918": [
      {
        "id": "rootcause:does not sufficiently protect against Cross-Site Request Forgery (CSRF) attacks",
        "keyphrase": "does not sufficiently protect against Cross-Site Request Forgery (CSRF) attacks",
        "type": "rootcause"
      },
      {
        "id": "weakness:XSS vulnerability",
        "keyphrase": "XSS vulnerability",
        "type": "weakness"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "vector:crafted URL",
        "keyphrase": "crafted URL",
        "type": "vector"
      },
      {
        "id": "version:'2023.Q3.1 through 2023.Q3.4']",
        "keyphrase": "'2023.Q3.1 through 2023.Q3.4']",
        "type": "version"
      }
    ],
    "94": [
      {
        "id": "impact:execute arbitrary Groovy script",
        "keyphrase": "execute arbitrary Groovy script",
        "type": "impact"
      },
      {
        "id": "component:Script Console",
        "keyphrase": "Script Console",
        "type": "component"
      }
    ],
    "116": [
      {
        "id": "impact:execute arbitrary Groovy script",
        "keyphrase": "execute arbitrary Groovy script",
        "type": "impact"
      }
    ],
    "522": [
      {
        "id": "attacker:remote attackers",
        "keyphrase": "remote attackers",
        "type": "attacker"
      },
      {
        "id": "product:['Liferay Portal'",
        "keyphrase": "['Liferay Portal'",
        "type": "product"
      },
      {
        "id": "product:'Liferay DXP']",
        "keyphrase": "'Liferay DXP']",
        "type": "product"
      },
      {
        "id": "version:['7.0.0 through 7.4.3.101'",
        "keyphrase": "['7.0.0 through 7.4.3.101'",
        "type": "version"
      }
    ],
    "346": [
      {
        "id": "product:['Liferay Portal'",
        "keyphrase": "['Liferay Portal'",
        "type": "product"
      },
      {
        "id": "product:'Liferay DXP']",
        "keyphrase": "'Liferay DXP']",
        "type": "product"
      }
    ]
  }
}