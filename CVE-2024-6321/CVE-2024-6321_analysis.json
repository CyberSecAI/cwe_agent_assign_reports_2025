{
  "cve_id": "CVE-2024-6321",
  "description": "The ScrollTo Bottom plugin for WordPress is vulnerable to **Cross-Site Request Forgery** to **Arbitrary File Upload** in versions up to, and including, 1.1.1. This is due to **missing nonce validation and missing file type validation** in the options_page function. This makes it possible for unauthenticated attackers to upload arbitrary files on the affected sites server which may make remote code execution possible via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.",
  "key_phrases": {
    "rootcause": "missing nonce validation and missing file type validation",
    "weakness": [
      "Arbitrary File Upload",
      "Cross-Site Request Forgery"
    ],
    "impact": [
      "arbitrary file upload",
      "remote code execution"
    ],
    "vector": "forged request",
    "attacker": "unauthenticated attackers",
    "product": "ScrollTo Bottom plugin for WordPress",
    "version": "up to and including 1.1.1",
    "component": "options_page function"
  },
  "reference_content": "- **Root cause of vulnerability:** Missing nonce validation and missing file type validation in the 'options\\_page' function within the ScrollTo Bottom plugin for WordPress.\n- **Weaknesses/vulnerabilities present:** Cross-Site Request Forgery (CSRF) leading to Arbitrary File Upload.\n- **Impact of exploitation:** Unauthenticated attackers can upload arbitrary files on the affected site's server. This may allow for remote code execution if a malicious file is uploaded.\n- **Attack vectors:** Forged requests. The attacker needs to trick a site administrator into performing an action such as clicking on a link.\n- **Required attacker capabilities/position:** The attacker does not need any prior authentication. They need to trick a site administrator into interacting with a malicious link.",
  "similar_info": {
    "cwe_distribution": {
      "95": {
        "cwe_counts": {},
        "total_samples": 1,
        "distribution": [
          {
            "cwes": [],
            "frequency": 1,
            "proportion": 1.0
          }
        ]
      },
      "90": {
        "cwe_counts": {},
        "total_samples": 1,
        "distribution": [
          {
            "cwes": [],
            "frequency": 1,
            "proportion": 1.0
          }
        ]
      },
      "85": {
        "cwe_counts": {},
        "total_samples": 1,
        "distribution": [
          {
            "cwes": [],
            "frequency": 1,
            "proportion": 1.0
          }
        ]
      },
      "80": {
        "cwe_counts": {},
        "total_samples": 1,
        "distribution": [
          {
            "cwes": [],
            "frequency": 1,
            "proportion": 1.0
          }
        ]
      },
      "75": {
        "cwe_counts": {},
        "total_samples": 1,
        "distribution": [
          {
            "cwes": [],
            "frequency": 1,
            "proportion": 1.0
          }
        ]
      },
      "70": {
        "cwe_counts": {
          "CWE-352": 2
        },
        "total_samples": 9,
        "distribution": [
          {
            "cwes": [],
            "frequency": 7,
            "proportion": 0.778
          },
          {
            "cwes": [
              "CWE-352"
            ],
            "frequency": 2,
            "proportion": 0.222
          }
        ]
      }
    },
    "cwe_consensus": "CWE-352",
    "similarity_stats": {
      "thresholds": [
        95,
        90,
        85,
        80,
        75,
        70
      ],
      "total_samples_by_threshold": {
        "95": 1,
        "90": 1,
        "85": 1,
        "80": 1,
        "75": 1,
        "70": 9
      },
      "top_cwes_by_threshold": {
        "95": [],
        "90": [],
        "85": [],
        "80": [],
        "75": [],
        "70": [
          [
            "CWE-352",
            2
          ]
        ]
      }
    },
    "raw_matches": [
      {
        "similarity": 95,
        "cwes": [],
        "total": 1,
        "frequency": 1,
        "proportion": 1.0
      },
      {
        "similarity": 90,
        "cwes": [],
        "total": 1,
        "frequency": 1,
        "proportion": 1.0
      },
      {
        "similarity": 85,
        "cwes": [],
        "total": 1,
        "frequency": 1,
        "proportion": 1.0
      },
      {
        "similarity": 80,
        "cwes": [],
        "total": 1,
        "frequency": 1,
        "proportion": 1.0
      },
      {
        "similarity": 75,
        "cwes": [],
        "total": 1,
        "frequency": 1,
        "proportion": 1.0
      },
      {
        "similarity": 70,
        "cwes": [],
        "total": 9,
        "frequency": 7,
        "proportion": 0.778
      },
      {
        "similarity": 70,
        "cwes": [
          "352"
        ],
        "total": 9,
        "frequency": 2,
        "proportion": 0.222
      }
    ]
  },
  "similarity_summary": {
    "consensus_cwe": "CWE-352",
    "top_cwes": [
      [
        "CWE-352",
        2
      ]
    ],
    "confidence_levels": {
      "high": [],
      "medium": [],
      "low": []
    },
    "total_samples": 14
  },
  "analysis": "```markdown\n# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 0.9 | Compound | Primary | Allowed |\n| CWE-434 | Unrestricted Upload of File with Dangerous Type | 0.8 | Base | Secondary | Allowed |\n| CWE-862 | Missing Authorization | 0.7 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is **CWE-352: Cross-Site Request Forgery (CSRF)**, which allows an attacker to perform actions on behalf of a user without their consent. This leads to the secondary weakness of **CWE-434: Unrestricted Upload of File with Dangerous Type**, because the attacker can upload arbitrary files. Additionally, **CWE-862: Missing Authorization** contributes to the issue, as the application doesn't properly verify if the user has the authorization to perform the action.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe434[\"CWE-434: Unrestricted Upload of File with Dangerous Type\"]\n    cwe862[\"CWE-862: Missing Authorization\"]\n    \n    cwe352 -->|CANPRECEDE| cwe434\n    cwe862 -->|CANPRECEDE| cwe434\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe352 primary\n    class cwe434,cwe862 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **CWE-352: Cross-Site Request Forgery (CSRF)** due to the **missing nonce validation**. This allows an unauthenticated attacker to make a **forged request**. Because of **missing file type validation**, this leads to **CWE-434: Unrestricted Upload of File with Dangerous Type**, which enables the attacker to upload arbitrary files. This can lead to **remote code execution**. Finally, the **missing authorization** (**CWE-862**) makes it easier for unauthenticated attackers to perform actions they should not be able to.\n\n## Summary of Analysis\nThe initial assessment identified **CWE-352** as a strong candidate because the **Vulnerability Description** explicitly states \"**Cross-Site Request Forgery**\". The **missing nonce validation** directly supports this classification. Further analysis revealed that this leads to **CWE-434** due to the ability to upload arbitrary files, and **CWE-862** due to the lack of authorization checks.\n\nThe selection of **CWE-352** is based on the direct evidence of **Cross-Site Request Forgery** vulnerability and the **missing nonce validation**. The chain relationships show that **CWE-352** can lead to **CWE-434**. The inclusion of **CWE-862** is based on the **missing authorization**, as the product doesn't perform an authorization check.\n\nThe selected CWEs are at the optimal level of specificity because they accurately represent the weaknesses described in the vulnerability description. **CWE-352** is a Compound weakness that perfectly fits the CSRF nature of the vulnerability. **CWE-434** is a Base weakness that accurately describes the unrestricted file upload. **CWE-862** is a Base weakness that fits the missing authorization check.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n\n\n## CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\n**Abstraction Level**: Variant\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-184: Incomplete List of Disallowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-807: Reliance on Untrusted Inputs in a Security Decision\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 0.9 | Compound | Primary | Allowed |\n| CWE-434 | Unrestricted Upload of File with Dangerous Type | 0.8 | Base | Secondary | Allowed |\n| CWE-862 | Missing Authorization | 0.7 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is **CWE-352: Cross-Site Request Forgery (CSRF)**, which allows an attacker to perform actions on behalf of a user without their consent. This leads to the secondary weakness of **CWE-434: Unrestricted Upload of File with Dangerous Type**, because the attacker can upload arbitrary files. Additionally, **CWE-862: Missing Authorization** contributes to the issue, as the application doesn't properly verify if the user has the authorization to perform the action.mermaid\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe434[\"CWE-434: Unrestricted Upload of File with Dangerous Type\"]\n    cwe862[\"CWE-862: Missing Authorization\"]\n    \n    cwe352 -->|CANPRECEDE| cwe434\n    cwe862 -->|CANPRECEDE| cwe434\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe352 primary\n    class cwe434,cwe862 secondary\n\n```\n\n\n## Vulnerability Chain\nThe vulnerability chain starts with **CWE-352: Cross-Site Request Forgery (CSRF)** due to the **missing nonce validation**. This allows an unauthenticated attacker to make a **forged request**. Because of **missing file type validation**, this leads to **CWE-434: Unrestricted Upload of File with Dangerous Type**, which enables the attacker to upload arbitrary files. This can lead to **remote code execution**. Finally, the **missing authorization** (**CWE-862**) makes it easier for unauthenticated attackers to perform actions they should not be able to.\n\n## Summary of Analysis\nThe initial assessment identified **CWE-352** as a strong candidate because the **Vulnerability Description** explicitly states \"**Cross-Site Request Forgery**\". The **missing nonce validation** directly supports this classification. Further analysis revealed that this leads to **CWE-434** due to the ability to upload arbitrary files, and **CWE-862** due to the lack of authorization checks.\n\nThe selection of **CWE-352** is based on the direct evidence of **Cross-Site Request Forgery** vulnerability and the **missing nonce validation**. The chain relationships show that **CWE-352** can lead to **CWE-434**. The inclusion of **CWE-862** is based on the **missing authorization**, as the product doesn't perform an authorization check.\n\nThe selected CWEs are at the optimal level of specificity because they accurately represent the weaknesses described in the vulnerability description. **CWE-352** is a Compound weakness that perfectly fits the CSRF nature of the vulnerability. **CWE-434** is a Base weakness that accurately describes the unrestricted file upload. **CWE-862** is a Base weakness that fits the missing authorization check.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n\n\n## CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\n**Abstraction Level**: Variant\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 0.75\n**Source**: dense\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-184: Incomplete List of Disallowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-807: Reliance on Untrusted Inputs in a Security Decision\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n**Chain starting from CWE-862:**\n- 862 (Missing Authorization) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_sources": [
          {
            "id": "rootcause:missing nonce validation and missing file type validation",
            "keyphrase": "missing nonce validation and missing file type validation",
            "type": "rootcause"
          },
          {
            "id": "weakness:Arbitrary File Upload",
            "keyphrase": "Arbitrary File Upload",
            "type": "weakness"
          },
          {
            "id": "weakness:Cross-Site Request Forgery",
            "keyphrase": "Cross-Site Request Forgery",
            "type": "weakness"
          },
          {
            "id": "impact:arbitrary file upload",
            "keyphrase": "arbitrary file upload",
            "type": "impact"
          },
          {
            "id": "impact:remote code execution",
            "keyphrase": "remote code execution",
            "type": "impact"
          },
          {
            "id": "vector:forged request",
            "keyphrase": "forged request",
            "type": "vector"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:ScrollTo Bottom plugin for WordPress",
            "keyphrase": "ScrollTo Bottom plugin for WordPress",
            "type": "product"
          },
          {
            "id": "version:up to and including 1.1.1",
            "keyphrase": "up to and including 1.1.1",
            "type": "version"
          },
          {
            "id": "component:options_page function",
            "keyphrase": "options_page function",
            "type": "component"
          }
        ]
      },
      "similarity": 746.8223285570247
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse",
        "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
        "keyphrase_sources": [
          {
            "id": "rootcause:missing nonce validation and missing file type validation",
            "keyphrase": "missing nonce validation and missing file type validation",
            "type": "rootcause"
          },
          {
            "id": "impact:remote code execution",
            "keyphrase": "remote code execution",
            "type": "impact"
          },
          {
            "id": "vector:forged request",
            "keyphrase": "forged request",
            "type": "vector"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:ScrollTo Bottom plugin for WordPress",
            "keyphrase": "ScrollTo Bottom plugin for WordPress",
            "type": "product"
          },
          {
            "id": "version:up to and including 1.1.1",
            "keyphrase": "up to and including 1.1.1",
            "type": "version"
          },
          {
            "id": "component:options_page function",
            "keyphrase": "options_page function",
            "type": "component"
          }
        ]
      },
      "similarity": 614.3785055326588
    },
    {
      "metadata": {
        "doc_id": "138",
        "name": "Improper Neutralization of Special Elements",
        "source": "sparse",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.",
        "keyphrase_sources": [
          {
            "id": "rootcause:missing nonce validation and missing file type validation",
            "keyphrase": "missing nonce validation and missing file type validation",
            "type": "rootcause"
          },
          {
            "id": "weakness:Arbitrary File Upload",
            "keyphrase": "Arbitrary File Upload",
            "type": "weakness"
          },
          {
            "id": "weakness:Cross-Site Request Forgery",
            "keyphrase": "Cross-Site Request Forgery",
            "type": "weakness"
          },
          {
            "id": "impact:arbitrary file upload",
            "keyphrase": "arbitrary file upload",
            "type": "impact"
          },
          {
            "id": "impact:remote code execution",
            "keyphrase": "remote code execution",
            "type": "impact"
          },
          {
            "id": "vector:forged request",
            "keyphrase": "forged request",
            "type": "vector"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:ScrollTo Bottom plugin for WordPress",
            "keyphrase": "ScrollTo Bottom plugin for WordPress",
            "type": "product"
          },
          {
            "id": "version:up to and including 1.1.1",
            "keyphrase": "up to and including 1.1.1",
            "type": "version"
          },
          {
            "id": "component:options_page function",
            "keyphrase": "options_page function",
            "type": "component"
          }
        ]
      },
      "similarity": 599.9353090806081
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "keyphrase_sources": [
          {
            "id": "rootcause:missing nonce validation and missing file type validation",
            "keyphrase": "missing nonce validation and missing file type validation",
            "type": "rootcause"
          }
        ]
      },
      "similarity": 585.4198156413993
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse",
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "keyphrase_sources": [
          {
            "id": "rootcause:missing nonce validation and missing file type validation",
            "keyphrase": "missing nonce validation and missing file type validation",
            "type": "rootcause"
          },
          {
            "id": "weakness:Arbitrary File Upload",
            "keyphrase": "Arbitrary File Upload",
            "type": "weakness"
          },
          {
            "id": "weakness:Cross-Site Request Forgery",
            "keyphrase": "Cross-Site Request Forgery",
            "type": "weakness"
          },
          {
            "id": "impact:arbitrary file upload",
            "keyphrase": "arbitrary file upload",
            "type": "impact"
          },
          {
            "id": "impact:remote code execution",
            "keyphrase": "remote code execution",
            "type": "impact"
          },
          {
            "id": "vector:forged request",
            "keyphrase": "forged request",
            "type": "vector"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "version:up to and including 1.1.1",
            "keyphrase": "up to and including 1.1.1",
            "type": "version"
          },
          {
            "id": "component:options_page function",
            "keyphrase": "options_page function",
            "type": "component"
          }
        ]
      },
      "similarity": 571.7897388971945
    },
    {
      "metadata": {
        "doc_id": "918",
        "name": "Server-Side Request Forgery (SSRF)",
        "source": "sparse",
        "original_content": "The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.",
        "keyphrase_sources": [
          {
            "id": "weakness:Cross-Site Request Forgery",
            "keyphrase": "Cross-Site Request Forgery",
            "type": "weakness"
          }
        ]
      },
      "similarity": 543.6809509456479
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse",
        "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
        "keyphrase_sources": [
          {
            "id": "weakness:Arbitrary File Upload",
            "keyphrase": "Arbitrary File Upload",
            "type": "weakness"
          },
          {
            "id": "impact:arbitrary file upload",
            "keyphrase": "arbitrary file upload",
            "type": "impact"
          },
          {
            "id": "product:ScrollTo Bottom plugin for WordPress",
            "keyphrase": "ScrollTo Bottom plugin for WordPress",
            "type": "product"
          }
        ]
      },
      "similarity": 518.3086960071182
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "keyphrase_sources": [
          {
            "id": "weakness:Arbitrary File Upload",
            "keyphrase": "Arbitrary File Upload",
            "type": "weakness"
          },
          {
            "id": "weakness:Cross-Site Request Forgery",
            "keyphrase": "Cross-Site Request Forgery",
            "type": "weakness"
          },
          {
            "id": "impact:arbitrary file upload",
            "keyphrase": "arbitrary file upload",
            "type": "impact"
          },
          {
            "id": "impact:remote code execution",
            "keyphrase": "remote code execution",
            "type": "impact"
          },
          {
            "id": "vector:forged request",
            "keyphrase": "forged request",
            "type": "vector"
          },
          {
            "id": "attacker:unauthenticated attackers",
            "keyphrase": "unauthenticated attackers",
            "type": "attacker"
          },
          {
            "id": "product:ScrollTo Bottom plugin for WordPress",
            "keyphrase": "ScrollTo Bottom plugin for WordPress",
            "type": "product"
          },
          {
            "id": "version:up to and including 1.1.1",
            "keyphrase": "up to and including 1.1.1",
            "type": "version"
          },
          {
            "id": "component:options_page function",
            "keyphrase": "options_page function",
            "type": "component"
          }
        ]
      },
      "similarity": 508.0108268635882
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-116",
      "CWE-862",
      "CWE-80",
      "CWE-472",
      "CWE-352",
      "CWE-74",
      "CWE-138",
      "CWE-184",
      "CWE-807",
      "CWE-425",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "352": [
      {
        "id": "rootcause:missing nonce validation and missing file type validation",
        "keyphrase": "missing nonce validation and missing file type validation",
        "type": "rootcause"
      },
      {
        "id": "weakness:Arbitrary File Upload",
        "keyphrase": "Arbitrary File Upload",
        "type": "weakness"
      },
      {
        "id": "weakness:Cross-Site Request Forgery",
        "keyphrase": "Cross-Site Request Forgery",
        "type": "weakness"
      },
      {
        "id": "impact:arbitrary file upload",
        "keyphrase": "arbitrary file upload",
        "type": "impact"
      },
      {
        "id": "impact:remote code execution",
        "keyphrase": "remote code execution",
        "type": "impact"
      },
      {
        "id": "vector:forged request",
        "keyphrase": "forged request",
        "type": "vector"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:ScrollTo Bottom plugin for WordPress",
        "keyphrase": "ScrollTo Bottom plugin for WordPress",
        "type": "product"
      },
      {
        "id": "version:up to and including 1.1.1",
        "keyphrase": "up to and including 1.1.1",
        "type": "version"
      },
      {
        "id": "component:options_page function",
        "keyphrase": "options_page function",
        "type": "component"
      }
    ],
    "862": [
      {
        "id": "rootcause:missing nonce validation and missing file type validation",
        "keyphrase": "missing nonce validation and missing file type validation",
        "type": "rootcause"
      },
      {
        "id": "impact:remote code execution",
        "keyphrase": "remote code execution",
        "type": "impact"
      },
      {
        "id": "vector:forged request",
        "keyphrase": "forged request",
        "type": "vector"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:ScrollTo Bottom plugin for WordPress",
        "keyphrase": "ScrollTo Bottom plugin for WordPress",
        "type": "product"
      },
      {
        "id": "version:up to and including 1.1.1",
        "keyphrase": "up to and including 1.1.1",
        "type": "version"
      },
      {
        "id": "component:options_page function",
        "keyphrase": "options_page function",
        "type": "component"
      }
    ],
    "138": [
      {
        "id": "rootcause:missing nonce validation and missing file type validation",
        "keyphrase": "missing nonce validation and missing file type validation",
        "type": "rootcause"
      },
      {
        "id": "weakness:Arbitrary File Upload",
        "keyphrase": "Arbitrary File Upload",
        "type": "weakness"
      },
      {
        "id": "weakness:Cross-Site Request Forgery",
        "keyphrase": "Cross-Site Request Forgery",
        "type": "weakness"
      },
      {
        "id": "impact:arbitrary file upload",
        "keyphrase": "arbitrary file upload",
        "type": "impact"
      },
      {
        "id": "impact:remote code execution",
        "keyphrase": "remote code execution",
        "type": "impact"
      },
      {
        "id": "vector:forged request",
        "keyphrase": "forged request",
        "type": "vector"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:ScrollTo Bottom plugin for WordPress",
        "keyphrase": "ScrollTo Bottom plugin for WordPress",
        "type": "product"
      },
      {
        "id": "version:up to and including 1.1.1",
        "keyphrase": "up to and including 1.1.1",
        "type": "version"
      },
      {
        "id": "component:options_page function",
        "keyphrase": "options_page function",
        "type": "component"
      }
    ],
    "116": [
      {
        "id": "rootcause:missing nonce validation and missing file type validation",
        "keyphrase": "missing nonce validation and missing file type validation",
        "type": "rootcause"
      }
    ],
    "79": [
      {
        "id": "rootcause:missing nonce validation and missing file type validation",
        "keyphrase": "missing nonce validation and missing file type validation",
        "type": "rootcause"
      },
      {
        "id": "weakness:Arbitrary File Upload",
        "keyphrase": "Arbitrary File Upload",
        "type": "weakness"
      },
      {
        "id": "weakness:Cross-Site Request Forgery",
        "keyphrase": "Cross-Site Request Forgery",
        "type": "weakness"
      },
      {
        "id": "impact:arbitrary file upload",
        "keyphrase": "arbitrary file upload",
        "type": "impact"
      },
      {
        "id": "impact:remote code execution",
        "keyphrase": "remote code execution",
        "type": "impact"
      },
      {
        "id": "vector:forged request",
        "keyphrase": "forged request",
        "type": "vector"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "version:up to and including 1.1.1",
        "keyphrase": "up to and including 1.1.1",
        "type": "version"
      },
      {
        "id": "component:options_page function",
        "keyphrase": "options_page function",
        "type": "component"
      }
    ],
    "434": [
      {
        "id": "weakness:Arbitrary File Upload",
        "keyphrase": "Arbitrary File Upload",
        "type": "weakness"
      },
      {
        "id": "impact:arbitrary file upload",
        "keyphrase": "arbitrary file upload",
        "type": "impact"
      },
      {
        "id": "product:ScrollTo Bottom plugin for WordPress",
        "keyphrase": "ScrollTo Bottom plugin for WordPress",
        "type": "product"
      }
    ],
    "89": [
      {
        "id": "weakness:Arbitrary File Upload",
        "keyphrase": "Arbitrary File Upload",
        "type": "weakness"
      },
      {
        "id": "weakness:Cross-Site Request Forgery",
        "keyphrase": "Cross-Site Request Forgery",
        "type": "weakness"
      },
      {
        "id": "impact:arbitrary file upload",
        "keyphrase": "arbitrary file upload",
        "type": "impact"
      },
      {
        "id": "impact:remote code execution",
        "keyphrase": "remote code execution",
        "type": "impact"
      },
      {
        "id": "vector:forged request",
        "keyphrase": "forged request",
        "type": "vector"
      },
      {
        "id": "attacker:unauthenticated attackers",
        "keyphrase": "unauthenticated attackers",
        "type": "attacker"
      },
      {
        "id": "product:ScrollTo Bottom plugin for WordPress",
        "keyphrase": "ScrollTo Bottom plugin for WordPress",
        "type": "product"
      },
      {
        "id": "version:up to and including 1.1.1",
        "keyphrase": "up to and including 1.1.1",
        "type": "version"
      },
      {
        "id": "component:options_page function",
        "keyphrase": "options_page function",
        "type": "component"
      }
    ],
    "918": [
      {
        "id": "weakness:Cross-Site Request Forgery",
        "keyphrase": "Cross-Site Request Forgery",
        "type": "weakness"
      }
    ]
  }
}