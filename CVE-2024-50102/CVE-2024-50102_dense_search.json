{
  "retriever": "dense",
  "query": "In the Linux kernel, the following vulnerability has been resolved x86 fix user address masking non-canonical speculation issue It turns out that AMD has a Meltdown Lite(tm) issue with non-canonical accesses in kernel space. And so using just the high bit to decide whether an access is in user space or kernel space ends up with the good old leak speculative data if you have the right gadget using the result CVE-2020-12965 Transient Execution of Non-Canonical Accesses Now, the kernel surrounds the access with a STAC/CLAC pair, and those instructions end up serializing execution on older Zen architectures, which closes the speculation window. But that was true only up until Zen 5, which renames the AC bit [1]. That improves performance of STAC/CLAC a lot, but also means that the speculation window is now open. Note that this affects not just the new address masking, but also the regular valid_user_address() check used by access_ok(), and the asm version of the sign bit check in the get_user() helpers. It does not affect put_user() or clear_user() variants, since theres no speculative result to be used in a gadget for those operations.",
  "keyphrases": {
    "rootcause": [
      "non-canonical speculation issue"
    ],
    "weakness": [
      "speculative execution"
    ]
  },
  "timestamp": "2025-07-12 05:27:49",
  "cve_id": "CVE-2024-50102",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "1342",
      "name": "Information Exposure through Microarchitectural State after Transient Execution",
      "type": "Base",
      "score": 0.6794478598008955
    },
    {
      "cwe_id": "1421",
      "name": "Exposure of Sensitive Information in Shared Microarchitectural Structures during Transient Execution",
      "type": "Base",
      "score": 0.6302097372032118
    },
    {
      "cwe_id": "1256",
      "name": "Improper Restriction of Software Interfaces to Hardware Features",
      "type": "Base",
      "score": 0.5974815839606635
    },
    {
      "cwe_id": "1423",
      "name": "Exposure of Sensitive Information caused by Shared Microarchitectural Predictor State that Influences Transient Execution",
      "type": "Base",
      "score": 0.5931278569101757
    },
    {
      "cwe_id": "1037",
      "name": "Processor Optimization Removal or Modification of Security-critical Code",
      "type": "Base",
      "score": 0.5893574804946204
    },
    {
      "cwe_id": "1260",
      "name": "Improper Handling of Overlap Between Protected Memory Ranges",
      "type": "Base",
      "score": 0.578405231620619
    },
    {
      "cwe_id": "1264",
      "name": "Hardware Logic with Insecure De-Synchronization between Control and Data Channels",
      "type": "Base",
      "score": 0.5779841759467431
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "type": "Base",
      "score": 0.5713873885471781
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "type": "Class",
      "score": 0.5661570650771783
    },
    {
      "cwe_id": "1252",
      "name": "CPU Hardware Not Configured to Support Exclusivity of Write and Execute Operations",
      "type": "Base",
      "score": 0.5588059208250511
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "type": "Class",
      "score": 0.5565605831548308
    },
    {
      "cwe_id": "1422",
      "name": "Exposure of Sensitive Information caused by Incorrect Data Forwarding during Transient Execution",
      "type": "Base",
      "score": 0.541585338700473
    },
    {
      "cwe_id": "1420",
      "name": "Exposure of Sensitive Information during Transient Execution",
      "type": "Base",
      "score": 0.5407335337234077
    },
    {
      "cwe_id": "1316",
      "name": "Fabric-Address Map Allows Programming of Unwarranted Overlaps of Protected and Unprotected Ranges",
      "type": "Base",
      "score": 0.5390961968049268
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "type": "Class",
      "score": 0.5387642908584438
    },
    {
      "cwe_id": "823",
      "name": "Use of Out-of-range Pointer Offset",
      "type": "Base",
      "score": 0.5383442583567333
    },
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "type": "Base",
      "score": 0.5381988787385915
    },
    {
      "cwe_id": "1262",
      "name": "Improper Access Control for Register Interface",
      "type": "Base",
      "score": 0.5381277058505913
    },
    {
      "cwe_id": "1281",
      "name": "Sequence of Processor Instructions Leads to Unexpected Behavior",
      "type": "Base",
      "score": 0.537349529178749
    },
    {
      "cwe_id": "1233",
      "name": "Security-Sensitive Hardware Controls with Missing Lock Bit Protection",
      "type": "Base",
      "score": 0.5359253207283252
    }
  ]
}