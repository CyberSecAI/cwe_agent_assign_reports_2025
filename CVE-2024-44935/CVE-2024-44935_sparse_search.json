{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved sctp Fix null-ptr-deref in reuseport_add_sock(). syzbot reported a null-ptr-deref while accessing sk2->sk_reuseport_cb in reuseport_add_sock(). [0] The repro first creates a listener with SO_REUSEPORT. Then, it creates another listener on the same port and concurrently closes the first listener. The second listen() calls reuseport_add_sock() with the first listener as sk2, where sk2->sk_reuseport_cb is not expected to be cleared concurrently, but the close() does clear it by reuseport_detach_sock(). The problem is SCTP does not properly synchronise reuseport_alloc(), reuseport_add_sock(), and reuseport_detach_sock(). The caller of reuseport_alloc() and reuseport_{add,detach}_sock() must provide synchronisation for sockets that are classified into the same reuseport group. Otherwise, such sockets form multiple identical reuseport groups, and all groups except one would be silently dead. 1. Two sockets call listen() concurrently 2. No socket in the same group found in sctp_ep_hashtable[] 3. Two sockets call reuseport_alloc() and form two reuseport groups 4. Only one group hit first in __sctp_rcv_lookup_endpoint() receives incoming packets Also, the reported null-ptr-deref could occur. TCP/UDP guarantees that would not happen by holding the hash bucket lock. Lets apply the locking strategy to __sctp_hash_endpoint() and __sctp_unhash_endpoint(). [0] Oops general protection fault, pr",
  "keyphrases": {
    "rootcause": [
      "improper synchronisation"
    ],
    "weakness": [
      "null-ptr-deref"
    ]
  },
  "timestamp": "2025-07-12 04:17:33",
  "cve_id": "CVE-2024-44935",
  "result_count": 11,
  "results": [
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "score": 817.1274057086198,
      "search_source": "rootcause:improper synchronisation"
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "score": 806.7370801772286,
      "search_source": "rootcause:improper synchronisation"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 768.8902319194624,
      "search_source": "rootcause:improper synchronisation"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "score": 767.599459923016,
      "search_source": "rootcause:improper synchronisation"
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "score": 761.2736583639861,
      "search_source": "rootcause:improper synchronisation"
    },
    {
      "cwe_id": "1390",
      "name": "Weak Authentication",
      "score": 756.1561857568304,
      "search_source": "rootcause:improper synchronisation"
    },
    {
      "cwe_id": "287",
      "name": "Improper Authentication",
      "score": 745.7945124125451,
      "search_source": "rootcause:improper synchronisation"
    },
    {
      "cwe_id": "923",
      "name": "Improper Restriction of Communication Channel to Intended Endpoints",
      "score": 745.0528379464477,
      "search_source": "rootcause:improper synchronisation"
    },
    {
      "cwe_id": "347",
      "name": "Improper Verification of Cryptographic Signature",
      "score": 744.3335270743518,
      "search_source": "rootcause:improper synchronisation"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 744.1209117419835,
      "search_source": "rootcause:improper synchronisation"
    },
    {
      "cwe_id": "131",
      "name": "Incorrect Calculation of Buffer Size",
      "score": 694.6988440797195,
      "search_source": "weakness:null-ptr-deref"
    }
  ]
}