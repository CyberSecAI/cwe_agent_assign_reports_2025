{
  "cve_id": "CVE-2025-31284",
  "description": "A **broken access control vulnerability** previously discovered in the Trend Vision One Status component could have allowed an administrator to create users who could then change the role of the account and ultimately escalate privileges. Please note ths issue has already been addressed on the backend service and is no longer considered an active vulnerability.",
  "key_phrases": {
    "component": "",
    "rootcause": "broken access control vulnerability",
    "vector": "",
    "weakness": "",
    "product": "Trend Vision One Status component",
    "impact": "create users who could then change the role of the account, escalate privileges",
    "attacker": "administrator",
    "version": ""
  },
  "reference_content": "The content is directly related to CVE-2025-31284. Here's the extracted information:\n\n**Root cause of vulnerability:** Improper Privilege Management (CWE-269) leading to broken access control.\n\n**Weaknesses/vulnerabilities present:** Broken Access Control (CVE-2025-31282, CVE-2025-31283, CVE-2025-31284, CVE-2025-31285) and HTML Injection (CVE-2025-31286).\n\n**Impact of exploitation:**\n*   **Broken Access Control:** An administrator could create users who could then change their account role and escalate privileges.\n*   **HTML Injection:** A malicious user could potentially execute arbitrary code.\n\n**Attack vectors:** Not explicitly detailed, but involves exploiting flaws in access control mechanisms and potential injection points.\n\n**Required attacker capabilities/position:** Low privilege user for HTML injection, administrator for creating users in the broken access control scenario.\n\n**Mitigation or fix:** The issues have been addressed on Trend Micro\u2019s backend service. No action is required from customers.\n\n**Additional Details (more than official CVE description):** The bulletin explicitly states this is an informational bulletin, meaning the vulnerabilities are historical and have already been patched. It also acknowledges the researcher who responsibly disclosed the issues (Vaibhav Kumar Srivastava of eSec Forte Technologies Pvt. Ltd). The CVSSv3 base score for all vulnerabilities is 4.6.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-863 | Incorrect Authorization | 1 | Class | Primary | Allowed-with-Review |\n| CWE-266 | Incorrect Privilege Assignment | 0.8 | Base | Secondary | Allowed |\n| CWE-269 | Improper Privilege Management | 0.6 | Class | Secondary | Discouraged |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-863 (Incorrect Authorization), which is a Class-level CWE. Several other CWEs were considered, including CWE-266 (Incorrect Privilege Assignment) and CWE-269 (Improper Privilege Management). CWE-266 is a Base-level CWE and a more specific potential root cause than the class CWE-863. CWE-269 is a Class level CWE. The relationships between these CWEs are not explicitly defined in terms of direct parent-child relationships, but they all relate to access control and privilege management. The selection of CWE-863 as the primary CWE is based on the evidence indicating an authorization check was in place but incorrectly implemented, allowing privilege escalation. While CWE-266 could be a root cause, there isn't explicit mention of role misconfiguration, so it is a secondary mapping. Similarly, CWE-269 is a higher-level class and is too general.\n\n```mermaid\ngraph TD\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe266[\"CWE-266: Incorrect Privilege Assignment\"]\n    cwe269[\"CWE-269: Improper Privilege Management\"]\n    \n    cwe863 -->|PEEROF| cwe266\n    cwe863 -->|PEEROF| cwe269\n    cwe269 -->|PARENT OF| cwe266\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe863 primary\n    class cwe266,cwe269 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **Incorrect Authorization (CWE-863)**, which allows an administrator to create users with the ability to change their account role and escalate privileges. This leads to the impact of privilege escalation.\n  - **Root Cause**: CWE-863 - Incorrect Authorization\n  - **Weakness**: Broken Access Control\n  - **Impact**: Privilege Escalation\n\n## Summary of Analysis\nThe initial assessment identified **broken access control** as the key phrase, leading to consideration of CWEs related to authorization and privilege management. The retriever results and the guidance on Authentication vs Authorization vs Access Control and Privileges vs Permissions were crucial in refining the selection.\n\nThe final decision to prioritize CWE-863 is based on the vulnerability description stating that an administrator could create users who could then change the role of the account and escalate privileges. This implies that an authorization check was present but flawed, aligning with the definition of CWE-863.\n\nThe selection of CWE-863 is at the optimal level of specificity because it accurately captures the essence of the vulnerability, where the authorization mechanism is present but implemented incorrectly. While CWE-266 (Incorrect Privilege Assignment) is a possibility, there isn't enough evidence to confirm that the roles were initially misconfigured, so it is marked as secondary.\n\nRelevant CWE Information:\n- Vulnerability Description Key Phrases:\n  - **rootcause:** **broken access control vulnerability**\n  - **impact:** create users who could then change the role of the account, escalate privileges\n  - **attacker:** administrator\n\n- CVE Reference Links Content Summary:\n  - **Root cause of vulnerability:** Improper Privilege Management (CWE-269) leading to broken access control.\n  - **Broken Access Control:** An administrator could create users who could then change their account role and escalate privileges.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-863 | Incorrect Authorization | 1 | Class | Primary | Allowed-with-Review |\n| CWE-266 | Incorrect Privilege Assignment | 0.8 | Base | Secondary | Allowed |\n| CWE-269 | Improper Privilege Management | 0.6 | Class | Secondary | Discouraged |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-863 (Incorrect Authorization), which is a Class-level CWE. Several other CWEs were considered, including CWE-266 (Incorrect Privilege Assignment) and CWE-269 (Improper Privilege Management). CWE-266 is a Base-level CWE and a more specific potential root cause than the class CWE-863. CWE-269 is a Class level CWE. The relationships between these CWEs are not explicitly defined in terms of direct parent-child relationships, but they all relate to access control and privilege management. The selection of CWE-863 as the primary CWE is based on the evidence indicating an authorization check was in place but incorrectly implemented, allowing privilege escalation. While CWE-266 could be a root cause, there isn't explicit mention of role misconfiguration, so it is a secondary mapping. Similarly, CWE-269 is a higher-level class and is too general.\n\n```mermaid\ngraph TD\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe266[\"CWE-266: Incorrect Privilege Assignment\"]\n    cwe269[\"CWE-269: Improper Privilege Management\"]\n    \n    cwe863 -->|PEEROF| cwe266\n    cwe863 -->|PEEROF| cwe269\n    cwe269 -->|PARENT OF| cwe266\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe863 primary\n    class cwe266,cwe269 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **Incorrect Authorization (CWE-863)**, which allows an administrator to create users with the ability to change their account role and escalate privileges. This leads to the impact of privilege escalation.\n  - **Root Cause**: CWE-863 - Incorrect Authorization\n  - **Weakness**: Broken Access Control\n  - **Impact**: Privilege Escalation\n\n## Summary of Analysis\nThe initial assessment identified **broken access control** as the key phrase, leading to consideration of CWEs related to authorization and privilege management. The retriever results and the guidance on Authentication vs Authorization vs Access Control and Privileges vs Permissions were crucial in refining the selection.\n\nThe final decision to prioritize CWE-863 is based on the vulnerability description stating that an administrator could create users who could then change the role of the account and escalate privileges. This implies that an authorization check was present but flawed, aligning with the definition of CWE-863.\n\nThe selection of CWE-863 is at the optimal level of specificity because it accurately captures the essence of the vulnerability, where the authorization mechanism is present but implemented incorrectly. While CWE-266 (Incorrect Privilege Assignment) is a possibility, there isn't enough evidence to confirm that the roles were initially misconfigured, so it is marked as secondary.\n\nRelevant CWE Information:\n- Vulnerability Description Key Phrases:\n  - **rootcause:** **broken access control vulnerability**\n  - **impact:** create users who could then change the role of the account, escalate privileges\n  - **attacker:** administrator\n\n- CVE Reference Links Content Summary:\n  - **Root cause of vulnerability:** Improper Privilege Management (CWE-269) leading to broken access control.\n  - **Broken Access Control:** An administrator could create users who could then change their account role and escalate privileges.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-269:**\n- 269 (Improper Privilege Management) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "284",
        "name": "Improper Access Control",
        "source": "sparse"
      },
      "similarity": 317.8943461262267
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 313.97818429601864
    },
    {
      "metadata": {
        "doc_id": "732",
        "name": "Incorrect Permission Assignment for Critical Resource",
        "source": "sparse"
      },
      "similarity": 301.6950278899627
    },
    {
      "metadata": {
        "doc_id": "250",
        "name": "Execution with Unnecessary Privileges",
        "source": "sparse"
      },
      "similarity": 294.7750430670912
    },
    {
      "metadata": {
        "doc_id": "287",
        "name": "Improper Authentication",
        "source": "sparse"
      },
      "similarity": 294.3630808124359
    },
    {
      "metadata": {
        "doc_id": "639",
        "name": "Authorization Bypass Through User-Controlled Key",
        "source": "sparse"
      },
      "similarity": 293.6172645006702
    },
    {
      "metadata": {
        "doc_id": "1390",
        "name": "Weak Authentication",
        "source": "sparse"
      },
      "similarity": 291.69531832664194
    },
    {
      "metadata": {
        "doc_id": "267",
        "name": "Privilege Defined With Unsafe Actions",
        "source": "sparse"
      },
      "similarity": 289.79671804283544
    },
    {
      "metadata": {
        "doc_id": "269",
        "name": "Improper Privilege Management",
        "type": "Class",
        "original_content": "The product does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor.",
        "keyphrase_source": "rootcause:broken access control vulnerability",
        "source": "dense",
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-269 is commonly misused. It can be conflated with \"privilege escalation,\" which is a technical impact that is listed in many low-information vulnerability reports [REF-1287]. It is not useful for trend analysis.",
          "comments": "If an error or mistake allows privilege escalation, then use the CWE ID for that mistake. Avoid using CWE-269 when only phrases such as \"privilege escalation\" or \"gain privileges\" are available, as these indicate technical impact of the vulnerability - not the root cause weakness. If the root cause seems to be directly related to privileges, then examine the children of CWE-269 for additional hints, such as Execution with Unnecessary Privileges (CWE-250) or Incorrect Privilege Assignment (CWE-266).",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5463234899211744,
            "sparse": 284.30257070548316
          }
        }
      },
      "similarity": 0.5463234899211744
    },
    {
      "doc_id": "613",
      "text": "CWE-613: Insufficient Session Expiration",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "613",
        "name": "Insufficient Session Expiration",
        "type": "base",
        "original_content": "CWE-613: Insufficient Session Expiration",
        "relationships": [
          {
            "source_id": "613",
            "target_id": "352",
            "label": "REQUIREDBY",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "613",
            "target_id": "287",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "613",
            "target_id": "672",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "613",
            "target_id": "672",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "672",
            "target_id": "613",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "352",
            "target_id": "613",
            "label": "REQUIRES",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "287",
            "target_id": "613",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "287",
                  "613",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "287"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "287",
                  "613",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "287"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "613",
                  "287",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "287"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-269",
      "CWE-266"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}