{
  "retriever": "graph",
  "query": "vLLM is a high-throughput and memory-efficient inference and serving engine for LLMs. Maliciously constructed statements can lead to hash collisions, resulting in cache reuse, which can interfere with subsequent responses and cause unintended behavior. Prefix caching makes use of Pythons built-in hash() function. As of Python 3.12, the behavior of hash(None) has changed to be a predictable constant value. This makes it more feasible that someone could try exploit hash collisions. The impact of a collision would be using cache that was generated using different content. Given knowledge of prompts in use and predictable hashing behavior, someone could intentionally populate the cache using a prompt known to collide with another prompt in use. This issue has been addressed in version 0.7.2 and all users are advised to upgrade. There are no known workarounds for this vulnerability. Consider specifically these CWEs: CWE-328 CWE-836 CWE-760 CWE-330 CWE-502 CWE-407 CWE-759 CWE-1427 CWE-916",
  "keyphrases": {
    "original_query": "vLLM is a high-throughput and memory-efficient inference and serving engine for LLMs. Maliciously constructed statements can lead to hash collisions, resulting in cache reuse, which can interfere with subsequent responses and cause unintended behavior. Prefix caching makes use of Pythons built-in hash() function. As of Python 3.12, the behavior of hash(None) has changed to be a predictable constant value. This makes it more feasible that someone could try exploit hash collisions. The impact of a collision would be using cache that was generated using different content. Given knowledge of prompts in use and predictable hashing behavior, someone could intentionally populate the cache using a prompt known to collide with another prompt in use. This issue has been addressed in version 0.7.2 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
    "enhanced_query": "vLLM is a high-throughput and memory-efficient inference and serving engine for LLMs. Maliciously constructed statements can lead to hash collisions, resulting in cache reuse, which can interfere with subsequent responses and cause unintended behavior. Prefix caching makes use of Pythons built-in hash() function. As of Python 3.12, the behavior of hash(None) has changed to be a predictable constant value. This makes it more feasible that someone could try exploit hash collisions. The impact of a collision would be using cache that was generated using different content. Given knowledge of prompts in use and predictable hashing behavior, someone could intentionally populate the cache using a prompt known to collide with another prompt in use. This issue has been addressed in version 0.7.2 and all users are advised to upgrade. There are no known workarounds for this vulnerability. Consider specifically these CWEs: CWE-328 CWE-836 CWE-760 CWE-330 CWE-502 CWE-407 CWE-759 CWE-1427 CWE-916",
    "cwe_mentions": [
      "CWE-328",
      "CWE-836",
      "CWE-760",
      "CWE-330",
      "CWE-502",
      "CWE-407",
      "CWE-759",
      "CWE-1427",
      "CWE-916"
    ],
    "search_time": 3.606045961380005
  },
  "timestamp": "2025-07-12 10:57:52",
  "cve_id": "CVE-2025-25183",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "804",
      "name": "Guessable CAPTCHA",
      "type": "base",
      "score": 2.2100000000000004,
      "relationship_count": 0
    },
    {
      "cwe_id": "502",
      "name": "Deserialization of Untrusted Data",
      "type": "base",
      "score": 2.1189999999999998,
      "relationship_count": 0
    },
    {
      "cwe_id": "328",
      "name": "Use of Weak Hash",
      "type": "Base",
      "score": 1.6693580566674155,
      "relationship_count": 0
    },
    {
      "cwe_id": "916",
      "name": "Use of Password Hash With Insufficient Computational Effort",
      "type": "Base",
      "score": 1.654763517771797,
      "relationship_count": 0
    },
    {
      "cwe_id": "915",
      "name": "Improperly Controlled Modification of Dynamically-Determined Object Attributes",
      "type": "base",
      "score": 1.521,
      "relationship_count": 0
    },
    {
      "cwe_id": "1427",
      "name": "Improper Neutralization of Input Used for LLM Prompting",
      "type": "Base",
      "score": 1.5110932117773856,
      "relationship_count": 0
    },
    {
      "cwe_id": "759",
      "name": "Use of a One-Way Hash without a Salt",
      "type": "Variant",
      "score": 1.4965954423667678,
      "relationship_count": 0
    },
    {
      "cwe_id": "760",
      "name": "Use of a One-Way Hash with a Predictable Salt",
      "type": "Variant",
      "score": 1.4954814008127104,
      "relationship_count": 0
    },
    {
      "cwe_id": "836",
      "name": "Use of Password Hash Instead of Password for Authentication",
      "type": "Base",
      "score": 1.4616971229138103,
      "relationship_count": 0
    },
    {
      "cwe_id": "290",
      "name": "Authentication Bypass by Spoofing",
      "type": "base",
      "score": 1.1466,
      "relationship_count": 0
    },
    {
      "cwe_id": "330",
      "name": "Use of Insufficiently Random Values",
      "type": "Class",
      "score": 1.1321379311660886,
      "relationship_count": 0
    },
    {
      "cwe_id": "344",
      "name": "Use of Invariant Value in Dynamically Changing Context",
      "type": "base",
      "score": 1.0062,
      "relationship_count": 0
    },
    {
      "cwe_id": "338",
      "name": "Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)",
      "type": "base",
      "score": 1.0062,
      "relationship_count": 0
    },
    {
      "cwe_id": "331",
      "name": "Insufficient Entropy",
      "type": "base",
      "score": 1.0062,
      "relationship_count": 0
    },
    {
      "cwe_id": "1241",
      "name": "Use of Predictable Algorithm in Random Number Generator",
      "type": "base",
      "score": 1.0062,
      "relationship_count": 0
    },
    {
      "cwe_id": "1333",
      "name": "Inefficient Regular Expression Complexity",
      "type": "base",
      "score": 1.0062,
      "relationship_count": 0
    },
    {
      "cwe_id": "208",
      "name": "Observable Timing Discrepancy",
      "type": "base",
      "score": 0.9360000000000002,
      "relationship_count": 0
    },
    {
      "cwe_id": "602",
      "name": "Client-Side Enforcement of Server-Side Security",
      "type": "class",
      "score": 0.9359999999999999,
      "relationship_count": 0
    },
    {
      "cwe_id": "407",
      "name": "Inefficient Algorithmic Complexity",
      "type": "Class",
      "score": 0.8895305955996251,
      "relationship_count": 0
    },
    {
      "cwe_id": "798",
      "name": "Use of Hard-coded Credentials",
      "type": "base",
      "score": 0.8049600000000001,
      "relationship_count": 0
    }
  ]
}