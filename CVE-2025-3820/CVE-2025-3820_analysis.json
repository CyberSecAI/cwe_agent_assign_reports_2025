{
  "cve_id": "CVE-2025-3820",
  "description": "A vulnerability was found in Tenda W12 and i24 3.0.0.4(2887)/3.0.0.5(3644) and classified as critical. Affected by this issue is the function cgiSysUplinkCheckSet of the file /bin/httpd. The manipulation of the argument hostIp1/hostIp2 leads to **stack-based buffer overflow**. The attack may be launched remotely. The exploit has been disclosed to the public and may be used.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "stack-based buffer overflow",
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": "Tenda W12 and i24",
    "version": "3.0.0.4(2887)/3.0.0.5(3644)",
    "component": "/bin/httpd"
  },
  "reference_content": "## Analysis of CVE-2025-3820 Content\n\nBased on the provided content, here's an analysis related to the potential CVE:\n\n**1. Relevance Verification:**\n\nThe content discusses a stack overflow vulnerability in the `cgiSysUplinkCheckSet` function of Tenda routers, specifically models w12 and i24 with the mentioned firmware versions. This directly relates to a potential security issue in Tenda devices, which could be the subject of a CVE.\n\n**2. Extracted Information:**\n\n*   **Root cause of vulnerability:** The vulnerability stems from a lack of length limitation on the `hostIp1` and `hostIp2` parameters within the `cgiSysUplinkCheckSet` function.\n*   **Weaknesses/vulnerabilities present:** Stack overflow vulnerability.\n*   **Impact of exploitation:** The stack overflow allows modification of the `$RA` register, potentially leading to Remote Code Execution (RCE).\n*   **Attack vectors:** The vulnerability can be exploited by sending a crafted HTTP POST request to the `/goform/modules` endpoint with oversized `hostIp1` and `hostIp2` parameters in the `sysUplinkCheckSet` JSON payload.\n*   **Required attacker capabilities/position:** An attacker needs network access to the vulnerable Tenda router. They need to be able to send HTTP POST requests to the device.\n*   **Mitigation or fix:** The content does not provide a specific fix, but implies that proper input validation and length checking of the `hostIp1` and `hostIp2` parameters would mitigate the vulnerability.\n*   **Affected Firmware:** w12 V3.0.0.5(3644), i24 V3.0.0.4(2887)\n\n**3. Additional Details:**\n\nThe content includes a Python exploit script demonstrating how to trigger the vulnerability. The script sends a POST request with a crafted JSON payload containing oversized `hostIp1` and `hostIp2` values.\n\n**4. More Detail than Official CVE Description:**\n\nYes, the content provides significantly more detail than a typical CVE description. It includes:\n\n*   Specific function name (`cgiSysUplinkCheckSet`).\n*   Affected firmware versions.\n*   Detailed explanation of the vulnerability's root cause.\n*   Impact (RCE via `$RA` register modification).\n*   A working exploit script.\n\n**Summary:**\n\nThe provided content details a stack overflow vulnerability in Tenda routers that could lead to RCE. It offers a comprehensive analysis of the vulnerability, including its root cause, impact, attack vector, and a proof-of-concept exploit. This information is highly relevant to a potential CVE and provides significantly more detail than a standard CVE description.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-121 | Stack-based Buffer Overflow | 1.0 | Variant | Allowed | Primary CWE: The vulnerability is explicitly described as a \"stack-based buffer overflow.\" |\n| CWE-119 | Improper Restriction of Operations within the Bounds of a Memory Buffer | 0.7 | Class | Discouraged | Secondary Candidate: CWE-119 is a more general category that encompasses buffer overflows, but CWE-121 is more specific. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship influencing the selection is the ChildOf relationship between CWE-121 (Stack-based Buffer Overflow) and CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer). CWE-121 is a variant of CWE-119, making it a more specific and appropriate choice given the explicit mention of \"stack-based\" in the vulnerability description.\n\n```mermaid\ngraph TD\n    cwe121[\"CWE-121: Stack-based Buffer Overflow\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\"]\n    \n    cwe121 -->|CHILDOF| cwe119\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe121 primary\n    class cwe119 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **improper handling of input**, specifically the `hostIp1` and `hostIp2` arguments. This **lack of input validation** leads to a **stack-based buffer overflow** (CWE-121) when the size of the input exceeds the buffer's capacity. The overflow can then lead to **remote code execution** (RCE).\n\n## Summary of Analysis\nThe analysis is based on the explicit description of the vulnerability as a \"stack-based buffer overflow\" and supporting information from the CVE Reference Links Content Summary that details the **lack of length limitation** on `hostIp1` and `hostIp2` parameters, leading to this condition.\n\nThe selection of CWE-121 is at the optimal level of specificity because the vulnerability description directly states \"stack-based buffer overflow.\" The retriever results also strongly support this, with CWE-121 being among the top matches.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-121: Stack-based Buffer Overflow\n**Abstraction Level**: Variant\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nA stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**CWE-119:** Was considered, but CWE-121 is a better fit due to its specificity.\n\n**CWE-190:** Was considered due to the possibility of integer overflows when calculating buffer sizes, but there is no direct evidence of this in the vulnerability description.\n\n**CWE-125:** Was considered due to out-of-bounds memory access, but the vulnerability is a buffer overflow (write), not a read.\n\n**CWE-131:** Was considered, but the primary issue is the **lack of validation** of the input length, not an incorrect calculation of the buffer size itself.\n\nThe primary CWE is CWE-121 (Stack-based Buffer Overflow) with high confidence (1.0) due to the direct match with the vulnerability description.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-121 | Stack-based Buffer Overflow | 1.0 | Variant | Allowed | Primary CWE: The vulnerability is explicitly described as a \"stack-based buffer overflow.\" |\n| CWE-119 | Improper Restriction of Operations within the Bounds of a Memory Buffer | 0.7 | Class | Discouraged | Secondary Candidate: CWE-119 is a more general category that encompasses buffer overflows, but CWE-121 is more specific. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship influencing the selection is the ChildOf relationship between CWE-121 (Stack-based Buffer Overflow) and CWE-119 (Improper Restriction of Operations within the Bounds of a Memory Buffer). CWE-121 is a variant of CWE-119, making it a more specific and appropriate choice given the explicit mention of \"stack-based\" in the vulnerability description.\n\n```mermaid\ngraph TD\n    cwe121[\"CWE-121: Stack-based Buffer Overflow\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\"]\n    \n    cwe121 -->|CHILDOF| cwe119\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe121 primary\n    class cwe119 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **improper handling of input**, specifically the `hostIp1` and `hostIp2` arguments. This **lack of input validation** leads to a **stack-based buffer overflow** (CWE-121) when the size of the input exceeds the buffer's capacity. The overflow can then lead to **remote code execution** (RCE).\n\n## Summary of Analysis\nThe analysis is based on the explicit description of the vulnerability as a \"stack-based buffer overflow\" and supporting information from the CVE Reference Links Content Summary that details the **lack of length limitation** on `hostIp1` and `hostIp2` parameters, leading to this condition.\n\nThe selection of CWE-121 is at the optimal level of specificity because the vulnerability description directly states \"stack-based buffer overflow.\" The retriever results also strongly support this, with CWE-121 being among the top matches.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-121: Stack-based Buffer Overflow\n**Abstraction Level**: Variant\n**Similarity Score**: 0.77\n**Source**: dense\n\n**Description**:\nA stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**CWE-119:** Was considered, but CWE-121 is a better fit due to its specificity.\n\n**CWE-190:** Was considered due to the possibility of integer overflows when calculating buffer sizes, but there is no direct evidence of this in the vulnerability description.\n\n**CWE-125:** Was considered due to out-of-bounds memory access, but the vulnerability is a buffer overflow (write), not a read.\n\n**CWE-131:** Was considered, but the primary issue is the **lack of validation** of the input length, not an incorrect calculation of the buffer size itself.\n\nThe primary CWE is CWE-121 (Stack-based Buffer Overflow) with high confidence (1.0) due to the direct match with the vulnerability description.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-121:**\n- 121 (Stack-based Buffer Overflow) - ROOT\n\n\n**Chain starting from CWE-125:**\n- 125 (Out-of-bounds Read) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "119",
        "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Buffer Overflow",
        "match_reason": "term_in_phrase_whole_phrase"
      },
      "similarity": 800.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "190",
        "name": "Integer Overflow or Wraparound",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Overflow",
        "match_reason": "term_in_phrase_whole_phrase"
      },
      "similarity": 800.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "121",
        "name": "Stack-based Buffer Overflow",
        "source": "sparse"
      },
      "similarity": 428.9279691301076
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 417.02752738186416
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 400.53876827949784
    },
    {
      "metadata": {
        "doc_id": "674",
        "name": "Uncontrolled Recursion",
        "source": "sparse"
      },
      "similarity": 392.95905983138084
    },
    {
      "metadata": {
        "doc_id": "125",
        "name": "Out-of-bounds Read",
        "source": "sparse"
      },
      "similarity": 390.4113716898205
    },
    {
      "metadata": {
        "doc_id": "122",
        "name": "Heap-based Buffer Overflow",
        "source": "sparse"
      },
      "similarity": 375.2628347466594
    },
    {
      "metadata": {
        "doc_id": "78",
        "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "type": "Base",
        "original_content": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.6515231213727222,
            "graph": 2.598479703453586
          }
        }
      },
      "similarity": 0.6515231213727222
    },
    {
      "doc_id": "128",
      "text": "CWE-128: Wrap-around Error",
      "score": 2.9120000000000004,
      "metadata": {
        "doc_id": "128",
        "name": "Wrap-around Error",
        "type": "base",
        "original_content": "CWE-128: Wrap-around Error",
        "relationships": [
          {
            "source_id": "128",
            "target_id": "190",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "128",
            "target_id": "119",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "128",
            "target_id": "682",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "682",
            "target_id": "128",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "119",
            "target_id": "128",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0,
          "peer_group": 0.9
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward",
            "peer_relationship"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "119",
                  "128",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "119"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "119",
                  "128",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "119"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "128",
                  "119",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "119"
            },
            "peer_relationship": {
              "path": [
                [
                  "128",
                  "190",
                  "PEEROF"
                ]
              ],
              "score": 0.9,
              "type": "peer_relationship",
              "source": "190"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.9120000000000004
          }
        }
      },
      "similarity": 2.9120000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-121",
      "CWE-125",
      "CWE-131",
      "CWE-190",
      "CWE-119"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}