{
  "cve_id": "CVE-2025-30699",
  "description": "Vulnerability in the MySQL Server product of Oracle MySQL (component Server Stored Procedure). Supported versions that are affected are 8.0.0-8.0.41, 8.4.0-8.4.4 and 9.0.0-9.2.0. Easily exploitable vulnerability allows high privileged attacker with network access via multiple protocols to compromise MySQL Server. Successful attacks of this vulnerability can result in unauthorized ability to cause a hang or frequently repeatable crash (complete DOS) of MySQL Server. CVSS 3.1 Base Score 4.9 (Availability impacts). CVSS Vector (CVSS3.1/AVN/ACL/PRH/UIN/SU/CN/IN/AH).",
  "key_phrases": {
    "rootcause": "",
    "weakness": "SQL injection",
    "impact": [
      "hang or frequently repeatable crash (complete DOS) of MySQL Server",
      "cause a hang or frequently repeatable crash"
    ],
    "vector": "multiple protocols",
    "attacker": "high privileged attacker with network access",
    "product": "MySQL Server",
    "version": [
      "[\"['8.0.0-8.0.41'\"",
      "\"'9.0.0-9.2.0']\"]",
      "\"'8.4.0-8.4.4'\""
    ],
    "component": "Server Stored Procedure"
  },
  "reference_content": null,
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-89 | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 1.0 | Base | Allowed | Primary CWE: The vulnerability description explicitly mentions \"SQL injection\" as the weakness. |\n| CWE-400 |Uncontrolled Resource Consumption| 0.7 | Class | Allowed | Secondary CWE: The vulnerability can lead to a denial of service (DoS) by causing a hang or crash of the MySQL server. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship that influenced the decision was the direct match of \"SQL injection\" to CWE-89. Additionally, the resulting impact of the vulnerability (DoS) was considered, leading to the inclusion of CWE-400 as a secondary weakness.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    cwe400[\"CWE-400: Uncontrolled Resource Consumption\"]\n    \n    cwe89 -->|CANLEADTO| cwe400\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe89 primary\n    class cwe400 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **SQL injection** (CWE-89), which then leads to a denial-of-service condition (CWE-400) by crashing the MySQL server. The initial flaw is the improper neutralization of special elements in SQL commands, allowing attackers to manipulate the query and cause a server crash.\n\n## Summary of Analysis\nThe analysis is primarily based on the explicit mention of \"**SQL injection**\" in the \"Vulnerability Description Key Phrases\". This direct evidence strongly supports the selection of CWE-89 as the primary CWE. The resulting impact of a hang or repeatable crash further justifies the inclusion of CWE-400.\n\nThe graph relationships highlight the connection between the initial vulnerability (CWE-89) and its potential impact (CWE-400). The selected CWEs are at the optimal level of specificity, with CWE-89 being a Base CWE and CWE-400 a Class CWE.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-400: Uncontrolled Resource Consumption\n**Abstraction Level**: Class\n**Similarity Score**: N/A\n**Source**: Manual Analysis\n\n**Description**:\nThe software does not properly control the allocation, release, or management of system resources, which can lead to consumption of an excessive amount of resources.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry describes the impact of the **vulnerability**, where a successful attack can result in a denial-of-service (DoS) condition by causing the MySQL server to crash.\n\n### CWE Considered But Not Used:\n\n*   **CWE-173: Improper Handling of Alternate Encoding:** While this CWE has a similarity score, the vulnerability description doesn't provide enough detail to confirm this is the root cause.\n*   **CWE-129: Improper Validation of Array Index:** This is not relevant as the vulnerability is not related to array indexing.\n*   **CWE-611: Improper Restriction of XML External Entity Reference:** This is not relevant as the vulnerability is not related to XML processing.\n*   **CWE-790: Improper Filtering of Special Elements:** While related to input validation, CWE-89 is a more specific match for SQL Injection.\n*   **CWE-502: Deserialization of Untrusted Data:** This is not relevant as the vulnerability is not related to deserialization.\n*   **CWE-20: Improper Input Validation:** This is too general. CWE-89 is more specific.\n*   **CWE-306: Missing Authentication for Critical Function:** The vulnerability description indicates a successful attack requires a high privileged attacker which suggests authentication is present, but not sufficient to prevent the SQL injection.\n*   **CWE-200: Exposure of Sensitive Information to an Unauthorized Actor:** The vulnerability description does not specify information exposure.\n*   **CWE-289: Authentication Bypass by Alternate Name:** Not relevant as the vulnerability description doesn't suggest an authentication bypass.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-89 | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 1.0 | Base | Allowed | Primary CWE: The vulnerability description explicitly mentions \"SQL injection\" as the weakness. |\n| CWE-400 |Uncontrolled Resource Consumption| 0.7 | Class | Allowed | Secondary CWE: The vulnerability can lead to a denial of service (DoS) by causing a hang or crash of the MySQL server. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship that influenced the decision was the direct match of \"SQL injection\" to CWE-89. Additionally, the resulting impact of the vulnerability (DoS) was considered, leading to the inclusion of CWE-400 as a secondary weakness.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    cwe400[\"CWE-400: Uncontrolled Resource Consumption\"]\n    \n    cwe89 -->|CANLEADTO| cwe400\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe89 primary\n    class cwe400 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **SQL injection** (CWE-89), which then leads to a denial-of-service condition (CWE-400) by crashing the MySQL server. The initial flaw is the improper neutralization of special elements in SQL commands, allowing attackers to manipulate the query and cause a server crash.\n\n## Summary of Analysis\nThe analysis is primarily based on the explicit mention of \"**SQL injection**\" in the \"Vulnerability Description Key Phrases\". This direct evidence strongly supports the selection of CWE-89 as the primary CWE. The resulting impact of a hang or repeatable crash further justifies the inclusion of CWE-400.\n\nThe graph relationships highlight the connection between the initial vulnerability (CWE-89) and its potential impact (CWE-400). The selected CWEs are at the optimal level of specificity, with CWE-89 being a Base CWE and CWE-400 a Class CWE.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-400: Uncontrolled Resource Consumption\n**Abstraction Level**: Class\n**Similarity Score**: N/A\n**Source**: Manual Analysis\n\n**Description**:\nThe software does not properly control the allocation, release, or management of system resources, which can lead to consumption of an excessive amount of resources.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry describes the impact of the **vulnerability**, where a successful attack can result in a denial-of-service (DoS) condition by causing the MySQL server to crash.\n\n### CWE Considered But Not Used:\n\n*   **CWE-173: Improper Handling of Alternate Encoding:** While this CWE has a similarity score, the vulnerability description doesn't provide enough detail to confirm this is the root cause.\n*   **CWE-129: Improper Validation of Array Index:** This is not relevant as the vulnerability is not related to array indexing.\n*   **CWE-611: Improper Restriction of XML External Entity Reference:** This is not relevant as the vulnerability is not related to XML processing.\n*   **CWE-790: Improper Filtering of Special Elements:** While related to input validation, CWE-89 is a more specific match for SQL Injection.\n*   **CWE-502: Deserialization of Untrusted Data:** This is not relevant as the vulnerability is not related to deserialization.\n*   **CWE-20: Improper Input Validation:** This is too general. CWE-89 is more specific.\n*   **CWE-306: Missing Authentication for Critical Function:** The vulnerability description indicates a successful attack requires a high privileged attacker which suggests authentication is present, but not sufficient to prevent the SQL injection.\n*   **CWE-200: Exposure of Sensitive Information to an Unauthorized Actor:** The vulnerability description does not specify information exposure.\n*   **CWE-289: Authentication Bypass by Alternate Name:** Not relevant as the vulnerability description doesn't suggest an authentication bypass.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n**Chain starting from CWE-502:**\n- 502 (Deserialization of Untrusted Data) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: SQL injection",
        "match_reason": "exact_match_whole_phrase"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "173",
        "name": "Improper Handling of Alternate Encoding",
        "source": "sparse"
      },
      "similarity": 538.0903760195812
    },
    {
      "metadata": {
        "doc_id": "129",
        "name": "Improper Validation of Array Index",
        "source": "sparse"
      },
      "similarity": 480.0198341427434
    },
    {
      "metadata": {
        "doc_id": "611",
        "name": "Improper Restriction of XML External Entity Reference",
        "source": "sparse"
      },
      "similarity": 436.4693674352459
    },
    {
      "metadata": {
        "doc_id": "790",
        "name": "Improper Filtering of Special Elements",
        "source": "sparse"
      },
      "similarity": 417.9242438346551
    },
    {
      "metadata": {
        "doc_id": "502",
        "name": "Deserialization of Untrusted Data",
        "source": "sparse"
      },
      "similarity": 403.1938998931843
    },
    {
      "metadata": {
        "doc_id": "20",
        "name": "Improper Input Validation",
        "source": "sparse"
      },
      "similarity": 398.58106389881914
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 394.4826720136511
    },
    {
      "metadata": {
        "doc_id": "200",
        "name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "type": "Class",
        "original_content": "The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.",
        "keyphrase_source": "weakness:SQL injection",
        "source": "dense",
        "mapping_notes": {
          "usage": "Discouraged",
          "rationale": "CWE-200 is commonly misused to represent the loss of confidentiality in a vulnerability, but confidentiality loss is a technical impact - not a root cause error. As of CWE 4.9, over 400 CWE entries can lead to a loss of confidentiality. Other options are often available. [REF-1287].",
          "comments": "If an error or mistake causes information to be disclosed, then use the CWE ID for that error. Consider starting with improper authorization (CWE-285), insecure permissions (CWE-732), improper authentication (CWE-287), etc. Also consider children such as Insertion of Sensitive Information Into Sent Data (CWE-201), Observable Discrepancy (CWE-203), Insertion of Sensitive Information into Externally-Accessible File or Directory (CWE-538), or others.",
          "reasons": [
            "Frequent Misuse"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.530756738765863
          }
        }
      },
      "similarity": 0.530756738765863
    },
    {
      "doc_id": "289",
      "text": "CWE-289: Authentication Bypass by Alternate Name",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "289",
        "name": "Authentication Bypass by Alternate Name",
        "type": "base",
        "original_content": "CWE-289: Authentication Bypass by Alternate Name",
        "relationships": [
          {
            "source_id": "289",
            "target_id": "52",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "289",
            "target_id": "46",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "289",
            "target_id": "178",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "289",
            "target_id": "173",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "289",
            "target_id": "1390",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "52",
            "target_id": "289",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "46",
            "target_id": "289",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "178",
            "target_id": "289",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "173",
            "target_id": "289",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1390",
            "target_id": "289",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "173",
                  "289",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "173"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "173",
                  "289",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "173"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-502",
      "CWE-400",
      "CWE-173",
      "CWE-611",
      "CWE-306",
      "CWE-790",
      "CWE-20",
      "CWE-129",
      "CWE-200",
      "CWE-289"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}