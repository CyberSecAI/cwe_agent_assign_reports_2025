{
  "method": "sparse_weakness_1",
  "query": "In the Linux kernel, the following vulnerability has been resolved ext4 fix infinite loop when replaying fast_commit When doing fast_commit replay an infinite loop may occur due to an uninitialized extent_status struct. ext4_ext_determine_insert_hole() does not detect the replay and calls ext4_es_find_extent_range(), which will return immediately without initializing the es variable. Because es contains garbage, an integer overflow may happen causing an infinite loop in this function, easily reproducible using fstest generic/039. This commit fixes this issue by unconditionally initializing the structure in function ext4_es_find_extent_range(). Thanks to Zhang Yi, for figuring out the real problem!",
  "keyphrases": {
    "weakness": "integer overflow"
  },
  "timestamp": "2025-07-12T04:07:17.372700",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "score": 485.43113533163694
    },
    {
      "doc_id": "674",
      "name": "Uncontrolled Recursion",
      "score": 432.2688219422694
    },
    {
      "doc_id": "190",
      "name": "Integer Overflow or Wraparound",
      "score": 429.50019655277674
    },
    {
      "doc_id": "394",
      "name": "Unexpected Status Code or Return Value",
      "score": 426.8647971992565
    },
    {
      "doc_id": "197",
      "name": "Numeric Truncation Error",
      "score": 419.9686388977638
    }
  ]
}