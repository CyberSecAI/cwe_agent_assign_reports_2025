{
  "cve_id": "CVE-2024-12421",
  "description": "The The Coupon Affiliates Affiliate Plugin for WooCommerce plugin for WordPress is vulnerable to arbitrary shortcode execution in all versions up to, and including, 5.16.7.1. This is due to the software allowing users to execute an action that does not properly validate a value before running do_shortcode. This makes it possible for unauthenticated attackers to execute arbitrary shortcodes. This functionality is also vulnerable to Reflected **Cross-Site Scripting**. The **Cross-Site Scripting** was patched in version 5.16.7.1, while the arbitrary shortcode execution was patched in 5.16.7.2.",
  "key_phrases": {
    "rootcause": "executing action that does not properly validate value before running do_shortcode",
    "weakness": "Cross-Site Scripting",
    "impact": "arbitrary shortcode execution",
    "vector": "",
    "attacker": "unauthenticated attackers",
    "product": "The Coupon Affiliates Affiliate Plugin for WooCommerce",
    "version": "all versions up to and including 5.16.7.1",
    "component": ""
  },
  "reference_content": "```\n{\n  \"vulnerability\": {\n    \"root_cause\": \"The plugin allows users to execute an action that does not properly validate a value before running `do_shortcode`.\",\n    \"weaknesses\": [\n      \"Unauthenticated Arbitrary Shortcode Execution\",\n      \"Reflected Cross-Site Scripting\"\n    ],\n    \"impact\": \"Unauthenticated attackers can execute arbitrary shortcodes, potentially leading to malicious code injection and reflected XSS.\",\n    \"attack_vectors\": \"An unauthenticated attacker can trigger the vulnerable functionality by crafting a malicious request with an unvalidated value that gets passed to `do_shortcode`.\",\n    \"required_capabilities\": \"The attacker needs no specific capabilities or position, they can be unauthenticated.\"\n  },\n  \"fixes\": [\n    \"The Cross-Site Scripting was patched in version 5.16.7.1\",\n    \"The arbitrary shortcode execution was patched in 5.16.7.2\"\n  ],\n  \"details\": \"The vulnerability is present in the `Coupon Affiliates \u2013 Affiliate Plugin for WooCommerce` plugin for WordPress. The plugin fails to validate user-provided input before passing it to the `do_shortcode` function. This allows an unauthenticated user to inject malicious shortcodes and execute them on the website. Additionally, there is a reflected Cross-Site Scripting vulnerability.\",\n  \"affected_versions\": \"<= 5.16.7.1\",\n  \"patched_version\": \"5.16.7.2\",\n   \"cve_description\": \"PLACEHOLDER - Implement CVE description retrieval\"\n}\n```",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-94 | Improper Control of Generation of Code ('Code Injection') | 0.8 | Base | Primary CWE | Allowed-with-Review |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.7 | Base | Secondary Candidate | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.75\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary relationship influencing the decision is that CWE-94 is a parent of CWE-95 (Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')) and CWE-96 (Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')). While the vulnerability allows for arbitrary shortcode execution, which could lead to code injection, the specific method isn't detailed enough to determine if it's dynamic or static. Therefore, the more general CWE-94 is chosen. CWE-79 is included as a secondary weakness because the vulnerability description mentions a reflected Cross-Site Scripting vulnerability, which was patched.\n\n```mermaid\ngraph TD\n    cwe94[\"CWE-94: Improper Control of Generation of Code ('Code Injection')\"]\n    cwe95[\"CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')\"]\n    cwe96[\"CWE-96: Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n\n    cwe95 -->|CHILDOF| cwe94\n    cwe96 -->|CHILDOF| cwe94\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe94 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **improper validation** of a value before running `do_shortcode`, leading to arbitrary shortcode execution (code injection) and potentially reflected XSS.\n\n**Chain:**\n1.  **Improper Validation** (CWE-Unknown - not enough info to map)\n2.  **Improper Control of Generation of Code** (CWE-94)\n3.  **Cross-Site Scripting** (CWE-79)\n\n## Summary of Analysis\nThe primary vulnerability lies in the **improper validation** of input before it's passed to the `do_shortcode` function. This allows unauthenticated attackers to inject and execute arbitrary shortcodes. The description states \"This is due to the software allowing users to execute an action that **does not properly validate** a value before running `do_shortcode`.\" This **rootcause** leads to the execution of arbitrary shortcodes which falls under CWE-94. The vulnerability also mentions reflected Cross-Site Scripting, which supports including CWE-79 as a secondary weakness.\n\nThe selection of CWE-94 is further supported by the CVE Reference Links Content Summary, which states: \"The plugin fails to validate user-provided input before passing it to the `do_shortcode` function. This allows an unauthenticated user to inject malicious shortcodes and execute them on the website. Additionally, there is a reflected Cross-Site Scripting vulnerability.\"\n\nThe retriever results also pointed to CWE-96, CWE-95, CWE-79. Ultimately, CWE-94 was selected because it is the parent of both CWE-95 and CWE-96.\n\nThe evidence supports a confidence level of 0.75, as the core issue is **improper validation** leading to code injection, but the exact mechanism (static vs. dynamic) isn't fully detailed.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-94 | Improper Control of Generation of Code ('Code Injection') | 0.8 | Base | Primary CWE | Allowed-with-Review |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.7 | Base | Secondary Candidate | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.75\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary relationship influencing the decision is that CWE-94 is a parent of CWE-95 (Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')) and CWE-96 (Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')). While the vulnerability allows for arbitrary shortcode execution, which could lead to code injection, the specific method isn't detailed enough to determine if it's dynamic or static. Therefore, the more general CWE-94 is chosen. CWE-79 is included as a secondary weakness because the vulnerability description mentions a reflected Cross-Site Scripting vulnerability, which was patched.\n\n```mermaid\ngraph TD\n    cwe94[\"CWE-94: Improper Control of Generation of Code ('Code Injection')\"]\n    cwe95[\"CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')\"]\n    cwe96[\"CWE-96: Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n\n    cwe95 -->|CHILDOF| cwe94\n    cwe96 -->|CHILDOF| cwe94\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe94 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **improper validation** of a value before running `do_shortcode`, leading to arbitrary shortcode execution (code injection) and potentially reflected XSS.\n\n**Chain:**\n1.  **Improper Validation** (CWE-Unknown - not enough info to map)\n2.  **Improper Control of Generation of Code** (CWE-94)\n3.  **Cross-Site Scripting** (CWE-79)\n\n## Summary of Analysis\nThe primary vulnerability lies in the **improper validation** of input before it's passed to the `do_shortcode` function. This allows unauthenticated attackers to inject and execute arbitrary shortcodes. The description states \"This is due to the software allowing users to execute an action that **does not properly validate** a value before running `do_shortcode`.\" This **rootcause** leads to the execution of arbitrary shortcodes which falls under CWE-94. The vulnerability also mentions reflected Cross-Site Scripting, which supports including CWE-79 as a secondary weakness.\n\nThe selection of CWE-94 is further supported by the CVE Reference Links Content Summary, which states: \"The plugin fails to validate user-provided input before passing it to the `do_shortcode` function. This allows an unauthenticated user to inject malicious shortcodes and execute them on the website. Additionally, there is a reflected Cross-Site Scripting vulnerability.\"\n\nThe retriever results also pointed to CWE-96, CWE-95, CWE-79. Ultimately, CWE-94 was selected because it is the parent of both CWE-95 and CWE-96.\n\nThe evidence supports a confidence level of 0.75, as the core issue is **improper validation** leading to code injection, but the exact mechanism (static vs. dynamic) isn't fully detailed.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-96:**\n- 96 (Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')) - ROOT\n\n\n**Chain starting from CWE-79:**\n- 79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 713.1940735070325
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 657.3978551960813
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 645.9040008019497
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 644.3383337849023
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse"
      },
      "similarity": 635.9757818771604
    },
    {
      "metadata": {
        "doc_id": "138",
        "name": "Improper Neutralization of Special Elements",
        "source": "sparse"
      },
      "similarity": 631.0596519230542
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 612.3997225112842
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 602.5423096667589
    },
    {
      "metadata": {
        "doc_id": "96",
        "name": "Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')",
        "type": "Base",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before inserting the input into an executable resource, such as a library, configuration file, or template.",
        "keyphrase_source": "rootcause:executing action that does not properly validate value before running do_shortcode",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5580700181564848,
            "graph": 1.6337740612260987
          }
        }
      },
      "similarity": 0.5580700181564848
    },
    {
      "doc_id": "73",
      "text": "CWE-73: External Control of File Name or Path",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "73",
        "name": "External Control of File Name or Path",
        "type": "base",
        "original_content": "CWE-73: External Control of File Name or Path",
        "relationships": [
          {
            "source_id": "73",
            "target_id": "114",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "59",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "434",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "41",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "22",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "20",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "700"
            }
          },
          {
            "source_id": "73",
            "target_id": "610",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "642",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "99",
            "target_id": "73",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "642",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "610",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "59",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "434",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "22",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "20",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "700"
            }
          },
          {
            "source_id": "114",
            "target_id": "73",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "434",
                  "73",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "434"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "434",
                  "73",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "434"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "73",
                  "434",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "434"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-96",
      "CWE-79",
      "CWE-94",
      "CWE-95"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}