{
  "query": "GitHub Desktop is an open-source, Electron-based GitHub app designed for git development. Prior to version 3.4.20-beta3, an attacker convincing a user to view a file in a commit of their making in the history view can cause information disclosure by means of Git attempting to access a network share. This affects GitHub Desktop users on Windows that view malicious commits in the history view. macOS users are not affected. When viewing a file diff in the history view GitHub Desktop will call `git log` or `git diff` with the object id (SHA) of the commit, the name of the file, and the old name of the file if the file has been renamed. As a security precaution Git will attempt to fully resolve the old and new path via `realpath`, traversing symlinks, to ensure that the resolved paths reside within the repository working directory. This can lead to Git attempting to access a path that resides on a network share (UNC path) and in doing so Windows will attempt to perform NTLM authentication which passes information such as the computer name, the currently signed in (Windows) user name, and an NTLM hash. GitHub Desktop 3.4.20 and later fix this vulnerability. The beta channel includes the fix in 3.4.20-beta3. As a workaround to use until upgrading is possible, only browse commits in the history view that comes from trusted sources.",
  "count": 10,
  "results": [
    {
      "cwe_id": "427",
      "name": "Uncontrolled Search Path Element",
      "abstraction": "Base",
      "score": 443.0233480981475,
      "original_score": 443.0233480981475,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "378",
      "name": "Creation of Temporary File With Insecure Permissions",
      "abstraction": "Base",
      "score": 426.4411642706267,
      "original_score": 426.4411642706267,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "201",
      "name": "Insertion of Sensitive Information Into Sent Data",
      "abstraction": "Base",
      "score": 422.4219869841127,
      "original_score": 422.4219869841127,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "abstraction": "Class",
      "score": 421.44872550876835,
      "original_score": 421.44872550876835,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "88",
      "name": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
      "abstraction": "Base",
      "score": 420.8741615473002,
      "original_score": 420.8741615473002,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "79",
      "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "abstraction": "Base",
      "score": 412.34547524978916,
      "original_score": 412.34547524978916,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "639",
      "name": "Authorization Bypass Through User-Controlled Key",
      "abstraction": "Base",
      "score": 411.9526715136305,
      "original_score": 411.9526715136305,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "61",
      "name": "UNIX Symbolic Link (Symlink) Following",
      "abstraction": "Compound",
      "score": 410.62669671025685,
      "original_score": 410.62669671025685,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "306",
      "name": "Missing Authentication for Critical Function",
      "abstraction": "Base",
      "score": 408.65772229989204,
      "original_score": 408.65772229989204,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "22",
      "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
      "abstraction": "Base",
      "score": 407.91154658601783,
      "original_score": 407.91154658601783,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 407.91154658601783,
    "max": 443.0233480981475,
    "mean": 418.5703498768542,
    "median": 416.6098183985447,
    "count": 10
  }
}