{
  "method": "sparse_combined",
  "query": "In the Linux kernel, the following vulnerability has been resolved x86/mtrr Check if fixed MTRRs exist before saving them MTRRs have an obsolete fixed variant for fine grained caching control of the 640K-1MB region that uses separate MSRs. This fixed variant has a separate capability bit in the MTRR capability MSR. So far all x86 CPUs which support MTRR have this separate bit set, so it went unnoticed that mtrr_save_state() does not check the capability bit before accessing the fixed MTRR MSRs. Though on a CPU that does not support the fixed MTRR capability this results in a #GP. The #GP itself is harmless because the RDMSR fault is handled gracefully, but results in a WARN_ON(). Add the missing capability check to prevent this.",
  "keyphrases": {
    "rootcause": [
      "missing capability check"
    ]
  },
  "timestamp": "2025-07-12T04:17:41.243373",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "863",
      "name": "Incorrect Authorization",
      "score": 624.9019947777792
    },
    {
      "doc_id": "352",
      "name": "Cross-Site Request Forgery (CSRF)",
      "score": 599.8987450889131
    },
    {
      "doc_id": "862",
      "name": "Missing Authorization",
      "score": 597.4785067573177
    },
    {
      "doc_id": "201",
      "name": "Insertion of Sensitive Information Into Sent Data",
      "score": 568.0210470013087
    },
    {
      "doc_id": "99",
      "name": "Improper Control of Resource Identifiers ('Resource Injection')",
      "score": 558.5976972732872
    }
  ]
}