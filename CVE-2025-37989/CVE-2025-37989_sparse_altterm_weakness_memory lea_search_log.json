{
  "method": "sparse_altterm_weakness_memory lea",
  "query": "In the Linux kernel, the following vulnerability has been resolved net phy leds fix memory leak A network restart test on a router led to an out-of-memory condition, which was traced to a memory leak in the PHY LED trigger code. The root cause is misuse of the devm API. The registration function (phy_led_triggers_register) is called from phy_attach_direct, not phy_probe, and the unregister function (phy_led_triggers_unregister) is called from phy_detach, not phy_remove. This means the register and unregister functions can be called multiple times for the same PHY device, but devm-allocated memory is not freed until the driver is unbound. This also prevents kmemleak from detecting the leak, as the devm API internally stores the allocated pointer. Fix this by replacing devm_kzalloc/devm_kcalloc with standard kzalloc/kcalloc, and add the corresponding kfree calls in the unregister path.",
  "keyphrases": {
    "weakness": "memory leak"
  },
  "timestamp": "2025-07-12T13:33:30.981951",
  "results_count": 1,
  "results_summary": [
    {
      "doc_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "score": 1000.0
    }
  ]
}