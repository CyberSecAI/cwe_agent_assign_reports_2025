{
  "method": "sparse_base",
  "query": "In the Linux kernel, the following vulnerability has been resolved btrfs fix uninitialized pointer free in add_inode_ref() The add_inode_ref() function does not initialize the name struct when it is declared. If any of the following calls to read_one_inode() returns NULL, dir = read_one_inode(root, parent_objectid) if (!dir) { ret = -ENOENT goto out } inode = read_one_inode(root, inode_objectid) if (!inode) { ret = -EIO goto out } then name.name would be freed on out before being initialized. out ... kfree(name.name) This issue was reported by Coverity with CID 1526744.",
  "keyphrases": {
    "base_query": "In the Linux kernel, the following vulnerability has been resolved btrfs fix uninitialized pointer free in add_inode_ref() The add_inode_ref() function does not initialize the name struct when it is declared. If any of the following calls to read_one_inode() returns NULL, dir = read_one_inode(root, parent_objectid) if (!dir) { ret = -ENOENT goto out } inode = read_one_inode(root, inode_objectid) if (!inode) { ret = -EIO goto out } then name.name would be freed on out before being initialized. out ... kfree(name.name) This issue was reported by Coverity with CID 1526744."
  },
  "timestamp": "2025-07-12T05:27:24.142772",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "909",
      "name": "Missing Initialization of Resource",
      "score": 127.51669544472027
    },
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 124.33323305959031
    },
    {
      "doc_id": "824",
      "name": "Access of Uninitialized Pointer",
      "score": 120.29475787394884
    },
    {
      "doc_id": "476",
      "name": "NULL Pointer Dereference",
      "score": 118.47688595148848
    },
    {
      "doc_id": "775",
      "name": "Missing Release of File Descriptor or Handle after Effective Lifetime",
      "score": 118.02758448256309
    }
  ]
}