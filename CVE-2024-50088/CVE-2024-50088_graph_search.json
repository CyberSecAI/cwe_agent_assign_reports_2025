{
  "retriever": "graph",
  "query": "In the Linux kernel, the following vulnerability has been resolved btrfs fix uninitialized pointer free in add_inode_ref() The add_inode_ref() function does not initialize the name struct when it is declared. If any of the following calls to read_one_inode() returns NULL, dir = read_one_inode(root, parent_objectid) if (!dir) { ret = -ENOENT goto out } inode = read_one_inode(root, inode_objectid) if (!inode) { ret = -EIO goto out } then name.name would be freed on out before being initialized. out ... kfree(name.name) This issue was reported by Coverity with CID 1526744. Consider specifically these CWEs: CWE-763 CWE-911 CWE-476 CWE-909 CWE-362 CWE-824 CWE-908",
  "keyphrases": {
    "original_query": "In the Linux kernel, the following vulnerability has been resolved btrfs fix uninitialized pointer free in add_inode_ref() The add_inode_ref() function does not initialize the name struct when it is declared. If any of the following calls to read_one_inode() returns NULL, dir = read_one_inode(root, parent_objectid) if (!dir) { ret = -ENOENT goto out } inode = read_one_inode(root, inode_objectid) if (!inode) { ret = -EIO goto out } then name.name would be freed on out before being initialized. out ... kfree(name.name) This issue was reported by Coverity with CID 1526744.",
    "enhanced_query": "In the Linux kernel, the following vulnerability has been resolved btrfs fix uninitialized pointer free in add_inode_ref() The add_inode_ref() function does not initialize the name struct when it is declared. If any of the following calls to read_one_inode() returns NULL, dir = read_one_inode(root, parent_objectid) if (!dir) { ret = -ENOENT goto out } inode = read_one_inode(root, inode_objectid) if (!inode) { ret = -EIO goto out } then name.name would be freed on out before being initialized. out ... kfree(name.name) This issue was reported by Coverity with CID 1526744. Consider specifically these CWEs: CWE-763 CWE-911 CWE-476 CWE-909 CWE-362 CWE-824 CWE-908",
    "cwe_mentions": [
      "CWE-763",
      "CWE-911",
      "CWE-476",
      "CWE-909",
      "CWE-362",
      "CWE-824",
      "CWE-908"
    ],
    "search_time": 2.9421963691711426
  },
  "timestamp": "2025-07-13 19:50:41",
  "cve_id": "CVE-2024-50088",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "type": "Base",
      "score": 2.8141973045852815,
      "relationship_count": 0
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "type": "Base",
      "score": 2.8055282369822123,
      "relationship_count": 0
    },
    {
      "cwe_id": "364",
      "name": "Signal Handler Race Condition",
      "type": "base",
      "score": 2.3400000000000003,
      "relationship_count": 0
    },
    {
      "cwe_id": "772",
      "name": "Missing Release of Resource after Effective Lifetime",
      "type": "base",
      "score": 2.2100000000000004,
      "relationship_count": 0
    },
    {
      "cwe_id": "787",
      "name": "Out-of-bounds Write",
      "type": "base",
      "score": 2.2100000000000004,
      "relationship_count": 0
    },
    {
      "cwe_id": "1325",
      "name": "Improperly Controlled Sequential Memory Allocation",
      "type": "base",
      "score": 2.2100000000000004,
      "relationship_count": 0
    },
    {
      "cwe_id": "911",
      "name": "Improper Update of Reference Count",
      "type": "Base",
      "score": 1.9181925233821735,
      "relationship_count": 0
    },
    {
      "cwe_id": "123",
      "name": "Write-what-where Condition",
      "type": "base",
      "score": 1.7680000000000005,
      "relationship_count": 0
    },
    {
      "cwe_id": "120",
      "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
      "type": "base",
      "score": 1.7680000000000005,
      "relationship_count": 0
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "type": "base",
      "score": 1.7680000000000005,
      "relationship_count": 0
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "type": "Class",
      "score": 1.7545684112731117,
      "relationship_count": 0
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "type": "Class",
      "score": 1.7335484172391942,
      "relationship_count": 0
    },
    {
      "cwe_id": "590",
      "name": "Free of Memory not on the Heap",
      "type": "variant",
      "score": 1.71168,
      "relationship_count": 0
    },
    {
      "cwe_id": "826",
      "name": "Premature Release of Resource During Expected Lifetime",
      "type": "base",
      "score": 1.6848000000000003,
      "relationship_count": 0
    },
    {
      "cwe_id": "562",
      "name": "Return of Stack Variable Address",
      "type": "base",
      "score": 1.6848000000000003,
      "relationship_count": 0
    },
    {
      "cwe_id": "1341",
      "name": "Multiple Releases of Same Resource or Handle",
      "type": "base",
      "score": 1.6848000000000003,
      "relationship_count": 0
    },
    {
      "cwe_id": "1265",
      "name": "Unintended Reentrant Invocation of Non-reentrant Code Via Nested Calls",
      "type": "base",
      "score": 1.6848000000000003,
      "relationship_count": 0
    },
    {
      "cwe_id": "386",
      "name": "Symbolic Name not Mapping to Correct Object",
      "type": "base",
      "score": 1.6744000000000003,
      "relationship_count": 0
    },
    {
      "cwe_id": "129",
      "name": "Improper Validation of Array Index",
      "type": "variant",
      "score": 1.6320000000000003,
      "relationship_count": 0
    },
    {
      "cwe_id": "61",
      "name": "UNIX Symbolic Link (Symlink) Following",
      "type": "compound",
      "score": 1.61,
      "relationship_count": 0
    }
  ]
}