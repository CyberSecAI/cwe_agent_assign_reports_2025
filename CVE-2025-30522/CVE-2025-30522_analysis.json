{
  "cve_id": "CVE-2025-30522",
  "description": "**Cross-Site Request Forgery** (CSRF) vulnerability in Damian Orzol Contact Form 7 Material Design allows Stored **XSS**. This issue affects Contact Form 7 Material Design from n/a through 1.0.0.",
  "key_phrases": {
    "rootcause": "Cross-Site Request Forgery",
    "weakness": [
      "cross-site scripting",
      "XSS"
    ],
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": "Contact Form 7 Material Design",
    "version": "n/a through 1.0.0",
    "component": ""
  },
  "reference_content": "Here's an analysis of the provided content based on the CVE ID CVE-2025-30522:\n\n**Relevant Content:**\n\n*   **Vulnerability:** Cross-Site Request Forgery (CSRF)\n*   **Affected Software:** Contact Form 7 Material Design plugin for WordPress\n*   **Vulnerable Versions:** <= 1.0.0\n*   **Impact:** Allows a malicious actor to force higher-privileged users to execute unwanted actions under their current authentication.\n*   **Severity:** Low (CVSS 7.1)\n*   **Attack Vector:** Exploitation could be done by an unauthenticated attacker\n*   **Fix:** No official fix available\n*   **Published:** March 24, 2025",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 0.9 | Compound | Primary | Allowed |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.8 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary weakness is **CWE-352: Cross-Site Request Forgery (CSRF)**, which is a compound weakness. The secondary weakness is **CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')**. There isn't a direct parent-child relationship between these two CWEs. However, **CWE-352** can lead to **CWE-79** if a successful CSRF attack allows an attacker to inject malicious scripts into the web page, which are then executed by other users.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe352 -->|CAN_LEAD_TO| cwe79\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **CWE-352: Cross-Site Request Forgery (CSRF)**, where the application fails to properly validate requests. This allows an attacker to forge requests on behalf of a user. The forged request, if successful, injects malicious scripts, which results in **CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')**.\n\n## Summary of Analysis\nThe analysis indicates a **Cross-Site Request Forgery (CSRF)** vulnerability that leads to Stored **Cross-Site Scripting (XSS)**. The primary root cause is the **lack of CSRF protection**, allowing attackers to inject malicious content. The injected content is then improperly neutralized, leading to the stored **XSS** vulnerability.\n\nThe evidence is based on the vulnerability description which states: \"**Cross-Site Request Forgery** (CSRF) vulnerability in Damian Orzol Contact Form 7 Material Design allows Stored **XSS**.\"\n\n**CWE-352** is the primary CWE because it is the root cause that enables the subsequent **XSS** vulnerability. **CWE-79** is a consequence of the **CWE-352** vulnerability.\n\nThe selected CWEs are at the optimal level of specificity. **CWE-352** is a Compound CWE that accurately represents the **CSRF** vulnerability, while **CWE-79** is a Base CWE that correctly describes the **Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')**.\n\nRelevant CWE Information:\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\n**Abstraction Level**: Variant\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-451: User Interface (UI) Misrepresentation of Critical Information\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe user interface (UI) does not properly represent critical information to the user, allowing the information - or its source - to be obscured or spoofed. This is often a component in phishing attacks.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-209: Generation of Error Message Containing Sensitive Information\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product generates an error message that includes sensitive information about its environment, users, or associated data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 2452.37\n**Source**: sparse\n\n**Description**:\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 0.9 | Compound | Primary | Allowed |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.8 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary weakness is **CWE-352: Cross-Site Request Forgery (CSRF)**, which is a compound weakness. The secondary weakness is **CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')**. There isn't a direct parent-child relationship between these two CWEs. However, **CWE-352** can lead to **CWE-79** if a successful CSRF attack allows an attacker to inject malicious scripts into the web page, which are then executed by other users.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe352 -->|CAN_LEAD_TO| cwe79\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **CWE-352: Cross-Site Request Forgery (CSRF)**, where the application fails to properly validate requests. This allows an attacker to forge requests on behalf of a user. The forged request, if successful, injects malicious scripts, which results in **CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')**.\n\n## Summary of Analysis\nThe analysis indicates a **Cross-Site Request Forgery (CSRF)** vulnerability that leads to Stored **Cross-Site Scripting (XSS)**. The primary root cause is the **lack of CSRF protection**, allowing attackers to inject malicious content. The injected content is then improperly neutralized, leading to the stored **XSS** vulnerability.\n\nThe evidence is based on the vulnerability description which states: \"**Cross-Site Request Forgery** (CSRF) vulnerability in Damian Orzol Contact Form 7 Material Design allows Stored **XSS**.\"\n\n**CWE-352** is the primary CWE because it is the root cause that enables the subsequent **XSS** vulnerability. **CWE-79** is a consequence of the **CWE-352** vulnerability.\n\nThe selected CWEs are at the optimal level of specificity. **CWE-352** is a Compound CWE that accurately represents the **CSRF** vulnerability, while **CWE-79** is a Base CWE that correctly describes the **Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')**.\n\nRelevant CWE Information:\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\n**Abstraction Level**: Variant\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-451: User Interface (UI) Misrepresentation of Critical Information\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe user interface (UI) does not properly represent critical information to the user, allowing the information - or its source - to be obscured or spoofed. This is often a component in phishing attacks.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-138: Improper Neutralization of Special Elements\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-74 is high-level and often misused when lower-level weaknesses are more appropriate.\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-209: Generation of Error Message Containing Sensitive Information\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product generates an error message that includes sensitive information about its environment, users, or associated data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\n**Abstraction Level**: Base\n**Similarity Score**: 2452.37\n**Source**: sparse\n\n**Description**:\nThe product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n**Chain starting from CWE-1391:**\n- 1391 (Use of Weak Credentials) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_sources": [
          {
            "id": "rootcause:Cross-Site Request Forgery",
            "keyphrase": "Cross-Site Request Forgery",
            "type": "rootcause"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "product:Contact Form 7 Material Design",
            "keyphrase": "Contact Form 7 Material Design",
            "type": "product"
          },
          {
            "id": "version:n/a through 1.0.0",
            "keyphrase": "n/a through 1.0.0",
            "type": "version"
          }
        ]
      },
      "similarity": 330.0430639150335
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "keyphrase_sources": [
          {
            "id": "rootcause:Cross-Site Request Forgery",
            "keyphrase": "Cross-Site Request Forgery",
            "type": "rootcause"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "product:Contact Form 7 Material Design",
            "keyphrase": "Contact Form 7 Material Design",
            "type": "product"
          },
          {
            "id": "version:n/a through 1.0.0",
            "keyphrase": "n/a through 1.0.0",
            "type": "version"
          }
        ]
      },
      "similarity": 273.0151939778618
    },
    {
      "metadata": {
        "doc_id": "918",
        "name": "Server-Side Request Forgery (SSRF)",
        "source": "sparse",
        "original_content": "The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.",
        "keyphrase_sources": [
          {
            "id": "rootcause:Cross-Site Request Forgery",
            "keyphrase": "Cross-Site Request Forgery",
            "type": "rootcause"
          }
        ]
      },
      "similarity": 248.62354004998755
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse",
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "keyphrase_sources": [
          {
            "id": "rootcause:Cross-Site Request Forgery",
            "keyphrase": "Cross-Site Request Forgery",
            "type": "rootcause"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "product:Contact Form 7 Material Design",
            "keyphrase": "Contact Form 7 Material Design",
            "type": "product"
          },
          {
            "id": "version:n/a through 1.0.0",
            "keyphrase": "n/a through 1.0.0",
            "type": "version"
          }
        ]
      },
      "similarity": 241.87867237554806
    },
    {
      "metadata": {
        "doc_id": "601",
        "name": "URL Redirection to Untrusted Site ('Open Redirect')",
        "source": "sparse",
        "original_content": "The web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a redirect.",
        "keyphrase_sources": [
          {
            "id": "rootcause:Cross-Site Request Forgery",
            "keyphrase": "Cross-Site Request Forgery",
            "type": "rootcause"
          }
        ]
      },
      "similarity": 231.7015806491882
    },
    {
      "metadata": {
        "doc_id": "80",
        "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
        "source": "sparse",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.",
        "keyphrase_sources": [
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          }
        ]
      },
      "similarity": 207.41792784839143
    },
    {
      "metadata": {
        "doc_id": "1004",
        "name": "Sensitive Cookie Without 'HttpOnly' Flag",
        "source": "sparse",
        "original_content": "The product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag.",
        "keyphrase_sources": [
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          }
        ]
      },
      "similarity": 202.7685008112519
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse",
        "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
        "keyphrase_sources": [
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "version:n/a through 1.0.0",
            "keyphrase": "n/a through 1.0.0",
            "type": "version"
          }
        ]
      },
      "similarity": 154.36851367951775
    },
    {
      "metadata": {
        "doc_id": "327",
        "name": "Use of a Broken or Risky Cryptographic Algorithm",
        "source": "sparse",
        "original_content": "The product uses a broken or risky cryptographic algorithm or protocol.",
        "keyphrase_sources": [
          {
            "id": "product:Contact Form 7 Material Design",
            "keyphrase": "Contact Form 7 Material Design",
            "type": "product"
          },
          {
            "id": "version:n/a through 1.0.0",
            "keyphrase": "n/a through 1.0.0",
            "type": "version"
          }
        ]
      },
      "similarity": 66.39877546199293
    },
    {
      "metadata": {
        "doc_id": "1236",
        "name": "Improper Neutralization of Formula Elements in a CSV File",
        "source": "sparse",
        "original_content": "The product saves user-provided information into a Comma-Separated Value (CSV) file, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as a command when the file is opened by a spreadsheet product.",
        "keyphrase_sources": [
          {
            "id": "product:Contact Form 7 Material Design",
            "keyphrase": "Contact Form 7 Material Design",
            "type": "product"
          }
        ]
      },
      "similarity": 55.78948847706023
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-1391",
      "CWE-116",
      "CWE-80",
      "CWE-212",
      "CWE-79",
      "CWE-472",
      "CWE-209",
      "CWE-352",
      "CWE-74",
      "CWE-451",
      "CWE-138",
      "CWE-425"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "352": [
      {
        "id": "rootcause:Cross-Site Request Forgery",
        "keyphrase": "Cross-Site Request Forgery",
        "type": "rootcause"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "product:Contact Form 7 Material Design",
        "keyphrase": "Contact Form 7 Material Design",
        "type": "product"
      },
      {
        "id": "version:n/a through 1.0.0",
        "keyphrase": "n/a through 1.0.0",
        "type": "version"
      }
    ],
    "89": [
      {
        "id": "rootcause:Cross-Site Request Forgery",
        "keyphrase": "Cross-Site Request Forgery",
        "type": "rootcause"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "product:Contact Form 7 Material Design",
        "keyphrase": "Contact Form 7 Material Design",
        "type": "product"
      },
      {
        "id": "version:n/a through 1.0.0",
        "keyphrase": "n/a through 1.0.0",
        "type": "version"
      }
    ],
    "918": [
      {
        "id": "rootcause:Cross-Site Request Forgery",
        "keyphrase": "Cross-Site Request Forgery",
        "type": "rootcause"
      }
    ],
    "79": [
      {
        "id": "rootcause:Cross-Site Request Forgery",
        "keyphrase": "Cross-Site Request Forgery",
        "type": "rootcause"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "product:Contact Form 7 Material Design",
        "keyphrase": "Contact Form 7 Material Design",
        "type": "product"
      },
      {
        "id": "version:n/a through 1.0.0",
        "keyphrase": "n/a through 1.0.0",
        "type": "version"
      }
    ],
    "601": [
      {
        "id": "rootcause:Cross-Site Request Forgery",
        "keyphrase": "Cross-Site Request Forgery",
        "type": "rootcause"
      }
    ],
    "80": [
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      }
    ],
    "1004": [
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      }
    ],
    "434": [
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "version:n/a through 1.0.0",
        "keyphrase": "n/a through 1.0.0",
        "type": "version"
      }
    ],
    "327": [
      {
        "id": "product:Contact Form 7 Material Design",
        "keyphrase": "Contact Form 7 Material Design",
        "type": "product"
      },
      {
        "id": "version:n/a through 1.0.0",
        "keyphrase": "n/a through 1.0.0",
        "type": "version"
      }
    ],
    "1236": [
      {
        "id": "product:Contact Form 7 Material Design",
        "keyphrase": "Contact Form 7 Material Design",
        "type": "product"
      }
    ]
  }
}