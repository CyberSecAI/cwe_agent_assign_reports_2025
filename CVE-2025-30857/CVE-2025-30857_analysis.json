{
  "cve_id": "CVE-2025-30857",
  "description": "Cross-Site Request Forgery (**CSRF**) vulnerability in PressMaximum Currency Switcher for WooCommerce allows Stored **XSS**. This issue affects Currency Switcher for WooCommerce from n/a through 0.0.7.",
  "key_phrases": {
    "rootcause": "CSRF",
    "weakness": [
      "cross-site scripting",
      "XSS"
    ],
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": "PressMaximum Currency Switcher for WooCommerce",
    "version": "n/a through 0.0.7",
    "component": ""
  },
  "reference_content": "The content relates to CVE-2025-30857.\n\n**Root cause of vulnerability:**\nCross Site Request Forgery (CSRF) vulnerability.\n\n**Weaknesses/vulnerabilities present:**\nCSRF - allows a malicious actor to force higher privileged users to execute unwanted actions under their current authentication.\n\n**Impact of exploitation:**\nA malicious actor can force higher privileged users to execute unwanted actions. The specific impact varies case by case.\n\n**Attack vectors:**\nCross-Site Request Forgery (CSRF) attack.\n\n**Required attacker capabilities/position:**\nUnauthenticated.\n\n**Mitigation or fix:**\nUpdate to version 0.0.8 or later. Patchstack users can enable auto-update for vulnerable plugins.\n\n**Additional details (more than official CVE description):**\n*   **CVSS Score:** 7.1 (Low severity)\n*   **Affected Software:** Currency Switcher for WooCommerce plugin\n*   **Vulnerable versions:** <= 0.0.7\n*   **Fixed in version:** 0.0.8\n*   **OWASP Top 10:** A1: Broken Access Control\n*   **Classification:** Cross Site Request Forgery (CSRF)\n*   **Reported by:** Nguyen Xuan Chien\n*   **Published by:** Patchstack (27 March 2025)\n*   **PSID:** efa0b191f5e4",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID  | CWE Name                                                                                   | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :----------------------------------------------------------------------------------------- | :---------- | :---------------------- | :------------------------------ | :------------------------------ |\n| CWE-352 | Cross-Site Request Forgery (CSRF)                                                        | 0.9         | Compound                | Primary                         | Allowed                       |\n| CWE-79  | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.8         | Base                    | Secondary                       | Allowed                       |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\n\nThe vulnerability involves **CSRF** (CWE-352) leading to Stored **XSS** (CWE-79). While CWE-352 is a compound weakness, it accurately represents the root cause. CWE-79 is a consequence of the **CSRF** vulnerability, where an attacker exploits the **CSRF** to inject malicious scripts. The parent-child relationships did not influence the choice, but the chain relationship clarifies how the vulnerability unfolds.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe352 -->|CANPRECEDE| cwe79\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with **Cross-Site Request Forgery (CSRF)**, which allows an attacker to trick a user into performing actions they did not intend. In this case, the **CSRF** vulnerability is exploited to inject malicious scripts, leading to Stored **XSS**.\n\n**CWE-352 (CSRF)** -> **CWE-79 (XSS)**\n\nHere, CWE-352 is the root cause, and CWE-79 is the resulting impact.\n\n## Summary of Analysis\n\nThe primary vulnerability is **Cross-Site Request Forgery (CSRF)** (CWE-352), which then leads to Stored **XSS** (CWE-79). The description explicitly states a **CSRF** vulnerability which allows Stored **XSS**. This suggests that an attacker can use **CSRF** to inject malicious code. The scores from the retriever also support the choice of CWE-352 as the primary CWE and CWE-79 as a secondary CWE.\n\nThe evidence clearly points to **CSRF** being the initial **ROOTCAUSE**, with **XSS** as a consequence. The abstraction level is appropriate for both CWEs. CWE-352 is a compound weakness that fits the description. CWE-79 is a base weakness that represents the resulting **XSS**.\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\n**Abstraction Level**: Variant\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Selected*: This is too specific. The vulnerability is **XSS** in general.\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Selected*: Not directly relevant to **CSRF** or **XSS**.\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Selected*: This isn't about authorization, it is more about **CSRF** leading to **XSS**.\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n*Not Selected*: CWE-79 is a better fit because it directly relates to **XSS**.\n\n## CWE-184: Incomplete List of Disallowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Selected*: Not the primary issue; the core problem is the **CSRF** vulnerability leading to **XSS**.\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Selected*: Not directly related to **CSRF** or **XSS**.\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n*Selected*: This is the primary vulnerability as described.\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Selected*: Not directly related to the described vulnerability.\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n*Not Selected*: Not related to the described vulnerability.\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Disc",
  "analysis_with_relationships": "# Summary\n| CWE ID  | CWE Name                                                                                   | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :----------------------------------------------------------------------------------------- | :---------- | :---------------------- | :------------------------------ | :------------------------------ |\n| CWE-352 | Cross-Site Request Forgery (CSRF)                                                        | 0.9         | Compound                | Primary                         | Allowed                       |\n| CWE-79  | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.8         | Base                    | Secondary                       | Allowed                       |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.85\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\n\nThe vulnerability involves **CSRF** (CWE-352) leading to Stored **XSS** (CWE-79). While CWE-352 is a compound weakness, it accurately represents the root cause. CWE-79 is a consequence of the **CSRF** vulnerability, where an attacker exploits the **CSRF** to inject malicious scripts. The parent-child relationships did not influence the choice, but the chain relationship clarifies how the vulnerability unfolds.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe352 -->|CANPRECEDE| cwe79\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with **Cross-Site Request Forgery (CSRF)**, which allows an attacker to trick a user into performing actions they did not intend. In this case, the **CSRF** vulnerability is exploited to inject malicious scripts, leading to Stored **XSS**.\n\n**CWE-352 (CSRF)** -> **CWE-79 (XSS)**\n\nHere, CWE-352 is the root cause, and CWE-79 is the resulting impact.\n\n## Summary of Analysis\n\nThe primary vulnerability is **Cross-Site Request Forgery (CSRF)** (CWE-352), which then leads to Stored **XSS** (CWE-79). The description explicitly states a **CSRF** vulnerability which allows Stored **XSS**. This suggests that an attacker can use **CSRF** to inject malicious code. The scores from the retriever also support the choice of CWE-352 as the primary CWE and CWE-79 as a secondary CWE.\n\nThe evidence clearly points to **CSRF** being the initial **ROOTCAUSE**, with **XSS** as a consequence. The abstraction level is appropriate for both CWEs. CWE-352 is a compound weakness that fits the description. CWE-79 is a base weakness that represents the resulting **XSS**.\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)\n**Abstraction Level**: Variant\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \"<\", \">\", and \"&\" that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Selected*: This is too specific. The vulnerability is **XSS** in general.\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Selected*: Not directly relevant to **CSRF** or **XSS**.\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Selected*: This isn't about authorization, it is more about **CSRF** leading to **XSS**.\n\n## CWE-116: Improper Encoding or Escaping of Output\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n*Not Selected*: CWE-79 is a better fit because it directly relates to **XSS**.\n\n## CWE-184: Incomplete List of Disallowed Inputs\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Selected*: Not the primary issue; the core problem is the **CSRF** vulnerability leading to **XSS**.\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Selected*: Not directly related to **CSRF** or **XSS**.\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n*Selected*: This is the primary vulnerability as described.\n\n## CWE-434: Unrestricted Upload of File with Dangerous Type\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product allows the upload or transfer of dangerous file types that are automatically processed within its environment.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n*Not Selected*: Not directly related to the described vulnerability.\n\n## CWE-1391: Use of Weak Credentials\n**Abstraction Level**: Class\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n*Not Selected*: Not related to the described vulnerability.\n\n## CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n**Abstraction Level**: Class\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.\n\n**Mapping Guidance**:\n- Usage: Disc\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n**Chain starting from CWE-80:**\n- 80 (Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_sources": [
          {
            "id": "rootcause:CSRF",
            "keyphrase": "CSRF",
            "type": "rootcause"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "product:PressMaximum Currency Switcher for WooCommerce",
            "keyphrase": "PressMaximum Currency Switcher for WooCommerce",
            "type": "product"
          },
          {
            "id": "version:n/a through 0.0.7",
            "keyphrase": "n/a through 0.0.7",
            "type": "version"
          }
        ]
      },
      "similarity": 253.70926599408878
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse",
        "original_content": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment.",
        "keyphrase_sources": [
          {
            "id": "rootcause:CSRF",
            "keyphrase": "CSRF",
            "type": "rootcause"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "product:PressMaximum Currency Switcher for WooCommerce",
            "keyphrase": "PressMaximum Currency Switcher for WooCommerce",
            "type": "product"
          },
          {
            "id": "version:n/a through 0.0.7",
            "keyphrase": "n/a through 0.0.7",
            "type": "version"
          }
        ]
      },
      "similarity": 194.13401688971922
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "keyphrase_sources": [
          {
            "id": "rootcause:CSRF",
            "keyphrase": "CSRF",
            "type": "rootcause"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "product:PressMaximum Currency Switcher for WooCommerce",
            "keyphrase": "PressMaximum Currency Switcher for WooCommerce",
            "type": "product"
          },
          {
            "id": "version:n/a through 0.0.7",
            "keyphrase": "n/a through 0.0.7",
            "type": "version"
          }
        ]
      },
      "similarity": 190.0429885689641
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse",
        "original_content": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.",
        "keyphrase_sources": [
          {
            "id": "rootcause:CSRF",
            "keyphrase": "CSRF",
            "type": "rootcause"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          },
          {
            "id": "product:PressMaximum Currency Switcher for WooCommerce",
            "keyphrase": "PressMaximum Currency Switcher for WooCommerce",
            "type": "product"
          },
          {
            "id": "version:n/a through 0.0.7",
            "keyphrase": "n/a through 0.0.7",
            "type": "version"
          }
        ]
      },
      "similarity": 187.05377906869825
    },
    {
      "metadata": {
        "doc_id": "1004",
        "name": "Sensitive Cookie Without 'HttpOnly' Flag",
        "source": "sparse",
        "original_content": "The product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag.",
        "keyphrase_sources": [
          {
            "id": "rootcause:CSRF",
            "keyphrase": "CSRF",
            "type": "rootcause"
          },
          {
            "id": "weakness:cross-site scripting",
            "keyphrase": "cross-site scripting",
            "type": "weakness"
          },
          {
            "id": "weakness:XSS",
            "keyphrase": "XSS",
            "type": "weakness"
          }
        ]
      },
      "similarity": 182.39320520087148
    },
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "sparse",
        "original_content": "The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",
        "keyphrase_sources": [
          {
            "id": "version:n/a through 0.0.7",
            "keyphrase": "n/a through 0.0.7",
            "type": "version"
          }
        ]
      },
      "similarity": 68.8128767258631
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "keyphrase_sources": [
          {
            "id": "product:PressMaximum Currency Switcher for WooCommerce",
            "keyphrase": "PressMaximum Currency Switcher for WooCommerce",
            "type": "product"
          }
        ]
      },
      "similarity": 58.53673679486436
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-116",
      "CWE-80",
      "CWE-212",
      "CWE-79",
      "CWE-472",
      "CWE-352",
      "CWE-74",
      "CWE-1391",
      "CWE-184",
      "CWE-425",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "352": [
      {
        "id": "rootcause:CSRF",
        "keyphrase": "CSRF",
        "type": "rootcause"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "product:PressMaximum Currency Switcher for WooCommerce",
        "keyphrase": "PressMaximum Currency Switcher for WooCommerce",
        "type": "product"
      },
      {
        "id": "version:n/a through 0.0.7",
        "keyphrase": "n/a through 0.0.7",
        "type": "version"
      }
    ],
    "434": [
      {
        "id": "rootcause:CSRF",
        "keyphrase": "CSRF",
        "type": "rootcause"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "product:PressMaximum Currency Switcher for WooCommerce",
        "keyphrase": "PressMaximum Currency Switcher for WooCommerce",
        "type": "product"
      },
      {
        "id": "version:n/a through 0.0.7",
        "keyphrase": "n/a through 0.0.7",
        "type": "version"
      }
    ],
    "116": [
      {
        "id": "rootcause:CSRF",
        "keyphrase": "CSRF",
        "type": "rootcause"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "product:PressMaximum Currency Switcher for WooCommerce",
        "keyphrase": "PressMaximum Currency Switcher for WooCommerce",
        "type": "product"
      },
      {
        "id": "version:n/a through 0.0.7",
        "keyphrase": "n/a through 0.0.7",
        "type": "version"
      }
    ],
    "79": [
      {
        "id": "rootcause:CSRF",
        "keyphrase": "CSRF",
        "type": "rootcause"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      },
      {
        "id": "product:PressMaximum Currency Switcher for WooCommerce",
        "keyphrase": "PressMaximum Currency Switcher for WooCommerce",
        "type": "product"
      },
      {
        "id": "version:n/a through 0.0.7",
        "keyphrase": "n/a through 0.0.7",
        "type": "version"
      }
    ],
    "1004": [
      {
        "id": "rootcause:CSRF",
        "keyphrase": "CSRF",
        "type": "rootcause"
      },
      {
        "id": "weakness:cross-site scripting",
        "keyphrase": "cross-site scripting",
        "type": "weakness"
      },
      {
        "id": "weakness:XSS",
        "keyphrase": "XSS",
        "type": "weakness"
      }
    ],
    "89": [
      {
        "id": "product:PressMaximum Currency Switcher for WooCommerce",
        "keyphrase": "PressMaximum Currency Switcher for WooCommerce",
        "type": "product"
      }
    ],
    "22": [
      {
        "id": "version:n/a through 0.0.7",
        "keyphrase": "n/a through 0.0.7",
        "type": "version"
      }
    ]
  }
}