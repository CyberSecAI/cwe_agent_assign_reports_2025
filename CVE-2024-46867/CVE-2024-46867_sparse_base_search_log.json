{
  "method": "sparse_base",
  "query": "In the Linux kernel, the following vulnerability has been resolved drm/xe/client fix deadlock in show_meminfo() There is a real deadlock as well as sleeping in atomic() bug in here, if the bo put happens to be the last ref, since bo destruction wants to grab the same spinlock and sleeping locks. Fix that by dropping the ref using xe_bo_put_deferred(), and moving the final commit outside of the lock. Dropping the lock around the put is tricky since the bo can go out of scope and delete itself from the list, making it difficult to navigate to the next list entry. (cherry picked from commit 0083b8e6f11d7662283a267d4ce7c966812ffd8a)",
  "keyphrases": {
    "base_query": "In the Linux kernel, the following vulnerability has been resolved drm/xe/client fix deadlock in show_meminfo() There is a real deadlock as well as sleeping in atomic() bug in here, if the bo put happens to be the last ref, since bo destruction wants to grab the same spinlock and sleeping locks. Fix that by dropping the ref using xe_bo_put_deferred(), and moving the final commit outside of the lock. Dropping the lock around the put is tricky since the bo can go out of scope and delete itself from the list, making it difficult to navigate to the next list entry. (cherry picked from commit 0083b8e6f11d7662283a267d4ce7c966812ffd8a)"
  },
  "timestamp": "2025-07-12T04:47:27.921909",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "833",
      "name": "Deadlock",
      "score": 188.12703073867615
    },
    {
      "doc_id": "667",
      "name": "Improper Locking",
      "score": 183.75312261595815
    },
    {
      "doc_id": "61",
      "name": "UNIX Symbolic Link (Symlink) Following",
      "score": 176.95842102646037
    },
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 171.00128900133015
    },
    {
      "doc_id": "1390",
      "name": "Weak Authentication",
      "score": 169.78564174659203
    }
  ]
}