{
  "retriever": "dense",
  "query": "In the Linux kernel, the following vulnerability has been resolved page_pool avoid infinite loop to schedule delayed worker We noticed the kworker in page_pool_release_retry() was waken up repeatedly and infinitely in production because of the buggy driver causing the inflight less than 0 and warning us in page_pool_inflight()[1]. Since the inflight value goes negative, it means we should not expect the whole page_pool to get back to work normally. This patch mitigates the adverse effect by not rescheduling the kworker when detecting the inflight negative in page_pool_release_retry(). [1] [Mon Feb 10 203611 2025] ------------[ cut here ]------------ [Mon Feb 10 203611 2025] Negative(-51446) inflight packet-pages ... [Mon Feb 10 203611 2025] Call Trace [Mon Feb 10 203611 2025] page_pool_release_retry+0x23/0x70 [Mon Feb 10 203611 2025] process_one_work+0x1b1/0x370 [Mon Feb 10 203611 2025] worker_thread+0x37/0x3a0 [Mon Feb 10 203611 2025] kthread+0x11a/0x140 [Mon Feb 10 203611 2025] ? process_one_work+0x370/0x370 [Mon Feb 10 203611 2025] ? __kthread_cancel_work+0x40/0x40 [Mon Feb 10 203611 2025] ret_from_fork+0x35/0x40 [Mon Feb 10 203611 2025] ---[ end trace ebffe800f33e7e34 ]--- Note before this patch, the above calltrace would flood the dmesg due to repeated reschedule of release_dw kworker.",
  "keyphrases": {},
  "timestamp": "2025-07-12 13:26:03",
  "cve_id": "CVE-2025-37859",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "type": "Class",
      "score": 0.510120851512817
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "type": "Class",
      "score": 0.5032489399533762
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "type": "Class",
      "score": 0.4928240625978885
    },
    {
      "cwe_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "type": "Base",
      "score": 0.49179811610396307
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "type": "Base",
      "score": 0.4904950843596692
    },
    {
      "cwe_id": "191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "type": "Base",
      "score": 0.4837813908579278
    },
    {
      "cwe_id": "911",
      "name": "Improper Update of Reference Count",
      "type": "Base",
      "score": 0.4761710658878463
    },
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "type": "Base",
      "score": 0.47538094211497295
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "type": "Base",
      "score": 0.4727535627594248
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "type": "Base",
      "score": 0.4710870186944893
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "type": "Base",
      "score": 0.46849073678657105
    },
    {
      "cwe_id": "366",
      "name": "Race Condition within a Thread",
      "type": "Base",
      "score": 0.4658003536507641
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "type": "Variant",
      "score": 0.4656845868772189
    },
    {
      "cwe_id": "606",
      "name": "Unchecked Input for Loop Condition",
      "type": "Base",
      "score": 0.46488128825559943
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "type": "Base",
      "score": 0.4616290023639611
    },
    {
      "cwe_id": "404",
      "name": "Improper Resource Shutdown or Release",
      "type": "Class",
      "score": 0.4602782708400139
    },
    {
      "cwe_id": "193",
      "name": "Off-by-one Error",
      "type": "Base",
      "score": 0.45977427469682797
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "type": "Variant",
      "score": 0.45942378324167177
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "type": "Base",
      "score": 0.45905223919251226
    },
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "type": "Variant",
      "score": 0.45887670348785237
    }
  ]
}