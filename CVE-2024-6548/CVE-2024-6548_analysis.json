{
  "cve_id": "CVE-2024-6548",
  "description": "The Add Admin JavaScript plugin for WordPress is vulnerable to Full Path Disclosure in all versions up to, and including, 2.0. This is due to the plugin **utilizing bootstrap and leaving test files with display_errors on**. This makes it possible for unauthenticated attackers to retrieve the full path of the web application, which can be used to aid other attacks. The information displayed is not useful on its own, and requires another vulnerability to be present for damage to an affected website.",
  "key_phrases": {
    "rootcause": "utilizing bootstrap and leaving test files with display_errors on",
    "weakness": "",
    "impact": "Full Path Disclosure",
    "vector": "",
    "attacker": "unauthenticated attackers",
    "product": "Add Admin WordPress plugin",
    "version": "up to and including 2.0",
    "component": ""
  },
  "reference_content": "Based on the provided content, here's an analysis of CVE-2024-6548:\n\n**Root Cause of Vulnerability:**\n\n*   The vulnerability stems from the \"Add Admin JavaScript\" plugin for WordPress utilizing a `bootstrap.php` test file which has `display_errors` set to 'on'. This setting causes PHP to output errors and warnings, including the full server path.\n\n**Weaknesses/Vulnerabilities Present:**\n\n*   **Full Path Disclosure:** The primary vulnerability is the exposure of the full server path of the web application. This is due to the `display_errors` setting in the `bootstrap.php` file combined with an error that triggers path disclosure.\n\n**Impact of Exploitation:**\n\n*   **Information Disclosure:** An attacker can learn the server's absolute file path, which can be a crucial piece of information for further attacks.\n*   **Aiding Further Exploitation:** The path disclosure does not have a direct impact itself. It can be used to aid in exploiting other vulnerabilities and potentially lead to more severe attacks. As the Wordfence article states, the information displayed is not useful on its own and requires another vulnerability to be present for damage to an affected website.\n\n**Attack Vectors:**\n\n*   **Network:** The attack vector is network-based, meaning the attacker can be remote.\n\n**Required Attacker Capabilities/Position:**\n\n*   **Unauthenticated Access:** The attacker does not need to authenticate to the WordPress site to exploit this vulnerability.\n*   **Basic Network Access:** The attacker needs to be able to send HTTP requests to the affected web server.\n\n**Additional Notes:**\n\n*   The vulnerability is present in all versions of the Add Admin JavaScript plugin up to and including version 2.0.\n*   There is currently no known patch for the vulnerability, and the recommendation is to either uninstall the plugin or implement mitigation strategies, based on the organization's risk tolerance.\n*   The identified vulnerable code is in a test file (`bootstrap.php`) that should not be accessible to the public, however the vulnerability exists due to the presence of the file and the `display_errors` setting.\n\nThis analysis provides a more in-depth understanding of the vulnerability than what's currently available in the CVE description.",
  "similar_info": {
    "cwe_distribution": {
      "95": {
        "cwe_counts": {},
        "total_samples": 3,
        "distribution": [
          {
            "cwes": [],
            "frequency": 3,
            "proportion": 1.0
          }
        ]
      },
      "90": {
        "cwe_counts": {},
        "total_samples": 3,
        "distribution": [
          {
            "cwes": [],
            "frequency": 3,
            "proportion": 1.0
          }
        ]
      },
      "85": {
        "cwe_counts": {},
        "total_samples": 6,
        "distribution": [
          {
            "cwes": [],
            "frequency": 6,
            "proportion": 1.0
          }
        ]
      },
      "80": {
        "cwe_counts": {},
        "total_samples": 6,
        "distribution": [
          {
            "cwes": [],
            "frequency": 6,
            "proportion": 1.0
          }
        ]
      },
      "75": {
        "cwe_counts": {},
        "total_samples": 6,
        "distribution": [
          {
            "cwes": [],
            "frequency": 6,
            "proportion": 1.0
          }
        ]
      },
      "70": {
        "cwe_counts": {},
        "total_samples": 6,
        "distribution": [
          {
            "cwes": [],
            "frequency": 6,
            "proportion": 1.0
          }
        ]
      }
    },
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [
        95,
        90,
        85,
        80,
        75,
        70
      ],
      "total_samples_by_threshold": {
        "95": 3,
        "90": 3,
        "85": 6,
        "80": 6,
        "75": 6,
        "70": 6
      },
      "top_cwes_by_threshold": {
        "95": [],
        "90": [],
        "85": [],
        "80": [],
        "75": [],
        "70": []
      }
    },
    "raw_matches": [
      {
        "similarity": 95,
        "cwes": [],
        "total": 3,
        "frequency": 3,
        "proportion": 1.0
      },
      {
        "similarity": 90,
        "cwes": [],
        "total": 3,
        "frequency": 3,
        "proportion": 1.0
      },
      {
        "similarity": 85,
        "cwes": [],
        "total": 6,
        "frequency": 6,
        "proportion": 1.0
      },
      {
        "similarity": 80,
        "cwes": [],
        "total": 6,
        "frequency": 6,
        "proportion": 1.0
      },
      {
        "similarity": 75,
        "cwes": [],
        "total": 6,
        "frequency": 6,
        "proportion": 1.0
      },
      {
        "similarity": 70,
        "cwes": [],
        "total": 6,
        "frequency": 6,
        "proportion": 1.0
      }
    ]
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {
      "high": [],
      "medium": [],
      "low": []
    },
    "total_samples": 30
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-201 | Insertion of Sensitive Information Into Sent Data | 0.9 | Base | Primary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-201, which is a base-level CWE. Several CWEs were considered, including CWE-425 (Direct Request), CWE-79 (Improper Neutralization of Input During Web Page Generation), and CWE-862 (Missing Authorization). These were rejected because they did not directly address the **root cause** of the vulnerability, which is the exposure of sensitive path information due to improper error handling (`display_errors` being on).\n\n```mermaid\ngraph TD\n    cwe201[\"CWE-201: Insertion of Sensitive Information Into Sent Data\"]\n    cwe425[\"CWE-425: Direct Request ('Forced Browsing')\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation\"]\n    cwe862[\"CWE-862: Missing Authorization\"]\n\n    cwe425 -->|CHILDOF| cwe862\n    \n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe201 primary\n    class cwe425,cwe79,cwe862 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **incorrect configuration** (`display_errors` on in a production environment), leading to the exposure of the full path, and ultimately results in information disclosure.\n\n*   **Root Cause:** `display_errors` set to on in the `bootstrap.php` test file, leading to information leakage.\n*   **Weakness:** Full Path Disclosure (CWE-201)\n*   **Impact:** Information Disclosure, aiding further exploitation.\n\n## Summary of Analysis\nThe analysis identified CWE-201 (Insertion of Sensitive Information Into Sent Data) as the most appropriate CWE for this vulnerability. This decision is primarily based on the CVE Reference Links Content Summary, which highlights the **root cause** as the `display_errors` setting in the `bootstrap.php` file leading to the exposure of the full server path.\n\nThe **rootcause** states: **utilizing bootstrap and leaving test files with display_errors on**. The \"CVE Reference Links Content Summary\" states: \"The vulnerability stems from the \"Add Admin JavaScript\" plugin for WordPress utilizing a `bootstrap.php` test file which has `display_errors` set to 'on'. This setting causes PHP to output errors and warnings, including the full server path.\"\n\nThe high retriever scores of other CWEs like CWE-425, CWE-79, and CWE-862 were considered, but these do not accurately represent the specific **root cause**, which is the insertion of sensitive information (the full path) into the output due to the `display_errors` setting. Therefore, CWE-201 is the most accurate and specific representation of the vulnerability.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-201 | Insertion of Sensitive Information Into Sent Data | 0.9 | Base | Primary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-201, which is a base-level CWE. Several CWEs were considered, including CWE-425 (Direct Request), CWE-79 (Improper Neutralization of Input During Web Page Generation), and CWE-862 (Missing Authorization). These were rejected because they did not directly address the **root cause** of the vulnerability, which is the exposure of sensitive path information due to improper error handling (`display_errors` being on).\n\n```mermaid\ngraph TD\n    cwe201[\"CWE-201: Insertion of Sensitive Information Into Sent Data\"]\n    cwe425[\"CWE-425: Direct Request ('Forced Browsing')\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation\"]\n    cwe862[\"CWE-862: Missing Authorization\"]\n\n    cwe425 -->|CHILDOF| cwe862\n    \n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe201 primary\n    class cwe425,cwe79,cwe862 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **incorrect configuration** (`display_errors` on in a production environment), leading to the exposure of the full path, and ultimately results in information disclosure.\n\n*   **Root Cause:** `display_errors` set to on in the `bootstrap.php` test file, leading to information leakage.\n*   **Weakness:** Full Path Disclosure (CWE-201)\n*   **Impact:** Information Disclosure, aiding further exploitation.\n\n## Summary of Analysis\nThe analysis identified CWE-201 (Insertion of Sensitive Information Into Sent Data) as the most appropriate CWE for this vulnerability. This decision is primarily based on the CVE Reference Links Content Summary, which highlights the **root cause** as the `display_errors` setting in the `bootstrap.php` file leading to the exposure of the full server path.\n\nThe **rootcause** states: **utilizing bootstrap and leaving test files with display_errors on**. The \"CVE Reference Links Content Summary\" states: \"The vulnerability stems from the \"Add Admin JavaScript\" plugin for WordPress utilizing a `bootstrap.php` test file which has `display_errors` set to 'on'. This setting causes PHP to output errors and warnings, including the full server path.\"\n\nThe high retriever scores of other CWEs like CWE-425, CWE-79, and CWE-862 were considered, but these do not accurately represent the specific **root cause**, which is the insertion of sensitive information (the full path) into the output due to the `display_errors` setting. Therefore, CWE-201 is the most accurate and specific representation of the vulnerability.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-79:**\n- 79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')) - ROOT\n\n\n**Chain starting from CWE-201:**\n- 201 (Insertion of Sensitive Information Into Sent Data) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 547.240578974669
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 546.451639810583
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 534.0634705534368
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 531.2657245016554
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 526.4192715348983
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 523.8491686843447
    },
    {
      "metadata": {
        "doc_id": "23",
        "name": "Relative Path Traversal",
        "source": "sparse"
      },
      "similarity": 518.937769620941
    },
    {
      "metadata": {
        "doc_id": "522",
        "name": "Insufficiently Protected Credentials",
        "source": "sparse"
      },
      "similarity": 517.6649740847652
    },
    {
      "metadata": {
        "doc_id": "425",
        "name": "Direct Request ('Forced Browsing')",
        "type": "Base",
        "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
        "keyphrase_source": "rootcause:leaving test files with display_errors on",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5534729088945318,
            "graph": 1.7232734868880493
          }
        }
      },
      "similarity": 0.5534729088945318
    },
    {
      "doc_id": "471",
      "text": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
      "score": 2.7196000000000002,
      "metadata": {
        "doc_id": "471",
        "name": "Modification of Assumed-Immutable Data (MAID)",
        "type": "base",
        "original_content": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
        "relationships": [
          {
            "source_id": "471",
            "target_id": "621",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "607",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "602",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "473",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "472",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "291",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "1321",
            "label": "CANFOLLOW",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "1282",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "664",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "664",
            "target_id": "471",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "621",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "607",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "602",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "473",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "472",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "291",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1321",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1282",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.5599999999999999,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_up",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "425",
                  "471",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "425"
            },
            "abstraction_path_up": {
              "path": [
                [
                  "472",
                  "471",
                  "CHILDOF"
                ]
              ],
              "score": 0.5599999999999999,
              "type": "abstraction_path_up",
              "source": "472"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "425",
                  "471",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "425"
            }
          }
        },
        "abstraction_level": "base",
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.7196000000000002
          }
        }
      },
      "similarity": 2.7196000000000002
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-79",
      "CWE-201",
      "CWE-425",
      "CWE-862"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}