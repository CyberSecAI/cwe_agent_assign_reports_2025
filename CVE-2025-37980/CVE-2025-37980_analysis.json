{
  "cve_id": "CVE-2025-37980",
  "description": "In the Linux kernel, the following vulnerability has been resolved block fix **resource leak** in blk_register_queue() error path When registering a queue fails after blk_mq_sysfs_register() is successful but the function later encounters an error, we need to clean up the blk_mq_sysfs resources. Add the missing blk_mq_sysfs_unregister() call in the error path to properly clean up these resources and prevent a memory leak.",
  "key_phrases": {
    "rootcause": "resource leak",
    "weakness": "",
    "impact": "memory leak",
    "vector": "",
    "attacker": "",
    "product": "Linux kernel",
    "version": "",
    "component": ""
  },
  "reference_content": null,
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-772 | Missing Release of Resource after Effective Lifetime | 0.9 | Base | Allowed | Primary CWE: The **root cause** is a **resource leak** due to a missing release. |\n| CWE-401 | Missing Release of Memory after Effective Lifetime | 0.7 | Variant | Allowed | Secondary candidate: Memory is a specific type of resource that is leaked. |\n| CWE-404 | Improper Resource Shutdown or Release | 0.6 | Class | Allowed-with-Review | Secondary candidate: This is a more general class of the identified weakness. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship is that CWE-401 \"Missing Release of Memory after Effective Lifetime\" is a variant (more specific type) of CWE-772 \"Missing Release of Resource after Effective Lifetime\", which is a child of CWE-404 \"Improper Resource Shutdown or Release\". The vulnerability description clearly points to a **resource leak**, making CWE-772 the most appropriate base level CWE. CWE-401 is also applicable as it is a more specific variant.\n\n```mermaid\ngraph TD\n    cwe772[\"CWE-772: Missing Release of Resource after Effective Lifetime\"]\n    cwe401[\"CWE-401: Missing Release of Memory after Effective Lifetime\"]\n    cwe404[\"CWE-404: Improper Resource Shutdown or Release\"]\n    \n    cwe401 -->|CHILDOF| cwe772\n    cwe772 -->|CHILDOF| cwe404\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe772 primary\n    class cwe401,cwe404 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain is as follows:\n1.  A queue registration fails after `blk_mq_sysfs_register()` is successful.\n2.  The code **fails to release** the allocated `blk_mq_sysfs` resources in the error path (**resource leak**).\n3.  This results in a memory leak.\n\nThe **root cause** is the **missing release of the resource**, which leads to the **resource leak** (CWE-772). The impact is a memory leak, which can be represented by CWE-401.\n\n## Summary of Analysis\nThe analysis is based on the provided vulnerability description and the retriever results. The key evidence is the phrase \"**resource leak** in blk_register_queue() error path\".\n\nThe graph relationships show that CWE-772 is a base CWE, and CWE-401 is a variant of it, representing a specific type of resource leak (memory). CWE-404 is a parent class that is applicable, but less specific.\n\nThe selected CWEs are at the optimal level of specificity because CWE-772 directly addresses the **missing release of a resource**, which is the **root cause**, and CWE-401 specifies the type of resource as memory.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-909: Missing Initialization of Resource\n**Abstraction Level**: Class\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product does not initialize a critical resource.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-226: Sensitive Information in Resource Not Removed Before Reuse\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product releases a resource such as memory or a file so that it can be made available for reuse, but it does not clear or \"zeroize\" the information contained in the resource before the product performs a critical state transition or makes the resource available for reuse by other entities.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-402: Transmission of Private Resources into a New Sphere ('Resource Leak')\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product makes resources available to untrusted parties when those resources are only intended to be accessed by the product.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-404: Improper Resource Shutdown or Release\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product does not release or incorrectly releases a resource before it is made available for re-use.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-772: Missing Release of Resource after Effective Lifetime\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product does not release a resource after its effective lifetime has ended, i.e., after the resource is no longer needed.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-667: Improper Locking\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-401: Missing Release of Memory after Effective Lifetime\n**Abstraction Level**: Variant\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-789: Memory Allocation with Excessive Size Value\n**Abstraction Level**: Variant\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product allocates memory based on an untrusted, large size value, but it does not ensure that the size is within expected limits, allowing arbitrary amounts of memory to be allocated.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-908: Use of Uninitialized Resource\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product uses or accesses a resource that has not been initialized.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-772: Missing Release of Resource after Effective Lifetime\n**Abstraction Level**: Base\n**Similarity Score**: 463.73\n**Source**: sparse\n\n**Description**:\nThe product does not release a resource after its effective lifetime has ended, i.e., after the resource is no longer needed.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-909: Missing Initialization of Resource\n**Abstraction Level**: Class\n**Similarity Score**: 418.68\n**Source**: sparse\n\n**Description**:\nThe product does not initialize a critical resource.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-772 | Missing Release of Resource after Effective Lifetime | 0.9 | Base | Allowed | Primary CWE: The **root cause** is a **resource leak** due to a missing release. |\n| CWE-401 | Missing Release of Memory after Effective Lifetime | 0.7 | Variant | Allowed | Secondary candidate: Memory is a specific type of resource that is leaked. |\n| CWE-404 | Improper Resource Shutdown or Release | 0.6 | Class | Allowed-with-Review | Secondary candidate: This is a more general class of the identified weakness. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship is that CWE-401 \"Missing Release of Memory after Effective Lifetime\" is a variant (more specific type) of CWE-772 \"Missing Release of Resource after Effective Lifetime\", which is a child of CWE-404 \"Improper Resource Shutdown or Release\". The vulnerability description clearly points to a **resource leak**, making CWE-772 the most appropriate base level CWE. CWE-401 is also applicable as it is a more specific variant.\n\n```mermaid\ngraph TD\n    cwe772[\"CWE-772: Missing Release of Resource after Effective Lifetime\"]\n    cwe401[\"CWE-401: Missing Release of Memory after Effective Lifetime\"]\n    cwe404[\"CWE-404: Improper Resource Shutdown or Release\"]\n    \n    cwe401 -->|CHILDOF| cwe772\n    cwe772 -->|CHILDOF| cwe404\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe772 primary\n    class cwe401,cwe404 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain is as follows:\n1.  A queue registration fails after `blk_mq_sysfs_register()` is successful.\n2.  The code **fails to release** the allocated `blk_mq_sysfs` resources in the error path (**resource leak**).\n3.  This results in a memory leak.\n\nThe **root cause** is the **missing release of the resource**, which leads to the **resource leak** (CWE-772). The impact is a memory leak, which can be represented by CWE-401.\n\n## Summary of Analysis\nThe analysis is based on the provided vulnerability description and the retriever results. The key evidence is the phrase \"**resource leak** in blk_register_queue() error path\".\n\nThe graph relationships show that CWE-772 is a base CWE, and CWE-401 is a variant of it, representing a specific type of resource leak (memory). CWE-404 is a parent class that is applicable, but less specific.\n\nThe selected CWEs are at the optimal level of specificity because CWE-772 directly addresses the **missing release of a resource**, which is the **root cause**, and CWE-401 specifies the type of resource as memory.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-909: Missing Initialization of Resource\n**Abstraction Level**: Class\n**Similarity Score**: 0.76\n**Source**: dense\n\n**Description**:\nThe product does not initialize a critical resource.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-226: Sensitive Information in Resource Not Removed Before Reuse\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product releases a resource such as memory or a file so that it can be made available for reuse, but it does not clear or \"zeroize\" the information contained in the resource before the product performs a critical state transition or makes the resource available for reuse by other entities.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-402: Transmission of Private Resources into a New Sphere ('Resource Leak')\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product makes resources available to untrusted parties when those resources are only intended to be accessed by the product.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-404: Improper Resource Shutdown or Release\n**Abstraction Level**: Class\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe product does not release or incorrectly releases a resource before it is made available for re-use.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-772: Missing Release of Resource after Effective Lifetime\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product does not release a resource after its effective lifetime has ended, i.e., after the resource is no longer needed.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-667: Improper Locking\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-401: Missing Release of Memory after Effective Lifetime\n**Abstraction Level**: Variant\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-789: Memory Allocation with Excessive Size Value\n**Abstraction Level**: Variant\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product allocates memory based on an untrusted, large size value, but it does not ensure that the size is within expected limits, allowing arbitrary amounts of memory to be allocated.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-908: Use of Uninitialized Resource\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product uses or accesses a resource that has not been initialized.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-772: Missing Release of Resource after Effective Lifetime\n**Abstraction Level**: Base\n**Similarity Score**: 463.73\n**Source**: sparse\n\n**Description**:\nThe product does not release a resource after its effective lifetime has ended, i.e., after the resource is no longer needed.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-909: Missing Initialization of Resource\n**Abstraction Level**: Class\n**Similarity Score**: 418.68\n**Source**: sparse\n\n**Description**:\nThe product does not initialize a critical resource.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-226:**\n- 226 (Sensitive Information in Resource Not Removed Before Reuse) - ROOT\n\n\n**Chain starting from CWE-402:**\n- 402 (Transmission of Private Resources into a New Sphere ('Resource Leak')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "402",
        "name": "Transmission of Private Resources into a New Sphere ('Resource Leak')",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Resource Leak",
        "match_reason": "exact_match_whole_phrase"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "909",
        "name": "Missing Initialization of Resource",
        "source": "sparse"
      },
      "similarity": 368.12093666171086
    },
    {
      "metadata": {
        "doc_id": "401",
        "name": "Missing Release of Memory after Effective Lifetime",
        "source": "sparse"
      },
      "similarity": 355.94631528911276
    },
    {
      "metadata": {
        "doc_id": "61",
        "name": "UNIX Symbolic Link (Symlink) Following",
        "source": "sparse"
      },
      "similarity": 349.2308440374696
    },
    {
      "metadata": {
        "doc_id": "772",
        "name": "Missing Release of Resource after Effective Lifetime",
        "source": "sparse"
      },
      "similarity": 325.7734694817928
    },
    {
      "metadata": {
        "doc_id": "911",
        "name": "Improper Update of Reference Count",
        "source": "sparse"
      },
      "similarity": 322.3194626526582
    },
    {
      "metadata": {
        "doc_id": "226",
        "name": "Sensitive Information in Resource Not Removed Before Reuse",
        "source": "sparse"
      },
      "similarity": 319.9723236030005
    },
    {
      "metadata": {
        "doc_id": "770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "source": "sparse"
      },
      "similarity": 308.6599305635657
    },
    {
      "metadata": {
        "doc_id": "413",
        "name": "Improper Resource Locking",
        "type": "Base",
        "original_content": "The product does not lock or does not correctly lock a resource when the product must have exclusive access to the resource.",
        "keyphrase_source": "rootcause:resource leak",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.4443810497927093,
            "graph": 1.4721533501228012
          }
        }
      },
      "similarity": 0.4443810497927093
    },
    {
      "doc_id": "390",
      "text": "CWE-390: Detection of Error Condition Without Action",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "390",
        "name": "Detection of Error Condition Without Action",
        "type": "base",
        "original_content": "CWE-390: Detection of Error Condition Without Action",
        "relationships": [
          {
            "source_id": "390",
            "target_id": "401",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "390",
            "target_id": "755",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "81",
            "target_id": "390",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "755",
            "target_id": "390",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "600",
            "target_id": "390",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "401",
            "target_id": "390",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "401",
                  "390",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "401"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "401",
                  "390",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "401"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "390",
                  "401",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "401"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-226",
      "CWE-402",
      "CWE-404",
      "CWE-212",
      "CWE-667",
      "CWE-401",
      "CWE-909",
      "CWE-789",
      "CWE-908",
      "CWE-772"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}