{
  "retriever": "dense",
  "query": "A Regular Expression Denial of Service (ReDoS) vulnerability exists in the lunary-ai/lunary repository, specifically in the compileTextTemplate function. The affected version is git be54057. An attacker can exploit this vulnerability by manipulating the regular expression /{{(.*?)}}/g, causing the server to hang indefinitely and become unresponsive to any requests. This is due to the regular expressions susceptibility to second-degree polynomial time complexity, which can be triggered by a large number of braces in the input.",
  "keyphrases": {
    "weakness": [
      "Regular Expression Denial of Service (ReDoS)"
    ]
  },
  "timestamp": "2025-07-12 08:04:11",
  "cve_id": "CVE-2024-8763",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "1333",
      "name": "Inefficient Regular Expression Complexity",
      "type": "Base",
      "score": 0.6200672695219703
    },
    {
      "cwe_id": "185",
      "name": "Incorrect Regular Expression",
      "type": "Class",
      "score": 0.5208809306974667
    },
    {
      "cwe_id": "777",
      "name": "Regular Expression without Anchors",
      "type": "Variant",
      "score": 0.499581555620502
    },
    {
      "cwe_id": "624",
      "name": "Executable Regular Expression Error",
      "type": "Base",
      "score": 0.4915923873146634
    },
    {
      "cwe_id": "186",
      "name": "Overly Restrictive Regular Expression",
      "type": "Base",
      "score": 0.4863495452752449
    },
    {
      "cwe_id": "625",
      "name": "Permissive Regular Expression",
      "type": "Base",
      "score": 0.47881423913931453
    },
    {
      "cwe_id": "1287",
      "name": "Improper Validation of Specified Type of Input",
      "type": "Base",
      "score": 0.45229273858311125
    },
    {
      "cwe_id": "1336",
      "name": "Improper Neutralization of Special Elements Used in a Template Engine",
      "type": "Base",
      "score": 0.45212963873184076
    },
    {
      "cwe_id": "918",
      "name": "Server-Side Request Forgery (SSRF)",
      "type": "Base",
      "score": 0.4507276237803412
    },
    {
      "cwe_id": "674",
      "name": "Uncontrolled Recursion",
      "type": "Class",
      "score": 0.44953486889458044
    },
    {
      "cwe_id": "150",
      "name": "Improper Neutralization of Escape, Meta, or Control Sequences",
      "type": "Variant",
      "score": 0.4266678143109628
    },
    {
      "cwe_id": "93",
      "name": "Improper Neutralization of CRLF Sequences ('CRLF Injection')",
      "type": "Base",
      "score": 0.4199585409677156
    },
    {
      "cwe_id": "94",
      "name": "Improper Control of Generation of Code ('Code Injection')",
      "type": "Base",
      "score": 0.41990452870962713
    },
    {
      "cwe_id": "617",
      "name": "Reachable Assertion",
      "type": "Base",
      "score": 0.41946072357379954
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "type": "Base",
      "score": 0.41893818648857395
    },
    {
      "cwe_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "type": "Base",
      "score": 0.41832318140170577
    },
    {
      "cwe_id": "943",
      "name": "Improper Neutralization of Special Elements in Data Query Logic",
      "type": "Class",
      "score": 0.41680226101249696
    },
    {
      "cwe_id": "1427",
      "name": "Improper Neutralization of Input Used for LLM Prompting",
      "type": "Base",
      "score": 0.4157183830689529
    },
    {
      "cwe_id": "917",
      "name": "Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')",
      "type": "Base",
      "score": 0.41500912721110184
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "type": "Base",
      "score": 0.41378946686153595
    }
  ]
}