{
  "cve_id": "CVE-2025-45616",
  "description": "**Incorrect access control** in the /admin/** API of brcc v1.2.0 allows attackers to gain access to Admin rights via a crafted request.",
  "key_phrases": {
    "rootcause": "Incorrect access control",
    "weakness": "",
    "impact": "gain access to Admin rights",
    "vector": "crafted request",
    "attacker": "attackers",
    "product": "brcc",
    "version": "v1.2.0",
    "component": "/admin/** API"
  },
  "reference_content": "## Analysis of CVE-2025-45616 Content\n\nBased on the provided content, this relates to a potential vulnerability in the brcc project.\n\n**Root cause of vulnerability:**\n\nThe root cause is the use of `request.getRequestURI()` to obtain the request path without proper parsing of special symbols. This, combined with a misconfigured `contextPath` in the application's configuration (e.g., `/v2`), allows an attacker to bypass authentication checks.\n\n**Weaknesses/vulnerabilities present:**\n\n*   Incorrect Access Control\n*   Authentication Bypass\n\n**Impact of exploitation:**\n\nAn attacker can access `/admin/**` API endpoints without any token, potentially exposing private information.\n\n**Attack vectors:**\n\n*   Exploiting a misconfigured `contextPath` in the application's configuration.\n*   Directly accessing admin API endpoints with the `contextPath` prefix (e.g., `http://127.0.0.1:8080/v2/admin/queryUser`).\n\n**Required attacker capabilities/position:**\n\n*   Knowledge of the application's configuration, specifically the `contextPath`.\n*   Ability to craft a malicious URL with the correct `contextPath` prefix.\n*   No authentication required.\n\n**Mitigation or fix:**\n\nThe content does not explicitly state a fix, but implies that proper parsing of request paths and careful configuration of the `contextPath` are necessary to prevent this vulnerability.  Specifically, avoid including the `contextPath` in the `noAuths` list.\n\n**More detail than official CVE description:**\n\nYes, the content provides significantly more detail than a placeholder CVE description. It includes:\n\n*   Specific code references (`com.baidu.brcc.config.UserAuthFilter`, `doFilter` function).\n*   Screenshots of the relevant code sections.\n*   A detailed explanation of how the vulnerability can be reproduced.\n*   A specific example of a vulnerable configuration (`context-path` as `/v2`).",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-863 | Incorrect Authorization | 0.9 | Class | Primary | Allowed-with-Review |\n| CWE-306 | Missing Authentication for Critical Function | 0.7 | Base | Secondary | Allowed |\n| CWE-425 | Direct Request ('Forced Browsing') | 0.6 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary CWE, CWE-863 (Incorrect Authorization), is a Class-level CWE. The analysis also identified CWE-306 (Missing Authentication for Critical Function) and CWE-425 (Direct Request ('Forced Browsing')) as secondary CWEs, both at the Base level. These are all related to access control issues, with CWE-306 focusing on the absence of authentication and CWE-425 focusing on direct requests bypassing authorization.\n\n```mermaid\ngraph TD\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    cwe425[\"CWE-425: Direct Request ('Forced Browsing')\"]\n    cwe285[\"CWE-285: Improper Authorization\"]\n\n    cwe863 -->|CHILDOF| cwe285\n    cwe306 -->|PEEROF| cwe863\n    cwe425 -->|PEEROF| cwe863\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe863 primary\n    class cwe306,cwe425 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **incorrect access control**, leading to the ability to gain admin rights. The chain involves a misconfigured context path that results in authentication bypass.\n\n**Chain:** **Incorrect Access Control** (CWE-863) -> Missing Authentication (CWE-306) -> Direct Request bypassing Authorization (CWE-425) -> Gain Admin Rights (Impact).\n\n## Summary of Analysis\nThe initial assessment points to an access control issue in the brcc application's /admin/** API. The key phrase \"**Incorrect access control**\" strongly indicates a problem with how permissions are managed. The vulnerability allows attackers to \"gain access to Admin rights via a crafted request.\"\n\nThe CVE Reference Links Content Summary provides significant additional details. The root cause is the use of `request.getRequestURI()` without proper parsing, combined with a misconfigured `contextPath`. This allows bypassing authentication checks and accessing /admin/** endpoints without a token.\n\nThe Retriever Results suggest several candidate CWEs. CWE-425 (Direct Request ('Forced Browsing')) has a high rank, but the core issue is not simply a direct request; it's the **incorrect authorization** that allows the request to succeed. CWE-306 (Missing Authentication for Critical Function) is also a possibility, but the evidence suggests that the application attempts to authenticate, but the authentication is bypassed due to the misconfiguration. CWE-863 (Incorrect Authorization) seems more fitting as the primary cause.\n\nGiven this additional context, CWE-863 (Incorrect Authorization) is the most appropriate primary CWE. The application performs an authorization check, but it does so incorrectly, allowing unauthorized access. CWE-306 (Missing Authentication for Critical Function) and CWE-425 (Direct Request ('Forced Browsing')) are secondary issues.\n\n*   **CWE-863: Incorrect Authorization**\n    *   **Technical Explanation:** The application attempts to perform authorization but fails to do so correctly. In this case, the vulnerability description and content summary reveal that the `request.getRequestURI()` function is being used without proper parsing, combined with a misconfigured `contextPath`, which leads to bypassing the authentication. The application logic intended to restrict access to the `/admin/**` API is present but flawed.\n    *   **Security Implications:** Attackers can bypass intended access controls and gain administrative privileges.\n    *   **Relationship Analysis:** CWE-863 is a child of CWE-285 (Improper Authorization), indicating a more specific type of authorization failure.\n    *   **Mapping Guidance Influence:** The guidance suggests using CWE-863 when the authorization check exists but is flawed.\n*   **CWE-306: Missing Authentication for Critical Function**\n    *   **Technical Explanation:** While not the primary cause, the authentication bypass due to the misconfigured `contextPath` means that, effectively, no authentication is performed for the `/admin/**` API in certain cases.\n    *   **Security Implications:** Attackers can access sensitive functionality without providing credentials.\n    *   **Relationship Analysis:** CWE-306 is a base-level CWE indicating a lack of authentication.\n    *   **Mapping Guidance Influence:** The guidance suggests using CWE-306 when no identity validation is enforced for sensitive functionality.\n*   **CWE-425: Direct Request ('Forced Browsing')**\n    *   **Technical Explanation:** The attackers can directly access the admin API endpoints with the `contextPath` prefix, which bypasses the authentication checks.\n    *   **Security Implications:** Unauthorized access to sensitive resources.\n    *   **Relationship Analysis:** Child of CWE-288 (Improper Authentication) and CWE-862 (Missing Authorization).\n    *   **Mapping Guidance Influence:** The guidance suggests using CWE-425 when the web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\nCWEs Considered but Not Used:\n\n*   CWE-284: Improper Access Control - This is a high-level CWE and less specific than CWE-863, making CWE-863 a better fit.\n*   CWE-285: Improper Authorization - While related to authorization, CWE-863 is a more specific type of authorization failure, making it a better choice.\n*   CWE-472: External Control of Assumed-Immutable Web Parameter - This doesn't seem to be applicable to the vulnerability description.\n*   CWE-807: Reliance on Untrusted Inputs in a Security Decision - While relevant, the core issue here is the **incorrect authorization**, so CWE-863 is more appropriate.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-863 | Incorrect Authorization | 0.9 | Class | Primary | Allowed-with-Review |\n| CWE-306 | Missing Authentication for Critical Function | 0.7 | Base | Secondary | Allowed |\n| CWE-425 | Direct Request ('Forced Browsing') | 0.6 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary CWE, CWE-863 (Incorrect Authorization), is a Class-level CWE. The analysis also identified CWE-306 (Missing Authentication for Critical Function) and CWE-425 (Direct Request ('Forced Browsing')) as secondary CWEs, both at the Base level. These are all related to access control issues, with CWE-306 focusing on the absence of authentication and CWE-425 focusing on direct requests bypassing authorization.\n\n```mermaid\ngraph TD\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    cwe425[\"CWE-425: Direct Request ('Forced Browsing')\"]\n    cwe285[\"CWE-285: Improper Authorization\"]\n\n    cwe863 -->|CHILDOF| cwe285\n    cwe306 -->|PEEROF| cwe863\n    cwe425 -->|PEEROF| cwe863\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe863 primary\n    class cwe306,cwe425 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **incorrect access control**, leading to the ability to gain admin rights. The chain involves a misconfigured context path that results in authentication bypass.\n\n**Chain:** **Incorrect Access Control** (CWE-863) -> Missing Authentication (CWE-306) -> Direct Request bypassing Authorization (CWE-425) -> Gain Admin Rights (Impact).\n\n## Summary of Analysis\nThe initial assessment points to an access control issue in the brcc application's /admin/** API. The key phrase \"**Incorrect access control**\" strongly indicates a problem with how permissions are managed. The vulnerability allows attackers to \"gain access to Admin rights via a crafted request.\"\n\nThe CVE Reference Links Content Summary provides significant additional details. The root cause is the use of `request.getRequestURI()` without proper parsing, combined with a misconfigured `contextPath`. This allows bypassing authentication checks and accessing /admin/** endpoints without a token.\n\nThe Retriever Results suggest several candidate CWEs. CWE-425 (Direct Request ('Forced Browsing')) has a high rank, but the core issue is not simply a direct request; it's the **incorrect authorization** that allows the request to succeed. CWE-306 (Missing Authentication for Critical Function) is also a possibility, but the evidence suggests that the application attempts to authenticate, but the authentication is bypassed due to the misconfiguration. CWE-863 (Incorrect Authorization) seems more fitting as the primary cause.\n\nGiven this additional context, CWE-863 (Incorrect Authorization) is the most appropriate primary CWE. The application performs an authorization check, but it does so incorrectly, allowing unauthorized access. CWE-306 (Missing Authentication for Critical Function) and CWE-425 (Direct Request ('Forced Browsing')) are secondary issues.\n\n*   **CWE-863: Incorrect Authorization**\n    *   **Technical Explanation:** The application attempts to perform authorization but fails to do so correctly. In this case, the vulnerability description and content summary reveal that the `request.getRequestURI()` function is being used without proper parsing, combined with a misconfigured `contextPath`, which leads to bypassing the authentication. The application logic intended to restrict access to the `/admin/**` API is present but flawed.\n    *   **Security Implications:** Attackers can bypass intended access controls and gain administrative privileges.\n    *   **Relationship Analysis:** CWE-863 is a child of CWE-285 (Improper Authorization), indicating a more specific type of authorization failure.\n    *   **Mapping Guidance Influence:** The guidance suggests using CWE-863 when the authorization check exists but is flawed.\n*   **CWE-306: Missing Authentication for Critical Function**\n    *   **Technical Explanation:** While not the primary cause, the authentication bypass due to the misconfigured `contextPath` means that, effectively, no authentication is performed for the `/admin/**` API in certain cases.\n    *   **Security Implications:** Attackers can access sensitive functionality without providing credentials.\n    *   **Relationship Analysis:** CWE-306 is a base-level CWE indicating a lack of authentication.\n    *   **Mapping Guidance Influence:** The guidance suggests using CWE-306 when no identity validation is enforced for sensitive functionality.\n*   **CWE-425: Direct Request ('Forced Browsing')**\n    *   **Technical Explanation:** The attackers can directly access the admin API endpoints with the `contextPath` prefix, which bypasses the authentication checks.\n    *   **Security Implications:** Unauthorized access to sensitive resources.\n    *   **Relationship Analysis:** Child of CWE-288 (Improper Authentication) and CWE-862 (Missing Authorization).\n    *   **Mapping Guidance Influence:** The guidance suggests using CWE-425 when the web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\nCWEs Considered but Not Used:\n\n*   CWE-284: Improper Access Control - This is a high-level CWE and less specific than CWE-863, making CWE-863 a better fit.\n*   CWE-285: Improper Authorization - While related to authorization, CWE-863 is a more specific type of authorization failure, making it a better choice.\n*   CWE-472: External Control of Assumed-Immutable Web Parameter - This doesn't seem to be applicable to the vulnerability description.\n*   CWE-807: Reliance on Untrusted Inputs in a Security Decision - While relevant, the core issue here is the **incorrect authorization**, so CWE-863 is more appropriate.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-288:**\n- 288 (Authentication Bypass Using an Alternate Path or Channel) - ROOT\n\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "425",
        "name": "Direct Request ('Forced Browsing')",
        "source": "sparse"
      },
      "similarity": 176.00211888439276
    },
    {
      "metadata": {
        "doc_id": "472",
        "name": "External Control of Assumed-Immutable Web Parameter",
        "source": "sparse"
      },
      "similarity": 174.5335422420795
    },
    {
      "metadata": {
        "doc_id": "284",
        "name": "Improper Access Control",
        "source": "sparse"
      },
      "similarity": 173.05718217518162
    },
    {
      "metadata": {
        "doc_id": "807",
        "name": "Reliance on Untrusted Inputs in a Security Decision",
        "source": "sparse"
      },
      "similarity": 169.8234227521159
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 168.48798893636106
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 167.36481876965058
    },
    {
      "metadata": {
        "doc_id": "287",
        "name": "Improper Authentication",
        "source": "sparse"
      },
      "similarity": 166.3644905456876
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 165.5178318738412
    },
    {
      "metadata": {
        "doc_id": "1220",
        "name": "Insufficient Granularity of Access Control",
        "type": "Base",
        "original_content": "The product implements access controls via a policy or other feature with the intention to disable or restrict accesses (reads and/or writes) to assets in a system from untrusted agents. However, implemented access controls lack required granularity, which renders the control policy too broad because it allows accesses from unauthorized agents to the security-sensitive assets.",
        "keyphrase_source": "rootcause:Incorrect access control",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5353244587909443,
            "graph": 1.7357680033547933
          }
        }
      },
      "similarity": 0.5353244587909443
    },
    {
      "doc_id": "471",
      "text": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
      "score": 2.7196000000000002,
      "metadata": {
        "doc_id": "471",
        "name": "Modification of Assumed-Immutable Data (MAID)",
        "type": "base",
        "original_content": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
        "relationships": [
          {
            "source_id": "471",
            "target_id": "621",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "607",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "602",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "473",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "472",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "291",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "1321",
            "label": "CANFOLLOW",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "1282",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "664",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "664",
            "target_id": "471",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "621",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "607",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "602",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "473",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "472",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "291",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1321",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1282",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.5599999999999999,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_up",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "425",
                  "471",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "425"
            },
            "abstraction_path_up": {
              "path": [
                [
                  "472",
                  "471",
                  "CHILDOF"
                ]
              ],
              "score": 0.5599999999999999,
              "type": "abstraction_path_up",
              "source": "472"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "425",
                  "471",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "425"
            }
          }
        },
        "abstraction_level": "base",
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.7196000000000002
          }
        }
      },
      "similarity": 2.7196000000000002
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-288",
      "CWE-863",
      "CWE-862",
      "CWE-306",
      "CWE-472",
      "CWE-285",
      "CWE-284",
      "CWE-807",
      "CWE-425"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}