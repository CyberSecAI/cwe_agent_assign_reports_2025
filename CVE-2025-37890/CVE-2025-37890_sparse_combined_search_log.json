{
  "method": "sparse_combined",
  "query": "In the Linux kernel, the following vulnerability has been resolved net_sched hfsc Fix a UAF vulnerability in class with netem as child qdisc As described in Gerrards report [1], we have a UAF case when an hfsc class has a netem child qdisc. The crux of the issue is that hfsc is assuming that checking for cl->qdisc->q.qlen == 0 guarantees that it hasnt inserted the class in the vttree or eltree (which is not true for the netem duplicate case). This patch checks the n_active class variable to make sure that the code wont insert the class in the vttree or eltree twice, catering for the reentrant case. [1] https//lore.kernel.org/netdev/CAHcdcOm+03OD2j6R0=YHKqmy=VgJ8xEOKuP6c7mSgnp-TEJJbw@mail.gmail.com/",
  "keyphrases": {
    "weakness": [
      "UAF vulnerability",
      "use after free"
    ]
  },
  "timestamp": "2025-07-12T13:27:45.418611",
  "results_count": 12,
  "results_summary": [
    {
      "doc_id": "416",
      "name": "Use After Free",
      "score": 800.0
    },
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 546.5580299195722
    },
    {
      "doc_id": "1333",
      "name": "Inefficient Regular Expression Complexity",
      "score": 521.5461920486857
    },
    {
      "doc_id": "667",
      "name": "Improper Locking",
      "score": 520.9078838065025
    },
    {
      "doc_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "score": 513.234402073722
    }
  ]
}