{
  "cve_id": "CVE-2024-9821",
  "description": "The Bot for Telegram on WooCommerce plugin for WordPress is vulnerable to sensitive information disclosure due to **missing authorization checks** on the stm_wpcfto_get_settings AJAX action in all versions up to, and including, 1.2.4. This makes it possible for authenticated attackers, with subscriber-level access and above, to view the Telegram Bot Token, a secret token used to control the bot, which can then be used to log in as any existing user on the site, such as an administrator, if they know the username, due to the Login with Telegram feature.",
  "key_phrases": {
    "rootcause": "missing authorization checks",
    "weakness": "",
    "impact": [
      "information disclosure",
      "log in as any existing user",
      "view the Telegram Bot Token"
    ],
    "vector": "",
    "attacker": "authenticated attackers",
    "product": "Bot for Telegram on WooCommerce plugin",
    "version": "all versions up to and including 1.2.4",
    "component": "stm_wpcfto_get_settings AJAX action"
  },
  "reference_content": "Based on the provided content, here's a breakdown of the vulnerability:\n\n**CVE ID:** CVE-2024-9821\n\n**Root Cause of Vulnerability:**\nThe vulnerability stems from a missing authorization check on the `stm_wpcfto_get_settings` AJAX action within the \"Bot for Telegram on WooCommerce\" WordPress plugin. This allows any authenticated user, including those with subscriber-level access, to trigger this action.\n\n**Weaknesses/Vulnerabilities Present:**\n- **Inadequate Authorization:** The core weakness is the lack of proper access control on the `stm_wpcfto_get_settings` AJAX action. This action is intended to retrieve plugin settings, but no checks are performed to ensure the requesting user has the necessary permissions.\n- **Sensitive Information Disclosure:** The lack of authorization leads to the disclosure of sensitive information, specifically the Telegram Bot Token.\n- **Authentication Bypass:** The exposed Telegram Bot Token can be used to log in as any existing user via the plugin's \"Login with Telegram\" functionality.\n\n**Impact of Exploitation:**\n- **Information Disclosure:** Attackers can obtain the Telegram Bot Token.\n- **Complete Account Takeover:** By using the leaked token and knowledge of a user's username, an attacker can log in as that user, gaining complete control over their account, even an administrative account. This leads to a full compromise of the WordPress site.\n\n**Attack Vectors:**\n- **Network Access:** The attack vector is network-based, utilizing HTTP requests to the WordPress site's AJAX endpoint.\n- **Authenticated User Required:** The attacker needs to be an authenticated user with at least subscriber-level privileges.\n\n**Required Attacker Capabilities/Position:**\n- **WordPress User Account:** The attacker needs a valid user account on the WordPress site, even with basic permissions like \"subscriber\".\n- **Knowledge of Target Usernames:** To leverage the disclosed token for unauthorized logins, the attacker needs to know the usernames of targeted user accounts.\n\n**Additional Notes:**\n- The vulnerable code is located in the `helpers.php` file of the plugin, specifically in the function hooked to the `wp_ajax_stm_wpcfto_get_settings` action.\n- The `wpcfto_get_settings_map` function retrieves and returns settings based on the 'source' and 'name' parameters. When the source is 'settings', it retrieves the plugin's settings from the database, potentially including the sensitive Telegram Bot Token if it's configured within settings.\n- The provided code snippet from `plugins.trac.wordpress.org` shows the vulnerable code (line 54) and surrounding context.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-862 | Missing Authorization | 1.0 | Class |  | Allowed-with-Review, Primary CWE |\n| CWE-306 | Missing Authentication for Critical Function | 0.7 | Base |  | Allowed, Secondary Candidate |\n| CWE-639 | Authorization Bypass Through User-Controlled Key | 0.6 | Base |  | Allowed, Secondary Candidate |\n| CWE-285 | Improper Authorization | 0.5 | Class |  | Discouraged, Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-862, indicating a **missing authorization** check. CWE-862 is a class-level CWE. Although the vulnerability description indicates that an authenticated user needs to be present, the core issue is that there's no check to ensure the user has the necessary privileges to access the `stm_wpcfto_get_settings` AJAX action. The other CWEs considered were CWE-306, CWE-639, and CWE-285.\n\n```mermaid\ngraph TD\n    cwe862[\"CWE-862: Missing Authorization\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    cwe639[\"CWE-639: Authorization Bypass Through User-Controlled Key\"]\n    cwe285[\"CWE-285: Improper Authorization\"]\n    cwe284[\"CWE-284: Improper Access Control\"]\n\n    cwe862 -->|CHILDOF| cwe284\n    cwe306 -->|CHILDOF| cwe287\n    cwe639 -->|CHILDOF| cwe285\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe862 primary\n    class cwe306,cwe639,cwe285 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain begins with the **missing authorization check** (CWE-862) on the `stm_wpcfto_get_settings` AJAX action. This leads to sensitive information disclosure (the Telegram Bot Token), which can then be used to bypass authentication and log in as any existing user, resulting in complete account takeover and full compromise of the WordPress site.\n\n## Summary of Analysis\nThe initial assessment focused on the **missing authorization check** as the root cause, aligning with CWE-862. The retriever results and the provided context both support this classification. The vulnerability description explicitly mentions \"**missing authorization checks**\" on the AJAX action, which directly corresponds to CWE-862. The information provided is sufficient to make a confident decision. The other CWEs considered were rejected or marked as secondary candidates because they did not fit the description as well as CWE-862. Specifically, while CWE-306 (Missing Authentication) was considered, the presence of an authenticated user already excludes that as the primary weakness; it is the **lack of authorization** after authentication that is the core issue. The selection of CWE-862 is at the optimal level of specificity because it directly addresses the **missing authorization** problem without being overly broad or abstract. The \"**missing authorization checks**\" vulnerability description key phrase supports this.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-862: Missing Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 1993.96\n**Source**: sparse\n\n**Description**:\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-306: Missing Authentication for Critical Function\n**Abstraction Level**: Base\n**Similarity Score**: 1965.29\n**Source**: sparse\n\n**Description**:\nThe product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-639: Authorization Bypass Through User-Controlled Key\n**Abstraction Level**: Base\n**Similarity Score**: 2030.87\n**Source**: sparse\n\n**Description**:\nThe system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-285: Improper Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 2039.35\n**Source**: sparse\n\n**Description**:\nThe product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-285 is high-level and lower-level CWEs can frequently be used instead. It is a level-1 Class (i.e., a child of a Pillar).",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-862 | Missing Authorization | 1.0 | Class |  | Allowed-with-Review, Primary CWE |\n| CWE-306 | Missing Authentication for Critical Function | 0.7 | Base |  | Allowed, Secondary Candidate |\n| CWE-639 | Authorization Bypass Through User-Controlled Key | 0.6 | Base |  | Allowed, Secondary Candidate |\n| CWE-285 | Improper Authorization | 0.5 | Class |  | Discouraged, Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-862, indicating a **missing authorization** check. CWE-862 is a class-level CWE. Although the vulnerability description indicates that an authenticated user needs to be present, the core issue is that there's no check to ensure the user has the necessary privileges to access the `stm_wpcfto_get_settings` AJAX action. The other CWEs considered were CWE-306, CWE-639, and CWE-285.\n\n```mermaid\ngraph TD\n    cwe862[\"CWE-862: Missing Authorization\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    cwe639[\"CWE-639: Authorization Bypass Through User-Controlled Key\"]\n    cwe285[\"CWE-285: Improper Authorization\"]\n    cwe284[\"CWE-284: Improper Access Control\"]\n\n    cwe862 -->|CHILDOF| cwe284\n    cwe306 -->|CHILDOF| cwe287\n    cwe639 -->|CHILDOF| cwe285\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe862 primary\n    class cwe306,cwe639,cwe285 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain begins with the **missing authorization check** (CWE-862) on the `stm_wpcfto_get_settings` AJAX action. This leads to sensitive information disclosure (the Telegram Bot Token), which can then be used to bypass authentication and log in as any existing user, resulting in complete account takeover and full compromise of the WordPress site.\n\n## Summary of Analysis\nThe initial assessment focused on the **missing authorization check** as the root cause, aligning with CWE-862. The retriever results and the provided context both support this classification. The vulnerability description explicitly mentions \"**missing authorization checks**\" on the AJAX action, which directly corresponds to CWE-862. The information provided is sufficient to make a confident decision. The other CWEs considered were rejected or marked as secondary candidates because they did not fit the description as well as CWE-862. Specifically, while CWE-306 (Missing Authentication) was considered, the presence of an authenticated user already excludes that as the primary weakness; it is the **lack of authorization** after authentication that is the core issue. The selection of CWE-862 is at the optimal level of specificity because it directly addresses the **missing authorization** problem without being overly broad or abstract. The \"**missing authorization checks**\" vulnerability description key phrase supports this.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-862: Missing Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 1993.96\n**Source**: sparse\n\n**Description**:\nThe product does not perform an authorization check when an actor attempts to access a resource or perform an action.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-306: Missing Authentication for Critical Function\n**Abstraction Level**: Base\n**Similarity Score**: 1965.29\n**Source**: sparse\n\n**Description**:\nThe product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-639: Authorization Bypass Through User-Controlled Key\n**Abstraction Level**: Base\n**Similarity Score**: 2030.87\n**Source**: sparse\n\n**Description**:\nThe system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-285: Improper Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 2039.35\n**Source**: sparse\n\n**Description**:\nThe product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-285 is high-level and lower-level CWEs can frequently be used instead. It is a level-1 Class (i.e., a child of a Pillar).\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-862:**\n- 862 (Missing Authorization) - ROOT\n\n\n**Chain starting from CWE-639:**\n- 639 (Authorization Bypass Through User-Controlled Key) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "284",
        "name": "Improper Access Control",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Authorization",
        "match_reason": "term_in_phrase_whole_phrase"
      },
      "similarity": 800.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 672.2736579575288
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 660.8341401475567
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 641.2723211657069
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 609.7067944014941
    },
    {
      "metadata": {
        "doc_id": "639",
        "name": "Authorization Bypass Through User-Controlled Key",
        "source": "sparse"
      },
      "similarity": 600.417310172768
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 581.7884721807965
    },
    {
      "metadata": {
        "doc_id": "287",
        "name": "Improper Authentication",
        "source": "sparse"
      },
      "similarity": 564.5658116048489
    },
    {
      "metadata": {
        "doc_id": "472",
        "name": "External Control of Assumed-Immutable Web Parameter",
        "type": "Base",
        "original_content": "The web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.",
        "keyphrase_source": "rootcause:missing authorization checks",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.4954099373191032,
            "graph": 2.0515654831455183
          }
        }
      },
      "similarity": 0.4954099373191032
    },
    {
      "doc_id": "471",
      "text": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
      "score": 2.7196000000000002,
      "metadata": {
        "doc_id": "471",
        "name": "Modification of Assumed-Immutable Data (MAID)",
        "type": "base",
        "original_content": "CWE-471: Modification of Assumed-Immutable Data (MAID)",
        "relationships": [
          {
            "source_id": "471",
            "target_id": "621",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "607",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "602",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "473",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "472",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "291",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "1321",
            "label": "CANFOLLOW",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "1282",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "664",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "664",
            "target_id": "471",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "621",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "607",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "602",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "473",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "472",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "291",
            "target_id": "471",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1321",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1282",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.5599999999999999,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_up",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "425",
                  "471",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "425"
            },
            "abstraction_path_up": {
              "path": [
                [
                  "472",
                  "471",
                  "CHILDOF"
                ]
              ],
              "score": 0.5599999999999999,
              "type": "abstraction_path_up",
              "source": "472"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "425",
                  "471",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "425"
            }
          }
        },
        "abstraction_level": "base",
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.7196000000000002
          }
        }
      },
      "similarity": 2.7196000000000002
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-862",
      "CWE-639",
      "CWE-306",
      "CWE-285",
      "CWE-284"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}