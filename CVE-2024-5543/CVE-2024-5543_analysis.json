{
  "cve_id": "CVE-2024-5543",
  "description": "The Slideshow Gallery LITE plugin for WordPress is vulnerable to **time-based SQL Injection** via the id parameter in all versions up to, and including, 1.8.1 due to **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**. This makes it possible for authenticated attackers, with Contributor-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.",
  "key_phrases": {
    "rootcause": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
    "weakness": "time-based SQL Injection",
    "impact": [
      "extract sensitive information from the database",
      "information disclosure"
    ],
    "vector": "",
    "attacker": "authenticated attackers",
    "product": "Slideshow Gallery LITE plugin for WordPress",
    "version": "up to and including 1.8.1",
    "component": "id parameter"
  },
  "reference_content": "Based on the provided content, here's a breakdown of the vulnerability:\n\n**CVE ID:** CVE-2024-5543\n\n**Root Cause:**\nThe vulnerability stems from insufficient sanitization of the `id` parameter within the Slideshow Gallery LITE plugin's shortcode functionality. The plugin fails to properly escape user-supplied input within the shortcode's SQL queries, leading to SQL injection vulnerability.\n\n**Weaknesses/Vulnerabilities Present:**\n- **SQL Injection:**  The primary vulnerability is time-based SQL Injection, where an attacker can inject arbitrary SQL code by manipulating the `id` parameter within the shortcode. The lack of proper sanitization and preparation of the SQL query allows for this injection.\n\n**Impact of Exploitation:**\n- **Data Breach:** Attackers can extract sensitive information from the database.\n- **Data Modification:** Attackers can potentially modify or delete data within the database.\n- **Denial of Service:** The vulnerability may allow attackers to cause database errors or slowdowns impacting the performance of the site.\n\n**Attack Vectors:**\n- The vulnerability is exploitable through the `id` parameter within the shortcode functionality of the plugin. This is available wherever the shortcode is used in the WordPress site.\n\n**Required Attacker Capabilities/Position:**\n- **Authentication:** The attacker needs to be authenticated as a WordPress user with at least \"Contributor\" level privileges.\n- **Network Access:** Requires network access to the vulnerable WordPress site to inject the malicious SQL through the shortcode.\n\n**Technical Details:**\n- The vulnerability lies in the `slideshow-gallery.php` file of the plugin.\n- Specifically, the vulnerable code is within the `embed` function of the `SlideshowGallery` class, before the sanitization added in version 1.8.2\n- The parameter `id` was not sanitized allowing injection of SQL code into the database query.\n- The plugin uses shortcodes, so this vulnerability is exploitable on any page/post where a shortcode for the Slideshow Gallery LITE plugin is placed\n\n**Additional Information:**\n\n- The vulnerability was discovered by Krzysztof Zaj\u0105c from CERT PL.\n- The vulnerability is patched in version 1.8.2 of the Slideshow Gallery LITE plugin. The patch sanitizes the shortcode attributes before using them in the SQL queries.\n- The provided diffs in the `plugins.trac.wordpress.org` content show the code changes made in version 1.8.2 to fix the vulnerability, specifically the addition of input sanitization using `sanitize_text_field` and `intval`.",
  "similar_info": {
    "cwe_distribution": {
      "95": {
        "cwe_counts": {},
        "total_samples": 1,
        "distribution": [
          {
            "cwes": [],
            "frequency": 1,
            "proportion": 1.0
          }
        ]
      },
      "90": {
        "cwe_counts": {},
        "total_samples": 3,
        "distribution": [
          {
            "cwes": [],
            "frequency": 3,
            "proportion": 1.0
          }
        ]
      },
      "85": {
        "cwe_counts": {
          "CWE-89": 1
        },
        "total_samples": 4,
        "distribution": [
          {
            "cwes": [],
            "frequency": 3,
            "proportion": 0.75
          },
          {
            "cwes": [
              "CWE-89"
            ],
            "frequency": 1,
            "proportion": 0.25
          }
        ]
      },
      "80": {
        "cwe_counts": {
          "CWE-89": 2
        },
        "total_samples": 6,
        "distribution": [
          {
            "cwes": [],
            "frequency": 4,
            "proportion": 0.667
          },
          {
            "cwes": [
              "CWE-89"
            ],
            "frequency": 2,
            "proportion": 0.333
          }
        ]
      },
      "75": {
        "cwe_counts": {
          "CWE-89": 2
        },
        "total_samples": 6,
        "distribution": [
          {
            "cwes": [],
            "frequency": 4,
            "proportion": 0.667
          },
          {
            "cwes": [
              "CWE-89"
            ],
            "frequency": 2,
            "proportion": 0.333
          }
        ]
      },
      "70": {
        "cwe_counts": {
          "CWE-89": 2
        },
        "total_samples": 5,
        "distribution": [
          {
            "cwes": [],
            "frequency": 3,
            "proportion": 0.6
          },
          {
            "cwes": [
              "CWE-89"
            ],
            "frequency": 2,
            "proportion": 0.4
          }
        ]
      }
    },
    "cwe_consensus": "CWE-89",
    "similarity_stats": {
      "thresholds": [
        95,
        90,
        85,
        80,
        75,
        70
      ],
      "total_samples_by_threshold": {
        "95": 1,
        "90": 3,
        "85": 4,
        "80": 6,
        "75": 6,
        "70": 5
      },
      "top_cwes_by_threshold": {
        "95": [],
        "90": [],
        "85": [
          [
            "CWE-89",
            1
          ]
        ],
        "80": [
          [
            "CWE-89",
            2
          ]
        ],
        "75": [
          [
            "CWE-89",
            2
          ]
        ],
        "70": [
          [
            "CWE-89",
            2
          ]
        ]
      }
    },
    "raw_matches": [
      {
        "similarity": 95,
        "cwes": [],
        "total": 1,
        "frequency": 1,
        "proportion": 1.0
      },
      {
        "similarity": 90,
        "cwes": [],
        "total": 3,
        "frequency": 3,
        "proportion": 1.0
      },
      {
        "similarity": 85,
        "cwes": [],
        "total": 4,
        "frequency": 3,
        "proportion": 0.75
      },
      {
        "similarity": 85,
        "cwes": [
          "89"
        ],
        "total": 4,
        "frequency": 1,
        "proportion": 0.25
      },
      {
        "similarity": 80,
        "cwes": [],
        "total": 6,
        "frequency": 4,
        "proportion": 0.667
      },
      {
        "similarity": 80,
        "cwes": [
          "89"
        ],
        "total": 6,
        "frequency": 2,
        "proportion": 0.333
      },
      {
        "similarity": 75,
        "cwes": [],
        "total": 6,
        "frequency": 4,
        "proportion": 0.667
      },
      {
        "similarity": 75,
        "cwes": [
          "89"
        ],
        "total": 6,
        "frequency": 2,
        "proportion": 0.333
      },
      {
        "similarity": 70,
        "cwes": [],
        "total": 5,
        "frequency": 3,
        "proportion": 0.6
      },
      {
        "similarity": 70,
        "cwes": [
          "89"
        ],
        "total": 5,
        "frequency": 2,
        "proportion": 0.4
      }
    ]
  },
  "similarity_summary": {
    "consensus_cwe": "CWE-89",
    "top_cwes": [
      [
        "CWE-89",
        7
      ]
    ],
    "confidence_levels": {
      "high": [],
      "medium": [],
      "low": []
    },
    "total_samples": 25
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-89 | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 1.0 | Base | Allowed | Primary CWE. The vulnerability stems from insufficient escaping on the user-supplied `id` parameter, leading to SQL injection. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship considered was the direct match of the vulnerability description to the CWE-89 description. The retriever results strongly suggested CWE-89 as the primary candidate. No parent or child relationships were deemed more appropriate.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    class cwe89 primary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **insufficient escaping** of the user-supplied `id` parameter, which leads directly to **time-based SQL Injection**. This allows attackers to extract sensitive information from the database.\n\n## Summary of Analysis\nThe analysis is based on the vulnerability description, which states \"**insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**\" as the root cause of a **time-based SQL Injection** vulnerability. The CVE Reference Links Content Summary confirms that the `id` parameter was not sanitized, allowing injection of SQL code.\n\nThe retriever results identified CWE-89 as the top candidate. The description of CWE-89, \"The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command,\" aligns directly with the vulnerability.\n\nThe selected CWE, CWE-89, is at the optimal level of specificity (Base) as it directly describes the root cause of the SQL injection vulnerability.\n\nOther CWEs considered but not used:\n\n*   CWE-116 (Improper Encoding or Escaping of Output): While related to input handling, it's a more general class. CWE-89 is a more specific case of improper neutralization within SQL commands.\n*   CWE-425 (Direct Request ('Forced Browsing')): Not applicable, as the vulnerability is not related to authorization issues.\n*   CWE-434 (Unrestricted Upload of File with Dangerous Type): Not applicable, as the vulnerability is not related to file uploads.\n*   CWE-639 (Authorization Bypass Through User-Controlled Key): Not applicable, as the vulnerability is not related to authorization bypass.\n*   CWE-79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')): Not applicable, as the vulnerability is SQL Injection, not Cross-site Scripting.\n*   CWE-90 (Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')): Not applicable, as the vulnerability is SQL Injection, not LDAP Injection.\n*   CWE-94 (Improper Control of Generation of Code ('Code Injection')): While SQL injection *can* lead to code execution in some cases, the primary issue here is the ability to inject SQL commands and extract data, not arbitrary code execution, so this is not the appropriate CWE.\n*   CWE-502 (Deserialization of Untrusted Data): Not applicable, as the vulnerability is not related to deserialization.\n*   CWE-73 (External Control of File Name or Path): Not applicable, as the vulnerability is not related to file path manipulation.\nRelevant CWE Information:",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-89 | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 1.0 | Base | Allowed | Primary CWE. The vulnerability stems from insufficient escaping on the user-supplied `id` parameter, leading to SQL injection. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship considered was the direct match of the vulnerability description to the CWE-89 description. The retriever results strongly suggested CWE-89 as the primary candidate. No parent or child relationships were deemed more appropriate.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    class cwe89 primary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **insufficient escaping** of the user-supplied `id` parameter, which leads directly to **time-based SQL Injection**. This allows attackers to extract sensitive information from the database.\n\n## Summary of Analysis\nThe analysis is based on the vulnerability description, which states \"**insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**\" as the root cause of a **time-based SQL Injection** vulnerability. The CVE Reference Links Content Summary confirms that the `id` parameter was not sanitized, allowing injection of SQL code.\n\nThe retriever results identified CWE-89 as the top candidate. The description of CWE-89, \"The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command,\" aligns directly with the vulnerability.\n\nThe selected CWE, CWE-89, is at the optimal level of specificity (Base) as it directly describes the root cause of the SQL injection vulnerability.\n\nOther CWEs considered but not used:\n\n*   CWE-116 (Improper Encoding or Escaping of Output): While related to input handling, it's a more general class. CWE-89 is a more specific case of improper neutralization within SQL commands.\n*   CWE-425 (Direct Request ('Forced Browsing')): Not applicable, as the vulnerability is not related to authorization issues.\n*   CWE-434 (Unrestricted Upload of File with Dangerous Type): Not applicable, as the vulnerability is not related to file uploads.\n*   CWE-639 (Authorization Bypass Through User-Controlled Key): Not applicable, as the vulnerability is not related to authorization bypass.\n*   CWE-79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')): Not applicable, as the vulnerability is SQL Injection, not Cross-site Scripting.\n*   CWE-90 (Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')): Not applicable, as the vulnerability is SQL Injection, not LDAP Injection.\n*   CWE-94 (Improper Control of Generation of Code ('Code Injection')): While SQL injection *can* lead to code execution in some cases, the primary issue here is the ability to inject SQL commands and extract data, not arbitrary code execution, so this is not the appropriate CWE.\n*   CWE-502 (Deserialization of Untrusted Data): Not applicable, as the vulnerability is not related to deserialization.\n*   CWE-73 (External Control of File Name or Path): Not applicable, as the vulnerability is not related to file path manipulation.\nRelevant CWE Information:\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-90:**\n- 90 (Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')) - ROOT\n\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: SQL injection",
        "match_reason": "term_in_phrase_whole_phrase"
      },
      "similarity": 800.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 566.6069554922854
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 515.5324355672201
    },
    {
      "metadata": {
        "doc_id": "90",
        "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
        "source": "sparse"
      },
      "similarity": 507.42638737007087
    },
    {
      "metadata": {
        "doc_id": "790",
        "name": "Improper Filtering of Special Elements",
        "source": "sparse"
      },
      "similarity": 495.80873245441273
    },
    {
      "metadata": {
        "doc_id": "502",
        "name": "Deserialization of Untrusted Data",
        "source": "sparse"
      },
      "similarity": 494.7734475173826
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 494.0521934985553
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 491.0550927951185
    },
    {
      "metadata": {
        "doc_id": "96",
        "name": "Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')",
        "type": "Base",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before inserting the input into an executable resource, such as a library, configuration file, or template.",
        "keyphrase_source": "rootcause:lack of sufficient preparation on the existing SQL query",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.46657991882021466,
            "graph": 1.6418669456624455
          }
        }
      },
      "similarity": 0.46657991882021466
    },
    {
      "doc_id": "73",
      "text": "CWE-73: External Control of File Name or Path",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "73",
        "name": "External Control of File Name or Path",
        "type": "base",
        "original_content": "CWE-73: External Control of File Name or Path",
        "relationships": [
          {
            "source_id": "73",
            "target_id": "114",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "59",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "434",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "41",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "22",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "20",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "700"
            }
          },
          {
            "source_id": "73",
            "target_id": "610",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "642",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "99",
            "target_id": "73",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "642",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "610",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "59",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "434",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "22",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "20",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "700"
            }
          },
          {
            "source_id": "114",
            "target_id": "73",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "434",
                  "73",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "434"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "434",
                  "73",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "434"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "73",
                  "434",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "434"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-90",
      "CWE-89",
      "CWE-502",
      "CWE-116",
      "CWE-94",
      "CWE-639",
      "CWE-79",
      "CWE-73",
      "CWE-425",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}