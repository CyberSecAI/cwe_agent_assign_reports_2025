{
  "cve_id": "CVE-2025-0628",
  "description": "An **improper authorization** vulnerability exists in the main-latest version of BerriAI/litellm. When a user with the role internal_user_viewer logs into the application, they are provided with an overly privileged API key. This key can be used to access all the admin functionality of the application, including endpoints such as /users/list and /users/get_users. This vulnerability allows for privilege escalation within the application, enabling any account to become a PROXY ADMIN.",
  "key_phrases": {
    "component": "",
    "rootcause": "improper authorization",
    "vector": "",
    "weakness": "",
    "product": "BerriAI/litellm",
    "impact": "access all admin functionality, privilege escalation",
    "attacker": "internal_user_viewer",
    "version": "main-latest"
  },
  "reference_content": "## Analysis of CVE-2025-0628 Content\n\nBased on the provided content, this relates to a security fix within the `litellm` project.\n\n**Root cause of vulnerability:**\n\nThe commit message states the fix addresses an issue where an \"internal user able to escalate their role with ui key\". This suggests a privilege escalation vulnerability existed, allowing internal users to gain unauthorized access or permissions through the UI key.\n\n**Weaknesses/vulnerabilities present:**\n\n*   **Privilege Escalation:** An internal user could escalate their role/permissions.\n*   **Insecure Direct Object Reference (Potential):** The use of a \"ui key\" suggests a potential for insecure access control if not properly validated and authorized.\n\n**Impact of exploitation:**\n\nAn attacker (in this case, an internal user) could gain higher privileges than intended, potentially accessing sensitive data or performing unauthorized actions within the `litellm` system.\n\n**Attack vectors:**\n\n*   Exploitation of the UI key mechanism to escalate privileges.\n\n**Required attacker capabilities/position:**\n\n*   The attacker needs to be an \"internal user\" with access to the UI and the associated key.\n\n**Mitigation or fix:**\n\nThe commit fixes the issue in `proxy/_types.py` and `management_endpoints/internal_user_endpoints.py`. Specifically:\n\n*   The `LiteLLM_UserTable` model in `_types.py` is replaced with `LiteLLM_UserTableFiltered` to avoid exposing sensitive data.\n*   The `ui_view_users` endpoint in `internal_user_endpoints.py` now returns a list of `LiteLLM_UserTableFiltered` objects instead of `LiteLLM_UserTable` objects.\n*   The tests were updated to handle potential instability with Bedrock.\n\n**More detail than official CVE description:**\n\nYes, the content provides significantly more detail than a placeholder CVE description. It identifies the specific files modified, the nature of the vulnerability (privilege escalation), and the mitigation steps taken.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-863 | Incorrect Authorization | 0.9 | Class | Allowed-with-Review | Primary CWE. Authorization check is present, but incorrectly performed. |\n| CWE-266 | Incorrect Privilege Assignment | 0.7 | Base | Allowed | Secondary Candidate. The user is assigned an overly-privileged API key. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship influencing the decision is the hierarchical structure where CWE-863 is a Class-level CWE. The analysis also considered CWE-285 (Improper Authorization) as a peer, but CWE-863 was deemed more specific because the vulnerability involves an existing authorization check that is performed incorrectly. Another important aspect was the relationship between privileges and permissions, particularly regarding incorrect privilege assignment (CWE-266) which highlights the overly permissive API key.\n\n```mermaid\ngraph TD\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe285[\"CWE-285: Improper Authorization\"]\n    cwe266[\"CWE-266: Incorrect Privilege Assignment\"]\n    cwe284[\"CWE-284: Improper Access Control\"]\n\n    cwe863 -->|PEEROF| cwe285\n    cwe863 -->|CHILDOF| cwe284\n    cwe266 -->|CHILDOF| cwe269[\"CWE-269: Improper Privilege Management\"]\n    cwe269 -->|CHILDOF| cwe284\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe863 primary\n    class cwe266 secondary\n    class cwe285,cwe284 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **improper authorization** (CWE-863) where an internal user is given an overly privileged API key. This leads to **privilege escalation**, allowing the user to access admin functionalities. The final impact is the ability for any account to become a PROXY ADMIN.\n\n## Summary of Analysis\nThe primary assessment is strongly based on the provided evidence which includes the vulnerability description stating an **improper authorization** issue where a user with the role internal_user_viewer is provided with an overly privileged API key. This allows them to access admin functionalities, leading to **privilege escalation**. The retriever results and the guidance on Authentication vs Authorization support the selection of CWE-863, Incorrect Authorization, as the primary CWE. The relationship analysis shows that CWE-863 is a child of CWE-284 (Improper Access Control), but CWE-863 is more specific and appropriate because it involves an incorrect authorization check.\n\nThe CWEs considered but not used include:\n*   CWE-284: Improper Access Control - While this is a parent of CWE-863, the description is specific enough to warrant the use of the child CWE.\n*   CWE-285: Improper Authorization - Very similar to CWE-863 but less specific as it doesn't highlight the fact that the authorization check exists but is flawed.\n*   CWE-269: Improper Privilege Management - Not specific enough as it covers a wide range of privilege management issues.\n*   CWE-266: Incorrect Privilege Assignment - A valid secondary candidate because the user is assigned an overly privileged API key.\n*   CWE-306: Missing Authentication for Critical Function - Not applicable as the issue is with authorization, not authentication.\n\nThe selected CWEs are at the optimal level of specificity because they accurately reflect the nature of the vulnerability based on the available evidence and the MITRE mapping guidance.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-863 | Incorrect Authorization | 0.9 | Class | Allowed-with-Review | Primary CWE. Authorization check is present, but incorrectly performed. |\n| CWE-266 | Incorrect Privilege Assignment | 0.7 | Base | Allowed | Secondary Candidate. The user is assigned an overly-privileged API key. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship influencing the decision is the hierarchical structure where CWE-863 is a Class-level CWE. The analysis also considered CWE-285 (Improper Authorization) as a peer, but CWE-863 was deemed more specific because the vulnerability involves an existing authorization check that is performed incorrectly. Another important aspect was the relationship between privileges and permissions, particularly regarding incorrect privilege assignment (CWE-266) which highlights the overly permissive API key.\n\n```mermaid\ngraph TD\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe285[\"CWE-285: Improper Authorization\"]\n    cwe266[\"CWE-266: Incorrect Privilege Assignment\"]\n    cwe284[\"CWE-284: Improper Access Control\"]\n\n    cwe863 -->|PEEROF| cwe285\n    cwe863 -->|CHILDOF| cwe284\n    cwe266 -->|CHILDOF| cwe269[\"CWE-269: Improper Privilege Management\"]\n    cwe269 -->|CHILDOF| cwe284\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe863 primary\n    class cwe266 secondary\n    class cwe285,cwe284 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **improper authorization** (CWE-863) where an internal user is given an overly privileged API key. This leads to **privilege escalation**, allowing the user to access admin functionalities. The final impact is the ability for any account to become a PROXY ADMIN.\n\n## Summary of Analysis\nThe primary assessment is strongly based on the provided evidence which includes the vulnerability description stating an **improper authorization** issue where a user with the role internal_user_viewer is provided with an overly privileged API key. This allows them to access admin functionalities, leading to **privilege escalation**. The retriever results and the guidance on Authentication vs Authorization support the selection of CWE-863, Incorrect Authorization, as the primary CWE. The relationship analysis shows that CWE-863 is a child of CWE-284 (Improper Access Control), but CWE-863 is more specific and appropriate because it involves an incorrect authorization check.\n\nThe CWEs considered but not used include:\n*   CWE-284: Improper Access Control - While this is a parent of CWE-863, the description is specific enough to warrant the use of the child CWE.\n*   CWE-285: Improper Authorization - Very similar to CWE-863 but less specific as it doesn't highlight the fact that the authorization check exists but is flawed.\n*   CWE-269: Improper Privilege Management - Not specific enough as it covers a wide range of privilege management issues.\n*   CWE-266: Incorrect Privilege Assignment - A valid secondary candidate because the user is assigned an overly privileged API key.\n*   CWE-306: Missing Authentication for Critical Function - Not applicable as the issue is with authorization, not authentication.\n\nThe selected CWEs are at the optimal level of specificity because they accurately reflect the nature of the vulnerability based on the available evidence and the MITRE mapping guidance.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-306:**\n- 306 (Missing Authentication for Critical Function) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "284",
        "name": "Improper Access Control",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Authorization",
        "match_reason": "term_in_phrase_whole_phrase"
      },
      "similarity": 800.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 455.5607721684371
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 440.547223531152
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 438.44121480391925
    },
    {
      "metadata": {
        "doc_id": "269",
        "name": "Improper Privilege Management",
        "source": "sparse"
      },
      "similarity": 430.91296715922357
    },
    {
      "metadata": {
        "doc_id": "287",
        "name": "Improper Authentication",
        "source": "sparse"
      },
      "similarity": 427.7300117008148
    },
    {
      "metadata": {
        "doc_id": "639",
        "name": "Authorization Bypass Through User-Controlled Key",
        "source": "sparse"
      },
      "similarity": 422.94958292290505
    },
    {
      "metadata": {
        "doc_id": "425",
        "name": "Direct Request ('Forced Browsing')",
        "source": "sparse"
      },
      "similarity": 420.88746996051793
    },
    {
      "metadata": {
        "doc_id": "267",
        "name": "Privilege Defined With Unsafe Actions",
        "type": "Base",
        "original_content": "A particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.",
        "keyphrase_source": "rootcause:improper authorization",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "retriever_count": 3,
          "normalized_scores": {
            "dense": 0.5136149991383935,
            "sparse": 420.780914929045,
            "graph": 1.7062164063048277
          }
        }
      },
      "similarity": 0.5136149991383935
    },
    {
      "doc_id": "226",
      "text": "CWE-226: Sensitive Information in Resource Not Removed Before Reuse",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "226",
        "name": "Sensitive Information in Resource Not Removed Before Reuse",
        "type": "base",
        "original_content": "CWE-226: Sensitive Information in Resource Not Removed Before Reuse",
        "relationships": [
          {
            "source_id": "226",
            "target_id": "244",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "1342",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "1301",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "1272",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "1239",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "201",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "212",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "459",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "459",
            "target_id": "226",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "244",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "212",
            "target_id": "226",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "201",
            "target_id": "226",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1342",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1194"
            }
          },
          {
            "source_id": "1342",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1301",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1272",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1239",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1194"
            }
          },
          {
            "source_id": "1239",
            "target_id": "226",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "201",
                  "226",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "201"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "201",
                  "226",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "201"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "226",
                  "201",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "201"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-306",
      "CWE-269",
      "CWE-285",
      "CWE-284",
      "CWE-266"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}