{
  "query": "Django-Unicorn adds modern reactive component functionality to Django templates. Affected versions of Django-Unicorn are vulnerable to python class pollution vulnerability. The vulnerability arises from the core functionality `set_property_value`, which can be remotely triggered by users by crafting appropriate component requests and feeding in values of second and third parameter to the vulnerable function, leading to arbitrary changes to the python runtime status. With this finding at least five ways of vulnerability exploitation have been observed, stably resulting in Cross-Site Scripting (XSS), Denial of Service (DoS), and Authentication Bypass attacks in almost every Django-Unicorn-based application. This issue has been addressed in version 0.62.0 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
  "count": 11,
  "results": [
    {
      "cwe_id": "79",
      "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "abstraction": "Base",
      "score": 655.4487741530518,
      "original_score": 655.4487741530518,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "116",
      "name": "Improper Encoding or Escaping of Output",
      "abstraction": "Class",
      "score": 622.9612360865458,
      "original_score": 622.9612360865458,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "1321",
      "name": "Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')",
      "abstraction": "Variant",
      "score": 621.515551154866,
      "original_score": 621.515551154866,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1333",
      "name": "Inefficient Regular Expression Complexity",
      "abstraction": "Base",
      "score": 614.8976264343437,
      "original_score": 614.8976264343437,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "502",
      "name": "Deserialization of Untrusted Data",
      "abstraction": "Base",
      "score": 609.2034484523044,
      "original_score": 609.2034484523044,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "288",
      "name": "Authentication Bypass Using an Alternate Path or Channel",
      "abstraction": "Base",
      "score": 592.0877581146108,
      "original_score": 592.0877581146108,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1336",
      "name": "Improper Neutralization of Special Elements Used in a Template Engine",
      "abstraction": "Base",
      "score": 589.0072691602184,
      "original_score": 589.0072691602184,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "94",
      "name": "Improper Control of Generation of Code ('Code Injection')",
      "abstraction": "Base",
      "score": 586.5026593853972,
      "original_score": 586.5026593853972,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "201",
      "name": "Insertion of Sensitive Information Into Sent Data",
      "abstraction": "Base",
      "score": 583.8407378257955,
      "original_score": 583.8407378257955,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "abstraction": "Base",
      "score": 583.067709776098,
      "original_score": 583.067709776098,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "918",
      "name": "Server-Side Request Forgery (SSRF)",
      "abstraction": "Base",
      "score": 192.4507994957802,
      "original_score": 192.4507994957802,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 192.4507994957802,
    "max": 655.4487741530518,
    "mean": 568.2712336399101,
    "median": 592.0877581146108,
    "count": 11
  }
}