{
  "retriever": "sparse",
  "query": "Django-Unicorn adds modern reactive component functionality to Django templates. Affected versions of Django-Unicorn are vulnerable to python class pollution vulnerability. The vulnerability arises from the core functionality `set_property_value`, which can be remotely triggered by users by crafting appropriate component requests and feeding in values of second and third parameter to the vulnerable function, leading to arbitrary changes to the python runtime status. With this finding at least five ways of vulnerability exploitation have been observed, stably resulting in Cross-Site Scripting (XSS), Denial of Service (DoS), and Authentication Bypass attacks in almost every Django-Unicorn-based application. This issue has been addressed in version 0.62.0 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
  "keyphrases": {
    "rootcause": [
      "python class pollution vulnerability"
    ]
  },
  "timestamp": "2025-07-12 10:45:23",
  "cve_id": "CVE-2025-24370",
  "result_count": 11,
  "results": [
    {
      "cwe_id": "79",
      "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "score": 655.4487741530518,
      "search_source": "rootcause:python class pollution vulnerability"
    },
    {
      "cwe_id": "116",
      "name": "Improper Encoding or Escaping of Output",
      "score": 622.9612360865458,
      "search_source": "rootcause:python class pollution vulnerability"
    },
    {
      "cwe_id": "1321",
      "name": "Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')",
      "score": 621.515551154866,
      "search_source": "rootcause:python class pollution vulnerability"
    },
    {
      "cwe_id": "1333",
      "name": "Inefficient Regular Expression Complexity",
      "score": 614.8976264343437,
      "search_source": "rootcause:python class pollution vulnerability"
    },
    {
      "cwe_id": "502",
      "name": "Deserialization of Untrusted Data",
      "score": 609.2034484523044,
      "search_source": "rootcause:python class pollution vulnerability"
    },
    {
      "cwe_id": "288",
      "name": "Authentication Bypass Using an Alternate Path or Channel",
      "score": 592.0877581146108,
      "search_source": "rootcause:python class pollution vulnerability"
    },
    {
      "cwe_id": "1336",
      "name": "Improper Neutralization of Special Elements Used in a Template Engine",
      "score": 589.0072691602184,
      "search_source": "rootcause:python class pollution vulnerability"
    },
    {
      "cwe_id": "94",
      "name": "Improper Control of Generation of Code ('Code Injection')",
      "score": 586.5026593853972,
      "search_source": "rootcause:python class pollution vulnerability"
    },
    {
      "cwe_id": "201",
      "name": "Insertion of Sensitive Information Into Sent Data",
      "score": 583.8407378257955,
      "search_source": "rootcause:python class pollution vulnerability"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 583.067709776098,
      "search_source": "rootcause:python class pollution vulnerability"
    },
    {
      "cwe_id": "918",
      "name": "Server-Side Request Forgery (SSRF)",
      "score": 192.4507994957802,
      "search_source": "base_query"
    }
  ]
}