{
  "query": "In the Linux kernel, the following vulnerability has been resolved mm/migrate fix shmem xarray update during migration A shmem folio can be either in page cache or in swap cache, but not at the same time. Namely, once it is in swap cache, folio->mapping should be NULL, and the folio is no longer in a shmem mapping. In __folio_migrate_mapping(), to determine the number of xarray entries to update, folio_test_swapbacked() is used, but that conflates shmem in page cache case and shmem in swap cache case. It leads to xarray multi-index entry corruption, since it turns a sibling entry to a normal entry during xas_store() (see [1] for a userspace reproduction). Fix it by only using folio_test_swapcache() to determine whether xarray is storing swap cache entries or not to choose the right number of xarray entries to update. [1] https//lore.kernel.org/linux-mm/Z8idPCkaJW1IChjT@casper.infradead.org/ Note In __split_huge_page(), folio_test_anon() && folio_test_swapcache() is used to get swap_cache address space, but that ignores the shmem folio in swap cache case. It could lead to NULL pointer dereferencing when a in-swap-cache shmem folio is split at __xa_store(), since !folio_test_anon() is true and folio->mapping is NULL. But fortunately, its caller split_huge_page_to_list_to_order() bails out early with EBUSY when folio->mapping is NULL. So no need to take care of it here.",
  "count": 20,
  "results": [
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "abstraction": "Class",
      "score": 0.4333388757120534,
      "original_score": 0.4333388757120534,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "1257",
      "name": "Improper Access Control Applied to Mirrored or Aliased Memory Regions",
      "abstraction": "Base",
      "score": 0.4288195800522585,
      "original_score": 0.4288195800522585,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "abstraction": "Class",
      "score": 0.4282175319876884,
      "original_score": 0.4282175319876884,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "1260",
      "name": "Improper Handling of Overlap Between Protected Memory Ranges",
      "abstraction": "Base",
      "score": 0.4253754724173998,
      "original_score": 0.4253754724173998,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 0.4248537105845641,
      "original_score": 0.4248537105845641,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "abstraction": "Variant",
      "score": 0.42205093460177723,
      "original_score": 0.42205093460177723,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "591",
      "name": "Sensitive Data Storage in Improperly Locked Memory",
      "abstraction": "Variant",
      "score": 0.42061244523228103,
      "original_score": 0.42061244523228103,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1251",
      "name": "Mirrored Regions with Different Values",
      "abstraction": "Base",
      "score": 0.42032822582989254,
      "original_score": 0.42032822582989254,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "abstraction": "Base",
      "score": 0.4193156257143684,
      "original_score": 0.4193156257143684,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "762",
      "name": "Mismatched Memory Management Routines",
      "abstraction": "Variant",
      "score": 0.41763172934364545,
      "original_score": 0.41763172934364545,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1342",
      "name": "Information Exposure through Microarchitectural State after Transient Execution",
      "abstraction": "Base",
      "score": 0.41755987224781294,
      "original_score": 0.41755987224781294,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "823",
      "name": "Use of Out-of-range Pointer Offset",
      "abstraction": "Base",
      "score": 0.4027863930640026,
      "original_score": 0.4027863930640026,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 0.4025837280176534,
      "original_score": 0.4025837280176534,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "abstraction": "Variant",
      "score": 0.4023183408006089,
      "original_score": 0.4023183408006089,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "abstraction": "Base",
      "score": 0.3988115146397342,
      "original_score": 0.3988115146397342,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1421",
      "name": "Exposure of Sensitive Information in Shared Microarchitectural Structures during Transient Execution",
      "abstraction": "Base",
      "score": 0.3984214829477251,
      "original_score": 0.3984214829477251,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "366",
      "name": "Race Condition within a Thread",
      "abstraction": "Base",
      "score": 0.39722447982916587,
      "original_score": 0.39722447982916587,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1250",
      "name": "Improper Preservation of Consistency Between Independent Representations of Shared State",
      "abstraction": "Base",
      "score": 0.39683654547446057,
      "original_score": 0.39683654547446057,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "abstraction": "Base",
      "score": 0.39554656343475303,
      "original_score": 0.39554656343475303,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "126",
      "name": "Buffer Over-read",
      "abstraction": "Variant",
      "score": 0.39498317254597093,
      "original_score": 0.39498317254597093,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 0.39498317254597093,
    "max": 0.4333388757120534,
    "mean": 0.41238081122389075,
    "median": 0.4175958007957292,
    "count": 20
  }
}