{
  "cve_id": "CVE-2025-29778",
  "description": "Kyverno is a policy engine designed for cloud native platform engineering teams. Prior to version 1.14.0-alpha.1, Kyverno **ignores subjectRegExp and IssuerRegExp while verifying artifacts sign with keyless mode**. It allows the attacker to deploy kubernetes resources with the artifacts that were signed by unexpected certificate. Deploying these unauthorized kubernetes resources can lead to full compromise of kubernetes cluster. Version 1.14.0-alpha.1 contains a patch for the issue.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "ignores subjectRegExp and IssuerRegExp while verifying artifacts sign with keyless mode",
    "impact": "full compromise of kubernetes cluster",
    "vector": "deploy kubernetes resources with the artifacts that were signed by unexpected certificate",
    "attacker": "attacker",
    "product": "Kyverno",
    "version": "prior to version 1.14.0-alpha.1",
    "component": ""
  },
  "reference_content": "CVE-2025-29778 - Based on the provided content, here's a breakdown of the vulnerability:\n\n**Root cause of vulnerability:**\n\nKyverno did not consider the `subjectRegExp` and `issuerRegExp` fields when verifying artifact signatures in keyless mode. It only checked the `subject` and `issuer` fields.\n\n**Weaknesses/vulnerabilities present:**\n\n*   Insufficient input validation: Kyverno failed to validate the regular expressions provided in `subjectRegExp` and `issuerRegExp`.\n*   Bypass of security checks: The lack of validation allowed attackers to deploy Kubernetes resources with artifacts signed by unexpected certificates.\n\n**Impact of exploitation:**\n\nDeploying unauthorized Kubernetes resources, potentially leading to a full compromise of the Kubernetes cluster.\n\n**Attack vectors:**\n\n1.  An attacker needs a private key for any certificate in the certificate chain trusted by cosign (e.g., a self-signed Root CA).\n2.  Access to a container registry to push artifact images.\n3.  Ability to deploy malicious artifacts to the Kubernetes cluster.\n\n**Required attacker capabilities/position:**\n\n*   Access to a certificate signing authority or the ability to create a trusted certificate.\n*   Access to a container registry.\n*   Kubernetes deployment privileges.\n\n**Mitigation or fix:**\n\nThe issue was fixed by modifying the `matchSignatures` function in `pkg/cosign/cosign.go` to include `subjectRegExp` and `issuerRegExp` in the validation check.  The original code only checked if `subject` and `issuer` were empty. The fix now checks if `subject`, `issuer`, `subjectRegExp`, and `issuerRegExp` are all empty before skipping validation.  This change is present in commit `8777672`. The fix was cherry-picked into release 1.13.6 and 1.14.0.\n\n**Additional Details:**\n\n*   The vulnerability affected Kyverno versions v1.13.0 - v1.13.5.\n*   Patched versions are v1.13.6 and v1.14.0.\n*   The issue was initially reported as GHSA-46mp-8w32-6g94.\n*   The provided content includes a proof-of-concept (PoC) demonstrating how to exploit the vulnerability.\n*   The CVSS score is 5.8 (Moderate).\n*   The vulnerability is related to CWE-285 (Improper Input Validation).\n*   The fix was verified and implemented by Mohdcode.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-347 | Improper Verification of Cryptographic Signature | 0.9 | Base | Primary | Allowed |\n| CWE-20 | Improper Input Validation | 0.7 | Class | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE, CWE-347 (Improper Verification of Cryptographic Signature), is a Base level CWE, which is preferred. CWE-347 is a child of CWE-345 (Insufficient Verification of Data Authenticity), a Class level CWE. This relationship suggests that a more specific type of data authenticity issue is present, namely one related to cryptographic signatures.\n\nThe relationship of CWE-20 to CWE-1286 is that CWE-20 is the parent, and CWE-1286 is a child.\n\n```mermaid\ngraph TD\n    cwe347[\"CWE-347: Improper Verification of Cryptographic Signature\"]\n    cwe345[\"CWE-345: Insufficient Verification of Data Authenticity\"]\n    cwe20[\"CWE-20: Improper Input Validation\"]\n    cwe1286[\"CWE-1286: Improper Validation of Syntactic Correctness of Input\"]\n    \n    cwe347 -->|CHILDOF| cwe345\n    cwe1286 -->|CHILDOF| cwe20\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe347 primary\n    class cwe20 secondary\n    class cwe345,cwe1286 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **improper verification of cryptographic signatures** (CWE-347). This leads to the acceptance of artifacts signed by unexpected certificates, which then results in the ability to deploy unauthorized Kubernetes resources. The ultimate impact is a full compromise of the Kubernetes cluster.\n\n## Summary of Analysis\nThe primary weakness is that Kyverno **ignores subjectRegExp and IssuerRegExp while verifying artifacts sign with keyless mode**.\n\nThe evidence for CWE-347 is that \"Kyverno did not consider the `subjectRegExp` and `issuerRegExp` fields when verifying artifact signatures in keyless mode. It only checked the `subject` and `issuer` fields.\"\n\nCWE-20 is included as a secondary weakness because the vulnerability description and CVE reference content summarize that there was insufficient input validation of the regular expressions.\n\nCWE-295, CWE-923, CWE-285 and CWE-863 were considered but not used.\n\n*   CWE-295 (Improper Certificate Validation) - While related, CWE-347 is more specific to the signature verification aspect, which is the core issue here.\n*   CWE-923 (Improper Restriction of Communication Channel to Intended Endpoints) - This is not directly related to the described vulnerability. The problem is not about restricting communication channels, but about the verification of signatures.\n*   CWE-285 (Improper Authorization) and CWE-863 (Incorrect Authorization) - These are too high-level and don't capture the specific flaw of improper cryptographic signature verification.\n\nThe selected CWEs are at the optimal level of specificity, with CWE-347 pinpointing the cryptographic signature verification failure and CWE-20 capturing the insufficient input validation aspect.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-347: Improper Verification of Cryptographic Signature\n**Abstraction Level**: Base\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe product does not verify, or incorrectly verifies, the cryptographic signature for data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**Technical Explanation**: The vulnerability description states that Kyverno ignores subjectRegExp and IssuerRegExp while verifying artifacts sign with keyless mode. This directly matches the description of CWE-347, which is that the product does not verify or incorrectly verifies the cryptographic signature for data.\n**Security Implications**: Allows the attacker to deploy kubernetes resources with the artifacts that were signed by unexpected certificate. Deploying these unauthorized kubernetes resources can lead to full compromise of kubernetes cluster.\n**Relationship to Other CWEs**: CWE-347 is a child of CWE-345 (Insufficient Verification of Data Authenticity). This parent-child relationship indicates that the specific type of data authenticity issue is related to cryptographic signatures.\n**Primary or Secondary Weakness**: Primary\n**Official Mapping Guidance**: The mapping guidance allows the usage of this CWE.\n\n## CWE-20: Improper Input Validation\n**Abstraction Level**: Class\n**Similarity Score**: N/A\n**Source**: Manual Analysis of CVE Reference\n\n**Description**:\nThe product does not validate, or incorrectly validates, input that it receives.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is a Class level and can have children that are more appropriate.\n\n**Technical Explanation**: The vulnerability description states that Kyverno ignores subjectRegExp and IssuerRegExp while verifying artifacts sign with keyless mode. The CVE Reference content summary mentions \"Insufficient input validation: Kyverno failed to validate the regular expressions provided in `subjectRegExp` and `issuerRegExp`.\"\n**Security Implications**: Allows the attacker to deploy kubernetes resources with the artifacts that were signed by unexpected certificate. Deploying these unauthorized kubernetes resources can lead to full compromise of kubernetes cluster.\n**Relationship to Other CWEs**: CWE-20 is a parent of CWE-1286.\n**Primary or Secondary Weakness**: Secondary\n**Official Mapping Guidance**: The mapping guidance allows the usage of this CWE.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-347 | Improper Verification of Cryptographic Signature | 0.9 | Base | Primary | Allowed |\n| CWE-20 | Improper Input Validation | 0.7 | Class | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE, CWE-347 (Improper Verification of Cryptographic Signature), is a Base level CWE, which is preferred. CWE-347 is a child of CWE-345 (Insufficient Verification of Data Authenticity), a Class level CWE. This relationship suggests that a more specific type of data authenticity issue is present, namely one related to cryptographic signatures.\n\nThe relationship of CWE-20 to CWE-1286 is that CWE-20 is the parent, and CWE-1286 is a child.\n\n```mermaid\ngraph TD\n    cwe347[\"CWE-347: Improper Verification of Cryptographic Signature\"]\n    cwe345[\"CWE-345: Insufficient Verification of Data Authenticity\"]\n    cwe20[\"CWE-20: Improper Input Validation\"]\n    cwe1286[\"CWE-1286: Improper Validation of Syntactic Correctness of Input\"]\n    \n    cwe347 -->|CHILDOF| cwe345\n    cwe1286 -->|CHILDOF| cwe20\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe347 primary\n    class cwe20 secondary\n    class cwe345,cwe1286 tertiary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **improper verification of cryptographic signatures** (CWE-347). This leads to the acceptance of artifacts signed by unexpected certificates, which then results in the ability to deploy unauthorized Kubernetes resources. The ultimate impact is a full compromise of the Kubernetes cluster.\n\n## Summary of Analysis\nThe primary weakness is that Kyverno **ignores subjectRegExp and IssuerRegExp while verifying artifacts sign with keyless mode**.\n\nThe evidence for CWE-347 is that \"Kyverno did not consider the `subjectRegExp` and `issuerRegExp` fields when verifying artifact signatures in keyless mode. It only checked the `subject` and `issuer` fields.\"\n\nCWE-20 is included as a secondary weakness because the vulnerability description and CVE reference content summarize that there was insufficient input validation of the regular expressions.\n\nCWE-295, CWE-923, CWE-285 and CWE-863 were considered but not used.\n\n*   CWE-295 (Improper Certificate Validation) - While related, CWE-347 is more specific to the signature verification aspect, which is the core issue here.\n*   CWE-923 (Improper Restriction of Communication Channel to Intended Endpoints) - This is not directly related to the described vulnerability. The problem is not about restricting communication channels, but about the verification of signatures.\n*   CWE-285 (Improper Authorization) and CWE-863 (Incorrect Authorization) - These are too high-level and don't capture the specific flaw of improper cryptographic signature verification.\n\nThe selected CWEs are at the optimal level of specificity, with CWE-347 pinpointing the cryptographic signature verification failure and CWE-20 capturing the insufficient input validation aspect.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-347: Improper Verification of Cryptographic Signature\n**Abstraction Level**: Base\n**Similarity Score**: 0.70\n**Source**: dense\n\n**Description**:\nThe product does not verify, or incorrectly verifies, the cryptographic signature for data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n**Technical Explanation**: The vulnerability description states that Kyverno ignores subjectRegExp and IssuerRegExp while verifying artifacts sign with keyless mode. This directly matches the description of CWE-347, which is that the product does not verify or incorrectly verifies the cryptographic signature for data.\n**Security Implications**: Allows the attacker to deploy kubernetes resources with the artifacts that were signed by unexpected certificate. Deploying these unauthorized kubernetes resources can lead to full compromise of kubernetes cluster.\n**Relationship to Other CWEs**: CWE-347 is a child of CWE-345 (Insufficient Verification of Data Authenticity). This parent-child relationship indicates that the specific type of data authenticity issue is related to cryptographic signatures.\n**Primary or Secondary Weakness**: Primary\n**Official Mapping Guidance**: The mapping guidance allows the usage of this CWE.\n\n## CWE-20: Improper Input Validation\n**Abstraction Level**: Class\n**Similarity Score**: N/A\n**Source**: Manual Analysis of CVE Reference\n\n**Description**:\nThe product does not validate, or incorrectly validates, input that it receives.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is a Class level and can have children that are more appropriate.\n\n**Technical Explanation**: The vulnerability description states that Kyverno ignores subjectRegExp and IssuerRegExp while verifying artifacts sign with keyless mode. The CVE Reference content summary mentions \"Insufficient input validation: Kyverno failed to validate the regular expressions provided in `subjectRegExp` and `issuerRegExp`.\"\n**Security Implications**: Allows the attacker to deploy kubernetes resources with the artifacts that were signed by unexpected certificate. Deploying these unauthorized kubernetes resources can lead to full compromise of kubernetes cluster.\n**Relationship to Other CWEs**: CWE-20 is a parent of CWE-1286.\n**Primary or Secondary Weakness**: Secondary\n**Official Mapping Guidance**: The mapping guidance allows the usage of this CWE.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-345:**\n- 345 (Insufficient Verification of Data Authenticity) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "532",
        "name": "Insertion of Sensitive Information into Log File",
        "source": "sparse"
      },
      "similarity": 366.33293005910696
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 353.8303394047835
    },
    {
      "metadata": {
        "doc_id": "319",
        "name": "Cleartext Transmission of Sensitive Information",
        "source": "sparse"
      },
      "similarity": 343.50815880211564
    },
    {
      "metadata": {
        "doc_id": "923",
        "name": "Improper Restriction of Communication Channel to Intended Endpoints",
        "source": "sparse"
      },
      "similarity": 337.502678168666
    },
    {
      "metadata": {
        "doc_id": "552",
        "name": "Files or Directories Accessible to External Parties",
        "source": "sparse"
      },
      "similarity": 331.29026862648004
    },
    {
      "metadata": {
        "doc_id": "347",
        "name": "Improper Verification of Cryptographic Signature",
        "source": "sparse"
      },
      "similarity": 327.2497507671462
    },
    {
      "metadata": {
        "doc_id": "345",
        "name": "Insufficient Verification of Data Authenticity",
        "source": "sparse"
      },
      "similarity": 325.55974408410594
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 324.591154690364
    },
    {
      "metadata": {
        "doc_id": "322",
        "name": "Key Exchange without Entity Authentication",
        "type": "Base",
        "original_content": "The product performs a key exchange with an actor without verifying the identity of that actor.",
        "keyphrase_source": "weakness:IssuerRegExp while verifying artifacts sign with keyless mode",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.4303811245410961,
            "graph": 3.2120915831627563
          }
        }
      },
      "similarity": 0.4303811245410961
    },
    {
      "doc_id": "295",
      "text": "The product does not validate, or incorrectly validates, a certificate.",
      "score": 0.4951325959751626,
      "metadata": {
        "doc_id": "295",
        "name": "Improper Certificate Validation",
        "type": "Base",
        "extended_description": "When a certificate is invalid or malicious, it might allow an attacker to spoof a trusted entity by interfering in the communication path between the host and client. The product might connect to a malicious host while believing it is a trusted host, or the product might be deceived into accepting spoofed data that appears to originate from a trusted host.",
        "alternate_terms": [],
        "original_content": "The product does not validate, or incorrectly validates, a certificate.",
        "relationships": [
          {
            "source_id": "295",
            "target_id": "599",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "295",
            "target_id": "299",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "295",
            "target_id": "298",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "295",
            "target_id": "297",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "295",
            "target_id": "296",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "295",
            "target_id": "322",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "295",
            "target_id": "287",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "295",
            "target_id": "287",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "599",
            "target_id": "295",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "322",
            "target_id": "295",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "299",
            "target_id": "295",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "298",
            "target_id": "295",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "297",
            "target_id": "295",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "296",
            "target_id": "295",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "287",
            "target_id": "295",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "source": "graph",
        "sources": [
          "vector",
          "graph"
        ],
        "vector_score": 0.4951325959751626,
        "graph_score": 3.6399999999999997,
        "score_components": {
          "relationship_chain": 0.7,
          "explicit_mention": 1.0,
          "abstraction_path": 0.9,
          "peer_group": 0.9
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "peer_relationship"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "322",
                  "295",
                  "PEEROF"
                ]
              ],
              "score": 0.7,
              "type": "relationship_chain",
              "source": "322"
            },
            "peer_relationship": {
              "path": [
                [
                  "322",
                  "295",
                  "PEEROF"
                ]
              ],
              "score": 0.9,
              "type": "peer_relationship",
              "source": "322"
            }
          }
        },
        "is_explicit": true,
        "abstraction_level": "base",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.42722887672467713,
            "graph": 2.382053038390065
          }
        }
      },
      "similarity": 2.382053038390065
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-345",
      "CWE-1286",
      "CWE-923",
      "CWE-347",
      "CWE-285",
      "CWE-20",
      "CWE-295"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}