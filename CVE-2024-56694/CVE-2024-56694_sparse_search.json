{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved bpf fix recursive lock when verdict program return SK_PASS When the stream_verdict program returns SK_PASS, it places the received skb into its own receive queue, but a recursive lock eventually occurs, leading to an operating system deadlock. This issue has been present since v6.9. sk_psock_strp_data_ready write_lock_bh(&sk->sk_callback_lock) strp_data_ready strp_read_sock read_sock -> tcp_read_sock strp_recv cb.rcv_msg -> sk_psock_strp_read # now stream_verdict return SK_PASS without peer sock assign __SK_PASS = sk_psock_map_verd(SK_PASS, NULL) sk_psock_verdict_apply sk_psock_skb_ingress_self sk_psock_skb_ingress_enqueue sk_psock_data_ready read_lock_bh(&sk->sk_callback_lock) <= dead lock This topic has been discussed before, but it has not been fixed. Previous discussion https//lore.kernel.org/all/6684a5864ec86_403d20898@john.notmuch",
  "keyphrases": {
    "rootcause": [
      "recursive lock"
    ]
  },
  "timestamp": "2025-07-12 06:43:27",
  "cve_id": "CVE-2024-56694",
  "result_count": 11,
  "results": [
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "score": 381.70515602628126,
      "search_source": "rootcause:recursive lock"
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "score": 345.79182380701263,
      "search_source": "rootcause:recursive lock"
    },
    {
      "cwe_id": "674",
      "name": "Uncontrolled Recursion",
      "score": 316.0520133737596,
      "search_source": "rootcause:recursive lock"
    },
    {
      "cwe_id": "835",
      "name": "Loop with Unreachable Exit Condition ('Infinite Loop')",
      "score": 306.736064988225,
      "search_source": "rootcause:recursive lock"
    },
    {
      "cwe_id": "663",
      "name": "Use of a Non-reentrant Function in a Concurrent Context",
      "score": 305.5144005926322,
      "search_source": "rootcause:recursive lock"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 302.52881660905115,
      "search_source": "rootcause:recursive lock"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 294.8071082267899,
      "search_source": "rootcause:recursive lock"
    },
    {
      "cwe_id": "201",
      "name": "Insertion of Sensitive Information Into Sent Data",
      "score": 285.01166148590477,
      "search_source": "rootcause:recursive lock"
    },
    {
      "cwe_id": "226",
      "name": "Sensitive Information in Resource Not Removed Before Reuse",
      "score": 279.740506033198,
      "search_source": "rootcause:recursive lock"
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "score": 279.284705481789,
      "search_source": "rootcause:recursive lock"
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "score": 91.21057958323088,
      "search_source": "base_query"
    }
  ]
}