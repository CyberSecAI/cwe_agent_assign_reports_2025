{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved cachefiles flush all requests after setting CACHEFILES_DEAD In ondemand mode, when the daemon is processing an open request, if the kernel flags the cache as CACHEFILES_DEAD, the cachefiles_daemon_write() will always return -EIO, so the daemon cant pass the copen to the kernel. Then the kernel process that is waiting for the copen triggers a hung_task. Since the DEAD state is irreversible, it can only be exited by closing /dev/cachefiles. Therefore, after calling cachefiles_io_error() to mark the cache as CACHEFILES_DEAD, if in ondemand mode, flush all requests to avoid the above hungtask. We may still be able to read some of the cached data before closing the fd of /dev/cachefiles. Note that this relies on the patch that adds reference counting to the req, otherwise it may UAF.",
  "keyphrases": {
    "weakness": [
      "race condition"
    ]
  },
  "timestamp": "2025-07-13 12:43:15",
  "cve_id": "CVE-2024-40935",
  "result_count": 11,
  "results": [
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 1000.0,
      "search_source": "alternate_term_match"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "score": 670.6860635969322,
      "search_source": "weakness:race condition"
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "score": 661.4627824962291,
      "search_source": "weakness:race condition"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "score": 659.7790438443176,
      "search_source": "weakness:race condition"
    },
    {
      "cwe_id": "911",
      "name": "Improper Update of Reference Count",
      "score": 645.856427728373,
      "search_source": "weakness:race condition"
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "score": 633.6977455092297,
      "search_source": "weakness:race condition"
    },
    {
      "cwe_id": "400",
      "name": "Uncontrolled Resource Consumption",
      "score": 631.7409049042745,
      "search_source": "weakness:race condition"
    },
    {
      "cwe_id": "787",
      "name": "Out-of-bounds Write",
      "score": 631.2505432348522,
      "search_source": "weakness:race condition"
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 630.3990882732201,
      "search_source": "weakness:race condition"
    },
    {
      "cwe_id": "617",
      "name": "Reachable Assertion",
      "score": 628.5382501013667,
      "search_source": "weakness:race condition"
    },
    {
      "cwe_id": "88",
      "name": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
      "score": 222.59966391657485,
      "search_source": "base_query"
    }
  ]
}