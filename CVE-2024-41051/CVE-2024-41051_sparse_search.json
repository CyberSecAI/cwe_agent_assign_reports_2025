{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved cachefiles wait for ondemand_object_worker to finish when dropping object When queuing ondemand_object_worker() to re-open the object, cachefiles_object is not pinned. The cachefiles_object may be freed when the pending read request is completed intentionally and the related erofs is umounted. If ondemand_object_worker() runs after the object is freed, it will incur use-after-free problem as shown below. process A processs B process C process D cachefiles_ondemand_send_req() // send a read req X // wait for its completion // close ondemand fd cachefiles_ondemand_fd_release() // set object as CLOSE cachefiles_ondemand_daemon_read() // set object as REOPENING queue_work(fscache_wq, &info->ondemand_work) // close /dev/cachefiles cachefiles_daemon_release cachefiles_flush_reqs complete(&req->done) // read req X is completed // umount the erofs fs cachefiles_put_object() // object will be freed cachefiles_ondemand_deinit_obj_info() kmem_cache_free(object) // both info and object are freed ondemand_object_worker() When dropping an object, it is no longer necessary to reopen the object, so use cancel_work_sync() to cancel or wait fo",
  "keyphrases": {
    "rootcause": [
      "race condition"
    ],
    "weakness": [
      "use-after-free"
    ]
  },
  "timestamp": "2025-07-13 12:51:05",
  "cve_id": "CVE-2024-41051",
  "result_count": 12,
  "results": [
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 1000.0,
      "search_source": "alternate_term_match"
    },
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "score": 1000.0,
      "search_source": "alternate_term_match"
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "score": 686.7731513344448,
      "search_source": "rootcause:race condition"
    },
    {
      "cwe_id": "415",
      "name": "Double Free",
      "score": 678.1379828758753,
      "search_source": "rootcause:race condition"
    },
    {
      "cwe_id": "639",
      "name": "Authorization Bypass Through User-Controlled Key",
      "score": 671.3007116763674,
      "search_source": "rootcause:race condition"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "score": 634.2457504598844,
      "search_source": "rootcause:race condition"
    },
    {
      "cwe_id": "911",
      "name": "Improper Update of Reference Count",
      "score": 634.0840452372559,
      "search_source": "rootcause:race condition"
    },
    {
      "cwe_id": "1321",
      "name": "Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')",
      "score": 622.4640969446125,
      "search_source": "rootcause:race condition"
    },
    {
      "cwe_id": "347",
      "name": "Improper Verification of Cryptographic Signature",
      "score": 620.3413271242691,
      "search_source": "rootcause:race condition"
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "score": 611.825757966262,
      "search_source": "rootcause:race condition"
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "score": 609.8934786690969,
      "search_source": "rootcause:race condition"
    },
    {
      "cwe_id": "1287",
      "name": "Improper Validation of Specified Type of Input",
      "score": 199.45766394024645,
      "search_source": "base_query"
    }
  ]
}