{
  "cve_id": "CVE-2025-25138",
  "description": "**Cross-Site Request Forgery** (CSRF) vulnerability in Rishi On Page SEO + Whatsapp Chat Button allows Stored **XSS**. This issue affects On Page SEO + Whatsapp Chat Button from n/a through 2.0.0.",
  "key_phrases": {
    "rootcause": "Cross-Site Request Forgery",
    "weakness": "XSS",
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": "Rishi On Page SEO + Whatsapp Chat Button",
    "version": "n/a through 2.0.0",
    "component": ""
  },
  "reference_content": "Here's a breakdown of the information related to CVE-2025-25138 based on the provided content:\n\n*   **Vulnerability:** Cross Site Request Forgery (CSRF)\n*   **Software:** On Page SEO + Whatsapp Chat Button plugin\n*   **Vulnerable Versions:** <= 2.0.0\n*   **Fixed Version:** 2.0.1\n*   **Impact:** Could allow a malicious actor to force higher privileged users to execute unwanted actions under their current authentication.\n*   **Attack Vector:** Unknown, but implied to be through a request forged by the attacker.\n*   **Required Attacker Capabilities/Position:** Unauthenticated\n*   **Mitigation/Fix:** Update to version 2.0.1 or later.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 0.9 | Compound | Allowed | Primary CWE - Root Cause |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.9 | Base | Allowed | Secondary CWE - Resulting Weakness |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship is that **Cross-Site Request Forgery (CSRF)**, CWE-352, can lead to **Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')**, CWE-79. A successful CSRF attack can trick a user into performing actions that introduce malicious script into the web page, resulting in XSS.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe352 -->|CAN-PRECEDE| cwe79\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain begins with the **Cross-Site Request Forgery (CSRF)**, CWE-352, which allows an attacker to induce a user into performing unwanted actions. This can lead to Stored **XSS** i.e. **Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')**, CWE-79, if the forged request modifies data that is later displayed without proper sanitization.\n\n## Summary of Analysis\nThe vulnerability description clearly states that a **Cross-Site Request Forgery (CSRF)** vulnerability allows Stored **XSS**. This indicates that a CSRF attack can be used to inject malicious scripts into the application. The primary weakness is **CWE-352**, as it's the root cause enabling the **XSS** vulnerability. The secondary weakness is **CWE-79**, as it represents the impact of the successful CSRF attack.\n\nThe Retriever Results also supports this, with CWE-79 and CWE-352 being the top candidates.\n\nI am confident in this assessment because the vulnerability description explicitly mentions both CSRF and Stored XSS, and the relationship between these two vulnerabilities is well-established. The selection of CWEs is also aligned with the MITRE mapping guidance.\n\nOther CWEs Considered but Not Used:\n\n*   CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') - Not applicable as the vulnerability description mentions XSS, not SQL injection.\n*   CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS) - While related to XSS, CWE-79 is a more general and appropriate base-level classification.\n*   CWE-116: Improper Encoding or Escaping of Output - Could be related to XSS, but CWE-79 is more direct.\n*   CWE-918: Server-Side Request Forgery (SSRF) - Not applicable as the vulnerability description does not mention SSRF.\n*   CWE-601: URL Redirection to Untrusted Site ('Open Redirect') - Not applicable as the vulnerability description does not mention URL redirection.\n*   CWE-425: Direct Request ('Forced Browsing') - Not directly related to CSRF leading to XSS.\n*   CWE-472: External Control of Assumed-Immutable Web Parameter - Not directly related to CSRF leading to XSS.\n*   CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting') - Not applicable as the vulnerability description does not mention HTTP request/response splitting.\n*   CWE-346: Origin Validation Error - Could be related to CSRF, but CWE-352 is the more specific CWE for CSRF.\n*   CWE-790: Improper Filtering of Special Elements - Too general; CWE-79 is more specific to XSS.\n*   CWE-184: Incomplete List of Disallowed Inputs - Not directly applicable.",
  "analysis_with_relationships": "# Summary\n\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 0.9 | Compound | Allowed | Primary CWE - Root Cause |\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 0.9 | Base | Allowed | Secondary CWE - Resulting Weakness |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship is that **Cross-Site Request Forgery (CSRF)**, CWE-352, can lead to **Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')**, CWE-79. A successful CSRF attack can trick a user into performing actions that introduce malicious script into the web page, resulting in XSS.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    \n    cwe352 -->|CAN-PRECEDE| cwe79\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe352 primary\n    class cwe79 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain begins with the **Cross-Site Request Forgery (CSRF)**, CWE-352, which allows an attacker to induce a user into performing unwanted actions. This can lead to Stored **XSS** i.e. **Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')**, CWE-79, if the forged request modifies data that is later displayed without proper sanitization.\n\n## Summary of Analysis\nThe vulnerability description clearly states that a **Cross-Site Request Forgery (CSRF)** vulnerability allows Stored **XSS**. This indicates that a CSRF attack can be used to inject malicious scripts into the application. The primary weakness is **CWE-352**, as it's the root cause enabling the **XSS** vulnerability. The secondary weakness is **CWE-79**, as it represents the impact of the successful CSRF attack.\n\nThe Retriever Results also supports this, with CWE-79 and CWE-352 being the top candidates.\n\nI am confident in this assessment because the vulnerability description explicitly mentions both CSRF and Stored XSS, and the relationship between these two vulnerabilities is well-established. The selection of CWEs is also aligned with the MITRE mapping guidance.\n\nOther CWEs Considered but Not Used:\n\n*   CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') - Not applicable as the vulnerability description mentions XSS, not SQL injection.\n*   CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS) - While related to XSS, CWE-79 is a more general and appropriate base-level classification.\n*   CWE-116: Improper Encoding or Escaping of Output - Could be related to XSS, but CWE-79 is more direct.\n*   CWE-918: Server-Side Request Forgery (SSRF) - Not applicable as the vulnerability description does not mention SSRF.\n*   CWE-601: URL Redirection to Untrusted Site ('Open Redirect') - Not applicable as the vulnerability description does not mention URL redirection.\n*   CWE-425: Direct Request ('Forced Browsing') - Not directly related to CSRF leading to XSS.\n*   CWE-472: External Control of Assumed-Immutable Web Parameter - Not directly related to CSRF leading to XSS.\n*   CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting') - Not applicable as the vulnerability description does not mention HTTP request/response splitting.\n*   CWE-346: Origin Validation Error - Could be related to CSRF, but CWE-352 is the more specific CWE for CSRF.\n*   CWE-790: Improper Filtering of Special Elements - Too general; CWE-79 is more specific to XSS.\n*   CWE-184: Incomplete List of Disallowed Inputs - Not directly applicable.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n**Chain starting from CWE-116:**\n- 116 (Improper Encoding or Escaping of Output) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: XSS",
        "match_reason": "exact_match_whole_phrase"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 316.25146310125484
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 227.89909297605783
    },
    {
      "metadata": {
        "doc_id": "80",
        "name": "Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)",
        "source": "sparse"
      },
      "similarity": 208.1109444225238
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 200.07318584529196
    },
    {
      "metadata": {
        "doc_id": "918",
        "name": "Server-Side Request Forgery (SSRF)",
        "source": "sparse"
      },
      "similarity": 198.12934132719903
    },
    {
      "metadata": {
        "doc_id": "601",
        "name": "URL Redirection to Untrusted Site ('Open Redirect')",
        "source": "sparse"
      },
      "similarity": 193.48125125029895
    },
    {
      "metadata": {
        "doc_id": "1004",
        "name": "Sensitive Cookie Without 'HttpOnly' Flag",
        "source": "sparse"
      },
      "similarity": 184.15873415536439
    },
    {
      "metadata": {
        "doc_id": "790",
        "name": "Improper Filtering of Special Elements",
        "type": "Class",
        "original_content": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
        "keyphrase_source": "weakness:XSS",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.5512767561601898
          }
        }
      },
      "similarity": 0.5512767561601898
    },
    {
      "doc_id": "184",
      "text": "CWE-184: Incomplete List of Disallowed Inputs",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "184",
        "name": "Incomplete List of Disallowed Inputs",
        "type": "base",
        "original_content": "CWE-184: Incomplete List of Disallowed Inputs",
        "relationships": [
          {
            "source_id": "184",
            "target_id": "692",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "434",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "78",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "79",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "1023",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "693",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "86",
            "target_id": "184",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "78",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "693",
            "target_id": "184",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "692",
            "target_id": "184",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "692",
            "target_id": "184",
            "label": "STARTSWITH",
            "properties": {
              "view_id": "709"
            }
          },
          {
            "source_id": "625",
            "target_id": "184",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "434",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "186",
            "target_id": "184",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1023",
            "target_id": "184",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "79",
                  "184",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "79"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "79",
                  "184",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "79"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "184",
                  "79",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "79"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-116",
      "CWE-80",
      "CWE-601",
      "CWE-346",
      "CWE-79",
      "CWE-113",
      "CWE-472",
      "CWE-790",
      "CWE-352",
      "CWE-184",
      "CWE-918",
      "CWE-425"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}