{
  "cve_id": "CVE-2025-1705",
  "description": "The tagDiv Composer plugin for WordPress is vulnerable to **Cross-Site Request Forgery** in all versions up to, and including, 5.3. This is due to **missing or incorrect nonce validation** within the td_ajax_get_views AJAX action. This makes it possible for unauthenticated attackers to inject malicious web scripts via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.",
  "key_phrases": {
    "component": "td_ajax_get_views AJAX action",
    "rootcause": "missing or incorrect nonce validation",
    "vector": "forged request",
    "weakness": "Cross-Site Request Forgery",
    "product": "tagDiv Composer plugin for WordPress",
    "impact": "inject malicious web scripts, view counts",
    "attacker": "unauthenticated attackers",
    "version": "up to and including 5.3"
  },
  "reference_content": "UNRELATED",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 1.0 | Compound | Primary | Allowed |\n| CWE-862 | Missing Authorization | 0.7 | Class | Secondary Candidate | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is identified as CWE-352 (Cross-Site Request Forgery (CSRF)), a compound weakness. The vulnerability description highlights **missing or incorrect nonce validation**, which directly contributes to CSRF. CWE-862 (Missing Authorization) is considered as a secondary candidate since the **missing nonce validation** can be viewed as a form of **missing authorization**. CWE-352 is a compound of multiple weaknesses that occur simultaneously.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe862[\"CWE-862: Missing Authorization\"]\n    \n    cwe352 -->|RELATED| cwe862\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe352 primary\n    class cwe862 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **missing or incorrect nonce validation** in the td_ajax_get_views AJAX action, leading to a Cross-Site Request Forgery (CSRF) vulnerability, which allows unauthenticated attackers to inject malicious web scripts if they can trick an administrator into clicking a link.\n\n## Summary of Analysis\nThe primary assessment is based on the explicit mention of **Cross-Site Request Forgery** as a **weakness** and the root cause being **missing or incorrect nonce validation**. The vulnerability description clearly states the vulnerable component (td_ajax_get_views AJAX action) and the impact (injecting malicious web scripts).\n\nThe retriever results also list CWE-352 as a potential match. Given the explicit mention of CSRF in the vulnerability description, this seems to be the most appropriate primary CWE.\n\nCWE-862 (Missing Authorization) is considered because **missing nonce validation** can be viewed as a form of **missing authorization**. The absence of proper nonce validation allows unauthorized requests to be processed, effectively bypassing authorization checks.\n\nThe selected CWEs are at the optimal level of specificity. CWE-352 directly addresses the identified vulnerability, while CWE-862 provides additional context regarding the authorization aspect of the weakness.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n**Technical Explanation:**\n\nCWE-352 [Cross-Site Request Forgery (CSRF)] is a compound weakness where the application fails to verify if a request was intentionally provided by the user. In this case, the **missing or incorrect nonce validation** allows attackers to forge requests, leading to CSRF. The security implication is that attackers can perform actions on behalf of the administrator without their consent, such as injecting malicious web scripts. This CWE is the primary weakness as it directly reflects the vulnerability described.\n\n## CWE-862: Missing Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 0.443\n**Source**: sparse\n\n**Description**:\nThe product does not perform any authorization check when an actor attempts to access a resource or perform an action.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This is a Class, so it requires review to ensure that a more specific Base CWE is not available.\n\n**Technical Explanation:**\n\nCWE-862 [Missing Authorization] occurs when the application does not perform any authorization checks before allowing access to a resource or action. In this vulnerability, the **missing or incorrect nonce validation** can be seen as a form of **missing authorization**. By not validating the nonce, the application fails to verify that the request is coming from an authorized user. This can lead to unauthorized access and actions. It is a secondary weakness because it supports the primary CWE-352 (CSRF).\n\n## Other CWEs Considered:\n\n- **CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')]**: While the impact is the injection of malicious web scripts, the root cause is CSRF, not XSS. Therefore, CWE-79 is not the primary weakness.\n- **CWE-89 [Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')]**: This CWE is not relevant as the vulnerability does not involve SQL injection.\n- **CWE-138 [Improper Neutralization of Special Elements]**: This CWE is too generic and doesn't accurately reflect the specific weakness of CSRF.\n- **CWE-96 [Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')]**: The injection is not into statically saved code.\n- **CWE-425 [Direct Request ('Forced Browsing')]**: This is not the primary issue, as the CSRF involves tricking a user into performing an action.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-352 | Cross-Site Request Forgery (CSRF) | 1.0 | Compound | Primary | Allowed |\n| CWE-862 | Missing Authorization | 0.7 | Class | Secondary Candidate | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is identified as CWE-352 (Cross-Site Request Forgery (CSRF)), a compound weakness. The vulnerability description highlights **missing or incorrect nonce validation**, which directly contributes to CSRF. CWE-862 (Missing Authorization) is considered as a secondary candidate since the **missing nonce validation** can be viewed as a form of **missing authorization**. CWE-352 is a compound of multiple weaknesses that occur simultaneously.\n\n```mermaid\ngraph TD\n    cwe352[\"CWE-352: Cross-Site Request Forgery (CSRF)\"]\n    cwe862[\"CWE-862: Missing Authorization\"]\n    \n    cwe352 -->|RELATED| cwe862\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe352 primary\n    class cwe862 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **missing or incorrect nonce validation** in the td_ajax_get_views AJAX action, leading to a Cross-Site Request Forgery (CSRF) vulnerability, which allows unauthenticated attackers to inject malicious web scripts if they can trick an administrator into clicking a link.\n\n## Summary of Analysis\nThe primary assessment is based on the explicit mention of **Cross-Site Request Forgery** as a **weakness** and the root cause being **missing or incorrect nonce validation**. The vulnerability description clearly states the vulnerable component (td_ajax_get_views AJAX action) and the impact (injecting malicious web scripts).\n\nThe retriever results also list CWE-352 as a potential match. Given the explicit mention of CSRF in the vulnerability description, this seems to be the most appropriate primary CWE.\n\nCWE-862 (Missing Authorization) is considered because **missing nonce validation** can be viewed as a form of **missing authorization**. The absence of proper nonce validation allows unauthorized requests to be processed, effectively bypassing authorization checks.\n\nThe selected CWEs are at the optimal level of specificity. CWE-352 directly addresses the identified vulnerability, while CWE-862 provides additional context regarding the authorization aspect of the weakness.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-352: Cross-Site Request Forgery (CSRF)\n**Abstraction Level**: Compound\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This is a well-known Composite of multiple weaknesses that must all occur simultaneously, although it is attack-oriented in nature.\n\n**Technical Explanation:**\n\nCWE-352 [Cross-Site Request Forgery (CSRF)] is a compound weakness where the application fails to verify if a request was intentionally provided by the user. In this case, the **missing or incorrect nonce validation** allows attackers to forge requests, leading to CSRF. The security implication is that attackers can perform actions on behalf of the administrator without their consent, such as injecting malicious web scripts. This CWE is the primary weakness as it directly reflects the vulnerability described.\n\n## CWE-862: Missing Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 0.443\n**Source**: sparse\n\n**Description**:\nThe product does not perform any authorization check when an actor attempts to access a resource or perform an action.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This is a Class, so it requires review to ensure that a more specific Base CWE is not available.\n\n**Technical Explanation:**\n\nCWE-862 [Missing Authorization] occurs when the application does not perform any authorization checks before allowing access to a resource or action. In this vulnerability, the **missing or incorrect nonce validation** can be seen as a form of **missing authorization**. By not validating the nonce, the application fails to verify that the request is coming from an authorized user. This can lead to unauthorized access and actions. It is a secondary weakness because it supports the primary CWE-352 (CSRF).\n\n## Other CWEs Considered:\n\n- **CWE-79 [Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')]**: While the impact is the injection of malicious web scripts, the root cause is CSRF, not XSS. Therefore, CWE-79 is not the primary weakness.\n- **CWE-89 [Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')]**: This CWE is not relevant as the vulnerability does not involve SQL injection.\n- **CWE-138 [Improper Neutralization of Special Elements]**: This CWE is too generic and doesn't accurately reflect the specific weakness of CSRF.\n- **CWE-96 [Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')]**: The injection is not into statically saved code.\n- **CWE-425 [Direct Request ('Forced Browsing')]**: This is not the primary issue, as the CSRF involves tricking a user into performing an action.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n**Chain starting from CWE-862:**\n- 862 (Missing Authorization) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "600",
        "name": "Uncaught Exception in Servlet ",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Missing Catch Block",
        "match_reason": "phrase_in_term_compound_part_0"
      },
      "similarity": 700.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 593.1716013497752
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse"
      },
      "similarity": 462.7793129367466
    },
    {
      "metadata": {
        "doc_id": "138",
        "name": "Improper Neutralization of Special Elements",
        "source": "sparse"
      },
      "similarity": 445.9699292861811
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 443.4332726165361
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 441.7199185603589
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 435.3570813781687
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 421.66278883443715
    },
    {
      "metadata": {
        "doc_id": "96",
        "name": "Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')",
        "type": "Base",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before inserting the input into an executable resource, such as a library, configuration file, or template.",
        "keyphrase_source": "rootcause:missing",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.4842675630036697,
            "graph": 1.6516869663522857
          }
        }
      },
      "similarity": 0.4842675630036697
    },
    {
      "doc_id": "425",
      "text": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
      "score": 0.509892046533857,
      "metadata": {
        "doc_id": "425",
        "name": "Direct Request ('Forced Browsing')",
        "type": "Base",
        "extended_description": "Web applications susceptible to direct request attacks often make the false assumption that such resources can only be reached through a given navigation path and so only apply authorization at certain points in the path.",
        "alternate_terms": [
          "forced browsing"
        ],
        "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
        "relationships": [
          {
            "source_id": "425",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "471",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "424",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "288",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "425",
            "target_id": "862",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "425",
            "target_id": "862",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "862",
            "target_id": "425",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "471",
            "target_id": "425",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "424",
            "target_id": "425",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "288",
            "target_id": "425",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "source": "graph",
        "sources": [
          "vector",
          "graph"
        ],
        "vector_score": 0.509892046533857,
        "graph_score": 3.4200400000000006,
        "score_components": {
          "relationship_chain": 0.6,
          "explicit_mention": 1.0,
          "abstraction_path": 0.9,
          "sequence_path": 0.5760000000000002
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "89",
                  "456",
                  "CANFOLLOW"
                ],
                [
                  "456",
                  "98",
                  "CANPRECEDE"
                ],
                [
                  "98",
                  "425",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.6,
              "type": "relationship_chain",
              "source": "89"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "862",
                  "425",
                  "PARENTOF"
                ]
              ],
              "score": 0.7200000000000001,
              "type": "abstraction_path_down",
              "source": "862"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "79",
                  "184",
                  "CANFOLLOW"
                ],
                [
                  "184",
                  "98",
                  "CANPRECEDE"
                ],
                [
                  "98",
                  "425",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.5760000000000002,
              "type": "vulnerability_sequence_forward",
              "source": "79"
            }
          }
        },
        "is_explicit": true,
        "abstraction_level": "base",
        "position": "after",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.45999215018837475,
            "graph": 2.2559808186135433
          }
        }
      },
      "similarity": 2.2559808186135433
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-862",
      "CWE-79",
      "CWE-352",
      "CWE-138",
      "CWE-96",
      "CWE-425"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}