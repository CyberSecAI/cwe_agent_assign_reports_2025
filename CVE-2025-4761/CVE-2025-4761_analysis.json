{
  "cve_id": "CVE-2025-4761",
  "description": "A vulnerability has been found in PHPGurukul Complaint Management System 2.0 and classified as critical. This vulnerability affects unknown code of the file /admin/admin-profile.php. The manipulation of the argument mobilenumber leads to **sql injection**. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "sql injection",
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": "PHPGurukul Complaint Management System",
    "version": "2",
    "component": "/admin/admin-profile.php"
  },
  "reference_content": "## Analysis of CVE Content\n\nThis content **relates** to a potential vulnerability, but it's a report *about* a vulnerability, not the CVE description itself. It details a SQL injection vulnerability in the \"Complaint Management System\" project V2.0. It provides significantly more detail than a typical CVE description would.\n\nHere's a breakdown of the extracted information:\n\n**Root cause of vulnerability:**\n\n*   The vulnerability stems from the lack of proper sanitization or validation of the \"mobilenumber\" parameter in the `/admin/admin-profile.php` file. This allows attackers to inject malicious SQL code.\n\n**Weaknesses/vulnerabilities present:**\n\n*   SQL Injection\n\n**Impact of exploitation:**\n\n*   Unauthorized database access\n*   Sensitive data leakage\n*   Data tampering\n*   Complete system control\n*   Service disruption\n\n**Attack vectors:**\n\n*   The vulnerability is exploitable via the \"mobilenumber\" parameter in a POST request to `/admin/admin-profile.php`.\n*   No login or authorization is required to exploit the vulnerability.\n\n**Required attacker capabilities/position:**\n\n*   An attacker needs to be able to send a crafted POST request to the vulnerable endpoint. No authentication is required.\n\n**Mitigation or fix:**\n\n*   **Employ prepared statements and parameter binding:** This separates SQL code from user input.\n*   **Conduct input validation and filtering:**  Ensure user input conforms to expected formats.\n*   **Minimize database user permissions:** Use accounts with only the necessary privileges.\n\n**Payload Example:**\n\n```\nParameter: mobilenumber (POST)\n    Type: time-based blind\n    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)\n    Payload: username=admin&fullname=admin&mobilenumber=8956232356' AND (SELECT 2048 FROM (SELECT(SLEEP(5)))WGeA) AND 'bjGb'='bjGb&email=admin@gmail.com&regdate=2023-09-12 13:16:16&updatedate=18-10-2016 04:18:16&submit=\n```\n\n**Vulnerable File:**\n\n*   `/admin/admin-profile.php`\n\n**Version:**\n\n*   V2.0\n\n**Software Link:**\n\n*   <https://phpgurukul.com/?sdm_process_download=1&download_id=7259>",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-89 | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 1.0 | Base | Allowed | Primary CWE |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship influencing the CWE selection is the direct match between the vulnerability description and the definition of CWE-89. The vulnerability description explicitly states \"**sql injection**\" due to improper handling of the `mobilenumber` argument. This aligns perfectly with the base-level definition of CWE-89, which focuses on the improper neutralization of special elements used in an SQL command. The high retriever score and explicit mention of SQL injection further reinforces this selection.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    \n    class cwe89 primary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **improper neutralization** of the `mobilenumber` parameter, leading directly to the possibility of **SQL injection**. This injection can then lead to unauthorized data access, data tampering, or even complete system control.\n\n## Summary of Analysis\nThe analysis is based heavily on the provided evidence, specifically the clear statement of \"**sql injection**\" and the description of the vulnerable parameter (`mobilenumber`). The retriever results strongly support this, with CWE-89 being the top match with a score of 1.0. The CWE definition aligns perfectly with the vulnerability, as it's a direct result of **improper neutralization** of input used in an SQL command.\n\nOther CWEs considered but not used:\n*   CWE-79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')): While neutralization is a general theme, the vulnerability specifically involves SQL commands, making CWE-89 a more precise fit.\n*   CWE-434 (Unrestricted Upload of File with Dangerous Type): This is irrelevant as the vulnerability does not involve file uploads.\n*   CWE-1336 (Improper Neutralization of Special Elements Used in a Template Engine): This is irrelevant as the vulnerability does not involve a template engine.\n*   CWE-117 (Improper Output Neutralization for Logs): This is irrelevant as the vulnerability does not involve log outputs.\n*   CWE-425 (Direct Request ('Forced Browsing')): While the vulnerability is exploitable without authentication, the root cause is the SQL Injection, not the missing authorization.\n\nThe selected CWE is at the optimal level of specificity because it directly addresses the **root cause** of the vulnerability: the lack of proper sanitization leading to SQL injection.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-89 | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 1.0 | Base | Allowed | Primary CWE |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 1.0\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship influencing the CWE selection is the direct match between the vulnerability description and the definition of CWE-89. The vulnerability description explicitly states \"**sql injection**\" due to improper handling of the `mobilenumber` argument. This aligns perfectly with the base-level definition of CWE-89, which focuses on the improper neutralization of special elements used in an SQL command. The high retriever score and explicit mention of SQL injection further reinforces this selection.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    \n    class cwe89 primary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **improper neutralization** of the `mobilenumber` parameter, leading directly to the possibility of **SQL injection**. This injection can then lead to unauthorized data access, data tampering, or even complete system control.\n\n## Summary of Analysis\nThe analysis is based heavily on the provided evidence, specifically the clear statement of \"**sql injection**\" and the description of the vulnerable parameter (`mobilenumber`). The retriever results strongly support this, with CWE-89 being the top match with a score of 1.0. The CWE definition aligns perfectly with the vulnerability, as it's a direct result of **improper neutralization** of input used in an SQL command.\n\nOther CWEs considered but not used:\n*   CWE-79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')): While neutralization is a general theme, the vulnerability specifically involves SQL commands, making CWE-89 a more precise fit.\n*   CWE-434 (Unrestricted Upload of File with Dangerous Type): This is irrelevant as the vulnerability does not involve file uploads.\n*   CWE-1336 (Improper Neutralization of Special Elements Used in a Template Engine): This is irrelevant as the vulnerability does not involve a template engine.\n*   CWE-117 (Improper Output Neutralization for Logs): This is irrelevant as the vulnerability does not involve log outputs.\n*   CWE-425 (Direct Request ('Forced Browsing')): While the vulnerability is exploitable without authentication, the root cause is the SQL Injection, not the missing authorization.\n\nThe selected CWE is at the optimal level of specificity because it directly addresses the **root cause** of the vulnerability: the lack of proper sanitization leading to SQL injection.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n**Chain starting from CWE-79:**\n- 79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: SQL injection",
        "match_reason": "exact_match_whole_phrase"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "sparse"
      },
      "similarity": 405.00450363930497
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse"
      },
      "similarity": 361.059304642145
    },
    {
      "metadata": {
        "doc_id": "1336",
        "name": "Improper Neutralization of Special Elements Used in a Template Engine",
        "source": "sparse"
      },
      "similarity": 336.56693984553715
    },
    {
      "metadata": {
        "doc_id": "117",
        "name": "Improper Output Neutralization for Logs",
        "source": "sparse"
      },
      "similarity": 329.99478869113506
    },
    {
      "metadata": {
        "doc_id": "99",
        "name": "Improper Control of Resource Identifiers ('Resource Injection')",
        "source": "sparse"
      },
      "similarity": 325.36984981814993
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 312.00629678407853
    },
    {
      "metadata": {
        "doc_id": "1391",
        "name": "Use of Weak Credentials",
        "source": "sparse"
      },
      "similarity": 311.3138236111099
    },
    {
      "metadata": {
        "doc_id": "96",
        "name": "Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')",
        "type": "Base",
        "original_content": "The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before inserting the input into an executable resource, such as a library, configuration file, or template.",
        "keyphrase_source": "weakness:sql injection",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5811097161676009,
            "graph": 1.6854947557022195
          }
        }
      },
      "similarity": 0.5811097161676009
    },
    {
      "doc_id": "73",
      "text": "CWE-73: External Control of File Name or Path",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "73",
        "name": "External Control of File Name or Path",
        "type": "base",
        "original_content": "CWE-73: External Control of File Name or Path",
        "relationships": [
          {
            "source_id": "73",
            "target_id": "114",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "59",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "434",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "41",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "22",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "20",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "700"
            }
          },
          {
            "source_id": "73",
            "target_id": "610",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "642",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "99",
            "target_id": "73",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "642",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "610",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "59",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "434",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "22",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "20",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "700"
            }
          },
          {
            "source_id": "114",
            "target_id": "73",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "434",
                  "73",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "434"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "434",
                  "73",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "434"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "73",
                  "434",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "434"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-89",
      "CWE-79",
      "CWE-1336",
      "CWE-117",
      "CWE-425",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}