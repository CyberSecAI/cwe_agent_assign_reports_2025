{
  "cve_id": "CVE-2024-42981",
  "description": "Tenda FH1206 v02.03.01.35 was discovered to contain a **stack overflow** via the delno parameter in the fromPptpUserSetting function. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted POST request.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "stack overflow",
    "impact": "Denial of Service (DoS)",
    "vector": "crafted POST request",
    "attacker": "attackers",
    "product": "Tenda FH1206",
    "version": "v02.03.01.35",
    "component": "fromPptpUserSetting function"
  },
  "reference_content": "- **Root cause of vulnerability:** The vulnerability is caused by a stack-based buffer overflow in the `fromPptpUserSetting` function.\n- **Weaknesses/vulnerabilities present:**  The `sprintf` function is used to format a string using a user-supplied input (`delno`) without proper bounds checking. The `delno` parameter is concatenated into a string using `sprintf` and stored in a local buffer (`v9`). If the `delno` parameter is too long, it will overflow the buffer `v9`.\n- **Impact of exploitation:** Successful exploitation can lead to arbitrary code execution due to the stack-based buffer overflow, potentially granting the attacker full control over the device.\n- **Attack vectors:** The attack vector is through a POST request to `/goform/PPTPUserSetting` with a long `delno` parameter.\n- **Required attacker capabilities/position:** The attacker must be able to send HTTP POST requests to the affected device.",
  "similar_info": {
    "cwe_distribution": {
      "95": {
        "cwe_counts": {
          "CWE-787": 4
        },
        "total_samples": 4,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 4,
            "proportion": 1.0
          }
        ]
      },
      "90": {
        "cwe_counts": {
          "CWE-787": 29
        },
        "total_samples": 29,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 29,
            "proportion": 1.0
          }
        ]
      },
      "85": {
        "cwe_counts": {
          "CWE-787": 29
        },
        "total_samples": 29,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 29,
            "proportion": 1.0
          }
        ]
      },
      "80": {
        "cwe_counts": {
          "CWE-787": 21,
          "CWE-120": 4
        },
        "total_samples": 25,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 21,
            "proportion": 0.84
          },
          {
            "cwes": [
              "CWE-120"
            ],
            "frequency": 4,
            "proportion": 0.16
          }
        ]
      },
      "75": {
        "cwe_counts": {
          "CWE-787": 35
        },
        "total_samples": 35,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 35,
            "proportion": 1.0
          }
        ]
      },
      "70": {
        "cwe_counts": {
          "CWE-787": 30
        },
        "total_samples": 31,
        "distribution": [
          {
            "cwes": [
              "CWE-787"
            ],
            "frequency": 30,
            "proportion": 0.968
          },
          {
            "cwes": [],
            "frequency": 1,
            "proportion": 0.032
          }
        ]
      }
    },
    "cwe_consensus": "CWE-787",
    "similarity_stats": {
      "thresholds": [
        95,
        90,
        85,
        80,
        75,
        70
      ],
      "total_samples_by_threshold": {
        "95": 4,
        "90": 29,
        "85": 29,
        "80": 25,
        "75": 35,
        "70": 31
      },
      "top_cwes_by_threshold": {
        "95": [
          [
            "CWE-787",
            4
          ]
        ],
        "90": [
          [
            "CWE-787",
            29
          ]
        ],
        "85": [
          [
            "CWE-787",
            29
          ]
        ],
        "80": [
          [
            "CWE-787",
            21
          ],
          [
            "CWE-120",
            4
          ]
        ],
        "75": [
          [
            "CWE-787",
            35
          ]
        ],
        "70": [
          [
            "CWE-787",
            30
          ]
        ]
      }
    },
    "raw_matches": [
      {
        "similarity": 95,
        "cwes": [
          "787"
        ],
        "total": 4,
        "frequency": 4,
        "proportion": 1.0
      },
      {
        "similarity": 90,
        "cwes": [
          "787"
        ],
        "total": 29,
        "frequency": 29,
        "proportion": 1.0
      },
      {
        "similarity": 85,
        "cwes": [
          "787"
        ],
        "total": 29,
        "frequency": 29,
        "proportion": 1.0
      },
      {
        "similarity": 80,
        "cwes": [
          "787"
        ],
        "total": 25,
        "frequency": 21,
        "proportion": 0.84
      },
      {
        "similarity": 80,
        "cwes": [
          "120"
        ],
        "total": 25,
        "frequency": 4,
        "proportion": 0.16
      },
      {
        "similarity": 75,
        "cwes": [
          "787"
        ],
        "total": 35,
        "frequency": 35,
        "proportion": 1.0
      },
      {
        "similarity": 70,
        "cwes": [
          "787"
        ],
        "total": 31,
        "frequency": 30,
        "proportion": 0.968
      },
      {
        "similarity": 70,
        "cwes": [],
        "total": 31,
        "frequency": 1,
        "proportion": 0.032
      }
    ]
  },
  "similarity_summary": {
    "consensus_cwe": "CWE-787",
    "top_cwes": [
      [
        "CWE-787",
        148
      ],
      [
        "CWE-120",
        4
      ]
    ],
    "confidence_levels": {
      "high": [],
      "medium": [],
      "low": []
    },
    "total_samples": 153
  },
  "analysis": "# Summary\n| CWE ID  | CWE Name                                                            | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---------|---------------------------------------------------------------------|------------|-----------------------|-----------------------------------|-----------------------------------|\n| CWE-121 | Stack-based Buffer Overflow                                         | 0.9        | Variant               | Primary                           | Allowed                           |\n| CWE-787 | Out-of-bounds Write                                                 | 0.7        | Base                  | Secondary                         | Allowed                           |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary weakness is a stack-based buffer overflow (CWE-121). This is a specific type of out-of-bounds write (CWE-787) where the buffer is located on the stack. CWE-121 is a variant of CWE-787, offering a more precise classification in this case. Therefore, CWE-121 is chosen as the primary CWE, and CWE-787 is considered a secondary, more general classification.\n\n```mermaid\ngraph TD\n    cwe121[\"CWE-121: Stack-based Buffer Overflow\"]\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\"]\n\n    cwe121 -->|CHILDOF| cwe787\n    cwe787 -->|CHILDOF| cwe119\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe121 primary\n    class cwe787 secondary\n    class cwe119 tertiary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with the **improper use of sprintf** without proper bounds checking. This leads to an out-of-bounds write on the stack, specifically a **stack overflow** (CWE-121), which ultimately results in a denial of service (DoS).\n\n## Summary of Analysis\n\nThe vulnerability description clearly indicates a **stack overflow** in the `fromPptpUserSetting` function due to the use of `sprintf` without proper bounds checking when handling the `delno` parameter. The `delno` parameter is user-supplied.\n\nThe evidence for the stack buffer overflow is:\n- \"Tenda FH1206 v02.03.01.35 was discovered to contain a **stack overflow** via the delno parameter in the fromPptpUserSetting function.\"\n- \"**Root cause of vulnerability:** The vulnerability is caused by a stack-based buffer overflow in the `fromPptpUserSetting` function.\"\n- \"**Weaknesses/vulnerabilities present:** The `sprintf` function is used to format a string using a user-supplied input (`delno`) without proper bounds checking.\"\n- \"If the `delno` parameter is too long, it will overflow the buffer `v9`.\"\n\nGiven the specific nature of the overflow occurring on the stack, CWE-121 (Stack-based Buffer Overflow) is the most accurate and specific classification. While CWE-787 (Out-of-bounds Write) is a valid, more general classification, CWE-121 provides greater precision. The retriever results also support CWE-121 as a primary candidate.\n\nCWE-121 is at the \"Variant\" level of abstraction, which is preferred.\n\nOther CWEs Considered and Rejected:\n\n*   CWE-120 (Buffer Copy without Checking Size of Input): While related to buffer overflows, this CWE is more specific to buffer copy operations, which is not the primary issue here. The root cause is the lack of bounds checking with `sprintf`, not necessarily a buffer copy operation.\n*   CWE-190 (Integer Overflow or Wraparound): This CWE is not relevant as the vulnerability is related to string manipulation and buffer overflows, not integer calculations.\n*   CWE-134 (Use of Externally-Controlled Format String): Although the vulnerability involves user-supplied input, the core issue is the buffer overflow caused by `sprintf`, not directly related to format string vulnerabilities.\n*   CWE-78 (Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')): This CWE is not relevant as the vulnerability does not involve OS command injection.\n*   CWE-125 (Out-of-bounds Read): The vulnerability involves writing past the end of the buffer.",
  "analysis_with_relationships": "# Summary\n| CWE ID  | CWE Name                                                            | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---------|---------------------------------------------------------------------|------------|-----------------------|-----------------------------------|-----------------------------------|\n| CWE-121 | Stack-based Buffer Overflow                                         | 0.9        | Variant               | Primary                           | Allowed                           |\n| CWE-787 | Out-of-bounds Write                                                 | 0.7        | Base                  | Secondary                         | Allowed                           |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\n\nThe primary weakness is a stack-based buffer overflow (CWE-121). This is a specific type of out-of-bounds write (CWE-787) where the buffer is located on the stack. CWE-121 is a variant of CWE-787, offering a more precise classification in this case. Therefore, CWE-121 is chosen as the primary CWE, and CWE-787 is considered a secondary, more general classification.\n\n```mermaid\ngraph TD\n    cwe121[\"CWE-121: Stack-based Buffer Overflow\"]\n    cwe787[\"CWE-787: Out-of-bounds Write\"]\n    cwe119[\"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer\"]\n\n    cwe121 -->|CHILDOF| cwe787\n    cwe787 -->|CHILDOF| cwe119\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe121 primary\n    class cwe787 secondary\n    class cwe119 tertiary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with the **improper use of sprintf** without proper bounds checking. This leads to an out-of-bounds write on the stack, specifically a **stack overflow** (CWE-121), which ultimately results in a denial of service (DoS).\n\n## Summary of Analysis\n\nThe vulnerability description clearly indicates a **stack overflow** in the `fromPptpUserSetting` function due to the use of `sprintf` without proper bounds checking when handling the `delno` parameter. The `delno` parameter is user-supplied.\n\nThe evidence for the stack buffer overflow is:\n- \"Tenda FH1206 v02.03.01.35 was discovered to contain a **stack overflow** via the delno parameter in the fromPptpUserSetting function.\"\n- \"**Root cause of vulnerability:** The vulnerability is caused by a stack-based buffer overflow in the `fromPptpUserSetting` function.\"\n- \"**Weaknesses/vulnerabilities present:** The `sprintf` function is used to format a string using a user-supplied input (`delno`) without proper bounds checking.\"\n- \"If the `delno` parameter is too long, it will overflow the buffer `v9`.\"\n\nGiven the specific nature of the overflow occurring on the stack, CWE-121 (Stack-based Buffer Overflow) is the most accurate and specific classification. While CWE-787 (Out-of-bounds Write) is a valid, more general classification, CWE-121 provides greater precision. The retriever results also support CWE-121 as a primary candidate.\n\nCWE-121 is at the \"Variant\" level of abstraction, which is preferred.\n\nOther CWEs Considered and Rejected:\n\n*   CWE-120 (Buffer Copy without Checking Size of Input): While related to buffer overflows, this CWE is more specific to buffer copy operations, which is not the primary issue here. The root cause is the lack of bounds checking with `sprintf`, not necessarily a buffer copy operation.\n*   CWE-190 (Integer Overflow or Wraparound): This CWE is not relevant as the vulnerability is related to string manipulation and buffer overflows, not integer calculations.\n*   CWE-134 (Use of Externally-Controlled Format String): Although the vulnerability involves user-supplied input, the core issue is the buffer overflow caused by `sprintf`, not directly related to format string vulnerabilities.\n*   CWE-78 (Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')): This CWE is not relevant as the vulnerability does not involve OS command injection.\n*   CWE-125 (Out-of-bounds Read): The vulnerability involves writing past the end of the buffer.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-121:**\n- 121 (Stack-based Buffer Overflow) - ROOT\n\n\n**Chain starting from CWE-125:**\n- 125 (Out-of-bounds Read) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "121",
        "name": "Stack-based Buffer Overflow",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Stack Overflow",
        "match_reason": "exact_match_whole_phrase"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "190",
        "name": "Integer Overflow or Wraparound",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Overflow",
        "match_reason": "term_in_phrase_whole_phrase"
      },
      "similarity": 800.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "674",
        "name": "Uncontrolled Recursion",
        "source": "sparse"
      },
      "similarity": 236.00419475280958
    },
    {
      "metadata": {
        "doc_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "source": "sparse"
      },
      "similarity": 211.22460763820607
    },
    {
      "metadata": {
        "doc_id": "770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "source": "sparse"
      },
      "similarity": 209.46408917072236
    },
    {
      "metadata": {
        "doc_id": "130",
        "name": "Improper Handling of Length Parameter Inconsistency",
        "source": "sparse"
      },
      "similarity": 207.93593785651296
    },
    {
      "metadata": {
        "doc_id": "122",
        "name": "Heap-based Buffer Overflow",
        "source": "sparse"
      },
      "similarity": 204.13730555007018
    },
    {
      "metadata": {
        "doc_id": "125",
        "name": "Out-of-bounds Read",
        "source": "sparse"
      },
      "similarity": 203.93835836338027
    },
    {
      "metadata": {
        "doc_id": "78",
        "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "type": "Base",
        "original_content": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
        "keyphrase_source": "weakness:stack overflow",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "retriever_count": 3,
          "normalized_scores": {
            "dense": 0.5520269943008391,
            "sparse": 69.37413623493003,
            "graph": 1.632071352917378
          }
        }
      },
      "similarity": 0.5520269943008391
    },
    {
      "doc_id": "128",
      "text": "CWE-128: Wrap-around Error",
      "score": 2.2698,
      "metadata": {
        "doc_id": "128",
        "name": "Wrap-around Error",
        "type": "base",
        "original_content": "CWE-128: Wrap-around Error",
        "relationships": [
          {
            "source_id": "128",
            "target_id": "190",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "128",
            "target_id": "119",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "128",
            "target_id": "682",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "682",
            "target_id": "128",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "119",
            "target_id": "128",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 0.7,
          "sequence_path": 0.7200000000000001,
          "peer_group": 0.9
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "peer_relationship"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "128",
                  "190",
                  "PEEROF"
                ]
              ],
              "score": 0.7,
              "type": "relationship_chain",
              "source": "190"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "190",
                  "119",
                  "CANPRECEDE"
                ],
                [
                  "119",
                  "128",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.7200000000000001,
              "type": "vulnerability_sequence_forward",
              "source": "190"
            },
            "peer_relationship": {
              "path": [
                [
                  "128",
                  "190",
                  "PEEROF"
                ]
              ],
              "score": 0.9,
              "type": "peer_relationship",
              "source": "190"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2698
          }
        }
      },
      "similarity": 2.2698
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-121",
      "CWE-125",
      "CWE-787",
      "CWE-190",
      "CWE-134",
      "CWE-78",
      "CWE-119",
      "CWE-120"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}