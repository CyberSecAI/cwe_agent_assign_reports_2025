{
  "cve_id": "CVE-2025-32080",
  "description": "Exposure of Sensitive Information to an Unauthorized Actor vulnerability in The Wikimedia Foundation Mediawiki - Mobile Frontend Extension allows Shared Resource Manipulation.This issue affects Mediawiki - Mobile Frontend Extension from 1.39 through 1.43.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "",
    "impact": [
      "Exposure of Sensitive Information to an Unauthorized Actor",
      "Shared Resource Manipulation"
    ],
    "vector": "",
    "attacker": "",
    "product": "Mediawiki - Mobile Frontend Extension",
    "version": "1.39 through 1.43",
    "component": ""
  },
  "reference_content": "## CVE-2025-32080 Analysis\n\nBased on the provided content from phabricator.wikimedia.org, this relates to CVE-2025-32080. The content details a cross-origin data leak vulnerability in MobileFrontend due to lazy-loaded images.\n\n**Root cause of vulnerability:**\n\nThe vulnerability stems from the ability of users to construct `span` tags with the class `lazy-image-placeholder` and `data-src` attributes. These attributes, when processed, allow bypassing sanitization and making arbitrary GET requests, potentially leaking user information (like IP addresses or the current page).\n\n**Weaknesses/vulnerabilities present:**\n\n*   Insufficient sanitization of user-provided data used in lazy-loaded images.\n*   Use of `data-src` attribute which is vulnerable to manipulation.\n\n**Impact of exploitation:**\n\n*   Leakage of user data (e.g., IP address, current page) to external resources.\n*   Privacy violation.\n\n**Attack vectors:**\n\n*   An attacker can craft a malicious page or edit an existing page to include a `span` tag with a crafted `data-src` attribute.\n*   When a user views the page, the browser will make a GET request to the attacker-controlled resource, potentially sending sensitive information.\n\n**Required attacker capabilities/position:**\n\n*   The attacker needs the ability to create or modify content on a MediaWiki site using MobileFrontend.\n\n**Mitigation or fix:**\n\n*   Replace `data-src` with `data-mw-src` (and similar for other attributes) as the MediaWiki sanitizer forbids attributes starting with `data-mw`.\n*   Ensure compatibility with both `data-src` and `data-mw-src` during the transition to avoid breaking image display.\n*   Consider implementing a Content Security Policy (CSP) as a longer-term solution.\n*   Backporting the fix to older releases.\n\n**Additional Details:**\n\n*   The fix involved multiple patches applied to different release branches (REL1\\_39, REL1\\_40, REL1\\_41, REL1\\_42, REL1\\_43, master, and wmf branches).\n*   The fix was verified through test cases, including checking for the absence of `data-src` and `data-srcset` in the page source and ensuring no broken images appear in the editor preview.\n*   The issue was initially discovered and reported in January/February 2025, with the fix deployed in late February 2025.\n*   The task was marked as verified after successful deployment and testing.\n\nThe content provides more detail than the official CVE description would likely contain, including specific details about the patches, testing procedures, and deployment timeline.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-201 | Insertion of Sensitive Information Into Sent Data | 0.9 | Base | Allowed | Primary CWE. The vulnerability allows the leakage of user data (e.g., IP address, current page) to external resources by sending sensitive information. |\n| CWE-668 | Exposure of Resource to Wrong Sphere | 0.6 | Class | Discouraged | Secondary Candidate. The vulnerability exposes user information to external resources, which can be seen as exposing a resource to the wrong sphere. However, CWE-201 is a more precise match. |\n| CWE-359 | Exposure of Private Personal Information to an Unauthorized Actor | 0.6 | Base | Allowed | Secondary Candidate. The vulnerability leads to the exposure of private personal information (IP address, current page) to unauthorized actors. However, CWE-201 focuses on the mechanism of sending sensitive data, making it a better fit. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE, CWE-201, is related to other CWEs through various relationships:\n  - It is a Base level CWE, providing a good level of specificity.\n  - CWE-201 can precede CWE-226 (Sensitive Information in Resource Not Removed Before Reuse) and CWE-212 (Improper Removal of Sensitive Information Before Storage or Transfer), suggesting that sensitive information can be sent and then improperly handled.\n  - It can also be related to CWE-202 (Exposure of Sensitive Information Through Data Element) and CWE-209 (Generation of Error Message Containing Sensitive Information), representing alternative ways sensitive information can be exposed.\n  - It is a child of CWE-668 (Exposure of Resource to Wrong Sphere) and CWE-200 (Exposure of Sensitive Information to an Unauthorized Actor), but the parent CWEs are too high-level.\n\n```mermaid\ngraph TD\n    cwe201[\"CWE-201: Insertion of Sensitive Information Into Sent Data\"]\n    cwe200[\"CWE-200: Exposure of Sensitive Information to an Unauthorized Actor\"]\n    cwe668[\"CWE-668: Exposure of Resource to Wrong Sphere\"]\n    cwe212[\"CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\"]\n    cwe226[\"CWE-226: Sensitive Information in Resource Not Removed Before Reuse\"]\n\n    cwe201 -->|CHILDOF| cwe200\n    cwe201 -->|CHILDOF| cwe668\n    cwe201 -->|CANPRECEDE| cwe212\n    cwe201 -->|CANPRECEDE| cwe226\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe201 primary\n    class cwe200,cwe668,cwe212,cwe226 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **insufficient sanitization** of user-provided data in lazy-loaded images, which leads to the **insertion of sensitive information (IP address, current page) into GET requests (CWE-201)**. The final impact is the **exposure of sensitive information to external resources**, potentially violating user privacy.\n\n## Summary of Analysis\nThe analysis is based on the provided vulnerability description and CVE reference links. The root cause is the **insufficient sanitization** of user-provided data, allowing the injection of malicious `span` tags with crafted `data-src` attributes. This leads to the **transmission of sensitive information (IP address, current page) to attacker-controlled resources (CWE-201)**.\n\nThe retriever results and relationship analysis support the selection of CWE-201 as the primary CWE. While CWE-200, CWE-668, and CWE-359 were considered, they are either too high-level or do not fully capture the mechanism of the vulnerability. CWE-201 accurately represents the weakness of inserting sensitive data into sent data. The evidence from the CVE reference link content summary is: \"The vulnerability stems from the ability of users to construct `span` tags with the class `lazy-image-placeholder` and `data-src` attributes...allowing bypassing sanitization and making arbitrary GET requests, potentially leaking user information (like IP addresses or the current page).\"\n\nThe selection of CWE-201 is at the optimal level of specificity, as it directly addresses the core issue of inserting sensitive information into sent data. Other CWEs, such as CWE-200 and CWE-668, are more general and represent the impact of the vulnerability rather than the root cause.\n\nOther CWEs considered but not used:\n- CWE-200: Exposure of Sensitive Information to an Unauthorized Actor - While the ultimate impact is exposure, this CWE is too high-level and doesn't describe the mechanism.\n- CWE-668: Exposure of Resource to Wrong Sphere - This is also too high-level and doesn't describe the specific weakness.\n- CWE-359: Exposure of Private Personal Information to an Unauthorized Actor - Similar to CWE-200, this describes the impact, but not the root cause.\n- CWE-532: Insertion of Sensitive Information into Log File - This is specific to log files, which is not the case here.\n- CWE-434: Unrestricted Upload of File with Dangerous Type - This is not related to file uploads.\n- CWE-73: External Control of File Name or Path - This is not related to file paths.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-201 | Insertion of Sensitive Information Into Sent Data | 0.9 | Base | Allowed | Primary CWE. The vulnerability allows the leakage of user data (e.g., IP address, current page) to external resources by sending sensitive information. |\n| CWE-668 | Exposure of Resource to Wrong Sphere | 0.6 | Class | Discouraged | Secondary Candidate. The vulnerability exposes user information to external resources, which can be seen as exposing a resource to the wrong sphere. However, CWE-201 is a more precise match. |\n| CWE-359 | Exposure of Private Personal Information to an Unauthorized Actor | 0.6 | Base | Allowed | Secondary Candidate. The vulnerability leads to the exposure of private personal information (IP address, current page) to unauthorized actors. However, CWE-201 focuses on the mechanism of sending sensitive data, making it a better fit. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE, CWE-201, is related to other CWEs through various relationships:\n  - It is a Base level CWE, providing a good level of specificity.\n  - CWE-201 can precede CWE-226 (Sensitive Information in Resource Not Removed Before Reuse) and CWE-212 (Improper Removal of Sensitive Information Before Storage or Transfer), suggesting that sensitive information can be sent and then improperly handled.\n  - It can also be related to CWE-202 (Exposure of Sensitive Information Through Data Element) and CWE-209 (Generation of Error Message Containing Sensitive Information), representing alternative ways sensitive information can be exposed.\n  - It is a child of CWE-668 (Exposure of Resource to Wrong Sphere) and CWE-200 (Exposure of Sensitive Information to an Unauthorized Actor), but the parent CWEs are too high-level.\n\n```mermaid\ngraph TD\n    cwe201[\"CWE-201: Insertion of Sensitive Information Into Sent Data\"]\n    cwe200[\"CWE-200: Exposure of Sensitive Information to an Unauthorized Actor\"]\n    cwe668[\"CWE-668: Exposure of Resource to Wrong Sphere\"]\n    cwe212[\"CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\"]\n    cwe226[\"CWE-226: Sensitive Information in Resource Not Removed Before Reuse\"]\n\n    cwe201 -->|CHILDOF| cwe200\n    cwe201 -->|CHILDOF| cwe668\n    cwe201 -->|CANPRECEDE| cwe212\n    cwe201 -->|CANPRECEDE| cwe226\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe201 primary\n    class cwe200,cwe668,cwe212,cwe226 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **insufficient sanitization** of user-provided data in lazy-loaded images, which leads to the **insertion of sensitive information (IP address, current page) into GET requests (CWE-201)**. The final impact is the **exposure of sensitive information to external resources**, potentially violating user privacy.\n\n## Summary of Analysis\nThe analysis is based on the provided vulnerability description and CVE reference links. The root cause is the **insufficient sanitization** of user-provided data, allowing the injection of malicious `span` tags with crafted `data-src` attributes. This leads to the **transmission of sensitive information (IP address, current page) to attacker-controlled resources (CWE-201)**.\n\nThe retriever results and relationship analysis support the selection of CWE-201 as the primary CWE. While CWE-200, CWE-668, and CWE-359 were considered, they are either too high-level or do not fully capture the mechanism of the vulnerability. CWE-201 accurately represents the weakness of inserting sensitive data into sent data. The evidence from the CVE reference link content summary is: \"The vulnerability stems from the ability of users to construct `span` tags with the class `lazy-image-placeholder` and `data-src` attributes...allowing bypassing sanitization and making arbitrary GET requests, potentially leaking user information (like IP addresses or the current page).\"\n\nThe selection of CWE-201 is at the optimal level of specificity, as it directly addresses the core issue of inserting sensitive information into sent data. Other CWEs, such as CWE-200 and CWE-668, are more general and represent the impact of the vulnerability rather than the root cause.\n\nOther CWEs considered but not used:\n- CWE-200: Exposure of Sensitive Information to an Unauthorized Actor - While the ultimate impact is exposure, this CWE is too high-level and doesn't describe the mechanism.\n- CWE-668: Exposure of Resource to Wrong Sphere - This is also too high-level and doesn't describe the specific weakness.\n- CWE-359: Exposure of Private Personal Information to an Unauthorized Actor - Similar to CWE-200, this describes the impact, but not the root cause.\n- CWE-532: Insertion of Sensitive Information into Log File - This is specific to log files, which is not the case here.\n- CWE-434: Unrestricted Upload of File with Dangerous Type - This is not related to file uploads.\n- CWE-73: External Control of File Name or Path - This is not related to file paths.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-359:**\n- 359 (Exposure of Private Personal Information to an Unauthorized Actor) - ROOT\n\n\n**Chain starting from CWE-226:**\n- 226 (Sensitive Information in Resource Not Removed Before Reuse) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 61.38597640603768
    },
    {
      "metadata": {
        "doc_id": "200",
        "name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "source": "sparse"
      },
      "similarity": 51.94246565049445
    },
    {
      "metadata": {
        "doc_id": "704",
        "name": "Incorrect Type Conversion or Cast",
        "source": "sparse"
      },
      "similarity": 51.35432883223248
    },
    {
      "metadata": {
        "doc_id": "668",
        "name": "Exposure of Resource to Wrong Sphere",
        "source": "sparse"
      },
      "similarity": 50.96139924707592
    },
    {
      "metadata": {
        "doc_id": "362",
        "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
        "source": "sparse"
      },
      "similarity": 49.95624390811632
    },
    {
      "metadata": {
        "doc_id": "532",
        "name": "Insertion of Sensitive Information into Log File",
        "source": "sparse"
      },
      "similarity": 48.98890402236233
    },
    {
      "metadata": {
        "doc_id": "522",
        "name": "Insufficiently Protected Credentials",
        "source": "sparse"
      },
      "similarity": 47.72099146051054
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 47.08319263373295
    },
    {
      "metadata": {
        "doc_id": "359",
        "name": "Exposure of Private Personal Information to an Unauthorized Actor",
        "type": "Base",
        "original_content": "The product does not properly prevent a person's private, personal information from being accessed by actors who either (1) are not explicitly authorized to access the information or (2) do not have the implicit consent of the person about whom the information is collected.",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5585391685572006,
            "graph": 1.7310160278576034
          }
        }
      },
      "similarity": 0.5585391685572006
    },
    {
      "doc_id": "499",
      "text": "CWE-499: Serializable Class Containing Sensitive Data",
      "score": 2.6784000000000003,
      "metadata": {
        "doc_id": "499",
        "name": "Serializable Class Containing Sensitive Data",
        "type": "variant",
        "original_content": "CWE-499: Serializable Class Containing Sensitive Data",
        "relationships": [
          {
            "source_id": "499",
            "target_id": "200",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "499",
            "target_id": "668",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "668",
            "target_id": "499",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "200",
            "target_id": "499",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.76,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.2,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "200",
                  "499",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "200"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "668",
                  "499",
                  "PARENTOF"
                ]
              ],
              "score": 0.76,
              "type": "abstraction_path_down",
              "source": "668"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "200",
                  "499",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "200"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "499",
                  "200",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "200"
            }
          }
        },
        "abstraction_level": "variant",
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.6784000000000003
          }
        }
      },
      "similarity": 2.6784000000000003
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-359",
      "CWE-226",
      "CWE-73",
      "CWE-201",
      "CWE-532",
      "CWE-209",
      "CWE-202",
      "CWE-668",
      "CWE-200",
      "CWE-212",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}