{
  "cve_id": "CVE-2024-37150",
  "description": "An issue in `.npmrc` support in Deno 1.44.0 was discovered where Deno would send `.npmrc` credentials for the scope to the tarball URL when the registry provided URLs for a tarball on a different domain. All users relying on .npmrc are potentially affected by this vulnerability if their private registry references tarball URLs at a different domain. This includes usage of deno install subcommand, auto-install for npm specifiers and LSP usage. It is recommended to upgrade to Deno 1.44.1 and if your private registry ever serves tarballs at a different domain to rotate your registry credentials.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "send .npmrc credentials to tarball URL",
    "impact": "",
    "vector": "",
    "attacker": "",
    "product": "Deno",
    "version": "1.44.0",
    "component": ".npmrc support"
  },
  "reference_content": "Based on the provided content, here's an analysis of CVE-2024-37150:\n\n**Root Cause of Vulnerability:**\n\nThe vulnerability stems from how Deno 1.44.0 handled `.npmrc` configuration when downloading npm package tarballs. Specifically, Deno was incorrectly using the authentication credentials associated with the npm registry URL for the scope of the package, instead of using the credentials associated with the specific URL of the tarball itself. This is a deviation from how npm itself handles authentication.\n\n**Weaknesses/Vulnerabilities Present:**\n\n*   **Incorrect Authentication Scope:** The primary vulnerability is that Deno used the credentials for the registry URL to download the tarball, even if the tarball was hosted on a different domain.\n*   **Credential Exposure:** This could lead to credentials being sent to unintended domains, potentially exposing them to malicious actors or unauthorized servers if a private registry was configured with tarball URLs hosted on a different domain.\n\n**Impact of Exploitation:**\n\n*   **Credential Exposure:** An attacker, by controlling a server that serves tarballs, could potentially receive authentication tokens intended for a private npm registry if a user's `.npmrc` was configured to use such private registry but the tarball url pointed to an attacker-controlled server.\n*   **Supply Chain Attack (Potential):** If an attacker gained access to credentials, they might be able to modify packages in the private registry.\n\n**Attack Vectors:**\n\n*   **Man-in-the-Middle (MitM) attack:** An attacker could potentially intercept requests to a legitimate registry, and then serve packages that use tarball URLs on different domains which the attacker controls.\n*   **Compromised registry:** If the user used a malicious or compromised registry which serves tarball urls from a different domain controlled by the attacker, then this vulnerability would be triggered.\n\n**Required Attacker Capabilities/Position:**\n\n*   **Control Over a Server:** The attacker needs to have control over a server that can serve tarballs for npm packages.\n*   **Ability to Redirect/Serve Modified Registry Data:** The attacker needs to be able to either redirect a legitimate registry or to serve their own malicious registry which specifies tarball urls from a different domain controlled by the attacker.\n*   **User Interaction:** The user has to be using Deno and have their `.npmrc` configured to use a private registry with tarball URLs hosted on a different domain than the registry itself. The user also must be using one of the affected features (deno install, auto-install for npm, or LSP).\n\n**Additional Details:**\n\n*   The vulnerability is specific to Deno version 1.44.0 and was fixed in version 1.44.1.\n*   The fix addresses the incorrect credential handling by ensuring the tarball URL is used to determine the authentication scope, rather than just the scope defined in the `.npmrc` file.\n*   The fix also includes error handling to detect if there's no authentication for the tarball URI and auth is present for the scope.\n*   The github content also mentions a relevant npm cli wiki page: `https://github.com/npm/cli/wiki/%22No-auth-for-URI,-but-auth-present-for-scoped-registry%22` which provides additional details about the vulnerability.\n* The vulnerability is triggered when using `deno install`, auto-install for npm specifiers, and LSP usage.\n\nIn summary, CVE-2024-37150 is a vulnerability in Deno that could expose npm registry credentials if the user's private npm registry is configured in a certain way. It's a high-severity vulnerability due to the potential for credential exposure.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-923 | Improper Restriction of Communication Channel to Intended Endpoints | 0.8 | Class | Primary | Allowed-with-Review |\n| CWE-200 | Exposure of Sensitive Information to an Unauthorized Actor | 0.6 | Class | Secondary | Discouraged |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.7\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary CWE selected is CWE-923, which is a Class-level CWE. While a more specific Base or Variant CWE would be ideal, the available information does not strongly point to a more specific weakness. CWE-923 describes the core issue of a communication channel not being properly restricted to the intended endpoint, which aligns with the vulnerability where credentials intended for a specific registry are sent to a different domain. CWE-200 is a secondary consideration, representing the impact of the vulnerability, where sensitive information is exposed. However, CWE-200 is discouraged as a primary mapping, as it represents the impact rather than the root cause.\n\n```mermaid\ngraph TD\n    cwe923[\"CWE-923: Improper Restriction of Communication Channel to Intended Endpoints\"]\n    cwe200[\"CWE-200: Exposure of Sensitive Information to an Unauthorized Actor\"]\n    \n    cwe200 -->|RESULT| cwe923\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe923 primary\n    class cwe200 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **improper restriction of the communication channel (CWE-923)**, where Deno fails to ensure that credentials are only sent to the intended endpoint (the specific tarball URL's domain). This leads to the **exposure of sensitive information (CWE-200)**, as the `.npmrc` credentials are sent to an unauthorized actor (a different domain potentially controlled by an attacker).\n\n## Summary of Analysis\nThe initial analysis focused on identifying the root cause of the vulnerability based on the provided evidence. The key phrase \"send .npmrc credentials to tarball URL\" and the CVE Reference Links Content Summary, which states that \"Deno was incorrectly using the authentication credentials associated with the npm registry URL for the scope of the package, instead of using the credentials associated with the specific URL of the tarball itself,\" helped narrow down the possible CWEs.\n\nCWE-923 was selected as the primary CWE because it directly addresses the **improper restriction** of the communication channel. The vulnerability is triggered because Deno sends credentials to the wrong endpoint (the tarball URL), which is a violation of proper communication channel restriction.\n\nCWE-200 was considered as a secondary CWE to represent the impact of the vulnerability. However, it is not the root cause. The primary issue is the **incorrect authorization**, which leads to the sensitive information being exposed.\n\nThe other CWEs from the Retriever Results were considered but ultimately not selected because they did not accurately represent the core weakness. For example, CWE-863 (Incorrect Authorization) is a broader category, and while applicable, CWE-923 is more specific to the communication channel aspect of the vulnerability. CWE-212 (Improper Removal of Sensitive Information Before Storage or Transfer) is not applicable, as the sensitive information is not being stored or transferred improperly within the application itself, but rather sent to the wrong destination.\n\nRelevant CWE Information:\n- **CWE-923: Improper Restriction of Communication Channel to Intended Endpoints**\n- **CWE-200: Exposure of Sensitive Information to an Unauthorized Actor**",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-923 | Improper Restriction of Communication Channel to Intended Endpoints | 0.8 | Class | Primary | Allowed-with-Review |\n| CWE-200 | Exposure of Sensitive Information to an Unauthorized Actor | 0.6 | Class | Secondary | Discouraged |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.7\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary CWE selected is CWE-923, which is a Class-level CWE. While a more specific Base or Variant CWE would be ideal, the available information does not strongly point to a more specific weakness. CWE-923 describes the core issue of a communication channel not being properly restricted to the intended endpoint, which aligns with the vulnerability where credentials intended for a specific registry are sent to a different domain. CWE-200 is a secondary consideration, representing the impact of the vulnerability, where sensitive information is exposed. However, CWE-200 is discouraged as a primary mapping, as it represents the impact rather than the root cause.\n\n```mermaid\ngraph TD\n    cwe923[\"CWE-923: Improper Restriction of Communication Channel to Intended Endpoints\"]\n    cwe200[\"CWE-200: Exposure of Sensitive Information to an Unauthorized Actor\"]\n    \n    cwe200 -->|RESULT| cwe923\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe923 primary\n    class cwe200 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **improper restriction of the communication channel (CWE-923)**, where Deno fails to ensure that credentials are only sent to the intended endpoint (the specific tarball URL's domain). This leads to the **exposure of sensitive information (CWE-200)**, as the `.npmrc` credentials are sent to an unauthorized actor (a different domain potentially controlled by an attacker).\n\n## Summary of Analysis\nThe initial analysis focused on identifying the root cause of the vulnerability based on the provided evidence. The key phrase \"send .npmrc credentials to tarball URL\" and the CVE Reference Links Content Summary, which states that \"Deno was incorrectly using the authentication credentials associated with the npm registry URL for the scope of the package, instead of using the credentials associated with the specific URL of the tarball itself,\" helped narrow down the possible CWEs.\n\nCWE-923 was selected as the primary CWE because it directly addresses the **improper restriction** of the communication channel. The vulnerability is triggered because Deno sends credentials to the wrong endpoint (the tarball URL), which is a violation of proper communication channel restriction.\n\nCWE-200 was considered as a secondary CWE to represent the impact of the vulnerability. However, it is not the root cause. The primary issue is the **incorrect authorization**, which leads to the sensitive information being exposed.\n\nThe other CWEs from the Retriever Results were considered but ultimately not selected because they did not accurately represent the core weakness. For example, CWE-863 (Incorrect Authorization) is a broader category, and while applicable, CWE-923 is more specific to the communication channel aspect of the vulnerability. CWE-212 (Improper Removal of Sensitive Information Before Storage or Transfer) is not applicable, as the sensitive information is not being stored or transferred improperly within the application itself, but rather sent to the wrong destination.\n\nRelevant CWE Information:\n- **CWE-923: Improper Restriction of Communication Channel to Intended Endpoints**\n- **CWE-200: Exposure of Sensitive Information to an Unauthorized Actor**\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-200:**\n- 200 (Exposure of Sensitive Information to an Unauthorized Actor) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 498.41309279544765
    },
    {
      "metadata": {
        "doc_id": "212",
        "name": "Improper Removal of Sensitive Information Before Storage or Transfer",
        "source": "sparse"
      },
      "similarity": 484.5731516692982
    },
    {
      "metadata": {
        "doc_id": "59",
        "name": "Improper Link Resolution Before File Access ('Link Following')",
        "source": "sparse"
      },
      "similarity": 477.92354640401925
    },
    {
      "metadata": {
        "doc_id": "923",
        "name": "Improper Restriction of Communication Channel to Intended Endpoints",
        "source": "sparse"
      },
      "similarity": 470.58995442242474
    },
    {
      "metadata": {
        "doc_id": "88",
        "name": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
        "source": "sparse"
      },
      "similarity": 470.44828015499337
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 470.02547531995043
    },
    {
      "metadata": {
        "doc_id": "532",
        "name": "Insertion of Sensitive Information into Log File",
        "source": "sparse"
      },
      "similarity": 468.0977215202111
    },
    {
      "metadata": {
        "doc_id": "200",
        "name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "source": "sparse"
      },
      "similarity": 467.47113518398834
    },
    {
      "metadata": {
        "doc_id": "1333",
        "name": "Inefficient Regular Expression Complexity",
        "type": "Base",
        "original_content": "The product uses a regular expression with an inefficient, possibly exponential worst-case computational complexity that consumes excessive CPU cycles.",
        "keyphrase_source": "weakness:send .npmrc credentials to tarball URL",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.4845505515617572
          }
        }
      },
      "similarity": 0.4845505515617572
    },
    {
      "doc_id": "41",
      "text": "CWE-41: Improper Resolution of Path Equivalence",
      "score": 2.2594000000000007,
      "metadata": {
        "doc_id": "41",
        "name": "Improper Resolution of Path Equivalence",
        "type": "base",
        "original_content": "CWE-41: Improper Resolution of Path Equivalence",
        "relationships": [
          {
            "source_id": "41",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "58",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "57",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "56",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "55",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "54",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "53",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "52",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "51",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "50",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "49",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "48",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "47",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "46",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "44",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "42",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "20",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "172",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "706",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "41",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "706",
            "target_id": "41",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "58",
            "target_id": "41",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "57",
            "target_id": "41",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "56",
            "target_id": "41",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "55",
            "target_id": "41",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "54",
            "target_id": "41",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "53",
            "target_id": "41",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "52",
            "target_id": "41",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "51",
            "target_id": "41",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "50",
            "target_id": "41",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "49",
            "target_id": "41",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "48",
            "target_id": "41",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "47",
            "target_id": "41",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "46",
            "target_id": "41",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "44",
            "target_id": "41",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "42",
            "target_id": "41",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "20",
            "target_id": "41",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "172",
            "target_id": "41",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1289",
            "target_id": "41",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 0.8,
          "sequence_path": 0.8,
          "peer_group": 0.63
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "peer_relationship"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "59",
                  "73",
                  "CANFOLLOW"
                ],
                [
                  "73",
                  "41",
                  "CANPRECEDE"
                ]
              ],
              "score": 0.8,
              "type": "relationship_chain",
              "source": "59"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "59",
                  "73",
                  "CANFOLLOW"
                ],
                [
                  "73",
                  "41",
                  "CANPRECEDE"
                ]
              ],
              "score": 0.8,
              "type": "vulnerability_sequence_forward",
              "source": "59"
            },
            "peer_relationship": {
              "path": [
                [
                  "1289",
                  "178",
                  "PEEROF"
                ],
                [
                  "1289",
                  "41",
                  "PEEROF"
                ]
              ],
              "score": 0.63,
              "type": "peer_relationship",
              "source": "178"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2594000000000007
          }
        }
      },
      "similarity": 2.2594000000000007
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-200",
      "CWE-923",
      "CWE-212"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}