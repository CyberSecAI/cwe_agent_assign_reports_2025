{
  "cve_id": "CVE-2025-31477",
  "description": "The Tauri shell plugin allows access to the system shell. Prior to 2.2.1, the Tauri shell plugin exposes functionality to execute code and open programs on the system. The open endpoint of this plugin is designed to allow open functionality with the system opener (e.g. xdg-open on Linux). This was meant to be restricted to a reasonable number of protocols like https or mailto by default. This default restriction was not functional due to **improper validation of the allowed protocols**, allowing for potentially dangerous protocols like file//, smb//, or nfs// and others to be opened by the system registered protocol handler. By passing untrusted user input to the open endpoint these potentially dangerous protocols can be abused to gain remote code execution on the system. This either requires direct exposure of the endpoint to application users or code execution in the frontend of a Tauri application. This vulnerability is fixed in 2.2.1.",
  "key_phrases": {
    "component": "open endpoint",
    "rootcause": "improper validation of the allowed protocols",
    "vector": "",
    "weakness": "",
    "product": "Tauri shell plugin",
    "impact": "['execute code', 'open programs on the system', 'remote code execution']",
    "attacker": "",
    "version": "prior to 2.2.1"
  },
  "reference_content": "The provided content describes a fix for a vulnerability in the Tauri shell plugin related to the `open` functionality.\n\n*   **Root cause of vulnerability:** The plugin previously skipped validation when the `open` configuration was not set, potentially allowing unchecked input.\n*   **Weaknesses/vulnerabilities present:** The vulnerability allowed for unchecked input to be used, which could lead to arbitrary code execution or other malicious actions.\n*   **Impact of exploitation:**  The exploitation could have resulted in the execution of arbitrary code or other malicious actions.\n*   **Attack vectors:** The attack vector is through the `open` functionality of the shell plugin.\n*   **Mitigation or fix:** The fix applies a default open validation regex (`^((mailto:\\w+)|(tel:\\w+)|(https?://\\w+)).+`) when the open configuration is not set, preventing unchecked input. The scope is no longer validated for Rust calls via `ShellExt::shell()`.\n*   **More detail than the official CVE description:** The content provides specifics of the vulnerability and the applied fix.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-1286 | Improper Validation of Syntactic Correctness of Input | 0.9 | Base | Allowed | Primary CWE |\n| CWE-434 | Unrestricted Upload of File with Dangerous Type | 0.4 | Base | Allowed | Secondary Candidate |\n| CWE-184 | Incomplete List of Disallowed Inputs | 0.4 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.7\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary CWE is CWE-1286, representing the **improper validation**. CWE-184 and CWE-434 were also considered because the **improper validation** could lead to an incomplete list of disallowed inputs or the ability to upload dangerous file types. However, the initial **improper validation** is the core issue, making CWE-1286 the primary weakness.\n\n```mermaid\ngraph TD\n    cwe1286[\"CWE-1286: Improper Validation of Syntactic Correctness of Input\"]\n    cwe184[\"CWE-184: Incomplete List of Disallowed Inputs\"]\n    cwe434[\"CWE-434: Unrestricted Upload of File with Dangerous Type\"]\n    \n    cwe184 -->|CANPRECEDE| cwe1286\n    cwe434 -->|CANPRECEDE| cwe1286\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe1286 primary\n    class cwe184,cwe434 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **improper validation of the allowed protocols** (CWE-1286), leading to the potential use of dangerous protocols and ultimately resulting in remote code execution.\n\nCWE-1286 (Improper Validation) -> Use of Dangerous Protocols -> Remote Code Execution\n\n## Summary of Analysis\nThe analysis is based on the provided evidence, particularly the vulnerability description and the CVE reference links summary. The root cause is clearly identified as the **improper validation of the allowed protocols**. This leads to a vulnerability where dangerous protocols can be used, potentially resulting in remote code execution. The selection of CWE-1286 is based on its direct relevance to the root cause and its base level of abstraction, which is preferred for mapping vulnerabilities.\n\nThe vulnerability description clearly states the **improper validation** is the core issue: \"This default restriction was not functional due to **improper validation of the allowed protocols**, allowing for potentially dangerous protocols like file//, smb//, or nfs// and others to be opened by the system registered protocol handler.\"\n\nThe selection of CWE-1286 is at the appropriate level of specificity because it directly addresses the root cause - the **improper validation**. While other CWEs like CWE-184 and CWE-434 might be related, they are consequences of the **improper validation**, not the root cause itself.\n\nRelevant CWE Information:\n\n**CWE-1286: Improper Validation of Syntactic Correctness of Input**\n\n*   How the vulnerability's details match the CWE's characteristics: The vulnerability involves **improper validation** of protocols, which aligns with CWE-1286's description of a product receiving input that is expected to be well-formed but failing to validate its syntax correctly.\n*   The security implications and potential impact: The impact includes remote code execution due to the ability to use dangerous protocols.\n*   Any parent-child relationships or chain patterns that influenced your mapping: The primary relationship is that **improper validation** leads to the exploitation of dangerous protocols.\n*   Whether the weakness is primary or secondary in the vulnerability: This is the primary weakness, as it is the root cause of the vulnerability.\n*   How the official MITRE mapping guidance influenced your decision: The MITRE mapping guidance recommends using base-level CWEs, and CWE-1286 is a base-level CWE that directly addresses the root cause.\n\n**CWE-434: Unrestricted Upload of File with Dangerous Type**\n\n*   How the vulnerability's details match the CWE's characteristics: The vulnerability allows for potentially dangerous protocols like `file://`, `smb://`, or `nfs://` to be opened. This could lead to the upload of files with dangerous types, which aligns with CWE-434.\n*   The security implications and potential impact: The impact includes remote code execution due to the ability to execute dangerous file types.\n*   Any parent-child relationships or chain patterns that influenced your mapping: The primary relationship is that **improper validation** (CWE-1286) can lead to the ability to upload files with dangerous types (CWE-434).\n*   Whether the weakness is primary or secondary in the vulnerability: This is a secondary weakness, as it is a potential consequence of the **improper validation**.\n*   How the official MITRE mapping guidance influenced your decision: The MITRE mapping guidance recommends using base-level CWEs, and CWE-434 is a base-level CWE.\n\n**CWE-184: Incomplete List of Disallowed Inputs**\n\n*   How the vulnerability's details match the CWE's characteristics: The vulnerability involves an **improper validation** which can be viewed as an incomplete list of disallowed protocols.\n*   The security implications and potential impact: The impact includes remote code execution due to the ability to use dangerous protocols.\n*   Any parent-child relationships or chain patterns that influenced your mapping: The primary relationship is that the **improper validation** can be viewed as an incomplete list of disallowed inputs, which then leads to the execution of dangerous protocols.\n*   Whether the weakness is primary or secondary in the vulnerability: This is a secondary weakness, as it is a consequence of the **improper validation**.\n*   How the official MITRE mapping guidance influenced your decision: The MITRE mapping guidance recommends using base-level CWEs, and CWE-184 is a base-level CWE.\n\n**CWEs Considered but Not Used:**\n\n*   CWE-79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')): While user input is involved, the primary issue is not related to web page generation or XSS. The vulnerability lies in the **improper validation** of protocols.\n*   CWE-22 (Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')): Although the vulnerability involves file paths, it's not directly related to path traversal. The core issue is the **improper validation** of protocols, not the restriction of pathnames.\n*   CWE-78 (Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')): The vulnerability does not directly involve OS command injection. While remote code execution is a potential impact, the root cause is the **improper validation** of protocols.\n*   CWE-863 (Incorrect Authorization) and CWE-862 (Missing Authorization): While authorization issues might be present, the core problem is the **improper validation** of input rather than a missing or incorrect authorization check.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-1286 | Improper Validation of Syntactic Correctness of Input | 0.9 | Base | Allowed | Primary CWE |\n| CWE-434 | Unrestricted Upload of File with Dangerous Type | 0.4 | Base | Allowed | Secondary Candidate |\n| CWE-184 | Incomplete List of Disallowed Inputs | 0.4 | Base | Allowed | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.7\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary CWE is CWE-1286, representing the **improper validation**. CWE-184 and CWE-434 were also considered because the **improper validation** could lead to an incomplete list of disallowed inputs or the ability to upload dangerous file types. However, the initial **improper validation** is the core issue, making CWE-1286 the primary weakness.\n\n```mermaid\ngraph TD\n    cwe1286[\"CWE-1286: Improper Validation of Syntactic Correctness of Input\"]\n    cwe184[\"CWE-184: Incomplete List of Disallowed Inputs\"]\n    cwe434[\"CWE-434: Unrestricted Upload of File with Dangerous Type\"]\n    \n    cwe184 -->|CANPRECEDE| cwe1286\n    cwe434 -->|CANPRECEDE| cwe1286\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe1286 primary\n    class cwe184,cwe434 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **improper validation of the allowed protocols** (CWE-1286), leading to the potential use of dangerous protocols and ultimately resulting in remote code execution.\n\nCWE-1286 (Improper Validation) -> Use of Dangerous Protocols -> Remote Code Execution\n\n## Summary of Analysis\nThe analysis is based on the provided evidence, particularly the vulnerability description and the CVE reference links summary. The root cause is clearly identified as the **improper validation of the allowed protocols**. This leads to a vulnerability where dangerous protocols can be used, potentially resulting in remote code execution. The selection of CWE-1286 is based on its direct relevance to the root cause and its base level of abstraction, which is preferred for mapping vulnerabilities.\n\nThe vulnerability description clearly states the **improper validation** is the core issue: \"This default restriction was not functional due to **improper validation of the allowed protocols**, allowing for potentially dangerous protocols like file//, smb//, or nfs// and others to be opened by the system registered protocol handler.\"\n\nThe selection of CWE-1286 is at the appropriate level of specificity because it directly addresses the root cause - the **improper validation**. While other CWEs like CWE-184 and CWE-434 might be related, they are consequences of the **improper validation**, not the root cause itself.\n\nRelevant CWE Information:\n\n**CWE-1286: Improper Validation of Syntactic Correctness of Input**\n\n*   How the vulnerability's details match the CWE's characteristics: The vulnerability involves **improper validation** of protocols, which aligns with CWE-1286's description of a product receiving input that is expected to be well-formed but failing to validate its syntax correctly.\n*   The security implications and potential impact: The impact includes remote code execution due to the ability to use dangerous protocols.\n*   Any parent-child relationships or chain patterns that influenced your mapping: The primary relationship is that **improper validation** leads to the exploitation of dangerous protocols.\n*   Whether the weakness is primary or secondary in the vulnerability: This is the primary weakness, as it is the root cause of the vulnerability.\n*   How the official MITRE mapping guidance influenced your decision: The MITRE mapping guidance recommends using base-level CWEs, and CWE-1286 is a base-level CWE that directly addresses the root cause.\n\n**CWE-434: Unrestricted Upload of File with Dangerous Type**\n\n*   How the vulnerability's details match the CWE's characteristics: The vulnerability allows for potentially dangerous protocols like `file://`, `smb://`, or `nfs://` to be opened. This could lead to the upload of files with dangerous types, which aligns with CWE-434.\n*   The security implications and potential impact: The impact includes remote code execution due to the ability to execute dangerous file types.\n*   Any parent-child relationships or chain patterns that influenced your mapping: The primary relationship is that **improper validation** (CWE-1286) can lead to the ability to upload files with dangerous types (CWE-434).\n*   Whether the weakness is primary or secondary in the vulnerability: This is a secondary weakness, as it is a potential consequence of the **improper validation**.\n*   How the official MITRE mapping guidance influenced your decision: The MITRE mapping guidance recommends using base-level CWEs, and CWE-434 is a base-level CWE.\n\n**CWE-184: Incomplete List of Disallowed Inputs**\n\n*   How the vulnerability's details match the CWE's characteristics: The vulnerability involves an **improper validation** which can be viewed as an incomplete list of disallowed protocols.\n*   The security implications and potential impact: The impact includes remote code execution due to the ability to use dangerous protocols.\n*   Any parent-child relationships or chain patterns that influenced your mapping: The primary relationship is that the **improper validation** can be viewed as an incomplete list of disallowed inputs, which then leads to the execution of dangerous protocols.\n*   Whether the weakness is primary or secondary in the vulnerability: This is a secondary weakness, as it is a consequence of the **improper validation**.\n*   How the official MITRE mapping guidance influenced your decision: The MITRE mapping guidance recommends using base-level CWEs, and CWE-184 is a base-level CWE.\n\n**CWEs Considered but Not Used:**\n\n*   CWE-79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')): While user input is involved, the primary issue is not related to web page generation or XSS. The vulnerability lies in the **improper validation** of protocols.\n*   CWE-22 (Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')): Although the vulnerability involves file paths, it's not directly related to path traversal. The core issue is the **improper validation** of protocols, not the restriction of pathnames.\n*   CWE-78 (Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')): The vulnerability does not directly involve OS command injection. While remote code execution is a potential impact, the root cause is the **improper validation** of protocols.\n*   CWE-863 (Incorrect Authorization) and CWE-862 (Missing Authorization): While authorization issues might be present, the core problem is the **improper validation** of input rather than a missing or incorrect authorization check.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-862:**\n- 862 (Missing Authorization) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 912.927826534618
    },
    {
      "metadata": {
        "doc_id": "184",
        "name": "Incomplete List of Disallowed Inputs",
        "source": "sparse"
      },
      "similarity": 903.6279260321278
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 902.1765680462761
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 870.7304056708908
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 863.0598536368498
    },
    {
      "metadata": {
        "doc_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "source": "sparse"
      },
      "similarity": 859.1941101305906
    },
    {
      "metadata": {
        "doc_id": "367",
        "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
        "source": "sparse"
      },
      "similarity": 858.7108567573647
    },
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "sparse"
      },
      "similarity": 858.1639230998122
    },
    {
      "metadata": {
        "doc_id": "78",
        "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
        "type": "Base",
        "original_content": "The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",
        "keyphrase_source": "rootcause:improper validation of the allowed protocols",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.48997517831019327,
            "graph": 2.80651824575113
          }
        }
      },
      "similarity": 0.48997517831019327
    },
    {
      "doc_id": "434",
      "text": "CWE-434: Unrestricted Upload of File with Dangerous Type",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "type": "base",
        "original_content": "CWE-434: Unrestricted Upload of File with Dangerous Type",
        "relationships": [
          {
            "source_id": "434",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "434",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "434",
            "target_id": "183",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "434",
            "target_id": "430",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "434",
            "target_id": "436",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "434",
            "target_id": "351",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "434",
            "target_id": "669",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "434",
            "target_id": "669",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "434",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "669",
            "target_id": "434",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "430",
            "target_id": "434",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "434",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "183",
            "target_id": "434",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "184",
                  "434",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "184"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "184",
                  "434",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "184"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-862",
      "CWE-22",
      "CWE-1286",
      "CWE-79",
      "CWE-78",
      "CWE-184",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}