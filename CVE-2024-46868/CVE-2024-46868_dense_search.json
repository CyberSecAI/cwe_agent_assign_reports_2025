{
  "retriever": "dense",
  "query": "In the Linux kernel, the following vulnerability has been resolved firmware qcom uefisecapp Fix deadlock in qcuefi_acquire() If the __qcuefi pointer is not set, then in the original code, we would hold onto the lock. That means that if we tried to set it later, then it would cause a deadlock. Drop the lock on the error path. Thats what all the callers are expecting.",
  "keyphrases": {
    "rootcause": [
      "If the __qcuefi pointer is not set",
      "then in the original code",
      "we would hold onto the lock"
    ],
    "weakness": [
      "deadlock"
    ]
  },
  "timestamp": "2025-07-13 17:40:46",
  "cve_id": "CVE-2024-46868",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "type": "Base",
      "score": 0.5467818047431543
    },
    {
      "cwe_id": "413",
      "name": "Improper Resource Locking",
      "type": "Base",
      "score": 0.545476176045629
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "type": "Base",
      "score": 0.5175208428875784
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "type": "Class",
      "score": 0.514248458863211
    },
    {
      "cwe_id": "1332",
      "name": "Improper Handling of Faults that Lead to Instruction Skips",
      "type": "Base",
      "score": 0.49288651518768417
    },
    {
      "cwe_id": "1233",
      "name": "Security-Sensitive Hardware Controls with Missing Lock Bit Protection",
      "type": "Base",
      "score": 0.4865614618418661
    },
    {
      "cwe_id": "1319",
      "name": "Improper Protection against Electromagnetic Fault Injection (EM-FI)",
      "type": "Base",
      "score": 0.48484234114414304
    },
    {
      "cwe_id": "1256",
      "name": "Improper Restriction of Software Interfaces to Hardware Features",
      "type": "Base",
      "score": 0.48301294165454356
    },
    {
      "cwe_id": "1231",
      "name": "Improper Prevention of Lock Bit Modification",
      "type": "Base",
      "score": 0.48095466289983524
    },
    {
      "cwe_id": "832",
      "name": "Unlock of a Resource that is not Locked",
      "type": "Base",
      "score": 0.47930971295759384
    },
    {
      "cwe_id": "1243",
      "name": "Sensitive Non-Volatile Information Not Protected During Debug",
      "type": "Base",
      "score": 0.47591301528409036
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "type": "Class",
      "score": 0.4718006233028938
    },
    {
      "cwe_id": "1247",
      "name": "Improper Protection Against Voltage and Clock Glitches",
      "type": "Base",
      "score": 0.46947428897343546
    },
    {
      "cwe_id": "1191",
      "name": "On-Chip Debug and Test Interface With Improper Access Control",
      "type": "Base",
      "score": 0.46308138750242067
    },
    {
      "cwe_id": "1264",
      "name": "Hardware Logic with Insecure De-Synchronization between Control and Data Channels",
      "type": "Base",
      "score": 0.4623078725952243
    },
    {
      "cwe_id": "1274",
      "name": "Improper Access Control for Volatile Memory Containing Boot Code",
      "type": "Base",
      "score": 0.4608784866463423
    },
    {
      "cwe_id": "1234",
      "name": "Hardware Internal or Debug Modes Allow Override of Locks",
      "type": "Base",
      "score": 0.4594495017408906
    },
    {
      "cwe_id": "1222",
      "name": "Insufficient Granularity of Address Regions Protected by Register Locks",
      "type": "Variant",
      "score": 0.4581971552015667
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "type": "Class",
      "score": 0.4552071789182044
    },
    {
      "cwe_id": "1299",
      "name": "Missing Protection Mechanism for Alternate Hardware Interface",
      "type": "Base",
      "score": 0.45427497742180534
    }
  ]
}