{
  "cve_id": "CVE-2024-6573",
  "description": "The Intelligence plugin for WordPress is vulnerable to Full Path Disclosure in all versions up to, and including, 1.4.0. This is due the plugin not preventing direct access to the /vendor/levelten/intel/realtime/index.php file and display_errors being enabled. This makes it possible for unauthenticated attackers to retrieve the full path of the web application, which can be used to aid other attacks. The information displayed is not useful on its own, and requires another vulnerability to be present for damage to an affected website.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "",
    "impact": "Full Path Disclosure",
    "vector": "direct access to /vendor/levelten/intel/realtime/index.php file",
    "attacker": "unauthenticated attackers",
    "product": "WordPress Intelligence plugin",
    "version": "all versions up to and including 1.4.0",
    "component": ""
  },
  "reference_content": "**Root cause of vulnerability:**\nThe vulnerability is due to the Intelligence plugin not preventing direct access to the `/vendor/levelten/intel/realtime/index.php` file and the `display_errors` setting being enabled.\n\n**Weaknesses/vulnerabilities present:**\n- Unauthenticated full path disclosure vulnerability.\n- Insecure direct object reference due to lack of access control on the `index.php` file.\n- Enabled `display_errors` setting which leaks sensitive information.\n\n**Impact of exploitation:**\n- Exposure of the full path of the web application.\n- This information can be used to aid other attacks, but by itself is not useful without other existing vulnerabilities.\n\n**Attack vectors:**\n- Unauthenticated attacker directly accesses `/vendor/levelten/intel/realtime/index.php`.\n\n**Required attacker capabilities/position:**\n- The attacker needs to be able to access the web application and have knowledge of the vulnerable file location.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-425 | Direct Request ('Forced Browsing') | 0.9 | Base | Allowed | Primary CWE |\n| CWE-200 | Exposure of Sensitive Information Through Sent Data | 0.7 | Class | Allowed-with-Review | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary CWE is CWE-425 Direct Request ('Forced Browsing'). CWE-425 is a child of CWE-862 Missing Authorization. CWE-200 Exposure of Sensitive Information Through Sent Data is a class level CWE and represents the impact of the **vulnerability**. CWE-425 is chosen because it represents the **root cause** of the issue.\n\n```mermaid\ngraph TD\n    cwe425[\"CWE-425: Direct Request ('Forced Browsing')\"]\n    cwe862[\"CWE-862: Missing Authorization\"]\n    cwe200[\"CWE-200: Exposure of Sensitive Information\"]\n    \n    cwe425 -->|CHILDOF| cwe862\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe425 primary\n    class cwe200 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the lack of access control on the `/vendor/levelten/intel/realtime/index.php` file (CWE-425), which allows unauthenticated attackers to access the file directly. This, combined with the `display_errors` setting being enabled, leads to the exposure of the full path of the web application (CWE-200).\n\n## Summary of Analysis\nThe initial analysis identified CWE-425 as the primary **root cause**, as it directly reflects the **lack of access control** on the specified file. The retriever results also listed CWE-425 with a high score. While other CWEs like CWE-306 and CWE-862 were considered, they are either too general or not as directly applicable as CWE-425. CWE-200 is considered as the secondary candidate, since it is the impact of the **root cause**.\n\nThe evidence supporting CWE-425 is: \"The vulnerability is due to the Intelligence plugin not preventing direct access to the `/vendor/levelten/intel/realtime/index.php` file\". This aligns perfectly with the description of CWE-425.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-200 Exposure of Sensitive Information Through Sent Data\n**Abstraction Level**: Class\n**Similarity Score**: n/a\n\n**Description**:\nThe software exposes sensitive information when sending data to an actor in a different control sphere.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate.\n\n# Final Report\n\n# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-425 | Direct Request ('Forced Browsing') | 0.9 | Base | Allowed | Primary CWE |\n| CWE-200 | Exposure of Sensitive Information Through Sent Data | 0.7 | Class | Allowed-with-Review | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary CWE is CWE-425 Direct Request ('Forced Browsing'). CWE-425 is a child of CWE-862 Missing Authorization. CWE-200 Exposure of Sensitive Information Through Sent Data is a class level CWE and represents the impact of the **vulnerability**. CWE-425 is chosen because it represents the **root cause** of the issue.\n\n```mermaid\ngraph TD\n    cwe425[\"CWE-425: Direct Request ('Forced Browsing')\"]\n    cwe862[\"CWE-862: Missing Authorization\"]\n    cwe200[\"CWE-200: Exposure of Sensitive Information\"]\n    \n    cwe425 -->|CHILDOF| cwe862\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe425 primary\n    class cwe200 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **lack of access control** on the `/vendor/levelten/intel/realtime/index.php` file (CWE-425), which allows unauthenticated attackers to access the file directly. This, combined with the `display_errors` setting being enabled, leads to the exposure of the full path of the web application (CWE-200).\n\n## Summary of Analysis\nThe initial analysis identified CWE-425 as the primary **root cause**, as it directly reflects the **lack of access control** on the specified file. The retriever results also listed CWE-425 with a high score. While other CWEs like CWE-306 and CWE-862 were considered, they are either too general or not as directly applicable as CWE-425. CWE-200 is considered as the secondary candidate, since it is the impact of the **root cause**.\n\nThe evidence supporting CWE-425 is: \"The vulnerability is due to the Intelligence plugin not preventing direct access to the `/vendor/levelten/intel/realtime/index.php` file\". This aligns perfectly with the description of CWE-425.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-425 | Direct Request ('Forced Browsing') | 0.9 | Base | Allowed | Primary CWE |\n| CWE-200 | Exposure of Sensitive Information Through Sent Data | 0.7 | Class | Allowed-with-Review | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary CWE is CWE-425 Direct Request ('Forced Browsing'). CWE-425 is a child of CWE-862 Missing Authorization. CWE-200 Exposure of Sensitive Information Through Sent Data is a class level CWE and represents the impact of the **vulnerability**. CWE-425 is chosen because it represents the **root cause** of the issue.\n\n```mermaid\ngraph TD\n    cwe425[\"CWE-425: Direct Request ('Forced Browsing')\"]\n    cwe862[\"CWE-862: Missing Authorization\"]\n    cwe200[\"CWE-200: Exposure of Sensitive Information\"]\n    \n    cwe425 -->|CHILDOF| cwe862\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe425 primary\n    class cwe200 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the lack of access control on the `/vendor/levelten/intel/realtime/index.php` file (CWE-425), which allows unauthenticated attackers to access the file directly. This, combined with the `display_errors` setting being enabled, leads to the exposure of the full path of the web application (CWE-200).\n\n## Summary of Analysis\nThe initial analysis identified CWE-425 as the primary **root cause**, as it directly reflects the **lack of access control** on the specified file. The retriever results also listed CWE-425 with a high score. While other CWEs like CWE-306 and CWE-862 were considered, they are either too general or not as directly applicable as CWE-425. CWE-200 is considered as the secondary candidate, since it is the impact of the **root cause**.\n\nThe evidence supporting CWE-425 is: \"The vulnerability is due to the Intelligence plugin not preventing direct access to the `/vendor/levelten/intel/realtime/index.php` file\". This aligns perfectly with the description of CWE-425.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-425: Direct Request ('Forced Browsing')\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nThe web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-200 Exposure of Sensitive Information Through Sent Data\n**Abstraction Level**: Class\n**Similarity Score**: n/a\n\n**Description**:\nThe software exposes sensitive information when sending data to an actor in a different control sphere.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate.\n\n# Final Report\n\n# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-425 | Direct Request ('Forced Browsing') | 0.9 | Base | Allowed | Primary CWE |\n| CWE-200 | Exposure of Sensitive Information Through Sent Data | 0.7 | Class | Allowed-with-Review | Secondary Candidate |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary CWE is CWE-425 Direct Request ('Forced Browsing'). CWE-425 is a child of CWE-862 Missing Authorization. CWE-200 Exposure of Sensitive Information Through Sent Data is a class level CWE and represents the impact of the **vulnerability**. CWE-425 is chosen because it represents the **root cause** of the issue.\n\n```mermaid\ngraph TD\n    cwe425[\"CWE-425: Direct Request ('Forced Browsing')\"]\n    cwe862[\"CWE-862: Missing Authorization\"]\n    cwe200[\"CWE-200: Exposure of Sensitive Information\"]\n    \n    cwe425 -->|CHILDOF| cwe862\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe425 primary\n    class cwe200 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with the **lack of access control** on the `/vendor/levelten/intel/realtime/index.php` file (CWE-425), which allows unauthenticated attackers to access the file directly. This, combined with the `display_errors` setting being enabled, leads to the exposure of the full path of the web application (CWE-200).\n\n## Summary of Analysis\nThe initial analysis identified CWE-425 as the primary **root cause**, as it directly reflects the **lack of access control** on the specified file. The retriever results also listed CWE-425 with a high score. While other CWEs like CWE-306 and CWE-862 were considered, they are either too general or not as directly applicable as CWE-425. CWE-200 is considered as the secondary candidate, since it is the impact of the **root cause**.\n\nThe evidence supporting CWE-425 is: \"The vulnerability is due to the Intelligence plugin not preventing direct access to the `/vendor/levelten/intel/realtime/index.php` file\". This aligns perfectly with the description of CWE-425.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-200:**\n- 200 (Exposure of Sensitive Information to an Unauthorized Actor) - ROOT\n\n\n**Chain starting from CWE-306:**\n- 306 (Missing Authentication for Critical Function) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 180.61543629783495
    },
    {
      "metadata": {
        "doc_id": "639",
        "name": "Authorization Bypass Through User-Controlled Key",
        "source": "sparse"
      },
      "similarity": 179.73325569033904
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 179.31767385992205
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 178.1439911137181
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 174.97441605581733
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 174.53300119307426
    },
    {
      "metadata": {
        "doc_id": "522",
        "name": "Insufficiently Protected Credentials",
        "source": "sparse"
      },
      "similarity": 173.5911261342084
    },
    {
      "metadata": {
        "doc_id": "502",
        "name": "Deserialization of Untrusted Data",
        "source": "sparse"
      },
      "similarity": 173.35415037497208
    },
    {
      "metadata": {
        "doc_id": "425",
        "name": "Direct Request ('Forced Browsing')",
        "type": "Base",
        "original_content": "The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse",
            "graph"
          ],
          "retriever_count": 3,
          "normalized_scores": {
            "dense": 0.5637938639551234,
            "sparse": 172.43212041292918,
            "graph": 1.7300704285642312
          }
        }
      },
      "similarity": 0.5637938639551234
    },
    {
      "doc_id": "94",
      "text": "CWE-94: Improper Control of Generation of Code ('Code Injection')",
      "score": 2.2776000000000005,
      "metadata": {
        "doc_id": "94",
        "name": "Improper Control of Generation of Code ('Code Injection')",
        "type": "base",
        "original_content": "CWE-94: Improper Control of Generation of Code ('Code Injection')",
        "relationships": [
          {
            "source_id": "94",
            "target_id": "98",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "94",
            "target_id": "96",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "94",
            "target_id": "95",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "94",
            "target_id": "1336",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "94",
            "target_id": "913",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "94",
            "target_id": "74",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "94",
            "target_id": "74",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "94",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "96",
            "target_id": "94",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "95",
            "target_id": "94",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "913",
            "target_id": "94",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "74",
            "target_id": "94",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1336",
            "target_id": "94",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 0.8,
          "abstraction_path": 0.5599999999999999,
          "sequence_path": 0.8
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_up",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "425",
                  "98",
                  "CANPRECEDE"
                ],
                [
                  "98",
                  "94",
                  "CANPRECEDE"
                ]
              ],
              "score": 0.8,
              "type": "relationship_chain",
              "source": "425"
            },
            "abstraction_path_up": {
              "path": [
                [
                  "96",
                  "94",
                  "CHILDOF"
                ]
              ],
              "score": 0.5599999999999999,
              "type": "abstraction_path_up",
              "source": "96"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "425",
                  "98",
                  "CANPRECEDE"
                ],
                [
                  "98",
                  "94",
                  "CANPRECEDE"
                ]
              ],
              "score": 0.8,
              "type": "vulnerability_sequence_forward",
              "source": "425"
            }
          }
        },
        "abstraction_level": "base",
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This entry is frequently misused for vulnerabilities with a technical impact of \"code execution,\" which does not by itself indicate a root cause weakness, since dozens of weaknesses can enable code execution.",
          "comments": "This weakness only applies when the product's functionality intentionally constructs all or part of a code segment. It could be that executing code could be the result of other weaknesses that do not involve the construction of code segments.",
          "reasons": [
            "Frequent Misuse",
            "Frequent Misinterpretation"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2776000000000005
          }
        }
      },
      "similarity": 2.2776000000000005
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-200",
      "CWE-306",
      "CWE-425",
      "CWE-862"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}