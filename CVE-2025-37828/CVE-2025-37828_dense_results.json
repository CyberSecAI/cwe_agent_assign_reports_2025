{
  "query": "In the Linux kernel, the following vulnerability has been resolved scsi ufs mcq Add NULL check in ufshcd_mcq_abort() A race can occur between the MCQ completion path and the abort handler once a request completes, __blk_mq_free_request() sets rq->mq_hctx to NULL, meaning the subsequent ufshcd_mcq_req_to_hwq() call in ufshcd_mcq_abort() can return a NULL pointer. If this NULL pointer is dereferenced, the kernel will crash. Add a NULL check for the returned hwq pointer. If hwq is NULL, log an error and return FAILED, preventing a potential NULL-pointer dereference. As suggested by Bart, the ufshcd_cmd_inflight() check is removed. This is similar to the fix in commit 74736103fb41 (scsi ufs core Fix ufshcd_abort_one racing issue). This is found by our static analysis tool KNighter.",
  "count": 20,
  "results": [
    {
      "cwe_id": "606",
      "name": "Unchecked Input for Loop Condition",
      "abstraction": "Base",
      "score": 0.46929056323909346,
      "original_score": 0.46929056323909346,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1264",
      "name": "Hardware Logic with Insecure De-Synchronization between Control and Data Channels",
      "abstraction": "Base",
      "score": 0.4631724383547764,
      "original_score": 0.4631724383547764,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "170",
      "name": "Improper Null Termination",
      "abstraction": "Base",
      "score": 0.46052608396282085,
      "original_score": 0.46052608396282085,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "abstraction": "Base",
      "score": 0.45968213171221184,
      "original_score": 0.45968213171221184,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 0.45651536719989516,
      "original_score": 0.45651536719989516,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "abstraction": "Base",
      "score": 0.452354758686221,
      "original_score": 0.452354758686221,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "abstraction": "Class",
      "score": 0.4521204201486189,
      "original_score": 0.4521204201486189,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "abstraction": "Base",
      "score": 0.45031406399720886,
      "original_score": 0.45031406399720886,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "413",
      "name": "Improper Resource Locking",
      "abstraction": "Base",
      "score": 0.4487612779743638,
      "original_score": 0.4487612779743638,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "abstraction": "Class",
      "score": 0.44526766861326283,
      "original_score": 0.44526766861326283,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "abstraction": "Base",
      "score": 0.43536199780413265,
      "original_score": 0.43536199780413265,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "394",
      "name": "Unexpected Status Code or Return Value",
      "abstraction": "Base",
      "score": 0.42858117135215856,
      "original_score": 0.42858117135215856,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1332",
      "name": "Improper Handling of Faults that Lead to Instruction Skips",
      "abstraction": "Base",
      "score": 0.4273626718285267,
      "original_score": 0.4273626718285267,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "911",
      "name": "Improper Update of Reference Count",
      "abstraction": "Base",
      "score": 0.4271765179465256,
      "original_score": 0.4271765179465256,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1261",
      "name": "Improper Handling of Single Event Upsets",
      "abstraction": "Base",
      "score": 0.4251290942857589,
      "original_score": 0.4251290942857589,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "354",
      "name": "Improper Validation of Integrity Check Value",
      "abstraction": "Base",
      "score": 0.4223026385200799,
      "original_score": 0.4223026385200799,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "822",
      "name": "Untrusted Pointer Dereference",
      "abstraction": "Base",
      "score": 0.41592256702717456,
      "original_score": 0.41592256702717456,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "366",
      "name": "Race Condition within a Thread",
      "abstraction": "Base",
      "score": 0.4144216285999138,
      "original_score": 0.4144216285999138,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1260",
      "name": "Improper Handling of Overlap Between Protected Memory Ranges",
      "abstraction": "Base",
      "score": 0.41403616452499925,
      "original_score": 0.41403616452499925,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "abstraction": "Base",
      "score": 0.4137498595700979,
      "original_score": 0.4137498595700979,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 0.4137498595700979,
    "max": 0.46929056323909346,
    "mean": 0.4391024542673921,
    "median": 0.44031483320869774,
    "count": 20
  }
}