{
  "method": "sparse_base",
  "query": "In the Linux kernel, the following vulnerability has been resolved scsi mpi3mr Synchronous access b/w reset and tm thread for reply queue When the task management thread processes reply queues while the reset thread resets them, the task management thread accesses an invalid queue ID (0xFFFF), set by the reset thread, which points to unallocated memory, causing a crash. Add flag io_admin_reset_sync to synchronize access between the reset, I/O, and admin threads. Before a reset, the reset handler sets this flag to block I/O and admin processing threads. If any thread bypasses the initial check, the reset thread waits up to 10 seconds for processing to finish. If the wait exceeds 10 seconds, the controller is marked as unrecoverable.",
  "keyphrases": {
    "base_query": "In the Linux kernel, the following vulnerability has been resolved scsi mpi3mr Synchronous access b/w reset and tm thread for reply queue When the task management thread processes reply queues while the reset thread resets them, the task management thread accesses an invalid queue ID (0xFFFF), set by the reset thread, which points to unallocated memory, causing a crash. Add flag io_admin_reset_sync to synchronize access between the reset, I/O, and admin threads. Before a reset, the reset handler sets this flag to block I/O and admin processing threads. If any thread bypasses the initial check, the reset thread waits up to 10 seconds for processing to finish. If the wait exceeds 10 seconds, the controller is marked as unrecoverable."
  },
  "timestamp": "2025-07-12T13:26:16.665705",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "833",
      "name": "Deadlock",
      "score": 202.1304222202371
    },
    {
      "doc_id": "667",
      "name": "Improper Locking",
      "score": 189.58382340225802
    },
    {
      "doc_id": "909",
      "name": "Missing Initialization of Resource",
      "score": 187.80020554411536
    },
    {
      "doc_id": "226",
      "name": "Sensitive Information in Resource Not Removed Before Reuse",
      "score": 185.4045705698364
    },
    {
      "doc_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 184.8599905267312
    }
  ]
}