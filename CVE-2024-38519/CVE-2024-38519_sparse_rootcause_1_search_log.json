{
  "method": "sparse_rootcause_1",
  "query": "`yt-dlp` and `youtube-dl` are command-line audio/video downloaders. Prior to the fixed versions, `yt-dlp` and `youtube-dl` do not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since `yt-dlp` and `youtube-dl` also read config from the working directory (and on Windows executables will be executed from the `yt-dlp` or `youtube-dl` directory), this could lead to arbitrary code being executed. `yt-dlp` version 2024.07.01 fixes this issue by whitelisting the allowed extensions. `youtube-dl` fixes this issue in commit `d42a222` on the `master` branch and in nightly builds tagged 2024-07-03 or later. This might mean some very uncommon extensions might not get downloaded, however it will also limit the possible exploitation surface. In addition to upgrading, have `.%(ext)s` at the end of the output template and make sure the user trusts the websites that they are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like ones user directory, `system32`, or other binaries locations. For users who are not able to upgrade, keep the default output template (`-o %(title)s [%(id)s].%(ext)s`) make sure the extension of the media to download is a common video/audio/sub/... one try to avoid the generic extractor and/or use `--ignore-config --config-location ...` to not load config from common locations.",
  "keyphrases": {
    "rootcause": "do not limit the extensions of downloaded files"
  },
  "timestamp": "2025-07-13T10:40:23.774681",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "427",
      "name": "Uncontrolled Search Path Element",
      "score": 1208.9948909678046
    },
    {
      "doc_id": "22",
      "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
      "score": 1187.6339194072427
    },
    {
      "doc_id": "59",
      "name": "Improper Link Resolution Before File Access ('Link Following')",
      "score": 1177.1345389481621
    },
    {
      "doc_id": "61",
      "name": "UNIX Symbolic Link (Symlink) Following",
      "score": 1146.7281159256074
    },
    {
      "doc_id": "88",
      "name": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
      "score": 1137.109091529928
    }
  ]
}