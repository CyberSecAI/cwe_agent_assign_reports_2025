{
  "retriever": "graph",
  "query": "In the Linux kernel, the following vulnerability has been resolved usb gadget configfs Prevent OOB read/write in usb_string_copy() Userspace provided string s could trivially have the length zero. Left unchecked this will firstly result in an OOB read in the form `if (str[0 - 1] == \\n) followed closely by an OOB write in the form `str[0 - 1] = \\0`. There is already a validating check to catch strings that are too long. Lets supply an additional check for invalid strings that are too short. Consider specifically these CWEs: CWE-1284 CWE-130 CWE-805 CWE-476 CWE-125 CWE-191 CWE-621 CWE-134 CWE-1333 CWE-126",
  "keyphrases": {
    "original_query": "In the Linux kernel, the following vulnerability has been resolved usb gadget configfs Prevent OOB read/write in usb_string_copy() Userspace provided string s could trivially have the length zero. Left unchecked this will firstly result in an OOB read in the form `if (str[0 - 1] == \\n) followed closely by an OOB write in the form `str[0 - 1] = \\0`. There is already a validating check to catch strings that are too long. Lets supply an additional check for invalid strings that are too short.",
    "enhanced_query": "In the Linux kernel, the following vulnerability has been resolved usb gadget configfs Prevent OOB read/write in usb_string_copy() Userspace provided string s could trivially have the length zero. Left unchecked this will firstly result in an OOB read in the form `if (str[0 - 1] == \\n) followed closely by an OOB write in the form `str[0 - 1] = \\0`. There is already a validating check to catch strings that are too long. Lets supply an additional check for invalid strings that are too short. Consider specifically these CWEs: CWE-1284 CWE-130 CWE-805 CWE-476 CWE-125 CWE-191 CWE-621 CWE-134 CWE-1333 CWE-126",
    "cwe_mentions": [
      "CWE-1284",
      "CWE-130",
      "CWE-805",
      "CWE-476",
      "CWE-125",
      "CWE-191",
      "CWE-621",
      "CWE-134",
      "CWE-1333",
      "CWE-126"
    ],
    "search_time": 2.5059053897857666
  },
  "timestamp": "2025-07-13 13:51:35",
  "cve_id": "CVE-2024-42236",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "805",
      "name": "Buffer Access with Incorrect Length Value",
      "type": "Base",
      "score": 2.8315343037099936,
      "relationship_count": 0
    },
    {
      "cwe_id": "130",
      "name": "Improper Handling of Length Parameter Inconsistency",
      "type": "Base",
      "score": 2.8282185737054544,
      "relationship_count": 0
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "type": "Base",
      "score": 2.540600039572213,
      "relationship_count": 0
    },
    {
      "cwe_id": "1325",
      "name": "Improperly Controlled Sequential Memory Allocation",
      "type": "base",
      "score": 2.2100000000000004,
      "relationship_count": 0
    },
    {
      "cwe_id": "170",
      "name": "Improper Null Termination",
      "type": "base",
      "score": 2.2100000000000004,
      "relationship_count": 0
    },
    {
      "cwe_id": "123",
      "name": "Write-what-where Condition",
      "type": "base",
      "score": 2.2100000000000004,
      "relationship_count": 0
    },
    {
      "cwe_id": "824",
      "name": "Access of Uninitialized Pointer",
      "type": "base",
      "score": 2.2100000000000004,
      "relationship_count": 0
    },
    {
      "cwe_id": "825",
      "name": "Expired Pointer Dereference",
      "type": "base",
      "score": 2.2100000000000004,
      "relationship_count": 0
    },
    {
      "cwe_id": "471",
      "name": "Modification of Assumed-Immutable Data (MAID)",
      "type": "base",
      "score": 2.2100000000000004,
      "relationship_count": 0
    },
    {
      "cwe_id": "1333",
      "name": "Inefficient Regular Expression Complexity",
      "type": "base",
      "score": 2.1189999999999998,
      "relationship_count": 0
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "type": "Base",
      "score": 2.101403278009209,
      "relationship_count": 0
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "type": "variant",
      "score": 2.04,
      "relationship_count": 0
    },
    {
      "cwe_id": "134",
      "name": "Use of Externally-Controlled Format String",
      "type": "Base",
      "score": 1.9268002430917195,
      "relationship_count": 0
    },
    {
      "cwe_id": "120",
      "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
      "type": "base",
      "score": 1.7680000000000005,
      "relationship_count": 0
    },
    {
      "cwe_id": "787",
      "name": "Out-of-bounds Write",
      "type": "base",
      "score": 1.7680000000000005,
      "relationship_count": 0
    },
    {
      "cwe_id": "562",
      "name": "Return of Stack Variable Address",
      "type": "base",
      "score": 1.7680000000000005,
      "relationship_count": 0
    },
    {
      "cwe_id": "126",
      "name": "Buffer Over-read",
      "type": "Variant",
      "score": 1.7184452600900741,
      "relationship_count": 0
    },
    {
      "cwe_id": "125",
      "name": "Out-of-bounds Read",
      "type": "Base",
      "score": 1.6930665443826087,
      "relationship_count": 0
    },
    {
      "cwe_id": "364",
      "name": "Signal Handler Race Condition",
      "type": "base",
      "score": 1.6848000000000003,
      "relationship_count": 0
    },
    {
      "cwe_id": "425",
      "name": "Direct Request ('Forced Browsing')",
      "type": "base",
      "score": 1.6848000000000003,
      "relationship_count": 0
    }
  ]
}