{
  "method": "sparse_weakness_2",
  "query": "In the Linux kernel, the following vulnerability has been resolved usb gadget configfs Prevent OOB read/write in usb_string_copy() Userspace provided string s could trivially have the length zero. Left unchecked this will firstly result in an OOB read in the form `if (str[0 - 1] == \\n) followed closely by an OOB write in the form `str[0 - 1] = \\0`. There is already a validating check to catch strings that are too long. Lets supply an additional check for invalid strings that are too short.",
  "keyphrases": {
    "weakness": "write"
  },
  "timestamp": "2025-07-13T13:51:32.861534",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "125",
      "name": "Out-of-bounds Read",
      "score": 448.7959086806074
    },
    {
      "doc_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 399.08554223959015
    },
    {
      "doc_id": "1333",
      "name": "Inefficient Regular Expression Complexity",
      "score": 379.80281465059466
    },
    {
      "doc_id": "476",
      "name": "NULL Pointer Dereference",
      "score": 378.25663155847735
    },
    {
      "doc_id": "191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "score": 374.7099865965305
    }
  ]
}