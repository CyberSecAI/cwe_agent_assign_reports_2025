{
  "cve_id": "CVE-2025-30215",
  "description": "NATS-Server is a High-Performance server for NATS.io, the cloud and edge native messaging system. In versions starting from 2.2.0 but prior to 2.10.27 and 2.11.1, the management of JetStream assets happens with messages in the $JS. subject namespace in the system account this is partially exposed into regular accounts to allow account holders to manage their assets. Some of the JS API requests were **missing access controls**, allowing any user with JS management permissions in any account to perform certain administrative actions on any JS asset in any other account. At least one of the unprotected APIs allows for data destruction. None of the affected APIs allow disclosing stream contents. This vulnerability is fixed in v2.11.1 or v2.10.27.",
  "key_phrases": {
    "component": "",
    "rootcause": "missing access controls",
    "vector": "",
    "weakness": "",
    "product": "NATS-Server",
    "impact": "data destruction, disclosing stream contents",
    "attacker": "any user with JS management permissions in any account",
    "version": "2.2.0 to 2.10.27 and 2.11.1"
  },
  "reference_content": "## Analysis of CVE-2025-30215 Content\n\nHere's an analysis of the provided content, focusing on details related to CVE-2025-30215, following the given guidelines:\n\n**1. Verification:**\n\nThe content consistently references CVE-2025-30215 and its aliases (GHSA-fhg8-qxh5-7q3w, GO-2025-3600), confirming its relevance to the specified CVE.\n\n**2. Extracted Information:**\n\n**Root cause of vulnerability:**\n\n*   Missing access controls for JetStream (JS) API requests. Specifically, JS API requests were not properly restricted, allowing users with JS management permissions in *any* account to perform administrative actions on JS assets in *other* accounts.\n\n**Weaknesses/vulnerabilities present:**\n\n*   Lack of proper authorization checks on certain JetStream admin APIs.\n*   Insufficient access control mechanisms.\n\n**Impact of exploitation:**\n\n*   **Data destruction:** At least one unprotected API allows for the destruction of data.\n*   **Loss of data redundancy/service quality:** Removal of servers from JetStream clusters is possible.\n*   **Loss of control of data provenance:** Streams can be moved between servers.\n*   **Account Isolation Violation:**  Actions can be performed across account boundaries.\n\n**Attack vectors:**\n\n*   Exploitation occurs through the use of unprotected JS APIs.\n*   An attacker needs to be a user with JS management permissions in *any* account.\n*   The attack can be performed remotely over the network.\n\n**Required attacker capabilities/position:**\n\n*   An attacker must be an authenticated user with JS management permissions.\n*   The attacker does not need system-level privileges.\n*   The attacker only needs permission to publish on `$JS.>`.\n\n**Mitigation or fix:**\n\n*   Upgrade NATS server to version 2.11.1 or 2.10.27.\n*   Ensure users do not have unnecessary permissions for `$JS.>` or `$JS.API.ACCOUNT.>` or `$JS.API.SERVER.>`\n\n**Additional Details (more than official CVE description):**\n\n*   **Specific APIs affected:**\n    *   `ACCOUNT.PURGE.*` (highest severity - data destruction)\n    *   `SERVER.REMOVE` (loss of redundancy)\n    *   `ACCOUNT.STREAM.MOVE.*.*` and `CANCEL_MOVE` (data provenance, service quality)\n*   **PoC (Proof of Concept):** The GitHub content provides a detailed PoC demonstrating how an attacker can purge an account they do not own.\n*   **CVSS Score:** Critical - 9.6 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:H/A:H)\n*   **Reporter:** Thomas Morgan reported the issue on 2025-03-05.\n*   **Timeline Note:** The GHSA advisory was in draft status as of 2025-04-08.\n*   **Workarounds:** None are available.\n*   **Affected Versions:** NATS Server version 2 from v2.2.0 onwards, prior to v2.11.1 or v2.10.27.\n\n**3. Content Source Assessment:**\n\n*   **advisories.nats.io:** Provides the initial advisory information, background, problem description, affected versions, and solution.\n*   **github.com:** Offers a more detailed report, including a PoC, CVSS score, and a breakdown of the affected APIs.\n*   **openwall.com:** Contains the original security announcement and links to related resources.\n\n**4. Response Type:**\n\nRELEVANT - The content is directly related to CVE-2025-30215 and provides valuable information about the vulnerability.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-862 | Missing Authorization | 0.9 | Class | Primary | Allowed-with-Review |\n| CWE-285 | Improper Authorization | 0.7 | Class | Secondary | Discouraged |\n| CWE-306 | Missing Authentication for Critical Function | 0.6 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship that influenced my decision was the hierarchical relationship between CWE-862 Missing Authorization and CWE-285 Improper Authorization. While both could apply, CWE-862 is more fitting because the vulnerability description explicitly states \"**missing access controls**,\" implying a complete absence of authorization, rather than a flawed implementation which would be CWE-285. The relationship to CWE-306 also plays a part, where authentication is missing, leading to authorization issues. The class level of CWE-862 is appropriate given the high-level description of the missing controls.\n\n```mermaid\ngraph TD\n    cwe862[\"CWE-862: Missing Authorization\"]\n    cwe285[\"CWE-285: Improper Authorization\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    cwe287[\"CWE-287: Improper Authentication\"]\n\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n\n    cwe862 -->|PEEROF| cwe863\n    cwe285 -->|PEEROF| cwe863\n    cwe862 -->|CHILD_OF| cwe285\n\n    cwe306 -->|CANPRECEDE| cwe862\n    cwe306 -->|CANPRECEDE| cwe863\n    cwe306 -->|CHILD_OF| cwe287\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe862 primary\n    class cwe285,cwe306 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain begins with the **missing access controls** (CWE-862), which allows attackers with JS management permissions to perform administrative actions. This leads to impacts like data destruction.\n\nCWE-862 (Missing Authorization) -> Data Destruction (Impact)\n\n## Summary of Analysis\nThe initial analysis focused on identifying the root cause of the vulnerability, which is the **missing access controls**. The description clearly states that \"Some of the JS API requests were **missing access controls**,\" providing strong evidence for CWE-862.\n\nThe relationship between CWE-862 and CWE-285 was carefully considered. While CWE-285 (Improper Authorization) could also apply if the authorization checks were present but flawed, the explicit mention of \"**missing access controls**\" points more directly to a complete lack of authorization, making CWE-862 the more appropriate choice.\n\nThe high retriever score of CWE-863 (Incorrect Authorization) further supports the assessment that authorization is the core issue. However, given the explicit **missing** aspect, CWE-862 is favored over CWE-863.\n\nThe selected CWEs are at an optimal level of specificity, as CWE-862 is a class-level CWE that accurately captures the high-level nature of the **missing access controls**.\n\nRelevant CWE Information:\n\n*   CWE-862 (Missing Authorization): The product does not perform any authorization checks when an actor attempts to access a resource or perform an action.\n*   CWE-285 (Improper Authorization): The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.\n*   CWE-306 (Missing Authentication for Critical Function): The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.\n\nI considered CWE-863 (Incorrect Authorization), but it was rejected because the description highlights the absence of authorization rather than an incorrect implementation. I also considered CWE-269 (Improper Privilege Management) and CWE-732 (Incorrect Permission Assignment for Critical Resource), but these were deemed less relevant as the core issue is the **missing access controls**, not the assignment or management of privileges or permissions.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-862 | Missing Authorization | 0.9 | Class | Primary | Allowed-with-Review |\n| CWE-285 | Improper Authorization | 0.7 | Class | Secondary | Discouraged |\n| CWE-306 | Missing Authentication for Critical Function | 0.6 | Base | Secondary | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship that influenced my decision was the hierarchical relationship between CWE-862 Missing Authorization and CWE-285 Improper Authorization. While both could apply, CWE-862 is more fitting because the vulnerability description explicitly states \"**missing access controls**,\" implying a complete absence of authorization, rather than a flawed implementation which would be CWE-285. The relationship to CWE-306 also plays a part, where authentication is missing, leading to authorization issues. The class level of CWE-862 is appropriate given the high-level description of the missing controls.\n\n```mermaid\ngraph TD\n    cwe862[\"CWE-862: Missing Authorization\"]\n    cwe285[\"CWE-285: Improper Authorization\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    cwe287[\"CWE-287: Improper Authentication\"]\n\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n\n    cwe862 -->|PEEROF| cwe863\n    cwe285 -->|PEEROF| cwe863\n    cwe862 -->|CHILD_OF| cwe285\n\n    cwe306 -->|CANPRECEDE| cwe862\n    cwe306 -->|CANPRECEDE| cwe863\n    cwe306 -->|CHILD_OF| cwe287\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe862 primary\n    class cwe285,cwe306 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain begins with the **missing access controls** (CWE-862), which allows attackers with JS management permissions to perform administrative actions. This leads to impacts like data destruction.\n\nCWE-862 (Missing Authorization) -> Data Destruction (Impact)\n\n## Summary of Analysis\nThe initial analysis focused on identifying the root cause of the vulnerability, which is the **missing access controls**. The description clearly states that \"Some of the JS API requests were **missing access controls**,\" providing strong evidence for CWE-862.\n\nThe relationship between CWE-862 and CWE-285 was carefully considered. While CWE-285 (Improper Authorization) could also apply if the authorization checks were present but flawed, the explicit mention of \"**missing access controls**\" points more directly to a complete lack of authorization, making CWE-862 the more appropriate choice.\n\nThe high retriever score of CWE-863 (Incorrect Authorization) further supports the assessment that authorization is the core issue. However, given the explicit **missing** aspect, CWE-862 is favored over CWE-863.\n\nThe selected CWEs are at an optimal level of specificity, as CWE-862 is a class-level CWE that accurately captures the high-level nature of the **missing access controls**.\n\nRelevant CWE Information:\n\n*   CWE-862 (Missing Authorization): The product does not perform any authorization checks when an actor attempts to access a resource or perform an action.\n*   CWE-285 (Improper Authorization): The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.\n*   CWE-306 (Missing Authentication for Critical Function): The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.\n\nI considered CWE-863 (Incorrect Authorization), but it was rejected because the description highlights the absence of authorization rather than an incorrect implementation. I also considered CWE-269 (Improper Privilege Management) and CWE-732 (Incorrect Permission Assignment for Critical Resource), but these were deemed less relevant as the core issue is the **missing access controls**, not the assignment or management of privileges or permissions.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-732:**\n- 732 (Incorrect Permission Assignment for Critical Resource) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 687.928214016787
    },
    {
      "metadata": {
        "doc_id": "770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "source": "sparse"
      },
      "similarity": 670.5359783283492
    },
    {
      "metadata": {
        "doc_id": "1390",
        "name": "Weak Authentication",
        "source": "sparse"
      },
      "similarity": 669.8732057659755
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 666.2704155232811
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 661.9997085970939
    },
    {
      "metadata": {
        "doc_id": "269",
        "name": "Improper Privilege Management",
        "source": "sparse"
      },
      "similarity": 651.3324721305471
    },
    {
      "metadata": {
        "doc_id": "732",
        "name": "Incorrect Permission Assignment for Critical Resource",
        "source": "sparse"
      },
      "similarity": 649.602234044248
    },
    {
      "metadata": {
        "doc_id": "287",
        "name": "Improper Authentication",
        "source": "sparse"
      },
      "similarity": 649.3300293124996
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "type": "Class",
        "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
        "keyphrase_source": "rootcause:missing access controls",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.481802985444161
          }
        }
      },
      "similarity": 0.481802985444161
    },
    {
      "doc_id": "494",
      "text": "CWE-494: Download of Code Without Integrity Check",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "494",
        "name": "Download of Code Without Integrity Check",
        "type": "base",
        "original_content": "CWE-494: Download of Code Without Integrity Check",
        "relationships": [
          {
            "source_id": "494",
            "target_id": "79",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "494",
            "target_id": "669",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "494",
            "target_id": "669",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "494",
            "target_id": "345",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "494",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "669",
            "target_id": "494",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "345",
            "target_id": "494",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "79",
                  "494",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "79"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "79",
                  "494",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "79"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-732",
      "CWE-862",
      "CWE-306",
      "CWE-269",
      "CWE-285",
      "CWE-287"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}