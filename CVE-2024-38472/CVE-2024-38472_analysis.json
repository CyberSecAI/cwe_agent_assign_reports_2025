{
  "cve_id": "CVE-2024-38472",
  "description": "**SSRF** in Apache HTTP Server on Windows allows to potentially leak NTML hashes to a malicious server via **SSRF** and malicious requests or content Users are recommended to upgrade to version 2.4.60 which fixes this issue. Note Existing configurations that access UNC paths will have to configure new directive UNCList to allow access during request processing.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "SSRF",
    "impact": "leak NTML hashes",
    "vector": "SSRF and malicious requests or content",
    "attacker": "",
    "product": "Apache HTTP Server",
    "version": "prior to 2.4.60",
    "component": ""
  },
  "reference_content": "Based on the provided information, here's a breakdown of the vulnerability:\n\n**CVE ID:** CVE-2024-38472\n\n**Description:**\nThe vulnerability is a Server-Side Request Forgery (SSRF) in the Apache HTTP Server on Windows. It allows an attacker to potentially leak NTLM hashes to a malicious server via SSRF using malicious requests or content.\n\n**Root Cause:**\nThe vulnerability arises from how the Apache HTTP Server on Windows handles requests involving UNC (Universal Naming Convention) paths. The server is vulnerable to being tricked into making requests to attacker-controlled UNC paths, leading to the leakage of NTLM hashes.\n\n**Weaknesses/Vulnerabilities Present:**\n- **SSRF (Server-Side Request Forgery):** The core weakness is the server's ability to be coerced into making requests to arbitrary locations.\n- **NTLM Hash Leakage:** The SSRF can be exploited to force the server to authenticate to a malicious server using NTLM, potentially leaking the server's NTLM hash.\n\n**Impact of Exploitation:**\n- **NTLM Hash Theft:** Successful exploitation allows an attacker to obtain NTLM hashes from the vulnerable server. These hashes can then be cracked to gain further access or used in pass-the-hash attacks.\n- **Potential for Further Compromise:** Leaked credentials can potentially be used to pivot to other resources accessible by the compromised server.\n\n**Attack Vectors:**\n- **Malicious Requests:** Attackers can craft malicious requests that manipulate the server into accessing attacker-controlled UNC paths.\n- **Malicious Content:** Exploitation can occur by serving malicious content that causes the server to initiate an SSRF request upon processing.\n\n**Required Attacker Capabilities/Position:**\n- **Network Access:** The attacker needs to be able to send requests to the vulnerable server.\n- **Knowledge of UNC Paths:** An understanding of how UNC paths function within the Windows environment is required to properly construct the malicious requests.\n\n**Additional Details (from the provided content):**\n\n- The vulnerability affects Apache HTTP Server versions 2.4.0 through 2.4.59.\n- The fix is available in version 2.4.60.\n- A new directive, `UNCList`, was introduced in the fix, requiring existing configurations that access UNC paths to configure this directive to allow access during request processing.\n- The vulnerability was found by Orange Tsai (@orange_8361) from DEVCORE.\n- NetApp products are also affected, specifically ONTAP 9.\n- The CVE score is 7.5 (HIGH) with vector CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N\n\nThis vulnerability allows for the potential theft of sensitive NTLM hashes, emphasizing the importance of promptly updating to the fixed version.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-918 | Server-Side Request Forgery (SSRF) | 1.0 | Base | Primary | Allowed |\n| CWE-200 | Exposure of Sensitive Information to an Unauthorized Actor | 0.7 | Class | Secondary | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is CWE-918 [Server-Side Request Forgery (SSRF)]. This is a base-level CWE, providing a good description of the root cause. The secondary weakness could be CWE-200 [Exposure of Sensitive Information to an Unauthorized Actor], due to the potential leak of NTLM hashes.\n\n```mermaid\ngraph TD\n    cwe918[\"CWE-918: Server-Side Request Forgery (SSRF)\"]\n    cwe200[\"CWE-200: Exposure of Sensitive Information to an Unauthorized Actor\"]\n    \n    cwe918 -->|CAN_LEAD_TO| cwe200\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe918 primary\n    class cwe200 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **SSRF** (CWE-918) which leads to the leakage of NTLM hashes, which is a form of sensitive information exposure.\n\n## Summary of Analysis\nThe analysis is based on the vulnerability description and the provided CVE reference, which clearly identify the **SSRF** (**Server-Side Request Forgery**) as the main **weakness**. The description explicitly mentions that the **SSRF** allows to potentially leak NTLM hashes.\n\nThe retriever results also point to CWE-918 as the most relevant CWE.\n\nCWE-918 [Server-Side Request Forgery (SSRF)] is the optimal choice as it directly addresses the root cause of the vulnerability which is the server being tricked into making requests to arbitrary locations. The evidence \"The vulnerability is a Server-Side Request Forgery (SSRF) in the Apache HTTP Server on Windows. It allows an attacker to potentially leak NTLM hashes to a malicious server via SSRF using malicious requests or content.\" supports this.\n\nCWE-200 [Exposure of Sensitive Information to an Unauthorized Actor] is a secondary consideration because the impact of the SSRF is the leakage of NTLM hashes. This is a class-level CWE.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-918: Server-Side Request Forgery (SSRF)\n**Abstraction Level**: Base\n**Similarity Score**: 0.80\n**Source**: dense\n\n**Description**:\nThe web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-200: Exposure of Sensitive Information to an Unauthorized Actor\n**Abstraction Level**: Class\n**Similarity Score**: N/A\n**Source**: N/A\n\n**Description**:\nThe product exposes sensitive information to an unauthorized actor.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate. However, if no more specific CWE is available, this can be used.\n\n### Detailed Analysis for each CWE:\n\n**CWE-918: Server-Side Request Forgery (SSRF)**\n*   **How the vulnerability's details match the CWE's characteristics:** The description states that the vulnerability is an **SSRF**, which allows the server to be tricked into making requests to arbitrary locations. This matches the definition of CWE-918.\n*   **The security implications and potential impact:** An attacker can potentially leak NTLM hashes to a malicious server.\n*   **Any parent-child relationships or chain patterns that influenced your mapping:** None.\n*   **Whether the weakness is primary or secondary in the vulnerability:** Primary.\n*   **How the official MITRE mapping guidance influenced your decision:** The mapping guidance allows for this CWE and is at the Base level of abstraction.\n*   **Supporting Evidence:** \"The vulnerability is a Server-Side Request Forgery (SSRF) in the Apache HTTP Server on Windows...allows an attacker to potentially leak NTLM hashes to a malicious server via SSRF using malicious requests or content.\"\n\n**CWE-200: Exposure of Sensitive Information to an Unauthorized Actor**\n*   **How the vulnerability's details match the CWE's characteristics:** The **SSRF** results in the leakage of NTLM hashes, which is sensitive information.\n*   **The security implications and potential impact:** An attacker can use the leaked NTLM hashes to gain further access to the system.\n*   **Any parent-child relationships or chain patterns that influenced your mapping:** None.\n*   **Whether the weakness is primary or secondary in the vulnerability:** Secondary.\n*   **How the official MITRE mapping guidance influenced your decision:** The mapping guidance allows for this CWE.\n*   **Supporting Evidence:** \"SSRF in Apache HTTP Server on Windows allows to potentially leak NTML hashes to a malicious server\"\n\n**CWEs Considered but Not Used:**\n\n*   CWE-611: Improper Restriction of XML External Entity Reference: While also present in the retriever results, this is less relevant as the vulnerability is not directly related to XML processing.\n*   CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting'): This is not directly applicable because the vulnerability does not involve CRLF injection.\n*   CWE-306: Missing Authentication for Critical Function: Not applicable as the issue is not related to missing authentication, but rather the server being tricked into making requests to attacker-controlled locations.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-918 | Server-Side Request Forgery (SSRF) | 1.0 | Base | Primary | Allowed |\n| CWE-200 | Exposure of Sensitive Information to an Unauthorized Actor | 0.7 | Class | Secondary | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary weakness is CWE-918 [Server-Side Request Forgery (SSRF)]. This is a base-level CWE, providing a good description of the root cause. The secondary weakness could be CWE-200 [Exposure of Sensitive Information to an Unauthorized Actor], due to the potential leak of NTLM hashes.\n\n```mermaid\ngraph TD\n    cwe918[\"CWE-918: Server-Side Request Forgery (SSRF)\"]\n    cwe200[\"CWE-200: Exposure of Sensitive Information to an Unauthorized Actor\"]\n    \n    cwe918 -->|CAN_LEAD_TO| cwe200\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe918 primary\n    class cwe200 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **SSRF** (CWE-918) which leads to the leakage of NTLM hashes, which is a form of sensitive information exposure.\n\n## Summary of Analysis\nThe analysis is based on the vulnerability description and the provided CVE reference, which clearly identify the **SSRF** (**Server-Side Request Forgery**) as the main **weakness**. The description explicitly mentions that the **SSRF** allows to potentially leak NTLM hashes.\n\nThe retriever results also point to CWE-918 as the most relevant CWE.\n\nCWE-918 [Server-Side Request Forgery (SSRF)] is the optimal choice as it directly addresses the root cause of the vulnerability which is the server being tricked into making requests to arbitrary locations. The evidence \"The vulnerability is a Server-Side Request Forgery (SSRF) in the Apache HTTP Server on Windows. It allows an attacker to potentially leak NTLM hashes to a malicious server via SSRF using malicious requests or content.\" supports this.\n\nCWE-200 [Exposure of Sensitive Information to an Unauthorized Actor] is a secondary consideration because the impact of the SSRF is the leakage of NTLM hashes. This is a class-level CWE.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-918: Server-Side Request Forgery (SSRF)\n**Abstraction Level**: Base\n**Similarity Score**: 0.80\n**Source**: dense\n\n**Description**:\nThe web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-200: Exposure of Sensitive Information to an Unauthorized Actor\n**Abstraction Level**: Class\n**Similarity Score**: N/A\n**Source**: N/A\n\n**Description**:\nThe product exposes sensitive information to an unauthorized actor.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate. However, if no more specific CWE is available, this can be used.\n\n### Detailed Analysis for each CWE:\n\n**CWE-918: Server-Side Request Forgery (SSRF)**\n*   **How the vulnerability's details match the CWE's characteristics:** The description states that the vulnerability is an **SSRF**, which allows the server to be tricked into making requests to arbitrary locations. This matches the definition of CWE-918.\n*   **The security implications and potential impact:** An attacker can potentially leak NTLM hashes to a malicious server.\n*   **Any parent-child relationships or chain patterns that influenced your mapping:** None.\n*   **Whether the weakness is primary or secondary in the vulnerability:** Primary.\n*   **How the official MITRE mapping guidance influenced your decision:** The mapping guidance allows for this CWE and is at the Base level of abstraction.\n*   **Supporting Evidence:** \"The vulnerability is a Server-Side Request Forgery (SSRF) in the Apache HTTP Server on Windows...allows an attacker to potentially leak NTLM hashes to a malicious server via SSRF using malicious requests or content.\"\n\n**CWE-200: Exposure of Sensitive Information to an Unauthorized Actor**\n*   **How the vulnerability's details match the CWE's characteristics:** The **SSRF** results in the leakage of NTLM hashes, which is sensitive information.\n*   **The security implications and potential impact:** An attacker can use the leaked NTLM hashes to gain further access to the system.\n*   **Any parent-child relationships or chain patterns that influenced your mapping:** None.\n*   **Whether the weakness is primary or secondary in the vulnerability:** Secondary.\n*   **How the official MITRE mapping guidance influenced your decision:** The mapping guidance allows for this CWE.\n*   **Supporting Evidence:** \"SSRF in Apache HTTP Server on Windows allows to potentially leak NTML hashes to a malicious server\"\n\n**CWEs Considered but Not Used:**\n\n*   CWE-611: Improper Restriction of XML External Entity Reference: While also present in the retriever results, this is less relevant as the vulnerability is not directly related to XML processing.\n*   CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting'): This is not directly applicable because the vulnerability does not involve CRLF injection.\n*   CWE-306: Missing Authentication for Critical Function: Not applicable as the issue is not related to missing authentication, but rather the server being tricked into making requests to attacker-controlled locations.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-611:**\n- 611 (Improper Restriction of XML External Entity Reference) - ROOT\n\n\n**Chain starting from CWE-306:**\n- 306 (Missing Authentication for Critical Function) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "918",
        "name": "Server-Side Request Forgery (SSRF)",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: SSRF",
        "match_reason": "exact_match_whole_phrase"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "611",
        "name": "Improper Restriction of XML External Entity Reference",
        "source": "sparse"
      },
      "similarity": 311.4398823724338
    },
    {
      "metadata": {
        "doc_id": "923",
        "name": "Improper Restriction of Communication Channel to Intended Endpoints",
        "source": "sparse"
      },
      "similarity": 305.97940172534277
    },
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "sparse"
      },
      "similarity": 271.892933769151
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 270.1712933843791
    },
    {
      "metadata": {
        "doc_id": "532",
        "name": "Insertion of Sensitive Information into Log File",
        "source": "sparse"
      },
      "similarity": 269.12846332200587
    },
    {
      "metadata": {
        "doc_id": "306",
        "name": "Missing Authentication for Critical Function",
        "source": "sparse"
      },
      "similarity": 264.03289527377416
    },
    {
      "metadata": {
        "doc_id": "138",
        "name": "Improper Neutralization of Special Elements",
        "source": "sparse"
      },
      "similarity": 260.1446917688114
    },
    {
      "metadata": {
        "doc_id": "113",
        "name": "Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')",
        "type": "Variant",
        "original_content": "The product receives data from an HTTP agent/component (e.g., web server, proxy, browser, etc.), but it does not neutralize or incorrectly neutralizes CR and LF characters before the data is included in outgoing HTTP headers.",
        "keyphrase_source": "weakness:SSRF",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.5408236956602926
          }
        }
      },
      "similarity": 0.5408236956602926
    },
    {
      "doc_id": "79",
      "text": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "score": 2.9120000000000004,
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "type": "base",
        "original_content": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "relationships": [
          {
            "source_id": "79",
            "target_id": "87",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "86",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "85",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "84",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "83",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "81",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "80",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "184",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "113",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "352",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "494",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "79",
            "target_id": "74",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "79",
            "target_id": "74",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "87",
            "target_id": "79",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "86",
            "target_id": "79",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "85",
            "target_id": "79",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "84",
            "target_id": "79",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "83",
            "target_id": "79",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "81",
            "target_id": "79",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "80",
            "target_id": "79",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "74",
            "target_id": "79",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "494",
            "target_id": "79",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "184",
            "target_id": "79",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "113",
            "target_id": "79",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0,
          "peer_group": 0.9
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "peer_relationship"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "113",
                  "79",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "113"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "113",
                  "79",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "113"
            },
            "peer_relationship": {
              "path": [
                [
                  "79",
                  "352",
                  "PEEROF"
                ]
              ],
              "score": 0.9,
              "type": "peer_relationship",
              "source": "352"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "sparse",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "sparse": 259.97945071515386,
            "graph": 2.9120000000000004
          }
        }
      },
      "similarity": 2.9120000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-611",
      "CWE-306",
      "CWE-113",
      "CWE-918",
      "CWE-200"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}