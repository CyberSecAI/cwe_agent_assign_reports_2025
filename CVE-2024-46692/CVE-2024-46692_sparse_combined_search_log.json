{
  "method": "sparse_combined",
  "query": "In the Linux kernel, the following vulnerability has been resolved firmware qcom scm Mark get_wq_ctx() as atomic call Currently get_wq_ctx() is wrongly configured as a standard call. When two SMC calls are in sleep and one SMC wakes up, it calls get_wq_ctx() to resume the corresponding sleeping thread. But if get_wq_ctx() is interrupted, goes to sleep and another SMC call is waiting to be allocated a waitq context, it leads to a deadlock. To avoid this get_wq_ctx() must be an atomic call and cant be a standard SMC call. Hence mark get_wq_ctx() as a fast call.",
  "keyphrases": {
    "rootcause": [
      "wrong configuration of get_wq_ctx() as a standard call"
    ]
  },
  "timestamp": "2025-07-13T17:35:53.640629",
  "results_count": 11,
  "results_summary": [
    {
      "doc_id": "667",
      "name": "Improper Locking",
      "score": 515.7688366104163
    },
    {
      "doc_id": "828",
      "name": "Signal Handler with Functionality that is not Asynchronous-Safe",
      "score": 502.1199069199859
    },
    {
      "doc_id": "345",
      "name": "Insufficient Verification of Data Authenticity",
      "score": 501.4118107434067
    },
    {
      "doc_id": "252",
      "name": "Unchecked Return Value",
      "score": 496.5342420850071
    },
    {
      "doc_id": "479",
      "name": "Signal Handler Use of a Non-reentrant Function",
      "score": 484.11927551116753
    }
  ]
}