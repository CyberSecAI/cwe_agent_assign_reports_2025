{
  "cve_id": "CVE-2024-13676",
  "description": "The Categorized Gallery Plugin plugin for WordPress is vulnerable to **SQL Injection** via the field attribute of the image_gallery shortcode in all versions up to, and including, 2.0 due to **insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query**. This makes it possible for authenticated attackers, with Contributor-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.",
  "key_phrases": {
    "rootcause": [
      "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
      "insufficient escaping on user-supplied parameter"
    ],
    "weakness": "SQL Injection",
    "impact": "extract sensitive information from the database",
    "vector": "",
    "attacker": "authenticated attackers with Contributor-level access and above",
    "product": "Categorized Gallery Plugin for WordPress",
    "version": "all versions up to and including 2.0",
    "component": "image_gallery shortcode"
  },
  "reference_content": "This content relates to CVE-2024-13676, as it is source code from the \"categorized-gallery\" WordPress plugin, which is the affected product. The content provides more detail than the official CVE description.\n\n**Root cause of vulnerability:**\n\nThe code creates database tables (`galcategory` and `galimage`) and defines functions to interact with them. The vulnerability likely stems from insufficient input validation or sanitization when handling user-supplied data that is used in these database queries. While the code itself doesn't *show* the vulnerability, it establishes the foundation where such a vulnerability could exist.\n\n**Weaknesses/vulnerabilities present:**\n\n*   **Potential SQL Injection:** The code uses direct string concatenation to build SQL queries (lines 38-49, 53-67, 175-178). This is a classic SQL injection vulnerability if user-supplied data is not properly sanitized before being included in these queries.\n*   **File Upload Vulnerabilities:** The code handles file uploads (lines 11-32).  There's no explicit check for file types or sizes, which could lead to arbitrary file uploads.\n*   **Path Traversal:** The code uses `plugin_dir_path(__FILE__)` to define the base directory, but the subsequent handling of file paths (e.g., in file operations) could be vulnerable to path traversal if not carefully managed.\n*   **Cross-Site Scripting (XSS):** The code retrieves data from the database and displays it (e.g., image titles, category names). If this data is not properly escaped before being output, it could lead to XSS vulnerabilities.\n\n**Impact of exploitation:**\n\n*   **SQL Injection:** An attacker could potentially read, modify, or delete data in the WordPress database, leading to complete compromise of the website.\n*   **Arbitrary File Upload:** An attacker could upload malicious files (e.g., PHP scripts) to the server, potentially gaining remote code execution.\n*   **Path Traversal:** An attacker could access sensitive files on the server.\n*   **XSS:** An attacker could inject malicious JavaScript code into the website, potentially stealing user credentials or defacing the website.\n\n**Attack vectors:**\n\n*   **SQL Injection:** Through plugin settings, shortcode attributes, or any other input field that is used in a database query.\n*   **Arbitrary File Upload:** Through the plugin's file upload functionality.\n*   **Path Traversal:** Through manipulated file paths in plugin settings or shortcode attributes.\n*   **XSS:** Through user-supplied data that is displayed on the website without proper escaping.\n\n**Required attacker capabilities/position:**\n\n*   **SQL Injection:** An attacker needs to be able to inject malicious SQL code into an input field. This could require a low-privilege user account or the ability to manipulate plugin settings.\n*   **Arbitrary File Upload:** An attacker needs to be able to upload files to the server through the plugin's file upload functionality.\n*   **Path Traversal:** An attacker needs to be able to manipulate file paths in plugin settings or shortcode attributes.\n*   **XSS:** An attacker needs to be able to inject malicious JavaScript code into an input field that is displayed on the website.\n\n**Mitigation or fix:**\n\n*   **Prepared Statements:** Use prepared statements with parameterized queries to prevent SQL injection.\n*   **Input Validation and Sanitization:** Validate and sanitize all user-supplied data before using it in database queries or file operations.\n*   **File Type and Size Validation:** Implement strict file type and size validation to prevent arbitrary file uploads.\n*   **Path Sanitization:** Sanitize file paths to prevent path traversal.\n*   **Output Encoding:** Encode all data before displaying it on the website to prevent XSS.\n*   **Principle of Least Privilege:** Ensure that the plugin only has the necessary permissions to perform its functions.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-89 | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 1.0 | Base | Primary | Allowed |\n| CWE-116 | Improper Encoding or Escaping of Output | 0.7 | Class | Secondary | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-89, which is a Base level CWE and a child of CWE-74 (Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')) and CWE-943 (Improper Neutralization During SQL Query Construction). CWE-116 is a Class level CWE, which can be considered as a secondary weakness due to the **insufficient escaping**.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n    cwe943[\"CWE-943: Improper Neutralization During SQL Query Construction\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n    \n    cwe89 -->|CHILDOF| cwe74\n    cwe89 -->|CHILDOF| cwe943\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe89 primary\n    class cwe74,cwe943,cwe116 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **insufficient escaping on the user-supplied parameter** (CWE-116) and **lack of sufficient preparation on the existing SQL query**, leading to **SQL Injection** (CWE-89), which allows an attacker to **extract sensitive information from the database**.\n\n## Summary of Analysis\nThe primary weakness is CWE-89, **Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')**, because the plugin **does not neutralize or incorrectly neutralizes** special elements that could modify the intended SQL command. The vulnerability description explicitly states that there is \"lack of sufficient preparation on the existing SQL query\". This aligns directly with the definition of CWE-89.\n\nThe secondary weakness is CWE-116, **Improper Encoding or Escaping of Output**, because the plugin has \"**insufficient escaping on the user supplied parameter**\". This means the data isn't properly encoded before being used in a structured message (in this case, an SQL query). While CWE-89 is the more direct cause of the **SQL Injection**, the lack of proper escaping (CWE-116) contributes to the vulnerability.\n\nI considered other CWEs such as CWE-90 (Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')), CWE-79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')), and CWE-94 (Improper Control of Generation of Code ('Code Injection')), but they do not match the specific vulnerability of SQL injection. CWE-352 (Cross-Site Request Forgery (CSRF)) was also considered but rejected as it is not relevant to the described vulnerability.\nThe selection of CWE-89 and CWE-116 is at the optimal level of specificity, as they accurately represent the root cause and contributing factor to the vulnerability.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-89 | Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') | 1.0 | Base | Primary | Allowed |\n| CWE-116 | Improper Encoding or Escaping of Output | 0.7 | Class | Secondary | Allowed-with-Review |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-89, which is a Base level CWE and a child of CWE-74 (Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')) and CWE-943 (Improper Neutralization During SQL Query Construction). CWE-116 is a Class level CWE, which can be considered as a secondary weakness due to the **insufficient escaping**.\n\n```mermaid\ngraph TD\n    cwe89[\"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"]\n    cwe74[\"CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\"]\n    cwe943[\"CWE-943: Improper Neutralization During SQL Query Construction\"]\n    cwe116[\"CWE-116: Improper Encoding or Escaping of Output\"]\n    \n    cwe89 -->|CHILDOF| cwe74\n    cwe89 -->|CHILDOF| cwe943\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe89 primary\n    class cwe74,cwe943,cwe116 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with **insufficient escaping on the user-supplied parameter** (CWE-116) and **lack of sufficient preparation on the existing SQL query**, leading to **SQL Injection** (CWE-89), which allows an attacker to **extract sensitive information from the database**.\n\n## Summary of Analysis\nThe primary weakness is CWE-89, **Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')**, because the plugin **does not neutralize or incorrectly neutralizes** special elements that could modify the intended SQL command. The vulnerability description explicitly states that there is \"lack of sufficient preparation on the existing SQL query\". This aligns directly with the definition of CWE-89.\n\nThe secondary weakness is CWE-116, **Improper Encoding or Escaping of Output**, because the plugin has \"**insufficient escaping on the user supplied parameter**\". This means the data isn't properly encoded before being used in a structured message (in this case, an SQL query). While CWE-89 is the more direct cause of the **SQL Injection**, the lack of proper escaping (CWE-116) contributes to the vulnerability.\n\nI considered other CWEs such as CWE-90 (Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')), CWE-79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')), and CWE-94 (Improper Control of Generation of Code ('Code Injection')), but they do not match the specific vulnerability of SQL injection. CWE-352 (Cross-Site Request Forgery (CSRF)) was also considered but rejected as it is not relevant to the described vulnerability.\nThe selection of CWE-89 and CWE-116 is at the optimal level of specificity, as they accurately represent the root cause and contributing factor to the vulnerability.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-90:**\n- 90 (Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')) - ROOT\n\n\n**Chain starting from CWE-89:**\n- 89 (Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse",
        "original_content": "The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user-supplied parameter",
            "keyphrase": "insufficient escaping on user-supplied parameter",
            "type": "rootcause"
          },
          {
            "id": "weakness:SQL Injection",
            "keyphrase": "SQL Injection",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "attacker:authenticated attackers with Contributor-level access and above",
            "keyphrase": "authenticated attackers with Contributor-level access and above",
            "type": "attacker"
          },
          {
            "id": "product:Categorized Gallery Plugin for WordPress",
            "keyphrase": "Categorized Gallery Plugin for WordPress",
            "type": "product"
          },
          {
            "id": "version:all versions up to and including 2.0",
            "keyphrase": "all versions up to and including 2.0",
            "type": "version"
          },
          {
            "id": "component:image_gallery shortcode",
            "keyphrase": "image_gallery shortcode",
            "type": "component"
          }
        ]
      },
      "similarity": 765.765703409179
    },
    {
      "metadata": {
        "doc_id": "89",
        "name": "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component. Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user-supplied parameter",
            "keyphrase": "insufficient escaping on user-supplied parameter",
            "type": "rootcause"
          },
          {
            "id": "weakness:SQL Injection",
            "keyphrase": "SQL Injection",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "attacker:authenticated attackers with Contributor-level access and above",
            "keyphrase": "authenticated attackers with Contributor-level access and above",
            "type": "attacker"
          },
          {
            "id": "product:Categorized Gallery Plugin for WordPress",
            "keyphrase": "Categorized Gallery Plugin for WordPress",
            "type": "product"
          },
          {
            "id": "version:all versions up to and including 2.0",
            "keyphrase": "all versions up to and including 2.0",
            "type": "version"
          },
          {
            "id": "component:image_gallery shortcode",
            "keyphrase": "image_gallery shortcode",
            "type": "component"
          }
        ]
      },
      "similarity": 754.5125471309423
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse",
        "original_content": "The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user-supplied parameter",
            "keyphrase": "insufficient escaping on user-supplied parameter",
            "type": "rootcause"
          },
          {
            "id": "weakness:SQL Injection",
            "keyphrase": "SQL Injection",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "attacker:authenticated attackers with Contributor-level access and above",
            "keyphrase": "authenticated attackers with Contributor-level access and above",
            "type": "attacker"
          },
          {
            "id": "product:Categorized Gallery Plugin for WordPress",
            "keyphrase": "Categorized Gallery Plugin for WordPress",
            "type": "product"
          },
          {
            "id": "version:all versions up to and including 2.0",
            "keyphrase": "all versions up to and including 2.0",
            "type": "version"
          },
          {
            "id": "component:image_gallery shortcode",
            "keyphrase": "image_gallery shortcode",
            "type": "component"
          }
        ]
      },
      "similarity": 713.0766316253419
    },
    {
      "metadata": {
        "doc_id": "90",
        "name": "Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')",
        "source": "sparse",
        "original_content": "The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstream component.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user-supplied parameter",
            "keyphrase": "insufficient escaping on user-supplied parameter",
            "type": "rootcause"
          },
          {
            "id": "weakness:SQL Injection",
            "keyphrase": "SQL Injection",
            "type": "weakness"
          },
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "version:all versions up to and including 2.0",
            "keyphrase": "all versions up to and including 2.0",
            "type": "version"
          },
          {
            "id": "component:image_gallery shortcode",
            "keyphrase": "image_gallery shortcode",
            "type": "component"
          }
        ]
      },
      "similarity": 708.8211331127097
    },
    {
      "metadata": {
        "doc_id": "790",
        "name": "Improper Filtering of Special Elements",
        "source": "sparse",
        "original_content": "The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",
        "keyphrase_sources": [
          {
            "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
            "type": "rootcause"
          },
          {
            "id": "rootcause:insufficient escaping on user-supplied parameter",
            "keyphrase": "insufficient escaping on user-supplied parameter",
            "type": "rootcause"
          }
        ]
      },
      "similarity": 654.1421537842625
    },
    {
      "metadata": {
        "doc_id": "502",
        "name": "Deserialization of Untrusted Data",
        "source": "sparse",
        "original_content": "The product deserializes untrusted data without sufficiently ensuring that the resulting data will be valid.",
        "keyphrase_sources": [
          {
            "id": "weakness:SQL Injection",
            "keyphrase": "SQL Injection",
            "type": "weakness"
          }
        ]
      },
      "similarity": 463.33118435086993
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse",
        "original_content": "The product does not perform an authorization check when an actor attempts to access a resource or perform an action.",
        "keyphrase_sources": [
          {
            "id": "attacker:authenticated attackers with Contributor-level access and above",
            "keyphrase": "authenticated attackers with Contributor-level access and above",
            "type": "attacker"
          },
          {
            "id": "product:Categorized Gallery Plugin for WordPress",
            "keyphrase": "Categorized Gallery Plugin for WordPress",
            "type": "product"
          }
        ]
      },
      "similarity": 186.32129857150235
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse",
        "original_content": "The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check.",
        "keyphrase_sources": [
          {
            "id": "impact:extract sensitive information from the database",
            "keyphrase": "extract sensitive information from the database",
            "type": "impact"
          },
          {
            "id": "attacker:authenticated attackers with Contributor-level access and above",
            "keyphrase": "authenticated attackers with Contributor-level access and above",
            "type": "attacker"
          },
          {
            "id": "product:Categorized Gallery Plugin for WordPress",
            "keyphrase": "Categorized Gallery Plugin for WordPress",
            "type": "product"
          },
          {
            "id": "version:all versions up to and including 2.0",
            "keyphrase": "all versions up to and including 2.0",
            "type": "version"
          },
          {
            "id": "component:image_gallery shortcode",
            "keyphrase": "image_gallery shortcode",
            "type": "component"
          }
        ]
      },
      "similarity": 180.13363953009707
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-90",
      "CWE-89",
      "CWE-116",
      "CWE-94",
      "CWE-79",
      "CWE-352",
      "CWE-74",
      "CWE-943"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {
    "116": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user-supplied parameter",
        "keyphrase": "insufficient escaping on user-supplied parameter",
        "type": "rootcause"
      },
      {
        "id": "weakness:SQL Injection",
        "keyphrase": "SQL Injection",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "attacker:authenticated attackers with Contributor-level access and above",
        "keyphrase": "authenticated attackers with Contributor-level access and above",
        "type": "attacker"
      },
      {
        "id": "product:Categorized Gallery Plugin for WordPress",
        "keyphrase": "Categorized Gallery Plugin for WordPress",
        "type": "product"
      },
      {
        "id": "version:all versions up to and including 2.0",
        "keyphrase": "all versions up to and including 2.0",
        "type": "version"
      },
      {
        "id": "component:image_gallery shortcode",
        "keyphrase": "image_gallery shortcode",
        "type": "component"
      }
    ],
    "89": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user-supplied parameter",
        "keyphrase": "insufficient escaping on user-supplied parameter",
        "type": "rootcause"
      },
      {
        "id": "weakness:SQL Injection",
        "keyphrase": "SQL Injection",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "attacker:authenticated attackers with Contributor-level access and above",
        "keyphrase": "authenticated attackers with Contributor-level access and above",
        "type": "attacker"
      },
      {
        "id": "product:Categorized Gallery Plugin for WordPress",
        "keyphrase": "Categorized Gallery Plugin for WordPress",
        "type": "product"
      },
      {
        "id": "version:all versions up to and including 2.0",
        "keyphrase": "all versions up to and including 2.0",
        "type": "version"
      },
      {
        "id": "component:image_gallery shortcode",
        "keyphrase": "image_gallery shortcode",
        "type": "component"
      }
    ],
    "352": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user-supplied parameter",
        "keyphrase": "insufficient escaping on user-supplied parameter",
        "type": "rootcause"
      },
      {
        "id": "weakness:SQL Injection",
        "keyphrase": "SQL Injection",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "attacker:authenticated attackers with Contributor-level access and above",
        "keyphrase": "authenticated attackers with Contributor-level access and above",
        "type": "attacker"
      },
      {
        "id": "product:Categorized Gallery Plugin for WordPress",
        "keyphrase": "Categorized Gallery Plugin for WordPress",
        "type": "product"
      },
      {
        "id": "version:all versions up to and including 2.0",
        "keyphrase": "all versions up to and including 2.0",
        "type": "version"
      },
      {
        "id": "component:image_gallery shortcode",
        "keyphrase": "image_gallery shortcode",
        "type": "component"
      }
    ],
    "90": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user-supplied parameter",
        "keyphrase": "insufficient escaping on user-supplied parameter",
        "type": "rootcause"
      },
      {
        "id": "weakness:SQL Injection",
        "keyphrase": "SQL Injection",
        "type": "weakness"
      },
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "version:all versions up to and including 2.0",
        "keyphrase": "all versions up to and including 2.0",
        "type": "version"
      },
      {
        "id": "component:image_gallery shortcode",
        "keyphrase": "image_gallery shortcode",
        "type": "component"
      }
    ],
    "790": [
      {
        "id": "rootcause:insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "keyphrase": "insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query",
        "type": "rootcause"
      },
      {
        "id": "rootcause:insufficient escaping on user-supplied parameter",
        "keyphrase": "insufficient escaping on user-supplied parameter",
        "type": "rootcause"
      }
    ],
    "502": [
      {
        "id": "weakness:SQL Injection",
        "keyphrase": "SQL Injection",
        "type": "weakness"
      }
    ],
    "863": [
      {
        "id": "impact:extract sensitive information from the database",
        "keyphrase": "extract sensitive information from the database",
        "type": "impact"
      },
      {
        "id": "attacker:authenticated attackers with Contributor-level access and above",
        "keyphrase": "authenticated attackers with Contributor-level access and above",
        "type": "attacker"
      },
      {
        "id": "product:Categorized Gallery Plugin for WordPress",
        "keyphrase": "Categorized Gallery Plugin for WordPress",
        "type": "product"
      },
      {
        "id": "version:all versions up to and including 2.0",
        "keyphrase": "all versions up to and including 2.0",
        "type": "version"
      },
      {
        "id": "component:image_gallery shortcode",
        "keyphrase": "image_gallery shortcode",
        "type": "component"
      }
    ],
    "862": [
      {
        "id": "attacker:authenticated attackers with Contributor-level access and above",
        "keyphrase": "authenticated attackers with Contributor-level access and above",
        "type": "attacker"
      },
      {
        "id": "product:Categorized Gallery Plugin for WordPress",
        "keyphrase": "Categorized Gallery Plugin for WordPress",
        "type": "product"
      }
    ]
  }
}