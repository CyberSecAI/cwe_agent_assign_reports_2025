{
  "cve_id": "CVE-2024-11847",
  "description": "The wp-svg-upload WordPress plugin through 1.0.0 **does not sanitize SVG file contents**, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored **XSS** attacks.",
  "key_phrases": {
    "rootcause": "does not sanitize SVG file contents",
    "weakness": "XSS",
    "impact": "Stored XSS attacks",
    "vector": "malicious JavaScript in SVG file",
    "attacker": "users with at least the author role",
    "product": "wp-svg-upload WordPress plugin",
    "version": "through 1.0.0",
    "component": ""
  },
  "reference_content": "## Analysis of CVE-2024-11847 Content\n\nThe provided content is **RELEVANT** to CVE-2024-11847 and provides more detail than the placeholder description. Here's an extraction of the relevant information:\n\n**Root cause of vulnerability:**\n\nThe plugin does not sanitize SVG file contents.\n\n**Weaknesses/vulnerabilities present:**\n\n*   Stored Cross-Site Scripting (XSS)\n\n**Impact of exploitation:**\n\nUsers with at least the author role can upload SVG files containing malicious JavaScript, leading to the execution of that JavaScript when a user browses to the uploaded SVG file's URL.\n\n**Attack vectors:**\n\n*   Uploading a crafted SVG file through the WordPress admin interface.\n\n**Required attacker capabilities/position:**\n\n*   An authenticated user with the \"author\" role or higher.\n\n**Mitigation or fix:**\n\n*   No known fix as of March 5, 2025.\n\n**Additional Details:**\n\n*   **Affected Plugin:** WP SVG Upload <= 1.0.0\n*   **CVE ID:** CVE-2024-11847\n*   **CVSS Score:** 4.8 (Medium)\n*   **Proof of Concept:**  Uploading an SVG file containing `<script type=\"text/javascript\">alert('xss');</script>`\n*   **Original Researcher:** Pierre Rudloff\n*   **WPVDB ID:** f57ecff2-0cff-40c7-b6e4-5b162b847d65\n*   **Publicly Published:** 2025-03-05\n*   **OWASP Top 10:** A7: Cross-Site Scripting (XSS)\n*   **CWE:** CWE-79",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Allowed | Primary CWE. The plugin **does not sanitize SVG file contents**, leading to stored **XSS** attacks. |\n| CWE-434 | Unrestricted Upload of File with Dangerous Type | 0.7 | Base | Allowed | Secondary CWE. The plugin allows unrestricted upload of SVG files, which can contain malicious code. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship influencing the decision is the CANFOLLOW relationship between CWE-434 and CWE-79, where unrestricted file upload can lead to cross-site scripting if the file contents are not properly sanitized. The abstraction levels are both Base, providing appropriate specificity.\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe434[\"CWE-434: Unrestricted Upload of File with Dangerous Type\"]\n    \n    cwe434 -- CANPRECEDE --> cwe79\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe79 primary\n    class cwe434 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with:\n1.  **Root Cause:** **CWE-434** (Unrestricted Upload of File with Dangerous Type) - The plugin allows uploading SVG files without restrictions on file type.\n2.  **Weakness:** The uploaded SVG file is not sanitized.\n3.  **CWE-79** (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')) - Since the SVG file contents are not sanitized, malicious JavaScript code embedded in the SVG can be executed in the context of the user's browser.\n4.  **Impact:** Stored XSS attack, potentially leading to account compromise or other malicious activities.\n\n## Summary of Analysis\nThe analysis strongly points to CWE-79 as the primary weakness. The **root cause** is the **lack of sanitization of SVG file contents**, leading to stored **XSS**. The evidence is clear: \"The wp-svg-upload WordPress plugin through 1.0.0 **does not sanitize SVG file contents**, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored **XSS** attacks.\" This directly matches the description of CWE-79. CWE-434 is a secondary weakness because the **unrestricted upload of dangerous file types** allows the injection of the malicious SVG. Both CWEs are at the Base level of abstraction, providing the most specific representation of the vulnerability. The retriever results also support CWE-79 as the top candidate.\n\nThe graph relationships and retriever results confirm this assessment. The selection of CWE-79 is made with high confidence due to the clear evidence in the vulnerability description and supporting information.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-79 | Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') | 1.0 | Base | Allowed | Primary CWE. The plugin **does not sanitize SVG file contents**, leading to stored **XSS** attacks. |\n| CWE-434 | Unrestricted Upload of File with Dangerous Type | 0.7 | Base | Allowed | Secondary CWE. The plugin allows unrestricted upload of SVG files, which can contain malicious code. |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.9\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary relationship influencing the decision is the CANFOLLOW relationship between CWE-434 and CWE-79, where unrestricted file upload can lead to cross-site scripting if the file contents are not properly sanitized. The abstraction levels are both Base, providing appropriate specificity.\n```mermaid\ngraph TD\n    cwe79[\"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"]\n    cwe434[\"CWE-434: Unrestricted Upload of File with Dangerous Type\"]\n    \n    cwe434 -- CANPRECEDE --> cwe79\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    \n    class cwe79 primary\n    class cwe434 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with:\n1.  **Root Cause:** **CWE-434** (Unrestricted Upload of File with Dangerous Type) - The plugin allows uploading SVG files without restrictions on file type.\n2.  **Weakness:** The uploaded SVG file is not sanitized.\n3.  **CWE-79** (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')) - Since the SVG file contents are not sanitized, malicious JavaScript code embedded in the SVG can be executed in the context of the user's browser.\n4.  **Impact:** Stored XSS attack, potentially leading to account compromise or other malicious activities.\n\n## Summary of Analysis\nThe analysis strongly points to CWE-79 as the primary weakness. The **root cause** is the **lack of sanitization of SVG file contents**, leading to stored **XSS**. The evidence is clear: \"The wp-svg-upload WordPress plugin through 1.0.0 **does not sanitize SVG file contents**, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored **XSS** attacks.\" This directly matches the description of CWE-79. CWE-434 is a secondary weakness because the **unrestricted upload of dangerous file types** allows the injection of the malicious SVG. Both CWEs are at the Base level of abstraction, providing the most specific representation of the vulnerability. The retriever results also support CWE-79 as the top candidate.\n\nThe graph relationships and retriever results confirm this assessment. The selection of CWE-79 is made with high confidence due to the clear evidence in the vulnerability description and supporting information.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-79:**\n- 79 (Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')) - ROOT\n\n\n**Chain starting from CWE-434:**\n- 434 (Unrestricted Upload of File with Dangerous Type) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "79",
        "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: XSS",
        "match_reason": "exact_match_whole_phrase"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "434",
        "name": "Unrestricted Upload of File with Dangerous Type",
        "source": "sparse"
      },
      "similarity": 310.0090421484262
    },
    {
      "metadata": {
        "doc_id": "611",
        "name": "Improper Restriction of XML External Entity Reference",
        "source": "sparse"
      },
      "similarity": 248.82861817856903
    },
    {
      "metadata": {
        "doc_id": "352",
        "name": "Cross-Site Request Forgery (CSRF)",
        "source": "sparse"
      },
      "similarity": 238.37146655242466
    },
    {
      "metadata": {
        "doc_id": "138",
        "name": "Improper Neutralization of Special Elements",
        "source": "sparse"
      },
      "similarity": 216.24475960720142
    },
    {
      "metadata": {
        "doc_id": "23",
        "name": "Relative Path Traversal",
        "source": "sparse"
      },
      "similarity": 205.52636381057732
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 202.81233835665904
    },
    {
      "metadata": {
        "doc_id": "116",
        "name": "Improper Encoding or Escaping of Output",
        "source": "sparse"
      },
      "similarity": 201.26916091813328
    },
    {
      "metadata": {
        "doc_id": "82",
        "name": "Improper Neutralization of Script in Attributes of IMG Tags in a Web Page",
        "type": "Variant",
        "original_content": "The web application does not neutralize or incorrectly neutralizes scripting elements within attributes of HTML IMG tags, such as the src attribute.",
        "keyphrase_source": "weakness:XSS",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "dense": 0.5028037363381321
          }
        }
      },
      "similarity": 0.5028037363381321
    },
    {
      "doc_id": "73",
      "text": "CWE-73: External Control of File Name or Path",
      "score": 2.2100000000000004,
      "metadata": {
        "doc_id": "73",
        "name": "External Control of File Name or Path",
        "type": "base",
        "original_content": "CWE-73: External Control of File Name or Path",
        "relationships": [
          {
            "source_id": "73",
            "target_id": "114",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "59",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "434",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "98",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "41",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "22",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "20",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "700"
            }
          },
          {
            "source_id": "73",
            "target_id": "610",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "73",
            "target_id": "642",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "99",
            "target_id": "73",
            "label": "CANALSOBE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "98",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "642",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "610",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "59",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "434",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "41",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "22",
            "target_id": "73",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "20",
            "target_id": "73",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "700"
            }
          },
          {
            "source_id": "114",
            "target_id": "73",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "434",
                  "73",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "434"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "434",
                  "73",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "434"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "73",
                  "434",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "434"
            }
          }
        },
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.2100000000000004
          }
        }
      },
      "similarity": 2.2100000000000004
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-79",
      "CWE-434"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}