{
  "retriever": "graph",
  "query": "In the Linux kernel, the following vulnerability has been resolved usb dwc3 core remove lock of otg mode during gadget suspend/resume to avoid deadlock When config CONFIG_USB_DWC3_DUAL_ROLE is selected, and trigger system to enter suspend status with below command echo mem > /sys/power/state There will be a deadlock issue occurring. Detailed invoking path as below dwc3_suspend_common() spin_lock_irqsave(&dwc->lock, flags) lock, flags) gadget_driver is NULL or not. It causes the following code is executed and deadlock occurs when trying to get the spinlock. In fact, the root cause is the commit 5265397f9442(usb dwc3 Remove DWC3 locking during gadget suspend/resume) that forgot to remove the lock of otg mode. So, remove the redundant lock of otg mode during gadget suspend/resume. Consider specifically these CWEs: CWE-413 CWE-367 CWE-476 CWE-1232 CWE-667 CWE-1234 CWE-88 CWE-833",
  "keyphrases": {
    "original_query": "In the Linux kernel, the following vulnerability has been resolved usb dwc3 core remove lock of otg mode during gadget suspend/resume to avoid deadlock When config CONFIG_USB_DWC3_DUAL_ROLE is selected, and trigger system to enter suspend status with below command echo mem > /sys/power/state There will be a deadlock issue occurring. Detailed invoking path as below dwc3_suspend_common() spin_lock_irqsave(&dwc->lock, flags) lock, flags) gadget_driver is NULL or not. It causes the following code is executed and deadlock occurs when trying to get the spinlock. In fact, the root cause is the commit 5265397f9442(usb dwc3 Remove DWC3 locking during gadget suspend/resume) that forgot to remove the lock of otg mode. So, remove the redundant lock of otg mode during gadget suspend/resume.",
    "enhanced_query": "In the Linux kernel, the following vulnerability has been resolved usb dwc3 core remove lock of otg mode during gadget suspend/resume to avoid deadlock When config CONFIG_USB_DWC3_DUAL_ROLE is selected, and trigger system to enter suspend status with below command echo mem > /sys/power/state There will be a deadlock issue occurring. Detailed invoking path as below dwc3_suspend_common() spin_lock_irqsave(&dwc->lock, flags) lock, flags) gadget_driver is NULL or not. It causes the following code is executed and deadlock occurs when trying to get the spinlock. In fact, the root cause is the commit 5265397f9442(usb dwc3 Remove DWC3 locking during gadget suspend/resume) that forgot to remove the lock of otg mode. So, remove the redundant lock of otg mode during gadget suspend/resume. Consider specifically these CWEs: CWE-413 CWE-367 CWE-476 CWE-1232 CWE-667 CWE-1234 CWE-88 CWE-833",
    "cwe_mentions": [
      "CWE-413",
      "CWE-367",
      "CWE-476",
      "CWE-1232",
      "CWE-667",
      "CWE-1234",
      "CWE-88",
      "CWE-833"
    ],
    "search_time": 2.90924334526062
  },
  "timestamp": "2025-07-12 03:38:44",
  "cve_id": "CVE-2024-42085",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "609",
      "name": "Double-Checked Locking",
      "type": "base",
      "score": 2.8651999999999997,
      "relationship_count": 0
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "type": "base",
      "score": 2.821,
      "relationship_count": 0
    },
    {
      "cwe_id": "252",
      "name": "Unchecked Return Value",
      "type": "base",
      "score": 2.2100000000000004,
      "relationship_count": 0
    },
    {
      "cwe_id": "1325",
      "name": "Improperly Controlled Sequential Memory Allocation",
      "type": "base",
      "score": 2.2100000000000004,
      "relationship_count": 0
    },
    {
      "cwe_id": "386",
      "name": "Symbolic Name not Mapping to Correct Object",
      "type": "base",
      "score": 2.1866000000000003,
      "relationship_count": 0
    },
    {
      "cwe_id": "88",
      "name": "Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')",
      "type": "base",
      "score": 2.1189999999999998,
      "relationship_count": 0
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "type": "variant",
      "score": 2.04,
      "relationship_count": 0
    },
    {
      "cwe_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "type": "base",
      "score": 1.7680000000000005,
      "relationship_count": 0
    },
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "type": "Base",
      "score": 1.6978848842048992,
      "relationship_count": 0
    },
    {
      "cwe_id": "1234",
      "name": "Hardware Internal or Debug Modes Allow Override of Locks",
      "type": "Base",
      "score": 1.6862104336676154,
      "relationship_count": 0
    },
    {
      "cwe_id": "413",
      "name": "Improper Resource Locking",
      "type": "Base",
      "score": 1.6859557924834392,
      "relationship_count": 0
    },
    {
      "cwe_id": "1232",
      "name": "Improper Lock Behavior After Power State Transition",
      "type": "Base",
      "score": 1.6823510852395664,
      "relationship_count": 0
    },
    {
      "cwe_id": "129",
      "name": "Improper Validation of Array Index",
      "type": "variant",
      "score": 1.6320000000000003,
      "relationship_count": 0
    },
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "type": "variant",
      "score": 1.6320000000000003,
      "relationship_count": 0
    },
    {
      "cwe_id": "78",
      "name": "Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
      "type": "base",
      "score": 1.521,
      "relationship_count": 0
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "type": "Base",
      "score": 1.448378663938252,
      "relationship_count": 0
    },
    {
      "cwe_id": "662",
      "name": "Improper Synchronization",
      "type": "class",
      "score": 1.4016000000000002,
      "relationship_count": 0
    },
    {
      "cwe_id": "823",
      "name": "Use of Out-of-range Pointer Offset",
      "type": "base",
      "score": 1.3676000000000001,
      "relationship_count": 0
    },
    {
      "cwe_id": "123",
      "name": "Write-what-where Condition",
      "type": "base",
      "score": 1.3676000000000001,
      "relationship_count": 0
    },
    {
      "cwe_id": "120",
      "name": "Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')",
      "type": "base",
      "score": 1.3676000000000001,
      "relationship_count": 0
    }
  ]
}