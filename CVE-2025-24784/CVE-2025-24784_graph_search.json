{
  "retriever": "graph",
  "query": "kubewarden-controller is a Kubernetes controller that allows you to dynamically register Kubewarden admission policies. The policy group feature, added to by the 1.17.0 release. By being namespaced, the AdmissionPolicyGroup has a well constrained impact on cluster resources. Hence, its considered safe to allow non-admin users to create and manage these resources in the namespaces they own. Kubewarden policies can be allowed to query the Kubernetes API at evaluation time these types of policies are called context aware. Context aware policies can perform list and get operations against a Kubernetes cluster. The queries are done using the ServiceAccount of the Policy Server instance that hosts the policy. That means that access to the cluster is determined by the RBAC rules that apply to that ServiceAccount. The AdmissionPolicyGroup CRD allowed the deployment of context aware policies. This could allow an attacker to obtain information about resources that are out of their reach, by leveraging a higher access to the cluster granted to the ServiceAccount token used to run the policy. The impact of this vulnerability depends on the privileges that have been granted to the ServiceAccount used to run the Policy Server and assumes that users are using the recommended best practices of keeping the Policy Servers ServiceAccount least privileged. By default, the Kubewarden helm chart grants access to the following resources (cluster wide) only Namespace, Pod, Deployment and Ingress. This vulnerability is fixed in 1.21.0. Consider specifically these CWEs: CWE-842 CWE-286 CWE-923 CWE-732 CWE-642 CWE-1220 CWE-696 CWE-1268 CWE-285 CWE-863",
  "keyphrases": {
    "original_query": "kubewarden-controller is a Kubernetes controller that allows you to dynamically register Kubewarden admission policies. The policy group feature, added to by the 1.17.0 release. By being namespaced, the AdmissionPolicyGroup has a well constrained impact on cluster resources. Hence, its considered safe to allow non-admin users to create and manage these resources in the namespaces they own. Kubewarden policies can be allowed to query the Kubernetes API at evaluation time these types of policies are called context aware. Context aware policies can perform list and get operations against a Kubernetes cluster. The queries are done using the ServiceAccount of the Policy Server instance that hosts the policy. That means that access to the cluster is determined by the RBAC rules that apply to that ServiceAccount. The AdmissionPolicyGroup CRD allowed the deployment of context aware policies. This could allow an attacker to obtain information about resources that are out of their reach, by leveraging a higher access to the cluster granted to the ServiceAccount token used to run the policy. The impact of this vulnerability depends on the privileges that have been granted to the ServiceAccount used to run the Policy Server and assumes that users are using the recommended best practices of keeping the Policy Servers ServiceAccount least privileged. By default, the Kubewarden helm chart grants access to the following resources (cluster wide) only Namespace, Pod, Deployment and Ingress. This vulnerability is fixed in 1.21.0.",
    "enhanced_query": "kubewarden-controller is a Kubernetes controller that allows you to dynamically register Kubewarden admission policies. The policy group feature, added to by the 1.17.0 release. By being namespaced, the AdmissionPolicyGroup has a well constrained impact on cluster resources. Hence, its considered safe to allow non-admin users to create and manage these resources in the namespaces they own. Kubewarden policies can be allowed to query the Kubernetes API at evaluation time these types of policies are called context aware. Context aware policies can perform list and get operations against a Kubernetes cluster. The queries are done using the ServiceAccount of the Policy Server instance that hosts the policy. That means that access to the cluster is determined by the RBAC rules that apply to that ServiceAccount. The AdmissionPolicyGroup CRD allowed the deployment of context aware policies. This could allow an attacker to obtain information about resources that are out of their reach, by leveraging a higher access to the cluster granted to the ServiceAccount token used to run the policy. The impact of this vulnerability depends on the privileges that have been granted to the ServiceAccount used to run the Policy Server and assumes that users are using the recommended best practices of keeping the Policy Servers ServiceAccount least privileged. By default, the Kubewarden helm chart grants access to the following resources (cluster wide) only Namespace, Pod, Deployment and Ingress. This vulnerability is fixed in 1.21.0. Consider specifically these CWEs: CWE-842 CWE-286 CWE-923 CWE-732 CWE-642 CWE-1220 CWE-696 CWE-1268 CWE-285 CWE-863",
    "cwe_mentions": [
      "CWE-842",
      "CWE-286",
      "CWE-923",
      "CWE-732",
      "CWE-642",
      "CWE-1220",
      "CWE-696",
      "CWE-1268",
      "CWE-285",
      "CWE-863"
    ],
    "search_time": 3.5484092235565186
  },
  "timestamp": "2025-07-12 10:49:57",
  "cve_id": "CVE-2025-24784",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "1275",
      "name": "Sensitive Cookie with Improper SameSite Attribute",
      "type": "variant",
      "score": 2.2704,
      "relationship_count": 0
    },
    {
      "cwe_id": "322",
      "name": "Key Exchange without Entity Authentication",
      "type": "base",
      "score": 2.2100000000000004,
      "relationship_count": 0
    },
    {
      "cwe_id": "350",
      "name": "Reliance on Reverse DNS Resolution for a Security-Critical Action",
      "type": "variant",
      "score": 2.04,
      "relationship_count": 0
    },
    {
      "cwe_id": "613",
      "name": "Insufficient Session Expiration",
      "type": "base",
      "score": 1.6744000000000003,
      "relationship_count": 0
    },
    {
      "cwe_id": "386",
      "name": "Symbolic Name not Mapping to Correct Object",
      "type": "base",
      "score": 1.6744000000000003,
      "relationship_count": 0
    },
    {
      "cwe_id": "842",
      "name": "Placement of User into Incorrect Group",
      "type": "Base",
      "score": 1.6742027579247263,
      "relationship_count": 0
    },
    {
      "cwe_id": "1268",
      "name": "Policy Privileges are not Assigned Consistently Between Control and Data Agents",
      "type": "Base",
      "score": 1.6394708033546084,
      "relationship_count": 0
    },
    {
      "cwe_id": "1220",
      "name": "Insufficient Granularity of Access Control",
      "type": "Base",
      "score": 1.6296936143374667,
      "relationship_count": 0
    },
    {
      "cwe_id": "352",
      "name": "Cross-Site Request Forgery (CSRF)",
      "type": "compound",
      "score": 1.61,
      "relationship_count": 0
    },
    {
      "cwe_id": "689",
      "name": "Permission Race Condition During Resource Copy",
      "type": "compound",
      "score": 1.61,
      "relationship_count": 0
    },
    {
      "cwe_id": "61",
      "name": "UNIX Symbolic Link (Symlink) Following",
      "type": "compound",
      "score": 1.61,
      "relationship_count": 0
    },
    {
      "cwe_id": "732",
      "name": "Incorrect Permission Assignment for Critical Resource",
      "type": "class",
      "score": 1.4080000000000001,
      "relationship_count": 0
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "type": "base",
      "score": 1.3676000000000001,
      "relationship_count": 0
    },
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "type": "variant",
      "score": 1.2624,
      "relationship_count": 0
    },
    {
      "cwe_id": "425",
      "name": "Direct Request ('Forced Browsing')",
      "type": "base",
      "score": 1.2261600000000001,
      "relationship_count": 0
    },
    {
      "cwe_id": "384",
      "name": "Session Fixation",
      "type": "compound",
      "score": 1.1600000000000001,
      "relationship_count": 0
    },
    {
      "cwe_id": "266",
      "name": "Incorrect Privilege Assignment",
      "type": "Base",
      "score": 1.0827458572419415,
      "relationship_count": 0
    },
    {
      "cwe_id": "346",
      "name": "Origin Validation Error",
      "type": "class",
      "score": 1.0304000000000002,
      "relationship_count": 0
    },
    {
      "cwe_id": "441",
      "name": "Unintended Proxy or Intermediary ('Confused Deputy')",
      "type": "class",
      "score": 1.0304000000000002,
      "relationship_count": 0
    },
    {
      "cwe_id": "340",
      "name": "Generation of Predictable Numbers or Identifiers",
      "type": "class",
      "score": 1.0304000000000002,
      "relationship_count": 0
    }
  ]
}