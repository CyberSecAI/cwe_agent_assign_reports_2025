{
  "cve_id": "CVE-2025-37959",
  "description": "In the Linux kernel, the following vulnerability has been resolved bpf Scrub packet on bpf_redirect_peer When bpf_redirect_peer is used to redirect packets to a device in another network namespace, the skb isnt scrubbed. That can lead skb information from one namespace to be misused in another namespace. As one example, this is causing Cilium to drop traffic when using bpf_redirect_peer to redirect packets that just went through IPsec decryption to a container namespace. The following pwru trace shows (1) the packet path from the hosts XFRM layer to the containers XFRM layer where its dropped and (2) the number of active skb extensions at each function. NETNS MARK IFACE TUPLE FUNC 4026533547 d00 eth0 10.244.3.12435473->10.244.2.15853 xfrm_rcv_cb .active_extensions = (__u8)2, 4026533547 d00 eth0 10.244.3.12435473->10.244.2.15853 xfrm4_rcv_cb .active_extensions = (__u8)2, 4026533547 d00 eth0 10.244.3.12435473->10.244.2.15853 gro_cells_receive .active_extensions = (__u8)2, [...] 4026533547 0 eth0 10.244.3.12435473->10.244.2.15853 skb_do_redirect .active_extensions = (__u8)2, 4026534999 0 eth0 10.244.3.12435473->10.244.2.15853 ip_rcv .active_extensions = (__u8)2, 4026534999 0 eth0 10.244.3.12435473->10.244.2.15853 ip_rcv_core .active_extensions = (__u8)2, [...] 4026534999 0 eth0 10.244.3.12435473->10.244.2.15853 udp_queue_rcv_one_skb .active_extensions = (__u8)2, 4026534999 0 eth0 10.244.3.12435473->10.244.2.15853 __xfrm_policy_check .active_extensions = (__u8)2, 4026534999 0 eth0 10.244.3.12435473->10.244.2.15853 __xfrm_decode_session .active_extensions = (__u8)2, 4026534999 0 eth0 10.244.3.12435473->10.244.2.15853 security_xfrm_decode_session .active_extensions = (__u8)2, 4026534999 0 eth0 10.244.3.12435473->10.244.2.15853 kfree_skb_reason(SKB_DROP_REASON_XFRM_POLICY) .active_extensions = (__u8)2, In this case, there are no XFRM policies in the containers network namespace so the drop is unexpected. When we decrypt the IPsec packet, the XFRM state used for decryption is set in the skb extensions. This information is preserved across the netns switch. When we reach the XFRM policy check in the containers netns, __xfrm_policy_check drops the packet with LINUX_MIB_XFRMINNOPOLS because a (container-side) XFRM policy cant be found that matches the (host-side) XFRM state used for decryption. This patch fixes this by scrubbing the packet when using bpf_redirect_peer, as is done on typical netns switches via veth devices except skb->mark and skb->tstamp are not zeroed.",
  "key_phrases": {
    "rootcause": "",
    "weakness": "",
    "impact": "drop traffic",
    "vector": "",
    "attacker": "",
    "product": "Linux kernel",
    "version": "",
    "component": "bpf_redirect_peer"
  },
  "reference_content": "UNRELATED",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n\n| CWE ID  | CWE Name                                                                                         | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :------------------------------------------------------------------------------------------------- | :--------- | :---------------------- | :-------------------------------- | :-------------------------------- |\n| CWE-703   | Improper Check or Handling of Exceptional Conditions                                        | 0.75      | Class                    | Primary                           | Allowed-with-Review                |\n| CWE-390   | Detection of Error Condition Without Action    | 0.60      | Base                    | Secondary                           | Allowed                            |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.70\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\n\nThe primary weakness is the **improper handling of exceptional conditions** (CWE-755), specifically the condition where the skb isn't scrubbed when `bpf_redirect_peer` is used. This leads to information leakage between network namespaces. The related weakness is the **detection of the error condition without taking action** (CWE-390) i.e. the Linux kernel detects that the `skb` isn't scrubbed when it should be. The abstraction levels influenced the selection, prioritizing a Class-level CWE for a broader view of the exceptional condition, complemented by a Base-level CWE for the specific lack of action.\n\n```mermaid\ngraph TD\n    cwe755[\"CWE-755: Improper Handling of Exceptional Conditions\"]\n    cwe390[\"CWE-390: Detection of Error Condition Without Action\"]\n\n    cwe390 -->|CHILDOF| cwe755\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe755 primary\n    class cwe390 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with the kernel failing to scrub the `skb` when using `bpf_redirect_peer`. This **missing action** leads to **sensitive information** (XFRM state) being carried over to another network namespace. In the container's network namespace, this leads to a failed XFRM policy check and ultimately traffic being dropped. Thus, CWE-755 represents the root cause as the **improper handling** and CWE-390 the **lack of action**.\n\n## Summary of Analysis\n\nThe initial assessment focused on identifying the root cause of the vulnerability based on the provided description. The key phrase \"skb isn't scrubbed\" indicated a **failure to handle a necessary condition**, leading to the selection of CWE-755.\n\nThe graph relationships helped to refine the analysis, showing how `CWE-390: Detection of Error Condition Without Action` is a child of `CWE-755: Improper Handling of Exceptional Conditions`.\n\nThe final selection was based on the evidence that the kernel **detected** the need to scrub the packet, but **failed to take that action**. The selected CWEs are at an appropriate level of specificity, with `CWE-755` capturing the broad category of **improper handling** and `CWE-390` detailing the specific **lack of action**.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-346: Origin Validation Error\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product does not properly verify that the source of data or communication is valid.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-755: Improper Handling of Exceptional Conditions\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product does not handle or incorrectly handles an exceptional condition.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n## CWE-401: Missing Release of Memory after Effective Lifetime\n**Abstraction Level**: Variant\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-362: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence operating concurrently.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-1284: Improper Validation of Specified Quantity in Input\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-667: Improper Locking\n**Abstraction Level**: Class\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-191: Integer Underflow (Wrap or Wraparound)\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-252: Unchecked Return Value\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-125: Out-of-bounds Read\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product reads data past the end, or before the beginning, of the intended buffer.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-1284: Improper Validation of Specified Quantity in Input\n**Abstraction Level**: Base\n**Similarity Score**: 771.11\n**Source**: sparse\n\n**Description**:\nThe product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-833: Deadlock\n**Abstraction Level**: Base\n**Similarity Score**: 742.22\n**Source**: sparse\n\n**Description**:\nThe product contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE",
  "analysis_with_relationships": "# Summary\n\n| CWE ID  | CWE Name                                                                                         | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :------------------------------------------------------------------------------------------------- | :--------- | :---------------------- | :-------------------------------- | :-------------------------------- |\n| CWE-703   | Improper Check or Handling of Exceptional Conditions                                        | 0.75      | Class                    | Primary                           | Allowed-with-Review                |\n| CWE-390   | Detection of Error Condition Without Action    | 0.60      | Base                    | Secondary                           | Allowed                            |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.70\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\n\nThe primary weakness is the **improper handling of exceptional conditions** (CWE-755), specifically the condition where the skb isn't scrubbed when `bpf_redirect_peer` is used. This leads to information leakage between network namespaces. The related weakness is the **detection of the error condition without taking action** (CWE-390) i.e. the Linux kernel detects that the `skb` isn't scrubbed when it should be. The abstraction levels influenced the selection, prioritizing a Class-level CWE for a broader view of the exceptional condition, complemented by a Base-level CWE for the specific lack of action.\n\n```mermaid\ngraph TD\n    cwe755[\"CWE-755: Improper Handling of Exceptional Conditions\"]\n    cwe390[\"CWE-390: Detection of Error Condition Without Action\"]\n\n    cwe390 -->|CHILDOF| cwe755\n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    class cwe755 primary\n    class cwe390 secondary\n```\n\n## Vulnerability Chain\n\nThe vulnerability chain starts with the kernel failing to scrub the `skb` when using `bpf_redirect_peer`. This **missing action** leads to **sensitive information** (XFRM state) being carried over to another network namespace. In the container's network namespace, this leads to a failed XFRM policy check and ultimately traffic being dropped. Thus, CWE-755 represents the root cause as the **improper handling** and CWE-390 the **lack of action**.\n\n## Summary of Analysis\n\nThe initial assessment focused on identifying the root cause of the vulnerability based on the provided description. The key phrase \"skb isn't scrubbed\" indicated a **failure to handle a necessary condition**, leading to the selection of CWE-755.\n\nThe graph relationships helped to refine the analysis, showing how `CWE-390: Detection of Error Condition Without Action` is a child of `CWE-755: Improper Handling of Exceptional Conditions`.\n\nThe final selection was based on the evidence that the kernel **detected** the need to scrub the packet, but **failed to take that action**. The selected CWEs are at an appropriate level of specificity, with `CWE-755` capturing the broad category of **improper handling** and `CWE-390` detailing the specific **lack of action**.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-346: Origin Validation Error\n**Abstraction Level**: Class\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nThe product does not properly verify that the source of data or communication is valid.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-755: Improper Handling of Exceptional Conditions\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product does not handle or incorrectly handles an exceptional condition.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n## CWE-401: Missing Release of Memory after Effective Lifetime\n**Abstraction Level**: Variant\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-362: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product contains a concurrent code sequence that requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence operating concurrently.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-1284: Improper Validation of Specified Quantity in Input\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-667: Improper Locking\n**Abstraction Level**: Class\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n## CWE-191: Integer Underflow (Wrap or Wraparound)\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-252: Unchecked Return Value\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-125: Out-of-bounds Read\n**Abstraction Level**: Base\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product reads data past the end, or before the beginning, of the intended buffer.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-1284: Improper Validation of Specified Quantity in Input\n**Abstraction Level**: Base\n**Similarity Score**: 771.11\n**Source**: sparse\n\n**Description**:\nThe product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE-833: Deadlock\n**Abstraction Level**: Base\n**Similarity Score**: 742.22\n**Source**: sparse\n\n**Description**:\nThe product contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n## CWE\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-390:**\n- 390 (Detection of Error Condition Without Action) - ROOT\n\n\n**Chain starting from CWE-1284:**\n- 1284 (Improper Validation of Specified Quantity in Input) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "1249",
        "name": "Application-Level Admin Tool with Inconsistent View of Underlying Operating System",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Ghost in the Shell",
        "match_reason": "phrase_in_term_compound_part_2"
      },
      "similarity": 700.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "130",
        "name": "Improper Handling of Length Parameter Inconsistency",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: length manipulation",
        "match_reason": "phrase_in_term_compound_part_2"
      },
      "similarity": 700.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "22",
        "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Path traversal",
        "match_reason": "phrase_in_term_compound_part_2"
      },
      "similarity": 700.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "833",
        "name": "Deadlock",
        "source": "sparse"
      },
      "similarity": 480.321724130335
    },
    {
      "metadata": {
        "doc_id": "770",
        "name": "Allocation of Resources Without Limits or Throttling",
        "source": "sparse"
      },
      "similarity": 428.8705241552001
    },
    {
      "metadata": {
        "doc_id": "1284",
        "name": "Improper Validation of Specified Quantity in Input",
        "source": "sparse"
      },
      "similarity": 427.019502861674
    },
    {
      "metadata": {
        "doc_id": "244",
        "name": "Improper Clearing of Heap Memory Before Release ('Heap Inspection')",
        "source": "sparse"
      },
      "similarity": 424.67002005046913
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 419.9680431367026
    },
    {
      "metadata": {
        "doc_id": "401",
        "name": "Missing Release of Memory after Effective Lifetime",
        "type": "Variant",
        "original_content": "The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "sparse"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.5128911692735735,
            "sparse": 413.55202388885033
          }
        }
      },
      "similarity": 0.5128911692735735
    },
    {
      "doc_id": "789",
      "text": "CWE-789: Memory Allocation with Excessive Size Value",
      "score": 2.6784000000000003,
      "metadata": {
        "doc_id": "789",
        "name": "Memory Allocation with Excessive Size Value",
        "type": "variant",
        "original_content": "CWE-789: Memory Allocation with Excessive Size Value",
        "relationships": [
          {
            "source_id": "789",
            "target_id": "129",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "789",
            "target_id": "1284",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "789",
            "target_id": "476",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "789",
            "target_id": "770",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "770",
            "target_id": "789",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "476",
            "target_id": "789",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1325",
            "target_id": "789",
            "label": "PEEROF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "129",
            "target_id": "789",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1284",
            "target_id": "789",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.76,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.2,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "1284",
                  "789",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "1284"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "770",
                  "789",
                  "PARENTOF"
                ]
              ],
              "score": 0.76,
              "type": "abstraction_path_down",
              "source": "770"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "1284",
                  "789",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_forward",
              "source": "1284"
            }
          }
        },
        "abstraction_level": "variant",
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.6784000000000003
          }
        }
      },
      "similarity": 2.6784000000000003
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-390",
      "CWE-1284",
      "CWE-346",
      "CWE-125",
      "CWE-667",
      "CWE-191",
      "CWE-401",
      "CWE-833",
      "CWE-362",
      "CWE-755",
      "CWE-252",
      "CWE-703",
      "CWE-212"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}