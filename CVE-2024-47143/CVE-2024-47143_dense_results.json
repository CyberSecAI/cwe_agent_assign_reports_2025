{
  "query": "In the Linux kernel, the following vulnerability has been resolved dma-debug fix a possible deadlock on radix_lock radix_lock() shouldnt be held while holding dma_hash_entry[idx].lock otherwise, theres a possible deadlock scenario when dma debug API is called holding rq_lock() CPU0 CPU1 CPU2 dma_free_attrs() check_unmap() add_dma_entry() __schedule() //out (A) rq_lock() get_hash_bucket() (A) dma_entry_hash check_sync() (A) radix_lock() (W) dma_entry_hash dma_entry_free() (W) radix_lock() // CPU2s one (W) rq_lock() CPU1 situation can happen when it extending radix tree and it tries to wake up kswapd via wake_all_kswapd(). CPU2 situation can happen while perf_event_task_sched_out() (i.e. dma sync operation is called while deleting perf_event using etm and etr tmc which are Arm Coresight hwtracing driver backends). To remove this possible situation, call dma_entry_free() after put_hash_bucket() in check_unmap().",
  "count": 20,
  "results": [
    {
      "cwe_id": "833",
      "name": "Deadlock",
      "abstraction": "Base",
      "score": 0.5649698566841223,
      "original_score": 0.5649698566841223,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "abstraction": "Class",
      "score": 0.5465788452865687,
      "original_score": 0.5465788452865687,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "413",
      "name": "Improper Resource Locking",
      "abstraction": "Base",
      "score": 0.5318495688145289,
      "original_score": 0.5318495688145289,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1190",
      "name": "DMA Device Enabled Too Early in Boot Phase",
      "abstraction": "Base",
      "score": 0.5259722977101859,
      "original_score": 0.5259722977101859,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "abstraction": "Base",
      "score": 0.5142503525241926,
      "original_score": 0.5142503525241926,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "abstraction": "Class",
      "score": 0.5111522578796194,
      "original_score": 0.5111522578796194,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "1264",
      "name": "Hardware Logic with Insecure De-Synchronization between Control and Data Channels",
      "abstraction": "Base",
      "score": 0.5108692352544294,
      "original_score": 0.5108692352544294,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "abstraction": "Class",
      "score": 0.5096769261846977,
      "original_score": 0.5096769261846977,
      "mapping_usage": "Allowed-with-Review"
    },
    {
      "cwe_id": "1260",
      "name": "Improper Handling of Overlap Between Protected Memory Ranges",
      "abstraction": "Base",
      "score": 0.5008101397139845,
      "original_score": 0.5008101397139845,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1252",
      "name": "CPU Hardware Not Configured to Support Exclusivity of Write and Execute Operations",
      "abstraction": "Base",
      "score": 0.49315973281027714,
      "original_score": 0.49315973281027714,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "119",
      "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
      "abstraction": "Class",
      "score": 0.4790436718514597,
      "original_score": 0.4790436718514597,
      "mapping_usage": "Discouraged"
    },
    {
      "cwe_id": "366",
      "name": "Race Condition within a Thread",
      "abstraction": "Base",
      "score": 0.4739645639835296,
      "original_score": 0.4739645639835296,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "191",
      "name": "Integer Underflow (Wrap or Wraparound)",
      "abstraction": "Base",
      "score": 0.47355358126874225,
      "original_score": 0.47355358126874225,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "908",
      "name": "Use of Uninitialized Resource",
      "abstraction": "Base",
      "score": 0.47343486763133535,
      "original_score": 0.47343486763133535,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "126",
      "name": "Buffer Over-read",
      "abstraction": "Variant",
      "score": 0.4730372284514407,
      "original_score": 0.4730372284514407,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "abstraction": "Variant",
      "score": 0.47199677798152667,
      "original_score": 0.47199677798152667,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1421",
      "name": "Exposure of Sensitive Information in Shared Microarchitectural Structures during Transient Execution",
      "abstraction": "Base",
      "score": 0.4716366403993966,
      "original_score": 0.4716366403993966,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "1258",
      "name": "Exposure of Sensitive System Information Due to Uncleared Debug Information",
      "abstraction": "Base",
      "score": 0.4711471089593522,
      "original_score": 0.4711471089593522,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "122",
      "name": "Heap-based Buffer Overflow",
      "abstraction": "Variant",
      "score": 0.4698492640894476,
      "original_score": 0.4698492640894476,
      "mapping_usage": "Allowed"
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "abstraction": "Base",
      "score": 0.46924275423495077,
      "original_score": 0.46924275423495077,
      "mapping_usage": "Allowed"
    }
  ],
  "statistics": {
    "min": 0.46924275423495077,
    "max": 0.5649698566841223,
    "mean": 0.49680978358568934,
    "median": 0.4861017023308684,
    "count": 20
  }
}