{
  "retriever": "sparse",
  "query": "The Big File Uploads - Increase Maximum File Upload Size plugin for WordPress is vulnerable to Full Path Disclosure in all versions up to, and including, 2.1.2. This is due the plugin not sanitizing a file path in an error message. This makes it possible for authenticated attackers, with author-level access and above, to retrieve the full path of the web application, which can be used to aid other attacks. The information displayed is not useful on its own, and requires another vulnerability to be present for damage to an affected website.",
  "keyphrases": {
    "rootcause": [
      "not sanitizing a file path in an error message"
    ],
    "weakness": [
      "full path disclosure"
    ]
  },
  "timestamp": "2025-07-14 03:54:45",
  "cve_id": "CVE-2024-8538",
  "result_count": 13,
  "results": [
    {
      "cwe_id": "209",
      "name": "Generation of Error Message Containing Sensitive Information",
      "score": 626.7224586171176,
      "search_source": "rootcause:not sanitizing a file path in an error message"
    },
    {
      "cwe_id": "862",
      "name": "Missing Authorization",
      "score": 613.5257283584564,
      "search_source": "rootcause:not sanitizing a file path in an error message"
    },
    {
      "cwe_id": "863",
      "name": "Incorrect Authorization",
      "score": 608.3681709880942,
      "search_source": "rootcause:not sanitizing a file path in an error message"
    },
    {
      "cwe_id": "306",
      "name": "Missing Authentication for Critical Function",
      "score": 606.0870612149386,
      "search_source": "rootcause:not sanitizing a file path in an error message"
    },
    {
      "cwe_id": "22",
      "name": "Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')",
      "score": 603.5375008377061,
      "search_source": "rootcause:not sanitizing a file path in an error message"
    },
    {
      "cwe_id": "201",
      "name": "Insertion of Sensitive Information Into Sent Data",
      "score": 600.9231515258097,
      "search_source": "rootcause:not sanitizing a file path in an error message"
    },
    {
      "cwe_id": "639",
      "name": "Authorization Bypass Through User-Controlled Key",
      "score": 599.8006863134663,
      "search_source": "rootcause:not sanitizing a file path in an error message"
    },
    {
      "cwe_id": "23",
      "name": "Relative Path Traversal",
      "score": 599.0018394174101,
      "search_source": "rootcause:not sanitizing a file path in an error message"
    },
    {
      "cwe_id": "116",
      "name": "Improper Encoding or Escaping of Output",
      "score": 593.761463240943,
      "search_source": "rootcause:not sanitizing a file path in an error message"
    },
    {
      "cwe_id": "24",
      "name": "Path Traversal: '../filedir'",
      "score": 593.1892223463456,
      "search_source": "rootcause:not sanitizing a file path in an error message"
    },
    {
      "cwe_id": "425",
      "name": "Direct Request ('Forced Browsing')",
      "score": 520.4997495483607,
      "search_source": "weakness:full path disclosure"
    },
    {
      "cwe_id": "200",
      "name": "Exposure of Sensitive Information to an Unauthorized Actor",
      "score": 517.2078969118783,
      "search_source": "weakness:full path disclosure"
    },
    {
      "cwe_id": "352",
      "name": "Cross-Site Request Forgery (CSRF)",
      "score": 181.29800017121198,
      "search_source": "base_query"
    }
  ]
}