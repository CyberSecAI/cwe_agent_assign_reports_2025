{
  "retriever": "dense",
  "query": "Vim is an open source command line text editor. Vim < v9.1.0647 has double free in src/alloc.c616. When closing a window, the corresponding tagstack data will be cleared and freed. However a bit later, the quickfix list belonging to that window will also be cleared and if that quickfix list points to the same tagstack data, Vim will try to free it again, resulting in a double-free/use-after-free access exception. Impact is low since the user must intentionally execute vim with several non-default flags, but it may cause a crash of Vim. The issue has been fixed as of Vim patch v9.1.0647",
  "keyphrases": {
    "rootcause": [
      "race condition"
    ],
    "weakness": [
      "double free"
    ]
  },
  "timestamp": "2025-07-12 03:35:27",
  "cve_id": "CVE-2024-41957",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "415",
      "name": "Double Free",
      "type": "Variant",
      "score": 0.4799103250709782
    },
    {
      "cwe_id": "761",
      "name": "Free of Pointer not at Start of Buffer",
      "type": "Variant",
      "score": 0.4468587834671657
    },
    {
      "cwe_id": "590",
      "name": "Free of Memory not on the Heap",
      "type": "Variant",
      "score": 0.43747794583683053
    },
    {
      "cwe_id": "416",
      "name": "Use After Free",
      "type": "Variant",
      "score": 0.43667923803037306
    },
    {
      "cwe_id": "126",
      "name": "Buffer Over-read",
      "type": "Variant",
      "score": 0.42188561016587817
    },
    {
      "cwe_id": "366",
      "name": "Race Condition within a Thread",
      "type": "Base",
      "score": 0.41691220142239266
    },
    {
      "cwe_id": "1325",
      "name": "Improperly Controlled Sequential Memory Allocation",
      "type": "Base",
      "score": 0.414947965475437
    },
    {
      "cwe_id": "122",
      "name": "Heap-based Buffer Overflow",
      "type": "Variant",
      "score": 0.4145227317286798
    },
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "type": "Class",
      "score": 0.4137937653158911
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "type": "Class",
      "score": 0.41241720075719795
    },
    {
      "cwe_id": "124",
      "name": "Buffer Underwrite ('Buffer Underflow')",
      "type": "Base",
      "score": 0.41122724255977827
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "type": "Variant",
      "score": 0.41078755775731723
    },
    {
      "cwe_id": "674",
      "name": "Uncontrolled Recursion",
      "type": "Class",
      "score": 0.4098484010894121
    },
    {
      "cwe_id": "14",
      "name": "Compiler Removal of Code to Clear Buffers",
      "type": "Variant",
      "score": 0.4078377969929119
    },
    {
      "cwe_id": "244",
      "name": "Improper Clearing of Heap Memory Before Release ('Heap Inspection')",
      "type": "Variant",
      "score": 0.40110139828535235
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "type": "Variant",
      "score": 0.3987225245468977
    },
    {
      "cwe_id": "1341",
      "name": "Multiple Releases of Same Resource or Handle",
      "type": "Base",
      "score": 0.3970465861340097
    },
    {
      "cwe_id": "786",
      "name": "Access of Memory Location Before Start of Buffer",
      "type": "Base",
      "score": 0.39459679829013333
    },
    {
      "cwe_id": "775",
      "name": "Missing Release of File Descriptor or Handle after Effective Lifetime",
      "type": "Variant",
      "score": 0.38817632459176543
    },
    {
      "cwe_id": "190",
      "name": "Integer Overflow or Wraparound",
      "type": "Base",
      "score": 0.3852645795968813
    }
  ]
}