{
  "method": "sparse_base",
  "query": "CodiMD through 2.5.4 has a CSP-based protection mechanism against XSS through uploaded SVG documents containing JavaScript, but it can be bypassed in certain cases of different-origin file storage, such as AWS S3. NOTE it can be considered a user error if AWS is employed for hosting untrusted JavaScript content, but the selected architecture within AWS does not have components that are able to insert Content-Security-Policy headers.",
  "keyphrases": {
    "base_query": "CodiMD through 2.5.4 has a CSP-based protection mechanism against XSS through uploaded SVG documents containing JavaScript, but it can be bypassed in certain cases of different-origin file storage, such as AWS S3. NOTE it can be considered a user error if AWS is employed for hosting untrusted JavaScript content, but the selected architecture within AWS does not have components that are able to insert Content-Security-Policy headers."
  },
  "timestamp": "2025-07-12T14:35:12.170889",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "918",
      "name": "Server-Side Request Forgery (SSRF)",
      "score": 116.80573682528555
    },
    {
      "doc_id": "79",
      "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "score": 110.04627554177702
    },
    {
      "doc_id": "138",
      "name": "Improper Neutralization of Special Elements",
      "score": 108.91754321913393
    },
    {
      "doc_id": "116",
      "name": "Improper Encoding or Escaping of Output",
      "score": 105.48629275502509
    },
    {
      "doc_id": "434",
      "name": "Unrestricted Upload of File with Dangerous Type",
      "score": 102.40536372202403
    }
  ]
}