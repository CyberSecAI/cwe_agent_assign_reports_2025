{
  "method": "sparse_weakness_1",
  "query": "In the Linux kernel, the following vulnerability has been resolved netfilter ipset Hold module reference while requesting a module User space may unload ip_set.ko while it is itself requesting a set type backend module, leading to a kernel crash. The race condition may be provoked by inserting an mdelay() right after the nfnl_unlock() call.",
  "keyphrases": {
    "weakness": "Hold module reference while requesting a module"
  },
  "timestamp": "2025-07-13T23:52:23.380738",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 320.53043987243456
    },
    {
      "doc_id": "911",
      "name": "Improper Update of Reference Count",
      "score": 294.41532909389497
    },
    {
      "doc_id": "415",
      "name": "Double Free",
      "score": 293.11476291064315
    },
    {
      "doc_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 287.6417404553277
    },
    {
      "doc_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "score": 281.9613619617593
    }
  ]
}