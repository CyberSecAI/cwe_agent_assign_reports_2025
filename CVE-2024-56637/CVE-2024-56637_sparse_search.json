{
  "retriever": "sparse",
  "query": "In the Linux kernel, the following vulnerability has been resolved netfilter ipset Hold module reference while requesting a module User space may unload ip_set.ko while it is itself requesting a set type backend module, leading to a kernel crash. The race condition may be provoked by inserting an mdelay() right after the nfnl_unlock() call.",
  "keyphrases": {
    "rootcause": [
      "race condition"
    ],
    "weakness": [
      "Hold module reference while requesting a module"
    ]
  },
  "timestamp": "2025-07-12 06:42:30",
  "cve_id": "CVE-2024-56637",
  "result_count": 11,
  "results": [
    {
      "cwe_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 1000.0,
      "search_source": "alternate_term_match"
    },
    {
      "cwe_id": "367",
      "name": "Time-of-check Time-of-use (TOCTOU) Race Condition",
      "score": 309.29963374529365,
      "search_source": "rootcause:race condition"
    },
    {
      "cwe_id": "364",
      "name": "Signal Handler Race Condition",
      "score": 300.6071135961072,
      "search_source": "rootcause:race condition"
    },
    {
      "cwe_id": "415",
      "name": "Double Free",
      "score": 295.1640623432618,
      "search_source": "rootcause:race condition"
    },
    {
      "cwe_id": "911",
      "name": "Improper Update of Reference Count",
      "score": 294.41532909389497,
      "search_source": "weakness:Hold module reference while requesting a module"
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "score": 291.3656339495917,
      "search_source": "rootcause:race condition"
    },
    {
      "cwe_id": "770",
      "name": "Allocation of Resources Without Limits or Throttling",
      "score": 287.6417404553277,
      "search_source": "weakness:Hold module reference while requesting a module"
    },
    {
      "cwe_id": "476",
      "name": "NULL Pointer Dereference",
      "score": 277.691650495227,
      "search_source": "rootcause:race condition"
    },
    {
      "cwe_id": "822",
      "name": "Untrusted Pointer Dereference",
      "score": 267.5699534536124,
      "search_source": "weakness:Hold module reference while requesting a module"
    },
    {
      "cwe_id": "787",
      "name": "Out-of-bounds Write",
      "score": 263.78717503355716,
      "search_source": "weakness:Hold module reference while requesting a module"
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "score": 262.7416280154541,
      "search_source": "rootcause:race condition"
    }
  ]
}