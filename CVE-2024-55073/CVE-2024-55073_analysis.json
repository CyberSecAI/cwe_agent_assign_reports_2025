{
  "cve_id": "CVE-2024-55073",
  "description": "A **Broken Object Level Authorization** vulnerability in the component /api/users/{user-id} of hay-kot mealie v2.2.0 allows users to edit their own profile in order to give themselves more permissions or to change their household.",
  "key_phrases": {
    "rootcause": "Broken Object Level Authorization",
    "weakness": "",
    "impact": "edit their own profile",
    "vector": "",
    "attacker": "",
    "product": "hay-kot mealie",
    "version": "v2.2.0",
    "component": "/api/users/{user-id}"
  },
  "reference_content": "## Analysis of CVE-2024-55073 and related vulnerabilities in Mealie\n\nThe provided content details multiple broken access control vulnerabilities found in the Mealie recipe management application, specifically versions 2.0.0 and later (tested on 2.2.0).  The content provides more detail than the placeholder CVE description.\n\n**1. Root cause of vulnerability (CVE-2024-55073):**\n\nThe root cause is insufficient validation of user input when updating profile information via the API. The API call allows modification of permissions and household ID, which should be restricted to administrative actions.\n\n**2. Weaknesses/vulnerabilities present:**\n\n*   **CVE-2024-55073:** Users can modify their own profile to escalate privileges (granting themselves permissions like Invite, Manage, Organize) and change their associated household.\n*   **CVE-2024-55072:** Group managers can manipulate the API to grant themselves additional permissions.\n*   **CVE-2024-55071:** (Details not fully provided, still unpatched as of the blog post date)\n*   **CVE-2024-55070:** Users can share recipes from groups they do not belong to by manipulating the API.\n\n**3. Impact of exploitation:**\n\n*   **CVE-2024-55073:** Privilege escalation, allowing standard users to manage households, invite members, and access/modify/delete recipes and shopping lists from other households.\n*   **CVE-2024-55072:** Privilege escalation for group managers.\n*   **CVE-2024-55070:** Unauthorized access to recipes from other groups.\n\n**4. Attack vectors:**\n\n*   **CVE-2024-55073 & CVE-2024-55072:** Manipulation of API calls (specifically `PUT /api/households/permissions` and profile update API) by modifying the request parameters.\n*   **CVE-2024-55070:** Manipulation of the `POST /api/shared/recipes` API call by providing a recipe ID from a different group.\n\n**5. Required attacker capabilities/position:**\n\n*   **CVE-2024-55073:** Authenticated user with the ability to access and modify their own profile.\n*   **CVE-2024-55072:** Authenticated group manager.\n*   **CVE-2024-55070:** Authenticated user.\n*   Basic understanding of API requests and manipulation.\n\n**6. Mitigation or fix:**\n\n*   The vulnerabilities CVE-2024-55073, CVE-2024-55072 and CVE-2024-55070 have been fixed in version 2.5.0 of Mealie.\n*   CVE-2024-55071 remains unpatched as of the blog post date.\n*   Proper input validation and authorization checks on all API endpoints are necessary to prevent similar vulnerabilities. Specifically, ensuring users can only modify data they are authorized to access.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID  | CWE Name                                            | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :-------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-639   | Authorization Bypass Through User-Controlled Key  | 0.9        | Base                  | Allowed                       | Primary CWE                     |\n| CWE-266   | Incorrect Privilege Assignment                    | 0.7        | Base                  | Allowed                       | Secondary Candidate             |\n| CWE-863   | Incorrect Authorization                           | 0.6        | Class                 | Allowed-with-Review           | Secondary Candidate             |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-639 (Authorization Bypass Through User-Controlled Key), which is a base-level CWE. CWE-266 (Incorrect Privilege Assignment) is also a base-level CWE and is a peer. CWE-863 (Incorrect Authorization) is a class-level CWE and parent of CWE-942 (Permissive Cross-domain Policy with Untrusted Domains). The selection of CWE-639 is based on the ability of users to directly manipulate the API request to modify their profile and escalate privileges. CWE-266 is included as a secondary candidate to reflect the fact that incorrect privileges are ultimately being assigned to the user. The relationships show a potential path from a more general authorization issue (CWE-863) to a specific instance of bypassing authorization through user-controlled keys (CWE-639).\n\n```mermaid\ngraph TD\n    cwe639[\"CWE-639: Authorization Bypass Through User-Controlled Key\"]\n    cwe266[\"CWE-266: Incorrect Privilege Assignment\"]\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n\n    cwe639 -- PeerOf --> cwe266\n    cwe639 -->|CHILDOF| cwe863\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe639 primary\n    class cwe266,cwe863 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with a **Broken Object Level Authorization**, leading to the ability for users to edit their profile using a user-controlled key in the API request. This then results in privilege escalation and the ability to change their household, impacting the authorization model.\n  - The root cause is the **Broken Object Level Authorization**\n  - The impact is edit their own profile to give themselves more permissions or to change their household\n\n## Summary of Analysis\nThe initial assessment identified the **Broken Object Level Authorization** as the primary weakness. The evidence from the CVE reference links confirms that the root cause is the insufficient validation of user input when updating profile information via the API, allowing modification of permissions and household ID. This aligns with CWE-639 (Authorization Bypass Through User-Controlled Key), as users are manipulating the API call to achieve unauthorized access. The mapping guidance recommends using base-level CWEs when possible, and CWE-639 fits the vulnerability details.\n\nCWE-266 (Incorrect Privilege Assignment) is considered because the successful exploitation of the vulnerability results in the assignment of incorrect privileges. CWE-863 (Incorrect Authorization) is a more general authorization issue, but the specific mechanism of using a user-controlled key makes CWE-639 a better fit. The selected CWEs are at the optimal level of specificity, with CWE-639 being the most specific base-level CWE that addresses the vulnerability.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-267: Privilege Defined With Unsafe Actions\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nA particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-266: Incorrect Privilege Assignment\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nA product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-1390: Weak Authentication\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-639: Authorization Bypass Through User-Controlled Key\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-668: Exposure of Resource to Wrong Sphere\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-668 is high-level and is often misused as a catch-all when lower-level CWE IDs might be applicable. It is sometimes used for low-information vulnerability reports [REF-1287]. It is a level-1 Class (i.e., a child of a Pillar). It is not useful for trend analysis.\n\n\n\n## CWE-41: Improper Resolution of Path Equivalence\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product is vulnerable to file system contents disclosure through path equivalence. Path equivalence involves the use of special characters in file and directory names. The associated manipulations are intended to generate multiple names for the same object.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-274: Improper Handling of Insufficient Privileges\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product does not handle or incorrectly handles when it has insufficient privileges to perform an operation, leading to resultant weaknesses.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry could be deprecated in a future version of CWE.\n\n\n\n## CWE-280: Improper Handling of Insufficient Permissions or Privileges \n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product does not handle or incorrectly handles when it has insufficient privileges to access resources or functionality as specified by their permissions. This may cause it to follow unexpected code paths that may leave the product in an invalid state.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-345: Insufficient Verification of Data Authenticity\n**Abstraction Level**: Class\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-863: Incorrect Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 2",
  "analysis_with_relationships": "# Summary\n| CWE ID  | CWE Name                                            | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n| :-------- | :-------------------------------------------------- | :--------- | :-------------------- | :------------------------------ | :------------------------------ |\n| CWE-639   | Authorization Bypass Through User-Controlled Key  | 0.9        | Base                  | Allowed                       | Primary CWE                     |\n| CWE-266   | Incorrect Privilege Assignment                    | 0.7        | Base                  | Allowed                       | Secondary Candidate             |\n| CWE-863   | Incorrect Authorization                           | 0.6        | Class                 | Allowed-with-Review           | Secondary Candidate             |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** HIGH\n\n## Relationship Analysis\nThe primary CWE is CWE-639 (Authorization Bypass Through User-Controlled Key), which is a base-level CWE. CWE-266 (Incorrect Privilege Assignment) is also a base-level CWE and is a peer. CWE-863 (Incorrect Authorization) is a class-level CWE and parent of CWE-942 (Permissive Cross-domain Policy with Untrusted Domains). The selection of CWE-639 is based on the ability of users to directly manipulate the API request to modify their profile and escalate privileges. CWE-266 is included as a secondary candidate to reflect the fact that incorrect privileges are ultimately being assigned to the user. The relationships show a potential path from a more general authorization issue (CWE-863) to a specific instance of bypassing authorization through user-controlled keys (CWE-639).\n\n```mermaid\ngraph TD\n    cwe639[\"CWE-639: Authorization Bypass Through User-Controlled Key\"]\n    cwe266[\"CWE-266: Incorrect Privilege Assignment\"]\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n\n    cwe639 -- PeerOf --> cwe266\n    cwe639 -->|CHILDOF| cwe863\n    \n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe639 primary\n    class cwe266,cwe863 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with a **Broken Object Level Authorization**, leading to the ability for users to edit their profile using a user-controlled key in the API request. This then results in privilege escalation and the ability to change their household, impacting the authorization model.\n  - The root cause is the **Broken Object Level Authorization**\n  - The impact is edit their own profile to give themselves more permissions or to change their household\n\n## Summary of Analysis\nThe initial assessment identified the **Broken Object Level Authorization** as the primary weakness. The evidence from the CVE reference links confirms that the root cause is the insufficient validation of user input when updating profile information via the API, allowing modification of permissions and household ID. This aligns with CWE-639 (Authorization Bypass Through User-Controlled Key), as users are manipulating the API call to achieve unauthorized access. The mapping guidance recommends using base-level CWEs when possible, and CWE-639 fits the vulnerability details.\n\nCWE-266 (Incorrect Privilege Assignment) is considered because the successful exploitation of the vulnerability results in the assignment of incorrect privileges. CWE-863 (Incorrect Authorization) is a more general authorization issue, but the specific mechanism of using a user-controlled key makes CWE-639 a better fit. The selected CWEs are at the optimal level of specificity, with CWE-639 being the most specific base-level CWE that addresses the vulnerability.\n\nRelevant CWE Information:\n\n# Enhanced Context (25 CWEs)\nThe following CWEs were identified as potentially relevant to this vulnerability:\n\n## CWE-267: Privilege Defined With Unsafe Actions\n**Abstraction Level**: Base\n**Similarity Score**: 0.74\n**Source**: dense\n\n**Description**:\nA particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-266: Incorrect Privilege Assignment\n**Abstraction Level**: Base\n**Similarity Score**: 0.73\n**Source**: dense\n\n**Description**:\nA product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-1390: Weak Authentication\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.\n\n**Mapping Guidance**:\n- Usage: Allowed-with-Review\n- Rationale: This CWE entry is a Class and might have Base-level children that would be more appropriate\n\n\n\n## CWE-639: Authorization Bypass Through User-Controlled Key\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-668: Exposure of Resource to Wrong Sphere\n**Abstraction Level**: Class\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: CWE-668 is high-level and is often misused as a catch-all when lower-level CWE IDs might be applicable. It is sometimes used for low-information vulnerability reports [REF-1287]. It is a level-1 Class (i.e., a child of a Pillar). It is not useful for trend analysis.\n\n\n\n## CWE-41: Improper Resolution of Path Equivalence\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product is vulnerable to file system contents disclosure through path equivalence. Path equivalence involves the use of special characters in file and directory names. The associated manipulations are intended to generate multiple names for the same object.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-274: Improper Handling of Insufficient Privileges\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product does not handle or incorrectly handles when it has insufficient privileges to perform an operation, leading to resultant weaknesses.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry could be deprecated in a future version of CWE.\n\n\n\n## CWE-280: Improper Handling of Insufficient Permissions or Privileges \n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe product does not handle or incorrectly handles when it has insufficient privileges to access resources or functionality as specified by their permissions. This may cause it to follow unexpected code paths that may leave the product in an invalid state.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-472: External Control of Assumed-Immutable Web Parameter\n**Abstraction Level**: Base\n**Similarity Score**: 0.72\n**Source**: dense\n\n**Description**:\nThe web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\n\n**Mapping Guidance**:\n- Usage: Allowed\n- Rationale: This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.\n\n\n\n## CWE-345: Insufficient Verification of Data Authenticity\n**Abstraction Level**: Class\n**Similarity Score**: 0.71\n**Source**: dense\n\n**Description**:\nThe product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.\n\n**Mapping Guidance**:\n- Usage: Discouraged\n- Rationale: This CWE entry is a level-1 Class (i.e., a child of a Pillar). It might have lower-level children that would be more appropriate\n\n\n\n## CWE-863: Incorrect Authorization\n**Abstraction Level**: Class\n**Similarity Score**: 2\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-1390:**\n- 1390 (Weak Authentication) - ROOT\n\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "639",
        "name": "Authorization Bypass Through User-Controlled Key",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Broken Object Level Authorization / BOLA",
        "match_reason": "exact_match_whole_phrase"
      },
      "similarity": 1000.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "284",
        "name": "Improper Access Control",
        "source": "alternate_terms",
        "original_matched_text": "AlternateTerms: Authorization",
        "match_reason": "term_in_phrase_whole_phrase"
      },
      "similarity": 800.0,
      "alternate_term_match": true
    },
    {
      "metadata": {
        "doc_id": "267",
        "name": "Privilege Defined With Unsafe Actions",
        "source": "sparse"
      },
      "similarity": 238.01968715277036
    },
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 228.06440127414947
    },
    {
      "metadata": {
        "doc_id": "285",
        "name": "Improper Authorization",
        "source": "sparse"
      },
      "similarity": 224.83113083030366
    },
    {
      "metadata": {
        "doc_id": "269",
        "name": "Improper Privilege Management",
        "source": "sparse"
      },
      "similarity": 208.87813737678346
    },
    {
      "metadata": {
        "doc_id": "862",
        "name": "Missing Authorization",
        "source": "sparse"
      },
      "similarity": 204.47422126109402
    },
    {
      "metadata": {
        "doc_id": "327",
        "name": "Use of a Broken or Risky Cryptographic Algorithm",
        "source": "sparse"
      },
      "similarity": 197.10444754065514
    },
    {
      "metadata": {
        "doc_id": "286",
        "name": "Incorrect User Management",
        "type": "Class",
        "original_content": "The product does not properly manage a user within its environment.",
        "keyphrase_source": "rootcause:Broken Object Level Authorization",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed-with-Review",
          "rationale": "This CWE entry is a Class and might have Base-level children that would be more appropriate",
          "comments": "Examine children of this entry to see if there is a better fit",
          "reasons": [
            "Abstraction"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.4918182698045137,
            "graph": 1.0635099278047284
          }
        }
      },
      "similarity": 0.4918182698045137
    },
    {
      "doc_id": "321",
      "text": "CWE-321: Use of Hard-coded Cryptographic Key",
      "score": 1.6320000000000003,
      "metadata": {
        "doc_id": "321",
        "name": "Use of Hard-coded Cryptographic Key",
        "type": "variant",
        "original_content": "CWE-321: Use of Hard-coded Cryptographic Key",
        "relationships": [
          {
            "source_id": "321",
            "target_id": "656",
            "label": "CANFOLLOW",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "321",
            "target_id": "798",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1340"
            }
          },
          {
            "source_id": "321",
            "target_id": "798",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1305"
            }
          },
          {
            "source_id": "321",
            "target_id": "798",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "798",
            "target_id": "321",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "656",
            "target_id": "321",
            "label": "CANPRECEDE",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "259",
            "target_id": "321",
            "label": "PEEROF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "1291",
            "target_id": "321",
            "label": "PEEROF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 0.8,
          "sequence_path": 0.8
        },
        "abstraction_factor": 1.2,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "vulnerability_sequence_forward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "472",
                  "656",
                  "CANFOLLOW"
                ],
                [
                  "656",
                  "321",
                  "CANPRECEDE"
                ]
              ],
              "score": 0.8,
              "type": "relationship_chain",
              "source": "472"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "472",
                  "656",
                  "CANFOLLOW"
                ],
                [
                  "656",
                  "321",
                  "CANPRECEDE"
                ]
              ],
              "score": 0.8,
              "type": "vulnerability_sequence_forward",
              "source": "472"
            }
          }
        },
        "position": "after",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 1.6320000000000003
          }
        }
      },
      "similarity": 1.6320000000000003
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-1390",
      "CWE-863",
      "CWE-274",
      "CWE-280",
      "CWE-345",
      "CWE-639",
      "CWE-472",
      "CWE-942",
      "CWE-668",
      "CWE-267",
      "CWE-266",
      "CWE-41"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}