{
  "retriever": "dense",
  "query": "In the Linux kernel, the following vulnerability has been resolved device-dax correct pgoff align in dax_set_mapping() pgoff should be aligned using ALIGN_DOWN() instead of ALIGN(). Otherwise, vmf->address not aligned to fault_size will be aligned to the next alignment, that can result in memory failure getting the wrong address. Its a subtle situation that only can be observed in page_mapped_in_vma() after the page is page fault handled by dev_dax_huge_fault. Generally, there is little chance to perform page_mapped_in_vma in dev-daxs page unless in specific error injection to the dax device to trigger an MCE - memory-failure. In that case, page_mapped_in_vma() will be triggered to determine which task is accessing the failure address and kill that task in the end. We used self-developed dax device (which is 2M aligned mapping) , to perform error injection to random address. It turned out that error injected to non-2M-aligned address was causing endless MCE until panic. Because page_mapped_in_vma() kept resulting wrong address and the task accessing the failure address was never killed properly [ 3783.719419] Memory failure 0x200c9742 recovery action for dax page Recovered [ 3784.049006] mce Uncorrected hardware memory error in user-access at 200c9742380 [ 3784.049190] Memory failure 0x200c9742 recovery action for dax page Recovered [ 3784.448042] mce Uncorrected hardware memory error in user-access at 200c9742380 [ 3784.448186] Memory failure 0x2",
  "keyphrases": {
    "weakness": [
      "wrong alignment in dax_set_mapping()"
    ]
  },
  "timestamp": "2025-07-13 19:45:52",
  "cve_id": "CVE-2024-50022",
  "result_count": 20,
  "results": [
    {
      "cwe_id": "1190",
      "name": "DMA Device Enabled Too Early in Boot Phase",
      "type": "Base",
      "score": 0.5414551101220869
    },
    {
      "cwe_id": "1260",
      "name": "Improper Handling of Overlap Between Protected Memory Ranges",
      "type": "Base",
      "score": 0.5336736232413968
    },
    {
      "cwe_id": "1285",
      "name": "Improper Validation of Specified Index, Position, or Offset in Input",
      "type": "Base",
      "score": 0.5308779312385152
    },
    {
      "cwe_id": "805",
      "name": "Buffer Access with Incorrect Length Value",
      "type": "Base",
      "score": 0.5260348280130234
    },
    {
      "cwe_id": "1257",
      "name": "Improper Access Control Applied to Mirrored or Aliased Memory Regions",
      "type": "Base",
      "score": 0.5170952378945828
    },
    {
      "cwe_id": "1316",
      "name": "Fabric-Address Map Allows Programming of Unwarranted Overlaps of Protected and Unprotected Ranges",
      "type": "Base",
      "score": 0.5155141995643222
    },
    {
      "cwe_id": "909",
      "name": "Missing Initialization of Resource",
      "type": "Class",
      "score": 0.5123030846145409
    },
    {
      "cwe_id": "789",
      "name": "Memory Allocation with Excessive Size Value",
      "type": "Variant",
      "score": 0.5069395616642454
    },
    {
      "cwe_id": "1332",
      "name": "Improper Handling of Faults that Lead to Instruction Skips",
      "type": "Base",
      "score": 0.506432328784821
    },
    {
      "cwe_id": "119",
      "name": "Improper Restriction of Operations within the Bounds of a Memory Buffer",
      "type": "Class",
      "score": 0.5048768828391877
    },
    {
      "cwe_id": "1342",
      "name": "Information Exposure through Microarchitectural State after Transient Execution",
      "type": "Base",
      "score": 0.49641145922053737
    },
    {
      "cwe_id": "787",
      "name": "Out-of-bounds Write",
      "type": "Base",
      "score": 0.49324481106261686
    },
    {
      "cwe_id": "1274",
      "name": "Improper Access Control for Volatile Memory Containing Boot Code",
      "type": "Base",
      "score": 0.4923123697685399
    },
    {
      "cwe_id": "401",
      "name": "Missing Release of Memory after Effective Lifetime",
      "type": "Variant",
      "score": 0.4907912033659537
    },
    {
      "cwe_id": "1421",
      "name": "Exposure of Sensitive Information in Shared Microarchitectural Structures during Transient Execution",
      "type": "Base",
      "score": 0.487865602855708
    },
    {
      "cwe_id": "762",
      "name": "Mismatched Memory Management Routines",
      "type": "Variant",
      "score": 0.4873051985025675
    },
    {
      "cwe_id": "1264",
      "name": "Hardware Logic with Insecure De-Synchronization between Control and Data Channels",
      "type": "Base",
      "score": 0.48703256556661295
    },
    {
      "cwe_id": "823",
      "name": "Use of Out-of-range Pointer Offset",
      "type": "Base",
      "score": 0.48664112607801646
    },
    {
      "cwe_id": "667",
      "name": "Improper Locking",
      "type": "Class",
      "score": 0.4865189358942634
    },
    {
      "cwe_id": "413",
      "name": "Improper Resource Locking",
      "type": "Base",
      "score": 0.48223338300751506
    }
  ]
}