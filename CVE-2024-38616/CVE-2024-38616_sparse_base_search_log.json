{
  "method": "sparse_base",
  "query": "In the Linux kernel, the following vulnerability has been resolved wifi carl9170 re-fix fortified-memset warning The carl9170_tx_release() function sometimes triggers a fortified-memset warning in my randconfig builds In file included from include/linux/string.h254, from drivers/net/wireless/ath/carl9170/tx.c40 In function fortify_memset_chk, inlined from carl9170_tx_release at drivers/net/wireless/ath/carl9170/tx.c2832, inlined from kref_put at include/linux/kref.h653, inlined from carl9170_tx_put_skb at drivers/net/wireless/ath/carl9170/tx.c3429 include/linux/fortify-string.h49325 error call to __write_overflow_field declared with attribute warning detected write beyond size of field (1st parameter) maybe use struct_group()? [-Werror=attribute-warning] 493 | __write_overflow_field(p_size_field, size) Kees previously tried to avoid this by using memset_after(), but it seems this does not fully address the problem. I noticed that the memset_after() here is done on a different part of the union (status) than the original cast was from (rate_driver_data), which may confuse the compiler. Unfortunately, the memset_after() trick does not work on driver_rates[] because that is part of an anonymous struct, and I could not get struct_group() to do this either. Using two separate memset() calls on the two members does address the warning though.",
  "keyphrases": {
    "base_query": "In the Linux kernel, the following vulnerability has been resolved wifi carl9170 re-fix fortified-memset warning The carl9170_tx_release() function sometimes triggers a fortified-memset warning in my randconfig builds In file included from include/linux/string.h254, from drivers/net/wireless/ath/carl9170/tx.c40 In function fortify_memset_chk, inlined from carl9170_tx_release at drivers/net/wireless/ath/carl9170/tx.c2832, inlined from kref_put at include/linux/kref.h653, inlined from carl9170_tx_put_skb at drivers/net/wireless/ath/carl9170/tx.c3429 include/linux/fortify-string.h49325 error call to __write_overflow_field declared with attribute warning detected write beyond size of field (1st parameter) maybe use struct_group()? [-Werror=attribute-warning] 493 | __write_overflow_field(p_size_field, size) Kees previously tried to avoid this by using memset_after(), but it seems this does not fully address the problem. I noticed that the memset_after() here is done on a different part of the union (status) than the original cast was from (rate_driver_data), which may confuse the compiler. Unfortunately, the memset_after() trick does not work on driver_rates[] because that is part of an anonymous struct, and I could not get struct_group() to do this either. Using two separate memset() calls on the two members does address the warning though."
  },
  "timestamp": "2025-07-12T02:41:48.550246",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "457",
      "name": "Use of Uninitialized Variable",
      "score": 243.80092528198867
    },
    {
      "doc_id": "1284",
      "name": "Improper Validation of Specified Quantity in Input",
      "score": 239.19266013949016
    },
    {
      "doc_id": "226",
      "name": "Sensitive Information in Resource Not Removed Before Reuse",
      "score": 233.27484965031476
    },
    {
      "doc_id": "863",
      "name": "Incorrect Authorization",
      "score": 231.3760042508187
    },
    {
      "doc_id": "909",
      "name": "Missing Initialization of Resource",
      "score": 231.14562115433992
    }
  ]
}