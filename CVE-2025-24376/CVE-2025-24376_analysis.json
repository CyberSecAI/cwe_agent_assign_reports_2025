{
  "cve_id": "CVE-2025-24376",
  "description": "kubewarden-controller is a Kubernetes controller that allows you to dynamically register Kubewarden admission policies. By design, AdmissionPolicy and AdmissionPolicyGroup can evaluate only namespaced resources. The resources to be evaluated are determined by the rules provided by the user when defining the policy. There might be Kubernetes namespaced resources that should not be validated by AdmissionPolicy and by the AdmissionPolicyGroup policies because of their sensitive nature. For example, PolicyReport are namespaced resources that contain the list of non compliant objects found inside of a namespace. An attacker can use either an AdmissionPolicy or an AdmissionPolicyGroup to prevent the creation and update of PolicyReport objects to hide non-compliant resources. Moreover, the same attacker might use a mutating AdmissionPolicy to alter the contents of the PolicyReport created inside of the namespace. Starting from the 1.21.0 release, the validation rules applied to AdmissionPolicy and AdmissionPolicyGroup have been tightened to prevent them from validating sensitive types of namespaced resources.",
  "key_phrases": {
    "component": "AdmissionPolicy and AdmissionPolicyGroup",
    "rootcause": "",
    "vector": "",
    "weakness": "",
    "product": "Kubewarden Admission Policies",
    "impact": "prevent PolicyReport object creation and update, alter the contents of PolicyReport",
    "attacker": "attacker",
    "version": ""
  },
  "reference_content": "## Analysis of CVE-2025-24376 based on provided content\n\nThe provided content is directly related to CVE-2025-24376 and provides more detail than the placeholder CVE description. Here's a breakdown of the vulnerability information:\n\n**Root cause of vulnerability:**\n\nAdmissionPolicy and AdmissionPolicyGroup policies, by design, can evaluate namespaced resources based on user-defined rules. This allows potentially targeting sensitive resources like PolicyReport.\n\n**Weaknesses/vulnerabilities present:**\n\n*   An attacker can prevent the creation/update of PolicyReport objects, hiding non-compliant resources.\n*   An attacker can alter the contents of PolicyReport objects.\n*   The use of wildcards in `apiGroups` and `resources` rules for AdmissionPolicy and AdmissionPolicyGroup objects.\n\n**Impact of exploitation:**\n\n*   Hiding of non-compliant resources.\n*   Manipulation of audit data (PolicyReports).\n*   Reduced visibility into the security posture of the cluster.\n\n**Attack vectors:**\n\n*   Creation or modification of AdmissionPolicy or AdmissionPolicyGroup resources.\n\n**Required attacker capabilities/position:**\n\n*   An attacker needs the ability to create or modify AdmissionPolicy or AdmissionPolicyGroup resources within the Kubernetes cluster. No specific privileges are explicitly mentioned, implying a relatively low barrier to entry.\n\n**Mitigation or fix:**\n\n*   **Patch:** Upgrade to kubewarden-controller version 1.21.0 or later.\n*   **Workaround:** Apply the provided ClusterAdmissionPolicy to prevent the creation of AdmissionPolicy and AdmissionPolicyGroup resources that interact with PolicyReport resources (for versions < 1.21.0).\n\n**Additional details:**\n\n*   **CVSS Score:** 6.5 (Moderate)\n*   **CVSS Vector:** CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:L\n*   **Affected versions:** >= 1.7.0\n*   **Patched versions:** 1.21.0\n*   **No CWEs** are listed.",
  "similar_info": {
    "cwe_distribution": {},
    "cwe_consensus": "",
    "similarity_stats": {
      "thresholds": [],
      "total_samples_by_threshold": {},
      "top_cwes_by_threshold": {}
    }
  },
  "similarity_summary": {
    "consensus_cwe": "",
    "top_cwes": [],
    "confidence_levels": {},
    "total_samples": 0
  },
  "analysis": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-863 | Incorrect Authorization | 0.9 | Class | Primary CWE | Allowed-with-Review |\n| CWE-668 | Exposure of Resource to Wrong Sphere | 0.7 | Class | Secondary Candidate | Discouraged |\n| CWE-306 | Missing Authentication for Critical Function | 0.6 | Base | Secondary Candidate | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary CWE is CWE-863 (**CWE-863: Incorrect Authorization**), which is a class-level CWE. While it is generally better to choose a base-level CWE, in this case, the description does not offer sufficient detail to determine the precise authorization failure mechanism. Therefore, the class level is appropriate. CWE-668 (**CWE-668: Exposure of Resource to Wrong Sphere**) is considered as a potential secondary CWE because the attacker gains access to the PolicyReport resource which they should not have. CWE-306 (**CWE-306: Missing Authentication for Critical Function**) might be relevant if the creation or modification of the AdmissionPolicy and AdmissionPolicyGroup resources lack proper authentication, but this is not explicitly stated in the provided information.\n\n```mermaid\ngraph TD\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe668[\"CWE-668: Exposure of Resource to Wrong Sphere\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    \n    cwe942[\"CWE-942: Permissive Cross-domain Policy with Untrusted Domains\"]\n    cwe1268[\"CWE-1268: Policy Privileges are not Assigned Consistently Between Control and Data Agents\"]\n\n    cwe942 -->|CHILDOF| cwe863\n    cwe1268 -->|CHILDOF| cwe863\n    cwe306 -->|CHILDOF| cwe863\n\n    cwe499[\"CWE-499: Serializable Class Containing Sensitive Data\"]\n    cwe498[\"CWE-498: Cloneable Class Containing Sensitive Information\"]\n    cwe499 -->|CHILDOF| cwe668\n    cwe498 -->|CHILDOF| cwe668\n    \n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe863 primary\n    class cwe668,cwe306 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with an **incorrect authorization** mechanism (CWE-863) in the kubewarden-controller that allows an attacker to create or modify AdmissionPolicy and AdmissionPolicyGroup resources. This leads to the attacker gaining the ability to **prevent PolicyReport object creation and update** or to **alter the contents of the PolicyReport**. This results in hiding non-compliant resources and manipulating audit data. The chain can be visualized as:\n\nIncorrect Authorization (CWE-863) -> Prevent PolicyReport creation/update OR Alter PolicyReport Contents -> Hiding of non-compliant resources/Manipulation of audit data.\n\n## Summary of Analysis\nThe vulnerability allows an attacker to **prevent the creation and update of PolicyReport objects to hide non-compliant resources** or **alter the contents of the PolicyReport created inside of the namespace**. The root cause is due to the **validation rules** applied to AdmissionPolicy and AdmissionPolicyGroup.\n\nThe primary CWE selected is CWE-863 (**CWE-863: Incorrect Authorization**). The retriever results listed this as the top candidate, and it aligns well with the provided description. The vulnerability involves an authorization issue, where an attacker is able to manipulate resources (PolicyReports) that they should not have access to. The description states \"Starting from the 1.21.0 release, the validation rules applied to AdmissionPolicy and AdmissionPolicyGroup have been tightened to prevent them from validating sensitive types of namespaced resources.\" This indicates that the original rules were **incorrect**, leading to the authorization bypass.\n\nCWE-668 (**CWE-668: Exposure of Resource to Wrong Sphere**) is a potential secondary CWE since the attacker is able to access PolicyReport which they should not have access to. However, CWE-668 is discouraged, and it is better to be more specific. The main issue is the incorrect authorization (CWE-863) that leads to the exposure.\n\nCWE-306 (**CWE-306: Missing Authentication for Critical Function**) was considered because the vulnerability description does not explicitly mention whether authentication is performed when creating or modifying AdmissionPolicy and AdmissionPolicyGroup resources. If there is no authentication, it contributes to the ability to bypass authorization. However, due to insufficient evidence, it is a lower-confidence secondary candidate.",
  "analysis_with_relationships": "# Summary\n| CWE ID | CWE Name | Confidence | CWE Abstraction Level | CWE Vulnerability Mapping Label | CWE-Vulnerability Mapping Notes |\n|---|---|---|---|---|---|\n| CWE-863 | Incorrect Authorization | 0.9 | Class | Primary CWE | Allowed-with-Review |\n| CWE-668 | Exposure of Resource to Wrong Sphere | 0.7 | Class | Secondary Candidate | Discouraged |\n| CWE-306 | Missing Authentication for Critical Function | 0.6 | Base | Secondary Candidate | Allowed |\n\n## Evidence and Confidence\n\n*   **Confidence Score:** 0.8\n*   **Evidence Strength:** MEDIUM\n\n## Relationship Analysis\nThe primary CWE is CWE-863 (**CWE-863: Incorrect Authorization**), which is a class-level CWE. While it is generally better to choose a base-level CWE, in this case, the description does not offer sufficient detail to determine the precise authorization failure mechanism. Therefore, the class level is appropriate. CWE-668 (**CWE-668: Exposure of Resource to Wrong Sphere**) is considered as a potential secondary CWE because the attacker gains access to the PolicyReport resource which they should not have. CWE-306 (**CWE-306: Missing Authentication for Critical Function**) might be relevant if the creation or modification of the AdmissionPolicy and AdmissionPolicyGroup resources lack proper authentication, but this is not explicitly stated in the provided information.\n\n```mermaid\ngraph TD\n    cwe863[\"CWE-863: Incorrect Authorization\"]\n    cwe668[\"CWE-668: Exposure of Resource to Wrong Sphere\"]\n    cwe306[\"CWE-306: Missing Authentication for Critical Function\"]\n    \n    cwe942[\"CWE-942: Permissive Cross-domain Policy with Untrusted Domains\"]\n    cwe1268[\"CWE-1268: Policy Privileges are not Assigned Consistently Between Control and Data Agents\"]\n\n    cwe942 -->|CHILDOF| cwe863\n    cwe1268 -->|CHILDOF| cwe863\n    cwe306 -->|CHILDOF| cwe863\n\n    cwe499[\"CWE-499: Serializable Class Containing Sensitive Data\"]\n    cwe498[\"CWE-498: Cloneable Class Containing Sensitive Information\"]\n    cwe499 -->|CHILDOF| cwe668\n    cwe498 -->|CHILDOF| cwe668\n    \n\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n    class cwe863 primary\n    class cwe668,cwe306 secondary\n```\n\n## Vulnerability Chain\nThe vulnerability chain starts with an **incorrect authorization** mechanism (CWE-863) in the kubewarden-controller that allows an attacker to create or modify AdmissionPolicy and AdmissionPolicyGroup resources. This leads to the attacker gaining the ability to **prevent PolicyReport object creation and update** or to **alter the contents of the PolicyReport**. This results in hiding non-compliant resources and manipulating audit data. The chain can be visualized as:\n\nIncorrect Authorization (CWE-863) -> Prevent PolicyReport creation/update OR Alter PolicyReport Contents -> Hiding of non-compliant resources/Manipulation of audit data.\n\n## Summary of Analysis\nThe vulnerability allows an attacker to **prevent the creation and update of PolicyReport objects to hide non-compliant resources** or **alter the contents of the PolicyReport created inside of the namespace**. The root cause is due to the **validation rules** applied to AdmissionPolicy and AdmissionPolicyGroup.\n\nThe primary CWE selected is CWE-863 (**CWE-863: Incorrect Authorization**). The retriever results listed this as the top candidate, and it aligns well with the provided description. The vulnerability involves an authorization issue, where an attacker is able to manipulate resources (PolicyReports) that they should not have access to. The description states \"Starting from the 1.21.0 release, the validation rules applied to AdmissionPolicy and AdmissionPolicyGroup have been tightened to prevent them from validating sensitive types of namespaced resources.\" This indicates that the original rules were **incorrect**, leading to the authorization bypass.\n\nCWE-668 (**CWE-668: Exposure of Resource to Wrong Sphere**) is a potential secondary CWE since the attacker is able to access PolicyReport which they should not have access to. However, CWE-668 is discouraged, and it is better to be more specific. The main issue is the incorrect authorization (CWE-863) that leads to the exposure.\n\nCWE-306 (**CWE-306: Missing Authentication for Critical Function**) was considered because the vulnerability description does not explicitly mention whether authentication is performed when creating or modifying AdmissionPolicy and AdmissionPolicyGroup resources. If there is no authentication, it contributes to the ability to bypass authorization. However, due to insufficient evidence, it is a lower-confidence secondary candidate.\n\n\n## CWE Relationship Analysis\n\nCurrent CWEs represent these abstraction levels: .\n\n\n### Vulnerability Chain Analysis\n\n**Chain starting from CWE-863:**\n- 863 (Incorrect Authorization) - ROOT\n\n\n**Chain starting from CWE-499:**\n- 499 (Serializable Class Containing Sensitive Data) - ROOT\n\n\n\n### CWE Relationship Diagram\n\n```mermaid\ngraph TD\n    classDef primary fill:#f96,stroke:#333,stroke-width:2px\n    classDef secondary fill:#69f,stroke:#333\n    classDef tertiary fill:#9e9,stroke:#333\n```",
  "criticism": "",
  "resolution": "",
  "relevant_cwes": [
    {
      "metadata": {
        "doc_id": "863",
        "name": "Incorrect Authorization",
        "source": "sparse"
      },
      "similarity": 289.04942708930673
    },
    {
      "metadata": {
        "doc_id": "668",
        "name": "Exposure of Resource to Wrong Sphere",
        "source": "sparse"
      },
      "similarity": 275.9149877266637
    },
    {
      "metadata": {
        "doc_id": "923",
        "name": "Improper Restriction of Communication Channel to Intended Endpoints",
        "source": "sparse"
      },
      "similarity": 275.7674036717646
    },
    {
      "metadata": {
        "doc_id": "201",
        "name": "Insertion of Sensitive Information Into Sent Data",
        "source": "sparse"
      },
      "similarity": 271.1133822152663
    },
    {
      "metadata": {
        "doc_id": "1333",
        "name": "Inefficient Regular Expression Complexity",
        "source": "sparse"
      },
      "similarity": 264.30992046186844
    },
    {
      "metadata": {
        "doc_id": "400",
        "name": "Uncontrolled Resource Consumption",
        "source": "sparse"
      },
      "similarity": 263.97574594813403
    },
    {
      "metadata": {
        "doc_id": "732",
        "name": "Incorrect Permission Assignment for Critical Resource",
        "source": "sparse"
      },
      "similarity": 262.94711045287625
    },
    {
      "metadata": {
        "doc_id": "200",
        "name": "Exposure of Sensitive Information to an Unauthorized Actor",
        "source": "sparse"
      },
      "similarity": 262.7573267768766
    },
    {
      "metadata": {
        "doc_id": "1268",
        "name": "Policy Privileges are not Assigned Consistently Between Control and Data Agents",
        "type": "Base",
        "original_content": "The product's hardware-enforced access control for a particular resource improperly accounts for privilege discrepancies between control and write policies.\n\t\t\t   ",
        "source": "dense",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "dense",
            "graph"
          ],
          "retriever_count": 2,
          "normalized_scores": {
            "dense": 0.4313937369463844,
            "graph": 1.6326717816319107
          }
        }
      },
      "similarity": 0.4313937369463844
    },
    {
      "doc_id": "212",
      "text": "CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer",
      "score": 2.73416,
      "metadata": {
        "doc_id": "212",
        "name": "Improper Removal of Sensitive Information Before Storage or Transfer",
        "type": "base",
        "original_content": "CWE-212: Improper Removal of Sensitive Information Before Storage or Transfer",
        "relationships": [
          {
            "source_id": "212",
            "target_id": "226",
            "label": "PARENTOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "212",
            "target_id": "1258",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "212",
            "target_id": "201",
            "label": "CANPRECEDE",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "212",
            "target_id": "669",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1003"
            }
          },
          {
            "source_id": "212",
            "target_id": "669",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "669",
            "target_id": "212",
            "label": "PARENTOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "226",
            "target_id": "212",
            "label": "CHILDOF",
            "properties": {
              "view_id": "1000"
            }
          },
          {
            "source_id": "201",
            "target_id": "212",
            "label": "CANFOLLOW",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          },
          {
            "source_id": "1258",
            "target_id": "212",
            "label": "CHILDOF",
            "properties": {
              "ordinal": "Primary",
              "view_id": "1000"
            }
          }
        ],
        "score_components": {
          "relationship_chain": 1.0,
          "abstraction_path": 0.5760000000000002,
          "sequence_path": 1.0
        },
        "abstraction_factor": 1.3,
        "graph_path_info": {
          "path_types": [
            "relationship_chain",
            "abstraction_path_down",
            "vulnerability_sequence_forward",
            "vulnerability_sequence_backward"
          ],
          "best_paths": {
            "relationship_chain": {
              "path": [
                [
                  "201",
                  "212",
                  "CANFOLLOW"
                ]
              ],
              "score": 1.0,
              "type": "relationship_chain",
              "source": "201"
            },
            "abstraction_path_down": {
              "path": [
                [
                  "664",
                  "669",
                  "PARENTOF"
                ],
                [
                  "669",
                  "212",
                  "PARENTOF"
                ]
              ],
              "score": 0.5760000000000002,
              "type": "abstraction_path_down",
              "source": "664"
            },
            "vulnerability_sequence_forward": {
              "path": [
                [
                  "201",
                  "212",
                  "CANFOLLOW"
                ]
              ],
              "score": 0.9,
              "type": "vulnerability_sequence_forward",
              "source": "201"
            },
            "vulnerability_sequence_backward": {
              "path": [
                [
                  "212",
                  "201",
                  "CANPRECEDE"
                ]
              ],
              "score": 1.0,
              "type": "vulnerability_sequence_backward",
              "source": "201"
            }
          }
        },
        "abstraction_level": "base",
        "position": "before",
        "sources": [
          "graph"
        ],
        "source": "graph",
        "mapping_notes": {
          "usage": "Allowed",
          "rationale": "This CWE entry is at the Base level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
          "comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
          "reasons": [
            "Acceptable-Use"
          ]
        },
        "score_info": {
          "retrievers": [
            "graph"
          ],
          "retriever_count": 1,
          "normalized_scores": {
            "graph": 2.73416
          }
        }
      },
      "similarity": 2.73416
    }
  ],
  "identified_cwes": {
    "analyzer": [
      "CWE-863",
      "CWE-499",
      "CWE-306",
      "CWE-1268",
      "CWE-498",
      "CWE-668",
      "CWE-942"
    ],
    "critic_additional": []
  },
  "keyphrase_cwe_mapping": {}
}