{
  "method": "sparse_base",
  "query": "In the Linux kernel, the following vulnerability has been resolved io_uring fix possible deadlock in io_register_iowq_max_workers() The io_register_iowq_max_workers() function calls io_put_sq_data(), which acquires the sqd->lock without releasing the uring_lock. Similar to the commit 009ad9f0c6ee (io_uring drop ctx->uring_lock before acquiring sqd->lock), this can lead to a potential deadlock situation. To resolve this issue, the uring_lock is released before calling io_put_sq_data(), and then it is re-acquired after the function call. This change ensures that the locks are acquired in the correct order, preventing the possibility of a deadlock.",
  "keyphrases": {
    "base_query": "In the Linux kernel, the following vulnerability has been resolved io_uring fix possible deadlock in io_register_iowq_max_workers() The io_register_iowq_max_workers() function calls io_put_sq_data(), which acquires the sqd->lock without releasing the uring_lock. Similar to the commit 009ad9f0c6ee (io_uring drop ctx->uring_lock before acquiring sqd->lock), this can lead to a potential deadlock situation. To resolve this issue, the uring_lock is released before calling io_put_sq_data(), and then it is re-acquired after the function call. This change ensures that the locks are acquired in the correct order, preventing the possibility of a deadlock."
  },
  "timestamp": "2025-07-12T03:22:52.519660",
  "results_count": 10,
  "results_summary": [
    {
      "doc_id": "667",
      "name": "Improper Locking",
      "score": 187.76814000083235
    },
    {
      "doc_id": "833",
      "name": "Deadlock",
      "score": 179.37153216760203
    },
    {
      "doc_id": "362",
      "name": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')",
      "score": 156.58252575157144
    },
    {
      "doc_id": "663",
      "name": "Use of a Non-reentrant Function in a Concurrent Context",
      "score": 145.2273454224686
    },
    {
      "doc_id": "122",
      "name": "Heap-based Buffer Overflow",
      "score": 139.40973049627456
    }
  ]
}